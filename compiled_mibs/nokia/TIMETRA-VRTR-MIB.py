# SNMP MIB module (TIMETRA-VRTR-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\nokia\TIMETRA-VRTR-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 12:14:12 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(InterfaceIndex,
 InterfaceIndexOrZero) = mibBuilder.importSymbols(
    "IF-MIB",
    "InterfaceIndex",
    "InterfaceIndexOrZero")

(InetAddress,
 InetAddressIPv4,
 InetAddressIPv6,
 InetAddressIPv6z,
 InetAddressPrefixLength,
 InetAddressType,
 InetAutonomousSystemNumber) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressIPv4",
    "InetAddressIPv6",
    "InetAddressIPv6z",
    "InetAddressPrefixLength",
    "InetAddressType",
    "InetAutonomousSystemNumber")

(inetCidrRouteDest,
 inetCidrRouteDestType,
 inetCidrRouteEntry,
 inetCidrRouteNextHop,
 inetCidrRouteNextHopType,
 inetCidrRoutePfxLen,
 inetCidrRoutePolicy,
 inetCidrRouteProto,
 ipCidrRouteEntry) = mibBuilder.importSymbols(
    "IP-FORWARD-MIB",
    "inetCidrRouteDest",
    "inetCidrRouteDestType",
    "inetCidrRouteEntry",
    "inetCidrRouteNextHop",
    "inetCidrRouteNextHopType",
    "inetCidrRoutePfxLen",
    "inetCidrRoutePolicy",
    "inetCidrRouteProto",
    "ipCidrRouteEntry")

(ipNetToMediaEntry,
 ipNetToPhysicalEntry,
 ipv6RouterAdvertEntry) = mibBuilder.importSymbols(
    "IP-MIB",
    "ipNetToMediaEntry",
    "ipNetToPhysicalEntry",
    "ipv6RouterAdvertEntry")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention,
 TestAndIncr,
 TimeInterval,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention",
    "TestAndIncr",
    "TimeInterval",
    "TimeStamp",
    "TruthValue")

(TmnxSlotNum,
 tmnxCardSlotNum,
 tmnxChassisIndex,
 tmnxFPNum) = mibBuilder.importSymbols(
    "TIMETRA-CHASSIS-MIB",
    "TmnxSlotNum",
    "tmnxCardSlotNum",
    "tmnxChassisIndex",
    "tmnxFPNum")

(TDHCPFilterID,
 TFilterID,
 TIPvXFilterType) = mibBuilder.importSymbols(
    "TIMETRA-FILTER-MIB",
    "TDHCPFilterID",
    "TFilterID",
    "TIPvXFilterType")

(timetraSRMIBModules,
 tmnxSRConfs,
 tmnxSRNotifyPrefix,
 tmnxSRObjs) = mibBuilder.importSymbols(
    "TIMETRA-GLOBAL-MIB",
    "timetraSRMIBModules",
    "tmnxSRConfs",
    "tmnxSRNotifyPrefix",
    "tmnxSRObjs")

(tmnxPortNotifyPortId,
 tmnxPortType) = mibBuilder.importSymbols(
    "TIMETRA-PORT-MIB",
    "tmnxPortNotifyPortId",
    "tmnxPortType")

(sapEncapValue,
 sapPortId) = mibBuilder.importSymbols(
    "TIMETRA-SAP-MIB",
    "sapEncapValue",
    "sapPortId")

(svcDhcpClientLease,
 svcDhcpLseStateNewChAddr,
 svcDhcpLseStateNewCiAddr) = mibBuilder.importSymbols(
    "TIMETRA-SERV-MIB",
    "svcDhcpClientLease",
    "svcDhcpLseStateNewChAddr",
    "svcDhcpLseStateNewCiAddr")

(ClassIndex,
 ClassIndexOrNone,
 DateAndTimeOrEmpty,
 Dot1PPriority,
 IpAddressPrefixLength,
 SdpBindId,
 TCIRRate,
 TCpmProtPolicyID,
 TDSCPValue,
 TDSCPValueOrNone,
 TFCNameOrEmpty,
 TFCType,
 TItemDescription,
 TItemLongDescription,
 TLNamedItemOrEmpty,
 TLPolicyNameOrExpOrEmpty,
 TNamedItem,
 TNamedItemOrEmpty,
 TNetworkPolicyID,
 TPIRRate,
 TPlcrBurstSizeBytes,
 TPlcyAcctPolicerId,
 TPolicyStatementNameOrEmpty,
 TPriorityOrUndefined,
 TQosQGrpInstanceIDorZero,
 TResolveStatus,
 TXLPolicyNameOrExpOrEmpty,
 TmnxAddressAndPrefixAddress,
 TmnxAddressAndPrefixPrefix,
 TmnxAddressAndPrefixType,
 TmnxAdminState,
 TmnxAlgorithmId,
 TmnxBfdSessOperFlags,
 TmnxBfdSessProtocolState,
 TmnxBfdSessionProtocols,
 TmnxBfdTermination,
 TmnxBgpAutonomousSystem,
 TmnxCBFClasses,
 TmnxCreateOrigin,
 TmnxCustId,
 TmnxDHCP6MsgType,
 TmnxDPathDomainId,
 TmnxDataFormat,
 TmnxDhcpClientState,
 TmnxDhcpOptionType,
 TmnxDhcpServerDUIDTypeCode,
 TmnxDistCpuProtActionDuration,
 TmnxDistCpuProtProtocolId,
 TmnxDistCpuProtState,
 TmnxEnabledDisabled,
 TmnxEncapVal,
 TmnxFlexAlgoIdOrZero,
 TmnxIpv6AddressAndPrefixAddress,
 TmnxIpv6AddressAndPrefixPrefix,
 TmnxIsaBbGrpId,
 TmnxLagPerLinkHashClass,
 TmnxLagPerLinkHashWeight,
 TmnxLinkMapProfileIdOrZero,
 TmnxMplsTpGlobalID,
 TmnxMplsTpNodeID,
 TmnxOperState,
 TmnxPortID,
 TmnxPwGlobalIdOrZero,
 TmnxQosRateHigh32,
 TmnxQosRateLow32,
 TmnxReasContextVal,
 TmnxRouteDistType,
 TmnxServId,
 TmnxStatus,
 TmnxTunnelGroupIdOrZero,
 TmnxTunnelID,
 TmnxTunnelType,
 TmnxTunnelTypeExt,
 TmnxUrpfCheckMode,
 TmnxVPNRouteDistinguisher,
 TmnxVRtrID,
 TmnxVRtrIDOrZero,
 TmnxVpnIpBackupFamily) = mibBuilder.importSymbols(
    "TIMETRA-TC-MIB",
    "ClassIndex",
    "ClassIndexOrNone",
    "DateAndTimeOrEmpty",
    "Dot1PPriority",
    "IpAddressPrefixLength",
    "SdpBindId",
    "TCIRRate",
    "TCpmProtPolicyID",
    "TDSCPValue",
    "TDSCPValueOrNone",
    "TFCNameOrEmpty",
    "TFCType",
    "TItemDescription",
    "TItemLongDescription",
    "TLNamedItemOrEmpty",
    "TLPolicyNameOrExpOrEmpty",
    "TNamedItem",
    "TNamedItemOrEmpty",
    "TNetworkPolicyID",
    "TPIRRate",
    "TPlcrBurstSizeBytes",
    "TPlcyAcctPolicerId",
    "TPolicyStatementNameOrEmpty",
    "TPriorityOrUndefined",
    "TQosQGrpInstanceIDorZero",
    "TResolveStatus",
    "TXLPolicyNameOrExpOrEmpty",
    "TmnxAddressAndPrefixAddress",
    "TmnxAddressAndPrefixPrefix",
    "TmnxAddressAndPrefixType",
    "TmnxAdminState",
    "TmnxAlgorithmId",
    "TmnxBfdSessOperFlags",
    "TmnxBfdSessProtocolState",
    "TmnxBfdSessionProtocols",
    "TmnxBfdTermination",
    "TmnxBgpAutonomousSystem",
    "TmnxCBFClasses",
    "TmnxCreateOrigin",
    "TmnxCustId",
    "TmnxDHCP6MsgType",
    "TmnxDPathDomainId",
    "TmnxDataFormat",
    "TmnxDhcpClientState",
    "TmnxDhcpOptionType",
    "TmnxDhcpServerDUIDTypeCode",
    "TmnxDistCpuProtActionDuration",
    "TmnxDistCpuProtProtocolId",
    "TmnxDistCpuProtState",
    "TmnxEnabledDisabled",
    "TmnxEncapVal",
    "TmnxFlexAlgoIdOrZero",
    "TmnxIpv6AddressAndPrefixAddress",
    "TmnxIpv6AddressAndPrefixPrefix",
    "TmnxIsaBbGrpId",
    "TmnxLagPerLinkHashClass",
    "TmnxLagPerLinkHashWeight",
    "TmnxLinkMapProfileIdOrZero",
    "TmnxMplsTpGlobalID",
    "TmnxMplsTpNodeID",
    "TmnxOperState",
    "TmnxPortID",
    "TmnxPwGlobalIdOrZero",
    "TmnxQosRateHigh32",
    "TmnxQosRateLow32",
    "TmnxReasContextVal",
    "TmnxRouteDistType",
    "TmnxServId",
    "TmnxStatus",
    "TmnxTunnelGroupIdOrZero",
    "TmnxTunnelID",
    "TmnxTunnelType",
    "TmnxTunnelTypeExt",
    "TmnxUrpfCheckMode",
    "TmnxVPNRouteDistinguisher",
    "TmnxVRtrID",
    "TmnxVRtrIDOrZero",
    "TmnxVpnIpBackupFamily")


# MODULE-IDENTITY

timetraVRtrMIBModule = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 3)
)
if mibBuilder.loadTexts:
    timetraVRtrMIBModule.setRevisions(
        ("2021-02-01 00:00",
         "2020-02-01 00:00",
         "2019-03-01 00:00",
         "2017-03-01 00:00",
         "2016-01-01 00:00",
         "2015-01-01 00:00",
         "2014-01-01 00:00",
         "2011-02-01 00:00",
         "2009-02-28 00:00",
         "2008-07-01 00:00",
         "2008-01-01 00:00",
         "2007-01-01 00:00",
         "2006-02-28 00:00",
         "2005-08-31 00:00",
         "2005-01-24 00:00",
         "2004-01-15 00:00",
         "2003-08-15 00:00",
         "2003-01-20 00:00",
         "2000-08-14 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class TmnxVPNId(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )



class TmnxInetAddrState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("tentative", 1),
          ("duplicated", 2),
          ("inaccessible", 3),
          ("deprecated", 4),
          ("preferred", 5))
    )



class TDSCPAppId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44)
        )
    )
    namedValues = NamedValues(
        *(("bgp", 1),
          ("cflowd", 2),
          ("dhcp", 3),
          ("dns", 4),
          ("ftp", 5),
          ("icmp", 6),
          ("igmp", 7),
          ("l2tp", 8),
          ("ldp", 9),
          ("mld", 10),
          ("msdp", 11),
          ("ndis", 12),
          ("ntp", 13),
          ("ospf", 14),
          ("pim", 15),
          ("radius", 16),
          ("rip", 17),
          ("rsvp", 18),
          ("snmp", 19),
          ("snmp-notification", 20),
          ("srrp", 21),
          ("ssh", 22),
          ("syslog", 23),
          ("tacplus", 24),
          ("telnet", 25),
          ("tftp", 26),
          ("traceroute", 27),
          ("vrrp", 28),
          ("ptp", 29),
          ("igmp-reporter", 30),
          ("gtp", 31),
          ("sflow", 34),
          ("diameter", 35),
          ("pcep", 36),
          ("call-trace", 37),
          ("bmp", 38),
          ("grpc", 39),
          ("mtrace2", 40),
          ("http", 41),
          ("mpls-udp-return", 42),
          ("pfcp", 43),
          ("ibcp", 44))
    )



class TDot1pAppId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("arp", 1),
          ("isis", 2),
          ("pppoe", 3))
    )



class TmnxVrtrSingleSfmOverloadState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("normal", 1),
          ("overload", 2))
    )



class TmnxInetCidrNextHopType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("regular", 1),
          ("tunneled", 2),
          ("sixOverMPLS", 3),
          ("sixOverFour", 4),
          ("tunneledIpv6", 5))
    )



class TmnxInetCidrNextHopOwner(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("rsvp", 1),
          ("ldp", 2),
          ("ldpOverRsvp", 3),
          ("bgp", 4),
          ("srOspf", 5),
          ("srIsis", 6),
          ("srTe", 7),
          ("udp", 8),
          ("srBgp", 9),
          ("srOspfV3", 10),
          ("mplsFwdPolicy", 11),
          ("srPolicy", 12),
          ("ribApi", 13),
          ("srv6", 14),
          ("srv6Isis", 15))
    )



class TmnxL3RouteOwner(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              16)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("local", 1),
          ("host", 2),
          ("static", 5),
          ("bgp", 16))
    )



class TmnxRouteOperFlags(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        ("stickyFlag", 0)
    )


class VRtrVprnTTLPropagateType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("all", 1),
          ("vcOnly", 2),
          ("inherit", 3))
    )



class VRtrTTLPropagateType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("all", 1))
    )



class TmnxSendCgaModifier(TextualConvention, OctetString):
    status = "current"
    displayHint = "1x:"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16



class TmnxEmbFlowspecFltrMaxSize(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 262143),
    )



class TmnxInetAddrTypeWithMcast(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              16,
              128,
              129)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("ipv4", 1),
          ("ipv6", 2),
          ("ipv4z", 3),
          ("ipv6z", 4),
          ("dns", 16),
          ("ipv4Mcast", 128),
          ("ipv6Mcast", 129))
    )



class TmnxVrtrNeid(TextualConvention, OctetString):
    status = "current"
    displayHint = "1x:"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4



class VrtrMplsTunnelMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("uniform", 0),
          ("pipe", 1))
    )



# MIB Managed Objects in the order of their OIDs

_TmnxVRtrConformance_ObjectIdentity = ObjectIdentity
tmnxVRtrConformance = _TmnxVRtrConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3)
)
_TmnxVRtrCompliances_ObjectIdentity = ObjectIdentity
tmnxVRtrCompliances = _TmnxVRtrCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1)
)
_TmnxVRtrGroups_ObjectIdentity = ObjectIdentity
tmnxVRtrGroups = _TmnxVRtrGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2)
)
_TmnxVRtrMobGatewayCompliances_ObjectIdentity = ObjectIdentity
tmnxVRtrMobGatewayCompliances = _TmnxVRtrMobGatewayCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 3)
)
_TmnxVRtrMobGatewayGroups_ObjectIdentity = ObjectIdentity
tmnxVRtrMobGatewayGroups = _TmnxVRtrMobGatewayGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 4)
)
_TmnxDCVRtrCompliances_ObjectIdentity = ObjectIdentity
tmnxDCVRtrCompliances = _TmnxDCVRtrCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 5)
)
_TmnxDCVRtrGroups_ObjectIdentity = ObjectIdentity
tmnxDCVRtrGroups = _TmnxDCVRtrGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 6)
)
_TmnxVRtrObjs_ObjectIdentity = ObjectIdentity
tmnxVRtrObjs = _TmnxVRtrObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3)
)
_VRtrConfTable_Object = MibTable
vRtrConfTable = _VRtrConfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1)
)
if mibBuilder.loadTexts:
    vRtrConfTable.setStatus("current")
_VRtrConfEntry_Object = MibTableRow
vRtrConfEntry = _VRtrConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1)
)
vRtrConfEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrConfEntry.setStatus("current")
_VRtrID_Type = TmnxVRtrID
_VRtrID_Object = MibTableColumn
vRtrID = _VRtrID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 1),
    _VRtrID_Type()
)
vRtrID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrID.setStatus("current")
_VRtrRowStatus_Type = RowStatus
_VRtrRowStatus_Object = MibTableColumn
vRtrRowStatus = _VRtrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 2),
    _VRtrRowStatus_Type()
)
vRtrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRowStatus.setStatus("current")


class _VRtrAdminState_Type(TmnxAdminState):
    """Custom type vRtrAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrAdminState_Type.__name__ = "TmnxAdminState"
_VRtrAdminState_Object = MibTableColumn
vRtrAdminState = _VRtrAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 3),
    _VRtrAdminState_Type()
)
vRtrAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdminState.setStatus("current")
_VRtrName_Type = TNamedItemOrEmpty
_VRtrName_Object = MibTableColumn
vRtrName = _VRtrName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 4),
    _VRtrName_Type()
)
vRtrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrName.setStatus("current")


class _VRtrMaxNumRoutes_Type(Integer32):
    """Custom type vRtrMaxNumRoutes based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrMaxNumRoutes_Type.__name__ = "Integer32"
_VRtrMaxNumRoutes_Object = MibTableColumn
vRtrMaxNumRoutes = _VRtrMaxNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 5),
    _VRtrMaxNumRoutes_Type()
)
vRtrMaxNumRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMaxNumRoutes.setStatus("current")


class _VRtrBgpStatus_Type(TmnxStatus):
    """Custom type vRtrBgpStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrBgpStatus_Type.__name__ = "TmnxStatus"
_VRtrBgpStatus_Object = MibTableColumn
vRtrBgpStatus = _VRtrBgpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 6),
    _VRtrBgpStatus_Type()
)
vRtrBgpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpStatus.setStatus("current")


class _VRtrMplsStatus_Type(TmnxStatus):
    """Custom type vRtrMplsStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrMplsStatus_Type.__name__ = "TmnxStatus"
_VRtrMplsStatus_Object = MibTableColumn
vRtrMplsStatus = _VRtrMplsStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 7),
    _VRtrMplsStatus_Type()
)
vRtrMplsStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMplsStatus.setStatus("current")


class _VRtrOspfStatus_Type(TmnxStatus):
    """Custom type vRtrOspfStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrOspfStatus_Type.__name__ = "TmnxStatus"
_VRtrOspfStatus_Object = MibTableColumn
vRtrOspfStatus = _VRtrOspfStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 8),
    _VRtrOspfStatus_Type()
)
vRtrOspfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrOspfStatus.setStatus("obsolete")


class _VRtrRipStatus_Type(TmnxStatus):
    """Custom type vRtrRipStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrRipStatus_Type.__name__ = "TmnxStatus"
_VRtrRipStatus_Object = MibTableColumn
vRtrRipStatus = _VRtrRipStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 9),
    _VRtrRipStatus_Type()
)
vRtrRipStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRipStatus.setStatus("current")


class _VRtrRsvpStatus_Type(TmnxStatus):
    """Custom type vRtrRsvpStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrRsvpStatus_Type.__name__ = "TmnxStatus"
_VRtrRsvpStatus_Object = MibTableColumn
vRtrRsvpStatus = _VRtrRsvpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 10),
    _VRtrRsvpStatus_Type()
)
vRtrRsvpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpStatus.setStatus("current")


class _VRtrEcmpMaxRoutes_Type(Unsigned32):
    """Custom type vRtrEcmpMaxRoutes based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_VRtrEcmpMaxRoutes_Type.__name__ = "Unsigned32"
_VRtrEcmpMaxRoutes_Object = MibTableColumn
vRtrEcmpMaxRoutes = _VRtrEcmpMaxRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 11),
    _VRtrEcmpMaxRoutes_Type()
)
vRtrEcmpMaxRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrEcmpMaxRoutes.setStatus("current")


class _VRtrAS_Type(TmnxBgpAutonomousSystem):
    """Custom type vRtrAS based on TmnxBgpAutonomousSystem"""
    defaultValue = 0


_VRtrAS_Type.__name__ = "TmnxBgpAutonomousSystem"
_VRtrAS_Object = MibTableColumn
vRtrAS = _VRtrAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 12),
    _VRtrAS_Type()
)
vRtrAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAS.setStatus("obsolete")
_VRtrNewIfIndex_Type = TestAndIncr
_VRtrNewIfIndex_Object = MibTableColumn
vRtrNewIfIndex = _VRtrNewIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 13),
    _VRtrNewIfIndex_Type()
)
vRtrNewIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrNewIfIndex.setStatus("current")


class _VRtrLdpStatus_Type(TmnxStatus):
    """Custom type vRtrLdpStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrLdpStatus_Type.__name__ = "TmnxStatus"
_VRtrLdpStatus_Object = MibTableColumn
vRtrLdpStatus = _VRtrLdpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 14),
    _VRtrLdpStatus_Type()
)
vRtrLdpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpStatus.setStatus("current")


class _VRtrIsIsStatus_Type(TmnxStatus):
    """Custom type vRtrIsIsStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrIsIsStatus_Type.__name__ = "TmnxStatus"
_VRtrIsIsStatus_Object = MibTableColumn
vRtrIsIsStatus = _VRtrIsIsStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 15),
    _VRtrIsIsStatus_Type()
)
vRtrIsIsStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIsIsStatus.setStatus("obsolete")


class _VRtrRouterId_Type(IpAddress):
    """Custom type vRtrRouterId based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrRouterId_Type.__name__ = "IpAddress"
_VRtrRouterId_Object = MibTableColumn
vRtrRouterId = _VRtrRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 16),
    _VRtrRouterId_Type()
)
vRtrRouterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRouterId.setStatus("current")


class _VRtrTriggeredPolicy_Type(TruthValue):
    """Custom type vRtrTriggeredPolicy based on TruthValue"""
    defaultValue = 2


_VRtrTriggeredPolicy_Type.__name__ = "TruthValue"
_VRtrTriggeredPolicy_Object = MibTableColumn
vRtrTriggeredPolicy = _VRtrTriggeredPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 17),
    _VRtrTriggeredPolicy_Type()
)
vRtrTriggeredPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTriggeredPolicy.setStatus("current")


class _VRtrConfederationAS_Type(TmnxBgpAutonomousSystem):
    """Custom type vRtrConfederationAS based on TmnxBgpAutonomousSystem"""
    defaultValue = 0


_VRtrConfederationAS_Type.__name__ = "TmnxBgpAutonomousSystem"
_VRtrConfederationAS_Object = MibTableColumn
vRtrConfederationAS = _VRtrConfederationAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 18),
    _VRtrConfederationAS_Type()
)
vRtrConfederationAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrConfederationAS.setStatus("obsolete")


class _VRtrRouteDistinguisher_Type(TmnxVPNRouteDistinguisher):
    """Custom type vRtrRouteDistinguisher based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_VRtrRouteDistinguisher_Type.__name__ = "TmnxVPNRouteDistinguisher"
_VRtrRouteDistinguisher_Object = MibTableColumn
vRtrRouteDistinguisher = _VRtrRouteDistinguisher_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 19),
    _VRtrRouteDistinguisher_Type()
)
vRtrRouteDistinguisher.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRouteDistinguisher.setStatus("current")


class _VRtrMidRouteThreshold_Type(Unsigned32):
    """Custom type vRtrMidRouteThreshold based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrMidRouteThreshold_Type.__name__ = "Unsigned32"
_VRtrMidRouteThreshold_Object = MibTableColumn
vRtrMidRouteThreshold = _VRtrMidRouteThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 20),
    _VRtrMidRouteThreshold_Type()
)
vRtrMidRouteThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMidRouteThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrMidRouteThreshold.setUnits("percent")


class _VRtrHighRouteThreshold_Type(Unsigned32):
    """Custom type vRtrHighRouteThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrHighRouteThreshold_Type.__name__ = "Unsigned32"
_VRtrHighRouteThreshold_Object = MibTableColumn
vRtrHighRouteThreshold = _VRtrHighRouteThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 21),
    _VRtrHighRouteThreshold_Type()
)
vRtrHighRouteThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrHighRouteThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrHighRouteThreshold.setUnits("percent")


class _VRtrIllegalLabelThreshold_Type(Unsigned32):
    """Custom type vRtrIllegalLabelThreshold based on Unsigned32"""
    defaultValue = 0


_VRtrIllegalLabelThreshold_Type.__name__ = "Unsigned32"
_VRtrIllegalLabelThreshold_Object = MibTableColumn
vRtrIllegalLabelThreshold = _VRtrIllegalLabelThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 22),
    _VRtrIllegalLabelThreshold_Type()
)
vRtrIllegalLabelThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIllegalLabelThreshold.setStatus("obsolete")


class _VRtrVpnId_Type(TmnxVPNId):
    """Custom type vRtrVpnId based on TmnxVPNId"""
    defaultHexValue = ""


_VRtrVpnId_Type.__name__ = "TmnxVPNId"
_VRtrVpnId_Object = MibTableColumn
vRtrVpnId = _VRtrVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 23),
    _VRtrVpnId_Type()
)
vRtrVpnId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVpnId.setStatus("current")


class _VRtrDescription_Type(TItemDescription):
    """Custom type vRtrDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrDescription_Type.__name__ = "TItemDescription"
_VRtrDescription_Object = MibTableColumn
vRtrDescription = _VRtrDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 25),
    _VRtrDescription_Type()
)
vRtrDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDescription.setStatus("current")


class _VRtrGracefulRestart_Type(TruthValue):
    """Custom type vRtrGracefulRestart based on TruthValue"""
    defaultValue = 2


_VRtrGracefulRestart_Type.__name__ = "TruthValue"
_VRtrGracefulRestart_Object = MibTableColumn
vRtrGracefulRestart = _VRtrGracefulRestart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 26),
    _VRtrGracefulRestart_Type()
)
vRtrGracefulRestart.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGracefulRestart.setStatus("current")


class _VRtrGracefulRestartType_Type(Integer32):
    """Custom type vRtrGracefulRestartType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("never", 0),
          ("manual", 1),
          ("automatic", 2))
    )


_VRtrGracefulRestartType_Type.__name__ = "Integer32"
_VRtrGracefulRestartType_Object = MibTableColumn
vRtrGracefulRestartType = _VRtrGracefulRestartType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 27),
    _VRtrGracefulRestartType_Type()
)
vRtrGracefulRestartType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGracefulRestartType.setStatus("current")


class _VRtrType_Type(Integer32):
    """Custom type vRtrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("baseRouter", 1),
          ("vprn", 2),
          ("vr", 3))
    )


_VRtrType_Type.__name__ = "Integer32"
_VRtrType_Object = MibTableColumn
vRtrType = _VRtrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 28),
    _VRtrType_Type()
)
vRtrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrType.setStatus("current")
_VRtrServiceId_Type = TmnxServId
_VRtrServiceId_Object = MibTableColumn
vRtrServiceId = _VRtrServiceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 29),
    _VRtrServiceId_Type()
)
vRtrServiceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrServiceId.setStatus("current")
_VRtrCustId_Type = TmnxCustId
_VRtrCustId_Object = MibTableColumn
vRtrCustId = _VRtrCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 30),
    _VRtrCustId_Type()
)
vRtrCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrCustId.setStatus("current")


class _VRtrIgmpStatus_Type(TmnxStatus):
    """Custom type vRtrIgmpStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrIgmpStatus_Type.__name__ = "TmnxStatus"
_VRtrIgmpStatus_Object = MibTableColumn
vRtrIgmpStatus = _VRtrIgmpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 31),
    _VRtrIgmpStatus_Type()
)
vRtrIgmpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIgmpStatus.setStatus("current")


class _VRtrMaxNumRoutesLogOnly_Type(TruthValue):
    """Custom type vRtrMaxNumRoutesLogOnly based on TruthValue"""
    defaultValue = 2


_VRtrMaxNumRoutesLogOnly_Type.__name__ = "TruthValue"
_VRtrMaxNumRoutesLogOnly_Object = MibTableColumn
vRtrMaxNumRoutesLogOnly = _VRtrMaxNumRoutesLogOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 32),
    _VRtrMaxNumRoutesLogOnly_Type()
)
vRtrMaxNumRoutesLogOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMaxNumRoutesLogOnly.setStatus("current")
_VRtrVrfTarget_Type = TNamedItemOrEmpty
_VRtrVrfTarget_Object = MibTableColumn
vRtrVrfTarget = _VRtrVrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 33),
    _VRtrVrfTarget_Type()
)
vRtrVrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfTarget.setStatus("current")
_VRtrVrfExportTarget_Type = TNamedItemOrEmpty
_VRtrVrfExportTarget_Object = MibTableColumn
vRtrVrfExportTarget = _VRtrVrfExportTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 34),
    _VRtrVrfExportTarget_Type()
)
vRtrVrfExportTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportTarget.setStatus("current")
_VRtrVrfImportTarget_Type = TNamedItemOrEmpty
_VRtrVrfImportTarget_Object = MibTableColumn
vRtrVrfImportTarget = _VRtrVrfImportTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 35),
    _VRtrVrfImportTarget_Type()
)
vRtrVrfImportTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportTarget.setStatus("current")


class _VRtrPimStatus_Type(TmnxStatus):
    """Custom type vRtrPimStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrPimStatus_Type.__name__ = "TmnxStatus"
_VRtrPimStatus_Object = MibTableColumn
vRtrPimStatus = _VRtrPimStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 36),
    _VRtrPimStatus_Type()
)
vRtrPimStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPimStatus.setStatus("current")


class _VRtrMaxMcastNumRoutes_Type(Integer32):
    """Custom type vRtrMaxMcastNumRoutes based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrMaxMcastNumRoutes_Type.__name__ = "Integer32"
_VRtrMaxMcastNumRoutes_Object = MibTableColumn
vRtrMaxMcastNumRoutes = _VRtrMaxMcastNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 37),
    _VRtrMaxMcastNumRoutes_Type()
)
vRtrMaxMcastNumRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMaxMcastNumRoutes.setStatus("current")


class _VRtrMaxMcastNumRoutesLogOnly_Type(TruthValue):
    """Custom type vRtrMaxMcastNumRoutesLogOnly based on TruthValue"""
    defaultValue = 2


_VRtrMaxMcastNumRoutesLogOnly_Type.__name__ = "TruthValue"
_VRtrMaxMcastNumRoutesLogOnly_Object = MibTableColumn
vRtrMaxMcastNumRoutesLogOnly = _VRtrMaxMcastNumRoutesLogOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 38),
    _VRtrMaxMcastNumRoutesLogOnly_Type()
)
vRtrMaxMcastNumRoutesLogOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMaxMcastNumRoutesLogOnly.setStatus("current")


class _VRtrMcastMidRouteThreshold_Type(Unsigned32):
    """Custom type vRtrMcastMidRouteThreshold based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrMcastMidRouteThreshold_Type.__name__ = "Unsigned32"
_VRtrMcastMidRouteThreshold_Object = MibTableColumn
vRtrMcastMidRouteThreshold = _VRtrMcastMidRouteThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 39),
    _VRtrMcastMidRouteThreshold_Type()
)
vRtrMcastMidRouteThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMcastMidRouteThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrMcastMidRouteThreshold.setUnits("percent")


class _VRtrIgnoreIcmpRedirect_Type(TruthValue):
    """Custom type vRtrIgnoreIcmpRedirect based on TruthValue"""
    defaultValue = 1


_VRtrIgnoreIcmpRedirect_Type.__name__ = "TruthValue"
_VRtrIgnoreIcmpRedirect_Object = MibTableColumn
vRtrIgnoreIcmpRedirect = _VRtrIgnoreIcmpRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 40),
    _VRtrIgnoreIcmpRedirect_Type()
)
vRtrIgnoreIcmpRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIgnoreIcmpRedirect.setStatus("current")


class _VRtrOspfv3Status_Type(TmnxStatus):
    """Custom type vRtrOspfv3Status based on TmnxStatus"""
    defaultValue = 2


_VRtrOspfv3Status_Type.__name__ = "TmnxStatus"
_VRtrOspfv3Status_Object = MibTableColumn
vRtrOspfv3Status = _VRtrOspfv3Status_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 41),
    _VRtrOspfv3Status_Type()
)
vRtrOspfv3Status.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrOspfv3Status.setStatus("obsolete")


class _VRtrMsdpStatus_Type(TmnxStatus):
    """Custom type vRtrMsdpStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrMsdpStatus_Type.__name__ = "TmnxStatus"
_VRtrMsdpStatus_Object = MibTableColumn
vRtrMsdpStatus = _VRtrMsdpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 42),
    _VRtrMsdpStatus_Type()
)
vRtrMsdpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMsdpStatus.setStatus("current")


class _VRtrVprnType_Type(Integer32):
    """Custom type vRtrVprnType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("regular", 1),
          ("hub", 2),
          ("spoke", 3),
          ("subscriberSplitHorizon", 4))
    )


_VRtrVprnType_Type.__name__ = "Integer32"
_VRtrVprnType_Object = MibTableColumn
vRtrVprnType = _VRtrVprnType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 43),
    _VRtrVprnType_Type()
)
vRtrVprnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVprnType.setStatus("current")
_VRtrSecondaryVrfId_Type = TmnxVRtrIDOrZero
_VRtrSecondaryVrfId_Object = MibTableColumn
vRtrSecondaryVrfId = _VRtrSecondaryVrfId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 44),
    _VRtrSecondaryVrfId_Type()
)
vRtrSecondaryVrfId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSecondaryVrfId.setStatus("current")


class _VRtrMldStatus_Type(TmnxStatus):
    """Custom type vRtrMldStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrMldStatus_Type.__name__ = "TmnxStatus"
_VRtrMldStatus_Object = MibTableColumn
vRtrMldStatus = _VRtrMldStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 45),
    _VRtrMldStatus_Type()
)
vRtrMldStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMldStatus.setStatus("current")


class _VRtrIPv6MaxNumRoutes_Type(Integer32):
    """Custom type vRtrIPv6MaxNumRoutes based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrIPv6MaxNumRoutes_Type.__name__ = "Integer32"
_VRtrIPv6MaxNumRoutes_Object = MibTableColumn
vRtrIPv6MaxNumRoutes = _VRtrIPv6MaxNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 46),
    _VRtrIPv6MaxNumRoutes_Type()
)
vRtrIPv6MaxNumRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIPv6MaxNumRoutes.setStatus("current")


class _VRtrIPv6MidRouteThreshold_Type(Unsigned32):
    """Custom type vRtrIPv6MidRouteThreshold based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIPv6MidRouteThreshold_Type.__name__ = "Unsigned32"
_VRtrIPv6MidRouteThreshold_Object = MibTableColumn
vRtrIPv6MidRouteThreshold = _VRtrIPv6MidRouteThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 47),
    _VRtrIPv6MidRouteThreshold_Type()
)
vRtrIPv6MidRouteThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIPv6MidRouteThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIPv6MidRouteThreshold.setUnits("percent")


class _VRtrIPv6HighRouteThreshold_Type(Unsigned32):
    """Custom type vRtrIPv6HighRouteThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIPv6HighRouteThreshold_Type.__name__ = "Unsigned32"
_VRtrIPv6HighRouteThreshold_Object = MibTableColumn
vRtrIPv6HighRouteThreshold = _VRtrIPv6HighRouteThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 48),
    _VRtrIPv6HighRouteThreshold_Type()
)
vRtrIPv6HighRouteThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIPv6HighRouteThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIPv6HighRouteThreshold.setUnits("percent")


class _VRtrIPv6MaxNumRoutesLogOnly_Type(TruthValue):
    """Custom type vRtrIPv6MaxNumRoutesLogOnly based on TruthValue"""
    defaultValue = 2


_VRtrIPv6MaxNumRoutesLogOnly_Type.__name__ = "TruthValue"
_VRtrIPv6MaxNumRoutesLogOnly_Object = MibTableColumn
vRtrIPv6MaxNumRoutesLogOnly = _VRtrIPv6MaxNumRoutesLogOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 49),
    _VRtrIPv6MaxNumRoutesLogOnly_Type()
)
vRtrIPv6MaxNumRoutesLogOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIPv6MaxNumRoutesLogOnly.setStatus("current")


class _VRtrIPv6IgnoreIcmpRedirect_Type(TruthValue):
    """Custom type vRtrIPv6IgnoreIcmpRedirect based on TruthValue"""
    defaultValue = 1


_VRtrIPv6IgnoreIcmpRedirect_Type.__name__ = "TruthValue"
_VRtrIPv6IgnoreIcmpRedirect_Object = MibTableColumn
vRtrIPv6IgnoreIcmpRedirect = _VRtrIPv6IgnoreIcmpRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 50),
    _VRtrIPv6IgnoreIcmpRedirect_Type()
)
vRtrIPv6IgnoreIcmpRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIPv6IgnoreIcmpRedirect.setStatus("current")


class _VRtrMcPathMgmtPlcyName_Type(TNamedItem):
    """Custom type vRtrMcPathMgmtPlcyName based on TNamedItem"""
    defaultValue = OctetString("default")


_VRtrMcPathMgmtPlcyName_Type.__name__ = "TNamedItem"
_VRtrMcPathMgmtPlcyName_Object = MibTableColumn
vRtrMcPathMgmtPlcyName = _VRtrMcPathMgmtPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 51),
    _VRtrMcPathMgmtPlcyName_Type()
)
vRtrMcPathMgmtPlcyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMcPathMgmtPlcyName.setStatus("current")


class _VRtrIgnoreNextHopMetric_Type(TruthValue):
    """Custom type vRtrIgnoreNextHopMetric based on TruthValue"""
    defaultValue = 2


_VRtrIgnoreNextHopMetric_Type.__name__ = "TruthValue"
_VRtrIgnoreNextHopMetric_Object = MibTableColumn
vRtrIgnoreNextHopMetric = _VRtrIgnoreNextHopMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 52),
    _VRtrIgnoreNextHopMetric_Type()
)
vRtrIgnoreNextHopMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIgnoreNextHopMetric.setStatus("current")


class _VRtrMvpnVrfTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnVrfTarget based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnVrfTarget_Object = MibTableColumn
vRtrMvpnVrfTarget = _VRtrMvpnVrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 53),
    _VRtrMvpnVrfTarget_Type()
)
vRtrMvpnVrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfTarget.setStatus("current")


class _VRtrMvpnVrfExportTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnVrfExportTarget based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnVrfExportTarget_Object = MibTableColumn
vRtrMvpnVrfExportTarget = _VRtrMvpnVrfExportTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 54),
    _VRtrMvpnVrfExportTarget_Type()
)
vRtrMvpnVrfExportTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportTarget.setStatus("current")


class _VRtrMvpnVrfImportTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnVrfImportTarget based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnVrfImportTarget_Object = MibTableColumn
vRtrMvpnVrfImportTarget = _VRtrMvpnVrfImportTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 55),
    _VRtrMvpnVrfImportTarget_Type()
)
vRtrMvpnVrfImportTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportTarget.setStatus("current")


class _VRtrMvpnVrfTargetUnicast_Type(TruthValue):
    """Custom type vRtrMvpnVrfTargetUnicast based on TruthValue"""
    defaultValue = 2


_VRtrMvpnVrfTargetUnicast_Type.__name__ = "TruthValue"
_VRtrMvpnVrfTargetUnicast_Object = MibTableColumn
vRtrMvpnVrfTargetUnicast = _VRtrMvpnVrfTargetUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 56),
    _VRtrMvpnVrfTargetUnicast_Type()
)
vRtrMvpnVrfTargetUnicast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfTargetUnicast.setStatus("current")


class _VRtrMvpnVrfExportTargetUnicast_Type(TruthValue):
    """Custom type vRtrMvpnVrfExportTargetUnicast based on TruthValue"""
    defaultValue = 2


_VRtrMvpnVrfExportTargetUnicast_Type.__name__ = "TruthValue"
_VRtrMvpnVrfExportTargetUnicast_Object = MibTableColumn
vRtrMvpnVrfExportTargetUnicast = _VRtrMvpnVrfExportTargetUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 57),
    _VRtrMvpnVrfExportTargetUnicast_Type()
)
vRtrMvpnVrfExportTargetUnicast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportTargetUnicast.setStatus("current")


class _VRtrMvpnVrfImportTargetUnicast_Type(TruthValue):
    """Custom type vRtrMvpnVrfImportTargetUnicast based on TruthValue"""
    defaultValue = 2


_VRtrMvpnVrfImportTargetUnicast_Type.__name__ = "TruthValue"
_VRtrMvpnVrfImportTargetUnicast_Object = MibTableColumn
vRtrMvpnVrfImportTargetUnicast = _VRtrMvpnVrfImportTargetUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 58),
    _VRtrMvpnVrfImportTargetUnicast_Type()
)
vRtrMvpnVrfImportTargetUnicast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportTargetUnicast.setStatus("current")


class _VRtrAS4Byte_Type(InetAutonomousSystemNumber):
    """Custom type vRtrAS4Byte based on InetAutonomousSystemNumber"""
    defaultValue = 0


_VRtrAS4Byte_Type.__name__ = "InetAutonomousSystemNumber"
_VRtrAS4Byte_Object = MibTableColumn
vRtrAS4Byte = _VRtrAS4Byte_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 59),
    _VRtrAS4Byte_Type()
)
vRtrAS4Byte.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAS4Byte.setStatus("current")


class _VRtrConfederationAS4Byte_Type(InetAutonomousSystemNumber):
    """Custom type vRtrConfederationAS4Byte based on InetAutonomousSystemNumber"""
    defaultValue = 0


_VRtrConfederationAS4Byte_Type.__name__ = "InetAutonomousSystemNumber"
_VRtrConfederationAS4Byte_Object = MibTableColumn
vRtrConfederationAS4Byte = _VRtrConfederationAS4Byte_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 60),
    _VRtrConfederationAS4Byte_Type()
)
vRtrConfederationAS4Byte.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrConfederationAS4Byte.setStatus("current")


class _VRtrMvpnCMcastImportRT_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnCMcastImportRT based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnCMcastImportRT_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnCMcastImportRT_Object = MibTableColumn
vRtrMvpnCMcastImportRT = _VRtrMvpnCMcastImportRT_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 61),
    _VRtrMvpnCMcastImportRT_Type()
)
vRtrMvpnCMcastImportRT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnCMcastImportRT.setStatus("current")
_VRtrInterASMvpn_Type = TruthValue
_VRtrInterASMvpn_Object = MibTableColumn
vRtrInterASMvpn = _VRtrInterASMvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 64),
    _VRtrInterASMvpn_Type()
)
vRtrInterASMvpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInterASMvpn.setStatus("current")


class _VRtrRipNgStatus_Type(TmnxStatus):
    """Custom type vRtrRipNgStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrRipNgStatus_Type.__name__ = "TmnxStatus"
_VRtrRipNgStatus_Object = MibTableColumn
vRtrRipNgStatus = _VRtrRipNgStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 1, 1, 65),
    _VRtrRipNgStatus_Type()
)
vRtrRipNgStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRipNgStatus.setStatus("current")
_VRtrStatTable_Object = MibTable
vRtrStatTable = _VRtrStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2)
)
if mibBuilder.loadTexts:
    vRtrStatTable.setStatus("current")
_VRtrStatEntry_Object = MibTableRow
vRtrStatEntry = _VRtrStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1)
)
if mibBuilder.loadTexts:
    vRtrStatEntry.setStatus("current")
_VRtrOperState_Type = TmnxOperState
_VRtrOperState_Object = MibTableColumn
vRtrOperState = _VRtrOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 1),
    _VRtrOperState_Type()
)
vRtrOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOperState.setStatus("current")
_VRtrDirectRoutes_Type = Gauge32
_VRtrDirectRoutes_Object = MibTableColumn
vRtrDirectRoutes = _VRtrDirectRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 2),
    _VRtrDirectRoutes_Type()
)
vRtrDirectRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDirectRoutes.setStatus("current")
_VRtrDirectActiveRoutes_Type = Gauge32
_VRtrDirectActiveRoutes_Object = MibTableColumn
vRtrDirectActiveRoutes = _VRtrDirectActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 3),
    _VRtrDirectActiveRoutes_Type()
)
vRtrDirectActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDirectActiveRoutes.setStatus("current")
_VRtrStaticRoutes_Type = Gauge32
_VRtrStaticRoutes_Object = MibTableColumn
vRtrStaticRoutes = _VRtrStaticRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 4),
    _VRtrStaticRoutes_Type()
)
vRtrStaticRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRoutes.setStatus("current")
_VRtrStaticActiveRoutes_Type = Gauge32
_VRtrStaticActiveRoutes_Object = MibTableColumn
vRtrStaticActiveRoutes = _VRtrStaticActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 5),
    _VRtrStaticActiveRoutes_Type()
)
vRtrStaticActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticActiveRoutes.setStatus("current")
_VRtrOSPFRoutes_Type = Gauge32
_VRtrOSPFRoutes_Object = MibTableColumn
vRtrOSPFRoutes = _VRtrOSPFRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 6),
    _VRtrOSPFRoutes_Type()
)
vRtrOSPFRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFRoutes.setStatus("current")
_VRtrOSPFActiveRoutes_Type = Gauge32
_VRtrOSPFActiveRoutes_Object = MibTableColumn
vRtrOSPFActiveRoutes = _VRtrOSPFActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 7),
    _VRtrOSPFActiveRoutes_Type()
)
vRtrOSPFActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFActiveRoutes.setStatus("current")
_VRtrBGPRoutes_Type = Gauge32
_VRtrBGPRoutes_Object = MibTableColumn
vRtrBGPRoutes = _VRtrBGPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 8),
    _VRtrBGPRoutes_Type()
)
vRtrBGPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPRoutes.setStatus("current")
_VRtrBGPActiveRoutes_Type = Gauge32
_VRtrBGPActiveRoutes_Object = MibTableColumn
vRtrBGPActiveRoutes = _VRtrBGPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 9),
    _VRtrBGPActiveRoutes_Type()
)
vRtrBGPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPActiveRoutes.setStatus("current")
_VRtrISISRoutes_Type = Gauge32
_VRtrISISRoutes_Object = MibTableColumn
vRtrISISRoutes = _VRtrISISRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 10),
    _VRtrISISRoutes_Type()
)
vRtrISISRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrISISRoutes.setStatus("current")
_VRtrISISActiveRoutes_Type = Gauge32
_VRtrISISActiveRoutes_Object = MibTableColumn
vRtrISISActiveRoutes = _VRtrISISActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 11),
    _VRtrISISActiveRoutes_Type()
)
vRtrISISActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrISISActiveRoutes.setStatus("current")
_VRtrRIPRoutes_Type = Gauge32
_VRtrRIPRoutes_Object = MibTableColumn
vRtrRIPRoutes = _VRtrRIPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 12),
    _VRtrRIPRoutes_Type()
)
vRtrRIPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRIPRoutes.setStatus("current")
_VRtrRIPActiveRoutes_Type = Gauge32
_VRtrRIPActiveRoutes_Object = MibTableColumn
vRtrRIPActiveRoutes = _VRtrRIPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 13),
    _VRtrRIPActiveRoutes_Type()
)
vRtrRIPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRIPActiveRoutes.setStatus("current")
_VRtrAggregateRoutes_Type = Gauge32
_VRtrAggregateRoutes_Object = MibTableColumn
vRtrAggregateRoutes = _VRtrAggregateRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 14),
    _VRtrAggregateRoutes_Type()
)
vRtrAggregateRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAggregateRoutes.setStatus("current")
_VRtrAggregateActiveRoutes_Type = Gauge32
_VRtrAggregateActiveRoutes_Object = MibTableColumn
vRtrAggregateActiveRoutes = _VRtrAggregateActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 15),
    _VRtrAggregateActiveRoutes_Type()
)
vRtrAggregateActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAggregateActiveRoutes.setStatus("current")
_VRtrStatConfiguredIfs_Type = Gauge32
_VRtrStatConfiguredIfs_Object = MibTableColumn
vRtrStatConfiguredIfs = _VRtrStatConfiguredIfs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 16),
    _VRtrStatConfiguredIfs_Type()
)
vRtrStatConfiguredIfs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatConfiguredIfs.setStatus("current")
_VRtrStatActiveIfs_Type = Gauge32
_VRtrStatActiveIfs_Object = MibTableColumn
vRtrStatActiveIfs = _VRtrStatActiveIfs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 17),
    _VRtrStatActiveIfs_Type()
)
vRtrStatActiveIfs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveIfs.setStatus("current")
_VRtrStatIllegalLabels_Type = Counter32
_VRtrStatIllegalLabels_Object = MibTableColumn
vRtrStatIllegalLabels = _VRtrStatIllegalLabels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 18),
    _VRtrStatIllegalLabels_Type()
)
vRtrStatIllegalLabels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatIllegalLabels.setStatus("current")
_VRtrStatCurrNumRoutes_Type = Gauge32
_VRtrStatCurrNumRoutes_Object = MibTableColumn
vRtrStatCurrNumRoutes = _VRtrStatCurrNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 19),
    _VRtrStatCurrNumRoutes_Type()
)
vRtrStatCurrNumRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatCurrNumRoutes.setStatus("current")
_VRtrStatBGPVpnRoutes_Type = Gauge32
_VRtrStatBGPVpnRoutes_Object = MibTableColumn
vRtrStatBGPVpnRoutes = _VRtrStatBGPVpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 20),
    _VRtrStatBGPVpnRoutes_Type()
)
vRtrStatBGPVpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPVpnRoutes.setStatus("current")
_VRtrStatBGPVpnActiveRoutes_Type = Gauge32
_VRtrStatBGPVpnActiveRoutes_Object = MibTableColumn
vRtrStatBGPVpnActiveRoutes = _VRtrStatBGPVpnActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 21),
    _VRtrStatBGPVpnActiveRoutes_Type()
)
vRtrStatBGPVpnActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPVpnActiveRoutes.setStatus("current")
_VRtrStatTotalLdpTunnels_Type = Gauge32
_VRtrStatTotalLdpTunnels_Object = MibTableColumn
vRtrStatTotalLdpTunnels = _VRtrStatTotalLdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 22),
    _VRtrStatTotalLdpTunnels_Type()
)
vRtrStatTotalLdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalLdpTunnels.setStatus("current")
_VRtrStatTotalSdpTunnels_Type = Gauge32
_VRtrStatTotalSdpTunnels_Object = MibTableColumn
vRtrStatTotalSdpTunnels = _VRtrStatTotalSdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 23),
    _VRtrStatTotalSdpTunnels_Type()
)
vRtrStatTotalSdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSdpTunnels.setStatus("current")
_VRtrStatActiveLdpTunnels_Type = Gauge32
_VRtrStatActiveLdpTunnels_Object = MibTableColumn
vRtrStatActiveLdpTunnels = _VRtrStatActiveLdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 24),
    _VRtrStatActiveLdpTunnels_Type()
)
vRtrStatActiveLdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveLdpTunnels.setStatus("current")
_VRtrStatActiveSdpTunnels_Type = Gauge32
_VRtrStatActiveSdpTunnels_Object = MibTableColumn
vRtrStatActiveSdpTunnels = _VRtrStatActiveSdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 25),
    _VRtrStatActiveSdpTunnels_Type()
)
vRtrStatActiveSdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSdpTunnels.setStatus("current")
_VRtrMulticastRoutes_Type = Gauge32
_VRtrMulticastRoutes_Object = MibTableColumn
vRtrMulticastRoutes = _VRtrMulticastRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 26),
    _VRtrMulticastRoutes_Type()
)
vRtrMulticastRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMulticastRoutes.setStatus("current")
_VRtrStatActiveARPEntries_Type = Gauge32
_VRtrStatActiveARPEntries_Object = MibTableColumn
vRtrStatActiveARPEntries = _VRtrStatActiveARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 27),
    _VRtrStatActiveARPEntries_Type()
)
vRtrStatActiveARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveARPEntries.setStatus("current")
_VRtrStatTotalARPEntries_Type = Gauge32
_VRtrStatTotalARPEntries_Object = MibTableColumn
vRtrStatTotalARPEntries = _VRtrStatTotalARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 28),
    _VRtrStatTotalARPEntries_Type()
)
vRtrStatTotalARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalARPEntries.setStatus("current")
_VRtrV6DirectRoutes_Type = Gauge32
_VRtrV6DirectRoutes_Object = MibTableColumn
vRtrV6DirectRoutes = _VRtrV6DirectRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 29),
    _VRtrV6DirectRoutes_Type()
)
vRtrV6DirectRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6DirectRoutes.setStatus("current")
_VRtrV6DirectActiveRoutes_Type = Gauge32
_VRtrV6DirectActiveRoutes_Object = MibTableColumn
vRtrV6DirectActiveRoutes = _VRtrV6DirectActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 30),
    _VRtrV6DirectActiveRoutes_Type()
)
vRtrV6DirectActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6DirectActiveRoutes.setStatus("current")
_VRtrV6StaticRoutes_Type = Gauge32
_VRtrV6StaticRoutes_Object = MibTableColumn
vRtrV6StaticRoutes = _VRtrV6StaticRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 31),
    _VRtrV6StaticRoutes_Type()
)
vRtrV6StaticRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StaticRoutes.setStatus("current")
_VRtrV6StaticActiveRoutes_Type = Gauge32
_VRtrV6StaticActiveRoutes_Object = MibTableColumn
vRtrV6StaticActiveRoutes = _VRtrV6StaticActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 32),
    _VRtrV6StaticActiveRoutes_Type()
)
vRtrV6StaticActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StaticActiveRoutes.setStatus("current")
_VRtrV6OSPFRoutes_Type = Gauge32
_VRtrV6OSPFRoutes_Object = MibTableColumn
vRtrV6OSPFRoutes = _VRtrV6OSPFRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 33),
    _VRtrV6OSPFRoutes_Type()
)
vRtrV6OSPFRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6OSPFRoutes.setStatus("current")
_VRtrV6OSPFActiveRoutes_Type = Gauge32
_VRtrV6OSPFActiveRoutes_Object = MibTableColumn
vRtrV6OSPFActiveRoutes = _VRtrV6OSPFActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 34),
    _VRtrV6OSPFActiveRoutes_Type()
)
vRtrV6OSPFActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6OSPFActiveRoutes.setStatus("current")
_VRtrV6BGPRoutes_Type = Gauge32
_VRtrV6BGPRoutes_Object = MibTableColumn
vRtrV6BGPRoutes = _VRtrV6BGPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 35),
    _VRtrV6BGPRoutes_Type()
)
vRtrV6BGPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPRoutes.setStatus("current")
_VRtrV6BGPActiveRoutes_Type = Gauge32
_VRtrV6BGPActiveRoutes_Object = MibTableColumn
vRtrV6BGPActiveRoutes = _VRtrV6BGPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 36),
    _VRtrV6BGPActiveRoutes_Type()
)
vRtrV6BGPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPActiveRoutes.setStatus("current")
_VRtrV6ISISRoutes_Type = Gauge32
_VRtrV6ISISRoutes_Object = MibTableColumn
vRtrV6ISISRoutes = _VRtrV6ISISRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 37),
    _VRtrV6ISISRoutes_Type()
)
vRtrV6ISISRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ISISRoutes.setStatus("current")
_VRtrV6ISISActiveRoutes_Type = Gauge32
_VRtrV6ISISActiveRoutes_Object = MibTableColumn
vRtrV6ISISActiveRoutes = _VRtrV6ISISActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 38),
    _VRtrV6ISISActiveRoutes_Type()
)
vRtrV6ISISActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ISISActiveRoutes.setStatus("current")
_VRtrV6RIPRoutes_Type = Gauge32
_VRtrV6RIPRoutes_Object = MibTableColumn
vRtrV6RIPRoutes = _VRtrV6RIPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 39),
    _VRtrV6RIPRoutes_Type()
)
vRtrV6RIPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6RIPRoutes.setStatus("current")
_VRtrV6RIPActiveRoutes_Type = Gauge32
_VRtrV6RIPActiveRoutes_Object = MibTableColumn
vRtrV6RIPActiveRoutes = _VRtrV6RIPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 40),
    _VRtrV6RIPActiveRoutes_Type()
)
vRtrV6RIPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6RIPActiveRoutes.setStatus("current")
_VRtrV6AggregateRoutes_Type = Gauge32
_VRtrV6AggregateRoutes_Object = MibTableColumn
vRtrV6AggregateRoutes = _VRtrV6AggregateRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 41),
    _VRtrV6AggregateRoutes_Type()
)
vRtrV6AggregateRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6AggregateRoutes.setStatus("current")
_VRtrV6AggregateActiveRoutes_Type = Gauge32
_VRtrV6AggregateActiveRoutes_Object = MibTableColumn
vRtrV6AggregateActiveRoutes = _VRtrV6AggregateActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 42),
    _VRtrV6AggregateActiveRoutes_Type()
)
vRtrV6AggregateActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6AggregateActiveRoutes.setStatus("current")
_VRtrV6StatConfiguredIfs_Type = Gauge32
_VRtrV6StatConfiguredIfs_Object = MibTableColumn
vRtrV6StatConfiguredIfs = _VRtrV6StatConfiguredIfs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 43),
    _VRtrV6StatConfiguredIfs_Type()
)
vRtrV6StatConfiguredIfs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatConfiguredIfs.setStatus("current")
_VRtrV6StatActiveIfs_Type = Gauge32
_VRtrV6StatActiveIfs_Object = MibTableColumn
vRtrV6StatActiveIfs = _VRtrV6StatActiveIfs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 44),
    _VRtrV6StatActiveIfs_Type()
)
vRtrV6StatActiveIfs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatActiveIfs.setStatus("current")
_VRtrV6StatIllegalLabels_Type = Counter32
_VRtrV6StatIllegalLabels_Object = MibTableColumn
vRtrV6StatIllegalLabels = _VRtrV6StatIllegalLabels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 45),
    _VRtrV6StatIllegalLabels_Type()
)
vRtrV6StatIllegalLabels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatIllegalLabels.setStatus("current")
_VRtrV6StatCurrNumRoutes_Type = Gauge32
_VRtrV6StatCurrNumRoutes_Object = MibTableColumn
vRtrV6StatCurrNumRoutes = _VRtrV6StatCurrNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 46),
    _VRtrV6StatCurrNumRoutes_Type()
)
vRtrV6StatCurrNumRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatCurrNumRoutes.setStatus("current")
_VRtrV6StatBGPVpnRoutes_Type = Gauge32
_VRtrV6StatBGPVpnRoutes_Object = MibTableColumn
vRtrV6StatBGPVpnRoutes = _VRtrV6StatBGPVpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 47),
    _VRtrV6StatBGPVpnRoutes_Type()
)
vRtrV6StatBGPVpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatBGPVpnRoutes.setStatus("current")
_VRtrV6StatBGPVpnActiveRoutes_Type = Gauge32
_VRtrV6StatBGPVpnActiveRoutes_Object = MibTableColumn
vRtrV6StatBGPVpnActiveRoutes = _VRtrV6StatBGPVpnActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 48),
    _VRtrV6StatBGPVpnActiveRoutes_Type()
)
vRtrV6StatBGPVpnActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatBGPVpnActiveRoutes.setStatus("current")
_VRtrV6StatTotalLdpTunnels_Type = Gauge32
_VRtrV6StatTotalLdpTunnels_Object = MibTableColumn
vRtrV6StatTotalLdpTunnels = _VRtrV6StatTotalLdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 49),
    _VRtrV6StatTotalLdpTunnels_Type()
)
vRtrV6StatTotalLdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatTotalLdpTunnels.setStatus("current")
_VRtrV6StatTotalSdpTunnels_Type = Gauge32
_VRtrV6StatTotalSdpTunnels_Object = MibTableColumn
vRtrV6StatTotalSdpTunnels = _VRtrV6StatTotalSdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 50),
    _VRtrV6StatTotalSdpTunnels_Type()
)
vRtrV6StatTotalSdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatTotalSdpTunnels.setStatus("current")
_VRtrV6StatActiveLdpTunnels_Type = Gauge32
_VRtrV6StatActiveLdpTunnels_Object = MibTableColumn
vRtrV6StatActiveLdpTunnels = _VRtrV6StatActiveLdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 51),
    _VRtrV6StatActiveLdpTunnels_Type()
)
vRtrV6StatActiveLdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatActiveLdpTunnels.setStatus("current")
_VRtrV6StatActiveSdpTunnels_Type = Gauge32
_VRtrV6StatActiveSdpTunnels_Object = MibTableColumn
vRtrV6StatActiveSdpTunnels = _VRtrV6StatActiveSdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 52),
    _VRtrV6StatActiveSdpTunnels_Type()
)
vRtrV6StatActiveSdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatActiveSdpTunnels.setStatus("current")
_VRtrV6MulticastRoutes_Type = Gauge32
_VRtrV6MulticastRoutes_Object = MibTableColumn
vRtrV6MulticastRoutes = _VRtrV6MulticastRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 53),
    _VRtrV6MulticastRoutes_Type()
)
vRtrV6MulticastRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6MulticastRoutes.setStatus("current")
_VRtrV6StatActiveNbrEntries_Type = Gauge32
_VRtrV6StatActiveNbrEntries_Object = MibTableColumn
vRtrV6StatActiveNbrEntries = _VRtrV6StatActiveNbrEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 54),
    _VRtrV6StatActiveNbrEntries_Type()
)
vRtrV6StatActiveNbrEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatActiveNbrEntries.setStatus("current")
_VRtrV6StatTotalNbrEntries_Type = Gauge32
_VRtrV6StatTotalNbrEntries_Object = MibTableColumn
vRtrV6StatTotalNbrEntries = _VRtrV6StatTotalNbrEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 55),
    _VRtrV6StatTotalNbrEntries_Type()
)
vRtrV6StatTotalNbrEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatTotalNbrEntries.setStatus("current")
_VRtrSubMgmtRoutes_Type = Gauge32
_VRtrSubMgmtRoutes_Object = MibTableColumn
vRtrSubMgmtRoutes = _VRtrSubMgmtRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 56),
    _VRtrSubMgmtRoutes_Type()
)
vRtrSubMgmtRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSubMgmtRoutes.setStatus("current")
_VRtrSubMgmtActiveRoutes_Type = Gauge32
_VRtrSubMgmtActiveRoutes_Object = MibTableColumn
vRtrSubMgmtActiveRoutes = _VRtrSubMgmtActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 57),
    _VRtrSubMgmtActiveRoutes_Type()
)
vRtrSubMgmtActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSubMgmtActiveRoutes.setStatus("current")
_VRtrStatTotalRsvpTunnels_Type = Gauge32
_VRtrStatTotalRsvpTunnels_Object = MibTableColumn
vRtrStatTotalRsvpTunnels = _VRtrStatTotalRsvpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 58),
    _VRtrStatTotalRsvpTunnels_Type()
)
vRtrStatTotalRsvpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalRsvpTunnels.setStatus("current")
_VRtrStatActiveRsvpTunnels_Type = Gauge32
_VRtrStatActiveRsvpTunnels_Object = MibTableColumn
vRtrStatActiveRsvpTunnels = _VRtrStatActiveRsvpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 59),
    _VRtrStatActiveRsvpTunnels_Type()
)
vRtrStatActiveRsvpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveRsvpTunnels.setStatus("current")
_VRtrV6StatTotalRsvpTunnels_Type = Gauge32
_VRtrV6StatTotalRsvpTunnels_Object = MibTableColumn
vRtrV6StatTotalRsvpTunnels = _VRtrV6StatTotalRsvpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 60),
    _VRtrV6StatTotalRsvpTunnels_Type()
)
vRtrV6StatTotalRsvpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatTotalRsvpTunnels.setStatus("current")
_VRtrV6StatActiveRsvpTunnels_Type = Gauge32
_VRtrV6StatActiveRsvpTunnels_Object = MibTableColumn
vRtrV6StatActiveRsvpTunnels = _VRtrV6StatActiveRsvpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 61),
    _VRtrV6StatActiveRsvpTunnels_Type()
)
vRtrV6StatActiveRsvpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatActiveRsvpTunnels.setStatus("current")
_VRtrHostRoutes_Type = Gauge32
_VRtrHostRoutes_Object = MibTableColumn
vRtrHostRoutes = _VRtrHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 62),
    _VRtrHostRoutes_Type()
)
vRtrHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrHostRoutes.setStatus("current")
_VRtrHostActiveRoutes_Type = Gauge32
_VRtrHostActiveRoutes_Object = MibTableColumn
vRtrHostActiveRoutes = _VRtrHostActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 63),
    _VRtrHostActiveRoutes_Type()
)
vRtrHostActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrHostActiveRoutes.setStatus("current")
_VRtrV6HostRoutes_Type = Gauge32
_VRtrV6HostRoutes_Object = MibTableColumn
vRtrV6HostRoutes = _VRtrV6HostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 64),
    _VRtrV6HostRoutes_Type()
)
vRtrV6HostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6HostRoutes.setStatus("current")
_VRtrV6HostActiveRoutes_Type = Gauge32
_VRtrV6HostActiveRoutes_Object = MibTableColumn
vRtrV6HostActiveRoutes = _VRtrV6HostActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 65),
    _VRtrV6HostActiveRoutes_Type()
)
vRtrV6HostActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6HostActiveRoutes.setStatus("current")
_VRtrStatLocalARPEntries_Type = Gauge32
_VRtrStatLocalARPEntries_Object = MibTableColumn
vRtrStatLocalARPEntries = _VRtrStatLocalARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 66),
    _VRtrStatLocalARPEntries_Type()
)
vRtrStatLocalARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatLocalARPEntries.setStatus("current")
_VRtrStatStaticARPEntries_Type = Gauge32
_VRtrStatStaticARPEntries_Object = MibTableColumn
vRtrStatStaticARPEntries = _VRtrStatStaticARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 67),
    _VRtrStatStaticARPEntries_Type()
)
vRtrStatStaticARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatStaticARPEntries.setStatus("current")
_VRtrStatDynamicARPEntries_Type = Gauge32
_VRtrStatDynamicARPEntries_Object = MibTableColumn
vRtrStatDynamicARPEntries = _VRtrStatDynamicARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 68),
    _VRtrStatDynamicARPEntries_Type()
)
vRtrStatDynamicARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatDynamicARPEntries.setStatus("current")
_VRtrStatManagedARPEntries_Type = Gauge32
_VRtrStatManagedARPEntries_Object = MibTableColumn
vRtrStatManagedARPEntries = _VRtrStatManagedARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 69),
    _VRtrStatManagedARPEntries_Type()
)
vRtrStatManagedARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatManagedARPEntries.setStatus("current")
_VRtrStatInternalARPEntries_Type = Gauge32
_VRtrStatInternalARPEntries_Object = MibTableColumn
vRtrStatInternalARPEntries = _VRtrStatInternalARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 70),
    _VRtrStatInternalARPEntries_Type()
)
vRtrStatInternalARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatInternalARPEntries.setStatus("current")
_VRtrManagedRoutes_Type = Gauge32
_VRtrManagedRoutes_Object = MibTableColumn
vRtrManagedRoutes = _VRtrManagedRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 71),
    _VRtrManagedRoutes_Type()
)
vRtrManagedRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrManagedRoutes.setStatus("current")
_VRtrManagedActiveRoutes_Type = Gauge32
_VRtrManagedActiveRoutes_Object = MibTableColumn
vRtrManagedActiveRoutes = _VRtrManagedActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 72),
    _VRtrManagedActiveRoutes_Type()
)
vRtrManagedActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrManagedActiveRoutes.setStatus("current")
_VRtrLDPRoutes_Type = Gauge32
_VRtrLDPRoutes_Object = MibTableColumn
vRtrLDPRoutes = _VRtrLDPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 73),
    _VRtrLDPRoutes_Type()
)
vRtrLDPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLDPRoutes.setStatus("current")
_VRtrLDPActiveRoutes_Type = Gauge32
_VRtrLDPActiveRoutes_Object = MibTableColumn
vRtrLDPActiveRoutes = _VRtrLDPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 74),
    _VRtrLDPActiveRoutes_Type()
)
vRtrLDPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLDPActiveRoutes.setStatus("current")
_VRtrVPNLeakRoutes_Type = Gauge32
_VRtrVPNLeakRoutes_Object = MibTableColumn
vRtrVPNLeakRoutes = _VRtrVPNLeakRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 75),
    _VRtrVPNLeakRoutes_Type()
)
vRtrVPNLeakRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrVPNLeakRoutes.setStatus("current")
_VRtrVPNLeakActiveRoutes_Type = Gauge32
_VRtrVPNLeakActiveRoutes_Object = MibTableColumn
vRtrVPNLeakActiveRoutes = _VRtrVPNLeakActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 76),
    _VRtrVPNLeakActiveRoutes_Type()
)
vRtrVPNLeakActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrVPNLeakActiveRoutes.setStatus("current")
_VRtrV6VPNLeakRoutes_Type = Gauge32
_VRtrV6VPNLeakRoutes_Object = MibTableColumn
vRtrV6VPNLeakRoutes = _VRtrV6VPNLeakRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 77),
    _VRtrV6VPNLeakRoutes_Type()
)
vRtrV6VPNLeakRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6VPNLeakRoutes.setStatus("current")
_VRtrV6VPNLeakActiveRoutes_Type = Gauge32
_VRtrV6VPNLeakActiveRoutes_Object = MibTableColumn
vRtrV6VPNLeakActiveRoutes = _VRtrV6VPNLeakActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 78),
    _VRtrV6VPNLeakActiveRoutes_Type()
)
vRtrV6VPNLeakActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6VPNLeakActiveRoutes.setStatus("current")
_VRtrV6SubMgmtRoutes_Type = Gauge32
_VRtrV6SubMgmtRoutes_Object = MibTableColumn
vRtrV6SubMgmtRoutes = _VRtrV6SubMgmtRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 79),
    _VRtrV6SubMgmtRoutes_Type()
)
vRtrV6SubMgmtRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6SubMgmtRoutes.setStatus("current")
_VRtrV6SubMgmtActiveRoutes_Type = Gauge32
_VRtrV6SubMgmtActiveRoutes_Object = MibTableColumn
vRtrV6SubMgmtActiveRoutes = _VRtrV6SubMgmtActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 80),
    _VRtrV6SubMgmtActiveRoutes_Type()
)
vRtrV6SubMgmtActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6SubMgmtActiveRoutes.setStatus("current")
_VRtrMobileHostRoutes_Type = Gauge32
_VRtrMobileHostRoutes_Object = MibTableColumn
vRtrMobileHostRoutes = _VRtrMobileHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 81),
    _VRtrMobileHostRoutes_Type()
)
vRtrMobileHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMobileHostRoutes.setStatus("current")
_VRtrMobileHostActiveRoutes_Type = Gauge32
_VRtrMobileHostActiveRoutes_Object = MibTableColumn
vRtrMobileHostActiveRoutes = _VRtrMobileHostActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 82),
    _VRtrMobileHostActiveRoutes_Type()
)
vRtrMobileHostActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMobileHostActiveRoutes.setStatus("current")
_VRtrV6MobileHostRoutes_Type = Gauge32
_VRtrV6MobileHostRoutes_Object = MibTableColumn
vRtrV6MobileHostRoutes = _VRtrV6MobileHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 83),
    _VRtrV6MobileHostRoutes_Type()
)
vRtrV6MobileHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6MobileHostRoutes.setStatus("current")
_VRtrV6MobileHostActiveRoutes_Type = Gauge32
_VRtrV6MobileHostActiveRoutes_Object = MibTableColumn
vRtrV6MobileHostActiveRoutes = _VRtrV6MobileHostActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 84),
    _VRtrV6MobileHostActiveRoutes_Type()
)
vRtrV6MobileHostActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6MobileHostActiveRoutes.setStatus("current")
_VRtrStatTotalBgpTunnels_Type = Gauge32
_VRtrStatTotalBgpTunnels_Object = MibTableColumn
vRtrStatTotalBgpTunnels = _VRtrStatTotalBgpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 85),
    _VRtrStatTotalBgpTunnels_Type()
)
vRtrStatTotalBgpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalBgpTunnels.setStatus("current")
_VRtrStatActiveBgpTunnels_Type = Gauge32
_VRtrStatActiveBgpTunnels_Object = MibTableColumn
vRtrStatActiveBgpTunnels = _VRtrStatActiveBgpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 86),
    _VRtrStatActiveBgpTunnels_Type()
)
vRtrStatActiveBgpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveBgpTunnels.setStatus("current")
_VRtrNatRoutes_Type = Gauge32
_VRtrNatRoutes_Object = MibTableColumn
vRtrNatRoutes = _VRtrNatRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 87),
    _VRtrNatRoutes_Type()
)
vRtrNatRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNatRoutes.setStatus("current")
_VRtrNatActiveRoutes_Type = Gauge32
_VRtrNatActiveRoutes_Object = MibTableColumn
vRtrNatActiveRoutes = _VRtrNatActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 88),
    _VRtrNatActiveRoutes_Type()
)
vRtrNatActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNatActiveRoutes.setStatus("current")
_VRtrV6NatRoutes_Type = Gauge32
_VRtrV6NatRoutes_Object = MibTableColumn
vRtrV6NatRoutes = _VRtrV6NatRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 89),
    _VRtrV6NatRoutes_Type()
)
vRtrV6NatRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6NatRoutes.setStatus("current")
_VRtrV6NatActiveRoutes_Type = Gauge32
_VRtrV6NatActiveRoutes_Object = MibTableColumn
vRtrV6NatActiveRoutes = _VRtrV6NatActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 90),
    _VRtrV6NatActiveRoutes_Type()
)
vRtrV6NatActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6NatActiveRoutes.setStatus("current")
_VRtrPeriodicRoutes_Type = Gauge32
_VRtrPeriodicRoutes_Object = MibTableColumn
vRtrPeriodicRoutes = _VRtrPeriodicRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 91),
    _VRtrPeriodicRoutes_Type()
)
vRtrPeriodicRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPeriodicRoutes.setStatus("current")
_VRtrPeriodicActiveRoutes_Type = Gauge32
_VRtrPeriodicActiveRoutes_Object = MibTableColumn
vRtrPeriodicActiveRoutes = _VRtrPeriodicActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 92),
    _VRtrPeriodicActiveRoutes_Type()
)
vRtrPeriodicActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPeriodicActiveRoutes.setStatus("current")
_VRtrV6PeriodicRoutes_Type = Gauge32
_VRtrV6PeriodicRoutes_Object = MibTableColumn
vRtrV6PeriodicRoutes = _VRtrV6PeriodicRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 93),
    _VRtrV6PeriodicRoutes_Type()
)
vRtrV6PeriodicRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6PeriodicRoutes.setStatus("current")
_VRtrV6PeriodicActiveRoutes_Type = Gauge32
_VRtrV6PeriodicActiveRoutes_Object = MibTableColumn
vRtrV6PeriodicActiveRoutes = _VRtrV6PeriodicActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 94),
    _VRtrV6PeriodicActiveRoutes_Type()
)
vRtrV6PeriodicActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6PeriodicActiveRoutes.setStatus("current")
_VRtrV6ManagedRoutes_Type = Gauge32
_VRtrV6ManagedRoutes_Object = MibTableColumn
vRtrV6ManagedRoutes = _VRtrV6ManagedRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 95),
    _VRtrV6ManagedRoutes_Type()
)
vRtrV6ManagedRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ManagedRoutes.setStatus("current")
_VRtrV6ManagedActiveRoutes_Type = Gauge32
_VRtrV6ManagedActiveRoutes_Object = MibTableColumn
vRtrV6ManagedActiveRoutes = _VRtrV6ManagedActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 96),
    _VRtrV6ManagedActiveRoutes_Type()
)
vRtrV6ManagedActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ManagedActiveRoutes.setStatus("current")
_VRtrStatTotalMplsTpTunnels_Type = Gauge32
_VRtrStatTotalMplsTpTunnels_Object = MibTableColumn
vRtrStatTotalMplsTpTunnels = _VRtrStatTotalMplsTpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 97),
    _VRtrStatTotalMplsTpTunnels_Type()
)
vRtrStatTotalMplsTpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalMplsTpTunnels.setStatus("current")
_VRtrStatActiveMplsTpTunnels_Type = Gauge32
_VRtrStatActiveMplsTpTunnels_Object = MibTableColumn
vRtrStatActiveMplsTpTunnels = _VRtrStatActiveMplsTpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 98),
    _VRtrStatActiveMplsTpTunnels_Type()
)
vRtrStatActiveMplsTpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveMplsTpTunnels.setStatus("current")
_VRtrV6Dhcpv6PdRoutes_Type = Gauge32
_VRtrV6Dhcpv6PdRoutes_Object = MibTableColumn
vRtrV6Dhcpv6PdRoutes = _VRtrV6Dhcpv6PdRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 99),
    _VRtrV6Dhcpv6PdRoutes_Type()
)
vRtrV6Dhcpv6PdRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6PdRoutes.setStatus("current")
_VRtrV6Dhcpv6PdActiveRoutes_Type = Gauge32
_VRtrV6Dhcpv6PdActiveRoutes_Object = MibTableColumn
vRtrV6Dhcpv6PdActiveRoutes = _VRtrV6Dhcpv6PdActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 100),
    _VRtrV6Dhcpv6PdActiveRoutes_Type()
)
vRtrV6Dhcpv6PdActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6PdActiveRoutes.setStatus("current")
_VRtrV6Dhcpv6NaRoutes_Type = Gauge32
_VRtrV6Dhcpv6NaRoutes_Object = MibTableColumn
vRtrV6Dhcpv6NaRoutes = _VRtrV6Dhcpv6NaRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 101),
    _VRtrV6Dhcpv6NaRoutes_Type()
)
vRtrV6Dhcpv6NaRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6NaRoutes.setStatus("current")
_VRtrV6Dhcpv6NaActiveRoutes_Type = Gauge32
_VRtrV6Dhcpv6NaActiveRoutes_Object = MibTableColumn
vRtrV6Dhcpv6NaActiveRoutes = _VRtrV6Dhcpv6NaActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 102),
    _VRtrV6Dhcpv6NaActiveRoutes_Type()
)
vRtrV6Dhcpv6NaActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6NaActiveRoutes.setStatus("current")
_VRtrV6Dhcpv6TaRoutes_Type = Gauge32
_VRtrV6Dhcpv6TaRoutes_Object = MibTableColumn
vRtrV6Dhcpv6TaRoutes = _VRtrV6Dhcpv6TaRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 103),
    _VRtrV6Dhcpv6TaRoutes_Type()
)
vRtrV6Dhcpv6TaRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6TaRoutes.setStatus("current")
_VRtrV6Dhcpv6TaActiveRoutes_Type = Gauge32
_VRtrV6Dhcpv6TaActiveRoutes_Object = MibTableColumn
vRtrV6Dhcpv6TaActiveRoutes = _VRtrV6Dhcpv6TaActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 104),
    _VRtrV6Dhcpv6TaActiveRoutes_Type()
)
vRtrV6Dhcpv6TaActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6TaActiveRoutes.setStatus("current")
_VRtrV6Dhcpv6PdExclRoutes_Type = Gauge32
_VRtrV6Dhcpv6PdExclRoutes_Object = MibTableColumn
vRtrV6Dhcpv6PdExclRoutes = _VRtrV6Dhcpv6PdExclRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 105),
    _VRtrV6Dhcpv6PdExclRoutes_Type()
)
vRtrV6Dhcpv6PdExclRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6PdExclRoutes.setStatus("current")
_VRtrV6Dhcpv6PdExclActiveRoutes_Type = Gauge32
_VRtrV6Dhcpv6PdExclActiveRoutes_Object = MibTableColumn
vRtrV6Dhcpv6PdExclActiveRoutes = _VRtrV6Dhcpv6PdExclActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 106),
    _VRtrV6Dhcpv6PdExclActiveRoutes_Type()
)
vRtrV6Dhcpv6PdExclActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6Dhcpv6PdExclActiveRoutes.setStatus("current")
_VRtrIPsecRoutes_Type = Gauge32
_VRtrIPsecRoutes_Object = MibTableColumn
vRtrIPsecRoutes = _VRtrIPsecRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 107),
    _VRtrIPsecRoutes_Type()
)
vRtrIPsecRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIPsecRoutes.setStatus("current")
_VRtrIPsecActiveRoutes_Type = Gauge32
_VRtrIPsecActiveRoutes_Object = MibTableColumn
vRtrIPsecActiveRoutes = _VRtrIPsecActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 108),
    _VRtrIPsecActiveRoutes_Type()
)
vRtrIPsecActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIPsecActiveRoutes.setStatus("current")
_VRtrStatBGPEVPNARPEntries_Type = Gauge32
_VRtrStatBGPEVPNARPEntries_Object = MibTableColumn
vRtrStatBGPEVPNARPEntries = _VRtrStatBGPEVPNARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 109),
    _VRtrStatBGPEVPNARPEntries_Type()
)
vRtrStatBGPEVPNARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPEVPNARPEntries.setStatus("current")
_VRtrStatBGPEvpnRoutes_Type = Gauge32
_VRtrStatBGPEvpnRoutes_Object = MibTableColumn
vRtrStatBGPEvpnRoutes = _VRtrStatBGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 110),
    _VRtrStatBGPEvpnRoutes_Type()
)
vRtrStatBGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPEvpnRoutes.setStatus("obsolete")
_VRtrStatBGPEvpnActiveRoutes_Type = Gauge32
_VRtrStatBGPEvpnActiveRoutes_Object = MibTableColumn
vRtrStatBGPEvpnActiveRoutes = _VRtrStatBGPEvpnActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 111),
    _VRtrStatBGPEvpnActiveRoutes_Type()
)
vRtrStatBGPEvpnActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPEvpnActiveRoutes.setStatus("obsolete")
_VRtrV6StatBGPEvpnRoutes_Type = Gauge32
_VRtrV6StatBGPEvpnRoutes_Object = MibTableColumn
vRtrV6StatBGPEvpnRoutes = _VRtrV6StatBGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 112),
    _VRtrV6StatBGPEvpnRoutes_Type()
)
vRtrV6StatBGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatBGPEvpnRoutes.setStatus("obsolete")
_VRtrV6StatBGPEvpnActiveRoutes_Type = Gauge32
_VRtrV6StatBGPEvpnActiveRoutes_Object = MibTableColumn
vRtrV6StatBGPEvpnActiveRoutes = _VRtrV6StatBGPEvpnActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 113),
    _VRtrV6StatBGPEvpnActiveRoutes_Type()
)
vRtrV6StatBGPEvpnActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatBGPEvpnActiveRoutes.setStatus("obsolete")
_VRtrMcastIpv4StatBGPEvpnRoutes_Type = Gauge32
_VRtrMcastIpv4StatBGPEvpnRoutes_Object = MibTableColumn
vRtrMcastIpv4StatBGPEvpnRoutes = _VRtrMcastIpv4StatBGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 114),
    _VRtrMcastIpv4StatBGPEvpnRoutes_Type()
)
vRtrMcastIpv4StatBGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMcastIpv4StatBGPEvpnRoutes.setStatus("obsolete")
_VRtrMcastIpv4StatBGPEvpnActvRts_Type = Gauge32
_VRtrMcastIpv4StatBGPEvpnActvRts_Object = MibTableColumn
vRtrMcastIpv4StatBGPEvpnActvRts = _VRtrMcastIpv4StatBGPEvpnActvRts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 115),
    _VRtrMcastIpv4StatBGPEvpnActvRts_Type()
)
vRtrMcastIpv4StatBGPEvpnActvRts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMcastIpv4StatBGPEvpnActvRts.setStatus("obsolete")
_VRtrMcastIpv6StatBGPEvpnRoutes_Type = Gauge32
_VRtrMcastIpv6StatBGPEvpnRoutes_Object = MibTableColumn
vRtrMcastIpv6StatBGPEvpnRoutes = _VRtrMcastIpv6StatBGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 116),
    _VRtrMcastIpv6StatBGPEvpnRoutes_Type()
)
vRtrMcastIpv6StatBGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMcastIpv6StatBGPEvpnRoutes.setStatus("obsolete")
_VRtrMcastIpv6StatBGPEvpnActvRts_Type = Gauge32
_VRtrMcastIpv6StatBGPEvpnActvRts_Object = MibTableColumn
vRtrMcastIpv6StatBGPEvpnActvRts = _VRtrMcastIpv6StatBGPEvpnActvRts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 117),
    _VRtrMcastIpv6StatBGPEvpnActvRts_Type()
)
vRtrMcastIpv6StatBGPEvpnActvRts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMcastIpv6StatBGPEvpnActvRts.setStatus("obsolete")
_VRtrV6IPsecRoutes_Type = Gauge32
_VRtrV6IPsecRoutes_Object = MibTableColumn
vRtrV6IPsecRoutes = _VRtrV6IPsecRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 118),
    _VRtrV6IPsecRoutes_Type()
)
vRtrV6IPsecRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6IPsecRoutes.setStatus("current")
_VRtrV6IPsecActiveRoutes_Type = Gauge32
_VRtrV6IPsecActiveRoutes_Object = MibTableColumn
vRtrV6IPsecActiveRoutes = _VRtrV6IPsecActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 119),
    _VRtrV6IPsecActiveRoutes_Type()
)
vRtrV6IPsecActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6IPsecActiveRoutes.setStatus("current")
_VRtrStatBGPLabelV4Routes_Type = Gauge32
_VRtrStatBGPLabelV4Routes_Object = MibTableColumn
vRtrStatBGPLabelV4Routes = _VRtrStatBGPLabelV4Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 120),
    _VRtrStatBGPLabelV4Routes_Type()
)
vRtrStatBGPLabelV4Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPLabelV4Routes.setStatus("current")
_VRtrStatBGPLabelV4ActiveRoutes_Type = Gauge32
_VRtrStatBGPLabelV4ActiveRoutes_Object = MibTableColumn
vRtrStatBGPLabelV4ActiveRoutes = _VRtrStatBGPLabelV4ActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 121),
    _VRtrStatBGPLabelV4ActiveRoutes_Type()
)
vRtrStatBGPLabelV4ActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPLabelV4ActiveRoutes.setStatus("current")
_VRtrStatBGPLabelV6Routes_Type = Gauge32
_VRtrStatBGPLabelV6Routes_Object = MibTableColumn
vRtrStatBGPLabelV6Routes = _VRtrStatBGPLabelV6Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 122),
    _VRtrStatBGPLabelV6Routes_Type()
)
vRtrStatBGPLabelV6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPLabelV6Routes.setStatus("current")
_VRtrStatBGPLabelV6ActiveRoutes_Type = Gauge32
_VRtrStatBGPLabelV6ActiveRoutes_Object = MibTableColumn
vRtrStatBGPLabelV6ActiveRoutes = _VRtrStatBGPLabelV6ActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 123),
    _VRtrStatBGPLabelV6ActiveRoutes_Type()
)
vRtrStatBGPLabelV6ActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatBGPLabelV6ActiveRoutes.setStatus("current")
_VRtrStatTotalBgpEpeTunnels_Type = Gauge32
_VRtrStatTotalBgpEpeTunnels_Object = MibTableColumn
vRtrStatTotalBgpEpeTunnels = _VRtrStatTotalBgpEpeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 124),
    _VRtrStatTotalBgpEpeTunnels_Type()
)
vRtrStatTotalBgpEpeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalBgpEpeTunnels.setStatus("current")
_VRtrStatActiveBgpEpeTunnels_Type = Gauge32
_VRtrStatActiveBgpEpeTunnels_Object = MibTableColumn
vRtrStatActiveBgpEpeTunnels = _VRtrStatActiveBgpEpeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 125),
    _VRtrStatActiveBgpEpeTunnels_Type()
)
vRtrStatActiveBgpEpeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveBgpEpeTunnels.setStatus("current")
_VRtrStatTotalBgpEpeV6Tunnels_Type = Gauge32
_VRtrStatTotalBgpEpeV6Tunnels_Object = MibTableColumn
vRtrStatTotalBgpEpeV6Tunnels = _VRtrStatTotalBgpEpeV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 126),
    _VRtrStatTotalBgpEpeV6Tunnels_Type()
)
vRtrStatTotalBgpEpeV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalBgpEpeV6Tunnels.setStatus("current")
_VRtrStatActiveBgpEpeV6Tunnels_Type = Gauge32
_VRtrStatActiveBgpEpeV6Tunnels_Object = MibTableColumn
vRtrStatActiveBgpEpeV6Tunnels = _VRtrStatActiveBgpEpeV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 127),
    _VRtrStatActiveBgpEpeV6Tunnels_Type()
)
vRtrStatActiveBgpEpeV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveBgpEpeV6Tunnels.setStatus("current")
_VRtrStatTotalBgpV6Tunnels_Type = Gauge32
_VRtrStatTotalBgpV6Tunnels_Object = MibTableColumn
vRtrStatTotalBgpV6Tunnels = _VRtrStatTotalBgpV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 128),
    _VRtrStatTotalBgpV6Tunnels_Type()
)
vRtrStatTotalBgpV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalBgpV6Tunnels.setStatus("current")
_VRtrStatActiveBgpV6Tunnels_Type = Gauge32
_VRtrStatActiveBgpV6Tunnels_Object = MibTableColumn
vRtrStatActiveBgpV6Tunnels = _VRtrStatActiveBgpV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 2, 1, 129),
    _VRtrStatActiveBgpV6Tunnels_Type()
)
vRtrStatActiveBgpV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveBgpV6Tunnels.setStatus("current")


class _VRtrIfTotalNumber_Type(Integer32):
    """Custom type vRtrIfTotalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrIfTotalNumber_Type.__name__ = "Integer32"
_VRtrIfTotalNumber_Object = MibScalar
vRtrIfTotalNumber = _VRtrIfTotalNumber_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 3),
    _VRtrIfTotalNumber_Type()
)
vRtrIfTotalNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTotalNumber.setStatus("current")
_VRtrIfTable_Object = MibTable
vRtrIfTable = _VRtrIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4)
)
if mibBuilder.loadTexts:
    vRtrIfTable.setStatus("current")
_VRtrIfEntry_Object = MibTableRow
vRtrIfEntry = _VRtrIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1)
)
vRtrIfEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfEntry.setStatus("current")
_VRtrIfIndex_Type = InterfaceIndex
_VRtrIfIndex_Object = MibTableColumn
vRtrIfIndex = _VRtrIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 1),
    _VRtrIfIndex_Type()
)
vRtrIfIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrIfIndex.setStatus("current")
_VRtrIfRowStatus_Type = RowStatus
_VRtrIfRowStatus_Object = MibTableColumn
vRtrIfRowStatus = _VRtrIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 2),
    _VRtrIfRowStatus_Type()
)
vRtrIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfRowStatus.setStatus("current")


class _VRtrIfType_Type(Integer32):
    """Custom type vRtrIfType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("network", 1),
          ("service", 2),
          ("serviceIes", 3),
          ("serviceRtdVpls", 4),
          ("serviceVprn", 5),
          ("serviceIesSubscriber", 6),
          ("serviceIesGroup", 7),
          ("serviceVprnSubscriber", 8),
          ("serviceVprnGroup", 9),
          ("serviceIesRedundant", 10),
          ("serviceVprnRedundant", 11),
          ("serviceVpls", 12),
          ("serviceIesCem", 13),
          ("serviceVprnCem", 14),
          ("serviceVprnIPsec", 15),
          ("serviceVprnIPMirror", 16),
          ("serviceVideo", 17),
          ("serviceVplsVideo", 18),
          ("multiHomingPrimary", 19),
          ("multiHomingSecondary", 20),
          ("serviceIesTunnel", 21),
          ("serviceIpReas", 22),
          ("networkIpReas", 23),
          ("networkVprn", 24),
          ("reserved25", 25),
          ("serviceIesAarp", 26),
          ("serviceVprnAarp", 27),
          ("serviceIesAa", 28),
          ("serviceVprnAa", 29),
          ("unnumMplsTp", 30),
          ("gmplsLoopback", 31),
          ("controlTunnel", 32),
          ("pdn", 33))
    )


_VRtrIfType_Type.__name__ = "Integer32"
_VRtrIfType_Object = MibTableColumn
vRtrIfType = _VRtrIfType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 3),
    _VRtrIfType_Type()
)
vRtrIfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfType.setStatus("current")
_VRtrIfName_Type = TNamedItem
_VRtrIfName_Object = MibTableColumn
vRtrIfName = _VRtrIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 4),
    _VRtrIfName_Type()
)
vRtrIfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfName.setStatus("current")


class _VRtrIfPortID_Type(TmnxPortID):
    """Custom type vRtrIfPortID based on TmnxPortID"""
    defaultValue = 0


_VRtrIfPortID_Type.__name__ = "TmnxPortID"
_VRtrIfPortID_Object = MibTableColumn
vRtrIfPortID = _VRtrIfPortID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 5),
    _VRtrIfPortID_Type()
)
vRtrIfPortID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfPortID.setStatus("current")


class _VRtrIfChannelID_Type(Unsigned32):
    """Custom type vRtrIfChannelID based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_VRtrIfChannelID_Type.__name__ = "Unsigned32"
_VRtrIfChannelID_Object = MibTableColumn
vRtrIfChannelID = _VRtrIfChannelID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 6),
    _VRtrIfChannelID_Type()
)
vRtrIfChannelID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfChannelID.setStatus("obsolete")


class _VRtrIfEncapValue_Type(TmnxEncapVal):
    """Custom type vRtrIfEncapValue based on TmnxEncapVal"""
    defaultValue = 0


_VRtrIfEncapValue_Type.__name__ = "TmnxEncapVal"
_VRtrIfEncapValue_Object = MibTableColumn
vRtrIfEncapValue = _VRtrIfEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 7),
    _VRtrIfEncapValue_Type()
)
vRtrIfEncapValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEncapValue.setStatus("current")


class _VRtrIfAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfAdminState based on TmnxAdminState"""
    defaultValue = 2


_VRtrIfAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfAdminState_Object = MibTableColumn
vRtrIfAdminState = _VRtrIfAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 8),
    _VRtrIfAdminState_Type()
)
vRtrIfAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAdminState.setStatus("current")
_VRtrIfOperState_Type = TmnxOperState
_VRtrIfOperState_Object = MibTableColumn
vRtrIfOperState = _VRtrIfOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 9),
    _VRtrIfOperState_Type()
)
vRtrIfOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperState.setStatus("current")


class _VRtrIfAlias_Type(DisplayString):
    """Custom type vRtrIfAlias based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrIfAlias_Type.__name__ = "DisplayString"
_VRtrIfAlias_Object = MibTableColumn
vRtrIfAlias = _VRtrIfAlias_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 10),
    _VRtrIfAlias_Type()
)
vRtrIfAlias.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAlias.setStatus("obsolete")


class _VRtrIfPhysicalAddress_Type(MacAddress):
    """Custom type vRtrIfPhysicalAddress based on MacAddress"""
    defaultHexValue = "000000000000"


_VRtrIfPhysicalAddress_Type.__name__ = "MacAddress"
_VRtrIfPhysicalAddress_Object = MibTableColumn
vRtrIfPhysicalAddress = _VRtrIfPhysicalAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 11),
    _VRtrIfPhysicalAddress_Type()
)
vRtrIfPhysicalAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfPhysicalAddress.setStatus("current")


class _VRtrIfArpTimeout_Type(Unsigned32):
    """Custom type vRtrIfArpTimeout based on Unsigned32"""
    defaultValue = 14400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrIfArpTimeout_Type.__name__ = "Unsigned32"
_VRtrIfArpTimeout_Object = MibTableColumn
vRtrIfArpTimeout = _VRtrIfArpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 12),
    _VRtrIfArpTimeout_Type()
)
vRtrIfArpTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpTimeout.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfArpTimeout.setUnits("seconds")


class _VRtrIfIcmpMaskReply_Type(TruthValue):
    """Custom type vRtrIfIcmpMaskReply based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpMaskReply_Type.__name__ = "TruthValue"
_VRtrIfIcmpMaskReply_Object = MibTableColumn
vRtrIfIcmpMaskReply = _VRtrIfIcmpMaskReply_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 13),
    _VRtrIfIcmpMaskReply_Type()
)
vRtrIfIcmpMaskReply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpMaskReply.setStatus("current")


class _VRtrIfIcmpRedirects_Type(TruthValue):
    """Custom type vRtrIfIcmpRedirects based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpRedirects_Type.__name__ = "TruthValue"
_VRtrIfIcmpRedirects_Object = MibTableColumn
vRtrIfIcmpRedirects = _VRtrIfIcmpRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 14),
    _VRtrIfIcmpRedirects_Type()
)
vRtrIfIcmpRedirects.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpRedirects.setStatus("current")


class _VRtrIfIcmpNumRedirects_Type(Unsigned32):
    """Custom type vRtrIfIcmpNumRedirects based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_VRtrIfIcmpNumRedirects_Type.__name__ = "Unsigned32"
_VRtrIfIcmpNumRedirects_Object = MibTableColumn
vRtrIfIcmpNumRedirects = _VRtrIfIcmpNumRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 15),
    _VRtrIfIcmpNumRedirects_Type()
)
vRtrIfIcmpNumRedirects.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpNumRedirects.setStatus("current")


class _VRtrIfIcmpRedirectsTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpRedirectsTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpRedirectsTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpRedirectsTime_Object = MibTableColumn
vRtrIfIcmpRedirectsTime = _VRtrIfIcmpRedirectsTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 16),
    _VRtrIfIcmpRedirectsTime_Type()
)
vRtrIfIcmpRedirectsTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpRedirectsTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpRedirectsTime.setUnits("seconds")


class _VRtrIfIcmpUnreachables_Type(TruthValue):
    """Custom type vRtrIfIcmpUnreachables based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpUnreachables_Type.__name__ = "TruthValue"
_VRtrIfIcmpUnreachables_Object = MibTableColumn
vRtrIfIcmpUnreachables = _VRtrIfIcmpUnreachables_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 17),
    _VRtrIfIcmpUnreachables_Type()
)
vRtrIfIcmpUnreachables.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpUnreachables.setStatus("current")


class _VRtrIfIcmpNumUnreachables_Type(Unsigned32):
    """Custom type vRtrIfIcmpNumUnreachables based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_VRtrIfIcmpNumUnreachables_Type.__name__ = "Unsigned32"
_VRtrIfIcmpNumUnreachables_Object = MibTableColumn
vRtrIfIcmpNumUnreachables = _VRtrIfIcmpNumUnreachables_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 18),
    _VRtrIfIcmpNumUnreachables_Type()
)
vRtrIfIcmpNumUnreachables.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpNumUnreachables.setStatus("current")


class _VRtrIfIcmpUnreachablesTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpUnreachablesTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpUnreachablesTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpUnreachablesTime_Object = MibTableColumn
vRtrIfIcmpUnreachablesTime = _VRtrIfIcmpUnreachablesTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 19),
    _VRtrIfIcmpUnreachablesTime_Type()
)
vRtrIfIcmpUnreachablesTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpUnreachablesTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpUnreachablesTime.setUnits("seconds")


class _VRtrIfIcmpTtlExpired_Type(TruthValue):
    """Custom type vRtrIfIcmpTtlExpired based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpTtlExpired_Type.__name__ = "TruthValue"
_VRtrIfIcmpTtlExpired_Object = MibTableColumn
vRtrIfIcmpTtlExpired = _VRtrIfIcmpTtlExpired_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 20),
    _VRtrIfIcmpTtlExpired_Type()
)
vRtrIfIcmpTtlExpired.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpTtlExpired.setStatus("current")


class _VRtrIfIcmpNumTtlExpired_Type(Unsigned32):
    """Custom type vRtrIfIcmpNumTtlExpired based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_VRtrIfIcmpNumTtlExpired_Type.__name__ = "Unsigned32"
_VRtrIfIcmpNumTtlExpired_Object = MibTableColumn
vRtrIfIcmpNumTtlExpired = _VRtrIfIcmpNumTtlExpired_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 21),
    _VRtrIfIcmpNumTtlExpired_Type()
)
vRtrIfIcmpNumTtlExpired.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpNumTtlExpired.setStatus("current")


class _VRtrIfIcmpTtlExpiredTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpTtlExpiredTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpTtlExpiredTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpTtlExpiredTime_Object = MibTableColumn
vRtrIfIcmpTtlExpiredTime = _VRtrIfIcmpTtlExpiredTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 22),
    _VRtrIfIcmpTtlExpiredTime_Type()
)
vRtrIfIcmpTtlExpiredTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpTtlExpiredTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpTtlExpiredTime.setUnits("seconds")


class _VRtrIfNtpBroadcast_Type(TruthValue):
    """Custom type vRtrIfNtpBroadcast based on TruthValue"""
    defaultValue = 2


_VRtrIfNtpBroadcast_Type.__name__ = "TruthValue"
_VRtrIfNtpBroadcast_Object = MibTableColumn
vRtrIfNtpBroadcast = _VRtrIfNtpBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 23),
    _VRtrIfNtpBroadcast_Type()
)
vRtrIfNtpBroadcast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfNtpBroadcast.setStatus("obsolete")


class _VRtrIfUnnumbered_Type(IpAddress):
    """Custom type vRtrIfUnnumbered based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfUnnumbered_Type.__name__ = "IpAddress"
_VRtrIfUnnumbered_Object = MibTableColumn
vRtrIfUnnumbered = _VRtrIfUnnumbered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 24),
    _VRtrIfUnnumbered_Type()
)
vRtrIfUnnumbered.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfUnnumbered.setStatus("current")


class _VRtrIfMtu_Type(Unsigned32):
    """Custom type vRtrIfMtu based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(512, 9786),
    )


_VRtrIfMtu_Type.__name__ = "Unsigned32"
_VRtrIfMtu_Object = MibTableColumn
vRtrIfMtu = _VRtrIfMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 25),
    _VRtrIfMtu_Type()
)
vRtrIfMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfMtu.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfMtu.setUnits("bytes")


class _VRtrIfQosPolicyId_Type(TNetworkPolicyID):
    """Custom type vRtrIfQosPolicyId based on TNetworkPolicyID"""
    defaultValue = 1


_VRtrIfQosPolicyId_Type.__name__ = "TNetworkPolicyID"
_VRtrIfQosPolicyId_Object = MibTableColumn
vRtrIfQosPolicyId = _VRtrIfQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 26),
    _VRtrIfQosPolicyId_Type()
)
vRtrIfQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosPolicyId.setStatus("obsolete")


class _VRtrIfIngressFilterId_Type(TFilterID):
    """Custom type vRtrIfIngressFilterId based on TFilterID"""
    defaultValue = 0


_VRtrIfIngressFilterId_Type.__name__ = "TFilterID"
_VRtrIfIngressFilterId_Object = MibTableColumn
vRtrIfIngressFilterId = _VRtrIfIngressFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 27),
    _VRtrIfIngressFilterId_Type()
)
vRtrIfIngressFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngressFilterId.setStatus("current")


class _VRtrIfEgressFilterId_Type(TFilterID):
    """Custom type vRtrIfEgressFilterId based on TFilterID"""
    defaultValue = 0


_VRtrIfEgressFilterId_Type.__name__ = "TFilterID"
_VRtrIfEgressFilterId_Object = MibTableColumn
vRtrIfEgressFilterId = _VRtrIfEgressFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 28),
    _VRtrIfEgressFilterId_Type()
)
vRtrIfEgressFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEgressFilterId.setStatus("current")


class _VRtrIfDirectedBroadcast_Type(TruthValue):
    """Custom type vRtrIfDirectedBroadcast based on TruthValue"""
    defaultValue = 2


_VRtrIfDirectedBroadcast_Type.__name__ = "TruthValue"
_VRtrIfDirectedBroadcast_Object = MibTableColumn
vRtrIfDirectedBroadcast = _VRtrIfDirectedBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 29),
    _VRtrIfDirectedBroadcast_Type()
)
vRtrIfDirectedBroadcast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDirectedBroadcast.setStatus("current")


class _VRtrIfMplsStatus_Type(TmnxStatus):
    """Custom type vRtrIfMplsStatus based on TmnxStatus"""
    defaultValue = 2


_VRtrIfMplsStatus_Type.__name__ = "TmnxStatus"
_VRtrIfMplsStatus_Object = MibTableColumn
vRtrIfMplsStatus = _VRtrIfMplsStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 30),
    _VRtrIfMplsStatus_Type()
)
vRtrIfMplsStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfMplsStatus.setStatus("current")


class _VRtrIfUnnumberedIf_Type(DisplayString):
    """Custom type vRtrIfUnnumberedIf based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrIfUnnumberedIf_Type.__name__ = "DisplayString"
_VRtrIfUnnumberedIf_Object = MibTableColumn
vRtrIfUnnumberedIf = _VRtrIfUnnumberedIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 31),
    _VRtrIfUnnumberedIf_Type()
)
vRtrIfUnnumberedIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfUnnumberedIf.setStatus("current")


class _VRtrIfCflowd_Type(Integer32):
    """Custom type vRtrIfCflowd based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("aclIngressOnly", 2),
          ("interfaceIngressOnly", 3),
          ("aclEgressOnly", 4),
          ("interfaceEgressOnly", 5),
          ("aclIngressEgress", 6),
          ("interfaceIngressEgress", 7))
    )


_VRtrIfCflowd_Type.__name__ = "Integer32"
_VRtrIfCflowd_Object = MibTableColumn
vRtrIfCflowd = _VRtrIfCflowd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 32),
    _VRtrIfCflowd_Type()
)
vRtrIfCflowd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfCflowd.setStatus("obsolete")


class _VRtrIfVPNClass_Type(Integer32):
    """Custom type vRtrIfVPNClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("carrierOfCarrier", 1),
          ("enterprise", 2),
          ("interProvider", 3))
    )


_VRtrIfVPNClass_Type.__name__ = "Integer32"
_VRtrIfVPNClass_Object = MibTableColumn
vRtrIfVPNClass = _VRtrIfVPNClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 33),
    _VRtrIfVPNClass_Type()
)
vRtrIfVPNClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfVPNClass.setStatus("current")


class _VRtrIfDescription_Type(TItemLongDescription):
    """Custom type vRtrIfDescription based on TItemLongDescription"""
    defaultHexValue = ""


_VRtrIfDescription_Type.__name__ = "TItemLongDescription"
_VRtrIfDescription_Object = MibTableColumn
vRtrIfDescription = _VRtrIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 34),
    _VRtrIfDescription_Type()
)
vRtrIfDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDescription.setStatus("current")


class _VRtrIfProtocol_Type(Bits):
    """Custom type vRtrIfProtocol based on Bits"""
    namedValues = NamedValues(
        *(("ospfv2", 0),
          ("rip", 1),
          ("isis", 2),
          ("bgp", 3),
          ("mpls", 4),
          ("rsvp", 5),
          ("ldp", 6),
          ("igmp", 7),
          ("pim", 8),
          ("ospf3", 9),
          ("mld", 10),
          ("ripng", 11))
    )

_VRtrIfProtocol_Type.__name__ = "Bits"
_VRtrIfProtocol_Object = MibTableColumn
vRtrIfProtocol = _VRtrIfProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 35),
    _VRtrIfProtocol_Type()
)
vRtrIfProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfProtocol.setStatus("current")


class _VRtrIfTosMarkingTrusted_Type(TruthValue):
    """Custom type vRtrIfTosMarkingTrusted based on TruthValue"""
    defaultValue = 1


_VRtrIfTosMarkingTrusted_Type.__name__ = "TruthValue"
_VRtrIfTosMarkingTrusted_Object = MibTableColumn
vRtrIfTosMarkingTrusted = _VRtrIfTosMarkingTrusted_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 36),
    _VRtrIfTosMarkingTrusted_Type()
)
vRtrIfTosMarkingTrusted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTosMarkingTrusted.setStatus("current")


class _VRtrIfServiceId_Type(TmnxServId):
    """Custom type vRtrIfServiceId based on TmnxServId"""
    defaultValue = 0


_VRtrIfServiceId_Type.__name__ = "TmnxServId"
_VRtrIfServiceId_Object = MibTableColumn
vRtrIfServiceId = _VRtrIfServiceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 37),
    _VRtrIfServiceId_Type()
)
vRtrIfServiceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfServiceId.setStatus("current")


class _VRtrIfArpPopulate_Type(Integer32):
    """Custom type vRtrIfArpPopulate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_VRtrIfArpPopulate_Type.__name__ = "Integer32"
_VRtrIfArpPopulate_Object = MibTableColumn
vRtrIfArpPopulate = _VRtrIfArpPopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 38),
    _VRtrIfArpPopulate_Type()
)
vRtrIfArpPopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpPopulate.setStatus("current")


class _VRtrIfIPv6ConfigAllowed_Type(TruthValue):
    """Custom type vRtrIfIPv6ConfigAllowed based on TruthValue"""
    defaultValue = 2


_VRtrIfIPv6ConfigAllowed_Type.__name__ = "TruthValue"
_VRtrIfIPv6ConfigAllowed_Object = MibTableColumn
vRtrIfIPv6ConfigAllowed = _VRtrIfIPv6ConfigAllowed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 39),
    _VRtrIfIPv6ConfigAllowed_Type()
)
vRtrIfIPv6ConfigAllowed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIPv6ConfigAllowed.setStatus("current")
_VRtrIfIPv6OperState_Type = TmnxOperState
_VRtrIfIPv6OperState_Object = MibTableColumn
vRtrIfIPv6OperState = _VRtrIfIPv6OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 40),
    _VRtrIfIPv6OperState_Type()
)
vRtrIfIPv6OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIPv6OperState.setStatus("current")


class _VRtrIfIPv6IngressFilterId_Type(TFilterID):
    """Custom type vRtrIfIPv6IngressFilterId based on TFilterID"""
    defaultValue = 0


_VRtrIfIPv6IngressFilterId_Type.__name__ = "TFilterID"
_VRtrIfIPv6IngressFilterId_Object = MibTableColumn
vRtrIfIPv6IngressFilterId = _VRtrIfIPv6IngressFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 41),
    _VRtrIfIPv6IngressFilterId_Type()
)
vRtrIfIPv6IngressFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIPv6IngressFilterId.setStatus("current")


class _VRtrIfIPv6EgressFilterId_Type(TFilterID):
    """Custom type vRtrIfIPv6EgressFilterId based on TFilterID"""
    defaultValue = 0


_VRtrIfIPv6EgressFilterId_Type.__name__ = "TFilterID"
_VRtrIfIPv6EgressFilterId_Object = MibTableColumn
vRtrIfIPv6EgressFilterId = _VRtrIfIPv6EgressFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 42),
    _VRtrIfIPv6EgressFilterId_Type()
)
vRtrIfIPv6EgressFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIPv6EgressFilterId.setStatus("current")


class _VRtrIfIcmpV6Redirects_Type(TruthValue):
    """Custom type vRtrIfIcmpV6Redirects based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV6Redirects_Type.__name__ = "TruthValue"
_VRtrIfIcmpV6Redirects_Object = MibTableColumn
vRtrIfIcmpV6Redirects = _VRtrIfIcmpV6Redirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 43),
    _VRtrIfIcmpV6Redirects_Type()
)
vRtrIfIcmpV6Redirects.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6Redirects.setStatus("current")


class _VRtrIfIcmpV6NumRedirects_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6NumRedirects based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_VRtrIfIcmpV6NumRedirects_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6NumRedirects_Object = MibTableColumn
vRtrIfIcmpV6NumRedirects = _VRtrIfIcmpV6NumRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 44),
    _VRtrIfIcmpV6NumRedirects_Type()
)
vRtrIfIcmpV6NumRedirects.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6NumRedirects.setStatus("current")


class _VRtrIfIcmpV6RedirectsTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6RedirectsTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV6RedirectsTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6RedirectsTime_Object = MibTableColumn
vRtrIfIcmpV6RedirectsTime = _VRtrIfIcmpV6RedirectsTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 45),
    _VRtrIfIcmpV6RedirectsTime_Type()
)
vRtrIfIcmpV6RedirectsTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6RedirectsTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6RedirectsTime.setUnits("seconds")


class _VRtrIfIcmpV6Unreachables_Type(TruthValue):
    """Custom type vRtrIfIcmpV6Unreachables based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV6Unreachables_Type.__name__ = "TruthValue"
_VRtrIfIcmpV6Unreachables_Object = MibTableColumn
vRtrIfIcmpV6Unreachables = _VRtrIfIcmpV6Unreachables_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 46),
    _VRtrIfIcmpV6Unreachables_Type()
)
vRtrIfIcmpV6Unreachables.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6Unreachables.setStatus("current")


class _VRtrIfIcmpV6NumUnreachables_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6NumUnreachables based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_VRtrIfIcmpV6NumUnreachables_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6NumUnreachables_Object = MibTableColumn
vRtrIfIcmpV6NumUnreachables = _VRtrIfIcmpV6NumUnreachables_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 47),
    _VRtrIfIcmpV6NumUnreachables_Type()
)
vRtrIfIcmpV6NumUnreachables.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6NumUnreachables.setStatus("current")


class _VRtrIfIcmpV6UnreachablesTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6UnreachablesTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV6UnreachablesTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6UnreachablesTime_Object = MibTableColumn
vRtrIfIcmpV6UnreachablesTime = _VRtrIfIcmpV6UnreachablesTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 48),
    _VRtrIfIcmpV6UnreachablesTime_Type()
)
vRtrIfIcmpV6UnreachablesTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6UnreachablesTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6UnreachablesTime.setUnits("seconds")


class _VRtrIfIcmpV6TimeExceeded_Type(TruthValue):
    """Custom type vRtrIfIcmpV6TimeExceeded based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV6TimeExceeded_Type.__name__ = "TruthValue"
_VRtrIfIcmpV6TimeExceeded_Object = MibTableColumn
vRtrIfIcmpV6TimeExceeded = _VRtrIfIcmpV6TimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 49),
    _VRtrIfIcmpV6TimeExceeded_Type()
)
vRtrIfIcmpV6TimeExceeded.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6TimeExceeded.setStatus("current")


class _VRtrIfIcmpV6NumTimeExceeded_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6NumTimeExceeded based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 2000),
    )


_VRtrIfIcmpV6NumTimeExceeded_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6NumTimeExceeded_Object = MibTableColumn
vRtrIfIcmpV6NumTimeExceeded = _VRtrIfIcmpV6NumTimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 50),
    _VRtrIfIcmpV6NumTimeExceeded_Type()
)
vRtrIfIcmpV6NumTimeExceeded.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6NumTimeExceeded.setStatus("current")


class _VRtrIfIcmpV6TimeExceededTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6TimeExceededTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV6TimeExceededTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6TimeExceededTime_Object = MibTableColumn
vRtrIfIcmpV6TimeExceededTime = _VRtrIfIcmpV6TimeExceededTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 51),
    _VRtrIfIcmpV6TimeExceededTime_Type()
)
vRtrIfIcmpV6TimeExceededTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6TimeExceededTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6TimeExceededTime.setUnits("seconds")


class _VRtrIfIcmpV6PktTooBig_Type(TruthValue):
    """Custom type vRtrIfIcmpV6PktTooBig based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV6PktTooBig_Type.__name__ = "TruthValue"
_VRtrIfIcmpV6PktTooBig_Object = MibTableColumn
vRtrIfIcmpV6PktTooBig = _VRtrIfIcmpV6PktTooBig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 52),
    _VRtrIfIcmpV6PktTooBig_Type()
)
vRtrIfIcmpV6PktTooBig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6PktTooBig.setStatus("current")


class _VRtrIfIcmpV6NumPktTooBig_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6NumPktTooBig based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_VRtrIfIcmpV6NumPktTooBig_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6NumPktTooBig_Object = MibTableColumn
vRtrIfIcmpV6NumPktTooBig = _VRtrIfIcmpV6NumPktTooBig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 53),
    _VRtrIfIcmpV6NumPktTooBig_Type()
)
vRtrIfIcmpV6NumPktTooBig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6NumPktTooBig.setStatus("current")


class _VRtrIfIcmpV6PktTooBigTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6PktTooBigTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV6PktTooBigTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6PktTooBigTime_Object = MibTableColumn
vRtrIfIcmpV6PktTooBigTime = _VRtrIfIcmpV6PktTooBigTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 54),
    _VRtrIfIcmpV6PktTooBigTime_Type()
)
vRtrIfIcmpV6PktTooBigTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6PktTooBigTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6PktTooBigTime.setUnits("seconds")


class _VRtrIfIcmpV6ParamProblem_Type(TruthValue):
    """Custom type vRtrIfIcmpV6ParamProblem based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV6ParamProblem_Type.__name__ = "TruthValue"
_VRtrIfIcmpV6ParamProblem_Object = MibTableColumn
vRtrIfIcmpV6ParamProblem = _VRtrIfIcmpV6ParamProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 55),
    _VRtrIfIcmpV6ParamProblem_Type()
)
vRtrIfIcmpV6ParamProblem.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6ParamProblem.setStatus("current")


class _VRtrIfIcmpV6NumParamProblem_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6NumParamProblem based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_VRtrIfIcmpV6NumParamProblem_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6NumParamProblem_Object = MibTableColumn
vRtrIfIcmpV6NumParamProblem = _VRtrIfIcmpV6NumParamProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 56),
    _VRtrIfIcmpV6NumParamProblem_Type()
)
vRtrIfIcmpV6NumParamProblem.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6NumParamProblem.setStatus("current")


class _VRtrIfIcmpV6ParamProblemTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV6ParamProblemTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV6ParamProblemTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV6ParamProblemTime_Object = MibTableColumn
vRtrIfIcmpV6ParamProblemTime = _VRtrIfIcmpV6ParamProblemTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 57),
    _VRtrIfIcmpV6ParamProblemTime_Type()
)
vRtrIfIcmpV6ParamProblemTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6ParamProblemTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV6ParamProblemTime.setUnits("seconds")
_VRtrIfLinkLocalAddressType_Type = InetAddressType
_VRtrIfLinkLocalAddressType_Object = MibTableColumn
vRtrIfLinkLocalAddressType = _VRtrIfLinkLocalAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 58),
    _VRtrIfLinkLocalAddressType_Type()
)
vRtrIfLinkLocalAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLinkLocalAddressType.setStatus("current")


class _VRtrIfLinkLocalAddress_Type(InetAddress):
    """Custom type vRtrIfLinkLocalAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfLinkLocalAddress_Type.__name__ = "InetAddress"
_VRtrIfLinkLocalAddress_Object = MibTableColumn
vRtrIfLinkLocalAddress = _VRtrIfLinkLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 59),
    _VRtrIfLinkLocalAddress_Type()
)
vRtrIfLinkLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLinkLocalAddress.setStatus("current")
_VRtrIfLinkLocalAddressState_Type = TmnxInetAddrState
_VRtrIfLinkLocalAddressState_Object = MibTableColumn
vRtrIfLinkLocalAddressState = _VRtrIfLinkLocalAddressState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 60),
    _VRtrIfLinkLocalAddressState_Type()
)
vRtrIfLinkLocalAddressState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLinkLocalAddressState.setStatus("current")
_VRtrIfLastOperStateChange_Type = TimeStamp
_VRtrIfLastOperStateChange_Object = MibTableColumn
vRtrIfLastOperStateChange = _VRtrIfLastOperStateChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 61),
    _VRtrIfLastOperStateChange_Type()
)
vRtrIfLastOperStateChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLastOperStateChange.setStatus("current")
_VRtrIfOperMtu_Type = Unsigned32
_VRtrIfOperMtu_Object = MibTableColumn
vRtrIfOperMtu = _VRtrIfOperMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 62),
    _VRtrIfOperMtu_Type()
)
vRtrIfOperMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperMtu.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfOperMtu.setUnits("bytes")


class _VRtrIfGlobalIndex_Type(Unsigned32):
    """Custom type vRtrIfGlobalIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 262144),
    )


_VRtrIfGlobalIndex_Type.__name__ = "Unsigned32"
_VRtrIfGlobalIndex_Object = MibTableColumn
vRtrIfGlobalIndex = _VRtrIfGlobalIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 63),
    _VRtrIfGlobalIndex_Type()
)
vRtrIfGlobalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfGlobalIndex.setStatus("current")


class _VRtrIfDelaySeconds_Type(Unsigned32):
    """Custom type vRtrIfDelaySeconds based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrIfDelaySeconds_Type.__name__ = "Unsigned32"
_VRtrIfDelaySeconds_Object = MibTableColumn
vRtrIfDelaySeconds = _VRtrIfDelaySeconds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 64),
    _VRtrIfDelaySeconds_Type()
)
vRtrIfDelaySeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDelaySeconds.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfDelaySeconds.setUnits("seconds")
_VRtrIfDelayUpTimer_Type = Integer32
_VRtrIfDelayUpTimer_Object = MibTableColumn
vRtrIfDelayUpTimer = _VRtrIfDelayUpTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 65),
    _VRtrIfDelayUpTimer_Type()
)
vRtrIfDelayUpTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDelayUpTimer.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfDelayUpTimer.setUnits("seconds")


class _VRtrIfLocalDhcpServerName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfLocalDhcpServerName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfLocalDhcpServerName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfLocalDhcpServerName_Object = MibTableColumn
vRtrIfLocalDhcpServerName = _VRtrIfLocalDhcpServerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 66),
    _VRtrIfLocalDhcpServerName_Type()
)
vRtrIfLocalDhcpServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalDhcpServerName.setStatus("current")


class _VRtrIfInitDelayEnable_Type(TruthValue):
    """Custom type vRtrIfInitDelayEnable based on TruthValue"""
    defaultValue = 2


_VRtrIfInitDelayEnable_Type.__name__ = "TruthValue"
_VRtrIfInitDelayEnable_Object = MibTableColumn
vRtrIfInitDelayEnable = _VRtrIfInitDelayEnable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 67),
    _VRtrIfInitDelayEnable_Type()
)
vRtrIfInitDelayEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfInitDelayEnable.setStatus("obsolete")
_VRtrIfCpmProtPolicyId_Type = TCpmProtPolicyID
_VRtrIfCpmProtPolicyId_Object = MibTableColumn
vRtrIfCpmProtPolicyId = _VRtrIfCpmProtPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 68),
    _VRtrIfCpmProtPolicyId_Type()
)
vRtrIfCpmProtPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfCpmProtPolicyId.setStatus("current")
_VRtrIfCpmProtUncfgdProtoDropCnt_Type = Gauge32
_VRtrIfCpmProtUncfgdProtoDropCnt_Object = MibTableColumn
vRtrIfCpmProtUncfgdProtoDropCnt = _VRtrIfCpmProtUncfgdProtoDropCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 69),
    _VRtrIfCpmProtUncfgdProtoDropCnt_Type()
)
vRtrIfCpmProtUncfgdProtoDropCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfCpmProtUncfgdProtoDropCnt.setStatus("current")


class _VRtrIfLdpSyncTimer_Type(Unsigned32):
    """Custom type vRtrIfLdpSyncTimer based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1800),
    )


_VRtrIfLdpSyncTimer_Type.__name__ = "Unsigned32"
_VRtrIfLdpSyncTimer_Object = MibTableColumn
vRtrIfLdpSyncTimer = _VRtrIfLdpSyncTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 70),
    _VRtrIfLdpSyncTimer_Type()
)
vRtrIfLdpSyncTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLdpSyncTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfLdpSyncTimer.setUnits("seconds")


class _VRtrIfStripLabel_Type(TruthValue):
    """Custom type vRtrIfStripLabel based on TruthValue"""
    defaultValue = 2


_VRtrIfStripLabel_Type.__name__ = "TruthValue"
_VRtrIfStripLabel_Object = MibTableColumn
vRtrIfStripLabel = _VRtrIfStripLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 71),
    _VRtrIfStripLabel_Type()
)
vRtrIfStripLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfStripLabel.setStatus("current")


class _VRtrIfuRPFCheckState_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfuRPFCheckState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfuRPFCheckState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfuRPFCheckState_Object = MibTableColumn
vRtrIfuRPFCheckState = _VRtrIfuRPFCheckState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 72),
    _VRtrIfuRPFCheckState_Type()
)
vRtrIfuRPFCheckState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckState.setStatus("current")


class _VRtrIfuRPFCheckMode_Type(TmnxUrpfCheckMode):
    """Custom type vRtrIfuRPFCheckMode based on TmnxUrpfCheckMode"""
    defaultValue = 1


_VRtrIfuRPFCheckMode_Type.__name__ = "TmnxUrpfCheckMode"
_VRtrIfuRPFCheckMode_Object = MibTableColumn
vRtrIfuRPFCheckMode = _VRtrIfuRPFCheckMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 73),
    _VRtrIfuRPFCheckMode_Type()
)
vRtrIfuRPFCheckMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckMode.setStatus("current")


class _VRtrIfQosQGrp_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfQosQGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfQosQGrp_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfQosQGrp_Object = MibTableColumn
vRtrIfQosQGrp = _VRtrIfQosQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 74),
    _VRtrIfQosQGrp_Type()
)
vRtrIfQosQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosQGrp.setStatus("obsolete")


class _VRtrIfAdminLinkLocalAddrType_Type(InetAddressType):
    """Custom type vRtrIfAdminLinkLocalAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfAdminLinkLocalAddrType_Type.__name__ = "InetAddressType"
_VRtrIfAdminLinkLocalAddrType_Object = MibTableColumn
vRtrIfAdminLinkLocalAddrType = _VRtrIfAdminLinkLocalAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 75),
    _VRtrIfAdminLinkLocalAddrType_Type()
)
vRtrIfAdminLinkLocalAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAdminLinkLocalAddrType.setStatus("current")


class _VRtrIfAdminLinkLocalAddr_Type(InetAddress):
    """Custom type vRtrIfAdminLinkLocalAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfAdminLinkLocalAddr_Type.__name__ = "InetAddress"
_VRtrIfAdminLinkLocalAddr_Object = MibTableColumn
vRtrIfAdminLinkLocalAddr = _VRtrIfAdminLinkLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 76),
    _VRtrIfAdminLinkLocalAddr_Type()
)
vRtrIfAdminLinkLocalAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAdminLinkLocalAddr.setStatus("current")


class _VRtrIfAdmLnkLclAddrPreferred_Type(TruthValue):
    """Custom type vRtrIfAdmLnkLclAddrPreferred based on TruthValue"""
    defaultValue = 2


_VRtrIfAdmLnkLclAddrPreferred_Type.__name__ = "TruthValue"
_VRtrIfAdmLnkLclAddrPreferred_Object = MibTableColumn
vRtrIfAdmLnkLclAddrPreferred = _VRtrIfAdmLnkLclAddrPreferred_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 77),
    _VRtrIfAdmLnkLclAddrPreferred_Type()
)
vRtrIfAdmLnkLclAddrPreferred.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAdmLnkLclAddrPreferred.setStatus("current")


class _VRtrIfOperDownReason_Type(Bits):
    """Custom type vRtrIfOperDownReason based on Bits"""
    namedValues = NamedValues(
        *(("ifAdminDown", 0),
          ("svcAdminDown", 1),
          ("portOperDown", 2),
          ("addrOrIfNotReady", 3),
          ("assocObjNotReady", 4),
          ("rvplsDown", 5),
          ("operGrpDown", 6),
          ("ifAdminDestroy", 7),
          ("noIfAddress", 8),
          ("noIfInfo", 9),
          ("delayedStartEnabled", 10),
          ("ifProtoOperDown", 11),
          ("invalidPortCfg", 12),
          ("unknown", 13),
          ("noRouteDistinguisher", 14),
          ("wlanGwRedundancyStandby", 15),
          ("wlanGwGroupDegraded", 16))
    )

_VRtrIfOperDownReason_Type.__name__ = "Bits"
_VRtrIfOperDownReason_Object = MibTableColumn
vRtrIfOperDownReason = _VRtrIfOperDownReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 4, 1, 78),
    _VRtrIfOperDownReason_Type()
)
vRtrIfOperDownReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperDownReason.setStatus("obsolete")
_VRtrIfNameTable_Object = MibTable
vRtrIfNameTable = _VRtrIfNameTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 5)
)
if mibBuilder.loadTexts:
    vRtrIfNameTable.setStatus("current")
_VRtrIfNameEntry_Object = MibTableRow
vRtrIfNameEntry = _VRtrIfNameEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 5, 1)
)
vRtrIfNameEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (1, "TIMETRA-VRTR-MIB", "vRtrIfName"),
)
if mibBuilder.loadTexts:
    vRtrIfNameEntry.setStatus("current")
_VRtrIfNameIndex_Type = InterfaceIndex
_VRtrIfNameIndex_Object = MibTableColumn
vRtrIfNameIndex = _VRtrIfNameIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 5, 1, 1),
    _VRtrIfNameIndex_Type()
)
vRtrIfNameIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfNameIndex.setStatus("current")
_VRtrIpAddrTable_Object = MibTable
vRtrIpAddrTable = _VRtrIpAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6)
)
if mibBuilder.loadTexts:
    vRtrIpAddrTable.setStatus("current")
_VRtrIpAddrEntry_Object = MibTableRow
vRtrIpAddrEntry = _VRtrIpAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1)
)
vRtrIpAddrEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRiaIndex"),
)
if mibBuilder.loadTexts:
    vRtrIpAddrEntry.setStatus("current")


class _VRiaIndex_Type(Integer32):
    """Custom type vRiaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2048),
    )


_VRiaIndex_Type.__name__ = "Integer32"
_VRiaIndex_Object = MibTableColumn
vRiaIndex = _VRiaIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 1),
    _VRiaIndex_Type()
)
vRiaIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRiaIndex.setStatus("current")
_VRiaRowStatus_Type = RowStatus
_VRiaRowStatus_Object = MibTableColumn
vRiaRowStatus = _VRiaRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 2),
    _VRiaRowStatus_Type()
)
vRiaRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaRowStatus.setStatus("current")
_VRiaIpAddress_Type = IpAddress
_VRiaIpAddress_Object = MibTableColumn
vRiaIpAddress = _VRiaIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 3),
    _VRiaIpAddress_Type()
)
vRiaIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaIpAddress.setStatus("current")


class _VRiaNetMask_Type(IpAddress):
    """Custom type vRiaNetMask based on IpAddress"""
    defaultHexValue = "ffffff00"


_VRiaNetMask_Type.__name__ = "IpAddress"
_VRiaNetMask_Object = MibTableColumn
vRiaNetMask = _VRiaNetMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 4),
    _VRiaNetMask_Type()
)
vRiaNetMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaNetMask.setStatus("current")


class _VRiaBcastAddrFormat_Type(Integer32):
    """Custom type vRiaBcastAddrFormat based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allOnes", 1),
          ("hostOnes", 2))
    )


_VRiaBcastAddrFormat_Type.__name__ = "Integer32"
_VRiaBcastAddrFormat_Object = MibTableColumn
vRiaBcastAddrFormat = _VRiaBcastAddrFormat_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 5),
    _VRiaBcastAddrFormat_Type()
)
vRiaBcastAddrFormat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaBcastAddrFormat.setStatus("current")


class _VRiaReasmMaxSize_Type(Integer32):
    """Custom type vRiaReasmMaxSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRiaReasmMaxSize_Type.__name__ = "Integer32"
_VRiaReasmMaxSize_Object = MibTableColumn
vRiaReasmMaxSize = _VRiaReasmMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 6),
    _VRiaReasmMaxSize_Type()
)
vRiaReasmMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaReasmMaxSize.setStatus("current")
_VRiaIgpInhibit_Type = TruthValue
_VRiaIgpInhibit_Object = MibTableColumn
vRiaIgpInhibit = _VRiaIgpInhibit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 7),
    _VRiaIgpInhibit_Type()
)
vRiaIgpInhibit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaIgpInhibit.setStatus("current")
_VRiaInetAddressType_Type = TmnxAddressAndPrefixType
_VRiaInetAddressType_Object = MibTableColumn
vRiaInetAddressType = _VRiaInetAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 8),
    _VRiaInetAddressType_Type()
)
vRiaInetAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddressType.setStatus("current")


class _VRiaInetAddress_Type(TmnxAddressAndPrefixAddress):
    """Custom type vRiaInetAddress based on TmnxAddressAndPrefixAddress"""
    subtypeSpec = TmnxAddressAndPrefixAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRiaInetAddress_Type.__name__ = "TmnxAddressAndPrefixAddress"
_VRiaInetAddress_Object = MibTableColumn
vRiaInetAddress = _VRiaInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 9),
    _VRiaInetAddress_Type()
)
vRiaInetAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddress.setStatus("current")
_VRiaInetPrefixLen_Type = TmnxAddressAndPrefixPrefix
_VRiaInetPrefixLen_Object = MibTableColumn
vRiaInetPrefixLen = _VRiaInetPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 10),
    _VRiaInetPrefixLen_Type()
)
vRiaInetPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetPrefixLen.setStatus("current")
_VRiaInetAddrState_Type = TmnxInetAddrState
_VRiaInetAddrState_Object = MibTableColumn
vRiaInetAddrState = _VRiaInetAddrState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 11),
    _VRiaInetAddrState_Type()
)
vRiaInetAddrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRiaInetAddrState.setStatus("current")


class _VRiaInetEui64_Type(TruthValue):
    """Custom type vRiaInetEui64 based on TruthValue"""
    defaultValue = 2


_VRiaInetEui64_Type.__name__ = "TruthValue"
_VRiaInetEui64_Object = MibTableColumn
vRiaInetEui64 = _VRiaInetEui64_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 12),
    _VRiaInetEui64_Type()
)
vRiaInetEui64.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetEui64.setStatus("current")


class _VRiaInetOperAddress_Type(InetAddress):
    """Custom type vRiaInetOperAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRiaInetOperAddress_Type.__name__ = "InetAddress"
_VRiaInetOperAddress_Object = MibTableColumn
vRiaInetOperAddress = _VRiaInetOperAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 13),
    _VRiaInetOperAddress_Type()
)
vRiaInetOperAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRiaInetOperAddress.setStatus("current")


class _VRiaInetGwAddressType_Type(InetAddressType):
    """Custom type vRiaInetGwAddressType based on InetAddressType"""
    defaultValue = 0


_VRiaInetGwAddressType_Type.__name__ = "InetAddressType"
_VRiaInetGwAddressType_Object = MibTableColumn
vRiaInetGwAddressType = _VRiaInetGwAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 14),
    _VRiaInetGwAddressType_Type()
)
vRiaInetGwAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetGwAddressType.setStatus("current")


class _VRiaInetGwAddress_Type(InetAddress):
    """Custom type vRiaInetGwAddress based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRiaInetGwAddress_Type.__name__ = "InetAddress"
_VRiaInetGwAddress_Object = MibTableColumn
vRiaInetGwAddress = _VRiaInetGwAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 15),
    _VRiaInetGwAddress_Type()
)
vRiaInetGwAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetGwAddress.setStatus("current")


class _VRiaInetRemoteIpType_Type(InetAddressType):
    """Custom type vRiaInetRemoteIpType based on InetAddressType"""
    defaultValue = 0


_VRiaInetRemoteIpType_Type.__name__ = "InetAddressType"
_VRiaInetRemoteIpType_Object = MibTableColumn
vRiaInetRemoteIpType = _VRiaInetRemoteIpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 16),
    _VRiaInetRemoteIpType_Type()
)
vRiaInetRemoteIpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetRemoteIpType.setStatus("current")


class _VRiaInetRemoteIp_Type(InetAddress):
    """Custom type vRiaInetRemoteIp based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRiaInetRemoteIp_Type.__name__ = "InetAddress"
_VRiaInetRemoteIp_Object = MibTableColumn
vRiaInetRemoteIp = _VRiaInetRemoteIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 17),
    _VRiaInetRemoteIp_Type()
)
vRiaInetRemoteIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetRemoteIp.setStatus("current")


class _VRiaInetAddrPreferred_Type(TruthValue):
    """Custom type vRiaInetAddrPreferred based on TruthValue"""
    defaultValue = 2


_VRiaInetAddrPreferred_Type.__name__ = "TruthValue"
_VRiaInetAddrPreferred_Object = MibTableColumn
vRiaInetAddrPreferred = _VRiaInetAddrPreferred_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 18),
    _VRiaInetAddrPreferred_Type()
)
vRiaInetAddrPreferred.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddrPreferred.setStatus("current")


class _VRiaSubscrPrefix_Type(TruthValue):
    """Custom type vRiaSubscrPrefix based on TruthValue"""
    defaultValue = 2


_VRiaSubscrPrefix_Type.__name__ = "TruthValue"
_VRiaSubscrPrefix_Object = MibTableColumn
vRiaSubscrPrefix = _VRiaSubscrPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 19),
    _VRiaSubscrPrefix_Type()
)
vRiaSubscrPrefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaSubscrPrefix.setStatus("current")


class _VRiaSubscrPrefixType_Type(Bits):
    """Custom type vRiaSubscrPrefixType based on Bits"""
    defaultBinValue = "1"

    namedValues = NamedValues(
        *(("pd", 0),
          ("wan-host", 1))
    )

_VRiaSubscrPrefixType_Type.__name__ = "Bits"
_VRiaSubscrPrefixType_Object = MibTableColumn
vRiaSubscrPrefixType = _VRiaSubscrPrefixType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 20),
    _VRiaSubscrPrefixType_Type()
)
vRiaSubscrPrefixType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaSubscrPrefixType.setStatus("current")


class _VRiaSubscrHostRoutePopulate_Type(TruthValue):
    """Custom type vRiaSubscrHostRoutePopulate based on TruthValue"""
    defaultValue = 2


_VRiaSubscrHostRoutePopulate_Type.__name__ = "TruthValue"
_VRiaSubscrHostRoutePopulate_Object = MibTableColumn
vRiaSubscrHostRoutePopulate = _VRiaSubscrHostRoutePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 21),
    _VRiaSubscrHostRoutePopulate_Type()
)
vRiaSubscrHostRoutePopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaSubscrHostRoutePopulate.setStatus("current")


class _VRiaTrackSrrpInstance_Type(Unsigned32):
    """Custom type vRiaTrackSrrpInstance based on Unsigned32"""
    defaultValue = 0


_VRiaTrackSrrpInstance_Type.__name__ = "Unsigned32"
_VRiaTrackSrrpInstance_Object = MibTableColumn
vRiaTrackSrrpInstance = _VRiaTrackSrrpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 22),
    _VRiaTrackSrrpInstance_Type()
)
vRiaTrackSrrpInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaTrackSrrpInstance.setStatus("current")


class _VRiaHoldUpTime_Type(Unsigned32):
    """Custom type vRiaHoldUpTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(100, 5000),
    )


_VRiaHoldUpTime_Type.__name__ = "Unsigned32"
_VRiaHoldUpTime_Object = MibTableColumn
vRiaHoldUpTime = _VRiaHoldUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 23),
    _VRiaHoldUpTime_Type()
)
vRiaHoldUpTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaHoldUpTime.setStatus("current")
if mibBuilder.loadTexts:
    vRiaHoldUpTime.setUnits("milliseconds")


class _VRiaCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type vRiaCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_VRiaCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_VRiaCreationOrigin_Object = MibTableColumn
vRiaCreationOrigin = _VRiaCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 24),
    _VRiaCreationOrigin_Type()
)
vRiaCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRiaCreationOrigin.setStatus("current")


class _VRiaInetAddressSendCgaModifier_Type(TmnxSendCgaModifier):
    """Custom type vRiaInetAddressSendCgaModifier based on TmnxSendCgaModifier"""
    defaultHexValue = "00000000000000000000000000000000"


_VRiaInetAddressSendCgaModifier_Type.__name__ = "TmnxSendCgaModifier"
_VRiaInetAddressSendCgaModifier_Object = MibTableColumn
vRiaInetAddressSendCgaModifier = _VRiaInetAddressSendCgaModifier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 25),
    _VRiaInetAddressSendCgaModifier_Type()
)
vRiaInetAddressSendCgaModifier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddressSendCgaModifier.setStatus("current")


class _VRiaInetAddressPrimaryPreference_Type(Unsigned32):
    """Custom type vRiaInetAddressPrimaryPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4294967295),
    )


_VRiaInetAddressPrimaryPreference_Type.__name__ = "Unsigned32"
_VRiaInetAddressPrimaryPreference_Object = MibTableColumn
vRiaInetAddressPrimaryPreference = _VRiaInetAddressPrimaryPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 26),
    _VRiaInetAddressPrimaryPreference_Type()
)
vRiaInetAddressPrimaryPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddressPrimaryPreference.setStatus("current")
_VRiaInetAddressPrimaryPreferred_Type = TruthValue
_VRiaInetAddressPrimaryPreferred_Object = MibTableColumn
vRiaInetAddressPrimaryPreferred = _VRiaInetAddressPrimaryPreferred_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 27),
    _VRiaInetAddressPrimaryPreferred_Type()
)
vRiaInetAddressPrimaryPreferred.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRiaInetAddressPrimaryPreferred.setStatus("current")


class _VRiaInetAddressGreTermination_Type(TruthValue):
    """Custom type vRiaInetAddressGreTermination based on TruthValue"""
    defaultValue = 2


_VRiaInetAddressGreTermination_Type.__name__ = "TruthValue"
_VRiaInetAddressGreTermination_Object = MibTableColumn
vRiaInetAddressGreTermination = _VRiaInetAddressGreTermination_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 6, 1, 28),
    _VRiaInetAddressGreTermination_Type()
)
vRiaInetAddressGreTermination.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRiaInetAddressGreTermination.setStatus("current")
_VRtrIpCidrRouteTable_Object = MibTable
vRtrIpCidrRouteTable = _VRtrIpCidrRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 7)
)
if mibBuilder.loadTexts:
    vRtrIpCidrRouteTable.setStatus("current")
_VRtrIpCidrRouteEntry_Object = MibTableRow
vRtrIpCidrRouteEntry = _VRtrIpCidrRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 7, 1)
)
if mibBuilder.loadTexts:
    vRtrIpCidrRouteEntry.setStatus("current")
_VRtrIpCidrRouteLastEnabledTime_Type = TimeStamp
_VRtrIpCidrRouteLastEnabledTime_Object = MibTableColumn
vRtrIpCidrRouteLastEnabledTime = _VRtrIpCidrRouteLastEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 7, 1, 1),
    _VRtrIpCidrRouteLastEnabledTime_Type()
)
vRtrIpCidrRouteLastEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpCidrRouteLastEnabledTime.setStatus("current")


class _VRtrIpCidrRoutePreference_Type(Unsigned32):
    """Custom type vRtrIpCidrRoutePreference based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrIpCidrRoutePreference_Type.__name__ = "Unsigned32"
_VRtrIpCidrRoutePreference_Object = MibTableColumn
vRtrIpCidrRoutePreference = _VRtrIpCidrRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 7, 1, 2),
    _VRtrIpCidrRoutePreference_Type()
)
vRtrIpCidrRoutePreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpCidrRoutePreference.setStatus("current")
_VRtrIpCidrRouteMetric_Type = Unsigned32
_VRtrIpCidrRouteMetric_Object = MibTableColumn
vRtrIpCidrRouteMetric = _VRtrIpCidrRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 7, 1, 3),
    _VRtrIpCidrRouteMetric_Type()
)
vRtrIpCidrRouteMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpCidrRouteMetric.setStatus("current")
_VRtrStaticRouteNumber_Type = Unsigned32
_VRtrStaticRouteNumber_Object = MibScalar
vRtrStaticRouteNumber = _VRtrStaticRouteNumber_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 8),
    _VRtrStaticRouteNumber_Type()
)
vRtrStaticRouteNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteNumber.setStatus("current")
_VRtrStaticRouteTable_Object = MibTable
vRtrStaticRouteTable = _VRtrStaticRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9)
)
if mibBuilder.loadTexts:
    vRtrStaticRouteTable.setStatus("obsolete")
_VRtrStaticRouteEntry_Object = MibTableRow
vRtrStaticRouteEntry = _VRtrStaticRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1)
)
vRtrStaticRouteEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
    (0, "TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
)
if mibBuilder.loadTexts:
    vRtrStaticRouteEntry.setStatus("obsolete")
_VRtrStaticRouteDest_Type = IpAddress
_VRtrStaticRouteDest_Object = MibTableColumn
vRtrStaticRouteDest = _VRtrStaticRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 1),
    _VRtrStaticRouteDest_Type()
)
vRtrStaticRouteDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteDest.setStatus("obsolete")
_VRtrStaticRouteMask_Type = IpAddress
_VRtrStaticRouteMask_Object = MibTableColumn
vRtrStaticRouteMask = _VRtrStaticRouteMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 2),
    _VRtrStaticRouteMask_Type()
)
vRtrStaticRouteMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteMask.setStatus("obsolete")


class _VRtrStaticRouteIndex_Type(Integer32):
    """Custom type vRtrStaticRouteIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrStaticRouteIndex_Type.__name__ = "Integer32"
_VRtrStaticRouteIndex_Object = MibTableColumn
vRtrStaticRouteIndex = _VRtrStaticRouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 3),
    _VRtrStaticRouteIndex_Type()
)
vRtrStaticRouteIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteIndex.setStatus("obsolete")
_VRtrStaticRouteRowStatus_Type = RowStatus
_VRtrStaticRouteRowStatus_Object = MibTableColumn
vRtrStaticRouteRowStatus = _VRtrStaticRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 4),
    _VRtrStaticRouteRowStatus_Type()
)
vRtrStaticRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteRowStatus.setStatus("obsolete")
_VRtrStaticRouteLastEnabledTime_Type = TimeStamp
_VRtrStaticRouteLastEnabledTime_Object = MibTableColumn
vRtrStaticRouteLastEnabledTime = _VRtrStaticRouteLastEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 5),
    _VRtrStaticRouteLastEnabledTime_Type()
)
vRtrStaticRouteLastEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteLastEnabledTime.setStatus("obsolete")


class _VRtrStaticRouteStatus_Type(Integer32):
    """Custom type vRtrStaticRouteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_VRtrStaticRouteStatus_Type.__name__ = "Integer32"
_VRtrStaticRouteStatus_Object = MibTableColumn
vRtrStaticRouteStatus = _VRtrStaticRouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 6),
    _VRtrStaticRouteStatus_Type()
)
vRtrStaticRouteStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteStatus.setStatus("obsolete")


class _VRtrStaticRouteStaticType_Type(Integer32):
    """Custom type vRtrStaticRouteStaticType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("nextHop", 1),
          ("indirect", 2),
          ("blackHole", 3),
          ("grt", 4))
    )


_VRtrStaticRouteStaticType_Type.__name__ = "Integer32"
_VRtrStaticRouteStaticType_Object = MibTableColumn
vRtrStaticRouteStaticType = _VRtrStaticRouteStaticType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 7),
    _VRtrStaticRouteStaticType_Type()
)
vRtrStaticRouteStaticType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteStaticType.setStatus("obsolete")


class _VRtrStaticRoutePreference_Type(Unsigned32):
    """Custom type vRtrStaticRoutePreference based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrStaticRoutePreference_Type.__name__ = "Unsigned32"
_VRtrStaticRoutePreference_Object = MibTableColumn
vRtrStaticRoutePreference = _VRtrStaticRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 8),
    _VRtrStaticRoutePreference_Type()
)
vRtrStaticRoutePreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRoutePreference.setStatus("obsolete")


class _VRtrStaticRouteMetric_Type(Unsigned32):
    """Custom type vRtrStaticRouteMetric based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrStaticRouteMetric_Type.__name__ = "Unsigned32"
_VRtrStaticRouteMetric_Object = MibTableColumn
vRtrStaticRouteMetric = _VRtrStaticRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 9),
    _VRtrStaticRouteMetric_Type()
)
vRtrStaticRouteMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteMetric.setStatus("obsolete")
_VRtrStaticRouteEgressIfIndex_Type = InterfaceIndexOrZero
_VRtrStaticRouteEgressIfIndex_Object = MibTableColumn
vRtrStaticRouteEgressIfIndex = _VRtrStaticRouteEgressIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 11),
    _VRtrStaticRouteEgressIfIndex_Type()
)
vRtrStaticRouteEgressIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteEgressIfIndex.setStatus("obsolete")
_VRtrStaticRouteNextHop_Type = IpAddress
_VRtrStaticRouteNextHop_Object = MibTableColumn
vRtrStaticRouteNextHop = _VRtrStaticRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 12),
    _VRtrStaticRouteNextHop_Type()
)
vRtrStaticRouteNextHop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteNextHop.setStatus("obsolete")


class _VRtrStaticRouteNextHopUnnumberedIf_Type(DisplayString):
    """Custom type vRtrStaticRouteNextHopUnnumberedIf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrStaticRouteNextHopUnnumberedIf_Type.__name__ = "DisplayString"
_VRtrStaticRouteNextHopUnnumberedIf_Object = MibTableColumn
vRtrStaticRouteNextHopUnnumberedIf = _VRtrStaticRouteNextHopUnnumberedIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 13),
    _VRtrStaticRouteNextHopUnnumberedIf_Type()
)
vRtrStaticRouteNextHopUnnumberedIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteNextHopUnnumberedIf.setStatus("obsolete")


class _VRtrStaticRouteAdminState_Type(TmnxAdminState):
    """Custom type vRtrStaticRouteAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrStaticRouteAdminState_Type.__name__ = "TmnxAdminState"
_VRtrStaticRouteAdminState_Object = MibTableColumn
vRtrStaticRouteAdminState = _VRtrStaticRouteAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 14),
    _VRtrStaticRouteAdminState_Type()
)
vRtrStaticRouteAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteAdminState.setStatus("obsolete")


class _VRtrStaticRouteIgpShortcut_Type(Bits):
    """Custom type vRtrStaticRouteIgpShortcut based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("te", 0),
          ("ldp", 1),
          ("ip", 2))
    )

_VRtrStaticRouteIgpShortcut_Type.__name__ = "Bits"
_VRtrStaticRouteIgpShortcut_Object = MibTableColumn
vRtrStaticRouteIgpShortcut = _VRtrStaticRouteIgpShortcut_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 15),
    _VRtrStaticRouteIgpShortcut_Type()
)
vRtrStaticRouteIgpShortcut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteIgpShortcut.setStatus("obsolete")


class _VRtrStaticRouteDisallowIgp_Type(TruthValue):
    """Custom type vRtrStaticRouteDisallowIgp based on TruthValue"""
    defaultValue = 2


_VRtrStaticRouteDisallowIgp_Type.__name__ = "TruthValue"
_VRtrStaticRouteDisallowIgp_Object = MibTableColumn
vRtrStaticRouteDisallowIgp = _VRtrStaticRouteDisallowIgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 16),
    _VRtrStaticRouteDisallowIgp_Type()
)
vRtrStaticRouteDisallowIgp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteDisallowIgp.setStatus("obsolete")


class _VRtrStaticRouteTag_Type(Unsigned32):
    """Custom type vRtrStaticRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrStaticRouteTag_Type.__name__ = "Unsigned32"
_VRtrStaticRouteTag_Object = MibTableColumn
vRtrStaticRouteTag = _VRtrStaticRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 9, 1, 17),
    _VRtrStaticRouteTag_Type()
)
vRtrStaticRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteTag.setStatus("obsolete")
_VRtrSvcIpRangeTable_Object = MibTable
vRtrSvcIpRangeTable = _VRtrSvcIpRangeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10)
)
if mibBuilder.loadTexts:
    vRtrSvcIpRangeTable.setStatus("obsolete")
_VRtrSvcIpRangeEntry_Object = MibTableRow
vRtrSvcIpRangeEntry = _VRtrSvcIpRangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10, 1)
)
vRtrSvcIpRangeEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
    (0, "TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
)
if mibBuilder.loadTexts:
    vRtrSvcIpRangeEntry.setStatus("obsolete")
_VRtrSvcIpRangeAddress_Type = IpAddress
_VRtrSvcIpRangeAddress_Object = MibTableColumn
vRtrSvcIpRangeAddress = _VRtrSvcIpRangeAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10, 1, 1),
    _VRtrSvcIpRangeAddress_Type()
)
vRtrSvcIpRangeAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcIpRangeAddress.setStatus("obsolete")


class _VRtrSvcIpRangeMask_Type(Unsigned32):
    """Custom type vRtrSvcIpRangeMask based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_VRtrSvcIpRangeMask_Type.__name__ = "Unsigned32"
_VRtrSvcIpRangeMask_Object = MibTableColumn
vRtrSvcIpRangeMask = _VRtrSvcIpRangeMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10, 1, 2),
    _VRtrSvcIpRangeMask_Type()
)
vRtrSvcIpRangeMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcIpRangeMask.setStatus("obsolete")
_VRtrSvcIpRangeRowStatus_Type = RowStatus
_VRtrSvcIpRangeRowStatus_Object = MibTableColumn
vRtrSvcIpRangeRowStatus = _VRtrSvcIpRangeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10, 1, 3),
    _VRtrSvcIpRangeRowStatus_Type()
)
vRtrSvcIpRangeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcIpRangeRowStatus.setStatus("obsolete")


class _VRtrSvcIpRangeExclusive_Type(TruthValue):
    """Custom type vRtrSvcIpRangeExclusive based on TruthValue"""
    defaultValue = 2


_VRtrSvcIpRangeExclusive_Type.__name__ = "TruthValue"
_VRtrSvcIpRangeExclusive_Object = MibTableColumn
vRtrSvcIpRangeExclusive = _VRtrSvcIpRangeExclusive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 10, 1, 4),
    _VRtrSvcIpRangeExclusive_Type()
)
vRtrSvcIpRangeExclusive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcIpRangeExclusive.setStatus("obsolete")
_VRtrIpNetToMediaTable_Object = MibTable
vRtrIpNetToMediaTable = _VRtrIpNetToMediaTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 11)
)
if mibBuilder.loadTexts:
    vRtrIpNetToMediaTable.setStatus("current")
_VRtrIpNetToMediaEntry_Object = MibTableRow
vRtrIpNetToMediaEntry = _VRtrIpNetToMediaEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 11, 1)
)
if mibBuilder.loadTexts:
    vRtrIpNetToMediaEntry.setStatus("current")


class _VRtrIpNetToMediaTimer_Type(Unsigned32):
    """Custom type vRtrIpNetToMediaTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrIpNetToMediaTimer_Type.__name__ = "Unsigned32"
_VRtrIpNetToMediaTimer_Object = MibTableColumn
vRtrIpNetToMediaTimer = _VRtrIpNetToMediaTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 11, 1, 1),
    _VRtrIpNetToMediaTimer_Type()
)
vRtrIpNetToMediaTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToMediaTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIpNetToMediaTimer.setUnits("seconds")
_VRtrIpNetToMediaOperState_Type = TmnxOperState
_VRtrIpNetToMediaOperState_Object = MibTableColumn
vRtrIpNetToMediaOperState = _VRtrIpNetToMediaOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 11, 1, 2),
    _VRtrIpNetToMediaOperState_Type()
)
vRtrIpNetToMediaOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToMediaOperState.setStatus("current")
_VRtrInstanceAggregationTableLastChanged_Type = TimeStamp
_VRtrInstanceAggregationTableLastChanged_Object = MibScalar
vRtrInstanceAggregationTableLastChanged = _VRtrInstanceAggregationTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 12),
    _VRtrInstanceAggregationTableLastChanged_Type()
)
vRtrInstanceAggregationTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInstanceAggregationTableLastChanged.setStatus("obsolete")
_VRtrInstanceAggregationTable_Object = MibTable
vRtrInstanceAggregationTable = _VRtrInstanceAggregationTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13)
)
if mibBuilder.loadTexts:
    vRtrInstanceAggregationTable.setStatus("obsolete")
_VRtrInstanceAggregationEntry_Object = MibTableRow
vRtrInstanceAggregationEntry = _VRtrInstanceAggregationEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1)
)
vRtrInstanceAggregationEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAggregationIpPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAggregationIpPrefixMask"),
)
if mibBuilder.loadTexts:
    vRtrInstanceAggregationEntry.setStatus("obsolete")
_VRtrAggregationIpPrefix_Type = IpAddress
_VRtrAggregationIpPrefix_Object = MibTableColumn
vRtrAggregationIpPrefix = _VRtrAggregationIpPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 1),
    _VRtrAggregationIpPrefix_Type()
)
vRtrAggregationIpPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAggregationIpPrefix.setStatus("obsolete")
_VRtrAggregationIpPrefixMask_Type = IpAddressPrefixLength
_VRtrAggregationIpPrefixMask_Object = MibTableColumn
vRtrAggregationIpPrefixMask = _VRtrAggregationIpPrefixMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 2),
    _VRtrAggregationIpPrefixMask_Type()
)
vRtrAggregationIpPrefixMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAggregationIpPrefixMask.setStatus("obsolete")
_VRtrAggregationRowStatus_Type = RowStatus
_VRtrAggregationRowStatus_Object = MibTableColumn
vRtrAggregationRowStatus = _VRtrAggregationRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 3),
    _VRtrAggregationRowStatus_Type()
)
vRtrAggregationRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationRowStatus.setStatus("obsolete")
_VRtrAggregationLastChanged_Type = TimeStamp
_VRtrAggregationLastChanged_Object = MibTableColumn
vRtrAggregationLastChanged = _VRtrAggregationLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 4),
    _VRtrAggregationLastChanged_Type()
)
vRtrAggregationLastChanged.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationLastChanged.setStatus("obsolete")


class _VRtrAggregationSummaryOnly_Type(TruthValue):
    """Custom type vRtrAggregationSummaryOnly based on TruthValue"""
    defaultValue = 2


_VRtrAggregationSummaryOnly_Type.__name__ = "TruthValue"
_VRtrAggregationSummaryOnly_Object = MibTableColumn
vRtrAggregationSummaryOnly = _VRtrAggregationSummaryOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 5),
    _VRtrAggregationSummaryOnly_Type()
)
vRtrAggregationSummaryOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationSummaryOnly.setStatus("obsolete")


class _VRtrAggregationASSet_Type(TruthValue):
    """Custom type vRtrAggregationASSet based on TruthValue"""
    defaultValue = 2


_VRtrAggregationASSet_Type.__name__ = "TruthValue"
_VRtrAggregationASSet_Object = MibTableColumn
vRtrAggregationASSet = _VRtrAggregationASSet_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 6),
    _VRtrAggregationASSet_Type()
)
vRtrAggregationASSet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationASSet.setStatus("obsolete")


class _VRtrAggregationAggregatorAS_Type(TmnxBgpAutonomousSystem):
    """Custom type vRtrAggregationAggregatorAS based on TmnxBgpAutonomousSystem"""
    defaultValue = 0


_VRtrAggregationAggregatorAS_Type.__name__ = "TmnxBgpAutonomousSystem"
_VRtrAggregationAggregatorAS_Object = MibTableColumn
vRtrAggregationAggregatorAS = _VRtrAggregationAggregatorAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 7),
    _VRtrAggregationAggregatorAS_Type()
)
vRtrAggregationAggregatorAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationAggregatorAS.setStatus("obsolete")


class _VRtrAggregationAggregatorIPAddr_Type(IpAddress):
    """Custom type vRtrAggregationAggregatorIPAddr based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrAggregationAggregatorIPAddr_Type.__name__ = "IpAddress"
_VRtrAggregationAggregatorIPAddr_Object = MibTableColumn
vRtrAggregationAggregatorIPAddr = _VRtrAggregationAggregatorIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 8),
    _VRtrAggregationAggregatorIPAddr_Type()
)
vRtrAggregationAggregatorIPAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAggregationAggregatorIPAddr.setStatus("obsolete")
_VRtrAggregationOperState_Type = TmnxOperState
_VRtrAggregationOperState_Object = MibTableColumn
vRtrAggregationOperState = _VRtrAggregationOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 13, 1, 9),
    _VRtrAggregationOperState_Type()
)
vRtrAggregationOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAggregationOperState.setStatus("obsolete")
_VRtrStaticRouteIndexTable_Object = MibTable
vRtrStaticRouteIndexTable = _VRtrStaticRouteIndexTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 14)
)
if mibBuilder.loadTexts:
    vRtrStaticRouteIndexTable.setStatus("obsolete")
_VRtrStaticRouteIndexEntry_Object = MibTableRow
vRtrStaticRouteIndexEntry = _VRtrStaticRouteIndexEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 14, 1)
)
vRtrStaticRouteIndexEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
)
if mibBuilder.loadTexts:
    vRtrStaticRouteIndexEntry.setStatus("obsolete")
_VRtrStaticRouteIndexDest_Type = IpAddress
_VRtrStaticRouteIndexDest_Object = MibTableColumn
vRtrStaticRouteIndexDest = _VRtrStaticRouteIndexDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 14, 1, 1),
    _VRtrStaticRouteIndexDest_Type()
)
vRtrStaticRouteIndexDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteIndexDest.setStatus("obsolete")
_VRtrStaticRouteIndexMask_Type = IpAddress
_VRtrStaticRouteIndexMask_Object = MibTableColumn
vRtrStaticRouteIndexMask = _VRtrStaticRouteIndexMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 14, 1, 2),
    _VRtrStaticRouteIndexMask_Type()
)
vRtrStaticRouteIndexMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteIndexMask.setStatus("obsolete")


class _VRtrStaticRouteAvailableIndex_Type(TestAndIncr):
    """Custom type vRtrStaticRouteAvailableIndex based on TestAndIncr"""
    subtypeSpec = TestAndIncr.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrStaticRouteAvailableIndex_Type.__name__ = "TestAndIncr"
_VRtrStaticRouteAvailableIndex_Object = MibTableColumn
vRtrStaticRouteAvailableIndex = _VRtrStaticRouteAvailableIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 14, 1, 3),
    _VRtrStaticRouteAvailableIndex_Type()
)
vRtrStaticRouteAvailableIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStaticRouteAvailableIndex.setStatus("obsolete")
_TmnxVRtrGlobalObjs_ObjectIdentity = ObjectIdentity
tmnxVRtrGlobalObjs = _TmnxVRtrGlobalObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15)
)
_VRtrNextVRtrID_Type = TestAndIncr
_VRtrNextVRtrID_Object = MibScalar
vRtrNextVRtrID = _VRtrNextVRtrID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 1),
    _VRtrNextVRtrID_Type()
)
vRtrNextVRtrID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrNextVRtrID.setStatus("current")
_VRtrConfiguredVRtrs_Type = Gauge32
_VRtrConfiguredVRtrs_Object = MibScalar
vRtrConfiguredVRtrs = _VRtrConfiguredVRtrs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 2),
    _VRtrConfiguredVRtrs_Type()
)
vRtrConfiguredVRtrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrConfiguredVRtrs.setStatus("current")
_VRtrActiveVRtrs_Type = Gauge32
_VRtrActiveVRtrs_Object = MibScalar
vRtrActiveVRtrs = _VRtrActiveVRtrs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 3),
    _VRtrActiveVRtrs_Type()
)
vRtrActiveVRtrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrActiveVRtrs.setStatus("current")


class _VRtrRouteThresholdSoakTime_Type(Unsigned32):
    """Custom type vRtrRouteThresholdSoakTime based on Unsigned32"""
    defaultValue = 600


_VRtrRouteThresholdSoakTime_Type.__name__ = "Unsigned32"
_VRtrRouteThresholdSoakTime_Object = MibScalar
vRtrRouteThresholdSoakTime = _VRtrRouteThresholdSoakTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 4),
    _VRtrRouteThresholdSoakTime_Type()
)
vRtrRouteThresholdSoakTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrRouteThresholdSoakTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRouteThresholdSoakTime.setUnits("seconds")
_VRtrMaxARPEntries_Type = Unsigned32
_VRtrMaxARPEntries_Object = MibScalar
vRtrMaxARPEntries = _VRtrMaxARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 5),
    _VRtrMaxARPEntries_Type()
)
vRtrMaxARPEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMaxARPEntries.setStatus("current")


class _VRtrIPv6RouteThresholdSoakTime_Type(Unsigned32):
    """Custom type vRtrIPv6RouteThresholdSoakTime based on Unsigned32"""
    defaultValue = 600


_VRtrIPv6RouteThresholdSoakTime_Type.__name__ = "Unsigned32"
_VRtrIPv6RouteThresholdSoakTime_Object = MibScalar
vRtrIPv6RouteThresholdSoakTime = _VRtrIPv6RouteThresholdSoakTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 6),
    _VRtrIPv6RouteThresholdSoakTime_Type()
)
vRtrIPv6RouteThresholdSoakTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIPv6RouteThresholdSoakTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIPv6RouteThresholdSoakTime.setUnits("seconds")
_VRtrSendKeyRollover_Type = TruthValue
_VRtrSendKeyRollover_Object = MibScalar
vRtrSendKeyRollover = _VRtrSendKeyRollover_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 15, 7),
    _VRtrSendKeyRollover_Type()
)
vRtrSendKeyRollover.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSendKeyRollover.setStatus("current")
_VRtrPolicyTable_Object = MibTable
vRtrPolicyTable = _VRtrPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16)
)
if mibBuilder.loadTexts:
    vRtrPolicyTable.setStatus("current")
_VRtrPolicyEntry_Object = MibTableRow
vRtrPolicyEntry = _VRtrPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1)
)
if mibBuilder.loadTexts:
    vRtrPolicyEntry.setStatus("current")


class _VRtrImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrImportPolicy1_Object = MibTableColumn
vRtrImportPolicy1 = _VRtrImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 1),
    _VRtrImportPolicy1_Type()
)
vRtrImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrImportPolicy1.setStatus("obsolete")


class _VRtrImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrImportPolicy2_Object = MibTableColumn
vRtrImportPolicy2 = _VRtrImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 2),
    _VRtrImportPolicy2_Type()
)
vRtrImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrImportPolicy2.setStatus("obsolete")


class _VRtrImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrImportPolicy3_Object = MibTableColumn
vRtrImportPolicy3 = _VRtrImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 3),
    _VRtrImportPolicy3_Type()
)
vRtrImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrImportPolicy3.setStatus("obsolete")


class _VRtrImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrImportPolicy4_Object = MibTableColumn
vRtrImportPolicy4 = _VRtrImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 4),
    _VRtrImportPolicy4_Type()
)
vRtrImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrImportPolicy4.setStatus("obsolete")


class _VRtrImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrImportPolicy5_Object = MibTableColumn
vRtrImportPolicy5 = _VRtrImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 5),
    _VRtrImportPolicy5_Type()
)
vRtrImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrImportPolicy5.setStatus("obsolete")


class _VRtrExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrExportPolicy1_Object = MibTableColumn
vRtrExportPolicy1 = _VRtrExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 6),
    _VRtrExportPolicy1_Type()
)
vRtrExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrExportPolicy1.setStatus("obsolete")


class _VRtrExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrExportPolicy2_Object = MibTableColumn
vRtrExportPolicy2 = _VRtrExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 7),
    _VRtrExportPolicy2_Type()
)
vRtrExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrExportPolicy2.setStatus("obsolete")


class _VRtrExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrExportPolicy3_Object = MibTableColumn
vRtrExportPolicy3 = _VRtrExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 8),
    _VRtrExportPolicy3_Type()
)
vRtrExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrExportPolicy3.setStatus("obsolete")


class _VRtrExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrExportPolicy4_Object = MibTableColumn
vRtrExportPolicy4 = _VRtrExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 9),
    _VRtrExportPolicy4_Type()
)
vRtrExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrExportPolicy4.setStatus("obsolete")


class _VRtrExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrExportPolicy5_Object = MibTableColumn
vRtrExportPolicy5 = _VRtrExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 10),
    _VRtrExportPolicy5_Type()
)
vRtrExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrExportPolicy5.setStatus("obsolete")


class _VRtrMvpnImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnImportPolicy1_Object = MibTableColumn
vRtrMvpnImportPolicy1 = _VRtrMvpnImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 11),
    _VRtrMvpnImportPolicy1_Type()
)
vRtrMvpnImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicy1.setStatus("obsolete")


class _VRtrMvpnImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnImportPolicy2_Object = MibTableColumn
vRtrMvpnImportPolicy2 = _VRtrMvpnImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 12),
    _VRtrMvpnImportPolicy2_Type()
)
vRtrMvpnImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicy2.setStatus("obsolete")


class _VRtrMvpnImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnImportPolicy3_Object = MibTableColumn
vRtrMvpnImportPolicy3 = _VRtrMvpnImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 13),
    _VRtrMvpnImportPolicy3_Type()
)
vRtrMvpnImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicy3.setStatus("obsolete")


class _VRtrMvpnImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnImportPolicy4_Object = MibTableColumn
vRtrMvpnImportPolicy4 = _VRtrMvpnImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 14),
    _VRtrMvpnImportPolicy4_Type()
)
vRtrMvpnImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicy4.setStatus("obsolete")


class _VRtrMvpnImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnImportPolicy5_Object = MibTableColumn
vRtrMvpnImportPolicy5 = _VRtrMvpnImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 15),
    _VRtrMvpnImportPolicy5_Type()
)
vRtrMvpnImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicy5.setStatus("obsolete")


class _VRtrMvpnExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnExportPolicy1_Object = MibTableColumn
vRtrMvpnExportPolicy1 = _VRtrMvpnExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 16),
    _VRtrMvpnExportPolicy1_Type()
)
vRtrMvpnExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicy1.setStatus("obsolete")


class _VRtrMvpnExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnExportPolicy2_Object = MibTableColumn
vRtrMvpnExportPolicy2 = _VRtrMvpnExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 17),
    _VRtrMvpnExportPolicy2_Type()
)
vRtrMvpnExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicy2.setStatus("obsolete")


class _VRtrMvpnExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnExportPolicy3_Object = MibTableColumn
vRtrMvpnExportPolicy3 = _VRtrMvpnExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 18),
    _VRtrMvpnExportPolicy3_Type()
)
vRtrMvpnExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicy3.setStatus("obsolete")


class _VRtrMvpnExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnExportPolicy4_Object = MibTableColumn
vRtrMvpnExportPolicy4 = _VRtrMvpnExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 19),
    _VRtrMvpnExportPolicy4_Type()
)
vRtrMvpnExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicy4.setStatus("obsolete")


class _VRtrMvpnExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrMvpnExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrMvpnExportPolicy5_Object = MibTableColumn
vRtrMvpnExportPolicy5 = _VRtrMvpnExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 20),
    _VRtrMvpnExportPolicy5_Type()
)
vRtrMvpnExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicy5.setStatus("obsolete")


class _VRtrMvpnImportPolicyUnicast_Type(TruthValue):
    """Custom type vRtrMvpnImportPolicyUnicast based on TruthValue"""
    defaultValue = 2


_VRtrMvpnImportPolicyUnicast_Type.__name__ = "TruthValue"
_VRtrMvpnImportPolicyUnicast_Object = MibTableColumn
vRtrMvpnImportPolicyUnicast = _VRtrMvpnImportPolicyUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 21),
    _VRtrMvpnImportPolicyUnicast_Type()
)
vRtrMvpnImportPolicyUnicast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnImportPolicyUnicast.setStatus("current")


class _VRtrMvpnExportPolicyUnicast_Type(TruthValue):
    """Custom type vRtrMvpnExportPolicyUnicast based on TruthValue"""
    defaultValue = 2


_VRtrMvpnExportPolicyUnicast_Type.__name__ = "TruthValue"
_VRtrMvpnExportPolicyUnicast_Object = MibTableColumn
vRtrMvpnExportPolicyUnicast = _VRtrMvpnExportPolicyUnicast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 22),
    _VRtrMvpnExportPolicyUnicast_Type()
)
vRtrMvpnExportPolicyUnicast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnExportPolicyUnicast.setStatus("current")


class _VRtrGrtMaxExportRoutes_Type(Unsigned32):
    """Custom type vRtrGrtMaxExportRoutes based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_VRtrGrtMaxExportRoutes_Type.__name__ = "Unsigned32"
_VRtrGrtMaxExportRoutes_Object = MibTableColumn
vRtrGrtMaxExportRoutes = _VRtrGrtMaxExportRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 23),
    _VRtrGrtMaxExportRoutes_Type()
)
vRtrGrtMaxExportRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtMaxExportRoutes.setStatus("current")


class _VRtrGrtExportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtExportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtExportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrGrtExportPolicy1_Object = MibTableColumn
vRtrGrtExportPolicy1 = _VRtrGrtExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 24),
    _VRtrGrtExportPolicy1_Type()
)
vRtrGrtExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtExportPolicy1.setStatus("current")


class _VRtrGrtExportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtExportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtExportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtExportPolicy2_Object = MibTableColumn
vRtrGrtExportPolicy2 = _VRtrGrtExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 25),
    _VRtrGrtExportPolicy2_Type()
)
vRtrGrtExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtExportPolicy2.setStatus("current")


class _VRtrGrtExportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtExportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtExportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtExportPolicy3_Object = MibTableColumn
vRtrGrtExportPolicy3 = _VRtrGrtExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 26),
    _VRtrGrtExportPolicy3_Type()
)
vRtrGrtExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtExportPolicy3.setStatus("current")


class _VRtrGrtExportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtExportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtExportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtExportPolicy4_Object = MibTableColumn
vRtrGrtExportPolicy4 = _VRtrGrtExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 27),
    _VRtrGrtExportPolicy4_Type()
)
vRtrGrtExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtExportPolicy4.setStatus("current")


class _VRtrGrtExportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtExportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtExportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtExportPolicy5_Object = MibTableColumn
vRtrGrtExportPolicy5 = _VRtrGrtExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 28),
    _VRtrGrtExportPolicy5_Type()
)
vRtrGrtExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtExportPolicy5.setStatus("current")


class _VRtrGrtMaxIpv6ExportRoutes_Type(Unsigned32):
    """Custom type vRtrGrtMaxIpv6ExportRoutes based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_VRtrGrtMaxIpv6ExportRoutes_Type.__name__ = "Unsigned32"
_VRtrGrtMaxIpv6ExportRoutes_Object = MibTableColumn
vRtrGrtMaxIpv6ExportRoutes = _VRtrGrtMaxIpv6ExportRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 29),
    _VRtrGrtMaxIpv6ExportRoutes_Type()
)
vRtrGrtMaxIpv6ExportRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtMaxIpv6ExportRoutes.setStatus("current")


class _VRtrGrtImportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtImportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtImportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrGrtImportPolicy1_Object = MibTableColumn
vRtrGrtImportPolicy1 = _VRtrGrtImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 30),
    _VRtrGrtImportPolicy1_Type()
)
vRtrGrtImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtImportPolicy1.setStatus("current")


class _VRtrGrtImportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtImportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtImportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtImportPolicy2_Object = MibTableColumn
vRtrGrtImportPolicy2 = _VRtrGrtImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 31),
    _VRtrGrtImportPolicy2_Type()
)
vRtrGrtImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtImportPolicy2.setStatus("current")


class _VRtrGrtImportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtImportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtImportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtImportPolicy3_Object = MibTableColumn
vRtrGrtImportPolicy3 = _VRtrGrtImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 32),
    _VRtrGrtImportPolicy3_Type()
)
vRtrGrtImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtImportPolicy3.setStatus("current")


class _VRtrGrtImportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtImportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtImportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtImportPolicy4_Object = MibTableColumn
vRtrGrtImportPolicy4 = _VRtrGrtImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 33),
    _VRtrGrtImportPolicy4_Type()
)
vRtrGrtImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtImportPolicy4.setStatus("current")


class _VRtrGrtImportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrGrtImportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrGrtImportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrGrtImportPolicy5_Object = MibTableColumn
vRtrGrtImportPolicy5 = _VRtrGrtImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 16, 1, 34),
    _VRtrGrtImportPolicy5_Type()
)
vRtrGrtImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtImportPolicy5.setStatus("current")
_VRtrTunnelTable_Object = MibTable
vRtrTunnelTable = _VRtrTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17)
)
if mibBuilder.loadTexts:
    vRtrTunnelTable.setStatus("obsolete")
_VRtrTunnelEntry_Object = MibTableRow
vRtrTunnelEntry = _VRtrTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1)
)
vRtrTunnelEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelMask"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelPreference"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrTunnelNexthop"),
)
if mibBuilder.loadTexts:
    vRtrTunnelEntry.setStatus("obsolete")
_VRtrTunnelDest_Type = IpAddress
_VRtrTunnelDest_Object = MibTableColumn
vRtrTunnelDest = _VRtrTunnelDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 1),
    _VRtrTunnelDest_Type()
)
vRtrTunnelDest.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelDest.setStatus("obsolete")
_VRtrTunnelMask_Type = IpAddress
_VRtrTunnelMask_Object = MibTableColumn
vRtrTunnelMask = _VRtrTunnelMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 2),
    _VRtrTunnelMask_Type()
)
vRtrTunnelMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelMask.setStatus("obsolete")


class _VRtrTunnelPreference_Type(Unsigned32):
    """Custom type vRtrTunnelPreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrTunnelPreference_Type.__name__ = "Unsigned32"
_VRtrTunnelPreference_Object = MibTableColumn
vRtrTunnelPreference = _VRtrTunnelPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 3),
    _VRtrTunnelPreference_Type()
)
vRtrTunnelPreference.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelPreference.setStatus("obsolete")
_VRtrTunnelType_Type = TmnxTunnelType
_VRtrTunnelType_Object = MibTableColumn
vRtrTunnelType = _VRtrTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 4),
    _VRtrTunnelType_Type()
)
vRtrTunnelType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelType.setStatus("obsolete")
_VRtrTunnelID_Type = TmnxTunnelID
_VRtrTunnelID_Object = MibTableColumn
vRtrTunnelID = _VRtrTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 5),
    _VRtrTunnelID_Type()
)
vRtrTunnelID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelID.setStatus("obsolete")
_VRtrTunnelNexthop_Type = IpAddress
_VRtrTunnelNexthop_Object = MibTableColumn
vRtrTunnelNexthop = _VRtrTunnelNexthop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 6),
    _VRtrTunnelNexthop_Type()
)
vRtrTunnelNexthop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrTunnelNexthop.setStatus("obsolete")
_VRtrTunnelMetric_Type = Unsigned32
_VRtrTunnelMetric_Object = MibTableColumn
vRtrTunnelMetric = _VRtrTunnelMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 7),
    _VRtrTunnelMetric_Type()
)
vRtrTunnelMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrTunnelMetric.setStatus("obsolete")
_VRtrTunnelAge_Type = Integer32
_VRtrTunnelAge_Object = MibTableColumn
vRtrTunnelAge = _VRtrTunnelAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 8),
    _VRtrTunnelAge_Type()
)
vRtrTunnelAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrTunnelAge.setStatus("obsolete")


class _VRtrTunnelNextHopFlags_Type(Integer32):
    """Custom type vRtrTunnelNextHopFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("hasLfa", 1),
          ("hasBackup", 2),
          ("isBackup", 3),
          ("isBgpInactive", 4))
    )


_VRtrTunnelNextHopFlags_Type.__name__ = "Integer32"
_VRtrTunnelNextHopFlags_Object = MibTableColumn
vRtrTunnelNextHopFlags = _VRtrTunnelNextHopFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 17, 1, 9),
    _VRtrTunnelNextHopFlags_Type()
)
vRtrTunnelNextHopFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrTunnelNextHopFlags.setStatus("obsolete")
_VRtrIfProxyArpTable_Object = MibTable
vRtrIfProxyArpTable = _VRtrIfProxyArpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18)
)
if mibBuilder.loadTexts:
    vRtrIfProxyArpTable.setStatus("current")
_VRtrIfProxyArpEntry_Object = MibTableRow
vRtrIfProxyArpEntry = _VRtrIfProxyArpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1)
)
if mibBuilder.loadTexts:
    vRtrIfProxyArpEntry.setStatus("current")


class _VRtrIfProxyArp_Type(TruthValue):
    """Custom type vRtrIfProxyArp based on TruthValue"""
    defaultValue = 2


_VRtrIfProxyArp_Type.__name__ = "TruthValue"
_VRtrIfProxyArp_Object = MibTableColumn
vRtrIfProxyArp = _VRtrIfProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 1),
    _VRtrIfProxyArp_Type()
)
vRtrIfProxyArp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArp.setStatus("current")


class _VRtrIfProxyArpLocal_Type(TruthValue):
    """Custom type vRtrIfProxyArpLocal based on TruthValue"""
    defaultValue = 2


_VRtrIfProxyArpLocal_Type.__name__ = "TruthValue"
_VRtrIfProxyArpLocal_Object = MibTableColumn
vRtrIfProxyArpLocal = _VRtrIfProxyArpLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 2),
    _VRtrIfProxyArpLocal_Type()
)
vRtrIfProxyArpLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpLocal.setStatus("current")


class _VRtrIfProxyArpPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyArpPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyArpPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyArpPolicy1_Object = MibTableColumn
vRtrIfProxyArpPolicy1 = _VRtrIfProxyArpPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 3),
    _VRtrIfProxyArpPolicy1_Type()
)
vRtrIfProxyArpPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpPolicy1.setStatus("current")


class _VRtrIfProxyArpPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyArpPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyArpPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyArpPolicy2_Object = MibTableColumn
vRtrIfProxyArpPolicy2 = _VRtrIfProxyArpPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 4),
    _VRtrIfProxyArpPolicy2_Type()
)
vRtrIfProxyArpPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpPolicy2.setStatus("current")


class _VRtrIfProxyArpPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyArpPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyArpPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyArpPolicy3_Object = MibTableColumn
vRtrIfProxyArpPolicy3 = _VRtrIfProxyArpPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 5),
    _VRtrIfProxyArpPolicy3_Type()
)
vRtrIfProxyArpPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpPolicy3.setStatus("current")


class _VRtrIfProxyArpPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyArpPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyArpPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyArpPolicy4_Object = MibTableColumn
vRtrIfProxyArpPolicy4 = _VRtrIfProxyArpPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 6),
    _VRtrIfProxyArpPolicy4_Type()
)
vRtrIfProxyArpPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpPolicy4.setStatus("current")


class _VRtrIfProxyArpPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyArpPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyArpPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyArpPolicy5_Object = MibTableColumn
vRtrIfProxyArpPolicy5 = _VRtrIfProxyArpPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 18, 1, 7),
    _VRtrIfProxyArpPolicy5_Type()
)
vRtrIfProxyArpPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyArpPolicy5.setStatus("current")
_VRtrIfDHCPTable_Object = MibTable
vRtrIfDHCPTable = _VRtrIfDHCPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPTable.setStatus("current")
_VRtrIfDHCPEntry_Object = MibTableRow
vRtrIfDHCPEntry = _VRtrIfDHCPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPEntry.setStatus("current")


class _VRtrIfDHCPRelayInfoOption_Type(TruthValue):
    """Custom type vRtrIfDHCPRelayInfoOption based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPRelayInfoOption_Type.__name__ = "TruthValue"
_VRtrIfDHCPRelayInfoOption_Object = MibTableColumn
vRtrIfDHCPRelayInfoOption = _VRtrIfDHCPRelayInfoOption_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 1),
    _VRtrIfDHCPRelayInfoOption_Type()
)
vRtrIfDHCPRelayInfoOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayInfoOption.setStatus("obsolete")


class _VRtrIfDHCPRelayInfoAction_Type(Integer32):
    """Custom type vRtrIfDHCPRelayInfoAction based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("replace", 1),
          ("drop", 2),
          ("keep", 3))
    )


_VRtrIfDHCPRelayInfoAction_Type.__name__ = "Integer32"
_VRtrIfDHCPRelayInfoAction_Object = MibTableColumn
vRtrIfDHCPRelayInfoAction = _VRtrIfDHCPRelayInfoAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 2),
    _VRtrIfDHCPRelayInfoAction_Type()
)
vRtrIfDHCPRelayInfoAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayInfoAction.setStatus("current")


class _VRtrIfDHCPRelayCircuitId_Type(Integer32):
    """Custom type vRtrIfDHCPRelayCircuitId based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ifIndex", 1),
          ("asciiTuple", 2),
          ("sapId", 3),
          ("vlanAsciiTuple", 4),
          ("portId", 5),
          ("ifName", 6))
    )


_VRtrIfDHCPRelayCircuitId_Type.__name__ = "Integer32"
_VRtrIfDHCPRelayCircuitId_Object = MibTableColumn
vRtrIfDHCPRelayCircuitId = _VRtrIfDHCPRelayCircuitId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 3),
    _VRtrIfDHCPRelayCircuitId_Type()
)
vRtrIfDHCPRelayCircuitId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayCircuitId.setStatus("current")


class _VRtrIfDHCPRelayRemoteId_Type(Integer32):
    """Custom type vRtrIfDHCPRelayRemoteId based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("mac", 1),
          ("none", 2),
          ("remote-id", 3))
    )


_VRtrIfDHCPRelayRemoteId_Type.__name__ = "Integer32"
_VRtrIfDHCPRelayRemoteId_Object = MibTableColumn
vRtrIfDHCPRelayRemoteId = _VRtrIfDHCPRelayRemoteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 4),
    _VRtrIfDHCPRelayRemoteId_Type()
)
vRtrIfDHCPRelayRemoteId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayRemoteId.setStatus("current")


class _VRtrIfDHCPAutoFilter_Type(Unsigned32):
    """Custom type vRtrIfDHCPAutoFilter based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2000),
    )


_VRtrIfDHCPAutoFilter_Type.__name__ = "Unsigned32"
_VRtrIfDHCPAutoFilter_Object = MibTableColumn
vRtrIfDHCPAutoFilter = _VRtrIfDHCPAutoFilter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 5),
    _VRtrIfDHCPAutoFilter_Type()
)
vRtrIfDHCPAutoFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPAutoFilter.setStatus("obsolete")


class _VRtrIfDHCPRelayServer1_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer1 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer1_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer1_Object = MibTableColumn
vRtrIfDHCPRelayServer1 = _VRtrIfDHCPRelayServer1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 6),
    _VRtrIfDHCPRelayServer1_Type()
)
vRtrIfDHCPRelayServer1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer1.setStatus("current")


class _VRtrIfDHCPRelayServer2_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer2 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer2_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer2_Object = MibTableColumn
vRtrIfDHCPRelayServer2 = _VRtrIfDHCPRelayServer2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 7),
    _VRtrIfDHCPRelayServer2_Type()
)
vRtrIfDHCPRelayServer2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer2.setStatus("current")


class _VRtrIfDHCPRelayServer3_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer3 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer3_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer3_Object = MibTableColumn
vRtrIfDHCPRelayServer3 = _VRtrIfDHCPRelayServer3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 8),
    _VRtrIfDHCPRelayServer3_Type()
)
vRtrIfDHCPRelayServer3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer3.setStatus("current")


class _VRtrIfDHCPRelayServer4_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer4 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer4_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer4_Object = MibTableColumn
vRtrIfDHCPRelayServer4 = _VRtrIfDHCPRelayServer4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 9),
    _VRtrIfDHCPRelayServer4_Type()
)
vRtrIfDHCPRelayServer4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer4.setStatus("current")


class _VRtrIfDHCPRelayServer5_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer5 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer5_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer5_Object = MibTableColumn
vRtrIfDHCPRelayServer5 = _VRtrIfDHCPRelayServer5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 10),
    _VRtrIfDHCPRelayServer5_Type()
)
vRtrIfDHCPRelayServer5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer5.setStatus("current")


class _VRtrIfDHCPRelayServer6_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer6 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer6_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer6_Object = MibTableColumn
vRtrIfDHCPRelayServer6 = _VRtrIfDHCPRelayServer6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 11),
    _VRtrIfDHCPRelayServer6_Type()
)
vRtrIfDHCPRelayServer6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer6.setStatus("current")


class _VRtrIfDHCPRelayServer7_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer7 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer7_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer7_Object = MibTableColumn
vRtrIfDHCPRelayServer7 = _VRtrIfDHCPRelayServer7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 12),
    _VRtrIfDHCPRelayServer7_Type()
)
vRtrIfDHCPRelayServer7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer7.setStatus("current")


class _VRtrIfDHCPRelayServer8_Type(IpAddress):
    """Custom type vRtrIfDHCPRelayServer8 based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPRelayServer8_Type.__name__ = "IpAddress"
_VRtrIfDHCPRelayServer8_Object = MibTableColumn
vRtrIfDHCPRelayServer8 = _VRtrIfDHCPRelayServer8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 13),
    _VRtrIfDHCPRelayServer8_Type()
)
vRtrIfDHCPRelayServer8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServer8.setStatus("current")


class _VRtrIfDHCPRelayTrusted_Type(TruthValue):
    """Custom type vRtrIfDHCPRelayTrusted based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPRelayTrusted_Type.__name__ = "TruthValue"
_VRtrIfDHCPRelayTrusted_Object = MibTableColumn
vRtrIfDHCPRelayTrusted = _VRtrIfDHCPRelayTrusted_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 14),
    _VRtrIfDHCPRelayTrusted_Type()
)
vRtrIfDHCPRelayTrusted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayTrusted.setStatus("current")


class _VRtrIfDHCPAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCPAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCPAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCPAdminState_Object = MibTableColumn
vRtrIfDHCPAdminState = _VRtrIfDHCPAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 15),
    _VRtrIfDHCPAdminState_Type()
)
vRtrIfDHCPAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPAdminState.setStatus("current")


class _VRtrIfDHCPSnooping_Type(Integer32):
    """Custom type vRtrIfDHCPSnooping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_VRtrIfDHCPSnooping_Type.__name__ = "Integer32"
_VRtrIfDHCPSnooping_Object = MibTableColumn
vRtrIfDHCPSnooping = _VRtrIfDHCPSnooping_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 16),
    _VRtrIfDHCPSnooping_Type()
)
vRtrIfDHCPSnooping.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPSnooping.setStatus("obsolete")


class _VRtrIfDHCPDescription_Type(TItemDescription):
    """Custom type vRtrIfDHCPDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrIfDHCPDescription_Type.__name__ = "TItemDescription"
_VRtrIfDHCPDescription_Object = MibTableColumn
vRtrIfDHCPDescription = _VRtrIfDHCPDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 17),
    _VRtrIfDHCPDescription_Type()
)
vRtrIfDHCPDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPDescription.setStatus("current")
_VRtrIfDHCPAutoFilterId_Type = TFilterID
_VRtrIfDHCPAutoFilterId_Object = MibTableColumn
vRtrIfDHCPAutoFilterId = _VRtrIfDHCPAutoFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 18),
    _VRtrIfDHCPAutoFilterId_Type()
)
vRtrIfDHCPAutoFilterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPAutoFilterId.setStatus("obsolete")


class _VRtrIfDHCPOperAutoFilter_Type(Unsigned32):
    """Custom type vRtrIfDHCPOperAutoFilter based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2000),
    )


_VRtrIfDHCPOperAutoFilter_Type.__name__ = "Unsigned32"
_VRtrIfDHCPOperAutoFilter_Object = MibTableColumn
vRtrIfDHCPOperAutoFilter = _VRtrIfDHCPOperAutoFilter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 19),
    _VRtrIfDHCPOperAutoFilter_Type()
)
vRtrIfDHCPOperAutoFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPOperAutoFilter.setStatus("obsolete")


class _VRtrIfDHCPAuthPolicy_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfDHCPAuthPolicy based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfDHCPAuthPolicy_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfDHCPAuthPolicy_Object = MibTableColumn
vRtrIfDHCPAuthPolicy = _VRtrIfDHCPAuthPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 20),
    _VRtrIfDHCPAuthPolicy_Type()
)
vRtrIfDHCPAuthPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPAuthPolicy.setStatus("current")


class _VRtrIfDHCPLeasePopulate_Type(Unsigned32):
    """Custom type vRtrIfDHCPLeasePopulate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_VRtrIfDHCPLeasePopulate_Type.__name__ = "Unsigned32"
_VRtrIfDHCPLeasePopulate_Object = MibTableColumn
vRtrIfDHCPLeasePopulate = _VRtrIfDHCPLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 21),
    _VRtrIfDHCPLeasePopulate_Type()
)
vRtrIfDHCPLeasePopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPLeasePopulate.setStatus("current")


class _VRtrIfDHCPOperLeasePopulate_Type(Unsigned32):
    """Custom type vRtrIfDHCPOperLeasePopulate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_VRtrIfDHCPOperLeasePopulate_Type.__name__ = "Unsigned32"
_VRtrIfDHCPOperLeasePopulate_Object = MibTableColumn
vRtrIfDHCPOperLeasePopulate = _VRtrIfDHCPOperLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 22),
    _VRtrIfDHCPOperLeasePopulate_Type()
)
vRtrIfDHCPOperLeasePopulate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPOperLeasePopulate.setStatus("current")


class _VRtrIfDHCPGiAddressType_Type(InetAddressType):
    """Custom type vRtrIfDHCPGiAddressType based on InetAddressType"""
    defaultValue = 1


_VRtrIfDHCPGiAddressType_Type.__name__ = "InetAddressType"
_VRtrIfDHCPGiAddressType_Object = MibTableColumn
vRtrIfDHCPGiAddressType = _VRtrIfDHCPGiAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 23),
    _VRtrIfDHCPGiAddressType_Type()
)
vRtrIfDHCPGiAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPGiAddressType.setStatus("current")


class _VRtrIfDHCPGiAddress_Type(InetAddress):
    """Custom type vRtrIfDHCPGiAddress based on InetAddress"""
    defaultHexValue = "00000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfDHCPGiAddress_Type.__name__ = "InetAddress"
_VRtrIfDHCPGiAddress_Object = MibTableColumn
vRtrIfDHCPGiAddress = _VRtrIfDHCPGiAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 24),
    _VRtrIfDHCPGiAddress_Type()
)
vRtrIfDHCPGiAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPGiAddress.setStatus("current")


class _VRtrIfDHCPGiAddressAsSrc_Type(TruthValue):
    """Custom type vRtrIfDHCPGiAddressAsSrc based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPGiAddressAsSrc_Type.__name__ = "TruthValue"
_VRtrIfDHCPGiAddressAsSrc_Object = MibTableColumn
vRtrIfDHCPGiAddressAsSrc = _VRtrIfDHCPGiAddressAsSrc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 25),
    _VRtrIfDHCPGiAddressAsSrc_Type()
)
vRtrIfDHCPGiAddressAsSrc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPGiAddressAsSrc.setStatus("current")


class _VRtrIfDHCPMatchOption82_Type(TruthValue):
    """Custom type vRtrIfDHCPMatchOption82 based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPMatchOption82_Type.__name__ = "TruthValue"
_VRtrIfDHCPMatchOption82_Object = MibTableColumn
vRtrIfDHCPMatchOption82 = _VRtrIfDHCPMatchOption82_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 26),
    _VRtrIfDHCPMatchOption82_Type()
)
vRtrIfDHCPMatchOption82.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPMatchOption82.setStatus("current")


class _VRtrIfDHCPRelayRemoteIdStr_Type(DisplayString):
    """Custom type vRtrIfDHCPRelayRemoteIdStr based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrIfDHCPRelayRemoteIdStr_Type.__name__ = "DisplayString"
_VRtrIfDHCPRelayRemoteIdStr_Object = MibTableColumn
vRtrIfDHCPRelayRemoteIdStr = _VRtrIfDHCPRelayRemoteIdStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 27),
    _VRtrIfDHCPRelayRemoteIdStr_Type()
)
vRtrIfDHCPRelayRemoteIdStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayRemoteIdStr.setStatus("current")


class _VRtrIfDHCPProxyAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCPProxyAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCPProxyAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCPProxyAdminState_Object = MibTableColumn
vRtrIfDHCPProxyAdminState = _VRtrIfDHCPProxyAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 28),
    _VRtrIfDHCPProxyAdminState_Type()
)
vRtrIfDHCPProxyAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPProxyAdminState.setStatus("current")


class _VRtrIfDHCPProxyServerAddr_Type(IpAddress):
    """Custom type vRtrIfDHCPProxyServerAddr based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfDHCPProxyServerAddr_Type.__name__ = "IpAddress"
_VRtrIfDHCPProxyServerAddr_Object = MibTableColumn
vRtrIfDHCPProxyServerAddr = _VRtrIfDHCPProxyServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 29),
    _VRtrIfDHCPProxyServerAddr_Type()
)
vRtrIfDHCPProxyServerAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPProxyServerAddr.setStatus("current")


class _VRtrIfDHCPProxyLeaseTime_Type(Unsigned32):
    """Custom type vRtrIfDHCPProxyLeaseTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(300, 315446399),
    )


_VRtrIfDHCPProxyLeaseTime_Type.__name__ = "Unsigned32"
_VRtrIfDHCPProxyLeaseTime_Object = MibTableColumn
vRtrIfDHCPProxyLeaseTime = _VRtrIfDHCPProxyLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 30),
    _VRtrIfDHCPProxyLeaseTime_Type()
)
vRtrIfDHCPProxyLeaseTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPProxyLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCPProxyLeaseTime.setUnits("seconds")


class _VRtrIfDHCPProxyLTRadiusOverride_Type(TruthValue):
    """Custom type vRtrIfDHCPProxyLTRadiusOverride based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPProxyLTRadiusOverride_Type.__name__ = "TruthValue"
_VRtrIfDHCPProxyLTRadiusOverride_Object = MibTableColumn
vRtrIfDHCPProxyLTRadiusOverride = _VRtrIfDHCPProxyLTRadiusOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 31),
    _VRtrIfDHCPProxyLTRadiusOverride_Type()
)
vRtrIfDHCPProxyLTRadiusOverride.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPProxyLTRadiusOverride.setStatus("current")


class _VRtrIfDHCPVendorIncludeOptions_Type(Bits):
    """Custom type vRtrIfDHCPVendorIncludeOptions based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("systemId", 0),
          ("clientMac", 1),
          ("serviceId", 2),
          ("sapId", 3),
          ("poolName", 4),
          ("portId", 5))
    )

_VRtrIfDHCPVendorIncludeOptions_Type.__name__ = "Bits"
_VRtrIfDHCPVendorIncludeOptions_Object = MibTableColumn
vRtrIfDHCPVendorIncludeOptions = _VRtrIfDHCPVendorIncludeOptions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 32),
    _VRtrIfDHCPVendorIncludeOptions_Type()
)
vRtrIfDHCPVendorIncludeOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPVendorIncludeOptions.setStatus("current")


class _VRtrIfDHCPVendorOptionString_Type(DisplayString):
    """Custom type vRtrIfDHCPVendorOptionString based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrIfDHCPVendorOptionString_Type.__name__ = "DisplayString"
_VRtrIfDHCPVendorOptionString_Object = MibTableColumn
vRtrIfDHCPVendorOptionString = _VRtrIfDHCPVendorOptionString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 33),
    _VRtrIfDHCPVendorOptionString_Type()
)
vRtrIfDHCPVendorOptionString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPVendorOptionString.setStatus("current")


class _VRtrIfDHCPLayer2Header_Type(TruthValue):
    """Custom type vRtrIfDHCPLayer2Header based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPLayer2Header_Type.__name__ = "TruthValue"
_VRtrIfDHCPLayer2Header_Object = MibTableColumn
vRtrIfDHCPLayer2Header = _VRtrIfDHCPLayer2Header_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 34),
    _VRtrIfDHCPLayer2Header_Type()
)
vRtrIfDHCPLayer2Header.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPLayer2Header.setStatus("current")


class _VRtrIfDHCPAntiSpoofMacAddr_Type(MacAddress):
    """Custom type vRtrIfDHCPAntiSpoofMacAddr based on MacAddress"""
    defaultHexValue = "000000000000"


_VRtrIfDHCPAntiSpoofMacAddr_Type.__name__ = "MacAddress"
_VRtrIfDHCPAntiSpoofMacAddr_Object = MibTableColumn
vRtrIfDHCPAntiSpoofMacAddr = _VRtrIfDHCPAntiSpoofMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 35),
    _VRtrIfDHCPAntiSpoofMacAddr_Type()
)
vRtrIfDHCPAntiSpoofMacAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPAntiSpoofMacAddr.setStatus("current")


class _VRtrIfDHCPClientApplications_Type(Bits):
    """Custom type vRtrIfDHCPClientApplications based on Bits"""
    defaultBinValue = "1"

    namedValues = NamedValues(
        *(("dhcp", 0),
          ("ppp", 1))
    )

_VRtrIfDHCPClientApplications_Type.__name__ = "Bits"
_VRtrIfDHCPClientApplications_Object = MibTableColumn
vRtrIfDHCPClientApplications = _VRtrIfDHCPClientApplications_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 36),
    _VRtrIfDHCPClientApplications_Type()
)
vRtrIfDHCPClientApplications.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPClientApplications.setStatus("current")


class _VRtrIfDHCPRelayPlainBootp_Type(Integer32):
    """Custom type vRtrIfDHCPRelayPlainBootp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_VRtrIfDHCPRelayPlainBootp_Type.__name__ = "Integer32"
_VRtrIfDHCPRelayPlainBootp_Object = MibTableColumn
vRtrIfDHCPRelayPlainBootp = _VRtrIfDHCPRelayPlainBootp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 37),
    _VRtrIfDHCPRelayPlainBootp_Type()
)
vRtrIfDHCPRelayPlainBootp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayPlainBootp.setStatus("current")


class _VRtrIfDHCPUserDb_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDHCPUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfDHCPUserDb_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDHCPUserDb_Object = MibTableColumn
vRtrIfDHCPUserDb = _VRtrIfDHCPUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 38),
    _VRtrIfDHCPUserDb_Type()
)
vRtrIfDHCPUserDb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPUserDb.setStatus("current")


class _VRtrIfDHCPUseArpForReply_Type(TruthValue):
    """Custom type vRtrIfDHCPUseArpForReply based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPUseArpForReply_Type.__name__ = "TruthValue"
_VRtrIfDHCPUseArpForReply_Object = MibTableColumn
vRtrIfDHCPUseArpForReply = _VRtrIfDHCPUseArpForReply_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 39),
    _VRtrIfDHCPUseArpForReply_Type()
)
vRtrIfDHCPUseArpForReply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPUseArpForReply.setStatus("current")


class _VRtrIfDHCPFilterId_Type(TDHCPFilterID):
    """Custom type vRtrIfDHCPFilterId based on TDHCPFilterID"""
    defaultValue = 0


_VRtrIfDHCPFilterId_Type.__name__ = "TDHCPFilterID"
_VRtrIfDHCPFilterId_Object = MibTableColumn
vRtrIfDHCPFilterId = _VRtrIfDHCPFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 40),
    _VRtrIfDHCPFilterId_Type()
)
vRtrIfDHCPFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPFilterId.setStatus("current")


class _VRtrIfDHCPRelayUnicastMsg_Type(Integer32):
    """Custom type vRtrIfDHCPRelayUnicastMsg based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("renew", 1),
          ("releaseUpdSrcIp", 2))
    )


_VRtrIfDHCPRelayUnicastMsg_Type.__name__ = "Integer32"
_VRtrIfDHCPRelayUnicastMsg_Object = MibTableColumn
vRtrIfDHCPRelayUnicastMsg = _VRtrIfDHCPRelayUnicastMsg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 41),
    _VRtrIfDHCPRelayUnicastMsg_Type()
)
vRtrIfDHCPRelayUnicastMsg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayUnicastMsg.setStatus("current")


class _VRtrIfDHCPPythonPolicy_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDHCPPythonPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfDHCPPythonPolicy_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDHCPPythonPolicy_Object = MibTableColumn
vRtrIfDHCPPythonPolicy = _VRtrIfDHCPPythonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 42),
    _VRtrIfDHCPPythonPolicy_Type()
)
vRtrIfDHCPPythonPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPPythonPolicy.setStatus("current")


class _VRtrIfDHCPVirtualSubnet_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfDHCPVirtualSubnet based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfDHCPVirtualSubnet_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfDHCPVirtualSubnet_Object = MibTableColumn
vRtrIfDHCPVirtualSubnet = _VRtrIfDHCPVirtualSubnet_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 44),
    _VRtrIfDHCPVirtualSubnet_Type()
)
vRtrIfDHCPVirtualSubnet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPVirtualSubnet.setStatus("current")


class _VRtrIfDHCPRelaySiaddrOvrAddrType_Type(InetAddressType):
    """Custom type vRtrIfDHCPRelaySiaddrOvrAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfDHCPRelaySiaddrOvrAddrType_Type.__name__ = "InetAddressType"
_VRtrIfDHCPRelaySiaddrOvrAddrType_Object = MibTableColumn
vRtrIfDHCPRelaySiaddrOvrAddrType = _VRtrIfDHCPRelaySiaddrOvrAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 45),
    _VRtrIfDHCPRelaySiaddrOvrAddrType_Type()
)
vRtrIfDHCPRelaySiaddrOvrAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelaySiaddrOvrAddrType.setStatus("current")


class _VRtrIfDHCPRelaySiaddrOvrAddr_Type(InetAddress):
    """Custom type vRtrIfDHCPRelaySiaddrOvrAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfDHCPRelaySiaddrOvrAddr_Type.__name__ = "InetAddress"
_VRtrIfDHCPRelaySiaddrOvrAddr_Object = MibTableColumn
vRtrIfDHCPRelaySiaddrOvrAddr = _VRtrIfDHCPRelaySiaddrOvrAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 46),
    _VRtrIfDHCPRelaySiaddrOvrAddr_Type()
)
vRtrIfDHCPRelaySiaddrOvrAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelaySiaddrOvrAddr.setStatus("current")


class _VRtrIfDHCPOSelDiscoDly_Type(Integer32):
    """Custom type vRtrIfDHCPOSelDiscoDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCPOSelDiscoDly_Type.__name__ = "Integer32"
_VRtrIfDHCPOSelDiscoDly_Object = MibTableColumn
vRtrIfDHCPOSelDiscoDly = _VRtrIfDHCPOSelDiscoDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 47),
    _VRtrIfDHCPOSelDiscoDly_Type()
)
vRtrIfDHCPOSelDiscoDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelDiscoDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelDiscoDly.setUnits("deci-seconds")


class _VRtrIfDHCPOSelClntMac_Type(Integer32):
    """Custom type vRtrIfDHCPOSelClntMac based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("odd", 1),
          ("even", 2))
    )


_VRtrIfDHCPOSelClntMac_Type.__name__ = "Integer32"
_VRtrIfDHCPOSelClntMac_Object = MibTableColumn
vRtrIfDHCPOSelClntMac = _VRtrIfDHCPOSelClntMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 48),
    _VRtrIfDHCPOSelClntMac_Type()
)
vRtrIfDHCPOSelClntMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelClntMac.setStatus("current")


class _VRtrIfDHCPOSelClntMacDiscoDly_Type(Integer32):
    """Custom type vRtrIfDHCPOSelClntMacDiscoDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCPOSelClntMacDiscoDly_Type.__name__ = "Integer32"
_VRtrIfDHCPOSelClntMacDiscoDly_Object = MibTableColumn
vRtrIfDHCPOSelClntMacDiscoDly = _VRtrIfDHCPOSelClntMacDiscoDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 49),
    _VRtrIfDHCPOSelClntMacDiscoDly_Type()
)
vRtrIfDHCPOSelClntMacDiscoDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelClntMacDiscoDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelClntMacDiscoDly.setUnits("deci-seconds")


class _VRtrIfDHCPReleaseIncludeGiaddr_Type(TruthValue):
    """Custom type vRtrIfDHCPReleaseIncludeGiaddr based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCPReleaseIncludeGiaddr_Type.__name__ = "TruthValue"
_VRtrIfDHCPReleaseIncludeGiaddr_Object = MibTableColumn
vRtrIfDHCPReleaseIncludeGiaddr = _VRtrIfDHCPReleaseIncludeGiaddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 19, 1, 50),
    _VRtrIfDHCPReleaseIncludeGiaddr_Type()
)
vRtrIfDHCPReleaseIncludeGiaddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPReleaseIncludeGiaddr.setStatus("current")
_VRtrIfDHCPRelayStatsTable_Object = MibTable
vRtrIfDHCPRelayStatsTable = _VRtrIfDHCPRelayStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayStatsTable.setStatus("current")
_VRtrIfDHCPRelayStatsEntry_Object = MibTableRow
vRtrIfDHCPRelayStatsEntry = _VRtrIfDHCPRelayStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayStatsEntry.setStatus("current")
_VRtrIfDHCPRelayRxPkts_Type = Counter32
_VRtrIfDHCPRelayRxPkts_Object = MibTableColumn
vRtrIfDHCPRelayRxPkts = _VRtrIfDHCPRelayRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 1),
    _VRtrIfDHCPRelayRxPkts_Type()
)
vRtrIfDHCPRelayRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayRxPkts.setStatus("current")
_VRtrIfDHCPRelayTxPkts_Type = Counter32
_VRtrIfDHCPRelayTxPkts_Object = MibTableColumn
vRtrIfDHCPRelayTxPkts = _VRtrIfDHCPRelayTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 2),
    _VRtrIfDHCPRelayTxPkts_Type()
)
vRtrIfDHCPRelayTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayTxPkts.setStatus("current")
_VRtrIfDHCPRelayRxMalformedPkts_Type = Counter32
_VRtrIfDHCPRelayRxMalformedPkts_Object = MibTableColumn
vRtrIfDHCPRelayRxMalformedPkts = _VRtrIfDHCPRelayRxMalformedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 3),
    _VRtrIfDHCPRelayRxMalformedPkts_Type()
)
vRtrIfDHCPRelayRxMalformedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayRxMalformedPkts.setStatus("current")
_VRtrIfDHCPRelayRxUntrustedPkts_Type = Counter32
_VRtrIfDHCPRelayRxUntrustedPkts_Object = MibTableColumn
vRtrIfDHCPRelayRxUntrustedPkts = _VRtrIfDHCPRelayRxUntrustedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 4),
    _VRtrIfDHCPRelayRxUntrustedPkts_Type()
)
vRtrIfDHCPRelayRxUntrustedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayRxUntrustedPkts.setStatus("current")
_VRtrIfDHCPRelayClientPktsDiscarded_Type = Counter32
_VRtrIfDHCPRelayClientPktsDiscarded_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsDiscarded = _VRtrIfDHCPRelayClientPktsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 5),
    _VRtrIfDHCPRelayClientPktsDiscarded_Type()
)
vRtrIfDHCPRelayClientPktsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsDiscarded.setStatus("current")
_VRtrIfDHCPRelayClientPktsRelayed_Type = Counter32
_VRtrIfDHCPRelayClientPktsRelayed_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsRelayed = _VRtrIfDHCPRelayClientPktsRelayed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 6),
    _VRtrIfDHCPRelayClientPktsRelayed_Type()
)
vRtrIfDHCPRelayClientPktsRelayed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsRelayed.setStatus("current")
_VRtrIfDHCPRelayServerPktsDiscarded_Type = Counter32
_VRtrIfDHCPRelayServerPktsDiscarded_Object = MibTableColumn
vRtrIfDHCPRelayServerPktsDiscarded = _VRtrIfDHCPRelayServerPktsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 7),
    _VRtrIfDHCPRelayServerPktsDiscarded_Type()
)
vRtrIfDHCPRelayServerPktsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServerPktsDiscarded.setStatus("current")
_VRtrIfDHCPRelayServerPktsRelayed_Type = Counter32
_VRtrIfDHCPRelayServerPktsRelayed_Object = MibTableColumn
vRtrIfDHCPRelayServerPktsRelayed = _VRtrIfDHCPRelayServerPktsRelayed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 8),
    _VRtrIfDHCPRelayServerPktsRelayed_Type()
)
vRtrIfDHCPRelayServerPktsRelayed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServerPktsRelayed.setStatus("current")
_VRtrIfDHCPRelayAuthPktsDiscarded_Type = Counter32
_VRtrIfDHCPRelayAuthPktsDiscarded_Object = MibTableColumn
vRtrIfDHCPRelayAuthPktsDiscarded = _VRtrIfDHCPRelayAuthPktsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 9),
    _VRtrIfDHCPRelayAuthPktsDiscarded_Type()
)
vRtrIfDHCPRelayAuthPktsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayAuthPktsDiscarded.setStatus("current")
_VRtrIfDHCPRelayAuthPktsSuccess_Type = Counter32
_VRtrIfDHCPRelayAuthPktsSuccess_Object = MibTableColumn
vRtrIfDHCPRelayAuthPktsSuccess = _VRtrIfDHCPRelayAuthPktsSuccess_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 10),
    _VRtrIfDHCPRelayAuthPktsSuccess_Type()
)
vRtrIfDHCPRelayAuthPktsSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayAuthPktsSuccess.setStatus("current")
_VRtrIfDHCPRelayClientPktsSnooped_Type = Counter32
_VRtrIfDHCPRelayClientPktsSnooped_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsSnooped = _VRtrIfDHCPRelayClientPktsSnooped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 11),
    _VRtrIfDHCPRelayClientPktsSnooped_Type()
)
vRtrIfDHCPRelayClientPktsSnooped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsSnooped.setStatus("current")
_VRtrIfDHCPRelayServerPktsSnooped_Type = Counter32
_VRtrIfDHCPRelayServerPktsSnooped_Object = MibTableColumn
vRtrIfDHCPRelayServerPktsSnooped = _VRtrIfDHCPRelayServerPktsSnooped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 12),
    _VRtrIfDHCPRelayServerPktsSnooped_Type()
)
vRtrIfDHCPRelayServerPktsSnooped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayServerPktsSnooped.setStatus("current")
_VRtrIfDHCPRelayClientPktsProxRad_Type = Counter32
_VRtrIfDHCPRelayClientPktsProxRad_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsProxRad = _VRtrIfDHCPRelayClientPktsProxRad_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 13),
    _VRtrIfDHCPRelayClientPktsProxRad_Type()
)
vRtrIfDHCPRelayClientPktsProxRad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsProxRad.setStatus("current")
_VRtrIfDHCPRelayClientPktsProxLS_Type = Counter32
_VRtrIfDHCPRelayClientPktsProxLS_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsProxLS = _VRtrIfDHCPRelayClientPktsProxLS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 14),
    _VRtrIfDHCPRelayClientPktsProxLS_Type()
)
vRtrIfDHCPRelayClientPktsProxLS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsProxLS.setStatus("current")
_VRtrIfDHCPRelayPktsGenRelease_Type = Counter32
_VRtrIfDHCPRelayPktsGenRelease_Object = MibTableColumn
vRtrIfDHCPRelayPktsGenRelease = _VRtrIfDHCPRelayPktsGenRelease_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 15),
    _VRtrIfDHCPRelayPktsGenRelease_Type()
)
vRtrIfDHCPRelayPktsGenRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayPktsGenRelease.setStatus("current")
_VRtrIfDHCPRelayPktsGenForceRenew_Type = Counter32
_VRtrIfDHCPRelayPktsGenForceRenew_Object = MibTableColumn
vRtrIfDHCPRelayPktsGenForceRenew = _VRtrIfDHCPRelayPktsGenForceRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 16),
    _VRtrIfDHCPRelayPktsGenForceRenew_Type()
)
vRtrIfDHCPRelayPktsGenForceRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayPktsGenForceRenew.setStatus("current")
_VRtrIfDHCPRelayClientPktsProxUDB_Type = Counter32
_VRtrIfDHCPRelayClientPktsProxUDB_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsProxUDB = _VRtrIfDHCPRelayClientPktsProxUDB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 17),
    _VRtrIfDHCPRelayClientPktsProxUDB_Type()
)
vRtrIfDHCPRelayClientPktsProxUDB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsProxUDB.setStatus("current")
_VRtrIfDHCPRelayClientPktsProxNq_Type = Counter32
_VRtrIfDHCPRelayClientPktsProxNq_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsProxNq = _VRtrIfDHCPRelayClientPktsProxNq_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 18),
    _VRtrIfDHCPRelayClientPktsProxNq_Type()
)
vRtrIfDHCPRelayClientPktsProxNq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsProxNq.setStatus("current")
_VRtrIfDHCPRelayClientPktsStream_Type = Counter32
_VRtrIfDHCPRelayClientPktsStream_Object = MibTableColumn
vRtrIfDHCPRelayClientPktsStream = _VRtrIfDHCPRelayClientPktsStream_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 20, 1, 19),
    _VRtrIfDHCPRelayClientPktsStream_Type()
)
vRtrIfDHCPRelayClientPktsStream.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPRelayClientPktsStream.setStatus("current")
_TmnxVRtrNotificationObjects_ObjectIdentity = ObjectIdentity
tmnxVRtrNotificationObjects = _TmnxVRtrNotificationObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21)
)
_VRtrAutoFilterDHCPClientAddress_Type = IpAddress
_VRtrAutoFilterDHCPClientAddress_Object = MibScalar
vRtrAutoFilterDHCPClientAddress = _VRtrAutoFilterDHCPClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 1),
    _VRtrAutoFilterDHCPClientAddress_Type()
)
vRtrAutoFilterDHCPClientAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrAutoFilterDHCPClientAddress.setStatus("obsolete")
_VRtrAutoFilterDHCPClientLease_Type = Unsigned32
_VRtrAutoFilterDHCPClientLease_Object = MibScalar
vRtrAutoFilterDHCPClientLease = _VRtrAutoFilterDHCPClientLease_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 2),
    _VRtrAutoFilterDHCPClientLease_Type()
)
vRtrAutoFilterDHCPClientLease.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrAutoFilterDHCPClientLease.setStatus("obsolete")
_VRtrDHCPClientLease_Type = Integer32
_VRtrDHCPClientLease_Object = MibScalar
vRtrDHCPClientLease = _VRtrDHCPClientLease_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 3),
    _VRtrDHCPClientLease_Type()
)
vRtrDHCPClientLease.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCPClientLease.setStatus("obsolete")
_VRtrDhcpLseStateOldCiAddr_Type = IpAddress
_VRtrDhcpLseStateOldCiAddr_Object = MibScalar
vRtrDhcpLseStateOldCiAddr = _VRtrDhcpLseStateOldCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 4),
    _VRtrDhcpLseStateOldCiAddr_Type()
)
vRtrDhcpLseStateOldCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpLseStateOldCiAddr.setStatus("obsolete")
_VRtrDhcpLseStateOldChAddr_Type = MacAddress
_VRtrDhcpLseStateOldChAddr_Object = MibScalar
vRtrDhcpLseStateOldChAddr = _VRtrDhcpLseStateOldChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 5),
    _VRtrDhcpLseStateOldChAddr_Type()
)
vRtrDhcpLseStateOldChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpLseStateOldChAddr.setStatus("obsolete")
_VRtrDhcpLseStateNewCiAddr_Type = IpAddress
_VRtrDhcpLseStateNewCiAddr_Object = MibScalar
vRtrDhcpLseStateNewCiAddr = _VRtrDhcpLseStateNewCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 6),
    _VRtrDhcpLseStateNewCiAddr_Type()
)
vRtrDhcpLseStateNewCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpLseStateNewCiAddr.setStatus("obsolete")
_VRtrDhcpLseStateNewChAddr_Type = MacAddress
_VRtrDhcpLseStateNewChAddr_Object = MibScalar
vRtrDhcpLseStateNewChAddr = _VRtrDhcpLseStateNewChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 7),
    _VRtrDhcpLseStateNewChAddr_Type()
)
vRtrDhcpLseStateNewChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpLseStateNewChAddr.setStatus("obsolete")
_VRtrDhcpRestoreLseStateCiAddr_Type = IpAddress
_VRtrDhcpRestoreLseStateCiAddr_Object = MibScalar
vRtrDhcpRestoreLseStateCiAddr = _VRtrDhcpRestoreLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 8),
    _VRtrDhcpRestoreLseStateCiAddr_Type()
)
vRtrDhcpRestoreLseStateCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpRestoreLseStateCiAddr.setStatus("obsolete")
_VRtrDhcpRestoreLseStateVRtrId_Type = TmnxVRtrID
_VRtrDhcpRestoreLseStateVRtrId_Object = MibScalar
vRtrDhcpRestoreLseStateVRtrId = _VRtrDhcpRestoreLseStateVRtrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 9),
    _VRtrDhcpRestoreLseStateVRtrId_Type()
)
vRtrDhcpRestoreLseStateVRtrId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpRestoreLseStateVRtrId.setStatus("obsolete")
_VRtrDhcpRestoreLseStateIfIndex_Type = InterfaceIndex
_VRtrDhcpRestoreLseStateIfIndex_Object = MibScalar
vRtrDhcpRestoreLseStateIfIndex = _VRtrDhcpRestoreLseStateIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 10),
    _VRtrDhcpRestoreLseStateIfIndex_Type()
)
vRtrDhcpRestoreLseStateIfIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpRestoreLseStateIfIndex.setStatus("obsolete")
_VRtrDhcpRestoreLseStateProblem_Type = DisplayString
_VRtrDhcpRestoreLseStateProblem_Object = MibScalar
vRtrDhcpRestoreLseStateProblem = _VRtrDhcpRestoreLseStateProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 11),
    _VRtrDhcpRestoreLseStateProblem_Type()
)
vRtrDhcpRestoreLseStateProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpRestoreLseStateProblem.setStatus("obsolete")
_VRtrDhcpPacketProblem_Type = DisplayString
_VRtrDhcpPacketProblem_Object = MibScalar
vRtrDhcpPacketProblem = _VRtrDhcpPacketProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 12),
    _VRtrDhcpPacketProblem_Type()
)
vRtrDhcpPacketProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpPacketProblem.setStatus("current")
_VRtrDhcpLseStatePopulateError_Type = DisplayString
_VRtrDhcpLseStatePopulateError_Object = MibScalar
vRtrDhcpLseStatePopulateError = _VRtrDhcpLseStatePopulateError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 13),
    _VRtrDhcpLseStatePopulateError_Type()
)
vRtrDhcpLseStatePopulateError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDhcpLseStatePopulateError.setStatus("obsolete")
_VRtrBfdSlotNumber_Type = TmnxSlotNum
_VRtrBfdSlotNumber_Object = MibScalar
vRtrBfdSlotNumber = _VRtrBfdSlotNumber_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 14),
    _VRtrBfdSlotNumber_Type()
)
vRtrBfdSlotNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrBfdSlotNumber.setStatus("current")
_VRtrNumberOfBfdSessionsOnSlot_Type = Unsigned32
_VRtrNumberOfBfdSessionsOnSlot_Object = MibScalar
vRtrNumberOfBfdSessionsOnSlot = _VRtrNumberOfBfdSessionsOnSlot_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 15),
    _VRtrNumberOfBfdSessionsOnSlot_Type()
)
vRtrNumberOfBfdSessionsOnSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrNumberOfBfdSessionsOnSlot.setStatus("current")


class _VRtrBfdMaxSessionReason_Type(Bits):
    """Custom type vRtrBfdMaxSessionReason based on Bits"""
    namedValues = NamedValues(
        *(("maxSessionsPerSlot", 0),
          ("maxTxPacketRate", 1),
          ("maxRxPacketRate", 2),
          ("noSupportConfTimers", 3),
          ("maxTableEntries", 4))
    )

_VRtrBfdMaxSessionReason_Type.__name__ = "Bits"
_VRtrBfdMaxSessionReason_Object = MibScalar
vRtrBfdMaxSessionReason = _VRtrBfdMaxSessionReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 16),
    _VRtrBfdMaxSessionReason_Type()
)
vRtrBfdMaxSessionReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrBfdMaxSessionReason.setStatus("current")
_VRtrDHCP6ServerNetAddrType_Type = InetAddressType
_VRtrDHCP6ServerNetAddrType_Object = MibScalar
vRtrDHCP6ServerNetAddrType = _VRtrDHCP6ServerNetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 17),
    _VRtrDHCP6ServerNetAddrType_Type()
)
vRtrDHCP6ServerNetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6ServerNetAddrType.setStatus("current")
_VRtrDHCP6ServerNetAddr_Type = InetAddress
_VRtrDHCP6ServerNetAddr_Object = MibScalar
vRtrDHCP6ServerNetAddr = _VRtrDHCP6ServerNetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 18),
    _VRtrDHCP6ServerNetAddr_Type()
)
vRtrDHCP6ServerNetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6ServerNetAddr.setStatus("current")
_VRtrDHCP6ClientNetAddrType_Type = InetAddressType
_VRtrDHCP6ClientNetAddrType_Object = MibScalar
vRtrDHCP6ClientNetAddrType = _VRtrDHCP6ClientNetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 19),
    _VRtrDHCP6ClientNetAddrType_Type()
)
vRtrDHCP6ClientNetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6ClientNetAddrType.setStatus("current")
_VRtrDHCP6ClientNetAddr_Type = InetAddress
_VRtrDHCP6ClientNetAddr_Object = MibScalar
vRtrDHCP6ClientNetAddr = _VRtrDHCP6ClientNetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 20),
    _VRtrDHCP6ClientNetAddr_Type()
)
vRtrDHCP6ClientNetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6ClientNetAddr.setStatus("current")
_VRtrDHCP6AssignedNetAddrType_Type = InetAddressType
_VRtrDHCP6AssignedNetAddrType_Object = MibScalar
vRtrDHCP6AssignedNetAddrType = _VRtrDHCP6AssignedNetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 21),
    _VRtrDHCP6AssignedNetAddrType_Type()
)
vRtrDHCP6AssignedNetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6AssignedNetAddrType.setStatus("current")
_VRtrDHCP6AssignedNetAddr_Type = InetAddress
_VRtrDHCP6AssignedNetAddr_Object = MibScalar
vRtrDHCP6AssignedNetAddr = _VRtrDHCP6AssignedNetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 22),
    _VRtrDHCP6AssignedNetAddr_Type()
)
vRtrDHCP6AssignedNetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6AssignedNetAddr.setStatus("current")
_VRtrDHCP6AssignedPrefixLen_Type = InetAddressPrefixLength
_VRtrDHCP6AssignedPrefixLen_Object = MibScalar
vRtrDHCP6AssignedPrefixLen = _VRtrDHCP6AssignedPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 23),
    _VRtrDHCP6AssignedPrefixLen_Type()
)
vRtrDHCP6AssignedPrefixLen.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6AssignedPrefixLen.setStatus("current")
_VRtrDHCP6OldAssignedNetAddrType_Type = InetAddressType
_VRtrDHCP6OldAssignedNetAddrType_Object = MibScalar
vRtrDHCP6OldAssignedNetAddrType = _VRtrDHCP6OldAssignedNetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 24),
    _VRtrDHCP6OldAssignedNetAddrType_Type()
)
vRtrDHCP6OldAssignedNetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6OldAssignedNetAddrType.setStatus("current")
_VRtrDHCP6OldAssignedNetAddr_Type = InetAddress
_VRtrDHCP6OldAssignedNetAddr_Object = MibScalar
vRtrDHCP6OldAssignedNetAddr = _VRtrDHCP6OldAssignedNetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 25),
    _VRtrDHCP6OldAssignedNetAddr_Type()
)
vRtrDHCP6OldAssignedNetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6OldAssignedNetAddr.setStatus("current")
_VRtrDHCP6OldAssignedPrefixLen_Type = InetAddressPrefixLength
_VRtrDHCP6OldAssignedPrefixLen_Object = MibScalar
vRtrDHCP6OldAssignedPrefixLen = _VRtrDHCP6OldAssignedPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 26),
    _VRtrDHCP6OldAssignedPrefixLen_Type()
)
vRtrDHCP6OldAssignedPrefixLen.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6OldAssignedPrefixLen.setStatus("current")


class _VRtrDHCP6NewClientId_Type(OctetString):
    """Custom type vRtrDHCP6NewClientId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VRtrDHCP6NewClientId_Type.__name__ = "OctetString"
_VRtrDHCP6NewClientId_Object = MibScalar
vRtrDHCP6NewClientId = _VRtrDHCP6NewClientId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 27),
    _VRtrDHCP6NewClientId_Type()
)
vRtrDHCP6NewClientId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6NewClientId.setStatus("current")


class _VRtrDHCP6OldClientId_Type(OctetString):
    """Custom type vRtrDHCP6OldClientId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VRtrDHCP6OldClientId_Type.__name__ = "OctetString"
_VRtrDHCP6OldClientId_Object = MibScalar
vRtrDHCP6OldClientId = _VRtrDHCP6OldClientId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 28),
    _VRtrDHCP6OldClientId_Type()
)
vRtrDHCP6OldClientId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6OldClientId.setStatus("current")
_VRtrDHCP6LeaseOverrideResult_Type = DisplayString
_VRtrDHCP6LeaseOverrideResult_Object = MibScalar
vRtrDHCP6LeaseOverrideResult = _VRtrDHCP6LeaseOverrideResult_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 29),
    _VRtrDHCP6LeaseOverrideResult_Type()
)
vRtrDHCP6LeaseOverrideResult.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrDHCP6LeaseOverrideResult.setStatus("current")
_VRtrInetStatRteCpeNotifyAddrType_Type = InetAddressType
_VRtrInetStatRteCpeNotifyAddrType_Object = MibScalar
vRtrInetStatRteCpeNotifyAddrType = _VRtrInetStatRteCpeNotifyAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 30),
    _VRtrInetStatRteCpeNotifyAddrType_Type()
)
vRtrInetStatRteCpeNotifyAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeNotifyAddrType.setStatus("current")
_VRtrInetStatRteCpeNotifyAddr_Type = InetAddress
_VRtrInetStatRteCpeNotifyAddr_Object = MibScalar
vRtrInetStatRteCpeNotifyAddr = _VRtrInetStatRteCpeNotifyAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 31),
    _VRtrInetStatRteCpeNotifyAddr_Type()
)
vRtrInetStatRteCpeNotifyAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeNotifyAddr.setStatus("current")


class _VRtrInetStaticRouteCpeStatus_Type(Integer32):
    """Custom type vRtrInetStaticRouteCpeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("reachable", 0),
          ("unreachable", 1))
    )


_VRtrInetStaticRouteCpeStatus_Type.__name__ = "Integer32"
_VRtrInetStaticRouteCpeStatus_Object = MibScalar
vRtrInetStaticRouteCpeStatus = _VRtrInetStaticRouteCpeStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 32),
    _VRtrInetStaticRouteCpeStatus_Type()
)
vRtrInetStaticRouteCpeStatus.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeStatus.setStatus("current")
_VRtrManagedRouteInetAddrType_Type = InetAddressType
_VRtrManagedRouteInetAddrType_Object = MibScalar
vRtrManagedRouteInetAddrType = _VRtrManagedRouteInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 33),
    _VRtrManagedRouteInetAddrType_Type()
)
vRtrManagedRouteInetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrManagedRouteInetAddrType.setStatus("current")


class _VRtrManagedRouteInetAddr_Type(InetAddress):
    """Custom type vRtrManagedRouteInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrManagedRouteInetAddr_Type.__name__ = "InetAddress"
_VRtrManagedRouteInetAddr_Object = MibScalar
vRtrManagedRouteInetAddr = _VRtrManagedRouteInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 34),
    _VRtrManagedRouteInetAddr_Type()
)
vRtrManagedRouteInetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrManagedRouteInetAddr.setStatus("current")
_VRtrManagedRoutePrefixLen_Type = InetAddressPrefixLength
_VRtrManagedRoutePrefixLen_Object = MibScalar
vRtrManagedRoutePrefixLen = _VRtrManagedRoutePrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 35),
    _VRtrManagedRoutePrefixLen_Type()
)
vRtrManagedRoutePrefixLen.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrManagedRoutePrefixLen.setStatus("current")
_VRtrFailureDescription_Type = DisplayString
_VRtrFailureDescription_Object = MibScalar
vRtrFailureDescription = _VRtrFailureDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 36),
    _VRtrFailureDescription_Type()
)
vRtrFailureDescription.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrFailureDescription.setStatus("current")


class _VRtrMaxRoutesType_Type(Integer32):
    """Custom type vRtrMaxRoutesType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1))
    )


_VRtrMaxRoutesType_Type.__name__ = "Integer32"
_VRtrMaxRoutesType_Object = MibScalar
vRtrMaxRoutesType = _VRtrMaxRoutesType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 37),
    _VRtrMaxRoutesType_Type()
)
vRtrMaxRoutesType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrMaxRoutesType.setStatus("current")


class _VRtrSlotOrCpmFlag_Type(Integer32):
    """Custom type vRtrSlotOrCpmFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("slot", 0),
          ("cpm", 1),
          ("reserved2", 2))
    )


_VRtrSlotOrCpmFlag_Type.__name__ = "Integer32"
_VRtrSlotOrCpmFlag_Object = MibScalar
vRtrSlotOrCpmFlag = _VRtrSlotOrCpmFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 38),
    _VRtrSlotOrCpmFlag_Type()
)
vRtrSlotOrCpmFlag.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrSlotOrCpmFlag.setStatus("current")
_VRtrNotifInetAddrType_Type = InetAddressType
_VRtrNotifInetAddrType_Object = MibScalar
vRtrNotifInetAddrType = _VRtrNotifInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 39),
    _VRtrNotifInetAddrType_Type()
)
vRtrNotifInetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrNotifInetAddrType.setStatus("current")


class _VRtrNotifInetAddr_Type(InetAddress):
    """Custom type vRtrNotifInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrNotifInetAddr_Type.__name__ = "InetAddress"
_VRtrNotifInetAddr_Object = MibScalar
vRtrNotifInetAddr = _VRtrNotifInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 40),
    _VRtrNotifInetAddr_Type()
)
vRtrNotifInetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrNotifInetAddr.setStatus("current")
_VRtrIfBfdSessChangedProtocol_Type = DisplayString
_VRtrIfBfdSessChangedProtocol_Object = MibScalar
vRtrIfBfdSessChangedProtocol = _VRtrIfBfdSessChangedProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 41),
    _VRtrIfBfdSessChangedProtocol_Type()
)
vRtrIfBfdSessChangedProtocol.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrIfBfdSessChangedProtocol.setStatus("current")


class _VRtrIfBfdSessProtoChngdState_Type(Integer32):
    """Custom type vRtrIfBfdSessProtoChngdState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("added", 0),
          ("cleared", 1))
    )


_VRtrIfBfdSessProtoChngdState_Type.__name__ = "Integer32"
_VRtrIfBfdSessProtoChngdState_Object = MibScalar
vRtrIfBfdSessProtoChngdState = _VRtrIfBfdSessProtoChngdState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 42),
    _VRtrIfBfdSessProtoChngdState_Type()
)
vRtrIfBfdSessProtoChngdState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrIfBfdSessProtoChngdState.setStatus("current")
_VRtrIfDcpTimeEventOccured_Type = TimeStamp
_VRtrIfDcpTimeEventOccured_Object = MibScalar
vRtrIfDcpTimeEventOccured = _VRtrIfDcpTimeEventOccured_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 43),
    _VRtrIfDcpTimeEventOccured_Type()
)
vRtrIfDcpTimeEventOccured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrIfDcpTimeEventOccured.setStatus("current")
_VRtrNotifTruthValue_Type = TruthValue
_VRtrNotifTruthValue_Object = MibScalar
vRtrNotifTruthValue = _VRtrNotifTruthValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 44),
    _VRtrNotifTruthValue_Type()
)
vRtrNotifTruthValue.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrNotifTruthValue.setStatus("current")
_TmnxVRtrMaxNHRvplsARPEntries_Type = Unsigned32
_TmnxVRtrMaxNHRvplsARPEntries_Object = MibScalar
tmnxVRtrMaxNHRvplsARPEntries = _TmnxVRtrMaxNHRvplsARPEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 45),
    _TmnxVRtrMaxNHRvplsARPEntries_Type()
)
tmnxVRtrMaxNHRvplsARPEntries.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxVRtrMaxNHRvplsARPEntries.setStatus("current")


class _VRtrNotifIgnorePortState_Type(Integer32):
    """Custom type vRtrNotifIgnorePortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("pending", 2))
    )


_VRtrNotifIgnorePortState_Type.__name__ = "Integer32"
_VRtrNotifIgnorePortState_Object = MibScalar
vRtrNotifIgnorePortState = _VRtrNotifIgnorePortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 21, 46),
    _VRtrNotifIgnorePortState_Type()
)
vRtrNotifIgnorePortState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    vRtrNotifIgnorePortState.setStatus("current")
_VRtrIfDHCPLeaseStateTable_Object = MibTable
vRtrIfDHCPLeaseStateTable = _VRtrIfDHCPLeaseStateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPLeaseStateTable.setStatus("obsolete")
_VRtrIfDHCPLeaseStateEntry_Object = MibTableRow
vRtrIfDHCPLeaseStateEntry = _VRtrIfDHCPLeaseStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1)
)
vRtrIfDHCPLeaseStateEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCPLseStateCiAddr"),
)
if mibBuilder.loadTexts:
    vRtrIfDHCPLeaseStateEntry.setStatus("obsolete")
_VRtrIfDHCPLseStateCiAddr_Type = IpAddress
_VRtrIfDHCPLseStateCiAddr_Object = MibTableColumn
vRtrIfDHCPLseStateCiAddr = _VRtrIfDHCPLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1, 1),
    _VRtrIfDHCPLseStateCiAddr_Type()
)
vRtrIfDHCPLseStateCiAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCPLseStateCiAddr.setStatus("obsolete")
_VRtrIfDHCPLseStateChAddr_Type = MacAddress
_VRtrIfDHCPLseStateChAddr_Object = MibTableColumn
vRtrIfDHCPLseStateChAddr = _VRtrIfDHCPLseStateChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1, 2),
    _VRtrIfDHCPLseStateChAddr_Type()
)
vRtrIfDHCPLseStateChAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPLseStateChAddr.setStatus("obsolete")
_VRtrIfDHCPLseStateRemainLseTime_Type = Unsigned32
_VRtrIfDHCPLseStateRemainLseTime_Object = MibTableColumn
vRtrIfDHCPLseStateRemainLseTime = _VRtrIfDHCPLseStateRemainLseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1, 3),
    _VRtrIfDHCPLseStateRemainLseTime_Type()
)
vRtrIfDHCPLseStateRemainLseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPLseStateRemainLseTime.setStatus("obsolete")
_VRtrIfDHCPLseStateOption82_Type = OctetString
_VRtrIfDHCPLseStateOption82_Object = MibTableColumn
vRtrIfDHCPLseStateOption82 = _VRtrIfDHCPLseStateOption82_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1, 4),
    _VRtrIfDHCPLseStateOption82_Type()
)
vRtrIfDHCPLseStateOption82.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPLseStateOption82.setStatus("obsolete")
_VRtrIfDHCPLseStatePersistKey_Type = Unsigned32
_VRtrIfDHCPLseStatePersistKey_Object = MibTableColumn
vRtrIfDHCPLseStatePersistKey = _VRtrIfDHCPLseStatePersistKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 22, 1, 5),
    _VRtrIfDHCPLseStatePersistKey_Type()
)
vRtrIfDHCPLseStatePersistKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCPLseStatePersistKey.setStatus("obsolete")
_VRtrAdvPrefixTable_Object = MibTable
vRtrAdvPrefixTable = _VRtrAdvPrefixTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23)
)
if mibBuilder.loadTexts:
    vRtrAdvPrefixTable.setStatus("current")
_VRtrAdvPrefixEntry_Object = MibTableRow
vRtrAdvPrefixEntry = _VRtrAdvPrefixEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1)
)
vRtrAdvPrefixEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdvPrefixIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdvPrefixPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdvPrefixLength"),
)
if mibBuilder.loadTexts:
    vRtrAdvPrefixEntry.setStatus("current")
_VRtrAdvPrefixIfIndex_Type = InterfaceIndex
_VRtrAdvPrefixIfIndex_Object = MibTableColumn
vRtrAdvPrefixIfIndex = _VRtrAdvPrefixIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 1),
    _VRtrAdvPrefixIfIndex_Type()
)
vRtrAdvPrefixIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAdvPrefixIfIndex.setStatus("current")


class _VRtrAdvPrefixPrefix_Type(InetAddress):
    """Custom type vRtrAdvPrefixPrefix based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_VRtrAdvPrefixPrefix_Type.__name__ = "InetAddress"
_VRtrAdvPrefixPrefix_Object = MibTableColumn
vRtrAdvPrefixPrefix = _VRtrAdvPrefixPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 2),
    _VRtrAdvPrefixPrefix_Type()
)
vRtrAdvPrefixPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAdvPrefixPrefix.setStatus("current")


class _VRtrAdvPrefixLength_Type(InetAddressPrefixLength):
    """Custom type vRtrAdvPrefixLength based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 127),
    )


_VRtrAdvPrefixLength_Type.__name__ = "InetAddressPrefixLength"
_VRtrAdvPrefixLength_Object = MibTableColumn
vRtrAdvPrefixLength = _VRtrAdvPrefixLength_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 3),
    _VRtrAdvPrefixLength_Type()
)
vRtrAdvPrefixLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAdvPrefixLength.setStatus("current")
_VRtrAdvPrefixRowStatus_Type = RowStatus
_VRtrAdvPrefixRowStatus_Object = MibTableColumn
vRtrAdvPrefixRowStatus = _VRtrAdvPrefixRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 4),
    _VRtrAdvPrefixRowStatus_Type()
)
vRtrAdvPrefixRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdvPrefixRowStatus.setStatus("current")


class _VRtrAdvPrefixOnLinkFlag_Type(TruthValue):
    """Custom type vRtrAdvPrefixOnLinkFlag based on TruthValue"""
    defaultValue = 1


_VRtrAdvPrefixOnLinkFlag_Type.__name__ = "TruthValue"
_VRtrAdvPrefixOnLinkFlag_Object = MibTableColumn
vRtrAdvPrefixOnLinkFlag = _VRtrAdvPrefixOnLinkFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 5),
    _VRtrAdvPrefixOnLinkFlag_Type()
)
vRtrAdvPrefixOnLinkFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdvPrefixOnLinkFlag.setStatus("current")


class _VRtrAdvPrefixAutonomousFlag_Type(TruthValue):
    """Custom type vRtrAdvPrefixAutonomousFlag based on TruthValue"""
    defaultValue = 1


_VRtrAdvPrefixAutonomousFlag_Type.__name__ = "TruthValue"
_VRtrAdvPrefixAutonomousFlag_Object = MibTableColumn
vRtrAdvPrefixAutonomousFlag = _VRtrAdvPrefixAutonomousFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 6),
    _VRtrAdvPrefixAutonomousFlag_Type()
)
vRtrAdvPrefixAutonomousFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdvPrefixAutonomousFlag.setStatus("current")


class _VRtrAdvPrefixPreferredLifetime_Type(Unsigned32):
    """Custom type vRtrAdvPrefixPreferredLifetime based on Unsigned32"""
    defaultValue = 604800


_VRtrAdvPrefixPreferredLifetime_Type.__name__ = "Unsigned32"
_VRtrAdvPrefixPreferredLifetime_Object = MibTableColumn
vRtrAdvPrefixPreferredLifetime = _VRtrAdvPrefixPreferredLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 7),
    _VRtrAdvPrefixPreferredLifetime_Type()
)
vRtrAdvPrefixPreferredLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdvPrefixPreferredLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAdvPrefixPreferredLifetime.setUnits("seconds")


class _VRtrAdvPrefixValidLifetime_Type(Unsigned32):
    """Custom type vRtrAdvPrefixValidLifetime based on Unsigned32"""
    defaultValue = 2592000


_VRtrAdvPrefixValidLifetime_Type.__name__ = "Unsigned32"
_VRtrAdvPrefixValidLifetime_Object = MibTableColumn
vRtrAdvPrefixValidLifetime = _VRtrAdvPrefixValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 23, 1, 8),
    _VRtrAdvPrefixValidLifetime_Type()
)
vRtrAdvPrefixValidLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdvPrefixValidLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAdvPrefixValidLifetime.setUnits("seconds")
_VRtrInetStaticRouteTable_Object = MibTable
vRtrInetStaticRouteTable = _VRtrInetStaticRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24)
)
if mibBuilder.loadTexts:
    vRtrInetStaticRouteTable.setStatus("current")
_VRtrInetStaticRouteEntry_Object = MibTableRow
vRtrInetStaticRouteEntry = _VRtrInetStaticRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1)
)
vRtrInetStaticRouteEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIndex"),
)
if mibBuilder.loadTexts:
    vRtrInetStaticRouteEntry.setStatus("current")
_VRtrInetStaticRouteDestType_Type = TmnxInetAddrTypeWithMcast
_VRtrInetStaticRouteDestType_Object = MibTableColumn
vRtrInetStaticRouteDestType = _VRtrInetStaticRouteDestType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 1),
    _VRtrInetStaticRouteDestType_Type()
)
vRtrInetStaticRouteDestType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDestType.setStatus("current")


class _VRtrInetStaticRouteDest_Type(InetAddress):
    """Custom type vRtrInetStaticRouteDest based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrInetStaticRouteDest_Type.__name__ = "InetAddress"
_VRtrInetStaticRouteDest_Object = MibTableColumn
vRtrInetStaticRouteDest = _VRtrInetStaticRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 2),
    _VRtrInetStaticRouteDest_Type()
)
vRtrInetStaticRouteDest.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDest.setStatus("current")
_VRtrInetStaticRouteDestPfxLen_Type = InetAddressPrefixLength
_VRtrInetStaticRouteDestPfxLen_Object = MibTableColumn
vRtrInetStaticRouteDestPfxLen = _VRtrInetStaticRouteDestPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 3),
    _VRtrInetStaticRouteDestPfxLen_Type()
)
vRtrInetStaticRouteDestPfxLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDestPfxLen.setStatus("current")


class _VRtrInetStaticRouteIndex_Type(Integer32):
    """Custom type vRtrInetStaticRouteIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrInetStaticRouteIndex_Type.__name__ = "Integer32"
_VRtrInetStaticRouteIndex_Object = MibTableColumn
vRtrInetStaticRouteIndex = _VRtrInetStaticRouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 4),
    _VRtrInetStaticRouteIndex_Type()
)
vRtrInetStaticRouteIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteIndex.setStatus("current")
_VRtrInetStaticRouteRowStatus_Type = RowStatus
_VRtrInetStaticRouteRowStatus_Object = MibTableColumn
vRtrInetStaticRouteRowStatus = _VRtrInetStaticRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 5),
    _VRtrInetStaticRouteRowStatus_Type()
)
vRtrInetStaticRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteRowStatus.setStatus("current")
_VRtrInetStaticRouteLastEnabledTime_Type = TimeStamp
_VRtrInetStaticRouteLastEnabledTime_Object = MibTableColumn
vRtrInetStaticRouteLastEnabledTime = _VRtrInetStaticRouteLastEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 6),
    _VRtrInetStaticRouteLastEnabledTime_Type()
)
vRtrInetStaticRouteLastEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteLastEnabledTime.setStatus("current")


class _VRtrInetStaticRouteStatus_Type(Integer32):
    """Custom type vRtrInetStaticRouteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_VRtrInetStaticRouteStatus_Type.__name__ = "Integer32"
_VRtrInetStaticRouteStatus_Object = MibTableColumn
vRtrInetStaticRouteStatus = _VRtrInetStaticRouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 7),
    _VRtrInetStaticRouteStatus_Type()
)
vRtrInetStaticRouteStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteStatus.setStatus("current")


class _VRtrInetStaticRouteStaticType_Type(Integer32):
    """Custom type vRtrInetStaticRouteStaticType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("nextHop", 1),
          ("indirect", 2),
          ("blackHole", 3),
          ("grt", 4))
    )


_VRtrInetStaticRouteStaticType_Type.__name__ = "Integer32"
_VRtrInetStaticRouteStaticType_Object = MibTableColumn
vRtrInetStaticRouteStaticType = _VRtrInetStaticRouteStaticType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 8),
    _VRtrInetStaticRouteStaticType_Type()
)
vRtrInetStaticRouteStaticType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteStaticType.setStatus("current")


class _VRtrInetStaticRoutePreference_Type(Unsigned32):
    """Custom type vRtrInetStaticRoutePreference based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrInetStaticRoutePreference_Type.__name__ = "Unsigned32"
_VRtrInetStaticRoutePreference_Object = MibTableColumn
vRtrInetStaticRoutePreference = _VRtrInetStaticRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 9),
    _VRtrInetStaticRoutePreference_Type()
)
vRtrInetStaticRoutePreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePreference.setStatus("current")


class _VRtrInetStaticRouteMetric_Type(Unsigned32):
    """Custom type vRtrInetStaticRouteMetric based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrInetStaticRouteMetric_Type.__name__ = "Unsigned32"
_VRtrInetStaticRouteMetric_Object = MibTableColumn
vRtrInetStaticRouteMetric = _VRtrInetStaticRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 10),
    _VRtrInetStaticRouteMetric_Type()
)
vRtrInetStaticRouteMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteMetric.setStatus("current")
_VRtrInetStaticRouteEgressIfIndex_Type = InterfaceIndexOrZero
_VRtrInetStaticRouteEgressIfIndex_Object = MibTableColumn
vRtrInetStaticRouteEgressIfIndex = _VRtrInetStaticRouteEgressIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 11),
    _VRtrInetStaticRouteEgressIfIndex_Type()
)
vRtrInetStaticRouteEgressIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteEgressIfIndex.setStatus("current")


class _VRtrInetStaticRouteNextHopType_Type(InetAddressType):
    """Custom type vRtrInetStaticRouteNextHopType based on InetAddressType"""
    defaultValue = 0


_VRtrInetStaticRouteNextHopType_Type.__name__ = "InetAddressType"
_VRtrInetStaticRouteNextHopType_Object = MibTableColumn
vRtrInetStaticRouteNextHopType = _VRtrInetStaticRouteNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 12),
    _VRtrInetStaticRouteNextHopType_Type()
)
vRtrInetStaticRouteNextHopType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteNextHopType.setStatus("current")


class _VRtrInetStaticRouteNextHop_Type(InetAddress):
    """Custom type vRtrInetStaticRouteNextHop based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrInetStaticRouteNextHop_Type.__name__ = "InetAddress"
_VRtrInetStaticRouteNextHop_Object = MibTableColumn
vRtrInetStaticRouteNextHop = _VRtrInetStaticRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 13),
    _VRtrInetStaticRouteNextHop_Type()
)
vRtrInetStaticRouteNextHop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteNextHop.setStatus("current")


class _VRtrInetStaticRouteNextHopIf_Type(DisplayString):
    """Custom type vRtrInetStaticRouteNextHopIf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_VRtrInetStaticRouteNextHopIf_Type.__name__ = "DisplayString"
_VRtrInetStaticRouteNextHopIf_Object = MibTableColumn
vRtrInetStaticRouteNextHopIf = _VRtrInetStaticRouteNextHopIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 14),
    _VRtrInetStaticRouteNextHopIf_Type()
)
vRtrInetStaticRouteNextHopIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteNextHopIf.setStatus("current")


class _VRtrInetStaticRouteAdminState_Type(TmnxAdminState):
    """Custom type vRtrInetStaticRouteAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrInetStaticRouteAdminState_Type.__name__ = "TmnxAdminState"
_VRtrInetStaticRouteAdminState_Object = MibTableColumn
vRtrInetStaticRouteAdminState = _VRtrInetStaticRouteAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 15),
    _VRtrInetStaticRouteAdminState_Type()
)
vRtrInetStaticRouteAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteAdminState.setStatus("current")


class _VRtrInetStaticRouteIgpShortcut_Type(Bits):
    """Custom type vRtrInetStaticRouteIgpShortcut based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("te", 0),
          ("ldp", 1),
          ("ip", 2))
    )

_VRtrInetStaticRouteIgpShortcut_Type.__name__ = "Bits"
_VRtrInetStaticRouteIgpShortcut_Object = MibTableColumn
vRtrInetStaticRouteIgpShortcut = _VRtrInetStaticRouteIgpShortcut_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 16),
    _VRtrInetStaticRouteIgpShortcut_Type()
)
vRtrInetStaticRouteIgpShortcut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteIgpShortcut.setStatus("obsolete")


class _VRtrInetStaticRouteDisallowIgp_Type(TruthValue):
    """Custom type vRtrInetStaticRouteDisallowIgp based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteDisallowIgp_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteDisallowIgp_Object = MibTableColumn
vRtrInetStaticRouteDisallowIgp = _VRtrInetStaticRouteDisallowIgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 17),
    _VRtrInetStaticRouteDisallowIgp_Type()
)
vRtrInetStaticRouteDisallowIgp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDisallowIgp.setStatus("obsolete")


class _VRtrInetStaticRouteTag_Type(Unsigned32):
    """Custom type vRtrInetStaticRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrInetStaticRouteTag_Type.__name__ = "Unsigned32"
_VRtrInetStaticRouteTag_Object = MibTableColumn
vRtrInetStaticRouteTag = _VRtrInetStaticRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 18),
    _VRtrInetStaticRouteTag_Type()
)
vRtrInetStaticRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteTag.setStatus("current")


class _VRtrInetStaticRouteEnableBfd_Type(TruthValue):
    """Custom type vRtrInetStaticRouteEnableBfd based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteEnableBfd_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteEnableBfd_Object = MibTableColumn
vRtrInetStaticRouteEnableBfd = _VRtrInetStaticRouteEnableBfd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 19),
    _VRtrInetStaticRouteEnableBfd_Type()
)
vRtrInetStaticRouteEnableBfd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteEnableBfd.setStatus("current")


class _VRtrInetStaticRouteCpeAddrType_Type(InetAddressType):
    """Custom type vRtrInetStaticRouteCpeAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrInetStaticRouteCpeAddrType_Type.__name__ = "InetAddressType"
_VRtrInetStaticRouteCpeAddrType_Object = MibTableColumn
vRtrInetStaticRouteCpeAddrType = _VRtrInetStaticRouteCpeAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 20),
    _VRtrInetStaticRouteCpeAddrType_Type()
)
vRtrInetStaticRouteCpeAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeAddrType.setStatus("current")


class _VRtrInetStaticRouteCpeAddr_Type(InetAddress):
    """Custom type vRtrInetStaticRouteCpeAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetStaticRouteCpeAddr_Type.__name__ = "InetAddress"
_VRtrInetStaticRouteCpeAddr_Object = MibTableColumn
vRtrInetStaticRouteCpeAddr = _VRtrInetStaticRouteCpeAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 21),
    _VRtrInetStaticRouteCpeAddr_Type()
)
vRtrInetStaticRouteCpeAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeAddr.setStatus("current")


class _VRtrInetStaticRouteCpeInterval_Type(Unsigned32):
    """Custom type vRtrInetStaticRouteCpeInterval based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrInetStaticRouteCpeInterval_Type.__name__ = "Unsigned32"
_VRtrInetStaticRouteCpeInterval_Object = MibTableColumn
vRtrInetStaticRouteCpeInterval = _VRtrInetStaticRouteCpeInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 22),
    _VRtrInetStaticRouteCpeInterval_Type()
)
vRtrInetStaticRouteCpeInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeInterval.setUnits("seconds")


class _VRtrInetStaticRouteCpeDropCnt_Type(Unsigned32):
    """Custom type vRtrInetStaticRouteCpeDropCnt based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrInetStaticRouteCpeDropCnt_Type.__name__ = "Unsigned32"
_VRtrInetStaticRouteCpeDropCnt_Object = MibTableColumn
vRtrInetStaticRouteCpeDropCnt = _VRtrInetStaticRouteCpeDropCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 23),
    _VRtrInetStaticRouteCpeDropCnt_Type()
)
vRtrInetStaticRouteCpeDropCnt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeDropCnt.setStatus("current")


class _VRtrInetStaticRouteCpeEnableLog_Type(TruthValue):
    """Custom type vRtrInetStaticRouteCpeEnableLog based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteCpeEnableLog_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteCpeEnableLog_Object = MibTableColumn
vRtrInetStaticRouteCpeEnableLog = _VRtrInetStaticRouteCpeEnableLog_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 24),
    _VRtrInetStaticRouteCpeEnableLog_Type()
)
vRtrInetStaticRouteCpeEnableLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCpeEnableLog.setStatus("current")
_VRtrInetStaticRouteNHTunnelName_Type = TNamedItemOrEmpty
_VRtrInetStaticRouteNHTunnelName_Object = MibTableColumn
vRtrInetStaticRouteNHTunnelName = _VRtrInetStaticRouteNHTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 25),
    _VRtrInetStaticRouteNHTunnelName_Type()
)
vRtrInetStaticRouteNHTunnelName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteNHTunnelName.setStatus("current")


class _VRtrInetStaticRoutePrefixListName_Type(TNamedItemOrEmpty):
    """Custom type vRtrInetStaticRoutePrefixListName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrInetStaticRoutePrefixListName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrInetStaticRoutePrefixListName_Object = MibTableColumn
vRtrInetStaticRoutePrefixListName = _VRtrInetStaticRoutePrefixListName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 26),
    _VRtrInetStaticRoutePrefixListName_Type()
)
vRtrInetStaticRoutePrefixListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePrefixListName.setStatus("current")


class _VRtrInetStaticRoutePrefixListFlag_Type(Integer32):
    """Custom type vRtrInetStaticRoutePrefixListFlag based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("all", 1),
          ("none", 2))
    )


_VRtrInetStaticRoutePrefixListFlag_Type.__name__ = "Integer32"
_VRtrInetStaticRoutePrefixListFlag_Object = MibTableColumn
vRtrInetStaticRoutePrefixListFlag = _VRtrInetStaticRoutePrefixListFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 27),
    _VRtrInetStaticRoutePrefixListFlag_Type()
)
vRtrInetStaticRoutePrefixListFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePrefixListFlag.setStatus("current")


class _VRtrInetStaticRouteLdpSync_Type(TruthValue):
    """Custom type vRtrInetStaticRouteLdpSync based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteLdpSync_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteLdpSync_Object = MibTableColumn
vRtrInetStaticRouteLdpSync = _VRtrInetStaticRouteLdpSync_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 28),
    _VRtrInetStaticRouteLdpSync_Type()
)
vRtrInetStaticRouteLdpSync.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteLdpSync.setStatus("current")


class _VRtrInetStaticRouteFC_Type(TNamedItemOrEmpty):
    """Custom type vRtrInetStaticRouteFC based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrInetStaticRouteFC_Type.__name__ = "TNamedItemOrEmpty"
_VRtrInetStaticRouteFC_Object = MibTableColumn
vRtrInetStaticRouteFC = _VRtrInetStaticRouteFC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 29),
    _VRtrInetStaticRouteFC_Type()
)
vRtrInetStaticRouteFC.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteFC.setStatus("current")


class _VRtrInetStaticRouteFCPriority_Type(TPriorityOrUndefined):
    """Custom type vRtrInetStaticRouteFCPriority based on TPriorityOrUndefined"""
    defaultValue = 0


_VRtrInetStaticRouteFCPriority_Type.__name__ = "TPriorityOrUndefined"
_VRtrInetStaticRouteFCPriority_Object = MibTableColumn
vRtrInetStaticRouteFCPriority = _VRtrInetStaticRouteFCPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 30),
    _VRtrInetStaticRouteFCPriority_Type()
)
vRtrInetStaticRouteFCPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteFCPriority.setStatus("current")


class _VRtrInetStaticRouteCommunityVal_Type(DisplayString):
    """Custom type vRtrInetStaticRouteCommunityVal based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRouteCommunityVal_Type.__name__ = "DisplayString"
_VRtrInetStaticRouteCommunityVal_Object = MibTableColumn
vRtrInetStaticRouteCommunityVal = _VRtrInetStaticRouteCommunityVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 31),
    _VRtrInetStaticRouteCommunityVal_Type()
)
vRtrInetStaticRouteCommunityVal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCommunityVal.setStatus("current")
_VRtrInetStaticRouteCreationOrig_Type = TmnxCreateOrigin
_VRtrInetStaticRouteCreationOrig_Object = MibTableColumn
vRtrInetStaticRouteCreationOrig = _VRtrInetStaticRouteCreationOrig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 32),
    _VRtrInetStaticRouteCreationOrig_Type()
)
vRtrInetStaticRouteCreationOrig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteCreationOrig.setStatus("current")


class _VRtrInetStaticRouteDynamicBgp_Type(TmnxEnabledDisabled):
    """Custom type vRtrInetStaticRouteDynamicBgp based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrInetStaticRouteDynamicBgp_Type.__name__ = "TmnxEnabledDisabled"
_VRtrInetStaticRouteDynamicBgp_Object = MibTableColumn
vRtrInetStaticRouteDynamicBgp = _VRtrInetStaticRouteDynamicBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 33),
    _VRtrInetStaticRouteDynamicBgp_Type()
)
vRtrInetStaticRouteDynamicBgp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDynamicBgp.setStatus("current")


class _VRtrInetStaticRouteDescription_Type(TItemDescription):
    """Custom type vRtrInetStaticRouteDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrInetStaticRouteDescription_Type.__name__ = "TItemDescription"
_VRtrInetStaticRouteDescription_Object = MibTableColumn
vRtrInetStaticRouteDescription = _VRtrInetStaticRouteDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 34),
    _VRtrInetStaticRouteDescription_Type()
)
vRtrInetStaticRouteDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDescription.setStatus("current")


class _VRtrInetStaticRoutePaddingSize_Type(Unsigned32):
    """Custom type vRtrInetStaticRoutePaddingSize based on Unsigned32"""
    defaultValue = 56

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_VRtrInetStaticRoutePaddingSize_Type.__name__ = "Unsigned32"
_VRtrInetStaticRoutePaddingSize_Object = MibTableColumn
vRtrInetStaticRoutePaddingSize = _VRtrInetStaticRoutePaddingSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 35),
    _VRtrInetStaticRoutePaddingSize_Type()
)
vRtrInetStaticRoutePaddingSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePaddingSize.setStatus("current")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePaddingSize.setUnits("bytes")
_VRtrInetStaticRouteDynBgpNHType_Type = InetAddressType
_VRtrInetStaticRouteDynBgpNHType_Object = MibTableColumn
vRtrInetStaticRouteDynBgpNHType = _VRtrInetStaticRouteDynBgpNHType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 36),
    _VRtrInetStaticRouteDynBgpNHType_Type()
)
vRtrInetStaticRouteDynBgpNHType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDynBgpNHType.setStatus("current")


class _VRtrInetStaticRouteDynBgpNH_Type(InetAddress):
    """Custom type vRtrInetStaticRouteDynBgpNH based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrInetStaticRouteDynBgpNH_Type.__name__ = "InetAddress"
_VRtrInetStaticRouteDynBgpNH_Object = MibTableColumn
vRtrInetStaticRouteDynBgpNH = _VRtrInetStaticRouteDynBgpNH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 37),
    _VRtrInetStaticRouteDynBgpNH_Type()
)
vRtrInetStaticRouteDynBgpNH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDynBgpNH.setStatus("current")


class _VRtrInetStaticRouteGenerateIcmp_Type(TruthValue):
    """Custom type vRtrInetStaticRouteGenerateIcmp based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteGenerateIcmp_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteGenerateIcmp_Object = MibTableColumn
vRtrInetStaticRouteGenerateIcmp = _VRtrInetStaticRouteGenerateIcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 38),
    _VRtrInetStaticRouteGenerateIcmp_Type()
)
vRtrInetStaticRouteGenerateIcmp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteGenerateIcmp.setStatus("current")


class _VRtrInetStaticRouteValidateNH_Type(TruthValue):
    """Custom type vRtrInetStaticRouteValidateNH based on TruthValue"""
    defaultValue = 2


_VRtrInetStaticRouteValidateNH_Type.__name__ = "TruthValue"
_VRtrInetStaticRouteValidateNH_Object = MibTableColumn
vRtrInetStaticRouteValidateNH = _VRtrInetStaticRouteValidateNH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 39),
    _VRtrInetStaticRouteValidateNH_Type()
)
vRtrInetStaticRouteValidateNH.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteValidateNH.setStatus("current")


class _VRtrInetStaticRouteSrcClassIndex_Type(ClassIndexOrNone):
    """Custom type vRtrInetStaticRouteSrcClassIndex based on ClassIndexOrNone"""
    defaultValue = 0


_VRtrInetStaticRouteSrcClassIndex_Type.__name__ = "ClassIndexOrNone"
_VRtrInetStaticRouteSrcClassIndex_Object = MibTableColumn
vRtrInetStaticRouteSrcClassIndex = _VRtrInetStaticRouteSrcClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 40),
    _VRtrInetStaticRouteSrcClassIndex_Type()
)
vRtrInetStaticRouteSrcClassIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteSrcClassIndex.setStatus("current")


class _VRtrInetStaticRouteDstClassIndex_Type(ClassIndexOrNone):
    """Custom type vRtrInetStaticRouteDstClassIndex based on ClassIndexOrNone"""
    defaultValue = 0


_VRtrInetStaticRouteDstClassIndex_Type.__name__ = "ClassIndexOrNone"
_VRtrInetStaticRouteDstClassIndex_Object = MibTableColumn
vRtrInetStaticRouteDstClassIndex = _VRtrInetStaticRouteDstClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 41),
    _VRtrInetStaticRouteDstClassIndex_Type()
)
vRtrInetStaticRouteDstClassIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteDstClassIndex.setStatus("current")
_VRtrInetStaticRouteHoldTimeLeft_Type = Unsigned32
_VRtrInetStaticRouteHoldTimeLeft_Object = MibTableColumn
vRtrInetStaticRouteHoldTimeLeft = _VRtrInetStaticRouteHoldTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 42),
    _VRtrInetStaticRouteHoldTimeLeft_Type()
)
vRtrInetStaticRouteHoldTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteHoldTimeLeft.setStatus("current")


class _VRtrInetStaticRouteLoadBalWeight_Type(Unsigned32):
    """Custom type vRtrInetStaticRouteLoadBalWeight based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4294967295),
    )


_VRtrInetStaticRouteLoadBalWeight_Type.__name__ = "Unsigned32"
_VRtrInetStaticRouteLoadBalWeight_Object = MibTableColumn
vRtrInetStaticRouteLoadBalWeight = _VRtrInetStaticRouteLoadBalWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 43),
    _VRtrInetStaticRouteLoadBalWeight_Type()
)
vRtrInetStaticRouteLoadBalWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteLoadBalWeight.setStatus("current")


class _VRtrInetStaticRouteBackupNHType_Type(InetAddressType):
    """Custom type vRtrInetStaticRouteBackupNHType based on InetAddressType"""
    defaultValue = 0


_VRtrInetStaticRouteBackupNHType_Type.__name__ = "InetAddressType"
_VRtrInetStaticRouteBackupNHType_Object = MibTableColumn
vRtrInetStaticRouteBackupNHType = _VRtrInetStaticRouteBackupNHType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 44),
    _VRtrInetStaticRouteBackupNHType_Type()
)
vRtrInetStaticRouteBackupNHType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteBackupNHType.setStatus("current")


class _VRtrInetStaticRouteBackupNHAddr_Type(InetAddress):
    """Custom type vRtrInetStaticRouteBackupNHAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetStaticRouteBackupNHAddr_Type.__name__ = "InetAddress"
_VRtrInetStaticRouteBackupNHAddr_Object = MibTableColumn
vRtrInetStaticRouteBackupNHAddr = _VRtrInetStaticRouteBackupNHAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 45),
    _VRtrInetStaticRouteBackupNHAddr_Type()
)
vRtrInetStaticRouteBackupNHAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteBackupNHAddr.setStatus("current")


class _VRtrInetStaticRouteBackupStatus_Type(Integer32):
    """Custom type vRtrInetStaticRouteBackupStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 1),
          ("activeAsBackup", 2),
          ("activeAsPrimary", 3))
    )


_VRtrInetStaticRouteBackupStatus_Type.__name__ = "Integer32"
_VRtrInetStaticRouteBackupStatus_Object = MibTableColumn
vRtrInetStaticRouteBackupStatus = _VRtrInetStaticRouteBackupStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 24, 1, 46),
    _VRtrInetStaticRouteBackupStatus_Type()
)
vRtrInetStaticRouteBackupStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteBackupStatus.setStatus("current")
_VRtrInetStaticRouteIndexTable_Object = MibTable
vRtrInetStaticRouteIndexTable = _VRtrInetStaticRouteIndexTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 25)
)
if mibBuilder.loadTexts:
    vRtrInetStaticRouteIndexTable.setStatus("current")
_VRtrInetStaticRouteIndexEntry_Object = MibTableRow
vRtrInetStaticRouteIndexEntry = _VRtrInetStaticRouteIndexEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 25, 1)
)
vRtrInetStaticRouteIndexEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
)
if mibBuilder.loadTexts:
    vRtrInetStaticRouteIndexEntry.setStatus("current")


class _VRtrInetStaticRouteAvailIndex_Type(TestAndIncr):
    """Custom type vRtrInetStaticRouteAvailIndex based on TestAndIncr"""
    subtypeSpec = TestAndIncr.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_VRtrInetStaticRouteAvailIndex_Type.__name__ = "TestAndIncr"
_VRtrInetStaticRouteAvailIndex_Object = MibTableColumn
vRtrInetStaticRouteAvailIndex = _VRtrInetStaticRouteAvailIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 25, 1, 1),
    _VRtrInetStaticRouteAvailIndex_Type()
)
vRtrInetStaticRouteAvailIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRouteAvailIndex.setStatus("current")
_VRtrInetInstAggrTblLastChged_Type = TimeStamp
_VRtrInetInstAggrTblLastChged_Object = MibScalar
vRtrInetInstAggrTblLastChged = _VRtrInetInstAggrTblLastChged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 26),
    _VRtrInetInstAggrTblLastChged_Type()
)
vRtrInetInstAggrTblLastChged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetInstAggrTblLastChged.setStatus("current")
_VRtrInetInstAggrTable_Object = MibTable
vRtrInetInstAggrTable = _VRtrInetInstAggrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27)
)
if mibBuilder.loadTexts:
    vRtrInetInstAggrTable.setStatus("current")
_VRtrInetInstAggrEntry_Object = MibTableRow
vRtrInetInstAggrEntry = _VRtrInetInstAggrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1)
)
vRtrInetInstAggrEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAggrIpPrefixType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAggrIpPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAggrIpPrefixLen"),
)
if mibBuilder.loadTexts:
    vRtrInetInstAggrEntry.setStatus("current")
_VRtrInetAggrIpPrefixType_Type = InetAddressType
_VRtrInetAggrIpPrefixType_Object = MibTableColumn
vRtrInetAggrIpPrefixType = _VRtrInetAggrIpPrefixType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 1),
    _VRtrInetAggrIpPrefixType_Type()
)
vRtrInetAggrIpPrefixType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAggrIpPrefixType.setStatus("current")


class _VRtrInetAggrIpPrefix_Type(InetAddress):
    """Custom type vRtrInetAggrIpPrefix based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetAggrIpPrefix_Type.__name__ = "InetAddress"
_VRtrInetAggrIpPrefix_Object = MibTableColumn
vRtrInetAggrIpPrefix = _VRtrInetAggrIpPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 2),
    _VRtrInetAggrIpPrefix_Type()
)
vRtrInetAggrIpPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAggrIpPrefix.setStatus("current")
_VRtrInetAggrIpPrefixLen_Type = InetAddressPrefixLength
_VRtrInetAggrIpPrefixLen_Object = MibTableColumn
vRtrInetAggrIpPrefixLen = _VRtrInetAggrIpPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 3),
    _VRtrInetAggrIpPrefixLen_Type()
)
vRtrInetAggrIpPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAggrIpPrefixLen.setStatus("current")
_VRtrInetAggrRowStatus_Type = RowStatus
_VRtrInetAggrRowStatus_Object = MibTableColumn
vRtrInetAggrRowStatus = _VRtrInetAggrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 4),
    _VRtrInetAggrRowStatus_Type()
)
vRtrInetAggrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrRowStatus.setStatus("current")
_VRtrInetAggrLastChanged_Type = TimeStamp
_VRtrInetAggrLastChanged_Object = MibTableColumn
vRtrInetAggrLastChanged = _VRtrInetAggrLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 5),
    _VRtrInetAggrLastChanged_Type()
)
vRtrInetAggrLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAggrLastChanged.setStatus("current")


class _VRtrInetAggrSummaryOnly_Type(TruthValue):
    """Custom type vRtrInetAggrSummaryOnly based on TruthValue"""
    defaultValue = 2


_VRtrInetAggrSummaryOnly_Type.__name__ = "TruthValue"
_VRtrInetAggrSummaryOnly_Object = MibTableColumn
vRtrInetAggrSummaryOnly = _VRtrInetAggrSummaryOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 6),
    _VRtrInetAggrSummaryOnly_Type()
)
vRtrInetAggrSummaryOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrSummaryOnly.setStatus("current")


class _VRtrInetAggrASSet_Type(TruthValue):
    """Custom type vRtrInetAggrASSet based on TruthValue"""
    defaultValue = 2


_VRtrInetAggrASSet_Type.__name__ = "TruthValue"
_VRtrInetAggrASSet_Object = MibTableColumn
vRtrInetAggrASSet = _VRtrInetAggrASSet_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 7),
    _VRtrInetAggrASSet_Type()
)
vRtrInetAggrASSet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrASSet.setStatus("current")


class _VRtrInetAggrAggregatorAS_Type(TmnxBgpAutonomousSystem):
    """Custom type vRtrInetAggrAggregatorAS based on TmnxBgpAutonomousSystem"""
    defaultValue = 0


_VRtrInetAggrAggregatorAS_Type.__name__ = "TmnxBgpAutonomousSystem"
_VRtrInetAggrAggregatorAS_Object = MibTableColumn
vRtrInetAggrAggregatorAS = _VRtrInetAggrAggregatorAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 8),
    _VRtrInetAggrAggregatorAS_Type()
)
vRtrInetAggrAggregatorAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrAggregatorAS.setStatus("obsolete")


class _VRtrInetAggrAggregatorIPAddr_Type(IpAddress):
    """Custom type vRtrInetAggrAggregatorIPAddr based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrInetAggrAggregatorIPAddr_Type.__name__ = "IpAddress"
_VRtrInetAggrAggregatorIPAddr_Object = MibTableColumn
vRtrInetAggrAggregatorIPAddr = _VRtrInetAggrAggregatorIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 9),
    _VRtrInetAggrAggregatorIPAddr_Type()
)
vRtrInetAggrAggregatorIPAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrAggregatorIPAddr.setStatus("current")
_VRtrInetAggrOperState_Type = TmnxOperState
_VRtrInetAggrOperState_Object = MibTableColumn
vRtrInetAggrOperState = _VRtrInetAggrOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 10),
    _VRtrInetAggrOperState_Type()
)
vRtrInetAggrOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAggrOperState.setStatus("current")


class _VRtrInetAggrAggregatorAS4Byte_Type(InetAutonomousSystemNumber):
    """Custom type vRtrInetAggrAggregatorAS4Byte based on InetAutonomousSystemNumber"""
    defaultValue = 0


_VRtrInetAggrAggregatorAS4Byte_Type.__name__ = "InetAutonomousSystemNumber"
_VRtrInetAggrAggregatorAS4Byte_Object = MibTableColumn
vRtrInetAggrAggregatorAS4Byte = _VRtrInetAggrAggregatorAS4Byte_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 11),
    _VRtrInetAggrAggregatorAS4Byte_Type()
)
vRtrInetAggrAggregatorAS4Byte.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrAggregatorAS4Byte.setStatus("current")


class _VRtrInetAggrNextHopType_Type(Integer32):
    """Custom type vRtrInetAggrNextHopType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("blackHole", 1),
          ("indirect", 2))
    )


_VRtrInetAggrNextHopType_Type.__name__ = "Integer32"
_VRtrInetAggrNextHopType_Object = MibTableColumn
vRtrInetAggrNextHopType = _VRtrInetAggrNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 12),
    _VRtrInetAggrNextHopType_Type()
)
vRtrInetAggrNextHopType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrNextHopType.setStatus("current")


class _VRtrInetAggrCommunityVal_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal_Object = MibTableColumn
vRtrInetAggrCommunityVal = _VRtrInetAggrCommunityVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 13),
    _VRtrInetAggrCommunityVal_Type()
)
vRtrInetAggrCommunityVal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal.setStatus("current")


class _VRtrInetAggrIndirectAddrType_Type(InetAddressType):
    """Custom type vRtrInetAggrIndirectAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrInetAggrIndirectAddrType_Type.__name__ = "InetAddressType"
_VRtrInetAggrIndirectAddrType_Object = MibTableColumn
vRtrInetAggrIndirectAddrType = _VRtrInetAggrIndirectAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 14),
    _VRtrInetAggrIndirectAddrType_Type()
)
vRtrInetAggrIndirectAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrIndirectAddrType.setStatus("current")


class _VRtrInetAggrIndirectAddr_Type(InetAddress):
    """Custom type vRtrInetAggrIndirectAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetAggrIndirectAddr_Type.__name__ = "InetAddress"
_VRtrInetAggrIndirectAddr_Object = MibTableColumn
vRtrInetAggrIndirectAddr = _VRtrInetAggrIndirectAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 15),
    _VRtrInetAggrIndirectAddr_Type()
)
vRtrInetAggrIndirectAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrIndirectAddr.setStatus("current")


class _VRtrInetAggrGenerateIcmp_Type(TruthValue):
    """Custom type vRtrInetAggrGenerateIcmp based on TruthValue"""
    defaultValue = 2


_VRtrInetAggrGenerateIcmp_Type.__name__ = "TruthValue"
_VRtrInetAggrGenerateIcmp_Object = MibTableColumn
vRtrInetAggrGenerateIcmp = _VRtrInetAggrGenerateIcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 16),
    _VRtrInetAggrGenerateIcmp_Type()
)
vRtrInetAggrGenerateIcmp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrGenerateIcmp.setStatus("current")


class _VRtrInetAggrDescription_Type(TItemDescription):
    """Custom type vRtrInetAggrDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrInetAggrDescription_Type.__name__ = "TItemDescription"
_VRtrInetAggrDescription_Object = MibTableColumn
vRtrInetAggrDescription = _VRtrInetAggrDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 17),
    _VRtrInetAggrDescription_Type()
)
vRtrInetAggrDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrDescription.setStatus("current")


class _VRtrInetAggrCommunityVal2_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal2 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal2_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal2_Object = MibTableColumn
vRtrInetAggrCommunityVal2 = _VRtrInetAggrCommunityVal2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 18),
    _VRtrInetAggrCommunityVal2_Type()
)
vRtrInetAggrCommunityVal2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal2.setStatus("current")


class _VRtrInetAggrCommunityVal3_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal3 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal3_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal3_Object = MibTableColumn
vRtrInetAggrCommunityVal3 = _VRtrInetAggrCommunityVal3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 19),
    _VRtrInetAggrCommunityVal3_Type()
)
vRtrInetAggrCommunityVal3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal3.setStatus("current")


class _VRtrInetAggrCommunityVal4_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal4 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal4_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal4_Object = MibTableColumn
vRtrInetAggrCommunityVal4 = _VRtrInetAggrCommunityVal4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 20),
    _VRtrInetAggrCommunityVal4_Type()
)
vRtrInetAggrCommunityVal4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal4.setStatus("current")


class _VRtrInetAggrCommunityVal5_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal5 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal5_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal5_Object = MibTableColumn
vRtrInetAggrCommunityVal5 = _VRtrInetAggrCommunityVal5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 21),
    _VRtrInetAggrCommunityVal5_Type()
)
vRtrInetAggrCommunityVal5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal5.setStatus("current")


class _VRtrInetAggrCommunityVal6_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal6 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal6_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal6_Object = MibTableColumn
vRtrInetAggrCommunityVal6 = _VRtrInetAggrCommunityVal6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 22),
    _VRtrInetAggrCommunityVal6_Type()
)
vRtrInetAggrCommunityVal6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal6.setStatus("current")


class _VRtrInetAggrCommunityVal7_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal7 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal7_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal7_Object = MibTableColumn
vRtrInetAggrCommunityVal7 = _VRtrInetAggrCommunityVal7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 23),
    _VRtrInetAggrCommunityVal7_Type()
)
vRtrInetAggrCommunityVal7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal7.setStatus("current")


class _VRtrInetAggrCommunityVal8_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal8 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal8_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal8_Object = MibTableColumn
vRtrInetAggrCommunityVal8 = _VRtrInetAggrCommunityVal8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 24),
    _VRtrInetAggrCommunityVal8_Type()
)
vRtrInetAggrCommunityVal8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal8.setStatus("current")


class _VRtrInetAggrCommunityVal9_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal9 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal9_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal9_Object = MibTableColumn
vRtrInetAggrCommunityVal9 = _VRtrInetAggrCommunityVal9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 25),
    _VRtrInetAggrCommunityVal9_Type()
)
vRtrInetAggrCommunityVal9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal9.setStatus("current")


class _VRtrInetAggrCommunityVal10_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal10 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal10_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal10_Object = MibTableColumn
vRtrInetAggrCommunityVal10 = _VRtrInetAggrCommunityVal10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 26),
    _VRtrInetAggrCommunityVal10_Type()
)
vRtrInetAggrCommunityVal10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal10.setStatus("current")


class _VRtrInetAggrCommunityVal11_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal11 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal11_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal11_Object = MibTableColumn
vRtrInetAggrCommunityVal11 = _VRtrInetAggrCommunityVal11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 27),
    _VRtrInetAggrCommunityVal11_Type()
)
vRtrInetAggrCommunityVal11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal11.setStatus("current")


class _VRtrInetAggrCommunityVal12_Type(DisplayString):
    """Custom type vRtrInetAggrCommunityVal12 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetAggrCommunityVal12_Type.__name__ = "DisplayString"
_VRtrInetAggrCommunityVal12_Object = MibTableColumn
vRtrInetAggrCommunityVal12 = _VRtrInetAggrCommunityVal12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 28),
    _VRtrInetAggrCommunityVal12_Type()
)
vRtrInetAggrCommunityVal12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrCommunityVal12.setStatus("current")


class _VRtrInetAggrFlags_Type(Bits):
    """Custom type vRtrInetAggrFlags based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        ("vRtrInetAggrValidLocalPref", 0)
    )

_VRtrInetAggrFlags_Type.__name__ = "Bits"
_VRtrInetAggrFlags_Object = MibTableColumn
vRtrInetAggrFlags = _VRtrInetAggrFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 29),
    _VRtrInetAggrFlags_Type()
)
vRtrInetAggrFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrFlags.setStatus("current")


class _VRtrInetAggrLocalPreference_Type(Unsigned32):
    """Custom type vRtrInetAggrLocalPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrInetAggrLocalPreference_Type.__name__ = "Unsigned32"
_VRtrInetAggrLocalPreference_Object = MibTableColumn
vRtrInetAggrLocalPreference = _VRtrInetAggrLocalPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 30),
    _VRtrInetAggrLocalPreference_Type()
)
vRtrInetAggrLocalPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrLocalPreference.setStatus("current")


class _VRtrInetAggrDiscardComponent_Type(TruthValue):
    """Custom type vRtrInetAggrDiscardComponent based on TruthValue"""
    defaultValue = 2


_VRtrInetAggrDiscardComponent_Type.__name__ = "TruthValue"
_VRtrInetAggrDiscardComponent_Object = MibTableColumn
vRtrInetAggrDiscardComponent = _VRtrInetAggrDiscardComponent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 31),
    _VRtrInetAggrDiscardComponent_Type()
)
vRtrInetAggrDiscardComponent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrDiscardComponent.setStatus("current")


class _VRtrInetAggrTunnelGroup_Type(TmnxTunnelGroupIdOrZero):
    """Custom type vRtrInetAggrTunnelGroup based on TmnxTunnelGroupIdOrZero"""
    defaultValue = 0


_VRtrInetAggrTunnelGroup_Type.__name__ = "TmnxTunnelGroupIdOrZero"
_VRtrInetAggrTunnelGroup_Object = MibTableColumn
vRtrInetAggrTunnelGroup = _VRtrInetAggrTunnelGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 32),
    _VRtrInetAggrTunnelGroup_Type()
)
vRtrInetAggrTunnelGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrTunnelGroup.setStatus("current")


class _VRtrInetAggrPolicy_Type(TLNamedItemOrEmpty):
    """Custom type vRtrInetAggrPolicy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrInetAggrPolicy_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrInetAggrPolicy_Object = MibTableColumn
vRtrInetAggrPolicy = _VRtrInetAggrPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 27, 1, 33),
    _VRtrInetAggrPolicy_Type()
)
vRtrInetAggrPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetAggrPolicy.setStatus("current")
_VRtrInetSvcIpRangeTable_Object = MibTable
vRtrInetSvcIpRangeTable = _VRtrInetSvcIpRangeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28)
)
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeTable.setStatus("obsolete")
_VRtrInetSvcIpRangeEntry_Object = MibTableRow
vRtrInetSvcIpRangeEntry = _VRtrInetSvcIpRangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1)
)
vRtrInetSvcIpRangeEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangePfxLen"),
)
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeEntry.setStatus("obsolete")
_VRtrInetSvcIpRangeAddrType_Type = InetAddressType
_VRtrInetSvcIpRangeAddrType_Object = MibTableColumn
vRtrInetSvcIpRangeAddrType = _VRtrInetSvcIpRangeAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1, 1),
    _VRtrInetSvcIpRangeAddrType_Type()
)
vRtrInetSvcIpRangeAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeAddrType.setStatus("current")
_VRtrInetSvcIpRangeAddr_Type = InetAddress
_VRtrInetSvcIpRangeAddr_Object = MibTableColumn
vRtrInetSvcIpRangeAddr = _VRtrInetSvcIpRangeAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1, 2),
    _VRtrInetSvcIpRangeAddr_Type()
)
vRtrInetSvcIpRangeAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeAddr.setStatus("current")
_VRtrInetSvcIpRangePfxLen_Type = InetAddressPrefixLength
_VRtrInetSvcIpRangePfxLen_Object = MibTableColumn
vRtrInetSvcIpRangePfxLen = _VRtrInetSvcIpRangePfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1, 3),
    _VRtrInetSvcIpRangePfxLen_Type()
)
vRtrInetSvcIpRangePfxLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangePfxLen.setStatus("current")
_VRtrInetSvcIpRangeRowStatus_Type = RowStatus
_VRtrInetSvcIpRangeRowStatus_Object = MibTableColumn
vRtrInetSvcIpRangeRowStatus = _VRtrInetSvcIpRangeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1, 4),
    _VRtrInetSvcIpRangeRowStatus_Type()
)
vRtrInetSvcIpRangeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeRowStatus.setStatus("obsolete")


class _VRtrInetSvcIpRangeExclusive_Type(TruthValue):
    """Custom type vRtrInetSvcIpRangeExclusive based on TruthValue"""
    defaultValue = 2


_VRtrInetSvcIpRangeExclusive_Type.__name__ = "TruthValue"
_VRtrInetSvcIpRangeExclusive_Object = MibTableColumn
vRtrInetSvcIpRangeExclusive = _VRtrInetSvcIpRangeExclusive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 28, 1, 5),
    _VRtrInetSvcIpRangeExclusive_Type()
)
vRtrInetSvcIpRangeExclusive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSvcIpRangeExclusive.setStatus("obsolete")
_VRtrIpNetToPhysicalTable_Object = MibTable
vRtrIpNetToPhysicalTable = _VRtrIpNetToPhysicalTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29)
)
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalTable.setStatus("current")
_VRtrIpNetToPhysicalEntry_Object = MibTableRow
vRtrIpNetToPhysicalEntry = _VRtrIpNetToPhysicalEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1)
)
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalEntry.setStatus("current")


class _VRtrIpNetToPhysicalTimer_Type(Unsigned32):
    """Custom type vRtrIpNetToPhysicalTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrIpNetToPhysicalTimer_Type.__name__ = "Unsigned32"
_VRtrIpNetToPhysicalTimer_Object = MibTableColumn
vRtrIpNetToPhysicalTimer = _VRtrIpNetToPhysicalTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 1),
    _VRtrIpNetToPhysicalTimer_Type()
)
vRtrIpNetToPhysicalTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalTimer.setUnits("seconds")
_VRtrIpNetToPhysicalOperState_Type = TmnxOperState
_VRtrIpNetToPhysicalOperState_Object = MibTableColumn
vRtrIpNetToPhysicalOperState = _VRtrIpNetToPhysicalOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 2),
    _VRtrIpNetToPhysicalOperState_Type()
)
vRtrIpNetToPhysicalOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalOperState.setStatus("current")
_VRtrIpNetToPhysicalIsRouter_Type = TruthValue
_VRtrIpNetToPhysicalIsRouter_Object = MibTableColumn
vRtrIpNetToPhysicalIsRouter = _VRtrIpNetToPhysicalIsRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 3),
    _VRtrIpNetToPhysicalIsRouter_Type()
)
vRtrIpNetToPhysicalIsRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalIsRouter.setStatus("current")
_VRtrIpNetToPhysicalMTU_Type = Unsigned32
_VRtrIpNetToPhysicalMTU_Object = MibTableColumn
vRtrIpNetToPhysicalMTU = _VRtrIpNetToPhysicalMTU_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 4),
    _VRtrIpNetToPhysicalMTU_Type()
)
vRtrIpNetToPhysicalMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalMTU.setStatus("current")
_VRtrIpNetToPhysicalPort_Type = TmnxPortID
_VRtrIpNetToPhysicalPort_Object = MibTableColumn
vRtrIpNetToPhysicalPort = _VRtrIpNetToPhysicalPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 5),
    _VRtrIpNetToPhysicalPort_Type()
)
vRtrIpNetToPhysicalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalPort.setStatus("current")
_VRtrIpNetToPhysicalEncap_Type = TmnxEncapVal
_VRtrIpNetToPhysicalEncap_Object = MibTableColumn
vRtrIpNetToPhysicalEncap = _VRtrIpNetToPhysicalEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 6),
    _VRtrIpNetToPhysicalEncap_Type()
)
vRtrIpNetToPhysicalEncap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalEncap.setStatus("current")


class _VRtrIpNetToPhysicalSecureNd_Type(Integer32):
    """Custom type vRtrIpNetToPhysicalSecureNd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("secure", 1),
          ("unsecure", 2))
    )


_VRtrIpNetToPhysicalSecureNd_Type.__name__ = "Integer32"
_VRtrIpNetToPhysicalSecureNd_Object = MibTableColumn
vRtrIpNetToPhysicalSecureNd = _VRtrIpNetToPhysicalSecureNd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 29, 1, 7),
    _VRtrIpNetToPhysicalSecureNd_Type()
)
vRtrIpNetToPhysicalSecureNd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpNetToPhysicalSecureNd.setStatus("current")
_VRtrInetCidrRouteTable_Object = MibTable
vRtrInetCidrRouteTable = _VRtrInetCidrRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30)
)
if mibBuilder.loadTexts:
    vRtrInetCidrRouteTable.setStatus("current")
_VRtrInetCidrRouteEntry_Object = MibTableRow
vRtrInetCidrRouteEntry = _VRtrInetCidrRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1)
)
if mibBuilder.loadTexts:
    vRtrInetCidrRouteEntry.setStatus("current")
_VRtrInetCidrRouteLastEnabledTime_Type = TimeStamp
_VRtrInetCidrRouteLastEnabledTime_Object = MibTableColumn
vRtrInetCidrRouteLastEnabledTime = _VRtrInetCidrRouteLastEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 1),
    _VRtrInetCidrRouteLastEnabledTime_Type()
)
vRtrInetCidrRouteLastEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteLastEnabledTime.setStatus("current")


class _VRtrInetCidrRoutePreference_Type(Unsigned32):
    """Custom type vRtrInetCidrRoutePreference based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrInetCidrRoutePreference_Type.__name__ = "Unsigned32"
_VRtrInetCidrRoutePreference_Object = MibTableColumn
vRtrInetCidrRoutePreference = _VRtrInetCidrRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 2),
    _VRtrInetCidrRoutePreference_Type()
)
vRtrInetCidrRoutePreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRoutePreference.setStatus("current")
_VRtrInetCidrRouteMetric_Type = Unsigned32
_VRtrInetCidrRouteMetric_Object = MibTableColumn
vRtrInetCidrRouteMetric = _VRtrInetCidrRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 3),
    _VRtrInetCidrRouteMetric_Type()
)
vRtrInetCidrRouteMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteMetric.setStatus("current")
_VRtrInetCidrRouteIfVRtrId_Type = TmnxVRtrIDOrZero
_VRtrInetCidrRouteIfVRtrId_Object = MibTableColumn
vRtrInetCidrRouteIfVRtrId = _VRtrInetCidrRouteIfVRtrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 4),
    _VRtrInetCidrRouteIfVRtrId_Type()
)
vRtrInetCidrRouteIfVRtrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteIfVRtrId.setStatus("current")


class _VRtrInetCidrRouteTunnEndpntInfo_Type(OctetString):
    """Custom type vRtrInetCidrRouteTunnEndpntInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(12, 136),
    )


_VRtrInetCidrRouteTunnEndpntInfo_Type.__name__ = "OctetString"
_VRtrInetCidrRouteTunnEndpntInfo_Object = MibTableColumn
vRtrInetCidrRouteTunnEndpntInfo = _VRtrInetCidrRouteTunnEndpntInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 5),
    _VRtrInetCidrRouteTunnEndpntInfo_Type()
)
vRtrInetCidrRouteTunnEndpntInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteTunnEndpntInfo.setStatus("current")


class _VRtrInetCidrProtocolInstance_Type(Unsigned32):
    """Custom type vRtrInetCidrProtocolInstance based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_VRtrInetCidrProtocolInstance_Type.__name__ = "Unsigned32"
_VRtrInetCidrProtocolInstance_Object = MibTableColumn
vRtrInetCidrProtocolInstance = _VRtrInetCidrProtocolInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 6),
    _VRtrInetCidrProtocolInstance_Type()
)
vRtrInetCidrProtocolInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrProtocolInstance.setStatus("current")
_VRtrInetCidrRouteNextHopType_Type = TmnxInetCidrNextHopType
_VRtrInetCidrRouteNextHopType_Object = MibTableColumn
vRtrInetCidrRouteNextHopType = _VRtrInetCidrRouteNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 7),
    _VRtrInetCidrRouteNextHopType_Type()
)
vRtrInetCidrRouteNextHopType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNextHopType.setStatus("current")
_VRtrInetCidrRouteNextHopOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetCidrRouteNextHopOwner_Object = MibTableColumn
vRtrInetCidrRouteNextHopOwner = _VRtrInetCidrRouteNextHopOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 8),
    _VRtrInetCidrRouteNextHopOwner_Type()
)
vRtrInetCidrRouteNextHopOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNextHopOwner.setStatus("current")
_VRtrInetCidrRouteNHOwnerAuxInfo_Type = Unsigned32
_VRtrInetCidrRouteNHOwnerAuxInfo_Object = MibTableColumn
vRtrInetCidrRouteNHOwnerAuxInfo = _VRtrInetCidrRouteNHOwnerAuxInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 9),
    _VRtrInetCidrRouteNHOwnerAuxInfo_Type()
)
vRtrInetCidrRouteNHOwnerAuxInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNHOwnerAuxInfo.setStatus("current")
_VRtrInetCidrRouteNHFC_Type = TFCNameOrEmpty
_VRtrInetCidrRouteNHFC_Object = MibTableColumn
vRtrInetCidrRouteNHFC = _VRtrInetCidrRouteNHFC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 10),
    _VRtrInetCidrRouteNHFC_Type()
)
vRtrInetCidrRouteNHFC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNHFC.setStatus("current")
_VRtrInetCidrRouteNHPriority_Type = TPriorityOrUndefined
_VRtrInetCidrRouteNHPriority_Object = MibTableColumn
vRtrInetCidrRouteNHPriority = _VRtrInetCidrRouteNHPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 11),
    _VRtrInetCidrRouteNHPriority_Type()
)
vRtrInetCidrRouteNHPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNHPriority.setStatus("current")


class _VRtrInetCidrRouteBkupFlags_Type(Integer32):
    """Custom type vRtrInetCidrRouteBkupFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("hasLfa", 1),
          ("hasBackup", 2),
          ("isBackup", 3),
          ("isBgpInactive", 4))
    )


_VRtrInetCidrRouteBkupFlags_Type.__name__ = "Integer32"
_VRtrInetCidrRouteBkupFlags_Object = MibTableColumn
vRtrInetCidrRouteBkupFlags = _VRtrInetCidrRouteBkupFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 12),
    _VRtrInetCidrRouteBkupFlags_Type()
)
vRtrInetCidrRouteBkupFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupFlags.setStatus("current")
_VRtrInetCidrRouteBkupNextHopType_Type = InetAddressType
_VRtrInetCidrRouteBkupNextHopType_Object = MibTableColumn
vRtrInetCidrRouteBkupNextHopType = _VRtrInetCidrRouteBkupNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 13),
    _VRtrInetCidrRouteBkupNextHopType_Type()
)
vRtrInetCidrRouteBkupNextHopType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNextHopType.setStatus("current")
_VRtrInetCidrRouteBkupNextHop_Type = InetAddress
_VRtrInetCidrRouteBkupNextHop_Object = MibTableColumn
vRtrInetCidrRouteBkupNextHop = _VRtrInetCidrRouteBkupNextHop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 14),
    _VRtrInetCidrRouteBkupNextHop_Type()
)
vRtrInetCidrRouteBkupNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNextHop.setStatus("current")
_VRtrInetCidrRouteBkupMetric_Type = Unsigned32
_VRtrInetCidrRouteBkupMetric_Object = MibTableColumn
vRtrInetCidrRouteBkupMetric = _VRtrInetCidrRouteBkupMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 15),
    _VRtrInetCidrRouteBkupMetric_Type()
)
vRtrInetCidrRouteBkupMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupMetric.setStatus("current")
_VRtrInetCidrRouteNextHopRepCount_Type = Unsigned32
_VRtrInetCidrRouteNextHopRepCount_Object = MibTableColumn
vRtrInetCidrRouteNextHopRepCount = _VRtrInetCidrRouteNextHopRepCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 16),
    _VRtrInetCidrRouteNextHopRepCount_Type()
)
vRtrInetCidrRouteNextHopRepCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNextHopRepCount.setStatus("current")
_VRtrInetCidrRouteBkupNHType_Type = TmnxInetCidrNextHopType
_VRtrInetCidrRouteBkupNHType_Object = MibTableColumn
vRtrInetCidrRouteBkupNHType = _VRtrInetCidrRouteBkupNHType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 17),
    _VRtrInetCidrRouteBkupNHType_Type()
)
vRtrInetCidrRouteBkupNHType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNHType.setStatus("current")
_VRtrInetCidrRouteBkupNHOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetCidrRouteBkupNHOwner_Object = MibTableColumn
vRtrInetCidrRouteBkupNHOwner = _VRtrInetCidrRouteBkupNHOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 18),
    _VRtrInetCidrRouteBkupNHOwner_Type()
)
vRtrInetCidrRouteBkupNHOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNHOwner.setStatus("current")
_VRtrInetCidrRouteBkupNHOwnAxInfo_Type = Unsigned32
_VRtrInetCidrRouteBkupNHOwnAxInfo_Object = MibTableColumn
vRtrInetCidrRouteBkupNHOwnAxInfo = _VRtrInetCidrRouteBkupNHOwnAxInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 19),
    _VRtrInetCidrRouteBkupNHOwnAxInfo_Type()
)
vRtrInetCidrRouteBkupNHOwnAxInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNHOwnAxInfo.setStatus("current")
_VRtrInetCidrRouteSrcClassIndex_Type = ClassIndexOrNone
_VRtrInetCidrRouteSrcClassIndex_Object = MibTableColumn
vRtrInetCidrRouteSrcClassIndex = _VRtrInetCidrRouteSrcClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 20),
    _VRtrInetCidrRouteSrcClassIndex_Type()
)
vRtrInetCidrRouteSrcClassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteSrcClassIndex.setStatus("current")
_VRtrInetCidrRouteDstClassIndex_Type = ClassIndexOrNone
_VRtrInetCidrRouteDstClassIndex_Object = MibTableColumn
vRtrInetCidrRouteDstClassIndex = _VRtrInetCidrRouteDstClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 21),
    _VRtrInetCidrRouteDstClassIndex_Type()
)
vRtrInetCidrRouteDstClassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteDstClassIndex.setStatus("current")
_VRtrInetCidrRouteOperFlags_Type = TmnxRouteOperFlags
_VRtrInetCidrRouteOperFlags_Object = MibTableColumn
vRtrInetCidrRouteOperFlags = _VRtrInetCidrRouteOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 22),
    _VRtrInetCidrRouteOperFlags_Type()
)
vRtrInetCidrRouteOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteOperFlags.setStatus("current")
_VRtrInetCidrRouteNextHopWeight_Type = Unsigned32
_VRtrInetCidrRouteNextHopWeight_Object = MibTableColumn
vRtrInetCidrRouteNextHopWeight = _VRtrInetCidrRouteNextHopWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 23),
    _VRtrInetCidrRouteNextHopWeight_Type()
)
vRtrInetCidrRouteNextHopWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNextHopWeight.setStatus("current")
_VRtrInetCidrRouteNextHopOwnInst_Type = Unsigned32
_VRtrInetCidrRouteNextHopOwnInst_Object = MibTableColumn
vRtrInetCidrRouteNextHopOwnInst = _VRtrInetCidrRouteNextHopOwnInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 24),
    _VRtrInetCidrRouteNextHopOwnInst_Type()
)
vRtrInetCidrRouteNextHopOwnInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNextHopOwnInst.setStatus("current")
_VRtrInetCidrRouteBkupNHOwnInst_Type = Unsigned32
_VRtrInetCidrRouteBkupNHOwnInst_Object = MibTableColumn
vRtrInetCidrRouteBkupNHOwnInst = _VRtrInetCidrRouteBkupNHOwnInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 25),
    _VRtrInetCidrRouteBkupNHOwnInst_Type()
)
vRtrInetCidrRouteBkupNHOwnInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteBkupNHOwnInst.setStatus("current")
_VRtrInetCidrRouteNHIsFec_Type = TruthValue
_VRtrInetCidrRouteNHIsFec_Object = MibTableColumn
vRtrInetCidrRouteNHIsFec = _VRtrInetCidrRouteNHIsFec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 26),
    _VRtrInetCidrRouteNHIsFec_Type()
)
vRtrInetCidrRouteNHIsFec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNHIsFec.setStatus("current")
_VRtrInetCidrRouteNHFecPfxLen_Type = InetAddressPrefixLength
_VRtrInetCidrRouteNHFecPfxLen_Object = MibTableColumn
vRtrInetCidrRouteNHFecPfxLen = _VRtrInetCidrRouteNHFecPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 30, 1, 27),
    _VRtrInetCidrRouteNHFecPfxLen_Type()
)
vRtrInetCidrRouteNHFecPfxLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRouteNHFecPfxLen.setStatus("current")
_VRtrIcmp6Table_Object = MibTable
vRtrIcmp6Table = _VRtrIcmp6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31)
)
if mibBuilder.loadTexts:
    vRtrIcmp6Table.setStatus("current")
_VRtrIcmp6Entry_Object = MibTableRow
vRtrIcmp6Entry = _VRtrIcmp6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1)
)
if mibBuilder.loadTexts:
    vRtrIcmp6Entry.setStatus("current")
_VRtrIcmp6InMsgs_Type = Counter32
_VRtrIcmp6InMsgs_Object = MibTableColumn
vRtrIcmp6InMsgs = _VRtrIcmp6InMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 1),
    _VRtrIcmp6InMsgs_Type()
)
vRtrIcmp6InMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InMsgs.setStatus("current")
_VRtrIcmp6InErrors_Type = Counter32
_VRtrIcmp6InErrors_Object = MibTableColumn
vRtrIcmp6InErrors = _VRtrIcmp6InErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 2),
    _VRtrIcmp6InErrors_Type()
)
vRtrIcmp6InErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InErrors.setStatus("current")
_VRtrIcmp6InDestUnreachs_Type = Counter32
_VRtrIcmp6InDestUnreachs_Object = MibTableColumn
vRtrIcmp6InDestUnreachs = _VRtrIcmp6InDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 3),
    _VRtrIcmp6InDestUnreachs_Type()
)
vRtrIcmp6InDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InDestUnreachs.setStatus("current")
_VRtrIcmp6InAdminProhibs_Type = Counter32
_VRtrIcmp6InAdminProhibs_Object = MibTableColumn
vRtrIcmp6InAdminProhibs = _VRtrIcmp6InAdminProhibs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 4),
    _VRtrIcmp6InAdminProhibs_Type()
)
vRtrIcmp6InAdminProhibs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InAdminProhibs.setStatus("current")
_VRtrIcmp6InTimeExcds_Type = Counter32
_VRtrIcmp6InTimeExcds_Object = MibTableColumn
vRtrIcmp6InTimeExcds = _VRtrIcmp6InTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 5),
    _VRtrIcmp6InTimeExcds_Type()
)
vRtrIcmp6InTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InTimeExcds.setStatus("current")
_VRtrIcmp6InParmProblems_Type = Counter32
_VRtrIcmp6InParmProblems_Object = MibTableColumn
vRtrIcmp6InParmProblems = _VRtrIcmp6InParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 6),
    _VRtrIcmp6InParmProblems_Type()
)
vRtrIcmp6InParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InParmProblems.setStatus("current")
_VRtrIcmp6InPktTooBigs_Type = Counter32
_VRtrIcmp6InPktTooBigs_Object = MibTableColumn
vRtrIcmp6InPktTooBigs = _VRtrIcmp6InPktTooBigs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 7),
    _VRtrIcmp6InPktTooBigs_Type()
)
vRtrIcmp6InPktTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InPktTooBigs.setStatus("current")
_VRtrIcmp6InEchos_Type = Counter32
_VRtrIcmp6InEchos_Object = MibTableColumn
vRtrIcmp6InEchos = _VRtrIcmp6InEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 8),
    _VRtrIcmp6InEchos_Type()
)
vRtrIcmp6InEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InEchos.setStatus("current")
_VRtrIcmp6InEchoReplies_Type = Counter32
_VRtrIcmp6InEchoReplies_Object = MibTableColumn
vRtrIcmp6InEchoReplies = _VRtrIcmp6InEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 9),
    _VRtrIcmp6InEchoReplies_Type()
)
vRtrIcmp6InEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InEchoReplies.setStatus("current")
_VRtrIcmp6InRtrSolicits_Type = Counter32
_VRtrIcmp6InRtrSolicits_Object = MibTableColumn
vRtrIcmp6InRtrSolicits = _VRtrIcmp6InRtrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 10),
    _VRtrIcmp6InRtrSolicits_Type()
)
vRtrIcmp6InRtrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InRtrSolicits.setStatus("current")
_VRtrIcmp6InRtrAdvertisements_Type = Counter32
_VRtrIcmp6InRtrAdvertisements_Object = MibTableColumn
vRtrIcmp6InRtrAdvertisements = _VRtrIcmp6InRtrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 11),
    _VRtrIcmp6InRtrAdvertisements_Type()
)
vRtrIcmp6InRtrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InRtrAdvertisements.setStatus("current")
_VRtrIcmp6InNbrSolicits_Type = Counter32
_VRtrIcmp6InNbrSolicits_Object = MibTableColumn
vRtrIcmp6InNbrSolicits = _VRtrIcmp6InNbrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 12),
    _VRtrIcmp6InNbrSolicits_Type()
)
vRtrIcmp6InNbrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InNbrSolicits.setStatus("current")
_VRtrIcmp6InNbrAdvertisements_Type = Counter32
_VRtrIcmp6InNbrAdvertisements_Object = MibTableColumn
vRtrIcmp6InNbrAdvertisements = _VRtrIcmp6InNbrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 13),
    _VRtrIcmp6InNbrAdvertisements_Type()
)
vRtrIcmp6InNbrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InNbrAdvertisements.setStatus("current")
_VRtrIcmp6InRedirects_Type = Counter32
_VRtrIcmp6InRedirects_Object = MibTableColumn
vRtrIcmp6InRedirects = _VRtrIcmp6InRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 14),
    _VRtrIcmp6InRedirects_Type()
)
vRtrIcmp6InRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InRedirects.setStatus("current")
_VRtrIcmp6InGrpMembQueries_Type = Counter32
_VRtrIcmp6InGrpMembQueries_Object = MibTableColumn
vRtrIcmp6InGrpMembQueries = _VRtrIcmp6InGrpMembQueries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 15),
    _VRtrIcmp6InGrpMembQueries_Type()
)
vRtrIcmp6InGrpMembQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InGrpMembQueries.setStatus("current")
_VRtrIcmp6InGrpMembResponses_Type = Counter32
_VRtrIcmp6InGrpMembResponses_Object = MibTableColumn
vRtrIcmp6InGrpMembResponses = _VRtrIcmp6InGrpMembResponses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 16),
    _VRtrIcmp6InGrpMembResponses_Type()
)
vRtrIcmp6InGrpMembResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InGrpMembResponses.setStatus("current")
_VRtrIcmp6InGrpMembReductions_Type = Counter32
_VRtrIcmp6InGrpMembReductions_Object = MibTableColumn
vRtrIcmp6InGrpMembReductions = _VRtrIcmp6InGrpMembReductions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 17),
    _VRtrIcmp6InGrpMembReductions_Type()
)
vRtrIcmp6InGrpMembReductions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6InGrpMembReductions.setStatus("current")
_VRtrIcmp6OutMsgs_Type = Counter32
_VRtrIcmp6OutMsgs_Object = MibTableColumn
vRtrIcmp6OutMsgs = _VRtrIcmp6OutMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 18),
    _VRtrIcmp6OutMsgs_Type()
)
vRtrIcmp6OutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutMsgs.setStatus("current")
_VRtrIcmp6OutErrors_Type = Counter32
_VRtrIcmp6OutErrors_Object = MibTableColumn
vRtrIcmp6OutErrors = _VRtrIcmp6OutErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 19),
    _VRtrIcmp6OutErrors_Type()
)
vRtrIcmp6OutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutErrors.setStatus("current")
_VRtrIcmp6OutDestUnreachs_Type = Counter32
_VRtrIcmp6OutDestUnreachs_Object = MibTableColumn
vRtrIcmp6OutDestUnreachs = _VRtrIcmp6OutDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 20),
    _VRtrIcmp6OutDestUnreachs_Type()
)
vRtrIcmp6OutDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutDestUnreachs.setStatus("current")
_VRtrIcmp6OutAdminProhibs_Type = Counter32
_VRtrIcmp6OutAdminProhibs_Object = MibTableColumn
vRtrIcmp6OutAdminProhibs = _VRtrIcmp6OutAdminProhibs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 21),
    _VRtrIcmp6OutAdminProhibs_Type()
)
vRtrIcmp6OutAdminProhibs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutAdminProhibs.setStatus("current")
_VRtrIcmp6OutTimeExcds_Type = Counter32
_VRtrIcmp6OutTimeExcds_Object = MibTableColumn
vRtrIcmp6OutTimeExcds = _VRtrIcmp6OutTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 22),
    _VRtrIcmp6OutTimeExcds_Type()
)
vRtrIcmp6OutTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutTimeExcds.setStatus("current")
_VRtrIcmp6OutParmProblems_Type = Counter32
_VRtrIcmp6OutParmProblems_Object = MibTableColumn
vRtrIcmp6OutParmProblems = _VRtrIcmp6OutParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 23),
    _VRtrIcmp6OutParmProblems_Type()
)
vRtrIcmp6OutParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutParmProblems.setStatus("current")
_VRtrIcmp6OutPktTooBigs_Type = Counter32
_VRtrIcmp6OutPktTooBigs_Object = MibTableColumn
vRtrIcmp6OutPktTooBigs = _VRtrIcmp6OutPktTooBigs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 24),
    _VRtrIcmp6OutPktTooBigs_Type()
)
vRtrIcmp6OutPktTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutPktTooBigs.setStatus("current")
_VRtrIcmp6OutEchos_Type = Counter32
_VRtrIcmp6OutEchos_Object = MibTableColumn
vRtrIcmp6OutEchos = _VRtrIcmp6OutEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 25),
    _VRtrIcmp6OutEchos_Type()
)
vRtrIcmp6OutEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutEchos.setStatus("current")
_VRtrIcmp6OutEchoReplies_Type = Counter32
_VRtrIcmp6OutEchoReplies_Object = MibTableColumn
vRtrIcmp6OutEchoReplies = _VRtrIcmp6OutEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 26),
    _VRtrIcmp6OutEchoReplies_Type()
)
vRtrIcmp6OutEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutEchoReplies.setStatus("current")
_VRtrIcmp6OutRtrSolicits_Type = Counter32
_VRtrIcmp6OutRtrSolicits_Object = MibTableColumn
vRtrIcmp6OutRtrSolicits = _VRtrIcmp6OutRtrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 27),
    _VRtrIcmp6OutRtrSolicits_Type()
)
vRtrIcmp6OutRtrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutRtrSolicits.setStatus("current")
_VRtrIcmp6OutRtrAdvertisements_Type = Counter32
_VRtrIcmp6OutRtrAdvertisements_Object = MibTableColumn
vRtrIcmp6OutRtrAdvertisements = _VRtrIcmp6OutRtrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 28),
    _VRtrIcmp6OutRtrAdvertisements_Type()
)
vRtrIcmp6OutRtrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutRtrAdvertisements.setStatus("current")
_VRtrIcmp6OutNbrSolicits_Type = Counter32
_VRtrIcmp6OutNbrSolicits_Object = MibTableColumn
vRtrIcmp6OutNbrSolicits = _VRtrIcmp6OutNbrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 29),
    _VRtrIcmp6OutNbrSolicits_Type()
)
vRtrIcmp6OutNbrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutNbrSolicits.setStatus("current")
_VRtrIcmp6OutNbrAdvertisements_Type = Counter32
_VRtrIcmp6OutNbrAdvertisements_Object = MibTableColumn
vRtrIcmp6OutNbrAdvertisements = _VRtrIcmp6OutNbrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 30),
    _VRtrIcmp6OutNbrAdvertisements_Type()
)
vRtrIcmp6OutNbrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutNbrAdvertisements.setStatus("current")
_VRtrIcmp6OutRedirects_Type = Counter32
_VRtrIcmp6OutRedirects_Object = MibTableColumn
vRtrIcmp6OutRedirects = _VRtrIcmp6OutRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 31),
    _VRtrIcmp6OutRedirects_Type()
)
vRtrIcmp6OutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutRedirects.setStatus("current")
_VRtrIcmp6OutGrpMembQueries_Type = Counter32
_VRtrIcmp6OutGrpMembQueries_Object = MibTableColumn
vRtrIcmp6OutGrpMembQueries = _VRtrIcmp6OutGrpMembQueries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 32),
    _VRtrIcmp6OutGrpMembQueries_Type()
)
vRtrIcmp6OutGrpMembQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutGrpMembQueries.setStatus("current")
_VRtrIcmp6OutGrpMembResponses_Type = Counter32
_VRtrIcmp6OutGrpMembResponses_Object = MibTableColumn
vRtrIcmp6OutGrpMembResponses = _VRtrIcmp6OutGrpMembResponses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 33),
    _VRtrIcmp6OutGrpMembResponses_Type()
)
vRtrIcmp6OutGrpMembResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutGrpMembResponses.setStatus("current")
_VRtrIcmp6OutGrpMembReductions_Type = Counter32
_VRtrIcmp6OutGrpMembReductions_Object = MibTableColumn
vRtrIcmp6OutGrpMembReductions = _VRtrIcmp6OutGrpMembReductions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 34),
    _VRtrIcmp6OutGrpMembReductions_Type()
)
vRtrIcmp6OutGrpMembReductions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutGrpMembReductions.setStatus("current")
_VRtrIcmp6OutDiscards_Type = Counter32
_VRtrIcmp6OutDiscards_Object = MibTableColumn
vRtrIcmp6OutDiscards = _VRtrIcmp6OutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 31, 1, 35),
    _VRtrIcmp6OutDiscards_Type()
)
vRtrIcmp6OutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmp6OutDiscards.setStatus("current")
_VRtrIfIcmp6Table_Object = MibTable
vRtrIfIcmp6Table = _VRtrIfIcmp6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32)
)
if mibBuilder.loadTexts:
    vRtrIfIcmp6Table.setStatus("current")
_VRtrIfIcmp6Entry_Object = MibTableRow
vRtrIfIcmp6Entry = _VRtrIfIcmp6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1)
)
if mibBuilder.loadTexts:
    vRtrIfIcmp6Entry.setStatus("current")
_VRtrIfIcmp6InMsgs_Type = Counter32
_VRtrIfIcmp6InMsgs_Object = MibTableColumn
vRtrIfIcmp6InMsgs = _VRtrIfIcmp6InMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 1),
    _VRtrIfIcmp6InMsgs_Type()
)
vRtrIfIcmp6InMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InMsgs.setStatus("current")
_VRtrIfIcmp6InErrors_Type = Counter32
_VRtrIfIcmp6InErrors_Object = MibTableColumn
vRtrIfIcmp6InErrors = _VRtrIfIcmp6InErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 2),
    _VRtrIfIcmp6InErrors_Type()
)
vRtrIfIcmp6InErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InErrors.setStatus("current")
_VRtrIfIcmp6InDestUnreachs_Type = Counter32
_VRtrIfIcmp6InDestUnreachs_Object = MibTableColumn
vRtrIfIcmp6InDestUnreachs = _VRtrIfIcmp6InDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 3),
    _VRtrIfIcmp6InDestUnreachs_Type()
)
vRtrIfIcmp6InDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InDestUnreachs.setStatus("current")
_VRtrIfIcmp6InAdminProhibs_Type = Counter32
_VRtrIfIcmp6InAdminProhibs_Object = MibTableColumn
vRtrIfIcmp6InAdminProhibs = _VRtrIfIcmp6InAdminProhibs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 4),
    _VRtrIfIcmp6InAdminProhibs_Type()
)
vRtrIfIcmp6InAdminProhibs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InAdminProhibs.setStatus("current")
_VRtrIfIcmp6InTimeExcds_Type = Counter32
_VRtrIfIcmp6InTimeExcds_Object = MibTableColumn
vRtrIfIcmp6InTimeExcds = _VRtrIfIcmp6InTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 5),
    _VRtrIfIcmp6InTimeExcds_Type()
)
vRtrIfIcmp6InTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InTimeExcds.setStatus("current")
_VRtrIfIcmp6InParmProblems_Type = Counter32
_VRtrIfIcmp6InParmProblems_Object = MibTableColumn
vRtrIfIcmp6InParmProblems = _VRtrIfIcmp6InParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 6),
    _VRtrIfIcmp6InParmProblems_Type()
)
vRtrIfIcmp6InParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InParmProblems.setStatus("current")
_VRtrIfIcmp6InPktTooBigs_Type = Counter32
_VRtrIfIcmp6InPktTooBigs_Object = MibTableColumn
vRtrIfIcmp6InPktTooBigs = _VRtrIfIcmp6InPktTooBigs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 7),
    _VRtrIfIcmp6InPktTooBigs_Type()
)
vRtrIfIcmp6InPktTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InPktTooBigs.setStatus("current")
_VRtrIfIcmp6InEchos_Type = Counter32
_VRtrIfIcmp6InEchos_Object = MibTableColumn
vRtrIfIcmp6InEchos = _VRtrIfIcmp6InEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 8),
    _VRtrIfIcmp6InEchos_Type()
)
vRtrIfIcmp6InEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InEchos.setStatus("current")
_VRtrIfIcmp6InEchoReplies_Type = Counter32
_VRtrIfIcmp6InEchoReplies_Object = MibTableColumn
vRtrIfIcmp6InEchoReplies = _VRtrIfIcmp6InEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 9),
    _VRtrIfIcmp6InEchoReplies_Type()
)
vRtrIfIcmp6InEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InEchoReplies.setStatus("current")
_VRtrIfIcmp6InRtrSolicits_Type = Counter32
_VRtrIfIcmp6InRtrSolicits_Object = MibTableColumn
vRtrIfIcmp6InRtrSolicits = _VRtrIfIcmp6InRtrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 10),
    _VRtrIfIcmp6InRtrSolicits_Type()
)
vRtrIfIcmp6InRtrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InRtrSolicits.setStatus("current")
_VRtrIfIcmp6InRtrAdvertisements_Type = Counter32
_VRtrIfIcmp6InRtrAdvertisements_Object = MibTableColumn
vRtrIfIcmp6InRtrAdvertisements = _VRtrIfIcmp6InRtrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 11),
    _VRtrIfIcmp6InRtrAdvertisements_Type()
)
vRtrIfIcmp6InRtrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InRtrAdvertisements.setStatus("current")
_VRtrIfIcmp6InNbrSolicits_Type = Counter32
_VRtrIfIcmp6InNbrSolicits_Object = MibTableColumn
vRtrIfIcmp6InNbrSolicits = _VRtrIfIcmp6InNbrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 12),
    _VRtrIfIcmp6InNbrSolicits_Type()
)
vRtrIfIcmp6InNbrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InNbrSolicits.setStatus("current")
_VRtrIfIcmp6InNbrAdvertisements_Type = Counter32
_VRtrIfIcmp6InNbrAdvertisements_Object = MibTableColumn
vRtrIfIcmp6InNbrAdvertisements = _VRtrIfIcmp6InNbrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 13),
    _VRtrIfIcmp6InNbrAdvertisements_Type()
)
vRtrIfIcmp6InNbrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InNbrAdvertisements.setStatus("current")
_VRtrIfIcmp6InRedirects_Type = Counter32
_VRtrIfIcmp6InRedirects_Object = MibTableColumn
vRtrIfIcmp6InRedirects = _VRtrIfIcmp6InRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 14),
    _VRtrIfIcmp6InRedirects_Type()
)
vRtrIfIcmp6InRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InRedirects.setStatus("current")
_VRtrIfIcmp6InGrpMembQueries_Type = Counter32
_VRtrIfIcmp6InGrpMembQueries_Object = MibTableColumn
vRtrIfIcmp6InGrpMembQueries = _VRtrIfIcmp6InGrpMembQueries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 15),
    _VRtrIfIcmp6InGrpMembQueries_Type()
)
vRtrIfIcmp6InGrpMembQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InGrpMembQueries.setStatus("current")
_VRtrIfIcmp6InGrpMembResponses_Type = Counter32
_VRtrIfIcmp6InGrpMembResponses_Object = MibTableColumn
vRtrIfIcmp6InGrpMembResponses = _VRtrIfIcmp6InGrpMembResponses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 16),
    _VRtrIfIcmp6InGrpMembResponses_Type()
)
vRtrIfIcmp6InGrpMembResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InGrpMembResponses.setStatus("current")
_VRtrIfIcmp6InGrpMembReductions_Type = Counter32
_VRtrIfIcmp6InGrpMembReductions_Object = MibTableColumn
vRtrIfIcmp6InGrpMembReductions = _VRtrIfIcmp6InGrpMembReductions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 17),
    _VRtrIfIcmp6InGrpMembReductions_Type()
)
vRtrIfIcmp6InGrpMembReductions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6InGrpMembReductions.setStatus("current")
_VRtrIfIcmp6OutMsgs_Type = Counter32
_VRtrIfIcmp6OutMsgs_Object = MibTableColumn
vRtrIfIcmp6OutMsgs = _VRtrIfIcmp6OutMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 18),
    _VRtrIfIcmp6OutMsgs_Type()
)
vRtrIfIcmp6OutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutMsgs.setStatus("current")
_VRtrIfIcmp6OutErrors_Type = Counter32
_VRtrIfIcmp6OutErrors_Object = MibTableColumn
vRtrIfIcmp6OutErrors = _VRtrIfIcmp6OutErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 19),
    _VRtrIfIcmp6OutErrors_Type()
)
vRtrIfIcmp6OutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutErrors.setStatus("current")
_VRtrIfIcmp6OutDestUnreachs_Type = Counter32
_VRtrIfIcmp6OutDestUnreachs_Object = MibTableColumn
vRtrIfIcmp6OutDestUnreachs = _VRtrIfIcmp6OutDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 20),
    _VRtrIfIcmp6OutDestUnreachs_Type()
)
vRtrIfIcmp6OutDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutDestUnreachs.setStatus("current")
_VRtrIfIcmp6OutAdminProhibs_Type = Counter32
_VRtrIfIcmp6OutAdminProhibs_Object = MibTableColumn
vRtrIfIcmp6OutAdminProhibs = _VRtrIfIcmp6OutAdminProhibs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 21),
    _VRtrIfIcmp6OutAdminProhibs_Type()
)
vRtrIfIcmp6OutAdminProhibs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutAdminProhibs.setStatus("current")
_VRtrIfIcmp6OutTimeExcds_Type = Counter32
_VRtrIfIcmp6OutTimeExcds_Object = MibTableColumn
vRtrIfIcmp6OutTimeExcds = _VRtrIfIcmp6OutTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 22),
    _VRtrIfIcmp6OutTimeExcds_Type()
)
vRtrIfIcmp6OutTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutTimeExcds.setStatus("current")
_VRtrIfIcmp6OutParmProblems_Type = Counter32
_VRtrIfIcmp6OutParmProblems_Object = MibTableColumn
vRtrIfIcmp6OutParmProblems = _VRtrIfIcmp6OutParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 23),
    _VRtrIfIcmp6OutParmProblems_Type()
)
vRtrIfIcmp6OutParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutParmProblems.setStatus("current")
_VRtrIfIcmp6OutPktTooBigs_Type = Counter32
_VRtrIfIcmp6OutPktTooBigs_Object = MibTableColumn
vRtrIfIcmp6OutPktTooBigs = _VRtrIfIcmp6OutPktTooBigs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 24),
    _VRtrIfIcmp6OutPktTooBigs_Type()
)
vRtrIfIcmp6OutPktTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutPktTooBigs.setStatus("current")
_VRtrIfIcmp6OutEchos_Type = Counter32
_VRtrIfIcmp6OutEchos_Object = MibTableColumn
vRtrIfIcmp6OutEchos = _VRtrIfIcmp6OutEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 25),
    _VRtrIfIcmp6OutEchos_Type()
)
vRtrIfIcmp6OutEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutEchos.setStatus("current")
_VRtrIfIcmp6OutEchoReplies_Type = Counter32
_VRtrIfIcmp6OutEchoReplies_Object = MibTableColumn
vRtrIfIcmp6OutEchoReplies = _VRtrIfIcmp6OutEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 26),
    _VRtrIfIcmp6OutEchoReplies_Type()
)
vRtrIfIcmp6OutEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutEchoReplies.setStatus("current")
_VRtrIfIcmp6OutRtrSolicits_Type = Counter32
_VRtrIfIcmp6OutRtrSolicits_Object = MibTableColumn
vRtrIfIcmp6OutRtrSolicits = _VRtrIfIcmp6OutRtrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 27),
    _VRtrIfIcmp6OutRtrSolicits_Type()
)
vRtrIfIcmp6OutRtrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutRtrSolicits.setStatus("current")
_VRtrIfIcmp6OutRtrSolicitsTime_Type = TimeStamp
_VRtrIfIcmp6OutRtrSolicitsTime_Object = MibTableColumn
vRtrIfIcmp6OutRtrSolicitsTime = _VRtrIfIcmp6OutRtrSolicitsTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 28),
    _VRtrIfIcmp6OutRtrSolicitsTime_Type()
)
vRtrIfIcmp6OutRtrSolicitsTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutRtrSolicitsTime.setStatus("current")
_VRtrIfIcmp6OutRtrAdvertisements_Type = Counter32
_VRtrIfIcmp6OutRtrAdvertisements_Object = MibTableColumn
vRtrIfIcmp6OutRtrAdvertisements = _VRtrIfIcmp6OutRtrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 29),
    _VRtrIfIcmp6OutRtrAdvertisements_Type()
)
vRtrIfIcmp6OutRtrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutRtrAdvertisements.setStatus("current")
_VRtrIfIcmp6OutRtrAdvTime_Type = TimeStamp
_VRtrIfIcmp6OutRtrAdvTime_Object = MibTableColumn
vRtrIfIcmp6OutRtrAdvTime = _VRtrIfIcmp6OutRtrAdvTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 30),
    _VRtrIfIcmp6OutRtrAdvTime_Type()
)
vRtrIfIcmp6OutRtrAdvTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutRtrAdvTime.setStatus("current")
_VRtrIfIcmp6OutNbrSolicits_Type = Counter32
_VRtrIfIcmp6OutNbrSolicits_Object = MibTableColumn
vRtrIfIcmp6OutNbrSolicits = _VRtrIfIcmp6OutNbrSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 31),
    _VRtrIfIcmp6OutNbrSolicits_Type()
)
vRtrIfIcmp6OutNbrSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutNbrSolicits.setStatus("current")
_VRtrIfIcmp6OutNbrSolicitsTime_Type = TimeStamp
_VRtrIfIcmp6OutNbrSolicitsTime_Object = MibTableColumn
vRtrIfIcmp6OutNbrSolicitsTime = _VRtrIfIcmp6OutNbrSolicitsTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 32),
    _VRtrIfIcmp6OutNbrSolicitsTime_Type()
)
vRtrIfIcmp6OutNbrSolicitsTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutNbrSolicitsTime.setStatus("current")
_VRtrIfIcmp6OutNbrAdvertisements_Type = Counter32
_VRtrIfIcmp6OutNbrAdvertisements_Object = MibTableColumn
vRtrIfIcmp6OutNbrAdvertisements = _VRtrIfIcmp6OutNbrAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 33),
    _VRtrIfIcmp6OutNbrAdvertisements_Type()
)
vRtrIfIcmp6OutNbrAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutNbrAdvertisements.setStatus("current")
_VRtrIfIcmp6OutNbrAdvTime_Type = TimeStamp
_VRtrIfIcmp6OutNbrAdvTime_Object = MibTableColumn
vRtrIfIcmp6OutNbrAdvTime = _VRtrIfIcmp6OutNbrAdvTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 34),
    _VRtrIfIcmp6OutNbrAdvTime_Type()
)
vRtrIfIcmp6OutNbrAdvTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutNbrAdvTime.setStatus("current")
_VRtrIfIcmp6OutRedirects_Type = Counter32
_VRtrIfIcmp6OutRedirects_Object = MibTableColumn
vRtrIfIcmp6OutRedirects = _VRtrIfIcmp6OutRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 35),
    _VRtrIfIcmp6OutRedirects_Type()
)
vRtrIfIcmp6OutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutRedirects.setStatus("current")
_VRtrIfIcmp6OutGrpMembQueries_Type = Counter32
_VRtrIfIcmp6OutGrpMembQueries_Object = MibTableColumn
vRtrIfIcmp6OutGrpMembQueries = _VRtrIfIcmp6OutGrpMembQueries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 36),
    _VRtrIfIcmp6OutGrpMembQueries_Type()
)
vRtrIfIcmp6OutGrpMembQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutGrpMembQueries.setStatus("current")
_VRtrIfIcmp6OutGrpMembResponses_Type = Counter32
_VRtrIfIcmp6OutGrpMembResponses_Object = MibTableColumn
vRtrIfIcmp6OutGrpMembResponses = _VRtrIfIcmp6OutGrpMembResponses_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 37),
    _VRtrIfIcmp6OutGrpMembResponses_Type()
)
vRtrIfIcmp6OutGrpMembResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutGrpMembResponses.setStatus("current")
_VRtrIfIcmp6OutGrpMembReductions_Type = Counter32
_VRtrIfIcmp6OutGrpMembReductions_Object = MibTableColumn
vRtrIfIcmp6OutGrpMembReductions = _VRtrIfIcmp6OutGrpMembReductions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 38),
    _VRtrIfIcmp6OutGrpMembReductions_Type()
)
vRtrIfIcmp6OutGrpMembReductions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutGrpMembReductions.setStatus("current")
_VRtrIfIcmp6OutDiscards_Type = Counter32
_VRtrIfIcmp6OutDiscards_Object = MibTableColumn
vRtrIfIcmp6OutDiscards = _VRtrIfIcmp6OutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 32, 1, 39),
    _VRtrIfIcmp6OutDiscards_Type()
)
vRtrIfIcmp6OutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmp6OutDiscards.setStatus("current")
_VRtrIfBfdTable_Object = MibTable
vRtrIfBfdTable = _VRtrIfBfdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33)
)
if mibBuilder.loadTexts:
    vRtrIfBfdTable.setStatus("obsolete")
_VRtrIfBfdEntry_Object = MibTableRow
vRtrIfBfdEntry = _VRtrIfBfdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1)
)
if mibBuilder.loadTexts:
    vRtrIfBfdEntry.setStatus("obsolete")
_VRtrIfBfdAdminState_Type = TmnxAdminState
_VRtrIfBfdAdminState_Object = MibTableColumn
vRtrIfBfdAdminState = _VRtrIfBfdAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 1),
    _VRtrIfBfdAdminState_Type()
)
vRtrIfBfdAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdAdminState.setStatus("obsolete")


class _VRtrIfBfdTransmitInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdTransmitInterval based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100000),
    )


_VRtrIfBfdTransmitInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdTransmitInterval_Object = MibTableColumn
vRtrIfBfdTransmitInterval = _VRtrIfBfdTransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 2),
    _VRtrIfBfdTransmitInterval_Type()
)
vRtrIfBfdTransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdTransmitInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdTransmitInterval.setUnits("milliseconds")


class _VRtrIfBfdReceiveInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdReceiveInterval based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100000),
    )


_VRtrIfBfdReceiveInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdReceiveInterval_Object = MibTableColumn
vRtrIfBfdReceiveInterval = _VRtrIfBfdReceiveInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 3),
    _VRtrIfBfdReceiveInterval_Type()
)
vRtrIfBfdReceiveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdReceiveInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdReceiveInterval.setUnits("milliseconds")


class _VRtrIfBfdMultiplier_Type(Unsigned32):
    """Custom type vRtrIfBfdMultiplier based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 20),
    )


_VRtrIfBfdMultiplier_Type.__name__ = "Unsigned32"
_VRtrIfBfdMultiplier_Object = MibTableColumn
vRtrIfBfdMultiplier = _VRtrIfBfdMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 4),
    _VRtrIfBfdMultiplier_Type()
)
vRtrIfBfdMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdMultiplier.setStatus("obsolete")


class _VRtrIfBfdEchoInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdEchoInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(100, 100000),
    )


_VRtrIfBfdEchoInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdEchoInterval_Object = MibTableColumn
vRtrIfBfdEchoInterval = _VRtrIfBfdEchoInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 5),
    _VRtrIfBfdEchoInterval_Type()
)
vRtrIfBfdEchoInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdEchoInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdEchoInterval.setUnits("milliseconds")


class _VRtrIfBfdType_Type(Integer32):
    """Custom type vRtrIfBfdType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cpmNp", 1),
          ("auto", 2))
    )


_VRtrIfBfdType_Type.__name__ = "Integer32"
_VRtrIfBfdType_Object = MibTableColumn
vRtrIfBfdType = _VRtrIfBfdType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 33, 1, 6),
    _VRtrIfBfdType_Type()
)
vRtrIfBfdType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdType.setStatus("obsolete")
_VRtrIfBfdSessionTable_Object = MibTable
vRtrIfBfdSessionTable = _VRtrIfBfdSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34)
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTable.setStatus("obsolete")
_VRtrIfBfdSessionEntry_Object = MibTableRow
vRtrIfBfdSessionEntry = _VRtrIfBfdSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1)
)
vRtrIfBfdSessionEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemAddr"),
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessionEntry.setStatus("obsolete")
_VRtrIfBfdSessionLclAddrType_Type = InetAddressType
_VRtrIfBfdSessionLclAddrType_Object = MibTableColumn
vRtrIfBfdSessionLclAddrType = _VRtrIfBfdSessionLclAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 1),
    _VRtrIfBfdSessionLclAddrType_Type()
)
vRtrIfBfdSessionLclAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionLclAddrType.setStatus("obsolete")


class _VRtrIfBfdSessionLclAddr_Type(InetAddress):
    """Custom type vRtrIfBfdSessionLclAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfBfdSessionLclAddr_Type.__name__ = "InetAddress"
_VRtrIfBfdSessionLclAddr_Object = MibTableColumn
vRtrIfBfdSessionLclAddr = _VRtrIfBfdSessionLclAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 2),
    _VRtrIfBfdSessionLclAddr_Type()
)
vRtrIfBfdSessionLclAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionLclAddr.setStatus("obsolete")
_VRtrIfBfdSessionRemAddrType_Type = InetAddressType
_VRtrIfBfdSessionRemAddrType_Object = MibTableColumn
vRtrIfBfdSessionRemAddrType = _VRtrIfBfdSessionRemAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 3),
    _VRtrIfBfdSessionRemAddrType_Type()
)
vRtrIfBfdSessionRemAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionRemAddrType.setStatus("obsolete")


class _VRtrIfBfdSessionRemAddr_Type(InetAddress):
    """Custom type vRtrIfBfdSessionRemAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfBfdSessionRemAddr_Type.__name__ = "InetAddress"
_VRtrIfBfdSessionRemAddr_Object = MibTableColumn
vRtrIfBfdSessionRemAddr = _VRtrIfBfdSessionRemAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 4),
    _VRtrIfBfdSessionRemAddr_Type()
)
vRtrIfBfdSessionRemAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionRemAddr.setStatus("obsolete")
_VRtrIfBfdSessionOperState_Type = TmnxOperState
_VRtrIfBfdSessionOperState_Object = MibTableColumn
vRtrIfBfdSessionOperState = _VRtrIfBfdSessionOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 5),
    _VRtrIfBfdSessionOperState_Type()
)
vRtrIfBfdSessionOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionOperState.setStatus("obsolete")


class _VRtrIfBfdSessionState_Type(Integer32):
    """Custom type vRtrIfBfdSessionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("adminDown", 0),
          ("down", 1),
          ("init", 2),
          ("up", 3))
    )


_VRtrIfBfdSessionState_Type.__name__ = "Integer32"
_VRtrIfBfdSessionState_Object = MibTableColumn
vRtrIfBfdSessionState = _VRtrIfBfdSessionState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 6),
    _VRtrIfBfdSessionState_Type()
)
vRtrIfBfdSessionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionState.setStatus("obsolete")


class _VRtrIfBfdSessionOperFlags_Type(Bits):
    """Custom type vRtrIfBfdSessionOperFlags based on Bits"""
    namedValues = NamedValues(
        *(("noProtocols", 0),
          ("noHeartBeat", 1),
          ("echoFailed", 2),
          ("nbrSignalDown", 3),
          ("fwdPlaneReset", 4),
          ("pathDown", 5),
          ("nbrAdminDown", 6),
          ("adminClear", 7))
    )

_VRtrIfBfdSessionOperFlags_Type.__name__ = "Bits"
_VRtrIfBfdSessionOperFlags_Object = MibTableColumn
vRtrIfBfdSessionOperFlags = _VRtrIfBfdSessionOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 7),
    _VRtrIfBfdSessionOperFlags_Type()
)
vRtrIfBfdSessionOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionOperFlags.setStatus("obsolete")
_VRtrIfBfdSessionMesgRecv_Type = Counter32
_VRtrIfBfdSessionMesgRecv_Object = MibTableColumn
vRtrIfBfdSessionMesgRecv = _VRtrIfBfdSessionMesgRecv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 8),
    _VRtrIfBfdSessionMesgRecv_Type()
)
vRtrIfBfdSessionMesgRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionMesgRecv.setStatus("obsolete")
_VRtrIfBfdSessionMesgSent_Type = Counter32
_VRtrIfBfdSessionMesgSent_Object = MibTableColumn
vRtrIfBfdSessionMesgSent = _VRtrIfBfdSessionMesgSent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 9),
    _VRtrIfBfdSessionMesgSent_Type()
)
vRtrIfBfdSessionMesgSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionMesgSent.setStatus("obsolete")
_VRtrIfBfdSessionLastDownTime_Type = TimeStamp
_VRtrIfBfdSessionLastDownTime_Object = MibTableColumn
vRtrIfBfdSessionLastDownTime = _VRtrIfBfdSessionLastDownTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 10),
    _VRtrIfBfdSessionLastDownTime_Type()
)
vRtrIfBfdSessionLastDownTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionLastDownTime.setStatus("obsolete")
_VRtrIfBfdSessionLastUpTime_Type = TimeStamp
_VRtrIfBfdSessionLastUpTime_Object = MibTableColumn
vRtrIfBfdSessionLastUpTime = _VRtrIfBfdSessionLastUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 11),
    _VRtrIfBfdSessionLastUpTime_Type()
)
vRtrIfBfdSessionLastUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionLastUpTime.setStatus("obsolete")
_VRtrIfBfdSessionUpCount_Type = Counter32
_VRtrIfBfdSessionUpCount_Object = MibTableColumn
vRtrIfBfdSessionUpCount = _VRtrIfBfdSessionUpCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 12),
    _VRtrIfBfdSessionUpCount_Type()
)
vRtrIfBfdSessionUpCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionUpCount.setStatus("obsolete")
_VRtrIfBfdSessionDownCount_Type = Counter32
_VRtrIfBfdSessionDownCount_Object = MibTableColumn
vRtrIfBfdSessionDownCount = _VRtrIfBfdSessionDownCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 13),
    _VRtrIfBfdSessionDownCount_Type()
)
vRtrIfBfdSessionDownCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionDownCount.setStatus("obsolete")
_VRtrIfBfdSessionLclDisc_Type = Unsigned32
_VRtrIfBfdSessionLclDisc_Object = MibTableColumn
vRtrIfBfdSessionLclDisc = _VRtrIfBfdSessionLclDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 14),
    _VRtrIfBfdSessionLclDisc_Type()
)
vRtrIfBfdSessionLclDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionLclDisc.setStatus("obsolete")
_VRtrIfBfdSessionRemDisc_Type = Unsigned32
_VRtrIfBfdSessionRemDisc_Object = MibTableColumn
vRtrIfBfdSessionRemDisc = _VRtrIfBfdSessionRemDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 15),
    _VRtrIfBfdSessionRemDisc_Type()
)
vRtrIfBfdSessionRemDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionRemDisc.setStatus("obsolete")


class _VRtrIfBfdSessionProtocols_Type(Bits):
    """Custom type vRtrIfBfdSessionProtocols based on Bits"""
    namedValues = NamedValues(
        *(("ospfv2", 0),
          ("pim", 1),
          ("isis", 2),
          ("staticRoute", 3),
          ("mcRing", 4),
          ("rsvp", 5),
          ("bgp", 6),
          ("vrrp", 7),
          ("srrp", 8),
          ("mcep", 9),
          ("ldp", 10),
          ("ipsecTunnel", 11),
          ("ospfv3", 12),
          ("mcIpsec", 13),
          ("mcMobile", 14),
          ("mplsTp", 15),
          ("lag", 16))
    )

_VRtrIfBfdSessionProtocols_Type.__name__ = "Bits"
_VRtrIfBfdSessionProtocols_Object = MibTableColumn
vRtrIfBfdSessionProtocols = _VRtrIfBfdSessionProtocols_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 16),
    _VRtrIfBfdSessionProtocols_Type()
)
vRtrIfBfdSessionProtocols.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionProtocols.setStatus("obsolete")
_VRtrIfBfdSessionTxInterval_Type = Unsigned32
_VRtrIfBfdSessionTxInterval_Object = MibTableColumn
vRtrIfBfdSessionTxInterval = _VRtrIfBfdSessionTxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 17),
    _VRtrIfBfdSessionTxInterval_Type()
)
vRtrIfBfdSessionTxInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTxInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTxInterval.setUnits("milliseconds")
_VRtrIfBfdSessionRxInterval_Type = Unsigned32
_VRtrIfBfdSessionRxInterval_Object = MibTableColumn
vRtrIfBfdSessionRxInterval = _VRtrIfBfdSessionRxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 18),
    _VRtrIfBfdSessionRxInterval_Type()
)
vRtrIfBfdSessionRxInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionRxInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionRxInterval.setUnits("milliseconds")


class _VRtrIfBfdSessionType_Type(Integer32):
    """Custom type vRtrIfBfdSessionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("iom", 1),
          ("cpm", 2),
          ("cpmNp", 3))
    )


_VRtrIfBfdSessionType_Type.__name__ = "Integer32"
_VRtrIfBfdSessionType_Object = MibTableColumn
vRtrIfBfdSessionType = _VRtrIfBfdSessionType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 19),
    _VRtrIfBfdSessionType_Type()
)
vRtrIfBfdSessionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionType.setStatus("obsolete")
_VRtrIfBfdSessionVerMismatch_Type = Counter32
_VRtrIfBfdSessionVerMismatch_Object = MibTableColumn
vRtrIfBfdSessionVerMismatch = _VRtrIfBfdSessionVerMismatch_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 20),
    _VRtrIfBfdSessionVerMismatch_Type()
)
vRtrIfBfdSessionVerMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionVerMismatch.setStatus("obsolete")
_VRtrIfBfdSessionTimeSinceLastRx_Type = Unsigned32
_VRtrIfBfdSessionTimeSinceLastRx_Object = MibTableColumn
vRtrIfBfdSessionTimeSinceLastRx = _VRtrIfBfdSessionTimeSinceLastRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 21),
    _VRtrIfBfdSessionTimeSinceLastRx_Type()
)
vRtrIfBfdSessionTimeSinceLastRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTimeSinceLastRx.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTimeSinceLastRx.setUnits("milliseconds")
_VRtrIfBfdSessionTimeSinceLastTx_Type = Unsigned32
_VRtrIfBfdSessionTimeSinceLastTx_Object = MibTableColumn
vRtrIfBfdSessionTimeSinceLastTx = _VRtrIfBfdSessionTimeSinceLastTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 34, 1, 22),
    _VRtrIfBfdSessionTimeSinceLastTx_Type()
)
vRtrIfBfdSessionTimeSinceLastTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTimeSinceLastTx.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrIfBfdSessionTimeSinceLastTx.setUnits("milliseconds")
_VRtrIfDHCP6TableLastChanged_Type = TimeStamp
_VRtrIfDHCP6TableLastChanged_Object = MibScalar
vRtrIfDHCP6TableLastChanged = _VRtrIfDHCP6TableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 35),
    _VRtrIfDHCP6TableLastChanged_Type()
)
vRtrIfDHCP6TableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6TableLastChanged.setStatus("current")
_VRtrIfDHCP6Table_Object = MibTable
vRtrIfDHCP6Table = _VRtrIfDHCP6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6Table.setStatus("current")
_VRtrIfDHCP6Entry_Object = MibTableRow
vRtrIfDHCP6Entry = _VRtrIfDHCP6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6Entry.setStatus("current")
_VRtrIfDHCP6LastChanged_Type = TimeStamp
_VRtrIfDHCP6LastChanged_Object = MibTableColumn
vRtrIfDHCP6LastChanged = _VRtrIfDHCP6LastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 1),
    _VRtrIfDHCP6LastChanged_Type()
)
vRtrIfDHCP6LastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LastChanged.setStatus("current")


class _VRtrIfDHCP6AdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCP6AdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCP6AdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCP6AdminState_Object = MibTableColumn
vRtrIfDHCP6AdminState = _VRtrIfDHCP6AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 2),
    _VRtrIfDHCP6AdminState_Type()
)
vRtrIfDHCP6AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6AdminState.setStatus("current")


class _VRtrIfDHCP6OperState_Type(Integer32):
    """Custom type vRtrIfDHCP6OperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("noIPv6Pfx", 3),
          ("noServerConfigured", 4),
          ("noValidSourceAddr", 5))
    )


_VRtrIfDHCP6OperState_Type.__name__ = "Integer32"
_VRtrIfDHCP6OperState_Object = MibTableColumn
vRtrIfDHCP6OperState = _VRtrIfDHCP6OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 3),
    _VRtrIfDHCP6OperState_Type()
)
vRtrIfDHCP6OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6OperState.setStatus("current")


class _VRtrIfDHCP6Description_Type(TItemDescription):
    """Custom type vRtrIfDHCP6Description based on TItemDescription"""
    defaultHexValue = ""


_VRtrIfDHCP6Description_Type.__name__ = "TItemDescription"
_VRtrIfDHCP6Description_Object = MibTableColumn
vRtrIfDHCP6Description = _VRtrIfDHCP6Description_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 4),
    _VRtrIfDHCP6Description_Type()
)
vRtrIfDHCP6Description.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6Description.setStatus("current")


class _VRtrIfDHCP6RelayServer1_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer1 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer1_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer1_Object = MibTableColumn
vRtrIfDHCP6RelayServer1 = _VRtrIfDHCP6RelayServer1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 5),
    _VRtrIfDHCP6RelayServer1_Type()
)
vRtrIfDHCP6RelayServer1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer1.setStatus("current")


class _VRtrIfDHCP6RelayServer2_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer2 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer2_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer2_Object = MibTableColumn
vRtrIfDHCP6RelayServer2 = _VRtrIfDHCP6RelayServer2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 6),
    _VRtrIfDHCP6RelayServer2_Type()
)
vRtrIfDHCP6RelayServer2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer2.setStatus("current")


class _VRtrIfDHCP6RelayServer3_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer3 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer3_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer3_Object = MibTableColumn
vRtrIfDHCP6RelayServer3 = _VRtrIfDHCP6RelayServer3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 7),
    _VRtrIfDHCP6RelayServer3_Type()
)
vRtrIfDHCP6RelayServer3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer3.setStatus("current")


class _VRtrIfDHCP6RelayServer4_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer4 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer4_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer4_Object = MibTableColumn
vRtrIfDHCP6RelayServer4 = _VRtrIfDHCP6RelayServer4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 8),
    _VRtrIfDHCP6RelayServer4_Type()
)
vRtrIfDHCP6RelayServer4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer4.setStatus("current")


class _VRtrIfDHCP6RelayServer5_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer5 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer5_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer5_Object = MibTableColumn
vRtrIfDHCP6RelayServer5 = _VRtrIfDHCP6RelayServer5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 9),
    _VRtrIfDHCP6RelayServer5_Type()
)
vRtrIfDHCP6RelayServer5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer5.setStatus("current")


class _VRtrIfDHCP6RelayServer6_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer6 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer6_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer6_Object = MibTableColumn
vRtrIfDHCP6RelayServer6 = _VRtrIfDHCP6RelayServer6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 10),
    _VRtrIfDHCP6RelayServer6_Type()
)
vRtrIfDHCP6RelayServer6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer6.setStatus("current")


class _VRtrIfDHCP6RelayServer7_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer7 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer7_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer7_Object = MibTableColumn
vRtrIfDHCP6RelayServer7 = _VRtrIfDHCP6RelayServer7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 11),
    _VRtrIfDHCP6RelayServer7_Type()
)
vRtrIfDHCP6RelayServer7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer7.setStatus("current")


class _VRtrIfDHCP6RelayServer8_Type(InetAddressIPv6z):
    """Custom type vRtrIfDHCP6RelayServer8 based on InetAddressIPv6z"""
    defaultHexValue = "0000000000000000000000000000000000000000"


_VRtrIfDHCP6RelayServer8_Type.__name__ = "InetAddressIPv6z"
_VRtrIfDHCP6RelayServer8_Object = MibTableColumn
vRtrIfDHCP6RelayServer8 = _VRtrIfDHCP6RelayServer8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 12),
    _VRtrIfDHCP6RelayServer8_Type()
)
vRtrIfDHCP6RelayServer8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayServer8.setStatus("current")


class _VRtrIfDHCP6RelayItfIdOption_Type(Integer32):
    """Custom type vRtrIfDHCP6RelayItfIdOption based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ifIndex", 1),
          ("asciiTuple", 2),
          ("sapId", 3),
          ("string", 4))
    )


_VRtrIfDHCP6RelayItfIdOption_Type.__name__ = "Integer32"
_VRtrIfDHCP6RelayItfIdOption_Object = MibTableColumn
vRtrIfDHCP6RelayItfIdOption = _VRtrIfDHCP6RelayItfIdOption_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 13),
    _VRtrIfDHCP6RelayItfIdOption_Type()
)
vRtrIfDHCP6RelayItfIdOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayItfIdOption.setStatus("current")


class _VRtrIfDHCP6LeasePopulate_Type(Unsigned32):
    """Custom type vRtrIfDHCP6LeasePopulate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_VRtrIfDHCP6LeasePopulate_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6LeasePopulate_Object = MibTableColumn
vRtrIfDHCP6LeasePopulate = _VRtrIfDHCP6LeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 14),
    _VRtrIfDHCP6LeasePopulate_Type()
)
vRtrIfDHCP6LeasePopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LeasePopulate.setStatus("current")


class _VRtrIfDHCP6CurrLeasePopulate_Type(Unsigned32):
    """Custom type vRtrIfDHCP6CurrLeasePopulate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_VRtrIfDHCP6CurrLeasePopulate_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6CurrLeasePopulate_Object = MibTableColumn
vRtrIfDHCP6CurrLeasePopulate = _VRtrIfDHCP6CurrLeasePopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 15),
    _VRtrIfDHCP6CurrLeasePopulate_Type()
)
vRtrIfDHCP6CurrLeasePopulate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6CurrLeasePopulate.setStatus("current")


class _VRtrIfDHCP6SourceAddress_Type(InetAddressIPv6):
    """Custom type vRtrIfDHCP6SourceAddress based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrIfDHCP6SourceAddress_Type.__name__ = "InetAddressIPv6"
_VRtrIfDHCP6SourceAddress_Object = MibTableColumn
vRtrIfDHCP6SourceAddress = _VRtrIfDHCP6SourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 16),
    _VRtrIfDHCP6SourceAddress_Type()
)
vRtrIfDHCP6SourceAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6SourceAddress.setStatus("current")


class _VRtrIfDHCP6EnableNgbrResolution_Type(TruthValue):
    """Custom type vRtrIfDHCP6EnableNgbrResolution based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6EnableNgbrResolution_Type.__name__ = "TruthValue"
_VRtrIfDHCP6EnableNgbrResolution_Object = MibTableColumn
vRtrIfDHCP6EnableNgbrResolution = _VRtrIfDHCP6EnableNgbrResolution_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 17),
    _VRtrIfDHCP6EnableNgbrResolution_Type()
)
vRtrIfDHCP6EnableNgbrResolution.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6EnableNgbrResolution.setStatus("current")


class _VRtrIfDHCP6RemoteIdOption_Type(TruthValue):
    """Custom type vRtrIfDHCP6RemoteIdOption based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6RemoteIdOption_Type.__name__ = "TruthValue"
_VRtrIfDHCP6RemoteIdOption_Object = MibTableColumn
vRtrIfDHCP6RemoteIdOption = _VRtrIfDHCP6RemoteIdOption_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 18),
    _VRtrIfDHCP6RemoteIdOption_Type()
)
vRtrIfDHCP6RemoteIdOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RemoteIdOption.setStatus("current")


class _VRtrIfDHCP6PfxdAdminState_Type(Integer32):
    """Custom type vRtrIfDHCP6PfxdAdminState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_VRtrIfDHCP6PfxdAdminState_Type.__name__ = "Integer32"
_VRtrIfDHCP6PfxdAdminState_Object = MibTableColumn
vRtrIfDHCP6PfxdAdminState = _VRtrIfDHCP6PfxdAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 19),
    _VRtrIfDHCP6PfxdAdminState_Type()
)
vRtrIfDHCP6PfxdAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdAdminState.setStatus("current")


class _VRtrIfDHCP6ServerMaxLeaseStates_Type(Unsigned32):
    """Custom type vRtrIfDHCP6ServerMaxLeaseStates based on Unsigned32"""
    defaultValue = 8000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8000),
    )


_VRtrIfDHCP6ServerMaxLeaseStates_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6ServerMaxLeaseStates_Object = MibTableColumn
vRtrIfDHCP6ServerMaxLeaseStates = _VRtrIfDHCP6ServerMaxLeaseStates_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 20),
    _VRtrIfDHCP6ServerMaxLeaseStates_Type()
)
vRtrIfDHCP6ServerMaxLeaseStates.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ServerMaxLeaseStates.setStatus("current")


class _VRtrIfDHCP6CurrServerLeaseStates_Type(Unsigned32):
    """Custom type vRtrIfDHCP6CurrServerLeaseStates based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8000),
    )


_VRtrIfDHCP6CurrServerLeaseStates_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6CurrServerLeaseStates_Object = MibTableColumn
vRtrIfDHCP6CurrServerLeaseStates = _VRtrIfDHCP6CurrServerLeaseStates_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 21),
    _VRtrIfDHCP6CurrServerLeaseStates_Type()
)
vRtrIfDHCP6CurrServerLeaseStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6CurrServerLeaseStates.setStatus("current")


class _VRtrIfDHCP6ItfIdString_Type(DisplayString):
    """Custom type vRtrIfDHCP6ItfIdString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_VRtrIfDHCP6ItfIdString_Type.__name__ = "DisplayString"
_VRtrIfDHCP6ItfIdString_Object = MibTableColumn
vRtrIfDHCP6ItfIdString = _VRtrIfDHCP6ItfIdString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 22),
    _VRtrIfDHCP6ItfIdString_Type()
)
vRtrIfDHCP6ItfIdString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ItfIdString.setStatus("current")


class _VRtrIfDHCP6ProxyAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCP6ProxyAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCP6ProxyAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCP6ProxyAdminState_Object = MibTableColumn
vRtrIfDHCP6ProxyAdminState = _VRtrIfDHCP6ProxyAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 23),
    _VRtrIfDHCP6ProxyAdminState_Type()
)
vRtrIfDHCP6ProxyAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyAdminState.setStatus("current")


class _VRtrIfDHCP6ProxyRenewTimer_Type(Unsigned32):
    """Custom type vRtrIfDHCP6ProxyRenewTimer based on Unsigned32"""
    defaultValue = 1800

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 604800),
    )


_VRtrIfDHCP6ProxyRenewTimer_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6ProxyRenewTimer_Object = MibTableColumn
vRtrIfDHCP6ProxyRenewTimer = _VRtrIfDHCP6ProxyRenewTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 24),
    _VRtrIfDHCP6ProxyRenewTimer_Type()
)
vRtrIfDHCP6ProxyRenewTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyRenewTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyRenewTimer.setUnits("seconds")


class _VRtrIfDHCP6ProxyRebindTimer_Type(Unsigned32):
    """Custom type vRtrIfDHCP6ProxyRebindTimer based on Unsigned32"""
    defaultValue = 2880

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1209600),
    )


_VRtrIfDHCP6ProxyRebindTimer_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6ProxyRebindTimer_Object = MibTableColumn
vRtrIfDHCP6ProxyRebindTimer = _VRtrIfDHCP6ProxyRebindTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 25),
    _VRtrIfDHCP6ProxyRebindTimer_Type()
)
vRtrIfDHCP6ProxyRebindTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyRebindTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyRebindTimer.setUnits("seconds")


class _VRtrIfDHCP6ProxyValidLifetime_Type(Unsigned32):
    """Custom type vRtrIfDHCP6ProxyValidLifetime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(300, 4294967295),
    )


_VRtrIfDHCP6ProxyValidLifetime_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6ProxyValidLifetime_Object = MibTableColumn
vRtrIfDHCP6ProxyValidLifetime = _VRtrIfDHCP6ProxyValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 26),
    _VRtrIfDHCP6ProxyValidLifetime_Type()
)
vRtrIfDHCP6ProxyValidLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyValidLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyValidLifetime.setUnits("seconds")


class _VRtrIfDHCP6ProxyPrefLifetime_Type(Unsigned32):
    """Custom type vRtrIfDHCP6ProxyPrefLifetime based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(300, 4294967295),
    )


_VRtrIfDHCP6ProxyPrefLifetime_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6ProxyPrefLifetime_Object = MibTableColumn
vRtrIfDHCP6ProxyPrefLifetime = _VRtrIfDHCP6ProxyPrefLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 27),
    _VRtrIfDHCP6ProxyPrefLifetime_Type()
)
vRtrIfDHCP6ProxyPrefLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyPrefLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyPrefLifetime.setUnits("seconds")


class _VRtrIfDHCP6ProxyApplications_Type(Bits):
    """Custom type vRtrIfDHCP6ProxyApplications based on Bits"""
    defaultBinValue = "1"

    namedValues = NamedValues(
        *(("dhcp", 0),
          ("ppp", 1))
    )

_VRtrIfDHCP6ProxyApplications_Type.__name__ = "Bits"
_VRtrIfDHCP6ProxyApplications_Object = MibTableColumn
vRtrIfDHCP6ProxyApplications = _VRtrIfDHCP6ProxyApplications_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 28),
    _VRtrIfDHCP6ProxyApplications_Type()
)
vRtrIfDHCP6ProxyApplications.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyApplications.setStatus("current")


class _VRtrIfDHCP6UserDb_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDHCP6UserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfDHCP6UserDb_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDHCP6UserDb_Object = MibTableColumn
vRtrIfDHCP6UserDb = _VRtrIfDHCP6UserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 29),
    _VRtrIfDHCP6UserDb_Type()
)
vRtrIfDHCP6UserDb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6UserDb.setStatus("current")


class _VRtrIfDHCP6LocalDhcpServerName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDHCP6LocalDhcpServerName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfDHCP6LocalDhcpServerName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDHCP6LocalDhcpServerName_Object = MibTableColumn
vRtrIfDHCP6LocalDhcpServerName = _VRtrIfDHCP6LocalDhcpServerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 30),
    _VRtrIfDHCP6LocalDhcpServerName_Type()
)
vRtrIfDHCP6LocalDhcpServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LocalDhcpServerName.setStatus("current")


class _VRtrIfDHCP6RelayApplications_Type(Bits):
    """Custom type vRtrIfDHCP6RelayApplications based on Bits"""
    defaultBinValue = "1"

    namedValues = NamedValues(
        *(("dhcp", 0),
          ("ppp", 1))
    )

_VRtrIfDHCP6RelayApplications_Type.__name__ = "Bits"
_VRtrIfDHCP6RelayApplications_Object = MibTableColumn
vRtrIfDHCP6RelayApplications = _VRtrIfDHCP6RelayApplications_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 31),
    _VRtrIfDHCP6RelayApplications_Type()
)
vRtrIfDHCP6RelayApplications.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RelayApplications.setStatus("current")


class _VRtrIfDHCP6LinkAddress_Type(InetAddressIPv6):
    """Custom type vRtrIfDHCP6LinkAddress based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrIfDHCP6LinkAddress_Type.__name__ = "InetAddressIPv6"
_VRtrIfDHCP6LinkAddress_Object = MibTableColumn
vRtrIfDHCP6LinkAddress = _VRtrIfDHCP6LinkAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 32),
    _VRtrIfDHCP6LinkAddress_Type()
)
vRtrIfDHCP6LinkAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LinkAddress.setStatus("current")


class _VRtrIfDHCP6RoutePopulatePd_Type(TruthValue):
    """Custom type vRtrIfDHCP6RoutePopulatePd based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6RoutePopulatePd_Type.__name__ = "TruthValue"
_VRtrIfDHCP6RoutePopulatePd_Object = MibTableColumn
vRtrIfDHCP6RoutePopulatePd = _VRtrIfDHCP6RoutePopulatePd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 33),
    _VRtrIfDHCP6RoutePopulatePd_Type()
)
vRtrIfDHCP6RoutePopulatePd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RoutePopulatePd.setStatus("current")


class _VRtrIfDHCP6RoutePopulateNa_Type(TruthValue):
    """Custom type vRtrIfDHCP6RoutePopulateNa based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6RoutePopulateNa_Type.__name__ = "TruthValue"
_VRtrIfDHCP6RoutePopulateNa_Object = MibTableColumn
vRtrIfDHCP6RoutePopulateNa = _VRtrIfDHCP6RoutePopulateNa_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 34),
    _VRtrIfDHCP6RoutePopulateNa_Type()
)
vRtrIfDHCP6RoutePopulateNa.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RoutePopulateNa.setStatus("current")


class _VRtrIfDHCP6RoutePopulateTa_Type(TruthValue):
    """Custom type vRtrIfDHCP6RoutePopulateTa based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6RoutePopulateTa_Type.__name__ = "TruthValue"
_VRtrIfDHCP6RoutePopulateTa_Object = MibTableColumn
vRtrIfDHCP6RoutePopulateTa = _VRtrIfDHCP6RoutePopulateTa_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 35),
    _VRtrIfDHCP6RoutePopulateTa_Type()
)
vRtrIfDHCP6RoutePopulateTa.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RoutePopulateTa.setStatus("current")


class _VRtrIfDHCP6RoutePopulateExcl_Type(TruthValue):
    """Custom type vRtrIfDHCP6RoutePopulateExcl based on TruthValue"""
    defaultValue = 2


_VRtrIfDHCP6RoutePopulateExcl_Type.__name__ = "TruthValue"
_VRtrIfDHCP6RoutePopulateExcl_Object = MibTableColumn
vRtrIfDHCP6RoutePopulateExcl = _VRtrIfDHCP6RoutePopulateExcl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 36),
    _VRtrIfDHCP6RoutePopulateExcl_Type()
)
vRtrIfDHCP6RoutePopulateExcl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6RoutePopulateExcl.setStatus("current")


class _VRtrIfDHCP6PythonPolicy_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDHCP6PythonPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfDHCP6PythonPolicy_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDHCP6PythonPolicy_Object = MibTableColumn
vRtrIfDHCP6PythonPolicy = _VRtrIfDHCP6PythonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 37),
    _VRtrIfDHCP6PythonPolicy_Type()
)
vRtrIfDHCP6PythonPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PythonPolicy.setStatus("current")


class _VRtrIfDHCP6FilterId_Type(TDHCPFilterID):
    """Custom type vRtrIfDHCP6FilterId based on TDHCPFilterID"""
    defaultValue = 0


_VRtrIfDHCP6FilterId_Type.__name__ = "TDHCPFilterID"
_VRtrIfDHCP6FilterId_Object = MibTableColumn
vRtrIfDHCP6FilterId = _VRtrIfDHCP6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 38),
    _VRtrIfDHCP6FilterId_Type()
)
vRtrIfDHCP6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6FilterId.setStatus("current")


class _VRtrIfDHCP6SnpgAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCP6SnpgAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCP6SnpgAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCP6SnpgAdminState_Object = MibTableColumn
vRtrIfDHCP6SnpgAdminState = _VRtrIfDHCP6SnpgAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 39),
    _VRtrIfDHCP6SnpgAdminState_Type()
)
vRtrIfDHCP6SnpgAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6SnpgAdminState.setStatus("current")


class _VRtrIfDHCP6ASelSlctDly_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelSlctDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCP6ASelSlctDly_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelSlctDly_Object = MibTableColumn
vRtrIfDHCP6ASelSlctDly = _VRtrIfDHCP6ASelSlctDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 40),
    _VRtrIfDHCP6ASelSlctDly_Type()
)
vRtrIfDHCP6ASelSlctDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSlctDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSlctDly.setUnits("deci-seconds")


class _VRtrIfDHCP6ASelPref_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelPref based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_VRtrIfDHCP6ASelPref_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelPref_Object = MibTableColumn
vRtrIfDHCP6ASelPref = _VRtrIfDHCP6ASelPref_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 41),
    _VRtrIfDHCP6ASelPref_Type()
)
vRtrIfDHCP6ASelPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelPref.setStatus("current")


class _VRtrIfDHCP6ASelClntMac_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelClntMac based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("odd", 1),
          ("even", 2))
    )


_VRtrIfDHCP6ASelClntMac_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelClntMac_Object = MibTableColumn
vRtrIfDHCP6ASelClntMac = _VRtrIfDHCP6ASelClntMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 42),
    _VRtrIfDHCP6ASelClntMac_Type()
)
vRtrIfDHCP6ASelClntMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelClntMac.setStatus("current")


class _VRtrIfDHCP6ASelClntMacSlctDly_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelClntMacSlctDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCP6ASelClntMacSlctDly_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelClntMacSlctDly_Object = MibTableColumn
vRtrIfDHCP6ASelClntMacSlctDly = _VRtrIfDHCP6ASelClntMacSlctDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 43),
    _VRtrIfDHCP6ASelClntMacSlctDly_Type()
)
vRtrIfDHCP6ASelClntMacSlctDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelClntMacSlctDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelClntMacSlctDly.setUnits("deci-seconds")


class _VRtrIfDHCP6ASelClntMacPref_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelClntMacPref based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_VRtrIfDHCP6ASelClntMacPref_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelClntMacPref_Object = MibTableColumn
vRtrIfDHCP6ASelClntMacPref = _VRtrIfDHCP6ASelClntMacPref_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 44),
    _VRtrIfDHCP6ASelClntMacPref_Type()
)
vRtrIfDHCP6ASelClntMacPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelClntMacPref.setStatus("current")


class _VRtrIfDHCP6LseSplitAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDHCP6LseSplitAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDHCP6LseSplitAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDHCP6LseSplitAdminState_Object = MibTableColumn
vRtrIfDHCP6LseSplitAdminState = _VRtrIfDHCP6LseSplitAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 45),
    _VRtrIfDHCP6LseSplitAdminState_Type()
)
vRtrIfDHCP6LseSplitAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LseSplitAdminState.setStatus("current")


class _VRtrIfDHCP6LseSplitValidLifetime_Type(Unsigned32):
    """Custom type vRtrIfDHCP6LseSplitValidLifetime based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(300, 315446399),
    )


_VRtrIfDHCP6LseSplitValidLifetime_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6LseSplitValidLifetime_Object = MibTableColumn
vRtrIfDHCP6LseSplitValidLifetime = _VRtrIfDHCP6LseSplitValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 36, 1, 46),
    _VRtrIfDHCP6LseSplitValidLifetime_Type()
)
vRtrIfDHCP6LseSplitValidLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LseSplitValidLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6LseSplitValidLifetime.setUnits("seconds")
_VRtrIfGlobalIndexTable_Object = MibTable
vRtrIfGlobalIndexTable = _VRtrIfGlobalIndexTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 37)
)
if mibBuilder.loadTexts:
    vRtrIfGlobalIndexTable.setStatus("current")
_VRtrIfGlobalIndexEntry_Object = MibTableRow
vRtrIfGlobalIndexEntry = _VRtrIfGlobalIndexEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 37, 1)
)
vRtrIfGlobalIndexEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrIfGlobalIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfGlobalIndexEntry.setStatus("current")
_VRtrIfGlobalIndexvRtrID_Type = TmnxVRtrID
_VRtrIfGlobalIndexvRtrID_Object = MibTableColumn
vRtrIfGlobalIndexvRtrID = _VRtrIfGlobalIndexvRtrID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 37, 1, 1),
    _VRtrIfGlobalIndexvRtrID_Type()
)
vRtrIfGlobalIndexvRtrID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfGlobalIndexvRtrID.setStatus("current")
_VRtrIfGlobalIndexvRtrIfIndex_Type = InterfaceIndex
_VRtrIfGlobalIndexvRtrIfIndex_Object = MibTableColumn
vRtrIfGlobalIndexvRtrIfIndex = _VRtrIfGlobalIndexvRtrIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 37, 1, 2),
    _VRtrIfGlobalIndexvRtrIfIndex_Type()
)
vRtrIfGlobalIndexvRtrIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfGlobalIndexvRtrIfIndex.setStatus("current")
_VRtrIfProxyNDTable_Object = MibTable
vRtrIfProxyNDTable = _VRtrIfProxyNDTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38)
)
if mibBuilder.loadTexts:
    vRtrIfProxyNDTable.setStatus("current")
_VRtrIfProxyNDEntry_Object = MibTableRow
vRtrIfProxyNDEntry = _VRtrIfProxyNDEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1)
)
if mibBuilder.loadTexts:
    vRtrIfProxyNDEntry.setStatus("current")


class _VRtrIfProxyNDLocal_Type(TruthValue):
    """Custom type vRtrIfProxyNDLocal based on TruthValue"""
    defaultValue = 2


_VRtrIfProxyNDLocal_Type.__name__ = "TruthValue"
_VRtrIfProxyNDLocal_Object = MibTableColumn
vRtrIfProxyNDLocal = _VRtrIfProxyNDLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 1),
    _VRtrIfProxyNDLocal_Type()
)
vRtrIfProxyNDLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDLocal.setStatus("current")


class _VRtrIfProxyNDPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyNDPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyNDPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyNDPolicy1_Object = MibTableColumn
vRtrIfProxyNDPolicy1 = _VRtrIfProxyNDPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 2),
    _VRtrIfProxyNDPolicy1_Type()
)
vRtrIfProxyNDPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDPolicy1.setStatus("current")


class _VRtrIfProxyNDPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyNDPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyNDPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyNDPolicy2_Object = MibTableColumn
vRtrIfProxyNDPolicy2 = _VRtrIfProxyNDPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 3),
    _VRtrIfProxyNDPolicy2_Type()
)
vRtrIfProxyNDPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDPolicy2.setStatus("current")


class _VRtrIfProxyNDPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyNDPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyNDPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyNDPolicy3_Object = MibTableColumn
vRtrIfProxyNDPolicy3 = _VRtrIfProxyNDPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 4),
    _VRtrIfProxyNDPolicy3_Type()
)
vRtrIfProxyNDPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDPolicy3.setStatus("current")


class _VRtrIfProxyNDPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyNDPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyNDPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyNDPolicy4_Object = MibTableColumn
vRtrIfProxyNDPolicy4 = _VRtrIfProxyNDPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 5),
    _VRtrIfProxyNDPolicy4_Type()
)
vRtrIfProxyNDPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDPolicy4.setStatus("current")


class _VRtrIfProxyNDPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type vRtrIfProxyNDPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_VRtrIfProxyNDPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_VRtrIfProxyNDPolicy5_Object = MibTableColumn
vRtrIfProxyNDPolicy5 = _VRtrIfProxyNDPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 38, 1, 6),
    _VRtrIfProxyNDPolicy5_Type()
)
vRtrIfProxyNDPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfProxyNDPolicy5.setStatus("current")
_VRtrIfDHCP6PfxDelegationLstChgd_Type = TimeStamp
_VRtrIfDHCP6PfxDelegationLstChgd_Object = MibScalar
vRtrIfDHCP6PfxDelegationLstChgd = _VRtrIfDHCP6PfxDelegationLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 39),
    _VRtrIfDHCP6PfxDelegationLstChgd_Type()
)
vRtrIfDHCP6PfxDelegationLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxDelegationLstChgd.setStatus("current")
_VRtrIfDHCP6PfxDelegationTable_Object = MibTable
vRtrIfDHCP6PfxDelegationTable = _VRtrIfDHCP6PfxDelegationTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxDelegationTable.setStatus("current")
_VRtrIfDHCP6PfxDelegationEntry_Object = MibTableRow
vRtrIfDHCP6PfxDelegationEntry = _VRtrIfDHCP6PfxDelegationEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1)
)
vRtrIfDHCP6PfxDelegationEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdPrefixLen"),
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxDelegationEntry.setStatus("current")
_VRtrIfDHCP6PfxdPrefix_Type = TmnxIpv6AddressAndPrefixAddress
_VRtrIfDHCP6PfxdPrefix_Object = MibTableColumn
vRtrIfDHCP6PfxdPrefix = _VRtrIfDHCP6PfxdPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 1),
    _VRtrIfDHCP6PfxdPrefix_Type()
)
vRtrIfDHCP6PfxdPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdPrefix.setStatus("current")
_VRtrIfDHCP6PfxdPrefixLen_Type = TmnxIpv6AddressAndPrefixPrefix
_VRtrIfDHCP6PfxdPrefixLen_Object = MibTableColumn
vRtrIfDHCP6PfxdPrefixLen = _VRtrIfDHCP6PfxdPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 2),
    _VRtrIfDHCP6PfxdPrefixLen_Type()
)
vRtrIfDHCP6PfxdPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdPrefixLen.setStatus("current")
_VRtrIfDHCP6PfxdRowStatus_Type = RowStatus
_VRtrIfDHCP6PfxdRowStatus_Object = MibTableColumn
vRtrIfDHCP6PfxdRowStatus = _VRtrIfDHCP6PfxdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 3),
    _VRtrIfDHCP6PfxdRowStatus_Type()
)
vRtrIfDHCP6PfxdRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdRowStatus.setStatus("current")
_VRtrIfDHCP6PfxdLastChanged_Type = TimeStamp
_VRtrIfDHCP6PfxdLastChanged_Object = MibTableColumn
vRtrIfDHCP6PfxdLastChanged = _VRtrIfDHCP6PfxdLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 4),
    _VRtrIfDHCP6PfxdLastChanged_Type()
)
vRtrIfDHCP6PfxdLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdLastChanged.setStatus("current")


class _VRtrIfDHCP6PfxdDUID_Type(OctetString):
    """Custom type vRtrIfDHCP6PfxdDUID based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_VRtrIfDHCP6PfxdDUID_Type.__name__ = "OctetString"
_VRtrIfDHCP6PfxdDUID_Object = MibTableColumn
vRtrIfDHCP6PfxdDUID = _VRtrIfDHCP6PfxdDUID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 6),
    _VRtrIfDHCP6PfxdDUID_Type()
)
vRtrIfDHCP6PfxdDUID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdDUID.setStatus("current")


class _VRtrIfDHCP6PfxdIAID_Type(Unsigned32):
    """Custom type vRtrIfDHCP6PfxdIAID based on Unsigned32"""
    defaultValue = 0


_VRtrIfDHCP6PfxdIAID_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6PfxdIAID_Object = MibTableColumn
vRtrIfDHCP6PfxdIAID = _VRtrIfDHCP6PfxdIAID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 7),
    _VRtrIfDHCP6PfxdIAID_Type()
)
vRtrIfDHCP6PfxdIAID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdIAID.setStatus("current")


class _VRtrIfDHCP6PfxdPrefLifetime_Type(Unsigned32):
    """Custom type vRtrIfDHCP6PfxdPrefLifetime based on Unsigned32"""
    defaultValue = 604800

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrIfDHCP6PfxdPrefLifetime_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6PfxdPrefLifetime_Object = MibTableColumn
vRtrIfDHCP6PfxdPrefLifetime = _VRtrIfDHCP6PfxdPrefLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 8),
    _VRtrIfDHCP6PfxdPrefLifetime_Type()
)
vRtrIfDHCP6PfxdPrefLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdPrefLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdPrefLifetime.setUnits("seconds")


class _VRtrIfDHCP6PfxdValidLifetime_Type(Unsigned32):
    """Custom type vRtrIfDHCP6PfxdValidLifetime based on Unsigned32"""
    defaultValue = 2592000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrIfDHCP6PfxdValidLifetime_Type.__name__ = "Unsigned32"
_VRtrIfDHCP6PfxdValidLifetime_Object = MibTableColumn
vRtrIfDHCP6PfxdValidLifetime = _VRtrIfDHCP6PfxdValidLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 40, 1, 9),
    _VRtrIfDHCP6PfxdValidLifetime_Type()
)
vRtrIfDHCP6PfxdValidLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdValidLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6PfxdValidLifetime.setUnits("seconds")
_VRtrDHCP6DropStatTable_Object = MibTable
vRtrDHCP6DropStatTable = _VRtrDHCP6DropStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 41)
)
if mibBuilder.loadTexts:
    vRtrDHCP6DropStatTable.setStatus("current")
_VRtrDHCP6DropStatEntry_Object = MibTableRow
vRtrDHCP6DropStatEntry = _VRtrDHCP6DropStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 41, 1)
)
vRtrDHCP6DropStatEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatReason"),
)
if mibBuilder.loadTexts:
    vRtrDHCP6DropStatEntry.setStatus("current")


class _VRtrDHCP6DropStatReason_Type(Integer32):
    """Custom type vRtrDHCP6DropStatReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("srcOperDown", 1),
          ("dstOperDown", 2),
          ("rlyReplyOnClientItf", 3),
          ("hopCount", 4),
          ("badRelayedMsg", 5),
          ("clientItfNotFound", 6),
          ("noMemory", 7),
          ("noGlobalPfx", 8),
          ("noSrcIp", 9),
          ("noRteToServer", 10),
          ("subMgmtUpdFail", 11),
          ("relayForw", 12),
          ("msgTooSmall", 13),
          ("msgNotForServer", 14),
          ("noServerId", 15),
          ("noClientId", 16),
          ("serverIdInClientMsg", 17),
          ("wrongServerId", 18),
          ("illegalUnicast", 19),
          ("illegalSrcIp", 20),
          ("pdMsgNotSupported", 21),
          ("nbrAddrsExceeded", 22),
          ("clientMacNotResolved", 23),
          ("illegalAssignedAddr", 24),
          ("msgEncodingError", 25),
          ("rcoMsgNotSupported", 26),
          ("iaInInfoRequest", 27),
          ("noIaInClientMsg", 28),
          ("noAddrInConfirmMsg", 29),
          ("noRelayServers", 30),
          ("hostLockout", 31),
          ("noLinkAddress", 32),
          ("droppedByPython", 33),
          ("invalidForcedServer", 34),
          ("rcvOnSrrpBackupItf", 35),
          ("dhcpTransactNotFound", 36),
          ("retailItfNotFound", 37),
          ("dropByDhcpFilter", 38),
          ("authenticationFailed", 39),
          ("invalidForcedSrc", 40))
    )


_VRtrDHCP6DropStatReason_Type.__name__ = "Integer32"
_VRtrDHCP6DropStatReason_Object = MibTableColumn
vRtrDHCP6DropStatReason = _VRtrDHCP6DropStatReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 41, 1, 1),
    _VRtrDHCP6DropStatReason_Type()
)
vRtrDHCP6DropStatReason.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrDHCP6DropStatReason.setStatus("current")
_VRtrDHCP6DropStatLastCleared_Type = TimeStamp
_VRtrDHCP6DropStatLastCleared_Object = MibTableColumn
vRtrDHCP6DropStatLastCleared = _VRtrDHCP6DropStatLastCleared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 41, 1, 2),
    _VRtrDHCP6DropStatLastCleared_Type()
)
vRtrDHCP6DropStatLastCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6DropStatLastCleared.setStatus("current")
_VRtrDHCP6DropStatPktsDropped_Type = Gauge32
_VRtrDHCP6DropStatPktsDropped_Object = MibTableColumn
vRtrDHCP6DropStatPktsDropped = _VRtrDHCP6DropStatPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 41, 1, 3),
    _VRtrDHCP6DropStatPktsDropped_Type()
)
vRtrDHCP6DropStatPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6DropStatPktsDropped.setStatus("current")
_VRtrDHCP6MsgStatTable_Object = MibTable
vRtrDHCP6MsgStatTable = _VRtrDHCP6MsgStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42)
)
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatTable.setStatus("current")
_VRtrDHCP6MsgStatEntry_Object = MibTableRow
vRtrDHCP6MsgStatEntry = _VRtrDHCP6MsgStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1)
)
vRtrDHCP6MsgStatEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsMsgType"),
)
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatEntry.setStatus("current")
_VRtrDHCP6MsgStatsMsgType_Type = TmnxDHCP6MsgType
_VRtrDHCP6MsgStatsMsgType_Object = MibTableColumn
vRtrDHCP6MsgStatsMsgType = _VRtrDHCP6MsgStatsMsgType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1, 1),
    _VRtrDHCP6MsgStatsMsgType_Type()
)
vRtrDHCP6MsgStatsMsgType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatsMsgType.setStatus("current")
_VRtrDHCP6MsgStatsLstClrd_Type = TimeStamp
_VRtrDHCP6MsgStatsLstClrd_Object = MibTableColumn
vRtrDHCP6MsgStatsLstClrd = _VRtrDHCP6MsgStatsLstClrd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1, 2),
    _VRtrDHCP6MsgStatsLstClrd_Type()
)
vRtrDHCP6MsgStatsLstClrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatsLstClrd.setStatus("current")
_VRtrDHCP6MsgStatsRcvd_Type = Gauge32
_VRtrDHCP6MsgStatsRcvd_Object = MibTableColumn
vRtrDHCP6MsgStatsRcvd = _VRtrDHCP6MsgStatsRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1, 3),
    _VRtrDHCP6MsgStatsRcvd_Type()
)
vRtrDHCP6MsgStatsRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatsRcvd.setStatus("current")
_VRtrDHCP6MsgStatsSent_Type = Gauge32
_VRtrDHCP6MsgStatsSent_Object = MibTableColumn
vRtrDHCP6MsgStatsSent = _VRtrDHCP6MsgStatsSent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1, 4),
    _VRtrDHCP6MsgStatsSent_Type()
)
vRtrDHCP6MsgStatsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatsSent.setStatus("current")
_VRtrDHCP6MsgStatsDropped_Type = Gauge32
_VRtrDHCP6MsgStatsDropped_Object = MibTableColumn
vRtrDHCP6MsgStatsDropped = _VRtrDHCP6MsgStatsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 42, 1, 5),
    _VRtrDHCP6MsgStatsDropped_Type()
)
vRtrDHCP6MsgStatsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCP6MsgStatsDropped.setStatus("current")
_VRtrIfIpcpTable_Object = MibTable
vRtrIfIpcpTable = _VRtrIfIpcpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43)
)
if mibBuilder.loadTexts:
    vRtrIfIpcpTable.setStatus("current")
_VRtrIfIpcpEntry_Object = MibTableRow
vRtrIfIpcpEntry = _VRtrIfIpcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1)
)
if mibBuilder.loadTexts:
    vRtrIfIpcpEntry.setStatus("current")


class _VRtrIfIpcpPeerAddrType_Type(InetAddressType):
    """Custom type vRtrIfIpcpPeerAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfIpcpPeerAddrType_Type.__name__ = "InetAddressType"
_VRtrIfIpcpPeerAddrType_Object = MibTableColumn
vRtrIfIpcpPeerAddrType = _VRtrIfIpcpPeerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 1),
    _VRtrIfIpcpPeerAddrType_Type()
)
vRtrIfIpcpPeerAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpPeerAddrType.setStatus("current")


class _VRtrIfIpcpPeerAddr_Type(InetAddress):
    """Custom type vRtrIfIpcpPeerAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfIpcpPeerAddr_Type.__name__ = "InetAddress"
_VRtrIfIpcpPeerAddr_Object = MibTableColumn
vRtrIfIpcpPeerAddr = _VRtrIfIpcpPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 2),
    _VRtrIfIpcpPeerAddr_Type()
)
vRtrIfIpcpPeerAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpPeerAddr.setStatus("current")


class _VRtrIfIpcpPriDnsAddrType_Type(InetAddressType):
    """Custom type vRtrIfIpcpPriDnsAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfIpcpPriDnsAddrType_Type.__name__ = "InetAddressType"
_VRtrIfIpcpPriDnsAddrType_Object = MibTableColumn
vRtrIfIpcpPriDnsAddrType = _VRtrIfIpcpPriDnsAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 3),
    _VRtrIfIpcpPriDnsAddrType_Type()
)
vRtrIfIpcpPriDnsAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpPriDnsAddrType.setStatus("current")


class _VRtrIfIpcpPriDnsAddr_Type(InetAddress):
    """Custom type vRtrIfIpcpPriDnsAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfIpcpPriDnsAddr_Type.__name__ = "InetAddress"
_VRtrIfIpcpPriDnsAddr_Object = MibTableColumn
vRtrIfIpcpPriDnsAddr = _VRtrIfIpcpPriDnsAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 4),
    _VRtrIfIpcpPriDnsAddr_Type()
)
vRtrIfIpcpPriDnsAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpPriDnsAddr.setStatus("current")


class _VRtrIfIpcpSecDnsAddrType_Type(InetAddressType):
    """Custom type vRtrIfIpcpSecDnsAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfIpcpSecDnsAddrType_Type.__name__ = "InetAddressType"
_VRtrIfIpcpSecDnsAddrType_Object = MibTableColumn
vRtrIfIpcpSecDnsAddrType = _VRtrIfIpcpSecDnsAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 5),
    _VRtrIfIpcpSecDnsAddrType_Type()
)
vRtrIfIpcpSecDnsAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpSecDnsAddrType.setStatus("current")


class _VRtrIfIpcpSecDnsAddr_Type(InetAddress):
    """Custom type vRtrIfIpcpSecDnsAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfIpcpSecDnsAddr_Type.__name__ = "InetAddress"
_VRtrIfIpcpSecDnsAddr_Object = MibTableColumn
vRtrIfIpcpSecDnsAddr = _VRtrIfIpcpSecDnsAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 43, 1, 6),
    _VRtrIfIpcpSecDnsAddr_Type()
)
vRtrIfIpcpSecDnsAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpcpSecDnsAddr.setStatus("current")
_VRtrInetStatRteCpeChkStatsTable_Object = MibTable
vRtrInetStatRteCpeChkStatsTable = _VRtrInetStatRteCpeChkStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44)
)
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkStatsTable.setStatus("current")
_VRtrInetStatRteCpeChkStatsEntry_Object = MibTableRow
vRtrInetStatRteCpeChkStatsEntry = _VRtrInetStatRteCpeChkStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1)
)
vRtrInetStatRteCpeChkStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIndex"),
)
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkStatsEntry.setStatus("current")
_VRtrInetStatRteCpeChkUpTime_Type = TimeTicks
_VRtrInetStatRteCpeChkUpTime_Object = MibTableColumn
vRtrInetStatRteCpeChkUpTime = _VRtrInetStatRteCpeChkUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 1),
    _VRtrInetStatRteCpeChkUpTime_Type()
)
vRtrInetStatRteCpeChkUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkUpTime.setStatus("current")
_VRtrInetStatRteCpeChkInPktCnt_Type = Counter32
_VRtrInetStatRteCpeChkInPktCnt_Object = MibTableColumn
vRtrInetStatRteCpeChkInPktCnt = _VRtrInetStatRteCpeChkInPktCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 2),
    _VRtrInetStatRteCpeChkInPktCnt_Type()
)
vRtrInetStatRteCpeChkInPktCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkInPktCnt.setStatus("current")
_VRtrInetStatRteCpeChkOutPktCnt_Type = Counter32
_VRtrInetStatRteCpeChkOutPktCnt_Object = MibTableColumn
vRtrInetStatRteCpeChkOutPktCnt = _VRtrInetStatRteCpeChkOutPktCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 3),
    _VRtrInetStatRteCpeChkOutPktCnt_Type()
)
vRtrInetStatRteCpeChkOutPktCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkOutPktCnt.setStatus("current")
_VRtrInetStatRteCpeChkDownTrans_Type = Gauge32
_VRtrInetStatRteCpeChkDownTrans_Object = MibTableColumn
vRtrInetStatRteCpeChkDownTrans = _VRtrInetStatRteCpeChkDownTrans_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 4),
    _VRtrInetStatRteCpeChkDownTrans_Type()
)
vRtrInetStatRteCpeChkDownTrans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkDownTrans.setStatus("current")
_VRtrInetStatRteCpeChkUpTrans_Type = Gauge32
_VRtrInetStatRteCpeChkUpTrans_Object = MibTableColumn
vRtrInetStatRteCpeChkUpTrans = _VRtrInetStatRteCpeChkUpTrans_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 5),
    _VRtrInetStatRteCpeChkUpTrans_Type()
)
vRtrInetStatRteCpeChkUpTrans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkUpTrans.setStatus("current")
_VRtrInetStatRteCpeChkTTL_Type = Unsigned32
_VRtrInetStatRteCpeChkTTL_Object = MibTableColumn
vRtrInetStatRteCpeChkTTL = _VRtrInetStatRteCpeChkTTL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 44, 1, 6),
    _VRtrInetStatRteCpeChkTTL_Type()
)
vRtrInetStatRteCpeChkTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkTTL.setStatus("current")
if mibBuilder.loadTexts:
    vRtrInetStatRteCpeChkTTL.setUnits("seconds")
_TmnxDscpAppTableLastChanged_Type = TimeStamp
_TmnxDscpAppTableLastChanged_Object = MibScalar
tmnxDscpAppTableLastChanged = _TmnxDscpAppTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 45),
    _TmnxDscpAppTableLastChanged_Type()
)
tmnxDscpAppTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDscpAppTableLastChanged.setStatus("current")
_TmnxDscpAppTable_Object = MibTable
tmnxDscpAppTable = _TmnxDscpAppTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 46)
)
if mibBuilder.loadTexts:
    tmnxDscpAppTable.setStatus("current")
_TmnxDscpAppEntry_Object = MibTableRow
tmnxDscpAppEntry = _TmnxDscpAppEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 46, 1)
)
tmnxDscpAppEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "tmnxDscpAppId"),
)
if mibBuilder.loadTexts:
    tmnxDscpAppEntry.setStatus("current")
_TmnxDscpAppId_Type = TDSCPAppId
_TmnxDscpAppId_Object = MibTableColumn
tmnxDscpAppId = _TmnxDscpAppId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 46, 1, 1),
    _TmnxDscpAppId_Type()
)
tmnxDscpAppId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxDscpAppId.setStatus("current")
_TmnxDscpAppLastChanged_Type = TimeStamp
_TmnxDscpAppLastChanged_Object = MibTableColumn
tmnxDscpAppLastChanged = _TmnxDscpAppLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 46, 1, 2),
    _TmnxDscpAppLastChanged_Type()
)
tmnxDscpAppLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDscpAppLastChanged.setStatus("current")
_TmnxDscpAppDscpValue_Type = TDSCPValueOrNone
_TmnxDscpAppDscpValue_Object = MibTableColumn
tmnxDscpAppDscpValue = _TmnxDscpAppDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 46, 1, 3),
    _TmnxDscpAppDscpValue_Type()
)
tmnxDscpAppDscpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxDscpAppDscpValue.setStatus("current")
_TmnxDscpFCTableLastChanged_Type = TimeStamp
_TmnxDscpFCTableLastChanged_Object = MibScalar
tmnxDscpFCTableLastChanged = _TmnxDscpFCTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 47),
    _TmnxDscpFCTableLastChanged_Type()
)
tmnxDscpFCTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDscpFCTableLastChanged.setStatus("current")
_TmnxDscpFCTable_Object = MibTable
tmnxDscpFCTable = _TmnxDscpFCTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 48)
)
if mibBuilder.loadTexts:
    tmnxDscpFCTable.setStatus("current")
_TmnxDscpFCEntry_Object = MibTableRow
tmnxDscpFCEntry = _TmnxDscpFCEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 48, 1)
)
tmnxDscpFCEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "tmnxDscpFCDscpValue"),
)
if mibBuilder.loadTexts:
    tmnxDscpFCEntry.setStatus("current")
_TmnxDscpFCDscpValue_Type = TDSCPValue
_TmnxDscpFCDscpValue_Object = MibTableColumn
tmnxDscpFCDscpValue = _TmnxDscpFCDscpValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 48, 1, 1),
    _TmnxDscpFCDscpValue_Type()
)
tmnxDscpFCDscpValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxDscpFCDscpValue.setStatus("current")
_TmnxDscpFCLastChanged_Type = TimeStamp
_TmnxDscpFCLastChanged_Object = MibTableColumn
tmnxDscpFCLastChanged = _TmnxDscpFCLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 48, 1, 3),
    _TmnxDscpFCLastChanged_Type()
)
tmnxDscpFCLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDscpFCLastChanged.setStatus("current")


class _TmnxDscpFCValue_Type(TFCType):
    """Custom type tmnxDscpFCValue based on TFCType"""
    defaultValue = 0


_TmnxDscpFCValue_Type.__name__ = "TFCType"
_TmnxDscpFCValue_Object = MibTableColumn
tmnxDscpFCValue = _TmnxDscpFCValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 48, 1, 4),
    _TmnxDscpFCValue_Type()
)
tmnxDscpFCValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxDscpFCValue.setStatus("current")
_TmnxDot1pAppTableLastChanged_Type = TimeStamp
_TmnxDot1pAppTableLastChanged_Object = MibScalar
tmnxDot1pAppTableLastChanged = _TmnxDot1pAppTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 49),
    _TmnxDot1pAppTableLastChanged_Type()
)
tmnxDot1pAppTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDot1pAppTableLastChanged.setStatus("current")
_TmnxDot1pAppTable_Object = MibTable
tmnxDot1pAppTable = _TmnxDot1pAppTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 50)
)
if mibBuilder.loadTexts:
    tmnxDot1pAppTable.setStatus("current")
_TmnxDot1pAppEntry_Object = MibTableRow
tmnxDot1pAppEntry = _TmnxDot1pAppEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 50, 1)
)
tmnxDot1pAppEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "tmnxDot1pAppId"),
)
if mibBuilder.loadTexts:
    tmnxDot1pAppEntry.setStatus("current")
_TmnxDot1pAppId_Type = TDot1pAppId
_TmnxDot1pAppId_Object = MibTableColumn
tmnxDot1pAppId = _TmnxDot1pAppId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 50, 1, 1),
    _TmnxDot1pAppId_Type()
)
tmnxDot1pAppId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxDot1pAppId.setStatus("current")
_TmnxDot1pAppLastChanged_Type = TimeStamp
_TmnxDot1pAppLastChanged_Object = MibTableColumn
tmnxDot1pAppLastChanged = _TmnxDot1pAppLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 50, 1, 2),
    _TmnxDot1pAppLastChanged_Type()
)
tmnxDot1pAppLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxDot1pAppLastChanged.setStatus("current")
_TmnxDot1pAppValue_Type = Dot1PPriority
_TmnxDot1pAppValue_Object = MibTableColumn
tmnxDot1pAppValue = _TmnxDot1pAppValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 50, 1, 3),
    _TmnxDot1pAppValue_Type()
)
tmnxDot1pAppValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxDot1pAppValue.setStatus("current")
_VRtrFibStatTable_Object = MibTable
vRtrFibStatTable = _VRtrFibStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51)
)
if mibBuilder.loadTexts:
    vRtrFibStatTable.setStatus("current")
_VRtrFibStatEntry_Object = MibTableRow
vRtrFibStatEntry = _VRtrFibStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1)
)
vRtrFibStatEntry.setIndexNames(
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
)
if mibBuilder.loadTexts:
    vRtrFibStatEntry.setStatus("current")
_VRtrFibStatStaticRoutes_Type = Gauge32
_VRtrFibStatStaticRoutes_Object = MibTableColumn
vRtrFibStatStaticRoutes = _VRtrFibStatStaticRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 1),
    _VRtrFibStatStaticRoutes_Type()
)
vRtrFibStatStaticRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatStaticRoutes.setStatus("current")
_VRtrFibStatDirectRoutes_Type = Gauge32
_VRtrFibStatDirectRoutes_Object = MibTableColumn
vRtrFibStatDirectRoutes = _VRtrFibStatDirectRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 2),
    _VRtrFibStatDirectRoutes_Type()
)
vRtrFibStatDirectRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatDirectRoutes.setStatus("current")
_VRtrFibStatHostRoutes_Type = Gauge32
_VRtrFibStatHostRoutes_Object = MibTableColumn
vRtrFibStatHostRoutes = _VRtrFibStatHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 3),
    _VRtrFibStatHostRoutes_Type()
)
vRtrFibStatHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatHostRoutes.setStatus("current")
_VRtrFibStatBGPRoutes_Type = Gauge32
_VRtrFibStatBGPRoutes_Object = MibTableColumn
vRtrFibStatBGPRoutes = _VRtrFibStatBGPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 4),
    _VRtrFibStatBGPRoutes_Type()
)
vRtrFibStatBGPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPRoutes.setStatus("current")
_VRtrFibStatBGPVpnRoutes_Type = Gauge32
_VRtrFibStatBGPVpnRoutes_Object = MibTableColumn
vRtrFibStatBGPVpnRoutes = _VRtrFibStatBGPVpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 5),
    _VRtrFibStatBGPVpnRoutes_Type()
)
vRtrFibStatBGPVpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPVpnRoutes.setStatus("current")
_VRtrFibStatOSPFRoutes_Type = Gauge32
_VRtrFibStatOSPFRoutes_Object = MibTableColumn
vRtrFibStatOSPFRoutes = _VRtrFibStatOSPFRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 6),
    _VRtrFibStatOSPFRoutes_Type()
)
vRtrFibStatOSPFRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatOSPFRoutes.setStatus("current")
_VRtrFibStatISISRoutes_Type = Gauge32
_VRtrFibStatISISRoutes_Object = MibTableColumn
vRtrFibStatISISRoutes = _VRtrFibStatISISRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 7),
    _VRtrFibStatISISRoutes_Type()
)
vRtrFibStatISISRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatISISRoutes.setStatus("current")
_VRtrFibStatRIPRoutes_Type = Gauge32
_VRtrFibStatRIPRoutes_Object = MibTableColumn
vRtrFibStatRIPRoutes = _VRtrFibStatRIPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 8),
    _VRtrFibStatRIPRoutes_Type()
)
vRtrFibStatRIPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatRIPRoutes.setStatus("current")
_VRtrFibStatAggrRoutes_Type = Gauge32
_VRtrFibStatAggrRoutes_Object = MibTableColumn
vRtrFibStatAggrRoutes = _VRtrFibStatAggrRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 9),
    _VRtrFibStatAggrRoutes_Type()
)
vRtrFibStatAggrRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatAggrRoutes.setStatus("current")
_VRtrFibStatSubMgmtRoutes_Type = Gauge32
_VRtrFibStatSubMgmtRoutes_Object = MibTableColumn
vRtrFibStatSubMgmtRoutes = _VRtrFibStatSubMgmtRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 10),
    _VRtrFibStatSubMgmtRoutes_Type()
)
vRtrFibStatSubMgmtRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatSubMgmtRoutes.setStatus("current")
_VRtrFibStatManagedRoutes_Type = Gauge32
_VRtrFibStatManagedRoutes_Object = MibTableColumn
vRtrFibStatManagedRoutes = _VRtrFibStatManagedRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 11),
    _VRtrFibStatManagedRoutes_Type()
)
vRtrFibStatManagedRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatManagedRoutes.setStatus("current")
_VRtrFibStatV6StaticRoutes_Type = Gauge32
_VRtrFibStatV6StaticRoutes_Object = MibTableColumn
vRtrFibStatV6StaticRoutes = _VRtrFibStatV6StaticRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 12),
    _VRtrFibStatV6StaticRoutes_Type()
)
vRtrFibStatV6StaticRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6StaticRoutes.setStatus("current")
_VRtrFibStatV6DirectRoutes_Type = Gauge32
_VRtrFibStatV6DirectRoutes_Object = MibTableColumn
vRtrFibStatV6DirectRoutes = _VRtrFibStatV6DirectRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 13),
    _VRtrFibStatV6DirectRoutes_Type()
)
vRtrFibStatV6DirectRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6DirectRoutes.setStatus("current")
_VRtrFibStatV6HostRoutes_Type = Gauge32
_VRtrFibStatV6HostRoutes_Object = MibTableColumn
vRtrFibStatV6HostRoutes = _VRtrFibStatV6HostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 14),
    _VRtrFibStatV6HostRoutes_Type()
)
vRtrFibStatV6HostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6HostRoutes.setStatus("current")
_VRtrFibStatV6BGPRoutes_Type = Gauge32
_VRtrFibStatV6BGPRoutes_Object = MibTableColumn
vRtrFibStatV6BGPRoutes = _VRtrFibStatV6BGPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 15),
    _VRtrFibStatV6BGPRoutes_Type()
)
vRtrFibStatV6BGPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6BGPRoutes.setStatus("current")
_VRtrFibStatV6BGPVpnRoutes_Type = Gauge32
_VRtrFibStatV6BGPVpnRoutes_Object = MibTableColumn
vRtrFibStatV6BGPVpnRoutes = _VRtrFibStatV6BGPVpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 16),
    _VRtrFibStatV6BGPVpnRoutes_Type()
)
vRtrFibStatV6BGPVpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6BGPVpnRoutes.setStatus("current")
_VRtrFibStatV6OSPFRoutes_Type = Gauge32
_VRtrFibStatV6OSPFRoutes_Object = MibTableColumn
vRtrFibStatV6OSPFRoutes = _VRtrFibStatV6OSPFRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 17),
    _VRtrFibStatV6OSPFRoutes_Type()
)
vRtrFibStatV6OSPFRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6OSPFRoutes.setStatus("current")
_VRtrFibStatV6ISISRoutes_Type = Gauge32
_VRtrFibStatV6ISISRoutes_Object = MibTableColumn
vRtrFibStatV6ISISRoutes = _VRtrFibStatV6ISISRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 18),
    _VRtrFibStatV6ISISRoutes_Type()
)
vRtrFibStatV6ISISRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6ISISRoutes.setStatus("current")
_VRtrFibStatV6RIPRoutes_Type = Gauge32
_VRtrFibStatV6RIPRoutes_Object = MibTableColumn
vRtrFibStatV6RIPRoutes = _VRtrFibStatV6RIPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 19),
    _VRtrFibStatV6RIPRoutes_Type()
)
vRtrFibStatV6RIPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6RIPRoutes.setStatus("current")
_VRtrFibStatV6AggrRoutes_Type = Gauge32
_VRtrFibStatV6AggrRoutes_Object = MibTableColumn
vRtrFibStatV6AggrRoutes = _VRtrFibStatV6AggrRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 20),
    _VRtrFibStatV6AggrRoutes_Type()
)
vRtrFibStatV6AggrRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6AggrRoutes.setStatus("current")
_VRtrFibStatV6SubMgmtRoutes_Type = Gauge32
_VRtrFibStatV6SubMgmtRoutes_Object = MibTableColumn
vRtrFibStatV6SubMgmtRoutes = _VRtrFibStatV6SubMgmtRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 21),
    _VRtrFibStatV6SubMgmtRoutes_Type()
)
vRtrFibStatV6SubMgmtRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6SubMgmtRoutes.setStatus("current")
_VRtrFibStatV6ManagedRoutes_Type = Gauge32
_VRtrFibStatV6ManagedRoutes_Object = MibTableColumn
vRtrFibStatV6ManagedRoutes = _VRtrFibStatV6ManagedRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 22),
    _VRtrFibStatV6ManagedRoutes_Type()
)
vRtrFibStatV6ManagedRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6ManagedRoutes.setStatus("current")
_VRtrFibStatOverflows_Type = Gauge32
_VRtrFibStatOverflows_Object = MibTableColumn
vRtrFibStatOverflows = _VRtrFibStatOverflows_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 23),
    _VRtrFibStatOverflows_Type()
)
vRtrFibStatOverflows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatOverflows.setStatus("current")
_VRtrFibStatAlarmCount_Type = Gauge32
_VRtrFibStatAlarmCount_Object = MibTableColumn
vRtrFibStatAlarmCount = _VRtrFibStatAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 24),
    _VRtrFibStatAlarmCount_Type()
)
vRtrFibStatAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatAlarmCount.setStatus("current")
_VRtrFibStatLastAlarmTime_Type = TimeStamp
_VRtrFibStatLastAlarmTime_Object = MibTableColumn
vRtrFibStatLastAlarmTime = _VRtrFibStatLastAlarmTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 25),
    _VRtrFibStatLastAlarmTime_Type()
)
vRtrFibStatLastAlarmTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatLastAlarmTime.setStatus("current")
_VRtrFibStatHighUtilization_Type = TruthValue
_VRtrFibStatHighUtilization_Object = MibTableColumn
vRtrFibStatHighUtilization = _VRtrFibStatHighUtilization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 26),
    _VRtrFibStatHighUtilization_Type()
)
vRtrFibStatHighUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatHighUtilization.setStatus("current")
_VRtrFibStatMobileHostRoutes_Type = Gauge32
_VRtrFibStatMobileHostRoutes_Object = MibTableColumn
vRtrFibStatMobileHostRoutes = _VRtrFibStatMobileHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 27),
    _VRtrFibStatMobileHostRoutes_Type()
)
vRtrFibStatMobileHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatMobileHostRoutes.setStatus("current")
_VRtrFibStatV6MobileHostRoutes_Type = Gauge32
_VRtrFibStatV6MobileHostRoutes_Object = MibTableColumn
vRtrFibStatV6MobileHostRoutes = _VRtrFibStatV6MobileHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 28),
    _VRtrFibStatV6MobileHostRoutes_Type()
)
vRtrFibStatV6MobileHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6MobileHostRoutes.setStatus("current")
_VRtrFibStatVPNLeakRoutes_Type = Gauge32
_VRtrFibStatVPNLeakRoutes_Object = MibTableColumn
vRtrFibStatVPNLeakRoutes = _VRtrFibStatVPNLeakRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 29),
    _VRtrFibStatVPNLeakRoutes_Type()
)
vRtrFibStatVPNLeakRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatVPNLeakRoutes.setStatus("current")
_VRtrFibStatV6VPNLeakRoutes_Type = Gauge32
_VRtrFibStatV6VPNLeakRoutes_Object = MibTableColumn
vRtrFibStatV6VPNLeakRoutes = _VRtrFibStatV6VPNLeakRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 30),
    _VRtrFibStatV6VPNLeakRoutes_Type()
)
vRtrFibStatV6VPNLeakRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6VPNLeakRoutes.setStatus("current")
_VRtrFibStatNatRoutes_Type = Gauge32
_VRtrFibStatNatRoutes_Object = MibTableColumn
vRtrFibStatNatRoutes = _VRtrFibStatNatRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 33),
    _VRtrFibStatNatRoutes_Type()
)
vRtrFibStatNatRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatNatRoutes.setStatus("current")
_VRtrFibStatV6NatRoutes_Type = Gauge32
_VRtrFibStatV6NatRoutes_Object = MibTableColumn
vRtrFibStatV6NatRoutes = _VRtrFibStatV6NatRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 34),
    _VRtrFibStatV6NatRoutes_Type()
)
vRtrFibStatV6NatRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6NatRoutes.setStatus("current")
_VRtrFibStatBGPEvpnRoutes_Type = Gauge32
_VRtrFibStatBGPEvpnRoutes_Object = MibTableColumn
vRtrFibStatBGPEvpnRoutes = _VRtrFibStatBGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 35),
    _VRtrFibStatBGPEvpnRoutes_Type()
)
vRtrFibStatBGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPEvpnRoutes.setStatus("obsolete")
_VRtrFibStatV6BGPEvpnRoutes_Type = Gauge32
_VRtrFibStatV6BGPEvpnRoutes_Object = MibTableColumn
vRtrFibStatV6BGPEvpnRoutes = _VRtrFibStatV6BGPEvpnRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 36),
    _VRtrFibStatV6BGPEvpnRoutes_Type()
)
vRtrFibStatV6BGPEvpnRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6BGPEvpnRoutes.setStatus("obsolete")
_VRtrFibStatTotalInstalledRoutes_Type = Gauge32
_VRtrFibStatTotalInstalledRoutes_Object = MibTableColumn
vRtrFibStatTotalInstalledRoutes = _VRtrFibStatTotalInstalledRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 37),
    _VRtrFibStatTotalInstalledRoutes_Type()
)
vRtrFibStatTotalInstalledRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatTotalInstalledRoutes.setStatus("current")
_VRtrFibStatCurrentUtilization_Type = Gauge32
_VRtrFibStatCurrentUtilization_Object = MibTableColumn
vRtrFibStatCurrentUtilization = _VRtrFibStatCurrentUtilization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 38),
    _VRtrFibStatCurrentUtilization_Type()
)
vRtrFibStatCurrentUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatCurrentUtilization.setStatus("current")
_VRtrFibStatFilteredRoutes_Type = Gauge32
_VRtrFibStatFilteredRoutes_Object = MibTableColumn
vRtrFibStatFilteredRoutes = _VRtrFibStatFilteredRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 39),
    _VRtrFibStatFilteredRoutes_Type()
)
vRtrFibStatFilteredRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatFilteredRoutes.setStatus("current")
_VRtrFibStatV6TotalInstalledRt_Type = Gauge32
_VRtrFibStatV6TotalInstalledRt_Object = MibTableColumn
vRtrFibStatV6TotalInstalledRt = _VRtrFibStatV6TotalInstalledRt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 40),
    _VRtrFibStatV6TotalInstalledRt_Type()
)
vRtrFibStatV6TotalInstalledRt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6TotalInstalledRt.setStatus("current")
_VRtrFibStatV6CurrentUtilization_Type = Gauge32
_VRtrFibStatV6CurrentUtilization_Object = MibTableColumn
vRtrFibStatV6CurrentUtilization = _VRtrFibStatV6CurrentUtilization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 41),
    _VRtrFibStatV6CurrentUtilization_Type()
)
vRtrFibStatV6CurrentUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6CurrentUtilization.setStatus("current")
_VRtrFibStatV6FilteredRoutes_Type = Gauge32
_VRtrFibStatV6FilteredRoutes_Object = MibTableColumn
vRtrFibStatV6FilteredRoutes = _VRtrFibStatV6FilteredRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 42),
    _VRtrFibStatV6FilteredRoutes_Type()
)
vRtrFibStatV6FilteredRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6FilteredRoutes.setStatus("current")
_VRtrFibStatV6Overflows_Type = Gauge32
_VRtrFibStatV6Overflows_Object = MibTableColumn
vRtrFibStatV6Overflows = _VRtrFibStatV6Overflows_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 43),
    _VRtrFibStatV6Overflows_Type()
)
vRtrFibStatV6Overflows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6Overflows.setStatus("current")
_VRtrFibStatBGPLabelV4Routes_Type = Gauge32
_VRtrFibStatBGPLabelV4Routes_Object = MibTableColumn
vRtrFibStatBGPLabelV4Routes = _VRtrFibStatBGPLabelV4Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 44),
    _VRtrFibStatBGPLabelV4Routes_Type()
)
vRtrFibStatBGPLabelV4Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPLabelV4Routes.setStatus("current")
_VRtrFibStatBGPLabelV6Routes_Type = Gauge32
_VRtrFibStatBGPLabelV6Routes_Object = MibTableColumn
vRtrFibStatBGPLabelV6Routes = _VRtrFibStatBGPLabelV6Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 45),
    _VRtrFibStatBGPLabelV6Routes_Type()
)
vRtrFibStatBGPLabelV6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPLabelV6Routes.setStatus("current")
_VRtrFibStatBGPEvpnIflRoutes_Type = Gauge32
_VRtrFibStatBGPEvpnIflRoutes_Object = MibTableColumn
vRtrFibStatBGPEvpnIflRoutes = _VRtrFibStatBGPEvpnIflRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 46),
    _VRtrFibStatBGPEvpnIflRoutes_Type()
)
vRtrFibStatBGPEvpnIflRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPEvpnIflRoutes.setStatus("current")
_VRtrFibStatV6BGPEvpnIflRoutes_Type = Gauge32
_VRtrFibStatV6BGPEvpnIflRoutes_Object = MibTableColumn
vRtrFibStatV6BGPEvpnIflRoutes = _VRtrFibStatV6BGPEvpnIflRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 47),
    _VRtrFibStatV6BGPEvpnIflRoutes_Type()
)
vRtrFibStatV6BGPEvpnIflRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6BGPEvpnIflRoutes.setStatus("current")
_VRtrFibStatBGPEvpnIffRoutes_Type = Gauge32
_VRtrFibStatBGPEvpnIffRoutes_Object = MibTableColumn
vRtrFibStatBGPEvpnIffRoutes = _VRtrFibStatBGPEvpnIffRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 48),
    _VRtrFibStatBGPEvpnIffRoutes_Type()
)
vRtrFibStatBGPEvpnIffRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatBGPEvpnIffRoutes.setStatus("current")
_VRtrFibStatV6BGPEvpnIffRoutes_Type = Gauge32
_VRtrFibStatV6BGPEvpnIffRoutes_Object = MibTableColumn
vRtrFibStatV6BGPEvpnIffRoutes = _VRtrFibStatV6BGPEvpnIffRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 49),
    _VRtrFibStatV6BGPEvpnIffRoutes_Type()
)
vRtrFibStatV6BGPEvpnIffRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatV6BGPEvpnIffRoutes.setStatus("current")
_VRtrFibStatSrV6Routes_Type = Gauge32
_VRtrFibStatSrV6Routes_Object = MibTableColumn
vRtrFibStatSrV6Routes = _VRtrFibStatSrV6Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 50),
    _VRtrFibStatSrV6Routes_Type()
)
vRtrFibStatSrV6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatSrV6Routes.setStatus("current")
_VRtrFibStatIpVpnCurrUtilization_Type = Gauge32
_VRtrFibStatIpVpnCurrUtilization_Object = MibTableColumn
vRtrFibStatIpVpnCurrUtilization = _VRtrFibStatIpVpnCurrUtilization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 51, 1, 51),
    _VRtrFibStatIpVpnCurrUtilization_Type()
)
vRtrFibStatIpVpnCurrUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatIpVpnCurrUtilization.setStatus("current")
_VRtrFibStatNextHopTable_Object = MibTable
vRtrFibStatNextHopTable = _VRtrFibStatNextHopTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52)
)
if mibBuilder.loadTexts:
    vRtrFibStatNextHopTable.setStatus("current")
_VRtrFibStatNextHopEntry_Object = MibTableRow
vRtrFibStatNextHopEntry = _VRtrFibStatNextHopEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52, 1)
)
vRtrFibStatNextHopEntry.setIndexNames(
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
)
if mibBuilder.loadTexts:
    vRtrFibStatNextHopEntry.setStatus("current")
_VRtrFibStatNextHopIPActive_Type = Gauge32
_VRtrFibStatNextHopIPActive_Object = MibTableColumn
vRtrFibStatNextHopIPActive = _VRtrFibStatNextHopIPActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52, 1, 1),
    _VRtrFibStatNextHopIPActive_Type()
)
vRtrFibStatNextHopIPActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatNextHopIPActive.setStatus("current")
_VRtrFibStatNextHopIPAvailable_Type = Gauge32
_VRtrFibStatNextHopIPAvailable_Object = MibTableColumn
vRtrFibStatNextHopIPAvailable = _VRtrFibStatNextHopIPAvailable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52, 1, 2),
    _VRtrFibStatNextHopIPAvailable_Type()
)
vRtrFibStatNextHopIPAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatNextHopIPAvailable.setStatus("current")
_VRtrFibStatNextHopTunnelActive_Type = Gauge32
_VRtrFibStatNextHopTunnelActive_Object = MibTableColumn
vRtrFibStatNextHopTunnelActive = _VRtrFibStatNextHopTunnelActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52, 1, 3),
    _VRtrFibStatNextHopTunnelActive_Type()
)
vRtrFibStatNextHopTunnelActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatNextHopTunnelActive.setStatus("current")
_VRtrFibStatNextHopTunnelAvailable_Type = Gauge32
_VRtrFibStatNextHopTunnelAvailable_Object = MibTableColumn
vRtrFibStatNextHopTunnelAvailable = _VRtrFibStatNextHopTunnelAvailable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 52, 1, 4),
    _VRtrFibStatNextHopTunnelAvailable_Type()
)
vRtrFibStatNextHopTunnelAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrFibStatNextHopTunnelAvailable.setStatus("current")
_VRtrInetAllCidrRouteTable_Object = MibTable
vRtrInetAllCidrRouteTable = _VRtrInetAllCidrRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53)
)
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteTable.setStatus("current")
_VRtrInetAllCidrRouteEntry_Object = MibTableRow
vRtrInetAllCidrRouteEntry = _VRtrInetAllCidrRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1)
)
vRtrInetAllCidrRouteEntry.setIndexNames(
    (0, "IP-FORWARD-MIB", "inetCidrRouteDestType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteDest"),
    (0, "IP-FORWARD-MIB", "inetCidrRoutePfxLen"),
    (0, "IP-FORWARD-MIB", "inetCidrRoutePolicy"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteProto"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteProtoID"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHopType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHop"),
)
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteEntry.setStatus("current")
_VRtrInetAllCidrRouteProtoID_Type = Unsigned32
_VRtrInetAllCidrRouteProtoID_Object = MibTableColumn
vRtrInetAllCidrRouteProtoID = _VRtrInetAllCidrRouteProtoID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 1),
    _VRtrInetAllCidrRouteProtoID_Type()
)
vRtrInetAllCidrRouteProtoID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteProtoID.setStatus("current")
_VRtrInetAllCidrRouteIfIndex_Type = InterfaceIndexOrZero
_VRtrInetAllCidrRouteIfIndex_Object = MibTableColumn
vRtrInetAllCidrRouteIfIndex = _VRtrInetAllCidrRouteIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 2),
    _VRtrInetAllCidrRouteIfIndex_Type()
)
vRtrInetAllCidrRouteIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteIfIndex.setStatus("current")


class _VRtrInetAllCidrRouteType_Type(Integer32):
    """Custom type vRtrInetAllCidrRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("reject", 2),
          ("local", 3),
          ("remote", 4),
          ("blackhole", 5))
    )


_VRtrInetAllCidrRouteType_Type.__name__ = "Integer32"
_VRtrInetAllCidrRouteType_Object = MibTableColumn
vRtrInetAllCidrRouteType = _VRtrInetAllCidrRouteType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 3),
    _VRtrInetAllCidrRouteType_Type()
)
vRtrInetAllCidrRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteType.setStatus("current")
_VRtrInetAllCidrRouteAge_Type = Gauge32
_VRtrInetAllCidrRouteAge_Object = MibTableColumn
vRtrInetAllCidrRouteAge = _VRtrInetAllCidrRouteAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 4),
    _VRtrInetAllCidrRouteAge_Type()
)
vRtrInetAllCidrRouteAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteAge.setStatus("current")
_VRtrInetAllCidrRouteNextHopAS_Type = InetAutonomousSystemNumber
_VRtrInetAllCidrRouteNextHopAS_Object = MibTableColumn
vRtrInetAllCidrRouteNextHopAS = _VRtrInetAllCidrRouteNextHopAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 5),
    _VRtrInetAllCidrRouteNextHopAS_Type()
)
vRtrInetAllCidrRouteNextHopAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteNextHopAS.setStatus("current")
_VRtrInetAllCidrRouteMetric1_Type = Integer32
_VRtrInetAllCidrRouteMetric1_Object = MibTableColumn
vRtrInetAllCidrRouteMetric1 = _VRtrInetAllCidrRouteMetric1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 6),
    _VRtrInetAllCidrRouteMetric1_Type()
)
vRtrInetAllCidrRouteMetric1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric1.setStatus("current")
_VRtrInetAllCidrRouteMetric2_Type = Integer32
_VRtrInetAllCidrRouteMetric2_Object = MibTableColumn
vRtrInetAllCidrRouteMetric2 = _VRtrInetAllCidrRouteMetric2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 7),
    _VRtrInetAllCidrRouteMetric2_Type()
)
vRtrInetAllCidrRouteMetric2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric2.setStatus("current")
_VRtrInetAllCidrRouteMetric3_Type = Integer32
_VRtrInetAllCidrRouteMetric3_Object = MibTableColumn
vRtrInetAllCidrRouteMetric3 = _VRtrInetAllCidrRouteMetric3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 8),
    _VRtrInetAllCidrRouteMetric3_Type()
)
vRtrInetAllCidrRouteMetric3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric3.setStatus("current")
_VRtrInetAllCidrRouteMetric4_Type = Integer32
_VRtrInetAllCidrRouteMetric4_Object = MibTableColumn
vRtrInetAllCidrRouteMetric4 = _VRtrInetAllCidrRouteMetric4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 9),
    _VRtrInetAllCidrRouteMetric4_Type()
)
vRtrInetAllCidrRouteMetric4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric4.setStatus("current")
_VRtrInetAllCidrRouteMetric5_Type = Integer32
_VRtrInetAllCidrRouteMetric5_Object = MibTableColumn
vRtrInetAllCidrRouteMetric5 = _VRtrInetAllCidrRouteMetric5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 10),
    _VRtrInetAllCidrRouteMetric5_Type()
)
vRtrInetAllCidrRouteMetric5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric5.setStatus("current")


class _VRtrInetAllCidrRoutePreference_Type(Unsigned32):
    """Custom type vRtrInetAllCidrRoutePreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrInetAllCidrRoutePreference_Type.__name__ = "Unsigned32"
_VRtrInetAllCidrRoutePreference_Object = MibTableColumn
vRtrInetAllCidrRoutePreference = _VRtrInetAllCidrRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 11),
    _VRtrInetAllCidrRoutePreference_Type()
)
vRtrInetAllCidrRoutePreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRoutePreference.setStatus("current")
_VRtrInetAllCidrRouteMetric_Type = Unsigned32
_VRtrInetAllCidrRouteMetric_Object = MibTableColumn
vRtrInetAllCidrRouteMetric = _VRtrInetAllCidrRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 12),
    _VRtrInetAllCidrRouteMetric_Type()
)
vRtrInetAllCidrRouteMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteMetric.setStatus("current")
_VRtrInetAllCidrRouteIfVRtrId_Type = TmnxVRtrIDOrZero
_VRtrInetAllCidrRouteIfVRtrId_Object = MibTableColumn
vRtrInetAllCidrRouteIfVRtrId = _VRtrInetAllCidrRouteIfVRtrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 13),
    _VRtrInetAllCidrRouteIfVRtrId_Type()
)
vRtrInetAllCidrRouteIfVRtrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteIfVRtrId.setStatus("current")
_VRtrInetAllCidrRouteIsActive_Type = TruthValue
_VRtrInetAllCidrRouteIsActive_Object = MibTableColumn
vRtrInetAllCidrRouteIsActive = _VRtrInetAllCidrRouteIsActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 14),
    _VRtrInetAllCidrRouteIsActive_Type()
)
vRtrInetAllCidrRouteIsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteIsActive.setStatus("current")


class _VRtrInetAllCidrRouteBkupFlags_Type(Integer32):
    """Custom type vRtrInetAllCidrRouteBkupFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("hasLfa", 1),
          ("hasBackup", 2),
          ("isBackup", 3),
          ("isBgpInactive", 4))
    )


_VRtrInetAllCidrRouteBkupFlags_Type.__name__ = "Integer32"
_VRtrInetAllCidrRouteBkupFlags_Object = MibTableColumn
vRtrInetAllCidrRouteBkupFlags = _VRtrInetAllCidrRouteBkupFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 15),
    _VRtrInetAllCidrRouteBkupFlags_Type()
)
vRtrInetAllCidrRouteBkupFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteBkupFlags.setStatus("current")
_VRtrInetAllCidrRouteBkupNHopType_Type = InetAddressType
_VRtrInetAllCidrRouteBkupNHopType_Object = MibTableColumn
vRtrInetAllCidrRouteBkupNHopType = _VRtrInetAllCidrRouteBkupNHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 16),
    _VRtrInetAllCidrRouteBkupNHopType_Type()
)
vRtrInetAllCidrRouteBkupNHopType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteBkupNHopType.setStatus("current")
_VRtrInetAllCidrRouteBkupNextHop_Type = InetAddress
_VRtrInetAllCidrRouteBkupNextHop_Object = MibTableColumn
vRtrInetAllCidrRouteBkupNextHop = _VRtrInetAllCidrRouteBkupNextHop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 17),
    _VRtrInetAllCidrRouteBkupNextHop_Type()
)
vRtrInetAllCidrRouteBkupNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteBkupNextHop.setStatus("current")
_VRtrInetAllCidrRouteBkupMetric_Type = Unsigned32
_VRtrInetAllCidrRouteBkupMetric_Object = MibTableColumn
vRtrInetAllCidrRouteBkupMetric = _VRtrInetAllCidrRouteBkupMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 18),
    _VRtrInetAllCidrRouteBkupMetric_Type()
)
vRtrInetAllCidrRouteBkupMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteBkupMetric.setStatus("current")
_VRtrInetAllCidrRouteNHopRepCount_Type = Unsigned32
_VRtrInetAllCidrRouteNHopRepCount_Object = MibTableColumn
vRtrInetAllCidrRouteNHopRepCount = _VRtrInetAllCidrRouteNHopRepCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 19),
    _VRtrInetAllCidrRouteNHopRepCount_Type()
)
vRtrInetAllCidrRouteNHopRepCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteNHopRepCount.setStatus("current")
_VRtrInetAllCidrRtNextHopType_Type = TmnxInetCidrNextHopType
_VRtrInetAllCidrRtNextHopType_Object = MibTableColumn
vRtrInetAllCidrRtNextHopType = _VRtrInetAllCidrRtNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 20),
    _VRtrInetAllCidrRtNextHopType_Type()
)
vRtrInetAllCidrRtNextHopType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtNextHopType.setStatus("current")
_VRtrInetAllCidrRtNextHopOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetAllCidrRtNextHopOwner_Object = MibTableColumn
vRtrInetAllCidrRtNextHopOwner = _VRtrInetAllCidrRtNextHopOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 21),
    _VRtrInetAllCidrRtNextHopOwner_Type()
)
vRtrInetAllCidrRtNextHopOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtNextHopOwner.setStatus("current")
_VRtrInetAllCidrRtNHOwnerAuxInfo_Type = Unsigned32
_VRtrInetAllCidrRtNHOwnerAuxInfo_Object = MibTableColumn
vRtrInetAllCidrRtNHOwnerAuxInfo = _VRtrInetAllCidrRtNHOwnerAuxInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 22),
    _VRtrInetAllCidrRtNHOwnerAuxInfo_Type()
)
vRtrInetAllCidrRtNHOwnerAuxInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtNHOwnerAuxInfo.setStatus("current")
_VRtrInetAllCidrRtBkupNHType_Type = TmnxInetCidrNextHopType
_VRtrInetAllCidrRtBkupNHType_Object = MibTableColumn
vRtrInetAllCidrRtBkupNHType = _VRtrInetAllCidrRtBkupNHType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 23),
    _VRtrInetAllCidrRtBkupNHType_Type()
)
vRtrInetAllCidrRtBkupNHType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtBkupNHType.setStatus("current")
_VRtrInetAllCidrRtBkupNHOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetAllCidrRtBkupNHOwner_Object = MibTableColumn
vRtrInetAllCidrRtBkupNHOwner = _VRtrInetAllCidrRtBkupNHOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 24),
    _VRtrInetAllCidrRtBkupNHOwner_Type()
)
vRtrInetAllCidrRtBkupNHOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtBkupNHOwner.setStatus("current")
_VRtrInetAllCidrRtBkupNHOwnAxInfo_Type = Unsigned32
_VRtrInetAllCidrRtBkupNHOwnAxInfo_Object = MibTableColumn
vRtrInetAllCidrRtBkupNHOwnAxInfo = _VRtrInetAllCidrRtBkupNHOwnAxInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 25),
    _VRtrInetAllCidrRtBkupNHOwnAxInfo_Type()
)
vRtrInetAllCidrRtBkupNHOwnAxInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtBkupNHOwnAxInfo.setStatus("current")
_VRtrInetAllCidrRtSrcClassIndex_Type = ClassIndexOrNone
_VRtrInetAllCidrRtSrcClassIndex_Object = MibTableColumn
vRtrInetAllCidrRtSrcClassIndex = _VRtrInetAllCidrRtSrcClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 26),
    _VRtrInetAllCidrRtSrcClassIndex_Type()
)
vRtrInetAllCidrRtSrcClassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtSrcClassIndex.setStatus("current")
_VRtrInetAllCidrRtDstClassIndex_Type = ClassIndexOrNone
_VRtrInetAllCidrRtDstClassIndex_Object = MibTableColumn
vRtrInetAllCidrRtDstClassIndex = _VRtrInetAllCidrRtDstClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 27),
    _VRtrInetAllCidrRtDstClassIndex_Type()
)
vRtrInetAllCidrRtDstClassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtDstClassIndex.setStatus("current")
_VRtrInetAllCidrRtOperFlags_Type = TmnxRouteOperFlags
_VRtrInetAllCidrRtOperFlags_Object = MibTableColumn
vRtrInetAllCidrRtOperFlags = _VRtrInetAllCidrRtOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 28),
    _VRtrInetAllCidrRtOperFlags_Type()
)
vRtrInetAllCidrRtOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtOperFlags.setStatus("current")
_VRtrInetAllCidrRtNextHopOwnInst_Type = Unsigned32
_VRtrInetAllCidrRtNextHopOwnInst_Object = MibTableColumn
vRtrInetAllCidrRtNextHopOwnInst = _VRtrInetAllCidrRtNextHopOwnInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 29),
    _VRtrInetAllCidrRtNextHopOwnInst_Type()
)
vRtrInetAllCidrRtNextHopOwnInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtNextHopOwnInst.setStatus("current")
_VRtrInetAllCidrRtBkupNHOwnInst_Type = Unsigned32
_VRtrInetAllCidrRtBkupNHOwnInst_Object = MibTableColumn
vRtrInetAllCidrRtBkupNHOwnInst = _VRtrInetAllCidrRtBkupNHOwnInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 30),
    _VRtrInetAllCidrRtBkupNHOwnInst_Type()
)
vRtrInetAllCidrRtBkupNHOwnInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRtBkupNHOwnInst.setStatus("current")
_VRtrInetAllCidrRouteNHIsFec_Type = TruthValue
_VRtrInetAllCidrRouteNHIsFec_Object = MibTableColumn
vRtrInetAllCidrRouteNHIsFec = _VRtrInetAllCidrRouteNHIsFec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 31),
    _VRtrInetAllCidrRouteNHIsFec_Type()
)
vRtrInetAllCidrRouteNHIsFec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteNHIsFec.setStatus("current")
_VRtrInetAllCidrRouteNHFecPfxLen_Type = InetAddressPrefixLength
_VRtrInetAllCidrRouteNHFecPfxLen_Object = MibTableColumn
vRtrInetAllCidrRouteNHFecPfxLen = _VRtrInetAllCidrRouteNHFecPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 53, 1, 32),
    _VRtrInetAllCidrRouteNHFecPfxLen_Type()
)
vRtrInetAllCidrRouteNHFecPfxLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteNHFecPfxLen.setStatus("current")
_VRtrIfStatsTable_Object = MibTable
vRtrIfStatsTable = _VRtrIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54)
)
if mibBuilder.loadTexts:
    vRtrIfStatsTable.setStatus("current")
_VRtrIfStatsEntry_Object = MibTableRow
vRtrIfStatsEntry = _VRtrIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1)
)
vRtrIfStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfStatsEntry.setStatus("current")
_VRtrIfuRPFCheckFailPkts_Type = Counter64
_VRtrIfuRPFCheckFailPkts_Object = MibTableColumn
vRtrIfuRPFCheckFailPkts = _VRtrIfuRPFCheckFailPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 1),
    _VRtrIfuRPFCheckFailPkts_Type()
)
vRtrIfuRPFCheckFailPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailPkts.setStatus("current")
_VRtrIfuRPFCheckFailPktsLow32_Type = Counter32
_VRtrIfuRPFCheckFailPktsLow32_Object = MibTableColumn
vRtrIfuRPFCheckFailPktsLow32 = _VRtrIfuRPFCheckFailPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 2),
    _VRtrIfuRPFCheckFailPktsLow32_Type()
)
vRtrIfuRPFCheckFailPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailPktsLow32.setStatus("current")
_VRtrIfuRPFCheckFailPktsHigh32_Type = Counter32
_VRtrIfuRPFCheckFailPktsHigh32_Object = MibTableColumn
vRtrIfuRPFCheckFailPktsHigh32 = _VRtrIfuRPFCheckFailPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 3),
    _VRtrIfuRPFCheckFailPktsHigh32_Type()
)
vRtrIfuRPFCheckFailPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailPktsHigh32.setStatus("current")
_VRtrIfuRPFCheckFailBytes_Type = Counter64
_VRtrIfuRPFCheckFailBytes_Object = MibTableColumn
vRtrIfuRPFCheckFailBytes = _VRtrIfuRPFCheckFailBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 4),
    _VRtrIfuRPFCheckFailBytes_Type()
)
vRtrIfuRPFCheckFailBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailBytes.setStatus("current")
_VRtrIfuRPFCheckFailBytesLow32_Type = Counter32
_VRtrIfuRPFCheckFailBytesLow32_Object = MibTableColumn
vRtrIfuRPFCheckFailBytesLow32 = _VRtrIfuRPFCheckFailBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 5),
    _VRtrIfuRPFCheckFailBytesLow32_Type()
)
vRtrIfuRPFCheckFailBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailBytesLow32.setStatus("current")
_VRtrIfuRPFCheckFailBytesHigh32_Type = Counter32
_VRtrIfuRPFCheckFailBytesHigh32_Object = MibTableColumn
vRtrIfuRPFCheckFailBytesHigh32 = _VRtrIfuRPFCheckFailBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 6),
    _VRtrIfuRPFCheckFailBytesHigh32_Type()
)
vRtrIfuRPFCheckFailBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfuRPFCheckFailBytesHigh32.setStatus("current")
_VRtrIfIpReasFragPktsRcvd_Type = Counter64
_VRtrIfIpReasFragPktsRcvd_Object = MibTableColumn
vRtrIfIpReasFragPktsRcvd = _VRtrIfIpReasFragPktsRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 7),
    _VRtrIfIpReasFragPktsRcvd_Type()
)
vRtrIfIpReasFragPktsRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsRcvd.setStatus("current")
_VRtrIfIpReasFragPktsRcvdLow32_Type = Counter32
_VRtrIfIpReasFragPktsRcvdLow32_Object = MibTableColumn
vRtrIfIpReasFragPktsRcvdLow32 = _VRtrIfIpReasFragPktsRcvdLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 8),
    _VRtrIfIpReasFragPktsRcvdLow32_Type()
)
vRtrIfIpReasFragPktsRcvdLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsRcvdLow32.setStatus("current")
_VRtrIfIpReasFragPktsRcvdHigh32_Type = Counter32
_VRtrIfIpReasFragPktsRcvdHigh32_Object = MibTableColumn
vRtrIfIpReasFragPktsRcvdHigh32 = _VRtrIfIpReasFragPktsRcvdHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 9),
    _VRtrIfIpReasFragPktsRcvdHigh32_Type()
)
vRtrIfIpReasFragPktsRcvdHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsRcvdHigh32.setStatus("current")
_VRtrIfIpReasFragBytesRcvd_Type = Counter64
_VRtrIfIpReasFragBytesRcvd_Object = MibTableColumn
vRtrIfIpReasFragBytesRcvd = _VRtrIfIpReasFragBytesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 10),
    _VRtrIfIpReasFragBytesRcvd_Type()
)
vRtrIfIpReasFragBytesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesRcvd.setStatus("current")
_VRtrIfIpReasFragBytesRcvdLow32_Type = Counter32
_VRtrIfIpReasFragBytesRcvdLow32_Object = MibTableColumn
vRtrIfIpReasFragBytesRcvdLow32 = _VRtrIfIpReasFragBytesRcvdLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 11),
    _VRtrIfIpReasFragBytesRcvdLow32_Type()
)
vRtrIfIpReasFragBytesRcvdLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesRcvdLow32.setStatus("current")
_VRtrIfIpReasFragBytesRcvdHigh32_Type = Counter32
_VRtrIfIpReasFragBytesRcvdHigh32_Object = MibTableColumn
vRtrIfIpReasFragBytesRcvdHigh32 = _VRtrIfIpReasFragBytesRcvdHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 12),
    _VRtrIfIpReasFragBytesRcvdHigh32_Type()
)
vRtrIfIpReasFragBytesRcvdHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesRcvdHigh32.setStatus("current")
_VRtrIfIpReasFragPktsReas_Type = Counter64
_VRtrIfIpReasFragPktsReas_Object = MibTableColumn
vRtrIfIpReasFragPktsReas = _VRtrIfIpReasFragPktsReas_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 13),
    _VRtrIfIpReasFragPktsReas_Type()
)
vRtrIfIpReasFragPktsReas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsReas.setStatus("current")
_VRtrIfIpReasFragPktsReasLow32_Type = Counter32
_VRtrIfIpReasFragPktsReasLow32_Object = MibTableColumn
vRtrIfIpReasFragPktsReasLow32 = _VRtrIfIpReasFragPktsReasLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 14),
    _VRtrIfIpReasFragPktsReasLow32_Type()
)
vRtrIfIpReasFragPktsReasLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsReasLow32.setStatus("current")
_VRtrIfIpReasFragPktsReasHigh32_Type = Counter32
_VRtrIfIpReasFragPktsReasHigh32_Object = MibTableColumn
vRtrIfIpReasFragPktsReasHigh32 = _VRtrIfIpReasFragPktsReasHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 15),
    _VRtrIfIpReasFragPktsReasHigh32_Type()
)
vRtrIfIpReasFragPktsReasHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragPktsReasHigh32.setStatus("current")
_VRtrIfIpReasFragBytesReas_Type = Counter64
_VRtrIfIpReasFragBytesReas_Object = MibTableColumn
vRtrIfIpReasFragBytesReas = _VRtrIfIpReasFragBytesReas_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 16),
    _VRtrIfIpReasFragBytesReas_Type()
)
vRtrIfIpReasFragBytesReas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesReas.setStatus("current")
_VRtrIfIpReasFragBytesReasLow32_Type = Counter32
_VRtrIfIpReasFragBytesReasLow32_Object = MibTableColumn
vRtrIfIpReasFragBytesReasLow32 = _VRtrIfIpReasFragBytesReasLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 17),
    _VRtrIfIpReasFragBytesReasLow32_Type()
)
vRtrIfIpReasFragBytesReasLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesReasLow32.setStatus("current")
_VRtrIfIpReasFragBytesReasHigh32_Type = Counter32
_VRtrIfIpReasFragBytesReasHigh32_Object = MibTableColumn
vRtrIfIpReasFragBytesReasHigh32 = _VRtrIfIpReasFragBytesReasHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 18),
    _VRtrIfIpReasFragBytesReasHigh32_Type()
)
vRtrIfIpReasFragBytesReasHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragBytesReasHigh32.setStatus("current")
_VRtrIfIpReasFragReasErrors_Type = Counter64
_VRtrIfIpReasFragReasErrors_Object = MibTableColumn
vRtrIfIpReasFragReasErrors = _VRtrIfIpReasFragReasErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 19),
    _VRtrIfIpReasFragReasErrors_Type()
)
vRtrIfIpReasFragReasErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragReasErrors.setStatus("current")
_VRtrIfIpReasFragReasErrorsLow32_Type = Counter32
_VRtrIfIpReasFragReasErrorsLow32_Object = MibTableColumn
vRtrIfIpReasFragReasErrorsLow32 = _VRtrIfIpReasFragReasErrorsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 20),
    _VRtrIfIpReasFragReasErrorsLow32_Type()
)
vRtrIfIpReasFragReasErrorsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragReasErrorsLow32.setStatus("current")
_VRtrIfIpReasFragReasErrorsHigh32_Type = Counter32
_VRtrIfIpReasFragReasErrorsHigh32_Object = MibTableColumn
vRtrIfIpReasFragReasErrorsHigh32 = _VRtrIfIpReasFragReasErrorsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 21),
    _VRtrIfIpReasFragReasErrorsHigh32_Type()
)
vRtrIfIpReasFragReasErrorsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragReasErrorsHigh32.setStatus("current")
_VRtrIfIpReasFragDisc_Type = Counter64
_VRtrIfIpReasFragDisc_Object = MibTableColumn
vRtrIfIpReasFragDisc = _VRtrIfIpReasFragDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 22),
    _VRtrIfIpReasFragDisc_Type()
)
vRtrIfIpReasFragDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragDisc.setStatus("current")
_VRtrIfIpReasFragDiscLow32_Type = Counter32
_VRtrIfIpReasFragDiscLow32_Object = MibTableColumn
vRtrIfIpReasFragDiscLow32 = _VRtrIfIpReasFragDiscLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 23),
    _VRtrIfIpReasFragDiscLow32_Type()
)
vRtrIfIpReasFragDiscLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragDiscLow32.setStatus("current")
_VRtrIfIpReasFragDiscHigh32_Type = Counter32
_VRtrIfIpReasFragDiscHigh32_Object = MibTableColumn
vRtrIfIpReasFragDiscHigh32 = _VRtrIfIpReasFragDiscHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 24),
    _VRtrIfIpReasFragDiscHigh32_Type()
)
vRtrIfIpReasFragDiscHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasFragDiscHigh32.setStatus("current")
_VRtrIfIpReasOutBufRes_Type = Counter64
_VRtrIfIpReasOutBufRes_Object = MibTableColumn
vRtrIfIpReasOutBufRes = _VRtrIfIpReasOutBufRes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 25),
    _VRtrIfIpReasOutBufRes_Type()
)
vRtrIfIpReasOutBufRes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasOutBufRes.setStatus("current")
_VRtrIfIpReasOutBufResLow32_Type = Counter32
_VRtrIfIpReasOutBufResLow32_Object = MibTableColumn
vRtrIfIpReasOutBufResLow32 = _VRtrIfIpReasOutBufResLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 26),
    _VRtrIfIpReasOutBufResLow32_Type()
)
vRtrIfIpReasOutBufResLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasOutBufResLow32.setStatus("current")
_VRtrIfIpReasOutBufResHigh32_Type = Counter32
_VRtrIfIpReasOutBufResHigh32_Object = MibTableColumn
vRtrIfIpReasOutBufResHigh32 = _VRtrIfIpReasOutBufResHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 27),
    _VRtrIfIpReasOutBufResHigh32_Type()
)
vRtrIfIpReasOutBufResHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasOutBufResHigh32.setStatus("current")
_VRtrIfIpReasPktsRx_Type = Counter64
_VRtrIfIpReasPktsRx_Object = MibTableColumn
vRtrIfIpReasPktsRx = _VRtrIfIpReasPktsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 28),
    _VRtrIfIpReasPktsRx_Type()
)
vRtrIfIpReasPktsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsRx.setStatus("current")
_VRtrIfIpReasPktsRxLow32_Type = Counter32
_VRtrIfIpReasPktsRxLow32_Object = MibTableColumn
vRtrIfIpReasPktsRxLow32 = _VRtrIfIpReasPktsRxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 29),
    _VRtrIfIpReasPktsRxLow32_Type()
)
vRtrIfIpReasPktsRxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsRxLow32.setStatus("current")
_VRtrIfIpReasPktsRxHigh32_Type = Counter32
_VRtrIfIpReasPktsRxHigh32_Object = MibTableColumn
vRtrIfIpReasPktsRxHigh32 = _VRtrIfIpReasPktsRxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 30),
    _VRtrIfIpReasPktsRxHigh32_Type()
)
vRtrIfIpReasPktsRxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsRxHigh32.setStatus("current")
_VRtrIfIpReasBytesRx_Type = Counter64
_VRtrIfIpReasBytesRx_Object = MibTableColumn
vRtrIfIpReasBytesRx = _VRtrIfIpReasBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 31),
    _VRtrIfIpReasBytesRx_Type()
)
vRtrIfIpReasBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesRx.setStatus("current")
_VRtrIfIpReasBytesRxLow32_Type = Counter32
_VRtrIfIpReasBytesRxLow32_Object = MibTableColumn
vRtrIfIpReasBytesRxLow32 = _VRtrIfIpReasBytesRxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 32),
    _VRtrIfIpReasBytesRxLow32_Type()
)
vRtrIfIpReasBytesRxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesRxLow32.setStatus("current")
_VRtrIfIpReasBytesRxHigh32_Type = Counter32
_VRtrIfIpReasBytesRxHigh32_Object = MibTableColumn
vRtrIfIpReasBytesRxHigh32 = _VRtrIfIpReasBytesRxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 33),
    _VRtrIfIpReasBytesRxHigh32_Type()
)
vRtrIfIpReasBytesRxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesRxHigh32.setStatus("current")
_VRtrIfIpReasPktsTx_Type = Counter64
_VRtrIfIpReasPktsTx_Object = MibTableColumn
vRtrIfIpReasPktsTx = _VRtrIfIpReasPktsTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 34),
    _VRtrIfIpReasPktsTx_Type()
)
vRtrIfIpReasPktsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsTx.setStatus("current")
_VRtrIfIpReasPktsTxLow32_Type = Counter32
_VRtrIfIpReasPktsTxLow32_Object = MibTableColumn
vRtrIfIpReasPktsTxLow32 = _VRtrIfIpReasPktsTxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 35),
    _VRtrIfIpReasPktsTxLow32_Type()
)
vRtrIfIpReasPktsTxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsTxLow32.setStatus("current")
_VRtrIfIpReasPktsTxHigh32_Type = Counter32
_VRtrIfIpReasPktsTxHigh32_Object = MibTableColumn
vRtrIfIpReasPktsTxHigh32 = _VRtrIfIpReasPktsTxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 36),
    _VRtrIfIpReasPktsTxHigh32_Type()
)
vRtrIfIpReasPktsTxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasPktsTxHigh32.setStatus("current")
_VRtrIfIpReasBytesTx_Type = Counter64
_VRtrIfIpReasBytesTx_Object = MibTableColumn
vRtrIfIpReasBytesTx = _VRtrIfIpReasBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 37),
    _VRtrIfIpReasBytesTx_Type()
)
vRtrIfIpReasBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesTx.setStatus("current")
_VRtrIfIpReasBytesTxLow32_Type = Counter32
_VRtrIfIpReasBytesTxLow32_Object = MibTableColumn
vRtrIfIpReasBytesTxLow32 = _VRtrIfIpReasBytesTxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 38),
    _VRtrIfIpReasBytesTxLow32_Type()
)
vRtrIfIpReasBytesTxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesTxLow32.setStatus("current")
_VRtrIfIpReasBytesTxHigh32_Type = Counter32
_VRtrIfIpReasBytesTxHigh32_Object = MibTableColumn
vRtrIfIpReasBytesTxHigh32 = _VRtrIfIpReasBytesTxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 39),
    _VRtrIfIpReasBytesTxHigh32_Type()
)
vRtrIfIpReasBytesTxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasBytesTxHigh32.setStatus("current")
_VRtrIfRxPkts_Type = Counter64
_VRtrIfRxPkts_Object = MibTableColumn
vRtrIfRxPkts = _VRtrIfRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 40),
    _VRtrIfRxPkts_Type()
)
vRtrIfRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxPkts.setStatus("current")
_VRtrIfRxPktsLow32_Type = Counter32
_VRtrIfRxPktsLow32_Object = MibTableColumn
vRtrIfRxPktsLow32 = _VRtrIfRxPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 41),
    _VRtrIfRxPktsLow32_Type()
)
vRtrIfRxPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxPktsLow32.setStatus("current")
_VRtrIfRxPktsHigh32_Type = Counter32
_VRtrIfRxPktsHigh32_Object = MibTableColumn
vRtrIfRxPktsHigh32 = _VRtrIfRxPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 42),
    _VRtrIfRxPktsHigh32_Type()
)
vRtrIfRxPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxPktsHigh32.setStatus("current")
_VRtrIfRxBytes_Type = Counter64
_VRtrIfRxBytes_Object = MibTableColumn
vRtrIfRxBytes = _VRtrIfRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 43),
    _VRtrIfRxBytes_Type()
)
vRtrIfRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxBytes.setStatus("current")
_VRtrIfRxBytesLow32_Type = Counter32
_VRtrIfRxBytesLow32_Object = MibTableColumn
vRtrIfRxBytesLow32 = _VRtrIfRxBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 44),
    _VRtrIfRxBytesLow32_Type()
)
vRtrIfRxBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxBytesLow32.setStatus("current")
_VRtrIfRxBytesHigh32_Type = Counter32
_VRtrIfRxBytesHigh32_Object = MibTableColumn
vRtrIfRxBytesHigh32 = _VRtrIfRxBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 45),
    _VRtrIfRxBytesHigh32_Type()
)
vRtrIfRxBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxBytesHigh32.setStatus("current")
_VRtrIfTxV4Pkts_Type = Counter64
_VRtrIfTxV4Pkts_Object = MibTableColumn
vRtrIfTxV4Pkts = _VRtrIfTxV4Pkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 46),
    _VRtrIfTxV4Pkts_Type()
)
vRtrIfTxV4Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4Pkts.setStatus("current")
_VRtrIfTxV4PktsLow32_Type = Counter32
_VRtrIfTxV4PktsLow32_Object = MibTableColumn
vRtrIfTxV4PktsLow32 = _VRtrIfTxV4PktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 47),
    _VRtrIfTxV4PktsLow32_Type()
)
vRtrIfTxV4PktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4PktsLow32.setStatus("current")
_VRtrIfTxV4PktsHigh32_Type = Counter32
_VRtrIfTxV4PktsHigh32_Object = MibTableColumn
vRtrIfTxV4PktsHigh32 = _VRtrIfTxV4PktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 48),
    _VRtrIfTxV4PktsHigh32_Type()
)
vRtrIfTxV4PktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4PktsHigh32.setStatus("current")
_VRtrIfTxV4Bytes_Type = Counter64
_VRtrIfTxV4Bytes_Object = MibTableColumn
vRtrIfTxV4Bytes = _VRtrIfTxV4Bytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 49),
    _VRtrIfTxV4Bytes_Type()
)
vRtrIfTxV4Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4Bytes.setStatus("current")
_VRtrIfTxV4BytesLow32_Type = Counter32
_VRtrIfTxV4BytesLow32_Object = MibTableColumn
vRtrIfTxV4BytesLow32 = _VRtrIfTxV4BytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 50),
    _VRtrIfTxV4BytesLow32_Type()
)
vRtrIfTxV4BytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4BytesLow32.setStatus("current")
_VRtrIfTxV4BytesHigh32_Type = Counter32
_VRtrIfTxV4BytesHigh32_Object = MibTableColumn
vRtrIfTxV4BytesHigh32 = _VRtrIfTxV4BytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 51),
    _VRtrIfTxV4BytesHigh32_Type()
)
vRtrIfTxV4BytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4BytesHigh32.setStatus("current")
_VRtrIfTxV6Pkts_Type = Counter64
_VRtrIfTxV6Pkts_Object = MibTableColumn
vRtrIfTxV6Pkts = _VRtrIfTxV6Pkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 52),
    _VRtrIfTxV6Pkts_Type()
)
vRtrIfTxV6Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6Pkts.setStatus("current")
_VRtrIfTxV6PktsLow32_Type = Counter32
_VRtrIfTxV6PktsLow32_Object = MibTableColumn
vRtrIfTxV6PktsLow32 = _VRtrIfTxV6PktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 53),
    _VRtrIfTxV6PktsLow32_Type()
)
vRtrIfTxV6PktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6PktsLow32.setStatus("current")
_VRtrIfTxV6PktsHigh32_Type = Counter32
_VRtrIfTxV6PktsHigh32_Object = MibTableColumn
vRtrIfTxV6PktsHigh32 = _VRtrIfTxV6PktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 54),
    _VRtrIfTxV6PktsHigh32_Type()
)
vRtrIfTxV6PktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6PktsHigh32.setStatus("current")
_VRtrIfTxV6Bytes_Type = Counter64
_VRtrIfTxV6Bytes_Object = MibTableColumn
vRtrIfTxV6Bytes = _VRtrIfTxV6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 55),
    _VRtrIfTxV6Bytes_Type()
)
vRtrIfTxV6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6Bytes.setStatus("current")
_VRtrIfTxV6BytesLow32_Type = Counter32
_VRtrIfTxV6BytesLow32_Object = MibTableColumn
vRtrIfTxV6BytesLow32 = _VRtrIfTxV6BytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 56),
    _VRtrIfTxV6BytesLow32_Type()
)
vRtrIfTxV6BytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6BytesLow32.setStatus("current")
_VRtrIfTxV6BytesHigh32_Type = Counter32
_VRtrIfTxV6BytesHigh32_Object = MibTableColumn
vRtrIfTxV6BytesHigh32 = _VRtrIfTxV6BytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 57),
    _VRtrIfTxV6BytesHigh32_Type()
)
vRtrIfTxV6BytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6BytesHigh32.setStatus("current")
_VRtrIfTxV4DiscardPkts_Type = Counter64
_VRtrIfTxV4DiscardPkts_Object = MibTableColumn
vRtrIfTxV4DiscardPkts = _VRtrIfTxV4DiscardPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 58),
    _VRtrIfTxV4DiscardPkts_Type()
)
vRtrIfTxV4DiscardPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardPkts.setStatus("current")
_VRtrIfTxV4DiscardPktsLow32_Type = Counter32
_VRtrIfTxV4DiscardPktsLow32_Object = MibTableColumn
vRtrIfTxV4DiscardPktsLow32 = _VRtrIfTxV4DiscardPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 59),
    _VRtrIfTxV4DiscardPktsLow32_Type()
)
vRtrIfTxV4DiscardPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardPktsLow32.setStatus("current")
_VRtrIfTxV4DiscardPktsHigh32_Type = Counter32
_VRtrIfTxV4DiscardPktsHigh32_Object = MibTableColumn
vRtrIfTxV4DiscardPktsHigh32 = _VRtrIfTxV4DiscardPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 60),
    _VRtrIfTxV4DiscardPktsHigh32_Type()
)
vRtrIfTxV4DiscardPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardPktsHigh32.setStatus("current")
_VRtrIfTxV4DiscardBytes_Type = Counter64
_VRtrIfTxV4DiscardBytes_Object = MibTableColumn
vRtrIfTxV4DiscardBytes = _VRtrIfTxV4DiscardBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 61),
    _VRtrIfTxV4DiscardBytes_Type()
)
vRtrIfTxV4DiscardBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardBytes.setStatus("current")
_VRtrIfTxV4DiscardBytesLow32_Type = Counter32
_VRtrIfTxV4DiscardBytesLow32_Object = MibTableColumn
vRtrIfTxV4DiscardBytesLow32 = _VRtrIfTxV4DiscardBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 62),
    _VRtrIfTxV4DiscardBytesLow32_Type()
)
vRtrIfTxV4DiscardBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardBytesLow32.setStatus("current")
_VRtrIfTxV4DiscardBytesHigh32_Type = Counter32
_VRtrIfTxV4DiscardBytesHigh32_Object = MibTableColumn
vRtrIfTxV4DiscardBytesHigh32 = _VRtrIfTxV4DiscardBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 63),
    _VRtrIfTxV4DiscardBytesHigh32_Type()
)
vRtrIfTxV4DiscardBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DiscardBytesHigh32.setStatus("current")
_VRtrIfTxV6DiscardPkts_Type = Counter64
_VRtrIfTxV6DiscardPkts_Object = MibTableColumn
vRtrIfTxV6DiscardPkts = _VRtrIfTxV6DiscardPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 64),
    _VRtrIfTxV6DiscardPkts_Type()
)
vRtrIfTxV6DiscardPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardPkts.setStatus("current")
_VRtrIfTxV6DiscardPktsLow32_Type = Counter32
_VRtrIfTxV6DiscardPktsLow32_Object = MibTableColumn
vRtrIfTxV6DiscardPktsLow32 = _VRtrIfTxV6DiscardPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 65),
    _VRtrIfTxV6DiscardPktsLow32_Type()
)
vRtrIfTxV6DiscardPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardPktsLow32.setStatus("current")
_VRtrIfTxV6DiscardPktsHigh32_Type = Counter32
_VRtrIfTxV6DiscardPktsHigh32_Object = MibTableColumn
vRtrIfTxV6DiscardPktsHigh32 = _VRtrIfTxV6DiscardPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 66),
    _VRtrIfTxV6DiscardPktsHigh32_Type()
)
vRtrIfTxV6DiscardPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardPktsHigh32.setStatus("current")
_VRtrIfTxV6DiscardBytes_Type = Counter64
_VRtrIfTxV6DiscardBytes_Object = MibTableColumn
vRtrIfTxV6DiscardBytes = _VRtrIfTxV6DiscardBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 67),
    _VRtrIfTxV6DiscardBytes_Type()
)
vRtrIfTxV6DiscardBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardBytes.setStatus("current")
_VRtrIfTxV6DiscardBytesLow32_Type = Counter32
_VRtrIfTxV6DiscardBytesLow32_Object = MibTableColumn
vRtrIfTxV6DiscardBytesLow32 = _VRtrIfTxV6DiscardBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 68),
    _VRtrIfTxV6DiscardBytesLow32_Type()
)
vRtrIfTxV6DiscardBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardBytesLow32.setStatus("current")
_VRtrIfTxV6DiscardBytesHigh32_Type = Counter32
_VRtrIfTxV6DiscardBytesHigh32_Object = MibTableColumn
vRtrIfTxV6DiscardBytesHigh32 = _VRtrIfTxV6DiscardBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 69),
    _VRtrIfTxV6DiscardBytesHigh32_Type()
)
vRtrIfTxV6DiscardBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV6DiscardBytesHigh32.setStatus("current")
_VRtrIfIpReasV6FragPktsRcvd_Type = Counter64
_VRtrIfIpReasV6FragPktsRcvd_Object = MibTableColumn
vRtrIfIpReasV6FragPktsRcvd = _VRtrIfIpReasV6FragPktsRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 70),
    _VRtrIfIpReasV6FragPktsRcvd_Type()
)
vRtrIfIpReasV6FragPktsRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsRcvd.setStatus("current")
_VRtrIfIpReasV6FragPktsRcvdLow32_Type = Counter32
_VRtrIfIpReasV6FragPktsRcvdLow32_Object = MibTableColumn
vRtrIfIpReasV6FragPktsRcvdLow32 = _VRtrIfIpReasV6FragPktsRcvdLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 71),
    _VRtrIfIpReasV6FragPktsRcvdLow32_Type()
)
vRtrIfIpReasV6FragPktsRcvdLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsRcvdLow32.setStatus("current")
_VRtrIfIpReasV6FragPktsRcvdHigh32_Type = Counter32
_VRtrIfIpReasV6FragPktsRcvdHigh32_Object = MibTableColumn
vRtrIfIpReasV6FragPktsRcvdHigh32 = _VRtrIfIpReasV6FragPktsRcvdHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 72),
    _VRtrIfIpReasV6FragPktsRcvdHigh32_Type()
)
vRtrIfIpReasV6FragPktsRcvdHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsRcvdHigh32.setStatus("current")
_VRtrIfIpReasV6FragBytesRcvd_Type = Counter64
_VRtrIfIpReasV6FragBytesRcvd_Object = MibTableColumn
vRtrIfIpReasV6FragBytesRcvd = _VRtrIfIpReasV6FragBytesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 73),
    _VRtrIfIpReasV6FragBytesRcvd_Type()
)
vRtrIfIpReasV6FragBytesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesRcvd.setStatus("current")
_VRtrIfIpReasV6FragBytesRcvdL32_Type = Counter32
_VRtrIfIpReasV6FragBytesRcvdL32_Object = MibTableColumn
vRtrIfIpReasV6FragBytesRcvdL32 = _VRtrIfIpReasV6FragBytesRcvdL32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 74),
    _VRtrIfIpReasV6FragBytesRcvdL32_Type()
)
vRtrIfIpReasV6FragBytesRcvdL32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesRcvdL32.setStatus("current")
_VRtrIfIpReasV6FragBytesRcvdH32_Type = Counter32
_VRtrIfIpReasV6FragBytesRcvdH32_Object = MibTableColumn
vRtrIfIpReasV6FragBytesRcvdH32 = _VRtrIfIpReasV6FragBytesRcvdH32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 75),
    _VRtrIfIpReasV6FragBytesRcvdH32_Type()
)
vRtrIfIpReasV6FragBytesRcvdH32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesRcvdH32.setStatus("current")
_VRtrIfIpReasV6FragPktsReas_Type = Counter64
_VRtrIfIpReasV6FragPktsReas_Object = MibTableColumn
vRtrIfIpReasV6FragPktsReas = _VRtrIfIpReasV6FragPktsReas_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 76),
    _VRtrIfIpReasV6FragPktsReas_Type()
)
vRtrIfIpReasV6FragPktsReas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsReas.setStatus("current")
_VRtrIfIpReasV6FragPktsReasLow32_Type = Counter32
_VRtrIfIpReasV6FragPktsReasLow32_Object = MibTableColumn
vRtrIfIpReasV6FragPktsReasLow32 = _VRtrIfIpReasV6FragPktsReasLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 77),
    _VRtrIfIpReasV6FragPktsReasLow32_Type()
)
vRtrIfIpReasV6FragPktsReasLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsReasLow32.setStatus("current")
_VRtrIfIpReasV6FragPktsReasHigh32_Type = Counter32
_VRtrIfIpReasV6FragPktsReasHigh32_Object = MibTableColumn
vRtrIfIpReasV6FragPktsReasHigh32 = _VRtrIfIpReasV6FragPktsReasHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 78),
    _VRtrIfIpReasV6FragPktsReasHigh32_Type()
)
vRtrIfIpReasV6FragPktsReasHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragPktsReasHigh32.setStatus("current")
_VRtrIfIpReasV6FragBytesReas_Type = Counter64
_VRtrIfIpReasV6FragBytesReas_Object = MibTableColumn
vRtrIfIpReasV6FragBytesReas = _VRtrIfIpReasV6FragBytesReas_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 79),
    _VRtrIfIpReasV6FragBytesReas_Type()
)
vRtrIfIpReasV6FragBytesReas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesReas.setStatus("current")
_VRtrIfIpReasV6FragBytesReasL32_Type = Counter32
_VRtrIfIpReasV6FragBytesReasL32_Object = MibTableColumn
vRtrIfIpReasV6FragBytesReasL32 = _VRtrIfIpReasV6FragBytesReasL32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 80),
    _VRtrIfIpReasV6FragBytesReasL32_Type()
)
vRtrIfIpReasV6FragBytesReasL32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesReasL32.setStatus("current")
_VRtrIfIpReasV6FragBytesReasH32_Type = Counter32
_VRtrIfIpReasV6FragBytesReasH32_Object = MibTableColumn
vRtrIfIpReasV6FragBytesReasH32 = _VRtrIfIpReasV6FragBytesReasH32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 81),
    _VRtrIfIpReasV6FragBytesReasH32_Type()
)
vRtrIfIpReasV6FragBytesReasH32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragBytesReasH32.setStatus("current")
_VRtrIfIpReasV6FragReasErrors_Type = Counter64
_VRtrIfIpReasV6FragReasErrors_Object = MibTableColumn
vRtrIfIpReasV6FragReasErrors = _VRtrIfIpReasV6FragReasErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 82),
    _VRtrIfIpReasV6FragReasErrors_Type()
)
vRtrIfIpReasV6FragReasErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragReasErrors.setStatus("current")
_VRtrIfIpReasV6FragReasErrorsL32_Type = Counter32
_VRtrIfIpReasV6FragReasErrorsL32_Object = MibTableColumn
vRtrIfIpReasV6FragReasErrorsL32 = _VRtrIfIpReasV6FragReasErrorsL32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 83),
    _VRtrIfIpReasV6FragReasErrorsL32_Type()
)
vRtrIfIpReasV6FragReasErrorsL32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragReasErrorsL32.setStatus("current")
_VRtrIfIpReasV6FragReasErrorsH32_Type = Counter32
_VRtrIfIpReasV6FragReasErrorsH32_Object = MibTableColumn
vRtrIfIpReasV6FragReasErrorsH32 = _VRtrIfIpReasV6FragReasErrorsH32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 84),
    _VRtrIfIpReasV6FragReasErrorsH32_Type()
)
vRtrIfIpReasV6FragReasErrorsH32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragReasErrorsH32.setStatus("current")
_VRtrIfIpReasV6FragDisc_Type = Counter64
_VRtrIfIpReasV6FragDisc_Object = MibTableColumn
vRtrIfIpReasV6FragDisc = _VRtrIfIpReasV6FragDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 85),
    _VRtrIfIpReasV6FragDisc_Type()
)
vRtrIfIpReasV6FragDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragDisc.setStatus("current")
_VRtrIfIpReasV6FragDiscLow32_Type = Counter32
_VRtrIfIpReasV6FragDiscLow32_Object = MibTableColumn
vRtrIfIpReasV6FragDiscLow32 = _VRtrIfIpReasV6FragDiscLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 86),
    _VRtrIfIpReasV6FragDiscLow32_Type()
)
vRtrIfIpReasV6FragDiscLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragDiscLow32.setStatus("current")
_VRtrIfIpReasV6FragDiscHigh32_Type = Counter32
_VRtrIfIpReasV6FragDiscHigh32_Object = MibTableColumn
vRtrIfIpReasV6FragDiscHigh32 = _VRtrIfIpReasV6FragDiscHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 87),
    _VRtrIfIpReasV6FragDiscHigh32_Type()
)
vRtrIfIpReasV6FragDiscHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6FragDiscHigh32.setStatus("current")
_VRtrIfIpReasV6OutBufRes_Type = Counter64
_VRtrIfIpReasV6OutBufRes_Object = MibTableColumn
vRtrIfIpReasV6OutBufRes = _VRtrIfIpReasV6OutBufRes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 88),
    _VRtrIfIpReasV6OutBufRes_Type()
)
vRtrIfIpReasV6OutBufRes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6OutBufRes.setStatus("current")
_VRtrIfIpReasV6OutBufResLow32_Type = Counter32
_VRtrIfIpReasV6OutBufResLow32_Object = MibTableColumn
vRtrIfIpReasV6OutBufResLow32 = _VRtrIfIpReasV6OutBufResLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 89),
    _VRtrIfIpReasV6OutBufResLow32_Type()
)
vRtrIfIpReasV6OutBufResLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6OutBufResLow32.setStatus("current")
_VRtrIfIpReasV6OutBufResHigh32_Type = Counter32
_VRtrIfIpReasV6OutBufResHigh32_Object = MibTableColumn
vRtrIfIpReasV6OutBufResHigh32 = _VRtrIfIpReasV6OutBufResHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 90),
    _VRtrIfIpReasV6OutBufResHigh32_Type()
)
vRtrIfIpReasV6OutBufResHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6OutBufResHigh32.setStatus("current")
_VRtrIfIpReasV6PktsRx_Type = Counter64
_VRtrIfIpReasV6PktsRx_Object = MibTableColumn
vRtrIfIpReasV6PktsRx = _VRtrIfIpReasV6PktsRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 91),
    _VRtrIfIpReasV6PktsRx_Type()
)
vRtrIfIpReasV6PktsRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsRx.setStatus("current")
_VRtrIfIpReasV6PktsRxLow32_Type = Counter32
_VRtrIfIpReasV6PktsRxLow32_Object = MibTableColumn
vRtrIfIpReasV6PktsRxLow32 = _VRtrIfIpReasV6PktsRxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 92),
    _VRtrIfIpReasV6PktsRxLow32_Type()
)
vRtrIfIpReasV6PktsRxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsRxLow32.setStatus("current")
_VRtrIfIpReasV6PktsRxHigh32_Type = Counter32
_VRtrIfIpReasV6PktsRxHigh32_Object = MibTableColumn
vRtrIfIpReasV6PktsRxHigh32 = _VRtrIfIpReasV6PktsRxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 93),
    _VRtrIfIpReasV6PktsRxHigh32_Type()
)
vRtrIfIpReasV6PktsRxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsRxHigh32.setStatus("current")
_VRtrIfIpReasV6BytesRx_Type = Counter64
_VRtrIfIpReasV6BytesRx_Object = MibTableColumn
vRtrIfIpReasV6BytesRx = _VRtrIfIpReasV6BytesRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 94),
    _VRtrIfIpReasV6BytesRx_Type()
)
vRtrIfIpReasV6BytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesRx.setStatus("current")
_VRtrIfIpReasV6BytesRxLow32_Type = Counter32
_VRtrIfIpReasV6BytesRxLow32_Object = MibTableColumn
vRtrIfIpReasV6BytesRxLow32 = _VRtrIfIpReasV6BytesRxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 95),
    _VRtrIfIpReasV6BytesRxLow32_Type()
)
vRtrIfIpReasV6BytesRxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesRxLow32.setStatus("current")
_VRtrIfIpReasV6BytesRxHigh32_Type = Counter32
_VRtrIfIpReasV6BytesRxHigh32_Object = MibTableColumn
vRtrIfIpReasV6BytesRxHigh32 = _VRtrIfIpReasV6BytesRxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 96),
    _VRtrIfIpReasV6BytesRxHigh32_Type()
)
vRtrIfIpReasV6BytesRxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesRxHigh32.setStatus("current")
_VRtrIfIpReasV6PktsTx_Type = Counter64
_VRtrIfIpReasV6PktsTx_Object = MibTableColumn
vRtrIfIpReasV6PktsTx = _VRtrIfIpReasV6PktsTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 97),
    _VRtrIfIpReasV6PktsTx_Type()
)
vRtrIfIpReasV6PktsTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsTx.setStatus("current")
_VRtrIfIpReasV6PktsTxLow32_Type = Counter32
_VRtrIfIpReasV6PktsTxLow32_Object = MibTableColumn
vRtrIfIpReasV6PktsTxLow32 = _VRtrIfIpReasV6PktsTxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 98),
    _VRtrIfIpReasV6PktsTxLow32_Type()
)
vRtrIfIpReasV6PktsTxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsTxLow32.setStatus("current")
_VRtrIfIpReasV6PktsTxHigh32_Type = Counter32
_VRtrIfIpReasV6PktsTxHigh32_Object = MibTableColumn
vRtrIfIpReasV6PktsTxHigh32 = _VRtrIfIpReasV6PktsTxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 99),
    _VRtrIfIpReasV6PktsTxHigh32_Type()
)
vRtrIfIpReasV6PktsTxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6PktsTxHigh32.setStatus("current")
_VRtrIfIpReasV6BytesTx_Type = Counter64
_VRtrIfIpReasV6BytesTx_Object = MibTableColumn
vRtrIfIpReasV6BytesTx = _VRtrIfIpReasV6BytesTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 100),
    _VRtrIfIpReasV6BytesTx_Type()
)
vRtrIfIpReasV6BytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesTx.setStatus("current")
_VRtrIfIpReasV6BytesTxLow32_Type = Counter32
_VRtrIfIpReasV6BytesTxLow32_Object = MibTableColumn
vRtrIfIpReasV6BytesTxLow32 = _VRtrIfIpReasV6BytesTxLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 101),
    _VRtrIfIpReasV6BytesTxLow32_Type()
)
vRtrIfIpReasV6BytesTxLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesTxLow32.setStatus("current")
_VRtrIfIpReasV6BytesTxHigh32_Type = Counter32
_VRtrIfIpReasV6BytesTxHigh32_Object = MibTableColumn
vRtrIfIpReasV6BytesTxHigh32 = _VRtrIfIpReasV6BytesTxHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 102),
    _VRtrIfIpReasV6BytesTxHigh32_Type()
)
vRtrIfIpReasV6BytesTxHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIpReasV6BytesTxHigh32.setStatus("current")
_VRtrIfSpeed_Type = Counter64
_VRtrIfSpeed_Object = MibTableColumn
vRtrIfSpeed = _VRtrIfSpeed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 103),
    _VRtrIfSpeed_Type()
)
vRtrIfSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfSpeed.setStatus("current")
_VRtrIfRxV6Pkts_Type = Counter64
_VRtrIfRxV6Pkts_Object = MibTableColumn
vRtrIfRxV6Pkts = _VRtrIfRxV6Pkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 110),
    _VRtrIfRxV6Pkts_Type()
)
vRtrIfRxV6Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6Pkts.setStatus("current")
_VRtrIfRxV6PktsLow32_Type = Counter32
_VRtrIfRxV6PktsLow32_Object = MibTableColumn
vRtrIfRxV6PktsLow32 = _VRtrIfRxV6PktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 111),
    _VRtrIfRxV6PktsLow32_Type()
)
vRtrIfRxV6PktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6PktsLow32.setStatus("current")
_VRtrIfRxV6PktsHigh32_Type = Counter32
_VRtrIfRxV6PktsHigh32_Object = MibTableColumn
vRtrIfRxV6PktsHigh32 = _VRtrIfRxV6PktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 112),
    _VRtrIfRxV6PktsHigh32_Type()
)
vRtrIfRxV6PktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6PktsHigh32.setStatus("current")
_VRtrIfRxV6Bytes_Type = Counter64
_VRtrIfRxV6Bytes_Object = MibTableColumn
vRtrIfRxV6Bytes = _VRtrIfRxV6Bytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 113),
    _VRtrIfRxV6Bytes_Type()
)
vRtrIfRxV6Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6Bytes.setStatus("current")
_VRtrIfRxV6BytesLow32_Type = Counter32
_VRtrIfRxV6BytesLow32_Object = MibTableColumn
vRtrIfRxV6BytesLow32 = _VRtrIfRxV6BytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 114),
    _VRtrIfRxV6BytesLow32_Type()
)
vRtrIfRxV6BytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6BytesLow32.setStatus("current")
_VRtrIfRxV6BytesHigh32_Type = Counter32
_VRtrIfRxV6BytesHigh32_Object = MibTableColumn
vRtrIfRxV6BytesHigh32 = _VRtrIfRxV6BytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 115),
    _VRtrIfRxV6BytesHigh32_Type()
)
vRtrIfRxV6BytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV6BytesHigh32.setStatus("current")
_VRtrIfV6uRPFCheckFailPkts_Type = Counter64
_VRtrIfV6uRPFCheckFailPkts_Object = MibTableColumn
vRtrIfV6uRPFCheckFailPkts = _VRtrIfV6uRPFCheckFailPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 116),
    _VRtrIfV6uRPFCheckFailPkts_Type()
)
vRtrIfV6uRPFCheckFailPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailPkts.setStatus("current")
_VRtrIfV6uRPFCheckFailPktsLow32_Type = Counter32
_VRtrIfV6uRPFCheckFailPktsLow32_Object = MibTableColumn
vRtrIfV6uRPFCheckFailPktsLow32 = _VRtrIfV6uRPFCheckFailPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 117),
    _VRtrIfV6uRPFCheckFailPktsLow32_Type()
)
vRtrIfV6uRPFCheckFailPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailPktsLow32.setStatus("current")
_VRtrIfV6uRPFCheckFailPktsHigh32_Type = Counter32
_VRtrIfV6uRPFCheckFailPktsHigh32_Object = MibTableColumn
vRtrIfV6uRPFCheckFailPktsHigh32 = _VRtrIfV6uRPFCheckFailPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 118),
    _VRtrIfV6uRPFCheckFailPktsHigh32_Type()
)
vRtrIfV6uRPFCheckFailPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailPktsHigh32.setStatus("current")
_VRtrIfV6uRPFCheckFailBytes_Type = Counter64
_VRtrIfV6uRPFCheckFailBytes_Object = MibTableColumn
vRtrIfV6uRPFCheckFailBytes = _VRtrIfV6uRPFCheckFailBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 119),
    _VRtrIfV6uRPFCheckFailBytes_Type()
)
vRtrIfV6uRPFCheckFailBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailBytes.setStatus("current")
_VRtrIfV6uRPFCheckFailBytesLow32_Type = Counter32
_VRtrIfV6uRPFCheckFailBytesLow32_Object = MibTableColumn
vRtrIfV6uRPFCheckFailBytesLow32 = _VRtrIfV6uRPFCheckFailBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 120),
    _VRtrIfV6uRPFCheckFailBytesLow32_Type()
)
vRtrIfV6uRPFCheckFailBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailBytesLow32.setStatus("current")
_VRtrIfV6uRPFCheckFailBytesHigh32_Type = Counter32
_VRtrIfV6uRPFCheckFailBytesHigh32_Object = MibTableColumn
vRtrIfV6uRPFCheckFailBytesHigh32 = _VRtrIfV6uRPFCheckFailBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 121),
    _VRtrIfV6uRPFCheckFailBytesHigh32_Type()
)
vRtrIfV6uRPFCheckFailBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV6uRPFCheckFailBytesHigh32.setStatus("current")
_VRtrIfRxV4Pkts_Type = Counter64
_VRtrIfRxV4Pkts_Object = MibTableColumn
vRtrIfRxV4Pkts = _VRtrIfRxV4Pkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 122),
    _VRtrIfRxV4Pkts_Type()
)
vRtrIfRxV4Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV4Pkts.setStatus("current")
_VRtrIfRxV4Bytes_Type = Counter64
_VRtrIfRxV4Bytes_Object = MibTableColumn
vRtrIfRxV4Bytes = _VRtrIfRxV4Bytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 123),
    _VRtrIfRxV4Bytes_Type()
)
vRtrIfRxV4Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV4Bytes.setStatus("current")
_VRtrIfV4uRPFCheckFailPkts_Type = Counter64
_VRtrIfV4uRPFCheckFailPkts_Object = MibTableColumn
vRtrIfV4uRPFCheckFailPkts = _VRtrIfV4uRPFCheckFailPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 124),
    _VRtrIfV4uRPFCheckFailPkts_Type()
)
vRtrIfV4uRPFCheckFailPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV4uRPFCheckFailPkts.setStatus("current")
_VRtrIfV4uRPFCheckFailBytes_Type = Counter64
_VRtrIfV4uRPFCheckFailBytes_Object = MibTableColumn
vRtrIfV4uRPFCheckFailBytes = _VRtrIfV4uRPFCheckFailBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 54, 1, 125),
    _VRtrIfV4uRPFCheckFailBytes_Type()
)
vRtrIfV4uRPFCheckFailBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfV4uRPFCheckFailBytes.setStatus("current")
_VRtrNetDomainTblLastChanged_Type = TimeStamp
_VRtrNetDomainTblLastChanged_Object = MibScalar
vRtrNetDomainTblLastChanged = _VRtrNetDomainTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 55),
    _VRtrNetDomainTblLastChanged_Type()
)
vRtrNetDomainTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNetDomainTblLastChanged.setStatus("current")
_VRtrNetDomainTable_Object = MibTable
vRtrNetDomainTable = _VRtrNetDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56)
)
if mibBuilder.loadTexts:
    vRtrNetDomainTable.setStatus("current")
_VRtrNetDomainEntry_Object = MibTableRow
vRtrNetDomainEntry = _VRtrNetDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1)
)
vRtrNetDomainEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrNetDomainName"),
)
if mibBuilder.loadTexts:
    vRtrNetDomainEntry.setStatus("current")
_VRtrNetDomainName_Type = TNamedItem
_VRtrNetDomainName_Object = MibTableColumn
vRtrNetDomainName = _VRtrNetDomainName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 1),
    _VRtrNetDomainName_Type()
)
vRtrNetDomainName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrNetDomainName.setStatus("current")
_VRtrNetDomainRowStatus_Type = RowStatus
_VRtrNetDomainRowStatus_Object = MibTableColumn
vRtrNetDomainRowStatus = _VRtrNetDomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 2),
    _VRtrNetDomainRowStatus_Type()
)
vRtrNetDomainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrNetDomainRowStatus.setStatus("current")
_VRtrNetDomainLastChanged_Type = TimeStamp
_VRtrNetDomainLastChanged_Object = MibTableColumn
vRtrNetDomainLastChanged = _VRtrNetDomainLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 3),
    _VRtrNetDomainLastChanged_Type()
)
vRtrNetDomainLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNetDomainLastChanged.setStatus("current")


class _VRtrNetDomainDesc_Type(TItemDescription):
    """Custom type vRtrNetDomainDesc based on TItemDescription"""
    defaultHexValue = ""


_VRtrNetDomainDesc_Type.__name__ = "TItemDescription"
_VRtrNetDomainDesc_Object = MibTableColumn
vRtrNetDomainDesc = _VRtrNetDomainDesc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 4),
    _VRtrNetDomainDesc_Type()
)
vRtrNetDomainDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrNetDomainDesc.setStatus("current")
_VRtrNetDomainIfAssociationCnt_Type = Gauge32
_VRtrNetDomainIfAssociationCnt_Object = MibTableColumn
vRtrNetDomainIfAssociationCnt = _VRtrNetDomainIfAssociationCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 5),
    _VRtrNetDomainIfAssociationCnt_Type()
)
vRtrNetDomainIfAssociationCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNetDomainIfAssociationCnt.setStatus("current")
_VRtrNetDomainSdpAssociationCnt_Type = Gauge32
_VRtrNetDomainSdpAssociationCnt_Object = MibTableColumn
vRtrNetDomainSdpAssociationCnt = _VRtrNetDomainSdpAssociationCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 6),
    _VRtrNetDomainSdpAssociationCnt_Type()
)
vRtrNetDomainSdpAssociationCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNetDomainSdpAssociationCnt.setStatus("current")
_VRtrNetDomainMcastAssociationCnt_Type = Gauge32
_VRtrNetDomainMcastAssociationCnt_Object = MibTableColumn
vRtrNetDomainMcastAssociationCnt = _VRtrNetDomainMcastAssociationCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 56, 1, 7),
    _VRtrNetDomainMcastAssociationCnt_Type()
)
vRtrNetDomainMcastAssociationCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrNetDomainMcastAssociationCnt.setStatus("current")
_VRtrIfNetDomainTblLastChanged_Type = TimeStamp
_VRtrIfNetDomainTblLastChanged_Object = MibScalar
vRtrIfNetDomainTblLastChanged = _VRtrIfNetDomainTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 57),
    _VRtrIfNetDomainTblLastChanged_Type()
)
vRtrIfNetDomainTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfNetDomainTblLastChanged.setStatus("current")
_VRtrIfNetDomainTable_Object = MibTable
vRtrIfNetDomainTable = _VRtrIfNetDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 58)
)
if mibBuilder.loadTexts:
    vRtrIfNetDomainTable.setStatus("current")
_VRtrIfNetDomainEntry_Object = MibTableRow
vRtrIfNetDomainEntry = _VRtrIfNetDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 58, 1)
)
vRtrIfNetDomainEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrNetDomainName"),
)
if mibBuilder.loadTexts:
    vRtrIfNetDomainEntry.setStatus("current")
_VRtrIfNetDomainRowStatus_Type = RowStatus
_VRtrIfNetDomainRowStatus_Object = MibTableColumn
vRtrIfNetDomainRowStatus = _VRtrIfNetDomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 58, 1, 1),
    _VRtrIfNetDomainRowStatus_Type()
)
vRtrIfNetDomainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfNetDomainRowStatus.setStatus("current")
_VRtrIfNetDomainLastChanged_Type = TimeStamp
_VRtrIfNetDomainLastChanged_Object = MibTableColumn
vRtrIfNetDomainLastChanged = _VRtrIfNetDomainLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 58, 1, 2),
    _VRtrIfNetDomainLastChanged_Type()
)
vRtrIfNetDomainLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfNetDomainLastChanged.setStatus("current")
_VRtrConfExtTable_Object = MibTable
vRtrConfExtTable = _VRtrConfExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60)
)
if mibBuilder.loadTexts:
    vRtrConfExtTable.setStatus("current")
_VRtrConfExtEntry_Object = MibTableRow
vRtrConfExtEntry = _VRtrConfExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1)
)
if mibBuilder.loadTexts:
    vRtrConfExtEntry.setStatus("current")


class _VRtrLdpShortcut_Type(TmnxEnabledDisabled):
    """Custom type vRtrLdpShortcut based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrLdpShortcut_Type.__name__ = "TmnxEnabledDisabled"
_VRtrLdpShortcut_Object = MibTableColumn
vRtrLdpShortcut = _VRtrLdpShortcut_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 1),
    _VRtrLdpShortcut_Type()
)
vRtrLdpShortcut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpShortcut.setStatus("obsolete")


class _VRtrSingleSfmOverloadAdminState_Type(TmnxAdminState):
    """Custom type vRtrSingleSfmOverloadAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrSingleSfmOverloadAdminState_Type.__name__ = "TmnxAdminState"
_VRtrSingleSfmOverloadAdminState_Object = MibTableColumn
vRtrSingleSfmOverloadAdminState = _VRtrSingleSfmOverloadAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 2),
    _VRtrSingleSfmOverloadAdminState_Type()
)
vRtrSingleSfmOverloadAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadAdminState.setStatus("current")


class _VRtrSingleSfmOverloadHldOffTime_Type(Unsigned32):
    """Custom type vRtrSingleSfmOverloadHldOffTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_VRtrSingleSfmOverloadHldOffTime_Type.__name__ = "Unsigned32"
_VRtrSingleSfmOverloadHldOffTime_Object = MibTableColumn
vRtrSingleSfmOverloadHldOffTime = _VRtrSingleSfmOverloadHldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 3),
    _VRtrSingleSfmOverloadHldOffTime_Type()
)
vRtrSingleSfmOverloadHldOffTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadHldOffTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadHldOffTime.setUnits("seconds")
_VRtrSingleSfmOverloadState_Type = TmnxVrtrSingleSfmOverloadState
_VRtrSingleSfmOverloadState_Object = MibTableColumn
vRtrSingleSfmOverloadState = _VRtrSingleSfmOverloadState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 4),
    _VRtrSingleSfmOverloadState_Type()
)
vRtrSingleSfmOverloadState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadState.setStatus("current")
_VRtrSingleSfmOverloadStart_Type = TimeStamp
_VRtrSingleSfmOverloadStart_Object = MibTableColumn
vRtrSingleSfmOverloadStart = _VRtrSingleSfmOverloadStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 5),
    _VRtrSingleSfmOverloadStart_Type()
)
vRtrSingleSfmOverloadStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadStart.setStatus("current")
_VRtrSingleSfmOverloadTime_Type = TimeInterval
_VRtrSingleSfmOverloadTime_Object = MibTableColumn
vRtrSingleSfmOverloadTime = _VRtrSingleSfmOverloadTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 6),
    _VRtrSingleSfmOverloadTime_Type()
)
vRtrSingleSfmOverloadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSingleSfmOverloadTime.setStatus("current")


class _VRtrGrtState_Type(TruthValue):
    """Custom type vRtrGrtState based on TruthValue"""
    defaultValue = 2


_VRtrGrtState_Type.__name__ = "TruthValue"
_VRtrGrtState_Object = MibTableColumn
vRtrGrtState = _VRtrGrtState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 7),
    _VRtrGrtState_Type()
)
vRtrGrtState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtState.setStatus("current")


class _VRtrMvpnIpmsiP2MPAdmin_Type(TmnxAdminState):
    """Custom type vRtrMvpnIpmsiP2MPAdmin based on TmnxAdminState"""
    defaultValue = 3


_VRtrMvpnIpmsiP2MPAdmin_Type.__name__ = "TmnxAdminState"
_VRtrMvpnIpmsiP2MPAdmin_Object = MibTableColumn
vRtrMvpnIpmsiP2MPAdmin = _VRtrMvpnIpmsiP2MPAdmin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 8),
    _VRtrMvpnIpmsiP2MPAdmin_Type()
)
vRtrMvpnIpmsiP2MPAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiP2MPAdmin.setStatus("current")


class _VRtrMvpnSpmsiP2MPAdmin_Type(TmnxAdminState):
    """Custom type vRtrMvpnSpmsiP2MPAdmin based on TmnxAdminState"""
    defaultValue = 3


_VRtrMvpnSpmsiP2MPAdmin_Type.__name__ = "TmnxAdminState"
_VRtrMvpnSpmsiP2MPAdmin_Object = MibTableColumn
vRtrMvpnSpmsiP2MPAdmin = _VRtrMvpnSpmsiP2MPAdmin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 9),
    _VRtrMvpnSpmsiP2MPAdmin_Type()
)
vRtrMvpnSpmsiP2MPAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiP2MPAdmin.setStatus("current")


class _VRtrMvpnIpmsiLspTemplate_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnIpmsiLspTemplate based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnIpmsiLspTemplate_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnIpmsiLspTemplate_Object = MibTableColumn
vRtrMvpnIpmsiLspTemplate = _VRtrMvpnIpmsiLspTemplate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 10),
    _VRtrMvpnIpmsiLspTemplate_Type()
)
vRtrMvpnIpmsiLspTemplate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiLspTemplate.setStatus("current")


class _VRtrMvpnSpmsiLspTemplate_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnSpmsiLspTemplate based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnSpmsiLspTemplate_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnSpmsiLspTemplate_Object = MibTableColumn
vRtrMvpnSpmsiLspTemplate = _VRtrMvpnSpmsiLspTemplate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 11),
    _VRtrMvpnSpmsiLspTemplate_Type()
)
vRtrMvpnSpmsiLspTemplate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiLspTemplate.setStatus("current")


class _VRtrMvpnIpmsiType_Type(Integer32):
    """Custom type vRtrMvpnIpmsiType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rsvp", 1),
          ("pim", 2),
          ("ldp", 3),
          ("bier", 4),
          ("treesid", 5))
    )


_VRtrMvpnIpmsiType_Type.__name__ = "Integer32"
_VRtrMvpnIpmsiType_Object = MibTableColumn
vRtrMvpnIpmsiType = _VRtrMvpnIpmsiType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 12),
    _VRtrMvpnIpmsiType_Type()
)
vRtrMvpnIpmsiType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiType.setStatus("current")


class _VRtrMvpnSpmsiType_Type(Integer32):
    """Custom type vRtrMvpnSpmsiType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rsvp", 1),
          ("pim", 2),
          ("ldp", 3),
          ("bier", 4),
          ("treesid", 5))
    )


_VRtrMvpnSpmsiType_Type.__name__ = "Integer32"
_VRtrMvpnSpmsiType_Object = MibTableColumn
vRtrMvpnSpmsiType = _VRtrMvpnSpmsiType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 13),
    _VRtrMvpnSpmsiType_Type()
)
vRtrMvpnSpmsiType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiType.setStatus("current")


class _VRtrMvpnSpmsiMaxLimit_Type(Unsigned32):
    """Custom type vRtrMvpnSpmsiMaxLimit based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4000),
    )


_VRtrMvpnSpmsiMaxLimit_Type.__name__ = "Unsigned32"
_VRtrMvpnSpmsiMaxLimit_Object = MibTableColumn
vRtrMvpnSpmsiMaxLimit = _VRtrMvpnSpmsiMaxLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 14),
    _VRtrMvpnSpmsiMaxLimit_Type()
)
vRtrMvpnSpmsiMaxLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiMaxLimit.setStatus("current")


class _VRtrFibPriority_Type(Integer32):
    """Custom type vRtrFibPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("standard", 1),
          ("high", 2))
    )


_VRtrFibPriority_Type.__name__ = "Integer32"
_VRtrFibPriority_Object = MibTableColumn
vRtrFibPriority = _VRtrFibPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 15),
    _VRtrFibPriority_Type()
)
vRtrFibPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrFibPriority.setStatus("current")


class _VRtrCarrierCarrierVpn_Type(TruthValue):
    """Custom type vRtrCarrierCarrierVpn based on TruthValue"""
    defaultValue = 2


_VRtrCarrierCarrierVpn_Type.__name__ = "TruthValue"
_VRtrCarrierCarrierVpn_Object = MibTableColumn
vRtrCarrierCarrierVpn = _VRtrCarrierCarrierVpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 16),
    _VRtrCarrierCarrierVpn_Type()
)
vRtrCarrierCarrierVpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrCarrierCarrierVpn.setStatus("current")


class _VRtrLabelMode_Type(Integer32):
    """Custom type vRtrLabelMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("vrf", 1),
          ("nexthop", 2))
    )


_VRtrLabelMode_Type.__name__ = "Integer32"
_VRtrLabelMode_Object = MibTableColumn
vRtrLabelMode = _VRtrLabelMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 17),
    _VRtrLabelMode_Type()
)
vRtrLabelMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLabelMode.setStatus("current")


class _VRtrBgpSharedQueue_Type(TruthValue):
    """Custom type vRtrBgpSharedQueue based on TruthValue"""
    defaultValue = 2


_VRtrBgpSharedQueue_Type.__name__ = "TruthValue"
_VRtrBgpSharedQueue_Object = MibTableColumn
vRtrBgpSharedQueue = _VRtrBgpSharedQueue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 18),
    _VRtrBgpSharedQueue_Type()
)
vRtrBgpSharedQueue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSharedQueue.setStatus("current")


class _VRtrBgpSharedQueueCIR_Type(TCIRRate):
    """Custom type vRtrBgpSharedQueueCIR based on TCIRRate"""
    defaultValue = 4000


_VRtrBgpSharedQueueCIR_Type.__name__ = "TCIRRate"
_VRtrBgpSharedQueueCIR_Object = MibTableColumn
vRtrBgpSharedQueueCIR = _VRtrBgpSharedQueueCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 19),
    _VRtrBgpSharedQueueCIR_Type()
)
vRtrBgpSharedQueueCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSharedQueueCIR.setStatus("current")
if mibBuilder.loadTexts:
    vRtrBgpSharedQueueCIR.setUnits("kilo bits per second")


class _VRtrBgpSharedQueuePIR_Type(TPIRRate):
    """Custom type vRtrBgpSharedQueuePIR based on TPIRRate"""
    defaultValue = 4000


_VRtrBgpSharedQueuePIR_Type.__name__ = "TPIRRate"
_VRtrBgpSharedQueuePIR_Object = MibTableColumn
vRtrBgpSharedQueuePIR = _VRtrBgpSharedQueuePIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 20),
    _VRtrBgpSharedQueuePIR_Type()
)
vRtrBgpSharedQueuePIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSharedQueuePIR.setStatus("current")
if mibBuilder.loadTexts:
    vRtrBgpSharedQueuePIR.setUnits("kilo bits per second")


class _VRtrMvpnMdtSafi_Type(TruthValue):
    """Custom type vRtrMvpnMdtSafi based on TruthValue"""
    defaultValue = 2


_VRtrMvpnMdtSafi_Type.__name__ = "TruthValue"
_VRtrMvpnMdtSafi_Object = MibTableColumn
vRtrMvpnMdtSafi = _VRtrMvpnMdtSafi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 21),
    _VRtrMvpnMdtSafi_Type()
)
vRtrMvpnMdtSafi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnMdtSafi.setStatus("current")
_VRtrMvpnMdtDefGrpAddrType_Type = InetAddressType
_VRtrMvpnMdtDefGrpAddrType_Object = MibTableColumn
vRtrMvpnMdtDefGrpAddrType = _VRtrMvpnMdtDefGrpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 22),
    _VRtrMvpnMdtDefGrpAddrType_Type()
)
vRtrMvpnMdtDefGrpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnMdtDefGrpAddrType.setStatus("current")


class _VRtrMvpnMdtDefGrpAddress_Type(InetAddress):
    """Custom type vRtrMvpnMdtDefGrpAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrMvpnMdtDefGrpAddress_Type.__name__ = "InetAddress"
_VRtrMvpnMdtDefGrpAddress_Object = MibTableColumn
vRtrMvpnMdtDefGrpAddress = _VRtrMvpnMdtDefGrpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 23),
    _VRtrMvpnMdtDefGrpAddress_Type()
)
vRtrMvpnMdtDefGrpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnMdtDefGrpAddress.setStatus("current")


class _VRtrMvpnIpmsiEnableBfdRoot_Type(TruthValue):
    """Custom type vRtrMvpnIpmsiEnableBfdRoot based on TruthValue"""
    defaultValue = 2


_VRtrMvpnIpmsiEnableBfdRoot_Type.__name__ = "TruthValue"
_VRtrMvpnIpmsiEnableBfdRoot_Object = MibTableColumn
vRtrMvpnIpmsiEnableBfdRoot = _VRtrMvpnIpmsiEnableBfdRoot_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 24),
    _VRtrMvpnIpmsiEnableBfdRoot_Type()
)
vRtrMvpnIpmsiEnableBfdRoot.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiEnableBfdRoot.setStatus("current")


class _VRtrMvpnIpmsiEnableBfdLeaf_Type(TruthValue):
    """Custom type vRtrMvpnIpmsiEnableBfdLeaf based on TruthValue"""
    defaultValue = 2


_VRtrMvpnIpmsiEnableBfdLeaf_Type.__name__ = "TruthValue"
_VRtrMvpnIpmsiEnableBfdLeaf_Object = MibTableColumn
vRtrMvpnIpmsiEnableBfdLeaf = _VRtrMvpnIpmsiEnableBfdLeaf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 25),
    _VRtrMvpnIpmsiEnableBfdLeaf_Type()
)
vRtrMvpnIpmsiEnableBfdLeaf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiEnableBfdLeaf.setStatus("current")


class _VRtrMvpnIpmsiBfdRtTraInt_Type(Unsigned32):
    """Custom type vRtrMvpnIpmsiBfdRtTraInt based on Unsigned32"""
    defaultValue = 300

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100000),
    )


_VRtrMvpnIpmsiBfdRtTraInt_Type.__name__ = "Unsigned32"
_VRtrMvpnIpmsiBfdRtTraInt_Object = MibTableColumn
vRtrMvpnIpmsiBfdRtTraInt = _VRtrMvpnIpmsiBfdRtTraInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 26),
    _VRtrMvpnIpmsiBfdRtTraInt_Type()
)
vRtrMvpnIpmsiBfdRtTraInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiBfdRtTraInt.setStatus("current")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiBfdRtTraInt.setUnits("milliseconds")


class _VRtrMvpnIpmsiBfdRootMult_Type(Unsigned32):
    """Custom type vRtrMvpnIpmsiBfdRootMult based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_VRtrMvpnIpmsiBfdRootMult_Type.__name__ = "Unsigned32"
_VRtrMvpnIpmsiBfdRootMult_Object = MibTableColumn
vRtrMvpnIpmsiBfdRootMult = _VRtrMvpnIpmsiBfdRootMult_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 27),
    _VRtrMvpnIpmsiBfdRootMult_Type()
)
vRtrMvpnIpmsiBfdRootMult.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiBfdRootMult.setStatus("current")


class _VRtrVpnBackupPath_Type(TmnxVpnIpBackupFamily):
    """Custom type vRtrVpnBackupPath based on TmnxVpnIpBackupFamily"""
    defaultBinValue = "0"


_VRtrVpnBackupPath_Type.__name__ = "TmnxVpnIpBackupFamily"
_VRtrVpnBackupPath_Object = MibTableColumn
vRtrVpnBackupPath = _VRtrVpnBackupPath_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 28),
    _VRtrVpnBackupPath_Type()
)
vRtrVpnBackupPath.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVpnBackupPath.setStatus("current")


class _VRtrIpFastReroute_Type(TruthValue):
    """Custom type vRtrIpFastReroute based on TruthValue"""
    defaultValue = 2


_VRtrIpFastReroute_Type.__name__ = "TruthValue"
_VRtrIpFastReroute_Object = MibTableColumn
vRtrIpFastReroute = _VRtrIpFastReroute_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 29),
    _VRtrIpFastReroute_Type()
)
vRtrIpFastReroute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpFastReroute.setStatus("current")


class _VRtrGrtLocalMgmtState_Type(TruthValue):
    """Custom type vRtrGrtLocalMgmtState based on TruthValue"""
    defaultValue = 2


_VRtrGrtLocalMgmtState_Type.__name__ = "TruthValue"
_VRtrGrtLocalMgmtState_Object = MibTableColumn
vRtrGrtLocalMgmtState = _VRtrGrtLocalMgmtState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 30),
    _VRtrGrtLocalMgmtState_Type()
)
vRtrGrtLocalMgmtState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrGrtLocalMgmtState.setStatus("current")


class _VRtrIpv6ReachableTime_Type(Unsigned32):
    """Custom type vRtrIpv6ReachableTime based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 3600),
    )


_VRtrIpv6ReachableTime_Type.__name__ = "Unsigned32"
_VRtrIpv6ReachableTime_Object = MibTableColumn
vRtrIpv6ReachableTime = _VRtrIpv6ReachableTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 32),
    _VRtrIpv6ReachableTime_Type()
)
vRtrIpv6ReachableTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpv6ReachableTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIpv6ReachableTime.setUnits("seconds")


class _VRtrAllowExportBgpVpn_Type(TruthValue):
    """Custom type vRtrAllowExportBgpVpn based on TruthValue"""
    defaultValue = 2


_VRtrAllowExportBgpVpn_Type.__name__ = "TruthValue"
_VRtrAllowExportBgpVpn_Object = MibTableColumn
vRtrAllowExportBgpVpn = _VRtrAllowExportBgpVpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 33),
    _VRtrAllowExportBgpVpn_Type()
)
vRtrAllowExportBgpVpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAllowExportBgpVpn.setStatus("current")


class _VRtrBgpExportInactive_Type(TruthValue):
    """Custom type vRtrBgpExportInactive based on TruthValue"""
    defaultValue = 2


_VRtrBgpExportInactive_Type.__name__ = "TruthValue"
_VRtrBgpExportInactive_Object = MibTableColumn
vRtrBgpExportInactive = _VRtrBgpExportInactive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 34),
    _VRtrBgpExportInactive_Type()
)
vRtrBgpExportInactive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpExportInactive.setStatus("current")


class _VRtrAllowSnmpAccess_Type(TruthValue):
    """Custom type vRtrAllowSnmpAccess based on TruthValue"""
    defaultValue = 2


_VRtrAllowSnmpAccess_Type.__name__ = "TruthValue"
_VRtrAllowSnmpAccess_Object = MibTableColumn
vRtrAllowSnmpAccess = _VRtrAllowSnmpAccess_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 35),
    _VRtrAllowSnmpAccess_Type()
)
vRtrAllowSnmpAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAllowSnmpAccess.setStatus("current")


class _VRtrIpv6NdCacheStaleTime_Type(Unsigned32):
    """Custom type vRtrIpv6NdCacheStaleTime based on Unsigned32"""
    defaultValue = 14400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 65535),
    )


_VRtrIpv6NdCacheStaleTime_Type.__name__ = "Unsigned32"
_VRtrIpv6NdCacheStaleTime_Object = MibTableColumn
vRtrIpv6NdCacheStaleTime = _VRtrIpv6NdCacheStaleTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 36),
    _VRtrIpv6NdCacheStaleTime_Type()
)
vRtrIpv6NdCacheStaleTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpv6NdCacheStaleTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIpv6NdCacheStaleTime.setUnits("seconds")


class _VRtrIcmpTunneling_Type(TruthValue):
    """Custom type vRtrIcmpTunneling based on TruthValue"""
    defaultValue = 2


_VRtrIcmpTunneling_Type.__name__ = "TruthValue"
_VRtrIcmpTunneling_Object = MibTableColumn
vRtrIcmpTunneling = _VRtrIcmpTunneling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 37),
    _VRtrIcmpTunneling_Type()
)
vRtrIcmpTunneling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIcmpTunneling.setStatus("current")
_VRtrMvpnMdSourceAddrType_Type = InetAddressType
_VRtrMvpnMdSourceAddrType_Object = MibTableColumn
vRtrMvpnMdSourceAddrType = _VRtrMvpnMdSourceAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 38),
    _VRtrMvpnMdSourceAddrType_Type()
)
vRtrMvpnMdSourceAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnMdSourceAddrType.setStatus("current")


class _VRtrMvpnMdSourceAddress_Type(InetAddress):
    """Custom type vRtrMvpnMdSourceAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrMvpnMdSourceAddress_Type.__name__ = "InetAddress"
_VRtrMvpnMdSourceAddress_Object = MibTableColumn
vRtrMvpnMdSourceAddress = _VRtrMvpnMdSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 39),
    _VRtrMvpnMdSourceAddress_Type()
)
vRtrMvpnMdSourceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMvpnMdSourceAddress.setStatus("current")


class _VRtrDisableSelectiveFib_Type(TruthValue):
    """Custom type vRtrDisableSelectiveFib based on TruthValue"""
    defaultValue = 2


_VRtrDisableSelectiveFib_Type.__name__ = "TruthValue"
_VRtrDisableSelectiveFib_Object = MibTableColumn
vRtrDisableSelectiveFib = _VRtrDisableSelectiveFib_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 40),
    _VRtrDisableSelectiveFib_Type()
)
vRtrDisableSelectiveFib.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDisableSelectiveFib.setStatus("current")


class _VRtrMvpnWildcardSpmsi_Type(TruthValue):
    """Custom type vRtrMvpnWildcardSpmsi based on TruthValue"""
    defaultValue = 2


_VRtrMvpnWildcardSpmsi_Type.__name__ = "TruthValue"
_VRtrMvpnWildcardSpmsi_Object = MibTableColumn
vRtrMvpnWildcardSpmsi = _VRtrMvpnWildcardSpmsi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 41),
    _VRtrMvpnWildcardSpmsi_Type()
)
vRtrMvpnWildcardSpmsi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnWildcardSpmsi.setStatus("current")


class _VRtrMvpnWildcardSpmsiBsrSig_Type(Integer32):
    """Custom type vRtrMvpnWildcardSpmsiBsrSig based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("unicast", 1),
          ("spmsi", 2))
    )


_VRtrMvpnWildcardSpmsiBsrSig_Type.__name__ = "Integer32"
_VRtrMvpnWildcardSpmsiBsrSig_Object = MibTableColumn
vRtrMvpnWildcardSpmsiBsrSig = _VRtrMvpnWildcardSpmsiBsrSig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 42),
    _VRtrMvpnWildcardSpmsiBsrSig_Type()
)
vRtrMvpnWildcardSpmsiBsrSig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnWildcardSpmsiBsrSig.setStatus("current")


class _VRtrStaticRouteHoldDownEnable_Type(TruthValue):
    """Custom type vRtrStaticRouteHoldDownEnable based on TruthValue"""
    defaultValue = 2


_VRtrStaticRouteHoldDownEnable_Type.__name__ = "TruthValue"
_VRtrStaticRouteHoldDownEnable_Object = MibTableColumn
vRtrStaticRouteHoldDownEnable = _VRtrStaticRouteHoldDownEnable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 43),
    _VRtrStaticRouteHoldDownEnable_Type()
)
vRtrStaticRouteHoldDownEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownEnable.setStatus("current")


class _VRtrStaticRouteHoldDownInitial_Type(Unsigned32):
    """Custom type vRtrStaticRouteHoldDownInitial based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrStaticRouteHoldDownInitial_Type.__name__ = "Unsigned32"
_VRtrStaticRouteHoldDownInitial_Object = MibTableColumn
vRtrStaticRouteHoldDownInitial = _VRtrStaticRouteHoldDownInitial_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 44),
    _VRtrStaticRouteHoldDownInitial_Type()
)
vRtrStaticRouteHoldDownInitial.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownInitial.setStatus("current")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownInitial.setUnits("seconds")


class _VRtrStaticRouteHoldDownMultiplr_Type(Unsigned32):
    """Custom type vRtrStaticRouteHoldDownMultiplr based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_VRtrStaticRouteHoldDownMultiplr_Type.__name__ = "Unsigned32"
_VRtrStaticRouteHoldDownMultiplr_Object = MibTableColumn
vRtrStaticRouteHoldDownMultiplr = _VRtrStaticRouteHoldDownMultiplr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 45),
    _VRtrStaticRouteHoldDownMultiplr_Type()
)
vRtrStaticRouteHoldDownMultiplr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownMultiplr.setStatus("current")


class _VRtrStaticRouteHoldDownMaxValue_Type(Unsigned32):
    """Custom type vRtrStaticRouteHoldDownMaxValue based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VRtrStaticRouteHoldDownMaxValue_Type.__name__ = "Unsigned32"
_VRtrStaticRouteHoldDownMaxValue_Object = MibTableColumn
vRtrStaticRouteHoldDownMaxValue = _VRtrStaticRouteHoldDownMaxValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 46),
    _VRtrStaticRouteHoldDownMaxValue_Type()
)
vRtrStaticRouteHoldDownMaxValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownMaxValue.setStatus("current")
if mibBuilder.loadTexts:
    vRtrStaticRouteHoldDownMaxValue.setUnits("seconds")


class _VRtrWeightedEcmp_Type(TruthValue):
    """Custom type vRtrWeightedEcmp based on TruthValue"""
    defaultValue = 2


_VRtrWeightedEcmp_Type.__name__ = "TruthValue"
_VRtrWeightedEcmp_Object = MibTableColumn
vRtrWeightedEcmp = _VRtrWeightedEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 47),
    _VRtrWeightedEcmp_Type()
)
vRtrWeightedEcmp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrWeightedEcmp.setStatus("current")


class _VRtrBgpAutoRD_Type(TruthValue):
    """Custom type vRtrBgpAutoRD based on TruthValue"""
    defaultValue = 2


_VRtrBgpAutoRD_Type.__name__ = "TruthValue"
_VRtrBgpAutoRD_Object = MibTableColumn
vRtrBgpAutoRD = _VRtrBgpAutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 48),
    _VRtrBgpAutoRD_Type()
)
vRtrBgpAutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpAutoRD.setStatus("current")
_VRtrBgpOperRD_Type = TmnxVPNRouteDistinguisher
_VRtrBgpOperRD_Object = MibTableColumn
vRtrBgpOperRD = _VRtrBgpOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 49),
    _VRtrBgpOperRD_Type()
)
vRtrBgpOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpOperRD.setStatus("current")
_VRtrBgpOperRDType_Type = TmnxRouteDistType
_VRtrBgpOperRDType_Object = MibTableColumn
vRtrBgpOperRDType = _VRtrBgpOperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 50),
    _VRtrBgpOperRDType_Type()
)
vRtrBgpOperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpOperRDType.setStatus("current")


class _VRtrLdpShortcutType_Type(Bits):
    """Custom type vRtrLdpShortcutType based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("ipv4", 0),
          ("ipv6", 1))
    )

_VRtrLdpShortcutType_Type.__name__ = "Bits"
_VRtrLdpShortcutType_Object = MibTableColumn
vRtrLdpShortcutType = _VRtrLdpShortcutType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 51),
    _VRtrLdpShortcutType_Type()
)
vRtrLdpShortcutType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpShortcutType.setStatus("current")


class _VRtrEntropyLabel_Type(TruthValue):
    """Custom type vRtrEntropyLabel based on TruthValue"""
    defaultValue = 2


_VRtrEntropyLabel_Type.__name__ = "TruthValue"
_VRtrEntropyLabel_Object = MibTableColumn
vRtrEntropyLabel = _VRtrEntropyLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 52),
    _VRtrEntropyLabel_Type()
)
vRtrEntropyLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrEntropyLabel.setStatus("current")


class _VRtrLspBfdSession_Type(TmnxEnabledDisabled):
    """Custom type vRtrLspBfdSession based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrLspBfdSession_Type.__name__ = "TmnxEnabledDisabled"
_VRtrLspBfdSession_Object = MibTableColumn
vRtrLspBfdSession = _VRtrLspBfdSession_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 53),
    _VRtrLspBfdSession_Type()
)
vRtrLspBfdSession.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLspBfdSession.setStatus("current")


class _VRtrLspBfdMaxSessions_Type(Unsigned32):
    """Custom type vRtrLspBfdMaxSessions based on Unsigned32"""
    defaultValue = 0


_VRtrLspBfdMaxSessions_Type.__name__ = "Unsigned32"
_VRtrLspBfdMaxSessions_Object = MibTableColumn
vRtrLspBfdMaxSessions = _VRtrLspBfdMaxSessions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 54),
    _VRtrLspBfdMaxSessions_Type()
)
vRtrLspBfdMaxSessions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLspBfdMaxSessions.setStatus("current")
_VRtrOperRouterId_Type = IpAddress
_VRtrOperRouterId_Object = MibTableColumn
vRtrOperRouterId = _VRtrOperRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 56),
    _VRtrOperRouterId_Type()
)
vRtrOperRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOperRouterId.setStatus("current")


class _VRtrClassForwarding_Type(TruthValue):
    """Custom type vRtrClassForwarding based on TruthValue"""
    defaultValue = 2


_VRtrClassForwarding_Type.__name__ = "TruthValue"
_VRtrClassForwarding_Object = MibTableColumn
vRtrClassForwarding = _VRtrClassForwarding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 58),
    _VRtrClassForwarding_Type()
)
vRtrClassForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrClassForwarding.setStatus("current")


class _VRtrMtrace2AdminState_Type(TmnxAdminState):
    """Custom type vRtrMtrace2AdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrMtrace2AdminState_Type.__name__ = "TmnxAdminState"
_VRtrMtrace2AdminState_Object = MibTableColumn
vRtrMtrace2AdminState = _VRtrMtrace2AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 59),
    _VRtrMtrace2AdminState_Type()
)
vRtrMtrace2AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMtrace2AdminState.setStatus("current")


class _VRtrMtrace2UdpPort_Type(Unsigned32):
    """Custom type vRtrMtrace2UdpPort based on Unsigned32"""
    defaultValue = 5000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1024, 49151),
    )


_VRtrMtrace2UdpPort_Type.__name__ = "Unsigned32"
_VRtrMtrace2UdpPort_Object = MibTableColumn
vRtrMtrace2UdpPort = _VRtrMtrace2UdpPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 62),
    _VRtrMtrace2UdpPort_Type()
)
vRtrMtrace2UdpPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMtrace2UdpPort.setStatus("current")


class _VRtrPolicyReferenceChecks_Type(TruthValue):
    """Custom type vRtrPolicyReferenceChecks based on TruthValue"""
    defaultValue = 2


_VRtrPolicyReferenceChecks_Type.__name__ = "TruthValue"
_VRtrPolicyReferenceChecks_Object = MibTableColumn
vRtrPolicyReferenceChecks = _VRtrPolicyReferenceChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 63),
    _VRtrPolicyReferenceChecks_Type()
)
vRtrPolicyReferenceChecks.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPolicyReferenceChecks.setStatus("current")


class _VRtrMvpnIpmsiBierSubDomain_Type(Integer32):
    """Custom type vRtrMvpnIpmsiBierSubDomain based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 255),
    )


_VRtrMvpnIpmsiBierSubDomain_Type.__name__ = "Integer32"
_VRtrMvpnIpmsiBierSubDomain_Object = MibTableColumn
vRtrMvpnIpmsiBierSubDomain = _VRtrMvpnIpmsiBierSubDomain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 64),
    _VRtrMvpnIpmsiBierSubDomain_Type()
)
vRtrMvpnIpmsiBierSubDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiBierSubDomain.setStatus("current")


class _VRtrMvpnSpmsiBierSubDomain_Type(Integer32):
    """Custom type vRtrMvpnSpmsiBierSubDomain based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 255),
    )


_VRtrMvpnSpmsiBierSubDomain_Type.__name__ = "Integer32"
_VRtrMvpnSpmsiBierSubDomain_Object = MibTableColumn
vRtrMvpnSpmsiBierSubDomain = _VRtrMvpnSpmsiBierSubDomain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 65),
    _VRtrMvpnSpmsiBierSubDomain_Type()
)
vRtrMvpnSpmsiBierSubDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiBierSubDomain.setStatus("current")


class _VRtrFibTelemetry_Type(TruthValue):
    """Custom type vRtrFibTelemetry based on TruthValue"""
    defaultValue = 2


_VRtrFibTelemetry_Type.__name__ = "TruthValue"
_VRtrFibTelemetry_Object = MibTableColumn
vRtrFibTelemetry = _VRtrFibTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 66),
    _VRtrFibTelemetry_Type()
)
vRtrFibTelemetry.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrFibTelemetry.setStatus("current")


class _VRtrWeightedEcmpStrict_Type(TruthValue):
    """Custom type vRtrWeightedEcmpStrict based on TruthValue"""
    defaultValue = 2


_VRtrWeightedEcmpStrict_Type.__name__ = "TruthValue"
_VRtrWeightedEcmpStrict_Object = MibTableColumn
vRtrWeightedEcmpStrict = _VRtrWeightedEcmpStrict_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 67),
    _VRtrWeightedEcmpStrict_Type()
)
vRtrWeightedEcmpStrict.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrWeightedEcmpStrict.setStatus("current")


class _VRtrIpv6TeRouterIdIfName_Type(TNamedItem):
    """Custom type vRtrIpv6TeRouterIdIfName based on TNamedItem"""
    defaultValue = OctetString("system")


_VRtrIpv6TeRouterIdIfName_Type.__name__ = "TNamedItem"
_VRtrIpv6TeRouterIdIfName_Object = MibTableColumn
vRtrIpv6TeRouterIdIfName = _VRtrIpv6TeRouterIdIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 68),
    _VRtrIpv6TeRouterIdIfName_Type()
)
vRtrIpv6TeRouterIdIfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpv6TeRouterIdIfName.setStatus("current")


class _VRtrEcmpUnequalCost_Type(TruthValue):
    """Custom type vRtrEcmpUnequalCost based on TruthValue"""
    defaultValue = 2


_VRtrEcmpUnequalCost_Type.__name__ = "TruthValue"
_VRtrEcmpUnequalCost_Object = MibTableColumn
vRtrEcmpUnequalCost = _VRtrEcmpUnequalCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 69),
    _VRtrEcmpUnequalCost_Type()
)
vRtrEcmpUnequalCost.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrEcmpUnequalCost.setStatus("current")


class _VRtrMvpnIpmsiP2mpPolicy_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnIpmsiP2mpPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnIpmsiP2mpPolicy_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnIpmsiP2mpPolicy_Object = MibTableColumn
vRtrMvpnIpmsiP2mpPolicy = _VRtrMvpnIpmsiP2mpPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 70),
    _VRtrMvpnIpmsiP2mpPolicy_Type()
)
vRtrMvpnIpmsiP2mpPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiP2mpPolicy.setStatus("current")


class _VRtrMvpnSpmsiP2mpPolicy_Type(TNamedItemOrEmpty):
    """Custom type vRtrMvpnSpmsiP2mpPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnSpmsiP2mpPolicy_Type.__name__ = "TNamedItemOrEmpty"
_VRtrMvpnSpmsiP2mpPolicy_Object = MibTableColumn
vRtrMvpnSpmsiP2mpPolicy = _VRtrMvpnSpmsiP2mpPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 71),
    _VRtrMvpnSpmsiP2mpPolicy_Type()
)
vRtrMvpnSpmsiP2mpPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiP2mpPolicy.setStatus("current")


class _VRtrMvpnIpmsiSRPolicy_Type(TruthValue):
    """Custom type vRtrMvpnIpmsiSRPolicy based on TruthValue"""
    defaultValue = 2


_VRtrMvpnIpmsiSRPolicy_Type.__name__ = "TruthValue"
_VRtrMvpnIpmsiSRPolicy_Object = MibTableColumn
vRtrMvpnIpmsiSRPolicy = _VRtrMvpnIpmsiSRPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 72),
    _VRtrMvpnIpmsiSRPolicy_Type()
)
vRtrMvpnIpmsiSRPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnIpmsiSRPolicy.setStatus("current")


class _VRtrMvpnSpmsiSRPolicy_Type(TruthValue):
    """Custom type vRtrMvpnSpmsiSRPolicy based on TruthValue"""
    defaultValue = 2


_VRtrMvpnSpmsiSRPolicy_Type.__name__ = "TruthValue"
_VRtrMvpnSpmsiSRPolicy_Object = MibTableColumn
vRtrMvpnSpmsiSRPolicy = _VRtrMvpnSpmsiSRPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 73),
    _VRtrMvpnSpmsiSRPolicy_Type()
)
vRtrMvpnSpmsiSRPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnSpmsiSRPolicy.setStatus("current")


class _VRtrBgpIpVpnMplsAdminState_Type(TmnxEnabledDisabled):
    """Custom type vRtrBgpIpVpnMplsAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrBgpIpVpnMplsAdminState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrBgpIpVpnMplsAdminState_Object = MibTableColumn
vRtrBgpIpVpnMplsAdminState = _VRtrBgpIpVpnMplsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 74),
    _VRtrBgpIpVpnMplsAdminState_Type()
)
vRtrBgpIpVpnMplsAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpIpVpnMplsAdminState.setStatus("current")


class _VRtrBgpIpVpnMplsDynEgrLblLmt_Type(TruthValue):
    """Custom type vRtrBgpIpVpnMplsDynEgrLblLmt based on TruthValue"""
    defaultValue = 2


_VRtrBgpIpVpnMplsDynEgrLblLmt_Type.__name__ = "TruthValue"
_VRtrBgpIpVpnMplsDynEgrLblLmt_Object = MibTableColumn
vRtrBgpIpVpnMplsDynEgrLblLmt = _VRtrBgpIpVpnMplsDynEgrLblLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 60, 1, 75),
    _VRtrBgpIpVpnMplsDynEgrLblLmt_Type()
)
vRtrBgpIpVpnMplsDynEgrLblLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpIpVpnMplsDynEgrLblLmt.setStatus("current")
_VRtrIfExtTable_Object = MibTable
vRtrIfExtTable = _VRtrIfExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61)
)
if mibBuilder.loadTexts:
    vRtrIfExtTable.setStatus("current")
_VRtrIfExtEntry_Object = MibTableRow
vRtrIfExtEntry = _VRtrIfExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1)
)
if mibBuilder.loadTexts:
    vRtrIfExtEntry.setStatus("current")


class _VRtrIfLsrIpLoadBalancing_Type(Integer32):
    """Custom type vRtrIfLsrIpLoadBalancing based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("system", 0),
          ("label-only", 1),
          ("label-ip", 2),
          ("ip-only", 3),
          ("eth-encap-ip", 4),
          ("label-ip-l4-teid", 5))
    )


_VRtrIfLsrIpLoadBalancing_Type.__name__ = "Integer32"
_VRtrIfLsrIpLoadBalancing_Object = MibTableColumn
vRtrIfLsrIpLoadBalancing = _VRtrIfLsrIpLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 1),
    _VRtrIfLsrIpLoadBalancing_Type()
)
vRtrIfLsrIpLoadBalancing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLsrIpLoadBalancing.setStatus("current")


class _VRtrIfIngressIpv4Flowspec_Type(TruthValue):
    """Custom type vRtrIfIngressIpv4Flowspec based on TruthValue"""
    defaultValue = 2


_VRtrIfIngressIpv4Flowspec_Type.__name__ = "TruthValue"
_VRtrIfIngressIpv4Flowspec_Object = MibTableColumn
vRtrIfIngressIpv4Flowspec = _VRtrIfIngressIpv4Flowspec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 2),
    _VRtrIfIngressIpv4Flowspec_Type()
)
vRtrIfIngressIpv4Flowspec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngressIpv4Flowspec.setStatus("obsolete")


class _VRtrIfInfo_Type(OctetString):
    """Custom type vRtrIfInfo based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 257),
    )


_VRtrIfInfo_Type.__name__ = "OctetString"
_VRtrIfInfo_Object = MibTableColumn
vRtrIfInfo = _VRtrIfInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 3),
    _VRtrIfInfo_Type()
)
vRtrIfInfo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfInfo.setStatus("obsolete")


class _VRtrIfInfoEncrypted_Type(TruthValue):
    """Custom type vRtrIfInfoEncrypted based on TruthValue"""
    defaultValue = 1


_VRtrIfInfoEncrypted_Type.__name__ = "TruthValue"
_VRtrIfInfoEncrypted_Object = MibTableColumn
vRtrIfInfoEncrypted = _VRtrIfInfoEncrypted_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 4),
    _VRtrIfInfoEncrypted_Type()
)
vRtrIfInfoEncrypted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfInfoEncrypted.setStatus("obsolete")


class _VRtrIfQosRouteLookup_Type(Integer32):
    """Custom type vRtrIfQosRouteLookup based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("destination", 1),
          ("source", 2))
    )


_VRtrIfQosRouteLookup_Type.__name__ = "Integer32"
_VRtrIfQosRouteLookup_Object = MibTableColumn
vRtrIfQosRouteLookup = _VRtrIfQosRouteLookup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 5),
    _VRtrIfQosRouteLookup_Type()
)
vRtrIfQosRouteLookup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosRouteLookup.setStatus("current")


class _VRtrIfIpv6QosRouteLookup_Type(Integer32):
    """Custom type vRtrIfIpv6QosRouteLookup based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("destination", 1),
          ("source", 2))
    )


_VRtrIfIpv6QosRouteLookup_Type.__name__ = "Integer32"
_VRtrIfIpv6QosRouteLookup_Object = MibTableColumn
vRtrIfIpv6QosRouteLookup = _VRtrIfIpv6QosRouteLookup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 6),
    _VRtrIfIpv6QosRouteLookup_Type()
)
vRtrIfIpv6QosRouteLookup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6QosRouteLookup.setStatus("current")
_VRtrIfStatusString_Type = DisplayString
_VRtrIfStatusString_Object = MibTableColumn
vRtrIfStatusString = _VRtrIfStatusString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 7),
    _VRtrIfStatusString_Type()
)
vRtrIfStatusString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfStatusString.setStatus("obsolete")


class _VRtrIfIpv6uRPFCheckState_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfIpv6uRPFCheckState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfIpv6uRPFCheckState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfIpv6uRPFCheckState_Object = MibTableColumn
vRtrIfIpv6uRPFCheckState = _VRtrIfIpv6uRPFCheckState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 8),
    _VRtrIfIpv6uRPFCheckState_Type()
)
vRtrIfIpv6uRPFCheckState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6uRPFCheckState.setStatus("current")


class _VRtrIfIpv6uRPFCheckMode_Type(TmnxUrpfCheckMode):
    """Custom type vRtrIfIpv6uRPFCheckMode based on TmnxUrpfCheckMode"""
    defaultValue = 1


_VRtrIfIpv6uRPFCheckMode_Type.__name__ = "TmnxUrpfCheckMode"
_VRtrIfIpv6uRPFCheckMode_Object = MibTableColumn
vRtrIfIpv6uRPFCheckMode = _VRtrIfIpv6uRPFCheckMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 9),
    _VRtrIfIpv6uRPFCheckMode_Type()
)
vRtrIfIpv6uRPFCheckMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6uRPFCheckMode.setStatus("current")


class _VRtrIfTmsOffRampVprn_Type(TmnxServId):
    """Custom type vRtrIfTmsOffRampVprn based on TmnxServId"""
    defaultValue = 0


_VRtrIfTmsOffRampVprn_Type.__name__ = "TmnxServId"
_VRtrIfTmsOffRampVprn_Object = MibTableColumn
vRtrIfTmsOffRampVprn = _VRtrIfTmsOffRampVprn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 10),
    _VRtrIfTmsOffRampVprn_Type()
)
vRtrIfTmsOffRampVprn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTmsOffRampVprn.setStatus("obsolete")


class _VRtrIfTmsMgmtVprn_Type(TmnxServId):
    """Custom type vRtrIfTmsMgmtVprn based on TmnxServId"""
    defaultValue = 0


_VRtrIfTmsMgmtVprn_Type.__name__ = "TmnxServId"
_VRtrIfTmsMgmtVprn_Object = MibTableColumn
vRtrIfTmsMgmtVprn = _VRtrIfTmsMgmtVprn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 11),
    _VRtrIfTmsMgmtVprn_Type()
)
vRtrIfTmsMgmtVprn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTmsMgmtVprn.setStatus("obsolete")


class _VRtrIfTrackMobile_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfTrackMobile based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfTrackMobile_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfTrackMobile_Object = MibTableColumn
vRtrIfTrackMobile = _VRtrIfTrackMobile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 12),
    _VRtrIfTrackMobile_Type()
)
vRtrIfTrackMobile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTrackMobile.setStatus("current")


class _VRtrIfIpv6TrackMobile_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfIpv6TrackMobile based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfIpv6TrackMobile_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfIpv6TrackMobile_Object = MibTableColumn
vRtrIfIpv6TrackMobile = _VRtrIfIpv6TrackMobile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 13),
    _VRtrIfIpv6TrackMobile_Type()
)
vRtrIfIpv6TrackMobile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6TrackMobile.setStatus("current")


class _VRtrIfIngressIpv6Flowspec_Type(TruthValue):
    """Custom type vRtrIfIngressIpv6Flowspec based on TruthValue"""
    defaultValue = 2


_VRtrIfIngressIpv6Flowspec_Type.__name__ = "TruthValue"
_VRtrIfIngressIpv6Flowspec_Object = MibTableColumn
vRtrIfIngressIpv6Flowspec = _VRtrIfIngressIpv6Flowspec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 14),
    _VRtrIfIngressIpv6Flowspec_Type()
)
vRtrIfIngressIpv6Flowspec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngressIpv6Flowspec.setStatus("obsolete")


class _VRtrIfLagLinkMapProfile_Type(TmnxLinkMapProfileIdOrZero):
    """Custom type vRtrIfLagLinkMapProfile based on TmnxLinkMapProfileIdOrZero"""
    defaultValue = 0


_VRtrIfLagLinkMapProfile_Type.__name__ = "TmnxLinkMapProfileIdOrZero"
_VRtrIfLagLinkMapProfile_Object = MibTableColumn
vRtrIfLagLinkMapProfile = _VRtrIfLagLinkMapProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 15),
    _VRtrIfLagLinkMapProfile_Type()
)
vRtrIfLagLinkMapProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLagLinkMapProfile.setStatus("current")
_VRtrIfLagActivePort_Type = TmnxPortID
_VRtrIfLagActivePort_Object = MibTableColumn
vRtrIfLagActivePort = _VRtrIfLagActivePort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 16),
    _VRtrIfLagActivePort_Type()
)
vRtrIfLagActivePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLagActivePort.setStatus("current")


class _VRtrIfDCpuProtPolicy_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfDCpuProtPolicy based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfDCpuProtPolicy_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfDCpuProtPolicy_Object = MibTableColumn
vRtrIfDCpuProtPolicy = _VRtrIfDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 17),
    _VRtrIfDCpuProtPolicy_Type()
)
vRtrIfDCpuProtPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDCpuProtPolicy.setStatus("current")


class _VRtrIfMcastNetworkDomainName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfMcastNetworkDomainName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfMcastNetworkDomainName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfMcastNetworkDomainName_Object = MibTableColumn
vRtrIfMcastNetworkDomainName = _VRtrIfMcastNetworkDomainName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 18),
    _VRtrIfMcastNetworkDomainName_Type()
)
vRtrIfMcastNetworkDomainName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfMcastNetworkDomainName.setStatus("current")


class _VRtrIfIngressStatsEnabled_Type(TruthValue):
    """Custom type vRtrIfIngressStatsEnabled based on TruthValue"""
    defaultValue = 2


_VRtrIfIngressStatsEnabled_Type.__name__ = "TruthValue"
_VRtrIfIngressStatsEnabled_Object = MibTableColumn
vRtrIfIngressStatsEnabled = _VRtrIfIngressStatsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 20),
    _VRtrIfIngressStatsEnabled_Type()
)
vRtrIfIngressStatsEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngressStatsEnabled.setStatus("current")


class _VRtrIfIpv6ReachableTime_Type(Unsigned32):
    """Custom type vRtrIfIpv6ReachableTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(30, 3600),
    )


_VRtrIfIpv6ReachableTime_Type.__name__ = "Unsigned32"
_VRtrIfIpv6ReachableTime_Object = MibTableColumn
vRtrIfIpv6ReachableTime = _VRtrIfIpv6ReachableTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 21),
    _VRtrIfIpv6ReachableTime_Type()
)
vRtrIfIpv6ReachableTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6ReachableTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIpv6ReachableTime.setUnits("seconds")


class _VRtrIfEnableMacAccounting_Type(TruthValue):
    """Custom type vRtrIfEnableMacAccounting based on TruthValue"""
    defaultValue = 2


_VRtrIfEnableMacAccounting_Type.__name__ = "TruthValue"
_VRtrIfEnableMacAccounting_Object = MibTableColumn
vRtrIfEnableMacAccounting = _VRtrIfEnableMacAccounting_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 23),
    _VRtrIfEnableMacAccounting_Type()
)
vRtrIfEnableMacAccounting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEnableMacAccounting.setStatus("current")


class _VRtrIfTcpMss_Type(Unsigned32):
    """Custom type vRtrIfTcpMss based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(384, 9746),
    )


_VRtrIfTcpMss_Type.__name__ = "Unsigned32"
_VRtrIfTcpMss_Object = MibTableColumn
vRtrIfTcpMss = _VRtrIfTcpMss_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 25),
    _VRtrIfTcpMss_Type()
)
vRtrIfTcpMss.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTcpMss.setStatus("current")


class _VRtrIfIpv6TcpMss_Type(Unsigned32):
    """Custom type vRtrIfIpv6TcpMss based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1220, 9726),
    )


_VRtrIfIpv6TcpMss_Type.__name__ = "Unsigned32"
_VRtrIfIpv6TcpMss_Object = MibTableColumn
vRtrIfIpv6TcpMss = _VRtrIfIpv6TcpMss_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 26),
    _VRtrIfIpv6TcpMss_Type()
)
vRtrIfIpv6TcpMss.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6TcpMss.setStatus("current")


class _VRtrIfuRPFIgnoreDefault_Type(TruthValue):
    """Custom type vRtrIfuRPFIgnoreDefault based on TruthValue"""
    defaultValue = 2


_VRtrIfuRPFIgnoreDefault_Type.__name__ = "TruthValue"
_VRtrIfuRPFIgnoreDefault_Object = MibTableColumn
vRtrIfuRPFIgnoreDefault = _VRtrIfuRPFIgnoreDefault_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 27),
    _VRtrIfuRPFIgnoreDefault_Type()
)
vRtrIfuRPFIgnoreDefault.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfuRPFIgnoreDefault.setStatus("current")


class _VRtrIfIpv6uRPFIgnoreDefault_Type(TruthValue):
    """Custom type vRtrIfIpv6uRPFIgnoreDefault based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6uRPFIgnoreDefault_Type.__name__ = "TruthValue"
_VRtrIfIpv6uRPFIgnoreDefault_Object = MibTableColumn
vRtrIfIpv6uRPFIgnoreDefault = _VRtrIfIpv6uRPFIgnoreDefault_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 28),
    _VRtrIfIpv6uRPFIgnoreDefault_Type()
)
vRtrIfIpv6uRPFIgnoreDefault.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6uRPFIgnoreDefault.setStatus("current")


class _VRtrIfIpv6DadDisable_Type(TruthValue):
    """Custom type vRtrIfIpv6DadDisable based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6DadDisable_Type.__name__ = "TruthValue"
_VRtrIfIpv6DadDisable_Object = MibTableColumn
vRtrIfIpv6DadDisable = _VRtrIfIpv6DadDisable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 35),
    _VRtrIfIpv6DadDisable_Type()
)
vRtrIfIpv6DadDisable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6DadDisable.setStatus("current")


class _VRtrIfTeidLoadBalancing_Type(TruthValue):
    """Custom type vRtrIfTeidLoadBalancing based on TruthValue"""
    defaultValue = 2


_VRtrIfTeidLoadBalancing_Type.__name__ = "TruthValue"
_VRtrIfTeidLoadBalancing_Object = MibTableColumn
vRtrIfTeidLoadBalancing = _VRtrIfTeidLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 36),
    _VRtrIfTeidLoadBalancing_Type()
)
vRtrIfTeidLoadBalancing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTeidLoadBalancing.setStatus("current")


class _VRtrIfEgrIpLoadBalancing_Type(Integer32):
    """Custom type vRtrIfEgrIpLoadBalancing based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 0),
          ("destination", 1),
          ("source", 2),
          ("innerIp", 3))
    )


_VRtrIfEgrIpLoadBalancing_Type.__name__ = "Integer32"
_VRtrIfEgrIpLoadBalancing_Object = MibTableColumn
vRtrIfEgrIpLoadBalancing = _VRtrIfEgrIpLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 37),
    _VRtrIfEgrIpLoadBalancing_Type()
)
vRtrIfEgrIpLoadBalancing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEgrIpLoadBalancing.setStatus("current")


class _VRtrIfPlcyAcctTemplateName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfPlcyAcctTemplateName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfPlcyAcctTemplateName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfPlcyAcctTemplateName_Object = MibTableColumn
vRtrIfPlcyAcctTemplateName = _VRtrIfPlcyAcctTemplateName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 38),
    _VRtrIfPlcyAcctTemplateName_Type()
)
vRtrIfPlcyAcctTemplateName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfPlcyAcctTemplateName.setStatus("current")


class _VRtrIfIpv6NdCacheStaleTime_Type(Unsigned32):
    """Custom type vRtrIfIpv6NdCacheStaleTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 65535),
    )


_VRtrIfIpv6NdCacheStaleTime_Type.__name__ = "Unsigned32"
_VRtrIfIpv6NdCacheStaleTime_Object = MibTableColumn
vRtrIfIpv6NdCacheStaleTime = _VRtrIfIpv6NdCacheStaleTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 39),
    _VRtrIfIpv6NdCacheStaleTime_Type()
)
vRtrIfIpv6NdCacheStaleTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdCacheStaleTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdCacheStaleTime.setUnits("seconds")


class _VRtrIfTmsOffRampIgrVrf_Type(TmnxVRtrIDOrZero):
    """Custom type vRtrIfTmsOffRampIgrVrf based on TmnxVRtrIDOrZero"""
    defaultValue = 0


_VRtrIfTmsOffRampIgrVrf_Type.__name__ = "TmnxVRtrIDOrZero"
_VRtrIfTmsOffRampIgrVrf_Object = MibTableColumn
vRtrIfTmsOffRampIgrVrf = _VRtrIfTmsOffRampIgrVrf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 41),
    _VRtrIfTmsOffRampIgrVrf_Type()
)
vRtrIfTmsOffRampIgrVrf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfTmsOffRampIgrVrf.setStatus("obsolete")


class _VRtrIfArpRetryTimer_Type(Unsigned32):
    """Custom type vRtrIfArpRetryTimer based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_VRtrIfArpRetryTimer_Type.__name__ = "Unsigned32"
_VRtrIfArpRetryTimer_Object = MibTableColumn
vRtrIfArpRetryTimer = _VRtrIfArpRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 42),
    _VRtrIfArpRetryTimer_Type()
)
vRtrIfArpRetryTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpRetryTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfArpRetryTimer.setUnits("deciseconds")


class _VRtrIfSpiLoadBalancing_Type(TruthValue):
    """Custom type vRtrIfSpiLoadBalancing based on TruthValue"""
    defaultValue = 2


_VRtrIfSpiLoadBalancing_Type.__name__ = "TruthValue"
_VRtrIfSpiLoadBalancing_Object = MibTableColumn
vRtrIfSpiLoadBalancing = _VRtrIfSpiLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 46),
    _VRtrIfSpiLoadBalancing_Type()
)
vRtrIfSpiLoadBalancing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfSpiLoadBalancing.setStatus("current")


class _VRtrIfArpLimit_Type(Integer32):
    """Custom type vRtrIfArpLimit based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 524288),
    )


_VRtrIfArpLimit_Type.__name__ = "Integer32"
_VRtrIfArpLimit_Object = MibTableColumn
vRtrIfArpLimit = _VRtrIfArpLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 47),
    _VRtrIfArpLimit_Type()
)
vRtrIfArpLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpLimit.setStatus("current")


class _VRtrIfArpLogOnly_Type(TruthValue):
    """Custom type vRtrIfArpLogOnly based on TruthValue"""
    defaultValue = 2


_VRtrIfArpLogOnly_Type.__name__ = "TruthValue"
_VRtrIfArpLogOnly_Object = MibTableColumn
vRtrIfArpLogOnly = _VRtrIfArpLogOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 48),
    _VRtrIfArpLogOnly_Type()
)
vRtrIfArpLogOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpLogOnly.setStatus("current")


class _VRtrIfArpThreshold_Type(Unsigned32):
    """Custom type vRtrIfArpThreshold based on Unsigned32"""
    defaultValue = 90

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VRtrIfArpThreshold_Type.__name__ = "Unsigned32"
_VRtrIfArpThreshold_Object = MibTableColumn
vRtrIfArpThreshold = _VRtrIfArpThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 49),
    _VRtrIfArpThreshold_Type()
)
vRtrIfArpThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfArpThreshold.setUnits("percent")


class _VRtrIfVasIfType_Type(Integer32):
    """Custom type vRtrIfVasIfType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("toFromAccess", 1),
          ("toFromNetwork", 2),
          ("toFromBoth", 3))
    )


_VRtrIfVasIfType_Type.__name__ = "Integer32"
_VRtrIfVasIfType_Object = MibTableColumn
vRtrIfVasIfType = _VRtrIfVasIfType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 50),
    _VRtrIfVasIfType_Type()
)
vRtrIfVasIfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfVasIfType.setStatus("current")


class _VRtrIfIpv6NbrLimit_Type(Integer32):
    """Custom type vRtrIfIpv6NbrLimit based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 102400),
    )


_VRtrIfIpv6NbrLimit_Type.__name__ = "Integer32"
_VRtrIfIpv6NbrLimit_Object = MibTableColumn
vRtrIfIpv6NbrLimit = _VRtrIfIpv6NbrLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 51),
    _VRtrIfIpv6NbrLimit_Type()
)
vRtrIfIpv6NbrLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NbrLimit.setStatus("current")


class _VRtrIfIpv6NbrLogOnly_Type(TruthValue):
    """Custom type vRtrIfIpv6NbrLogOnly based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6NbrLogOnly_Type.__name__ = "TruthValue"
_VRtrIfIpv6NbrLogOnly_Object = MibTableColumn
vRtrIfIpv6NbrLogOnly = _VRtrIfIpv6NbrLogOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 52),
    _VRtrIfIpv6NbrLogOnly_Type()
)
vRtrIfIpv6NbrLogOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NbrLogOnly.setStatus("current")


class _VRtrIfIpv6NbrThreshold_Type(Unsigned32):
    """Custom type vRtrIfIpv6NbrThreshold based on Unsigned32"""
    defaultValue = 90

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_VRtrIfIpv6NbrThreshold_Type.__name__ = "Unsigned32"
_VRtrIfIpv6NbrThreshold_Object = MibTableColumn
vRtrIfIpv6NbrThreshold = _VRtrIfIpv6NbrThreshold_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 53),
    _VRtrIfIpv6NbrThreshold_Type()
)
vRtrIfIpv6NbrThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NbrThreshold.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIpv6NbrThreshold.setUnits("percent")


class _VRtrIfDelayV4UpSeconds_Type(Unsigned32):
    """Custom type vRtrIfDelayV4UpSeconds based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1200),
    )


_VRtrIfDelayV4UpSeconds_Type.__name__ = "Unsigned32"
_VRtrIfDelayV4UpSeconds_Object = MibTableColumn
vRtrIfDelayV4UpSeconds = _VRtrIfDelayV4UpSeconds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 54),
    _VRtrIfDelayV4UpSeconds_Type()
)
vRtrIfDelayV4UpSeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDelayV4UpSeconds.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV4UpSeconds.setUnits("seconds")


class _VRtrIfDelayV4DownSeconds_Type(Unsigned32):
    """Custom type vRtrIfDelayV4DownSeconds based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1200),
    )


_VRtrIfDelayV4DownSeconds_Type.__name__ = "Unsigned32"
_VRtrIfDelayV4DownSeconds_Object = MibTableColumn
vRtrIfDelayV4DownSeconds = _VRtrIfDelayV4DownSeconds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 55),
    _VRtrIfDelayV4DownSeconds_Type()
)
vRtrIfDelayV4DownSeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDelayV4DownSeconds.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV4DownSeconds.setUnits("seconds")


class _VRtrIfDelayV6UpSeconds_Type(Unsigned32):
    """Custom type vRtrIfDelayV6UpSeconds based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1200),
    )


_VRtrIfDelayV6UpSeconds_Type.__name__ = "Unsigned32"
_VRtrIfDelayV6UpSeconds_Object = MibTableColumn
vRtrIfDelayV6UpSeconds = _VRtrIfDelayV6UpSeconds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 56),
    _VRtrIfDelayV6UpSeconds_Type()
)
vRtrIfDelayV6UpSeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDelayV6UpSeconds.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV6UpSeconds.setUnits("seconds")


class _VRtrIfDelayV6DownSeconds_Type(Unsigned32):
    """Custom type vRtrIfDelayV6DownSeconds based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1200),
    )


_VRtrIfDelayV6DownSeconds_Type.__name__ = "Unsigned32"
_VRtrIfDelayV6DownSeconds_Object = MibTableColumn
vRtrIfDelayV6DownSeconds = _VRtrIfDelayV6DownSeconds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 57),
    _VRtrIfDelayV6DownSeconds_Type()
)
vRtrIfDelayV6DownSeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDelayV6DownSeconds.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV6DownSeconds.setUnits("seconds")
_VRtrIfDelayV4Timer_Type = Integer32
_VRtrIfDelayV4Timer_Object = MibTableColumn
vRtrIfDelayV4Timer = _VRtrIfDelayV4Timer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 58),
    _VRtrIfDelayV4Timer_Type()
)
vRtrIfDelayV4Timer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDelayV4Timer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV4Timer.setUnits("seconds")
_VRtrIfDelayV6Timer_Type = Integer32
_VRtrIfDelayV6Timer_Object = MibTableColumn
vRtrIfDelayV6Timer = _VRtrIfDelayV6Timer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 59),
    _VRtrIfDelayV6Timer_Type()
)
vRtrIfDelayV6Timer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDelayV6Timer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDelayV6Timer.setUnits("seconds")


class _VRtrIfInitDelayV4Enable_Type(TruthValue):
    """Custom type vRtrIfInitDelayV4Enable based on TruthValue"""
    defaultValue = 2


_VRtrIfInitDelayV4Enable_Type.__name__ = "TruthValue"
_VRtrIfInitDelayV4Enable_Object = MibTableColumn
vRtrIfInitDelayV4Enable = _VRtrIfInitDelayV4Enable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 60),
    _VRtrIfInitDelayV4Enable_Type()
)
vRtrIfInitDelayV4Enable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfInitDelayV4Enable.setStatus("current")


class _VRtrIfInitDelayV6Enable_Type(TruthValue):
    """Custom type vRtrIfInitDelayV6Enable based on TruthValue"""
    defaultValue = 2


_VRtrIfInitDelayV6Enable_Type.__name__ = "TruthValue"
_VRtrIfInitDelayV6Enable_Object = MibTableColumn
vRtrIfInitDelayV6Enable = _VRtrIfInitDelayV6Enable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 61),
    _VRtrIfInitDelayV6Enable_Type()
)
vRtrIfInitDelayV6Enable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfInitDelayV6Enable.setStatus("current")


class _VRtrIfOperV4DownReason_Type(Bits):
    """Custom type vRtrIfOperV4DownReason based on Bits"""
    namedValues = NamedValues(
        *(("ifAdminDown", 0),
          ("svcAdminDown", 1),
          ("portOperDown", 2),
          ("addrOrIfNotReady", 3),
          ("assocObjNotReady", 4),
          ("rvplsDown", 5),
          ("operGrpDown", 6),
          ("ifAdminDestroy", 7),
          ("noIfAddress", 8),
          ("noIfInfo", 9),
          ("delayedStartEnabled", 10),
          ("ifProtoOperDown", 11),
          ("invalidPortCfg", 12),
          ("unknown", 13),
          ("noRouteDistinguisher", 14),
          ("wlanGwRedundancyStandby", 15),
          ("wlanGwGroupDegraded", 16),
          ("ipControlTunnelOperDown", 17),
          ("pdnAddressMismatch", 18),
          ("pingCheckFailure", 19),
          ("portInternalLoopback", 20))
    )

_VRtrIfOperV4DownReason_Type.__name__ = "Bits"
_VRtrIfOperV4DownReason_Object = MibTableColumn
vRtrIfOperV4DownReason = _VRtrIfOperV4DownReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 62),
    _VRtrIfOperV4DownReason_Type()
)
vRtrIfOperV4DownReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperV4DownReason.setStatus("current")


class _VRtrIfOperV6DownReason_Type(Bits):
    """Custom type vRtrIfOperV6DownReason based on Bits"""
    namedValues = NamedValues(
        *(("ifAdminDown", 0),
          ("svcAdminDown", 1),
          ("portOperDown", 2),
          ("addrOrIfNotReady", 3),
          ("assocObjNotReady", 4),
          ("rvplsDown", 5),
          ("operGrpDown", 6),
          ("ifAdminDestroy", 7),
          ("noIfAddress", 8),
          ("noIfInfo", 9),
          ("delayedStartEnabled", 10),
          ("ifProtoOperDown", 11),
          ("invalidPortCfg", 12),
          ("unknown", 13),
          ("noRouteDistinguisher", 14),
          ("wlanGwRedundancyStandby", 15),
          ("wlanGwGroupDegraded", 16),
          ("ipControlTunnelOperDown", 17),
          ("pdnAddressMismatch", 18),
          ("pingCheckFailure", 19),
          ("portInternalLoopback", 20))
    )

_VRtrIfOperV6DownReason_Type.__name__ = "Bits"
_VRtrIfOperV6DownReason_Object = MibTableColumn
vRtrIfOperV6DownReason = _VRtrIfOperV6DownReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 63),
    _VRtrIfOperV6DownReason_Type()
)
vRtrIfOperV6DownReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperV6DownReason.setStatus("current")


class _VRtrIfLdpEolib_Type(TruthValue):
    """Custom type vRtrIfLdpEolib based on TruthValue"""
    defaultValue = 2


_VRtrIfLdpEolib_Type.__name__ = "TruthValue"
_VRtrIfLdpEolib_Object = MibTableColumn
vRtrIfLdpEolib = _VRtrIfLdpEolib_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 64),
    _VRtrIfLdpEolib_Type()
)
vRtrIfLdpEolib.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLdpEolib.setStatus("current")


class _VRtrIfCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type vRtrIfCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_VRtrIfCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_VRtrIfCreationOrigin_Object = MibTableColumn
vRtrIfCreationOrigin = _VRtrIfCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 67),
    _VRtrIfCreationOrigin_Type()
)
vRtrIfCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfCreationOrigin.setStatus("current")


class _VRtrIfIcmpV4ParamProblem_Type(TruthValue):
    """Custom type vRtrIfIcmpV4ParamProblem based on TruthValue"""
    defaultValue = 1


_VRtrIfIcmpV4ParamProblem_Type.__name__ = "TruthValue"
_VRtrIfIcmpV4ParamProblem_Object = MibTableColumn
vRtrIfIcmpV4ParamProblem = _VRtrIfIcmpV4ParamProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 68),
    _VRtrIfIcmpV4ParamProblem_Type()
)
vRtrIfIcmpV4ParamProblem.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV4ParamProblem.setStatus("current")


class _VRtrIfIcmpV4NumParamProblem_Type(Unsigned32):
    """Custom type vRtrIfIcmpV4NumParamProblem based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_VRtrIfIcmpV4NumParamProblem_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV4NumParamProblem_Object = MibTableColumn
vRtrIfIcmpV4NumParamProblem = _VRtrIfIcmpV4NumParamProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 69),
    _VRtrIfIcmpV4NumParamProblem_Type()
)
vRtrIfIcmpV4NumParamProblem.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV4NumParamProblem.setStatus("current")


class _VRtrIfIcmpV4ParamProblemTime_Type(Unsigned32):
    """Custom type vRtrIfIcmpV4ParamProblemTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_VRtrIfIcmpV4ParamProblemTime_Type.__name__ = "Unsigned32"
_VRtrIfIcmpV4ParamProblemTime_Object = MibTableColumn
vRtrIfIcmpV4ParamProblemTime = _VRtrIfIcmpV4ParamProblemTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 70),
    _VRtrIfIcmpV4ParamProblemTime_Type()
)
vRtrIfIcmpV4ParamProblemTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIcmpV4ParamProblemTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfIcmpV4ParamProblemTime.setUnits("seconds")
_VRtrIfOperDCpuProtPolicy_Type = TNamedItemOrEmpty
_VRtrIfOperDCpuProtPolicy_Object = MibTableColumn
vRtrIfOperDCpuProtPolicy = _VRtrIfOperDCpuProtPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 71),
    _VRtrIfOperDCpuProtPolicy_Type()
)
vRtrIfOperDCpuProtPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfOperDCpuProtPolicy.setStatus("current")


class _VRtrIfUrpfSelectedVprnsOnly_Type(TruthValue):
    """Custom type vRtrIfUrpfSelectedVprnsOnly based on TruthValue"""
    defaultValue = 2


_VRtrIfUrpfSelectedVprnsOnly_Type.__name__ = "TruthValue"
_VRtrIfUrpfSelectedVprnsOnly_Object = MibTableColumn
vRtrIfUrpfSelectedVprnsOnly = _VRtrIfUrpfSelectedVprnsOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 72),
    _VRtrIfUrpfSelectedVprnsOnly_Type()
)
vRtrIfUrpfSelectedVprnsOnly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfUrpfSelectedVprnsOnly.setStatus("current")


class _VRtrIfIpTunnelRemoteIpAddrType_Type(InetAddressType):
    """Custom type vRtrIfIpTunnelRemoteIpAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrIfIpTunnelRemoteIpAddrType_Type.__name__ = "InetAddressType"
_VRtrIfIpTunnelRemoteIpAddrType_Object = MibTableColumn
vRtrIfIpTunnelRemoteIpAddrType = _VRtrIfIpTunnelRemoteIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 75),
    _VRtrIfIpTunnelRemoteIpAddrType_Type()
)
vRtrIfIpTunnelRemoteIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpTunnelRemoteIpAddrType.setStatus("current")


class _VRtrIfIpTunnelRemoteIpAddr_Type(InetAddress):
    """Custom type vRtrIfIpTunnelRemoteIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfIpTunnelRemoteIpAddr_Type.__name__ = "InetAddress"
_VRtrIfIpTunnelRemoteIpAddr_Object = MibTableColumn
vRtrIfIpTunnelRemoteIpAddr = _VRtrIfIpTunnelRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 76),
    _VRtrIfIpTunnelRemoteIpAddr_Type()
)
vRtrIfIpTunnelRemoteIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpTunnelRemoteIpAddr.setStatus("current")


class _VRtrIfIpv4ArpLearnUnsol_Type(TruthValue):
    """Custom type vRtrIfIpv4ArpLearnUnsol based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv4ArpLearnUnsol_Type.__name__ = "TruthValue"
_VRtrIfIpv4ArpLearnUnsol_Object = MibTableColumn
vRtrIfIpv4ArpLearnUnsol = _VRtrIfIpv4ArpLearnUnsol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 78),
    _VRtrIfIpv4ArpLearnUnsol_Type()
)
vRtrIfIpv4ArpLearnUnsol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv4ArpLearnUnsol.setStatus("current")


class _VRtrIfIpv4ArpProRef_Type(TruthValue):
    """Custom type vRtrIfIpv4ArpProRef based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv4ArpProRef_Type.__name__ = "TruthValue"
_VRtrIfIpv4ArpProRef_Object = MibTableColumn
vRtrIfIpv4ArpProRef = _VRtrIfIpv4ArpProRef_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 79),
    _VRtrIfIpv4ArpProRef_Type()
)
vRtrIfIpv4ArpProRef.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv4ArpProRef.setStatus("current")


class _VRtrIfIpv6NdLearnUnsol_Type(Integer32):
    """Custom type vRtrIfIpv6NdLearnUnsol based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("global", 1),
          ("linkLocal", 2),
          ("both", 3))
    )


_VRtrIfIpv6NdLearnUnsol_Type.__name__ = "Integer32"
_VRtrIfIpv6NdLearnUnsol_Object = MibTableColumn
vRtrIfIpv6NdLearnUnsol = _VRtrIfIpv6NdLearnUnsol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 80),
    _VRtrIfIpv6NdLearnUnsol_Type()
)
vRtrIfIpv6NdLearnUnsol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdLearnUnsol.setStatus("current")


class _VRtrIfIpv6NdProRef_Type(Integer32):
    """Custom type vRtrIfIpv6NdProRef based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("global", 1),
          ("linkLocal", 2),
          ("both", 3))
    )


_VRtrIfIpv6NdProRef_Type.__name__ = "Integer32"
_VRtrIfIpv6NdProRef_Object = MibTableColumn
vRtrIfIpv6NdProRef = _VRtrIfIpv6NdProRef_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 81),
    _VRtrIfIpv6NdProRef_Type()
)
vRtrIfIpv6NdProRef.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdProRef.setStatus("current")


class _VRtrIfIpv6FlowLabelHashing_Type(TruthValue):
    """Custom type vRtrIfIpv6FlowLabelHashing based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6FlowLabelHashing_Type.__name__ = "TruthValue"
_VRtrIfIpv6FlowLabelHashing_Object = MibTableColumn
vRtrIfIpv6FlowLabelHashing = _VRtrIfIpv6FlowLabelHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 82),
    _VRtrIfIpv6FlowLabelHashing_Type()
)
vRtrIfIpv6FlowLabelHashing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6FlowLabelHashing.setStatus("current")


class _VRtrIfIngressIPFilterPair_Type(TruthValue):
    """Custom type vRtrIfIngressIPFilterPair based on TruthValue"""
    defaultValue = 2


_VRtrIfIngressIPFilterPair_Type.__name__ = "TruthValue"
_VRtrIfIngressIPFilterPair_Object = MibTableColumn
vRtrIfIngressIPFilterPair = _VRtrIfIngressIPFilterPair_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 61, 1, 83),
    _VRtrIfIngressIPFilterPair_Type()
)
vRtrIfIngressIPFilterPair.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngressIPFilterPair.setStatus("current")
_VRtrRsvpTunIfTableLastChanged_Type = TimeStamp
_VRtrRsvpTunIfTableLastChanged_Object = MibScalar
vRtrRsvpTunIfTableLastChanged = _VRtrRsvpTunIfTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 62),
    _VRtrRsvpTunIfTableLastChanged_Type()
)
vRtrRsvpTunIfTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfTableLastChanged.setStatus("current")
_VRtrRsvpTunIfEntryTable_Object = MibTable
vRtrRsvpTunIfEntryTable = _VRtrRsvpTunIfEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63)
)
if mibBuilder.loadTexts:
    vRtrRsvpTunIfEntryTable.setStatus("current")
_VRtrRsvpTunIfEntry_Object = MibTableRow
vRtrRsvpTunIfEntry = _VRtrRsvpTunIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1)
)
vRtrRsvpTunIfEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfLspName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSenderAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSenderAddr"),
)
if mibBuilder.loadTexts:
    vRtrRsvpTunIfEntry.setStatus("current")
_VRtrRsvpTunIfLspName_Type = TNamedItem
_VRtrRsvpTunIfLspName_Object = MibTableColumn
vRtrRsvpTunIfLspName = _VRtrRsvpTunIfLspName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 1),
    _VRtrRsvpTunIfLspName_Type()
)
vRtrRsvpTunIfLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfLspName.setStatus("current")
_VRtrRsvpTunIfSenderAddrType_Type = InetAddressType
_VRtrRsvpTunIfSenderAddrType_Object = MibTableColumn
vRtrRsvpTunIfSenderAddrType = _VRtrRsvpTunIfSenderAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 2),
    _VRtrRsvpTunIfSenderAddrType_Type()
)
vRtrRsvpTunIfSenderAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSenderAddrType.setStatus("current")


class _VRtrRsvpTunIfSenderAddr_Type(InetAddress):
    """Custom type vRtrRsvpTunIfSenderAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrRsvpTunIfSenderAddr_Type.__name__ = "InetAddress"
_VRtrRsvpTunIfSenderAddr_Object = MibTableColumn
vRtrRsvpTunIfSenderAddr = _VRtrRsvpTunIfSenderAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 3),
    _VRtrRsvpTunIfSenderAddr_Type()
)
vRtrRsvpTunIfSenderAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSenderAddr.setStatus("current")
_VRtrRsvpTunIfRowStatus_Type = RowStatus
_VRtrRsvpTunIfRowStatus_Object = MibTableColumn
vRtrRsvpTunIfRowStatus = _VRtrRsvpTunIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 4),
    _VRtrRsvpTunIfRowStatus_Type()
)
vRtrRsvpTunIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfRowStatus.setStatus("current")
_VRtrRsvpTunIfLastChanged_Type = TimeStamp
_VRtrRsvpTunIfLastChanged_Object = MibTableColumn
vRtrRsvpTunIfLastChanged = _VRtrRsvpTunIfLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 5),
    _VRtrRsvpTunIfLastChanged_Type()
)
vRtrRsvpTunIfLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfLastChanged.setStatus("current")


class _VRtrRsvpTunIfSessionId_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfSessionId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4000),
    )


_VRtrRsvpTunIfSessionId_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfSessionId_Object = MibTableColumn
vRtrRsvpTunIfSessionId = _VRtrRsvpTunIfSessionId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 6),
    _VRtrRsvpTunIfSessionId_Type()
)
vRtrRsvpTunIfSessionId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSessionId.setStatus("current")


class _VRtrRsvpTunIfTransmitInt_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfTransmitInt based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(100, 100000),
    )


_VRtrRsvpTunIfTransmitInt_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfTransmitInt_Object = MibTableColumn
vRtrRsvpTunIfTransmitInt = _VRtrRsvpTunIfTransmitInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 7),
    _VRtrRsvpTunIfTransmitInt_Type()
)
vRtrRsvpTunIfTransmitInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfTransmitInt.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfTransmitInt.setUnits("milliseconds")


class _VRtrRsvpTunIfMultiplier_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfMultiplier based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(3, 20),
    )


_VRtrRsvpTunIfMultiplier_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfMultiplier_Object = MibTableColumn
vRtrRsvpTunIfMultiplier = _VRtrRsvpTunIfMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 8),
    _VRtrRsvpTunIfMultiplier_Type()
)
vRtrRsvpTunIfMultiplier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfMultiplier.setStatus("current")


class _VRtrRsvpTunIfStandbyLspName_Type(TNamedItemOrEmpty):
    """Custom type vRtrRsvpTunIfStandbyLspName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrRsvpTunIfStandbyLspName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrRsvpTunIfStandbyLspName_Object = MibTableColumn
vRtrRsvpTunIfStandbyLspName = _VRtrRsvpTunIfStandbyLspName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 9),
    _VRtrRsvpTunIfStandbyLspName_Type()
)
vRtrRsvpTunIfStandbyLspName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfStandbyLspName.setStatus("current")


class _VRtrRsvpTunIfStandbyAddrType_Type(InetAddressType):
    """Custom type vRtrRsvpTunIfStandbyAddrType based on InetAddressType"""
    defaultValue = 1


_VRtrRsvpTunIfStandbyAddrType_Type.__name__ = "InetAddressType"
_VRtrRsvpTunIfStandbyAddrType_Object = MibTableColumn
vRtrRsvpTunIfStandbyAddrType = _VRtrRsvpTunIfStandbyAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 10),
    _VRtrRsvpTunIfStandbyAddrType_Type()
)
vRtrRsvpTunIfStandbyAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfStandbyAddrType.setStatus("current")


class _VRtrRsvpTunIfStandbyAddr_Type(InetAddress):
    """Custom type vRtrRsvpTunIfStandbyAddr based on InetAddress"""
    defaultHexValue = "00000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrRsvpTunIfStandbyAddr_Type.__name__ = "InetAddress"
_VRtrRsvpTunIfStandbyAddr_Object = MibTableColumn
vRtrRsvpTunIfStandbyAddr = _VRtrRsvpTunIfStandbyAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 11),
    _VRtrRsvpTunIfStandbyAddr_Type()
)
vRtrRsvpTunIfStandbyAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfStandbyAddr.setStatus("current")
_VRtrRsvpTunIfIfIndex_Type = InterfaceIndex
_VRtrRsvpTunIfIfIndex_Object = MibTableColumn
vRtrRsvpTunIfIfIndex = _VRtrRsvpTunIfIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 12),
    _VRtrRsvpTunIfIfIndex_Type()
)
vRtrRsvpTunIfIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfIfIndex.setStatus("current")


class _VRtrRsvpTunIfHoldTimer_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfHoldTimer based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30),
    )


_VRtrRsvpTunIfHoldTimer_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfHoldTimer_Object = MibTableColumn
vRtrRsvpTunIfHoldTimer = _VRtrRsvpTunIfHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 13),
    _VRtrRsvpTunIfHoldTimer_Type()
)
vRtrRsvpTunIfHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfHoldTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfHoldTimer.setUnits("seconds")


class _VRtrRsvpTunIfStandbySessionId_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfStandbySessionId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4000),
    )


_VRtrRsvpTunIfStandbySessionId_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfStandbySessionId_Object = MibTableColumn
vRtrRsvpTunIfStandbySessionId = _VRtrRsvpTunIfStandbySessionId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 14),
    _VRtrRsvpTunIfStandbySessionId_Type()
)
vRtrRsvpTunIfStandbySessionId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfStandbySessionId.setStatus("current")
_VRtrRsvpTunIfStandbyIfIndex_Type = InterfaceIndexOrZero
_VRtrRsvpTunIfStandbyIfIndex_Object = MibTableColumn
vRtrRsvpTunIfStandbyIfIndex = _VRtrRsvpTunIfStandbyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 15),
    _VRtrRsvpTunIfStandbyIfIndex_Type()
)
vRtrRsvpTunIfStandbyIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfStandbyIfIndex.setStatus("current")


class _VRtrRsvpTunIfDescription_Type(TItemDescription):
    """Custom type vRtrRsvpTunIfDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrRsvpTunIfDescription_Type.__name__ = "TItemDescription"
_VRtrRsvpTunIfDescription_Object = MibTableColumn
vRtrRsvpTunIfDescription = _VRtrRsvpTunIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 63, 1, 16),
    _VRtrRsvpTunIfDescription_Type()
)
vRtrRsvpTunIfDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfDescription.setStatus("current")
_VRtrRsvpTunIfSrcTableLastChanged_Type = TimeStamp
_VRtrRsvpTunIfSrcTableLastChanged_Object = MibScalar
vRtrRsvpTunIfSrcTableLastChanged = _VRtrRsvpTunIfSrcTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 64),
    _VRtrRsvpTunIfSrcTableLastChanged_Type()
)
vRtrRsvpTunIfSrcTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcTableLastChanged.setStatus("current")
_VRtrRsvpTunIfSrcEntryTable_Object = MibTable
vRtrRsvpTunIfSrcEntryTable = _VRtrRsvpTunIfSrcEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65)
)
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcEntryTable.setStatus("current")
_VRtrRsvpTunIfSrcEntry_Object = MibTableRow
vRtrRsvpTunIfSrcEntry = _VRtrRsvpTunIfSrcEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1)
)
vRtrRsvpTunIfSrcEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfLspName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSenderAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSenderAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcAddr"),
)
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcEntry.setStatus("current")
_VRtrRsvpTunIfSrcAddrType_Type = InetAddressType
_VRtrRsvpTunIfSrcAddrType_Object = MibTableColumn
vRtrRsvpTunIfSrcAddrType = _VRtrRsvpTunIfSrcAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 1),
    _VRtrRsvpTunIfSrcAddrType_Type()
)
vRtrRsvpTunIfSrcAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcAddrType.setStatus("current")


class _VRtrRsvpTunIfSrcAddr_Type(InetAddress):
    """Custom type vRtrRsvpTunIfSrcAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrRsvpTunIfSrcAddr_Type.__name__ = "InetAddress"
_VRtrRsvpTunIfSrcAddr_Object = MibTableColumn
vRtrRsvpTunIfSrcAddr = _VRtrRsvpTunIfSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 2),
    _VRtrRsvpTunIfSrcAddr_Type()
)
vRtrRsvpTunIfSrcAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcAddr.setStatus("current")
_VRtrRsvpTunIfSrcRowStatus_Type = RowStatus
_VRtrRsvpTunIfSrcRowStatus_Object = MibTableColumn
vRtrRsvpTunIfSrcRowStatus = _VRtrRsvpTunIfSrcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 3),
    _VRtrRsvpTunIfSrcRowStatus_Type()
)
vRtrRsvpTunIfSrcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcRowStatus.setStatus("current")
_VRtrRsvpTunIfSrcLastChanged_Type = TimeStamp
_VRtrRsvpTunIfSrcLastChanged_Object = MibTableColumn
vRtrRsvpTunIfSrcLastChanged = _VRtrRsvpTunIfSrcLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 4),
    _VRtrRsvpTunIfSrcLastChanged_Type()
)
vRtrRsvpTunIfSrcLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcLastChanged.setStatus("current")


class _VRtrRsvpTunIfSrcBfdEnable_Type(TruthValue):
    """Custom type vRtrRsvpTunIfSrcBfdEnable based on TruthValue"""
    defaultValue = 2


_VRtrRsvpTunIfSrcBfdEnable_Type.__name__ = "TruthValue"
_VRtrRsvpTunIfSrcBfdEnable_Object = MibTableColumn
vRtrRsvpTunIfSrcBfdEnable = _VRtrRsvpTunIfSrcBfdEnable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 5),
    _VRtrRsvpTunIfSrcBfdEnable_Type()
)
vRtrRsvpTunIfSrcBfdEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcBfdEnable.setStatus("current")


class _VRtrRsvpTunIfSrcSessionId_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfSrcSessionId based on Unsigned32"""
    defaultValue = 0


_VRtrRsvpTunIfSrcSessionId_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfSrcSessionId_Object = MibTableColumn
vRtrRsvpTunIfSrcSessionId = _VRtrRsvpTunIfSrcSessionId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 6),
    _VRtrRsvpTunIfSrcSessionId_Type()
)
vRtrRsvpTunIfSrcSessionId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcSessionId.setStatus("current")


class _VRtrRsvpTunIfSrcTransmitInt_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfSrcTransmitInt based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(100, 100000),
    )


_VRtrRsvpTunIfSrcTransmitInt_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfSrcTransmitInt_Object = MibTableColumn
vRtrRsvpTunIfSrcTransmitInt = _VRtrRsvpTunIfSrcTransmitInt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 7),
    _VRtrRsvpTunIfSrcTransmitInt_Type()
)
vRtrRsvpTunIfSrcTransmitInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcTransmitInt.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcTransmitInt.setUnits("milliseconds")


class _VRtrRsvpTunIfSrcMultiplier_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfSrcMultiplier based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(3, 20),
    )


_VRtrRsvpTunIfSrcMultiplier_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfSrcMultiplier_Object = MibTableColumn
vRtrRsvpTunIfSrcMultiplier = _VRtrRsvpTunIfSrcMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 8),
    _VRtrRsvpTunIfSrcMultiplier_Type()
)
vRtrRsvpTunIfSrcMultiplier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcMultiplier.setStatus("current")


class _VRtrRsvpTunIfSrcStandbySessionId_Type(Unsigned32):
    """Custom type vRtrRsvpTunIfSrcStandbySessionId based on Unsigned32"""
    defaultValue = 0


_VRtrRsvpTunIfSrcStandbySessionId_Type.__name__ = "Unsigned32"
_VRtrRsvpTunIfSrcStandbySessionId_Object = MibTableColumn
vRtrRsvpTunIfSrcStandbySessionId = _VRtrRsvpTunIfSrcStandbySessionId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 65, 1, 9),
    _VRtrRsvpTunIfSrcStandbySessionId_Type()
)
vRtrRsvpTunIfSrcStandbySessionId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsvpTunIfSrcStandbySessionId.setStatus("current")
_VRtrLdpTunIfTableLastChanged_Type = TimeStamp
_VRtrLdpTunIfTableLastChanged_Object = MibScalar
vRtrLdpTunIfTableLastChanged = _VRtrLdpTunIfTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 66),
    _VRtrLdpTunIfTableLastChanged_Type()
)
vRtrLdpTunIfTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLdpTunIfTableLastChanged.setStatus("current")
_VRtrLdpTunIfEntryTable_Object = MibTable
vRtrLdpTunIfEntryTable = _VRtrLdpTunIfEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67)
)
if mibBuilder.loadTexts:
    vRtrLdpTunIfEntryTable.setStatus("current")
_VRtrLdpTunIfEntry_Object = MibTableRow
vRtrLdpTunIfEntry = _VRtrLdpTunIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1)
)
vRtrLdpTunIfEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrLdpTunIfP2mpId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrLdpTunIfSenderAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrLdpTunIfSenderAddr"),
)
if mibBuilder.loadTexts:
    vRtrLdpTunIfEntry.setStatus("current")
_VRtrLdpTunIfP2mpId_Type = Unsigned32
_VRtrLdpTunIfP2mpId_Object = MibTableColumn
vRtrLdpTunIfP2mpId = _VRtrLdpTunIfP2mpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 1),
    _VRtrLdpTunIfP2mpId_Type()
)
vRtrLdpTunIfP2mpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrLdpTunIfP2mpId.setStatus("current")
_VRtrLdpTunIfSenderAddrType_Type = InetAddressType
_VRtrLdpTunIfSenderAddrType_Object = MibTableColumn
vRtrLdpTunIfSenderAddrType = _VRtrLdpTunIfSenderAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 2),
    _VRtrLdpTunIfSenderAddrType_Type()
)
vRtrLdpTunIfSenderAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrLdpTunIfSenderAddrType.setStatus("current")


class _VRtrLdpTunIfSenderAddr_Type(InetAddress):
    """Custom type vRtrLdpTunIfSenderAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrLdpTunIfSenderAddr_Type.__name__ = "InetAddress"
_VRtrLdpTunIfSenderAddr_Object = MibTableColumn
vRtrLdpTunIfSenderAddr = _VRtrLdpTunIfSenderAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 3),
    _VRtrLdpTunIfSenderAddr_Type()
)
vRtrLdpTunIfSenderAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrLdpTunIfSenderAddr.setStatus("current")
_VRtrLdpTunIfRowStatus_Type = RowStatus
_VRtrLdpTunIfRowStatus_Object = MibTableColumn
vRtrLdpTunIfRowStatus = _VRtrLdpTunIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 4),
    _VRtrLdpTunIfRowStatus_Type()
)
vRtrLdpTunIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpTunIfRowStatus.setStatus("current")
_VRtrLdpTunIfLastChanged_Type = TimeStamp
_VRtrLdpTunIfLastChanged_Object = MibTableColumn
vRtrLdpTunIfLastChanged = _VRtrLdpTunIfLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 5),
    _VRtrLdpTunIfLastChanged_Type()
)
vRtrLdpTunIfLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLdpTunIfLastChanged.setStatus("current")
_VRtrLdpTunIfIfIndex_Type = InterfaceIndex
_VRtrLdpTunIfIfIndex_Object = MibTableColumn
vRtrLdpTunIfIfIndex = _VRtrLdpTunIfIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 6),
    _VRtrLdpTunIfIfIndex_Type()
)
vRtrLdpTunIfIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLdpTunIfIfIndex.setStatus("current")


class _VRtrLdpTunIfDescription_Type(TItemDescription):
    """Custom type vRtrLdpTunIfDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrLdpTunIfDescription_Type.__name__ = "TItemDescription"
_VRtrLdpTunIfDescription_Object = MibTableColumn
vRtrLdpTunIfDescription = _VRtrLdpTunIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 7),
    _VRtrLdpTunIfDescription_Type()
)
vRtrLdpTunIfDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpTunIfDescription.setStatus("current")
_VRtrLdpTunIfRootNode_Type = TruthValue
_VRtrLdpTunIfRootNode_Object = MibTableColumn
vRtrLdpTunIfRootNode = _VRtrLdpTunIfRootNode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 67, 1, 8),
    _VRtrLdpTunIfRootNode_Type()
)
vRtrLdpTunIfRootNode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLdpTunIfRootNode.setStatus("current")
_VRtrInetCidrRteTnlExtTable_Object = MibTable
vRtrInetCidrRteTnlExtTable = _VRtrInetCidrRteTnlExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68)
)
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlExtTable.setStatus("current")
_VRtrInetCidrRteTnlExtEntry_Object = MibTableRow
vRtrInetCidrRteTnlExtEntry = _VRtrInetCidrRteTnlExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1)
)
vRtrInetCidrRteTnlExtEntry.setIndexNames(
    (0, "IP-FORWARD-MIB", "inetCidrRouteDestType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteDest"),
    (0, "IP-FORWARD-MIB", "inetCidrRoutePfxLen"),
    (0, "IP-FORWARD-MIB", "inetCidrRoutePolicy"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHopType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHop"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlNextHopType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlNextHopOwner"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlNextHopTnlId"),
)
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlExtEntry.setStatus("current")
_VRtrInetCidrRteTnlNextHopType_Type = TmnxInetCidrNextHopType
_VRtrInetCidrRteTnlNextHopType_Object = MibTableColumn
vRtrInetCidrRteTnlNextHopType = _VRtrInetCidrRteTnlNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1, 1),
    _VRtrInetCidrRteTnlNextHopType_Type()
)
vRtrInetCidrRteTnlNextHopType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlNextHopType.setStatus("current")
_VRtrInetCidrRteTnlNextHopOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetCidrRteTnlNextHopOwner_Object = MibTableColumn
vRtrInetCidrRteTnlNextHopOwner = _VRtrInetCidrRteTnlNextHopOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1, 2),
    _VRtrInetCidrRteTnlNextHopOwner_Type()
)
vRtrInetCidrRteTnlNextHopOwner.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlNextHopOwner.setStatus("current")
_VRtrInetCidrRteTnlNextHopTnlId_Type = Unsigned32
_VRtrInetCidrRteTnlNextHopTnlId_Object = MibTableColumn
vRtrInetCidrRteTnlNextHopTnlId = _VRtrInetCidrRteTnlNextHopTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1, 3),
    _VRtrInetCidrRteTnlNextHopTnlId_Type()
)
vRtrInetCidrRteTnlNextHopTnlId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlNextHopTnlId.setStatus("current")
_VRtrInetCidrRteTnlEnabledTime_Type = TimeStamp
_VRtrInetCidrRteTnlEnabledTime_Object = MibTableColumn
vRtrInetCidrRteTnlEnabledTime = _VRtrInetCidrRteTnlEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1, 4),
    _VRtrInetCidrRteTnlEnabledTime_Type()
)
vRtrInetCidrRteTnlEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlEnabledTime.setStatus("current")
_VRtrInetCidrRteTnlNextHopWeight_Type = Unsigned32
_VRtrInetCidrRteTnlNextHopWeight_Object = MibTableColumn
vRtrInetCidrRteTnlNextHopWeight = _VRtrInetCidrRteTnlNextHopWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 68, 1, 5),
    _VRtrInetCidrRteTnlNextHopWeight_Type()
)
vRtrInetCidrRteTnlNextHopWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetCidrRteTnlNextHopWeight.setStatus("current")
_TmnxVRtrMobGatewayObjs_ObjectIdentity = ObjectIdentity
tmnxVRtrMobGatewayObjs = _TmnxVRtrMobGatewayObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69)
)
_VRtrIpPoolTableLastChanged_Type = TimeStamp
_VRtrIpPoolTableLastChanged_Object = MibScalar
vRtrIpPoolTableLastChanged = _VRtrIpPoolTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 1),
    _VRtrIpPoolTableLastChanged_Type()
)
vRtrIpPoolTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolTableLastChanged.setStatus("current")
_VRtrIpPoolTable_Object = MibTable
vRtrIpPoolTable = _VRtrIpPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2)
)
if mibBuilder.loadTexts:
    vRtrIpPoolTable.setStatus("current")
_VRtrIpPoolEntry_Object = MibTableRow
vRtrIpPoolEntry = _VRtrIpPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1)
)
vRtrIpPoolEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIpPoolName"),
)
if mibBuilder.loadTexts:
    vRtrIpPoolEntry.setStatus("current")
_VRtrIpPoolName_Type = TNamedItem
_VRtrIpPoolName_Object = MibTableColumn
vRtrIpPoolName = _VRtrIpPoolName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 1),
    _VRtrIpPoolName_Type()
)
vRtrIpPoolName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIpPoolName.setStatus("current")
_VRtrIpPoolRowStatus_Type = RowStatus
_VRtrIpPoolRowStatus_Object = MibTableColumn
vRtrIpPoolRowStatus = _VRtrIpPoolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 2),
    _VRtrIpPoolRowStatus_Type()
)
vRtrIpPoolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolRowStatus.setStatus("current")
_VRtrIpPoolLastChanged_Type = TimeStamp
_VRtrIpPoolLastChanged_Object = MibTableColumn
vRtrIpPoolLastChanged = _VRtrIpPoolLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 3),
    _VRtrIpPoolLastChanged_Type()
)
vRtrIpPoolLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolLastChanged.setStatus("current")


class _VRtrIpPoolDescription_Type(TItemDescription):
    """Custom type vRtrIpPoolDescription based on TItemDescription"""
    defaultHexValue = ""


_VRtrIpPoolDescription_Type.__name__ = "TItemDescription"
_VRtrIpPoolDescription_Object = MibTableColumn
vRtrIpPoolDescription = _VRtrIpPoolDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 4),
    _VRtrIpPoolDescription_Type()
)
vRtrIpPoolDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolDescription.setStatus("current")


class _VRtrIpPoolExclusive_Type(TruthValue):
    """Custom type vRtrIpPoolExclusive based on TruthValue"""
    defaultValue = 2


_VRtrIpPoolExclusive_Type.__name__ = "TruthValue"
_VRtrIpPoolExclusive_Object = MibTableColumn
vRtrIpPoolExclusive = _VRtrIpPoolExclusive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 5),
    _VRtrIpPoolExclusive_Type()
)
vRtrIpPoolExclusive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolExclusive.setStatus("current")


class _VRtrIpPoolAddressHoldTimer_Type(Unsigned32):
    """Custom type vRtrIpPoolAddressHoldTimer based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_VRtrIpPoolAddressHoldTimer_Type.__name__ = "Unsigned32"
_VRtrIpPoolAddressHoldTimer_Object = MibTableColumn
vRtrIpPoolAddressHoldTimer = _VRtrIpPoolAddressHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 6),
    _VRtrIpPoolAddressHoldTimer_Type()
)
vRtrIpPoolAddressHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolAddressHoldTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIpPoolAddressHoldTimer.setUnits("minutes")


class _VRtrIpPoolSuppress0and255_Type(TruthValue):
    """Custom type vRtrIpPoolSuppress0and255 based on TruthValue"""
    defaultValue = 2


_VRtrIpPoolSuppress0and255_Type.__name__ = "TruthValue"
_VRtrIpPoolSuppress0and255_Object = MibTableColumn
vRtrIpPoolSuppress0and255 = _VRtrIpPoolSuppress0and255_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 7),
    _VRtrIpPoolSuppress0and255_Type()
)
vRtrIpPoolSuppress0and255.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolSuppress0and255.setStatus("current")


class _VRtrIpPoolIsRemote_Type(TruthValue):
    """Custom type vRtrIpPoolIsRemote based on TruthValue"""
    defaultValue = 2


_VRtrIpPoolIsRemote_Type.__name__ = "TruthValue"
_VRtrIpPoolIsRemote_Object = MibTableColumn
vRtrIpPoolIsRemote = _VRtrIpPoolIsRemote_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 2, 1, 8),
    _VRtrIpPoolIsRemote_Type()
)
vRtrIpPoolIsRemote.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolIsRemote.setStatus("current")
_VRtrIpPoolAddrTableLastChanged_Type = TimeStamp
_VRtrIpPoolAddrTableLastChanged_Object = MibScalar
vRtrIpPoolAddrTableLastChanged = _VRtrIpPoolAddrTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 3),
    _VRtrIpPoolAddrTableLastChanged_Type()
)
vRtrIpPoolAddrTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrTableLastChanged.setStatus("current")
_VRtrIpPoolAddrTable_Object = MibTable
vRtrIpPoolAddrTable = _VRtrIpPoolAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4)
)
if mibBuilder.loadTexts:
    vRtrIpPoolAddrTable.setStatus("current")
_VRtrIpPoolAddrEntry_Object = MibTableRow
vRtrIpPoolAddrEntry = _VRtrIpPoolAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1)
)
vRtrIpPoolAddrEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIpPoolName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIpPoolAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIpPoolAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIpPoolAddrPrefixLen"),
)
if mibBuilder.loadTexts:
    vRtrIpPoolAddrEntry.setStatus("current")
_VRtrIpPoolAddrType_Type = InetAddressType
_VRtrIpPoolAddrType_Object = MibTableColumn
vRtrIpPoolAddrType = _VRtrIpPoolAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 1),
    _VRtrIpPoolAddrType_Type()
)
vRtrIpPoolAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrType.setStatus("current")


class _VRtrIpPoolAddr_Type(InetAddress):
    """Custom type vRtrIpPoolAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIpPoolAddr_Type.__name__ = "InetAddress"
_VRtrIpPoolAddr_Object = MibTableColumn
vRtrIpPoolAddr = _VRtrIpPoolAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 2),
    _VRtrIpPoolAddr_Type()
)
vRtrIpPoolAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIpPoolAddr.setStatus("current")
_VRtrIpPoolAddrPrefixLen_Type = InetAddressPrefixLength
_VRtrIpPoolAddrPrefixLen_Object = MibTableColumn
vRtrIpPoolAddrPrefixLen = _VRtrIpPoolAddrPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 3),
    _VRtrIpPoolAddrPrefixLen_Type()
)
vRtrIpPoolAddrPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrPrefixLen.setStatus("current")
_VRtrIpPoolAddrRowStatus_Type = RowStatus
_VRtrIpPoolAddrRowStatus_Object = MibTableColumn
vRtrIpPoolAddrRowStatus = _VRtrIpPoolAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 4),
    _VRtrIpPoolAddrRowStatus_Type()
)
vRtrIpPoolAddrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrRowStatus.setStatus("current")
_VRtrIpPoolAddrLastChanged_Type = TimeStamp
_VRtrIpPoolAddrLastChanged_Object = MibTableColumn
vRtrIpPoolAddrLastChanged = _VRtrIpPoolAddrLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 5),
    _VRtrIpPoolAddrLastChanged_Type()
)
vRtrIpPoolAddrLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrLastChanged.setStatus("current")


class _VRtrIpPoolAddrBlock_Type(TruthValue):
    """Custom type vRtrIpPoolAddrBlock based on TruthValue"""
    defaultValue = 2


_VRtrIpPoolAddrBlock_Type.__name__ = "TruthValue"
_VRtrIpPoolAddrBlock_Object = MibTableColumn
vRtrIpPoolAddrBlock = _VRtrIpPoolAddrBlock_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 6),
    _VRtrIpPoolAddrBlock_Type()
)
vRtrIpPoolAddrBlock.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrBlock.setStatus("current")


class _VRtrIpPoolAddrIpv6AssignedLen_Type(Unsigned32):
    """Custom type vRtrIpPoolAddrIpv6AssignedLen based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(48, 64),
    )


_VRtrIpPoolAddrIpv6AssignedLen_Type.__name__ = "Unsigned32"
_VRtrIpPoolAddrIpv6AssignedLen_Object = MibTableColumn
vRtrIpPoolAddrIpv6AssignedLen = _VRtrIpPoolAddrIpv6AssignedLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 4, 1, 7),
    _VRtrIpPoolAddrIpv6AssignedLen_Type()
)
vRtrIpPoolAddrIpv6AssignedLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpPoolAddrIpv6AssignedLen.setStatus("current")
_VRtrIpPoolStatTable_Object = MibTable
vRtrIpPoolStatTable = _VRtrIpPoolStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 5)
)
if mibBuilder.loadTexts:
    vRtrIpPoolStatTable.setStatus("current")
_VRtrIpPoolStatEntry_Object = MibTableRow
vRtrIpPoolStatEntry = _VRtrIpPoolStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 5, 1)
)
if mibBuilder.loadTexts:
    vRtrIpPoolStatEntry.setStatus("current")
_VRtrIpPoolStatAllocated_Type = Gauge32
_VRtrIpPoolStatAllocated_Object = MibTableColumn
vRtrIpPoolStatAllocated = _VRtrIpPoolStatAllocated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 5, 1, 1),
    _VRtrIpPoolStatAllocated_Type()
)
vRtrIpPoolStatAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolStatAllocated.setStatus("current")
_VRtrIpPoolStatFree_Type = Gauge32
_VRtrIpPoolStatFree_Object = MibTableColumn
vRtrIpPoolStatFree = _VRtrIpPoolStatFree_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 5, 1, 2),
    _VRtrIpPoolStatFree_Type()
)
vRtrIpPoolStatFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolStatFree.setStatus("current")
_VRtrIpPoolStatHeld_Type = Gauge32
_VRtrIpPoolStatHeld_Object = MibTableColumn
vRtrIpPoolStatHeld = _VRtrIpPoolStatHeld_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 5, 1, 3),
    _VRtrIpPoolStatHeld_Type()
)
vRtrIpPoolStatHeld.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpPoolStatHeld.setStatus("current")
_VRtrConfMobGwTableLastChanged_Type = TimeStamp
_VRtrConfMobGwTableLastChanged_Object = MibScalar
vRtrConfMobGwTableLastChanged = _VRtrConfMobGwTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 6),
    _VRtrConfMobGwTableLastChanged_Type()
)
vRtrConfMobGwTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrConfMobGwTableLastChanged.setStatus("current")
_VRtrConfMobGwTable_ObjectIdentity = ObjectIdentity
vRtrConfMobGwTable = _VRtrConfMobGwTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 69, 7)
)
_VRtrIfBfdExtTableLastChanged_Type = TimeStamp
_VRtrIfBfdExtTableLastChanged_Object = MibScalar
vRtrIfBfdExtTableLastChanged = _VRtrIfBfdExtTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 70),
    _VRtrIfBfdExtTableLastChanged_Type()
)
vRtrIfBfdExtTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdExtTableLastChanged.setStatus("current")
_VRtrIfBfdExtTable_Object = MibTable
vRtrIfBfdExtTable = _VRtrIfBfdExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71)
)
if mibBuilder.loadTexts:
    vRtrIfBfdExtTable.setStatus("current")
_VRtrIfBfdExtEntry_Object = MibTableRow
vRtrIfBfdExtEntry = _VRtrIfBfdExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1)
)
vRtrIfBfdExtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdExtAddressType"),
)
if mibBuilder.loadTexts:
    vRtrIfBfdExtEntry.setStatus("current")
_VRtrIfBfdExtAddressType_Type = InetAddressType
_VRtrIfBfdExtAddressType_Object = MibTableColumn
vRtrIfBfdExtAddressType = _VRtrIfBfdExtAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 1),
    _VRtrIfBfdExtAddressType_Type()
)
vRtrIfBfdExtAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdExtAddressType.setStatus("current")
_VRtrIfBfdExtAdminState_Type = TmnxAdminState
_VRtrIfBfdExtAdminState_Object = MibTableColumn
vRtrIfBfdExtAdminState = _VRtrIfBfdExtAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 2),
    _VRtrIfBfdExtAdminState_Type()
)
vRtrIfBfdExtAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtAdminState.setStatus("current")


class _VRtrIfBfdExtTransmitInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdExtTransmitInterval based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100000),
    )


_VRtrIfBfdExtTransmitInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdExtTransmitInterval_Object = MibTableColumn
vRtrIfBfdExtTransmitInterval = _VRtrIfBfdExtTransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 3),
    _VRtrIfBfdExtTransmitInterval_Type()
)
vRtrIfBfdExtTransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtTransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdExtTransmitInterval.setUnits("milliseconds")


class _VRtrIfBfdExtReceiveInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdExtReceiveInterval based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 100000),
    )


_VRtrIfBfdExtReceiveInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdExtReceiveInterval_Object = MibTableColumn
vRtrIfBfdExtReceiveInterval = _VRtrIfBfdExtReceiveInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 4),
    _VRtrIfBfdExtReceiveInterval_Type()
)
vRtrIfBfdExtReceiveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtReceiveInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdExtReceiveInterval.setUnits("milliseconds")


class _VRtrIfBfdExtMultiplier_Type(Unsigned32):
    """Custom type vRtrIfBfdExtMultiplier based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_VRtrIfBfdExtMultiplier_Type.__name__ = "Unsigned32"
_VRtrIfBfdExtMultiplier_Object = MibTableColumn
vRtrIfBfdExtMultiplier = _VRtrIfBfdExtMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 5),
    _VRtrIfBfdExtMultiplier_Type()
)
vRtrIfBfdExtMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtMultiplier.setStatus("current")


class _VRtrIfBfdExtEchoInterval_Type(Unsigned32):
    """Custom type vRtrIfBfdExtEchoInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(100, 100000),
    )


_VRtrIfBfdExtEchoInterval_Type.__name__ = "Unsigned32"
_VRtrIfBfdExtEchoInterval_Object = MibTableColumn
vRtrIfBfdExtEchoInterval = _VRtrIfBfdExtEchoInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 6),
    _VRtrIfBfdExtEchoInterval_Type()
)
vRtrIfBfdExtEchoInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtEchoInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdExtEchoInterval.setUnits("milliseconds")


class _VRtrIfBfdExtType_Type(Integer32):
    """Custom type vRtrIfBfdExtType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cpmNp", 1),
          ("auto", 2),
          ("fp", 3))
    )


_VRtrIfBfdExtType_Type.__name__ = "Integer32"
_VRtrIfBfdExtType_Object = MibTableColumn
vRtrIfBfdExtType = _VRtrIfBfdExtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 71, 1, 7),
    _VRtrIfBfdExtType_Type()
)
vRtrIfBfdExtType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfBfdExtType.setStatus("current")
_VRtrIfIpReasTable_Object = MibTable
vRtrIfIpReasTable = _VRtrIfIpReasTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 72)
)
if mibBuilder.loadTexts:
    vRtrIfIpReasTable.setStatus("current")
_VRtrIfIpReasEntry_Object = MibTableRow
vRtrIfIpReasEntry = _VRtrIfIpReasEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 72, 1)
)
if mibBuilder.loadTexts:
    vRtrIfIpReasEntry.setStatus("current")


class _VRtrIfIpReasPortID_Type(TmnxPortID):
    """Custom type vRtrIfIpReasPortID based on TmnxPortID"""
    defaultValue = 0


_VRtrIfIpReasPortID_Type.__name__ = "TmnxPortID"
_VRtrIfIpReasPortID_Object = MibTableColumn
vRtrIfIpReasPortID = _VRtrIfIpReasPortID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 72, 1, 1),
    _VRtrIfIpReasPortID_Type()
)
vRtrIfIpReasPortID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpReasPortID.setStatus("current")
_VRtrIfIpReasContextValue_Type = TmnxReasContextVal
_VRtrIfIpReasContextValue_Object = MibTableColumn
vRtrIfIpReasContextValue = _VRtrIfIpReasContextValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 72, 1, 2),
    _VRtrIfIpReasContextValue_Type()
)
vRtrIfIpReasContextValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpReasContextValue.setStatus("current")
_VRtrMsPwL2RtTable_Object = MibTable
vRtrMsPwL2RtTable = _VRtrMsPwL2RtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73)
)
if mibBuilder.loadTexts:
    vRtrMsPwL2RtTable.setStatus("current")
_VRtrMsPwL2RtEntry_Object = MibTableRow
vRtrMsPwL2RtEntry = _VRtrMsPwL2RtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1)
)
vRtrMsPwL2RtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtDestGlobalId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtDestPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtDestAcId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtDestPrefixLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtNextHopOwner"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtDestRD"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtNextHopAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrMsPwL2RtNextHopAddr"),
)
if mibBuilder.loadTexts:
    vRtrMsPwL2RtEntry.setStatus("current")
_VRtrMsPwL2RtDestGlobalId_Type = TmnxPwGlobalIdOrZero
_VRtrMsPwL2RtDestGlobalId_Object = MibTableColumn
vRtrMsPwL2RtDestGlobalId = _VRtrMsPwL2RtDestGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 1),
    _VRtrMsPwL2RtDestGlobalId_Type()
)
vRtrMsPwL2RtDestGlobalId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtDestGlobalId.setStatus("current")
_VRtrMsPwL2RtDestPrefix_Type = Unsigned32
_VRtrMsPwL2RtDestPrefix_Object = MibTableColumn
vRtrMsPwL2RtDestPrefix = _VRtrMsPwL2RtDestPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 2),
    _VRtrMsPwL2RtDestPrefix_Type()
)
vRtrMsPwL2RtDestPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtDestPrefix.setStatus("current")
_VRtrMsPwL2RtDestAcId_Type = Unsigned32
_VRtrMsPwL2RtDestAcId_Object = MibTableColumn
vRtrMsPwL2RtDestAcId = _VRtrMsPwL2RtDestAcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 3),
    _VRtrMsPwL2RtDestAcId_Type()
)
vRtrMsPwL2RtDestAcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtDestAcId.setStatus("current")
_VRtrMsPwL2RtDestPrefixLen_Type = InetAddressPrefixLength
_VRtrMsPwL2RtDestPrefixLen_Object = MibTableColumn
vRtrMsPwL2RtDestPrefixLen = _VRtrMsPwL2RtDestPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 4),
    _VRtrMsPwL2RtDestPrefixLen_Type()
)
vRtrMsPwL2RtDestPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtDestPrefixLen.setStatus("current")
_VRtrMsPwL2RtDestRD_Type = TmnxVPNRouteDistinguisher
_VRtrMsPwL2RtDestRD_Object = MibTableColumn
vRtrMsPwL2RtDestRD = _VRtrMsPwL2RtDestRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 5),
    _VRtrMsPwL2RtDestRD_Type()
)
vRtrMsPwL2RtDestRD.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtDestRD.setStatus("current")
_VRtrMsPwL2RtNextHopAddrType_Type = InetAddressType
_VRtrMsPwL2RtNextHopAddrType_Object = MibTableColumn
vRtrMsPwL2RtNextHopAddrType = _VRtrMsPwL2RtNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 6),
    _VRtrMsPwL2RtNextHopAddrType_Type()
)
vRtrMsPwL2RtNextHopAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtNextHopAddrType.setStatus("current")


class _VRtrMsPwL2RtNextHopAddr_Type(InetAddress):
    """Custom type vRtrMsPwL2RtNextHopAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrMsPwL2RtNextHopAddr_Type.__name__ = "InetAddress"
_VRtrMsPwL2RtNextHopAddr_Object = MibTableColumn
vRtrMsPwL2RtNextHopAddr = _VRtrMsPwL2RtNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 7),
    _VRtrMsPwL2RtNextHopAddr_Type()
)
vRtrMsPwL2RtNextHopAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtNextHopAddr.setStatus("current")
_VRtrMsPwL2RtNextHopOwner_Type = TmnxL3RouteOwner
_VRtrMsPwL2RtNextHopOwner_Object = MibTableColumn
vRtrMsPwL2RtNextHopOwner = _VRtrMsPwL2RtNextHopOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 8),
    _VRtrMsPwL2RtNextHopOwner_Type()
)
vRtrMsPwL2RtNextHopOwner.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtNextHopOwner.setStatus("current")
_VRtrMsPwL2RtRDCommunity_Type = Unsigned32
_VRtrMsPwL2RtRDCommunity_Object = MibTableColumn
vRtrMsPwL2RtRDCommunity = _VRtrMsPwL2RtRDCommunity_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 9),
    _VRtrMsPwL2RtRDCommunity_Type()
)
vRtrMsPwL2RtRDCommunity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtRDCommunity.setStatus("current")
_VRtrMsPwL2RtIsBestRoute_Type = TruthValue
_VRtrMsPwL2RtIsBestRoute_Object = MibTableColumn
vRtrMsPwL2RtIsBestRoute = _VRtrMsPwL2RtIsBestRoute_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 10),
    _VRtrMsPwL2RtIsBestRoute_Type()
)
vRtrMsPwL2RtIsBestRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtIsBestRoute.setStatus("current")
_VRtrMsPwL2RtAge_Type = Gauge32
_VRtrMsPwL2RtAge_Object = MibTableColumn
vRtrMsPwL2RtAge = _VRtrMsPwL2RtAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 73, 1, 11),
    _VRtrMsPwL2RtAge_Type()
)
vRtrMsPwL2RtAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtAge.setStatus("current")
if mibBuilder.loadTexts:
    vRtrMsPwL2RtAge.setUnits("seconds")
_VRtrIfStatsExtTable_Object = MibTable
vRtrIfStatsExtTable = _VRtrIfStatsExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74)
)
if mibBuilder.loadTexts:
    vRtrIfStatsExtTable.setStatus("current")
_VRtrIfStatsExtEntry_Object = MibTableRow
vRtrIfStatsExtEntry = _VRtrIfStatsExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1)
)
if mibBuilder.loadTexts:
    vRtrIfStatsExtEntry.setStatus("current")
_VRtrIfTxPkts_Type = Counter64
_VRtrIfTxPkts_Object = MibTableColumn
vRtrIfTxPkts = _VRtrIfTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 1),
    _VRtrIfTxPkts_Type()
)
vRtrIfTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxPkts.setStatus("current")
_VRtrIfTxPktsLow32_Type = Counter32
_VRtrIfTxPktsLow32_Object = MibTableColumn
vRtrIfTxPktsLow32 = _VRtrIfTxPktsLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 2),
    _VRtrIfTxPktsLow32_Type()
)
vRtrIfTxPktsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxPktsLow32.setStatus("current")
_VRtrIfTxPktsHigh32_Type = Counter32
_VRtrIfTxPktsHigh32_Object = MibTableColumn
vRtrIfTxPktsHigh32 = _VRtrIfTxPktsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 3),
    _VRtrIfTxPktsHigh32_Type()
)
vRtrIfTxPktsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxPktsHigh32.setStatus("current")
_VRtrIfTxBytes_Type = Counter64
_VRtrIfTxBytes_Object = MibTableColumn
vRtrIfTxBytes = _VRtrIfTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 4),
    _VRtrIfTxBytes_Type()
)
vRtrIfTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxBytes.setStatus("current")
_VRtrIfTxBytesLow32_Type = Counter32
_VRtrIfTxBytesLow32_Object = MibTableColumn
vRtrIfTxBytesLow32 = _VRtrIfTxBytesLow32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 5),
    _VRtrIfTxBytesLow32_Type()
)
vRtrIfTxBytesLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxBytesLow32.setStatus("current")
_VRtrIfTxBytesHigh32_Type = Counter32
_VRtrIfTxBytesHigh32_Object = MibTableColumn
vRtrIfTxBytesHigh32 = _VRtrIfTxBytesHigh32_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 6),
    _VRtrIfTxBytesHigh32_Type()
)
vRtrIfTxBytesHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxBytesHigh32.setStatus("current")
_VRtrIfRxMplsPkts_Type = Counter64
_VRtrIfRxMplsPkts_Object = MibTableColumn
vRtrIfRxMplsPkts = _VRtrIfRxMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 7),
    _VRtrIfRxMplsPkts_Type()
)
vRtrIfRxMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxMplsPkts.setStatus("current")
_VRtrIfTxMplsPkts_Type = Counter64
_VRtrIfTxMplsPkts_Object = MibTableColumn
vRtrIfTxMplsPkts = _VRtrIfTxMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 8),
    _VRtrIfTxMplsPkts_Type()
)
vRtrIfTxMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxMplsPkts.setStatus("current")
_VRtrIfRxMplsBytes_Type = Counter64
_VRtrIfRxMplsBytes_Object = MibTableColumn
vRtrIfRxMplsBytes = _VRtrIfRxMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 9),
    _VRtrIfRxMplsBytes_Type()
)
vRtrIfRxMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxMplsBytes.setStatus("current")
_VRtrIfTxMplsBytes_Type = Counter64
_VRtrIfTxMplsBytes_Object = MibTableColumn
vRtrIfTxMplsBytes = _VRtrIfTxMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 10),
    _VRtrIfTxMplsBytes_Type()
)
vRtrIfTxMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxMplsBytes.setStatus("current")
_VRtrIfTxNgeEncryptPkts_Type = Counter64
_VRtrIfTxNgeEncryptPkts_Object = MibTableColumn
vRtrIfTxNgeEncryptPkts = _VRtrIfTxNgeEncryptPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 11),
    _VRtrIfTxNgeEncryptPkts_Type()
)
vRtrIfTxNgeEncryptPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxNgeEncryptPkts.setStatus("current")
_VRtrIfTxNgeEncryptBytes_Type = Counter64
_VRtrIfTxNgeEncryptBytes_Object = MibTableColumn
vRtrIfTxNgeEncryptBytes = _VRtrIfTxNgeEncryptBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 12),
    _VRtrIfTxNgeEncryptBytes_Type()
)
vRtrIfTxNgeEncryptBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxNgeEncryptBytes.setStatus("current")
_VRtrIfRxNgeDecryptPkts_Type = Counter64
_VRtrIfRxNgeDecryptPkts_Object = MibTableColumn
vRtrIfRxNgeDecryptPkts = _VRtrIfRxNgeDecryptPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 13),
    _VRtrIfRxNgeDecryptPkts_Type()
)
vRtrIfRxNgeDecryptPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeDecryptPkts.setStatus("current")
_VRtrIfRxNgeDecryptBytes_Type = Counter64
_VRtrIfRxNgeDecryptBytes_Object = MibTableColumn
vRtrIfRxNgeDecryptBytes = _VRtrIfRxNgeDecryptBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 14),
    _VRtrIfRxNgeDecryptBytes_Type()
)
vRtrIfRxNgeDecryptBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeDecryptBytes.setStatus("current")
_VRtrIfRxNgeInvSpiDropPkts_Type = Counter64
_VRtrIfRxNgeInvSpiDropPkts_Object = MibTableColumn
vRtrIfRxNgeInvSpiDropPkts = _VRtrIfRxNgeInvSpiDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 15),
    _VRtrIfRxNgeInvSpiDropPkts_Type()
)
vRtrIfRxNgeInvSpiDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeInvSpiDropPkts.setStatus("current")
_VRtrIfRxNgeInvSpiDropBytes_Type = Counter64
_VRtrIfRxNgeInvSpiDropBytes_Object = MibTableColumn
vRtrIfRxNgeInvSpiDropBytes = _VRtrIfRxNgeInvSpiDropBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 16),
    _VRtrIfRxNgeInvSpiDropBytes_Type()
)
vRtrIfRxNgeInvSpiDropBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeInvSpiDropBytes.setStatus("current")
_VRtrIfRxNgeOthDropPkts_Type = Counter64
_VRtrIfRxNgeOthDropPkts_Object = MibTableColumn
vRtrIfRxNgeOthDropPkts = _VRtrIfRxNgeOthDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 17),
    _VRtrIfRxNgeOthDropPkts_Type()
)
vRtrIfRxNgeOthDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeOthDropPkts.setStatus("current")
_VRtrIfRxNgeOthDropBytes_Type = Counter64
_VRtrIfRxNgeOthDropBytes_Object = MibTableColumn
vRtrIfRxNgeOthDropBytes = _VRtrIfRxNgeOthDropBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 18),
    _VRtrIfRxNgeOthDropBytes_Type()
)
vRtrIfRxNgeOthDropBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeOthDropBytes.setStatus("current")
_VRtrIfRxNgeIcmpDropPkts_Type = Counter64
_VRtrIfRxNgeIcmpDropPkts_Object = MibTableColumn
vRtrIfRxNgeIcmpDropPkts = _VRtrIfRxNgeIcmpDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 19),
    _VRtrIfRxNgeIcmpDropPkts_Type()
)
vRtrIfRxNgeIcmpDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeIcmpDropPkts.setStatus("current")
_VRtrIfRxNgeIcmpDropBytes_Type = Counter64
_VRtrIfRxNgeIcmpDropBytes_Object = MibTableColumn
vRtrIfRxNgeIcmpDropBytes = _VRtrIfRxNgeIcmpDropBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 20),
    _VRtrIfRxNgeIcmpDropBytes_Type()
)
vRtrIfRxNgeIcmpDropBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxNgeIcmpDropBytes.setStatus("current")
_VRtrIfAltRxMplsPkts_Type = Counter64
_VRtrIfAltRxMplsPkts_Object = MibTableColumn
vRtrIfAltRxMplsPkts = _VRtrIfAltRxMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 21),
    _VRtrIfAltRxMplsPkts_Type()
)
vRtrIfAltRxMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAltRxMplsPkts.setStatus("current")
_VRtrIfAltTxMplsPkts_Type = Counter64
_VRtrIfAltTxMplsPkts_Object = MibTableColumn
vRtrIfAltTxMplsPkts = _VRtrIfAltTxMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 22),
    _VRtrIfAltTxMplsPkts_Type()
)
vRtrIfAltTxMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAltTxMplsPkts.setStatus("current")
_VRtrIfAltRxMplsBytes_Type = Counter64
_VRtrIfAltRxMplsBytes_Object = MibTableColumn
vRtrIfAltRxMplsBytes = _VRtrIfAltRxMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 23),
    _VRtrIfAltRxMplsBytes_Type()
)
vRtrIfAltRxMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAltRxMplsBytes.setStatus("current")
_VRtrIfAltTxMplsBytes_Type = Counter64
_VRtrIfAltTxMplsBytes_Object = MibTableColumn
vRtrIfAltTxMplsBytes = _VRtrIfAltTxMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 24),
    _VRtrIfAltTxMplsBytes_Type()
)
vRtrIfAltTxMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAltTxMplsBytes.setStatus("current")
_VRtrIfTxV4DirectedBcastPktDrop_Type = Counter64
_VRtrIfTxV4DirectedBcastPktDrop_Object = MibTableColumn
vRtrIfTxV4DirectedBcastPktDrop = _VRtrIfTxV4DirectedBcastPktDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 25),
    _VRtrIfTxV4DirectedBcastPktDrop_Type()
)
vRtrIfTxV4DirectedBcastPktDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DirectedBcastPktDrop.setStatus("current")
_VRtrIfTxV4DirectedBcastByteDrop_Type = Counter64
_VRtrIfTxV4DirectedBcastByteDrop_Object = MibTableColumn
vRtrIfTxV4DirectedBcastByteDrop = _VRtrIfTxV4DirectedBcastByteDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 26),
    _VRtrIfTxV4DirectedBcastByteDrop_Type()
)
vRtrIfTxV4DirectedBcastByteDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxV4DirectedBcastByteDrop.setStatus("current")
_VRtrIfRxV4IpHelperRedirectPkts_Type = Counter64
_VRtrIfRxV4IpHelperRedirectPkts_Object = MibTableColumn
vRtrIfRxV4IpHelperRedirectPkts = _VRtrIfRxV4IpHelperRedirectPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 27),
    _VRtrIfRxV4IpHelperRedirectPkts_Type()
)
vRtrIfRxV4IpHelperRedirectPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV4IpHelperRedirectPkts.setStatus("current")
_VRtrIfRxV4IpHelperRedirectBytes_Type = Counter64
_VRtrIfRxV4IpHelperRedirectBytes_Object = MibTableColumn
vRtrIfRxV4IpHelperRedirectBytes = _VRtrIfRxV4IpHelperRedirectBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 28),
    _VRtrIfRxV4IpHelperRedirectBytes_Type()
)
vRtrIfRxV4IpHelperRedirectBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxV4IpHelperRedirectBytes.setStatus("current")
_VRtrIfRxIpMplsBytes_Type = Counter64
_VRtrIfRxIpMplsBytes_Object = MibTableColumn
vRtrIfRxIpMplsBytes = _VRtrIfRxIpMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 29),
    _VRtrIfRxIpMplsBytes_Type()
)
vRtrIfRxIpMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxIpMplsBytes.setStatus("current")
_VRtrIfRxIpMplsPkts_Type = Counter64
_VRtrIfRxIpMplsPkts_Object = MibTableColumn
vRtrIfRxIpMplsPkts = _VRtrIfRxIpMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 30),
    _VRtrIfRxIpMplsPkts_Type()
)
vRtrIfRxIpMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfRxIpMplsPkts.setStatus("current")
_VRtrIfTxIpMplsBytes_Type = Counter64
_VRtrIfTxIpMplsBytes_Object = MibTableColumn
vRtrIfTxIpMplsBytes = _VRtrIfTxIpMplsBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 31),
    _VRtrIfTxIpMplsBytes_Type()
)
vRtrIfTxIpMplsBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxIpMplsBytes.setStatus("current")
_VRtrIfTxIpMplsPkts_Type = Counter64
_VRtrIfTxIpMplsPkts_Object = MibTableColumn
vRtrIfTxIpMplsPkts = _VRtrIfTxIpMplsPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 74, 1, 32),
    _VRtrIfTxIpMplsPkts_Type()
)
vRtrIfTxIpMplsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfTxIpMplsPkts.setStatus("current")
_VRtrStatExtTable_Object = MibTable
vRtrStatExtTable = _VRtrStatExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75)
)
if mibBuilder.loadTexts:
    vRtrStatExtTable.setStatus("current")
_VRtrStatExtEntry_Object = MibTableRow
vRtrStatExtEntry = _VRtrStatExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1)
)
if mibBuilder.loadTexts:
    vRtrStatExtEntry.setStatus("current")
_VRtrISISAltRoutes_Type = Gauge32
_VRtrISISAltRoutes_Object = MibTableColumn
vRtrISISAltRoutes = _VRtrISISAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 1),
    _VRtrISISAltRoutes_Type()
)
vRtrISISAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrISISAltRoutes.setStatus("current")
_VRtrISISActiveAltRoutes_Type = Gauge32
_VRtrISISActiveAltRoutes_Object = MibTableColumn
vRtrISISActiveAltRoutes = _VRtrISISActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 2),
    _VRtrISISActiveAltRoutes_Type()
)
vRtrISISActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrISISActiveAltRoutes.setStatus("current")
_VRtrBGPAltRoutes_Type = Gauge32
_VRtrBGPAltRoutes_Object = MibTableColumn
vRtrBGPAltRoutes = _VRtrBGPAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 3),
    _VRtrBGPAltRoutes_Type()
)
vRtrBGPAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPAltRoutes.setStatus("current")
_VRtrBGPActiveAltRoutes_Type = Gauge32
_VRtrBGPActiveAltRoutes_Object = MibTableColumn
vRtrBGPActiveAltRoutes = _VRtrBGPActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 4),
    _VRtrBGPActiveAltRoutes_Type()
)
vRtrBGPActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPActiveAltRoutes.setStatus("current")
_VRtrStatCurrNumAltRoutes_Type = Gauge32
_VRtrStatCurrNumAltRoutes_Object = MibTableColumn
vRtrStatCurrNumAltRoutes = _VRtrStatCurrNumAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 5),
    _VRtrStatCurrNumAltRoutes_Type()
)
vRtrStatCurrNumAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatCurrNumAltRoutes.setStatus("current")
_VRtrV6ISISAltRoutes_Type = Gauge32
_VRtrV6ISISAltRoutes_Object = MibTableColumn
vRtrV6ISISAltRoutes = _VRtrV6ISISAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 6),
    _VRtrV6ISISAltRoutes_Type()
)
vRtrV6ISISAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ISISAltRoutes.setStatus("current")
_VRtrV6ISISActiveAltRoutes_Type = Gauge32
_VRtrV6ISISActiveAltRoutes_Object = MibTableColumn
vRtrV6ISISActiveAltRoutes = _VRtrV6ISISActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 7),
    _VRtrV6ISISActiveAltRoutes_Type()
)
vRtrV6ISISActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6ISISActiveAltRoutes.setStatus("current")
_VRtrV6BGPAltRoutes_Type = Gauge32
_VRtrV6BGPAltRoutes_Object = MibTableColumn
vRtrV6BGPAltRoutes = _VRtrV6BGPAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 8),
    _VRtrV6BGPAltRoutes_Type()
)
vRtrV6BGPAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPAltRoutes.setStatus("current")
_VRtrV6BGPActiveAltRoutes_Type = Gauge32
_VRtrV6BGPActiveAltRoutes_Object = MibTableColumn
vRtrV6BGPActiveAltRoutes = _VRtrV6BGPActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 9),
    _VRtrV6BGPActiveAltRoutes_Type()
)
vRtrV6BGPActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPActiveAltRoutes.setStatus("current")
_VRtrV6StatCurrNumAltRoutes_Type = Gauge32
_VRtrV6StatCurrNumAltRoutes_Object = MibTableColumn
vRtrV6StatCurrNumAltRoutes = _VRtrV6StatCurrNumAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 10),
    _VRtrV6StatCurrNumAltRoutes_Type()
)
vRtrV6StatCurrNumAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6StatCurrNumAltRoutes.setStatus("current")
_VRtrBGPVPNAltRoutes_Type = Gauge32
_VRtrBGPVPNAltRoutes_Object = MibTableColumn
vRtrBGPVPNAltRoutes = _VRtrBGPVPNAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 11),
    _VRtrBGPVPNAltRoutes_Type()
)
vRtrBGPVPNAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPVPNAltRoutes.setStatus("current")
_VRtrBGPVPNActiveAltRoutes_Type = Gauge32
_VRtrBGPVPNActiveAltRoutes_Object = MibTableColumn
vRtrBGPVPNActiveAltRoutes = _VRtrBGPVPNActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 12),
    _VRtrBGPVPNActiveAltRoutes_Type()
)
vRtrBGPVPNActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBGPVPNActiveAltRoutes.setStatus("current")
_VRtrV6BGPVPNAltRoutes_Type = Gauge32
_VRtrV6BGPVPNAltRoutes_Object = MibTableColumn
vRtrV6BGPVPNAltRoutes = _VRtrV6BGPVPNAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 13),
    _VRtrV6BGPVPNAltRoutes_Type()
)
vRtrV6BGPVPNAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPVPNAltRoutes.setStatus("current")
_VRtrV6BGPVPNActiveAltRoutes_Type = Gauge32
_VRtrV6BGPVPNActiveAltRoutes_Object = MibTableColumn
vRtrV6BGPVPNActiveAltRoutes = _VRtrV6BGPVPNActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 14),
    _VRtrV6BGPVPNActiveAltRoutes_Type()
)
vRtrV6BGPVPNActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BGPVPNActiveAltRoutes.setStatus("current")
_VRtrOSPFAltRoutes_Type = Gauge32
_VRtrOSPFAltRoutes_Object = MibTableColumn
vRtrOSPFAltRoutes = _VRtrOSPFAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 15),
    _VRtrOSPFAltRoutes_Type()
)
vRtrOSPFAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFAltRoutes.setStatus("current")
_VRtrOSPFActiveAltRoutes_Type = Gauge32
_VRtrOSPFActiveAltRoutes_Object = MibTableColumn
vRtrOSPFActiveAltRoutes = _VRtrOSPFActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 16),
    _VRtrOSPFActiveAltRoutes_Type()
)
vRtrOSPFActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFActiveAltRoutes.setStatus("current")
_VRtrV6OSPFAltRoutes_Type = Gauge32
_VRtrV6OSPFAltRoutes_Object = MibTableColumn
vRtrV6OSPFAltRoutes = _VRtrV6OSPFAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 17),
    _VRtrV6OSPFAltRoutes_Type()
)
vRtrV6OSPFAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6OSPFAltRoutes.setStatus("current")
_VRtrV6OSPFActiveAltRoutes_Type = Gauge32
_VRtrV6OSPFActiveAltRoutes_Object = MibTableColumn
vRtrV6OSPFActiveAltRoutes = _VRtrV6OSPFActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 18),
    _VRtrV6OSPFActiveAltRoutes_Type()
)
vRtrV6OSPFActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6OSPFActiveAltRoutes.setStatus("current")
_VRtrOSPFv3Routes_Type = Gauge32
_VRtrOSPFv3Routes_Object = MibTableColumn
vRtrOSPFv3Routes = _VRtrOSPFv3Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 19),
    _VRtrOSPFv3Routes_Type()
)
vRtrOSPFv3Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFv3Routes.setStatus("current")
_VRtrOSPFv3ActiveRoutes_Type = Gauge32
_VRtrOSPFv3ActiveRoutes_Object = MibTableColumn
vRtrOSPFv3ActiveRoutes = _VRtrOSPFv3ActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 20),
    _VRtrOSPFv3ActiveRoutes_Type()
)
vRtrOSPFv3ActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFv3ActiveRoutes.setStatus("current")
_VRtrOSPFv3AltRoutes_Type = Gauge32
_VRtrOSPFv3AltRoutes_Object = MibTableColumn
vRtrOSPFv3AltRoutes = _VRtrOSPFv3AltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 21),
    _VRtrOSPFv3AltRoutes_Type()
)
vRtrOSPFv3AltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFv3AltRoutes.setStatus("current")
_VRtrOSPFv3ActiveAltRoutes_Type = Gauge32
_VRtrOSPFv3ActiveAltRoutes_Object = MibTableColumn
vRtrOSPFv3ActiveAltRoutes = _VRtrOSPFv3ActiveAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 22),
    _VRtrOSPFv3ActiveAltRoutes_Type()
)
vRtrOSPFv3ActiveAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrOSPFv3ActiveAltRoutes.setStatus("current")
_VRtrStatTotalIsisTunnels_Type = Gauge32
_VRtrStatTotalIsisTunnels_Object = MibTableColumn
vRtrStatTotalIsisTunnels = _VRtrStatTotalIsisTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 23),
    _VRtrStatTotalIsisTunnels_Type()
)
vRtrStatTotalIsisTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalIsisTunnels.setStatus("current")
_VRtrStatActiveIsisTunnels_Type = Gauge32
_VRtrStatActiveIsisTunnels_Object = MibTableColumn
vRtrStatActiveIsisTunnels = _VRtrStatActiveIsisTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 24),
    _VRtrStatActiveIsisTunnels_Type()
)
vRtrStatActiveIsisTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveIsisTunnels.setStatus("current")
_VRtrStatTotalOspfTunnels_Type = Gauge32
_VRtrStatTotalOspfTunnels_Object = MibTableColumn
vRtrStatTotalOspfTunnels = _VRtrStatTotalOspfTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 25),
    _VRtrStatTotalOspfTunnels_Type()
)
vRtrStatTotalOspfTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalOspfTunnels.setStatus("current")
_VRtrStatActiveOspfTunnels_Type = Gauge32
_VRtrStatActiveOspfTunnels_Object = MibTableColumn
vRtrStatActiveOspfTunnels = _VRtrStatActiveOspfTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 26),
    _VRtrStatActiveOspfTunnels_Type()
)
vRtrStatActiveOspfTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveOspfTunnels.setStatus("current")
_VRtrV6LDPRoutes_Type = Gauge32
_VRtrV6LDPRoutes_Object = MibTableColumn
vRtrV6LDPRoutes = _VRtrV6LDPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 27),
    _VRtrV6LDPRoutes_Type()
)
vRtrV6LDPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6LDPRoutes.setStatus("current")
_VRtrV6LDPActiveRoutes_Type = Gauge32
_VRtrV6LDPActiveRoutes_Object = MibTableColumn
vRtrV6LDPActiveRoutes = _VRtrV6LDPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 28),
    _VRtrV6LDPActiveRoutes_Type()
)
vRtrV6LDPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6LDPActiveRoutes.setStatus("current")
_VRtrStatTotalIsisV6Tunnels_Type = Gauge32
_VRtrStatTotalIsisV6Tunnels_Object = MibTableColumn
vRtrStatTotalIsisV6Tunnels = _VRtrStatTotalIsisV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 29),
    _VRtrStatTotalIsisV6Tunnels_Type()
)
vRtrStatTotalIsisV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalIsisV6Tunnels.setStatus("current")
_VRtrStatActiveIsisV6Tunnels_Type = Gauge32
_VRtrStatActiveIsisV6Tunnels_Object = MibTableColumn
vRtrStatActiveIsisV6Tunnels = _VRtrStatActiveIsisV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 30),
    _VRtrStatActiveIsisV6Tunnels_Type()
)
vRtrStatActiveIsisV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveIsisV6Tunnels.setStatus("current")
_VRtrStatTotalSrTeTunnels_Type = Gauge32
_VRtrStatTotalSrTeTunnels_Object = MibTableColumn
vRtrStatTotalSrTeTunnels = _VRtrStatTotalSrTeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 31),
    _VRtrStatTotalSrTeTunnels_Type()
)
vRtrStatTotalSrTeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSrTeTunnels.setStatus("current")
_VRtrStatActiveSrTeTunnels_Type = Gauge32
_VRtrStatActiveSrTeTunnels_Object = MibTableColumn
vRtrStatActiveSrTeTunnels = _VRtrStatActiveSrTeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 32),
    _VRtrStatActiveSrTeTunnels_Type()
)
vRtrStatActiveSrTeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSrTeTunnels.setStatus("current")
_VRtrStatTotalFpeTunnels_Type = Gauge32
_VRtrStatTotalFpeTunnels_Object = MibTableColumn
vRtrStatTotalFpeTunnels = _VRtrStatTotalFpeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 33),
    _VRtrStatTotalFpeTunnels_Type()
)
vRtrStatTotalFpeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalFpeTunnels.setStatus("current")
_VRtrStatActiveFpeTunnels_Type = Gauge32
_VRtrStatActiveFpeTunnels_Object = MibTableColumn
vRtrStatActiveFpeTunnels = _VRtrStatActiveFpeTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 34),
    _VRtrStatActiveFpeTunnels_Type()
)
vRtrStatActiveFpeTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveFpeTunnels.setStatus("current")
_VRtrStatTotalUdpTunnels_Type = Gauge32
_VRtrStatTotalUdpTunnels_Object = MibTableColumn
vRtrStatTotalUdpTunnels = _VRtrStatTotalUdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 35),
    _VRtrStatTotalUdpTunnels_Type()
)
vRtrStatTotalUdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalUdpTunnels.setStatus("current")
_VRtrStatActiveUdpTunnels_Type = Gauge32
_VRtrStatActiveUdpTunnels_Object = MibTableColumn
vRtrStatActiveUdpTunnels = _VRtrStatActiveUdpTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 36),
    _VRtrStatActiveUdpTunnels_Type()
)
vRtrStatActiveUdpTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveUdpTunnels.setStatus("current")
_VRtrStatArpRoutes_Type = Gauge32
_VRtrStatArpRoutes_Object = MibTableColumn
vRtrStatArpRoutes = _VRtrStatArpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 37),
    _VRtrStatArpRoutes_Type()
)
vRtrStatArpRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatArpRoutes.setStatus("current")
_VRtrStatArpActiveRoutes_Type = Gauge32
_VRtrStatArpActiveRoutes_Object = MibTableColumn
vRtrStatArpActiveRoutes = _VRtrStatArpActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 38),
    _VRtrStatArpActiveRoutes_Type()
)
vRtrStatArpActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatArpActiveRoutes.setStatus("current")
_VRtrStatNdRoutes_Type = Gauge32
_VRtrStatNdRoutes_Object = MibTableColumn
vRtrStatNdRoutes = _VRtrStatNdRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 39),
    _VRtrStatNdRoutes_Type()
)
vRtrStatNdRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatNdRoutes.setStatus("current")
_VRtrStatNdActiveRoutes_Type = Gauge32
_VRtrStatNdActiveRoutes_Object = MibTableColumn
vRtrStatNdActiveRoutes = _VRtrStatNdActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 40),
    _VRtrStatNdActiveRoutes_Type()
)
vRtrStatNdActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatNdActiveRoutes.setStatus("current")
_VRtrStatTotalOspfv3Tunnels_Type = Gauge32
_VRtrStatTotalOspfv3Tunnels_Object = MibTableColumn
vRtrStatTotalOspfv3Tunnels = _VRtrStatTotalOspfv3Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 41),
    _VRtrStatTotalOspfv3Tunnels_Type()
)
vRtrStatTotalOspfv3Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalOspfv3Tunnels.setStatus("current")
_VRtrStatActiveOspfv3Tunnels_Type = Gauge32
_VRtrStatActiveOspfv3Tunnels_Object = MibTableColumn
vRtrStatActiveOspfv3Tunnels = _VRtrStatActiveOspfv3Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 42),
    _VRtrStatActiveOspfv3Tunnels_Type()
)
vRtrStatActiveOspfv3Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveOspfv3Tunnels.setStatus("current")
_VRtrStatTotalSrPolicyTunnels_Type = Gauge32
_VRtrStatTotalSrPolicyTunnels_Object = MibTableColumn
vRtrStatTotalSrPolicyTunnels = _VRtrStatTotalSrPolicyTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 43),
    _VRtrStatTotalSrPolicyTunnels_Type()
)
vRtrStatTotalSrPolicyTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSrPolicyTunnels.setStatus("current")
_VRtrStatActiveSrPolicyTunnels_Type = Gauge32
_VRtrStatActiveSrPolicyTunnels_Object = MibTableColumn
vRtrStatActiveSrPolicyTunnels = _VRtrStatActiveSrPolicyTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 44),
    _VRtrStatActiveSrPolicyTunnels_Type()
)
vRtrStatActiveSrPolicyTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSrPolicyTunnels.setStatus("current")
_VRtrStatTotalRibApiV4Routes_Type = Gauge32
_VRtrStatTotalRibApiV4Routes_Object = MibTableColumn
vRtrStatTotalRibApiV4Routes = _VRtrStatTotalRibApiV4Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 45),
    _VRtrStatTotalRibApiV4Routes_Type()
)
vRtrStatTotalRibApiV4Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalRibApiV4Routes.setStatus("current")
_VRtrStatActiveRibApiV4Routes_Type = Gauge32
_VRtrStatActiveRibApiV4Routes_Object = MibTableColumn
vRtrStatActiveRibApiV4Routes = _VRtrStatActiveRibApiV4Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 46),
    _VRtrStatActiveRibApiV4Routes_Type()
)
vRtrStatActiveRibApiV4Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveRibApiV4Routes.setStatus("current")
_VRtrStatTotalRibApiV6Routes_Type = Gauge32
_VRtrStatTotalRibApiV6Routes_Object = MibTableColumn
vRtrStatTotalRibApiV6Routes = _VRtrStatTotalRibApiV6Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 47),
    _VRtrStatTotalRibApiV6Routes_Type()
)
vRtrStatTotalRibApiV6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalRibApiV6Routes.setStatus("current")
_VRtrStatActiveRibApiV6Routes_Type = Gauge32
_VRtrStatActiveRibApiV6Routes_Object = MibTableColumn
vRtrStatActiveRibApiV6Routes = _VRtrStatActiveRibApiV6Routes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 48),
    _VRtrStatActiveRibApiV6Routes_Type()
)
vRtrStatActiveRibApiV6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveRibApiV6Routes.setStatus("current")
_VRtrStatTotalRibApiV4Tunnels_Type = Gauge32
_VRtrStatTotalRibApiV4Tunnels_Object = MibTableColumn
vRtrStatTotalRibApiV4Tunnels = _VRtrStatTotalRibApiV4Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 49),
    _VRtrStatTotalRibApiV4Tunnels_Type()
)
vRtrStatTotalRibApiV4Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalRibApiV4Tunnels.setStatus("current")
_VRtrStatActiveRibApiV4Tunnels_Type = Gauge32
_VRtrStatActiveRibApiV4Tunnels_Object = MibTableColumn
vRtrStatActiveRibApiV4Tunnels = _VRtrStatActiveRibApiV4Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 50),
    _VRtrStatActiveRibApiV4Tunnels_Type()
)
vRtrStatActiveRibApiV4Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveRibApiV4Tunnels.setStatus("current")
_VRtrStatTotalRibApiV6Tunnels_Type = Gauge32
_VRtrStatTotalRibApiV6Tunnels_Object = MibTableColumn
vRtrStatTotalRibApiV6Tunnels = _VRtrStatTotalRibApiV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 51),
    _VRtrStatTotalRibApiV6Tunnels_Type()
)
vRtrStatTotalRibApiV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalRibApiV6Tunnels.setStatus("current")
_VRtrStatActiveRibApiV6Tunnels_Type = Gauge32
_VRtrStatActiveRibApiV6Tunnels_Object = MibTableColumn
vRtrStatActiveRibApiV6Tunnels = _VRtrStatActiveRibApiV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 52),
    _VRtrStatActiveRibApiV6Tunnels_Type()
)
vRtrStatActiveRibApiV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveRibApiV6Tunnels.setStatus("current")
_VRtrStatTotMplsFwdPlcyV4Tunnels_Type = Gauge32
_VRtrStatTotMplsFwdPlcyV4Tunnels_Object = MibTableColumn
vRtrStatTotMplsFwdPlcyV4Tunnels = _VRtrStatTotMplsFwdPlcyV4Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 53),
    _VRtrStatTotMplsFwdPlcyV4Tunnels_Type()
)
vRtrStatTotMplsFwdPlcyV4Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotMplsFwdPlcyV4Tunnels.setStatus("current")
_VRtrStatActMplsFwdPlcyV4Tunnels_Type = Gauge32
_VRtrStatActMplsFwdPlcyV4Tunnels_Object = MibTableColumn
vRtrStatActMplsFwdPlcyV4Tunnels = _VRtrStatActMplsFwdPlcyV4Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 54),
    _VRtrStatActMplsFwdPlcyV4Tunnels_Type()
)
vRtrStatActMplsFwdPlcyV4Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActMplsFwdPlcyV4Tunnels.setStatus("current")
_VRtrStatTotMplsFwdPlcyV6Tunnels_Type = Gauge32
_VRtrStatTotMplsFwdPlcyV6Tunnels_Object = MibTableColumn
vRtrStatTotMplsFwdPlcyV6Tunnels = _VRtrStatTotMplsFwdPlcyV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 55),
    _VRtrStatTotMplsFwdPlcyV6Tunnels_Type()
)
vRtrStatTotMplsFwdPlcyV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotMplsFwdPlcyV6Tunnels.setStatus("current")
_VRtrStatActMplsFwdPlcyV6Tunnels_Type = Gauge32
_VRtrStatActMplsFwdPlcyV6Tunnels_Object = MibTableColumn
vRtrStatActMplsFwdPlcyV6Tunnels = _VRtrStatActMplsFwdPlcyV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 56),
    _VRtrStatActMplsFwdPlcyV6Tunnels_Type()
)
vRtrStatActMplsFwdPlcyV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActMplsFwdPlcyV6Tunnels.setStatus("current")
_VRtrStatTotalOspfv3IPv6Tunnels_Type = Gauge32
_VRtrStatTotalOspfv3IPv6Tunnels_Object = MibTableColumn
vRtrStatTotalOspfv3IPv6Tunnels = _VRtrStatTotalOspfv3IPv6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 57),
    _VRtrStatTotalOspfv3IPv6Tunnels_Type()
)
vRtrStatTotalOspfv3IPv6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalOspfv3IPv6Tunnels.setStatus("current")
_VRtrStatActiveOspfv3IPv6Tunnels_Type = Gauge32
_VRtrStatActiveOspfv3IPv6Tunnels_Object = MibTableColumn
vRtrStatActiveOspfv3IPv6Tunnels = _VRtrStatActiveOspfv3IPv6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 58),
    _VRtrStatActiveOspfv3IPv6Tunnels_Type()
)
vRtrStatActiveOspfv3IPv6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveOspfv3IPv6Tunnels.setStatus("current")
_VRtrDHCPRoutes_Type = Gauge32
_VRtrDHCPRoutes_Object = MibTableColumn
vRtrDHCPRoutes = _VRtrDHCPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 59),
    _VRtrDHCPRoutes_Type()
)
vRtrDHCPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCPRoutes.setStatus("current")
_VRtrDHCPActiveRoutes_Type = Gauge32
_VRtrDHCPActiveRoutes_Object = MibTableColumn
vRtrDHCPActiveRoutes = _VRtrDHCPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 60),
    _VRtrDHCPActiveRoutes_Type()
)
vRtrDHCPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDHCPActiveRoutes.setStatus("current")
_VRtrV6DHCPRoutes_Type = Gauge32
_VRtrV6DHCPRoutes_Object = MibTableColumn
vRtrV6DHCPRoutes = _VRtrV6DHCPRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 61),
    _VRtrV6DHCPRoutes_Type()
)
vRtrV6DHCPRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6DHCPRoutes.setStatus("current")
_VRtrV6DHCPActiveRoutes_Type = Gauge32
_VRtrV6DHCPActiveRoutes_Object = MibTableColumn
vRtrV6DHCPActiveRoutes = _VRtrV6DHCPActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 62),
    _VRtrV6DHCPActiveRoutes_Type()
)
vRtrV6DHCPActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6DHCPActiveRoutes.setStatus("current")
_VRtrStatActiveSrPolicyV6Tunnels_Type = Gauge32
_VRtrStatActiveSrPolicyV6Tunnels_Object = MibTableColumn
vRtrStatActiveSrPolicyV6Tunnels = _VRtrStatActiveSrPolicyV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 63),
    _VRtrStatActiveSrPolicyV6Tunnels_Type()
)
vRtrStatActiveSrPolicyV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSrPolicyV6Tunnels.setStatus("current")
_VRtrStatTotalSrPolicyV6Tunnels_Type = Gauge32
_VRtrStatTotalSrPolicyV6Tunnels_Object = MibTableColumn
vRtrStatTotalSrPolicyV6Tunnels = _VRtrStatTotalSrPolicyV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 64),
    _VRtrStatTotalSrPolicyV6Tunnels_Type()
)
vRtrStatTotalSrPolicyV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSrPolicyV6Tunnels.setStatus("current")
_VRtrStatTotalSrTeV6Tunnels_Type = Gauge32
_VRtrStatTotalSrTeV6Tunnels_Object = MibTableColumn
vRtrStatTotalSrTeV6Tunnels = _VRtrStatTotalSrTeV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 65),
    _VRtrStatTotalSrTeV6Tunnels_Type()
)
vRtrStatTotalSrTeV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSrTeV6Tunnels.setStatus("current")
_VRtrStatActiveSrTeV6Tunnels_Type = Gauge32
_VRtrStatActiveSrTeV6Tunnels_Object = MibTableColumn
vRtrStatActiveSrTeV6Tunnels = _VRtrStatActiveSrTeV6Tunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 66),
    _VRtrStatActiveSrTeV6Tunnels_Type()
)
vRtrStatActiveSrTeV6Tunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSrTeV6Tunnels.setStatus("current")
_VRtrBgpEvpnIflRoutes_Type = Gauge32
_VRtrBgpEvpnIflRoutes_Object = MibTableColumn
vRtrBgpEvpnIflRoutes = _VRtrBgpEvpnIflRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 67),
    _VRtrBgpEvpnIflRoutes_Type()
)
vRtrBgpEvpnIflRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIflRoutes.setStatus("current")
_VRtrBgpEvpnIflActRoutes_Type = Gauge32
_VRtrBgpEvpnIflActRoutes_Object = MibTableColumn
vRtrBgpEvpnIflActRoutes = _VRtrBgpEvpnIflActRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 68),
    _VRtrBgpEvpnIflActRoutes_Type()
)
vRtrBgpEvpnIflActRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIflActRoutes.setStatus("current")
_VRtrBgpEvpnIflAltRoutes_Type = Gauge32
_VRtrBgpEvpnIflAltRoutes_Object = MibTableColumn
vRtrBgpEvpnIflAltRoutes = _VRtrBgpEvpnIflAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 69),
    _VRtrBgpEvpnIflAltRoutes_Type()
)
vRtrBgpEvpnIflAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIflAltRoutes.setStatus("current")
_VRtrBgpEvpnIflActAltRoutes_Type = Gauge32
_VRtrBgpEvpnIflActAltRoutes_Object = MibTableColumn
vRtrBgpEvpnIflActAltRoutes = _VRtrBgpEvpnIflActAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 70),
    _VRtrBgpEvpnIflActAltRoutes_Type()
)
vRtrBgpEvpnIflActAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIflActAltRoutes.setStatus("current")
_VRtrV6BgpEvpnIflRoutes_Type = Gauge32
_VRtrV6BgpEvpnIflRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIflRoutes = _VRtrV6BgpEvpnIflRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 71),
    _VRtrV6BgpEvpnIflRoutes_Type()
)
vRtrV6BgpEvpnIflRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIflRoutes.setStatus("current")
_VRtrV6BgpEvpnIflActRoutes_Type = Gauge32
_VRtrV6BgpEvpnIflActRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIflActRoutes = _VRtrV6BgpEvpnIflActRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 72),
    _VRtrV6BgpEvpnIflActRoutes_Type()
)
vRtrV6BgpEvpnIflActRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIflActRoutes.setStatus("current")
_VRtrV6BgpEvpnIflAltRoutes_Type = Gauge32
_VRtrV6BgpEvpnIflAltRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIflAltRoutes = _VRtrV6BgpEvpnIflAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 73),
    _VRtrV6BgpEvpnIflAltRoutes_Type()
)
vRtrV6BgpEvpnIflAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIflAltRoutes.setStatus("current")
_VRtrV6BgpEvpnIflActAltRoutes_Type = Gauge32
_VRtrV6BgpEvpnIflActAltRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIflActAltRoutes = _VRtrV6BgpEvpnIflActAltRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 74),
    _VRtrV6BgpEvpnIflActAltRoutes_Type()
)
vRtrV6BgpEvpnIflActAltRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIflActAltRoutes.setStatus("current")
_VRtrBgpEvpnIffRoutes_Type = Gauge32
_VRtrBgpEvpnIffRoutes_Object = MibTableColumn
vRtrBgpEvpnIffRoutes = _VRtrBgpEvpnIffRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 75),
    _VRtrBgpEvpnIffRoutes_Type()
)
vRtrBgpEvpnIffRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIffRoutes.setStatus("current")
_VRtrBgpEvpnIffActRoutes_Type = Gauge32
_VRtrBgpEvpnIffActRoutes_Object = MibTableColumn
vRtrBgpEvpnIffActRoutes = _VRtrBgpEvpnIffActRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 76),
    _VRtrBgpEvpnIffActRoutes_Type()
)
vRtrBgpEvpnIffActRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnIffActRoutes.setStatus("current")
_VRtrV6BgpEvpnIffRoutes_Type = Gauge32
_VRtrV6BgpEvpnIffRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIffRoutes = _VRtrV6BgpEvpnIffRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 77),
    _VRtrV6BgpEvpnIffRoutes_Type()
)
vRtrV6BgpEvpnIffRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIffRoutes.setStatus("current")
_VRtrV6BgpEvpnIffActRoutes_Type = Gauge32
_VRtrV6BgpEvpnIffActRoutes_Object = MibTableColumn
vRtrV6BgpEvpnIffActRoutes = _VRtrV6BgpEvpnIffActRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 78),
    _VRtrV6BgpEvpnIffActRoutes_Type()
)
vRtrV6BgpEvpnIffActRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrV6BgpEvpnIffActRoutes.setStatus("current")
_VRtrMtrace2OperState_Type = TmnxEnabledDisabled
_VRtrMtrace2OperState_Object = MibTableColumn
vRtrMtrace2OperState = _VRtrMtrace2OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 79),
    _VRtrMtrace2OperState_Type()
)
vRtrMtrace2OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrMtrace2OperState.setStatus("current")
_VRtrStatActiveSrV6IsisTunnels_Type = Gauge32
_VRtrStatActiveSrV6IsisTunnels_Object = MibTableColumn
vRtrStatActiveSrV6IsisTunnels = _VRtrStatActiveSrV6IsisTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 80),
    _VRtrStatActiveSrV6IsisTunnels_Type()
)
vRtrStatActiveSrV6IsisTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatActiveSrV6IsisTunnels.setStatus("current")
_VRtrStatTotalSrV6IsisTunnels_Type = Gauge32
_VRtrStatTotalSrV6IsisTunnels_Object = MibTableColumn
vRtrStatTotalSrV6IsisTunnels = _VRtrStatTotalSrV6IsisTunnels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 81),
    _VRtrStatTotalSrV6IsisTunnels_Type()
)
vRtrStatTotalSrV6IsisTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatTotalSrV6IsisTunnels.setStatus("current")
_VRtrStatSrV6ActiveRoutes_Type = Gauge32
_VRtrStatSrV6ActiveRoutes_Object = MibTableColumn
vRtrStatSrV6ActiveRoutes = _VRtrStatSrV6ActiveRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 82),
    _VRtrStatSrV6ActiveRoutes_Type()
)
vRtrStatSrV6ActiveRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatSrV6ActiveRoutes.setStatus("current")
_VRtrStatSrV6TotalRoutes_Type = Gauge32
_VRtrStatSrV6TotalRoutes_Object = MibTableColumn
vRtrStatSrV6TotalRoutes = _VRtrStatSrV6TotalRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 75, 1, 83),
    _VRtrStatSrV6TotalRoutes_Type()
)
vRtrStatSrV6TotalRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrStatSrV6TotalRoutes.setStatus("current")
_VRtrVrfPolicyTable_Object = MibTable
vRtrVrfPolicyTable = _VRtrVrfPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76)
)
if mibBuilder.loadTexts:
    vRtrVrfPolicyTable.setStatus("current")
_VRtrVrfPolicyEntry_Object = MibTableRow
vRtrVrfPolicyEntry = _VRtrVrfPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1)
)
if mibBuilder.loadTexts:
    vRtrVrfPolicyEntry.setStatus("current")


class _VRtrVrfImportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy1_Object = MibTableColumn
vRtrVrfImportPolicy1 = _VRtrVrfImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 1),
    _VRtrVrfImportPolicy1_Type()
)
vRtrVrfImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy1.setStatus("current")


class _VRtrVrfImportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy2_Object = MibTableColumn
vRtrVrfImportPolicy2 = _VRtrVrfImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 2),
    _VRtrVrfImportPolicy2_Type()
)
vRtrVrfImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy2.setStatus("current")


class _VRtrVrfImportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy3_Object = MibTableColumn
vRtrVrfImportPolicy3 = _VRtrVrfImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 3),
    _VRtrVrfImportPolicy3_Type()
)
vRtrVrfImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy3.setStatus("current")


class _VRtrVrfImportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy4_Object = MibTableColumn
vRtrVrfImportPolicy4 = _VRtrVrfImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 4),
    _VRtrVrfImportPolicy4_Type()
)
vRtrVrfImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy4.setStatus("current")


class _VRtrVrfImportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy5_Object = MibTableColumn
vRtrVrfImportPolicy5 = _VRtrVrfImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 5),
    _VRtrVrfImportPolicy5_Type()
)
vRtrVrfImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy5.setStatus("current")


class _VRtrVrfImportPolicy6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy6_Object = MibTableColumn
vRtrVrfImportPolicy6 = _VRtrVrfImportPolicy6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 6),
    _VRtrVrfImportPolicy6_Type()
)
vRtrVrfImportPolicy6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy6.setStatus("current")


class _VRtrVrfImportPolicy7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy7_Object = MibTableColumn
vRtrVrfImportPolicy7 = _VRtrVrfImportPolicy7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 7),
    _VRtrVrfImportPolicy7_Type()
)
vRtrVrfImportPolicy7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy7.setStatus("current")


class _VRtrVrfImportPolicy8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy8_Object = MibTableColumn
vRtrVrfImportPolicy8 = _VRtrVrfImportPolicy8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 8),
    _VRtrVrfImportPolicy8_Type()
)
vRtrVrfImportPolicy8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy8.setStatus("current")


class _VRtrVrfImportPolicy9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy9_Object = MibTableColumn
vRtrVrfImportPolicy9 = _VRtrVrfImportPolicy9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 9),
    _VRtrVrfImportPolicy9_Type()
)
vRtrVrfImportPolicy9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy9.setStatus("current")


class _VRtrVrfImportPolicy10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy10_Object = MibTableColumn
vRtrVrfImportPolicy10 = _VRtrVrfImportPolicy10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 10),
    _VRtrVrfImportPolicy10_Type()
)
vRtrVrfImportPolicy10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy10.setStatus("current")


class _VRtrVrfImportPolicy11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy11_Object = MibTableColumn
vRtrVrfImportPolicy11 = _VRtrVrfImportPolicy11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 11),
    _VRtrVrfImportPolicy11_Type()
)
vRtrVrfImportPolicy11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy11.setStatus("current")


class _VRtrVrfImportPolicy12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy12_Object = MibTableColumn
vRtrVrfImportPolicy12 = _VRtrVrfImportPolicy12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 12),
    _VRtrVrfImportPolicy12_Type()
)
vRtrVrfImportPolicy12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy12.setStatus("current")


class _VRtrVrfImportPolicy13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy13_Object = MibTableColumn
vRtrVrfImportPolicy13 = _VRtrVrfImportPolicy13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 13),
    _VRtrVrfImportPolicy13_Type()
)
vRtrVrfImportPolicy13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy13.setStatus("current")


class _VRtrVrfImportPolicy14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy14_Object = MibTableColumn
vRtrVrfImportPolicy14 = _VRtrVrfImportPolicy14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 14),
    _VRtrVrfImportPolicy14_Type()
)
vRtrVrfImportPolicy14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy14.setStatus("current")


class _VRtrVrfImportPolicy15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfImportPolicy15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfImportPolicy15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfImportPolicy15_Object = MibTableColumn
vRtrVrfImportPolicy15 = _VRtrVrfImportPolicy15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 15),
    _VRtrVrfImportPolicy15_Type()
)
vRtrVrfImportPolicy15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfImportPolicy15.setStatus("current")


class _VRtrVrfExportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy1_Object = MibTableColumn
vRtrVrfExportPolicy1 = _VRtrVrfExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 16),
    _VRtrVrfExportPolicy1_Type()
)
vRtrVrfExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy1.setStatus("current")


class _VRtrVrfExportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy2_Object = MibTableColumn
vRtrVrfExportPolicy2 = _VRtrVrfExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 17),
    _VRtrVrfExportPolicy2_Type()
)
vRtrVrfExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy2.setStatus("current")


class _VRtrVrfExportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy3_Object = MibTableColumn
vRtrVrfExportPolicy3 = _VRtrVrfExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 18),
    _VRtrVrfExportPolicy3_Type()
)
vRtrVrfExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy3.setStatus("current")


class _VRtrVrfExportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy4_Object = MibTableColumn
vRtrVrfExportPolicy4 = _VRtrVrfExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 19),
    _VRtrVrfExportPolicy4_Type()
)
vRtrVrfExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy4.setStatus("current")


class _VRtrVrfExportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy5_Object = MibTableColumn
vRtrVrfExportPolicy5 = _VRtrVrfExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 20),
    _VRtrVrfExportPolicy5_Type()
)
vRtrVrfExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy5.setStatus("current")


class _VRtrVrfExportPolicy6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy6_Object = MibTableColumn
vRtrVrfExportPolicy6 = _VRtrVrfExportPolicy6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 21),
    _VRtrVrfExportPolicy6_Type()
)
vRtrVrfExportPolicy6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy6.setStatus("current")


class _VRtrVrfExportPolicy7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy7_Object = MibTableColumn
vRtrVrfExportPolicy7 = _VRtrVrfExportPolicy7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 22),
    _VRtrVrfExportPolicy7_Type()
)
vRtrVrfExportPolicy7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy7.setStatus("current")


class _VRtrVrfExportPolicy8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy8_Object = MibTableColumn
vRtrVrfExportPolicy8 = _VRtrVrfExportPolicy8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 23),
    _VRtrVrfExportPolicy8_Type()
)
vRtrVrfExportPolicy8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy8.setStatus("current")


class _VRtrVrfExportPolicy9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy9_Object = MibTableColumn
vRtrVrfExportPolicy9 = _VRtrVrfExportPolicy9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 24),
    _VRtrVrfExportPolicy9_Type()
)
vRtrVrfExportPolicy9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy9.setStatus("current")


class _VRtrVrfExportPolicy10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy10_Object = MibTableColumn
vRtrVrfExportPolicy10 = _VRtrVrfExportPolicy10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 25),
    _VRtrVrfExportPolicy10_Type()
)
vRtrVrfExportPolicy10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy10.setStatus("current")


class _VRtrVrfExportPolicy11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy11_Object = MibTableColumn
vRtrVrfExportPolicy11 = _VRtrVrfExportPolicy11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 26),
    _VRtrVrfExportPolicy11_Type()
)
vRtrVrfExportPolicy11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy11.setStatus("current")


class _VRtrVrfExportPolicy12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy12_Object = MibTableColumn
vRtrVrfExportPolicy12 = _VRtrVrfExportPolicy12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 27),
    _VRtrVrfExportPolicy12_Type()
)
vRtrVrfExportPolicy12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy12.setStatus("current")


class _VRtrVrfExportPolicy13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy13_Object = MibTableColumn
vRtrVrfExportPolicy13 = _VRtrVrfExportPolicy13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 28),
    _VRtrVrfExportPolicy13_Type()
)
vRtrVrfExportPolicy13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy13.setStatus("current")


class _VRtrVrfExportPolicy14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy14_Object = MibTableColumn
vRtrVrfExportPolicy14 = _VRtrVrfExportPolicy14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 29),
    _VRtrVrfExportPolicy14_Type()
)
vRtrVrfExportPolicy14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy14.setStatus("current")


class _VRtrVrfExportPolicy15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrVrfExportPolicy15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrVrfExportPolicy15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrVrfExportPolicy15_Object = MibTableColumn
vRtrVrfExportPolicy15 = _VRtrVrfExportPolicy15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 30),
    _VRtrVrfExportPolicy15_Type()
)
vRtrVrfExportPolicy15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrVrfExportPolicy15.setStatus("current")


class _VRtrVrfPlcyCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type vRtrVrfPlcyCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_VRtrVrfPlcyCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_VRtrVrfPlcyCreationOrigin_Object = MibTableColumn
vRtrVrfPlcyCreationOrigin = _VRtrVrfPlcyCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 76, 1, 31),
    _VRtrVrfPlcyCreationOrigin_Type()
)
vRtrVrfPlcyCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrVrfPlcyCreationOrigin.setStatus("current")
_VRtrMvpnVrfPolicyTable_Object = MibTable
vRtrMvpnVrfPolicyTable = _VRtrMvpnVrfPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77)
)
if mibBuilder.loadTexts:
    vRtrMvpnVrfPolicyTable.setStatus("current")
_VRtrMvpnVrfPolicyEntry_Object = MibTableRow
vRtrMvpnVrfPolicyEntry = _VRtrMvpnVrfPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1)
)
if mibBuilder.loadTexts:
    vRtrMvpnVrfPolicyEntry.setStatus("current")


class _VRtrMvpnVrfImportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy1_Object = MibTableColumn
vRtrMvpnVrfImportPolicy1 = _VRtrMvpnVrfImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 1),
    _VRtrMvpnVrfImportPolicy1_Type()
)
vRtrMvpnVrfImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy1.setStatus("current")


class _VRtrMvpnVrfImportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy2_Object = MibTableColumn
vRtrMvpnVrfImportPolicy2 = _VRtrMvpnVrfImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 2),
    _VRtrMvpnVrfImportPolicy2_Type()
)
vRtrMvpnVrfImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy2.setStatus("current")


class _VRtrMvpnVrfImportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy3_Object = MibTableColumn
vRtrMvpnVrfImportPolicy3 = _VRtrMvpnVrfImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 3),
    _VRtrMvpnVrfImportPolicy3_Type()
)
vRtrMvpnVrfImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy3.setStatus("current")


class _VRtrMvpnVrfImportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy4_Object = MibTableColumn
vRtrMvpnVrfImportPolicy4 = _VRtrMvpnVrfImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 4),
    _VRtrMvpnVrfImportPolicy4_Type()
)
vRtrMvpnVrfImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy4.setStatus("current")


class _VRtrMvpnVrfImportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy5_Object = MibTableColumn
vRtrMvpnVrfImportPolicy5 = _VRtrMvpnVrfImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 5),
    _VRtrMvpnVrfImportPolicy5_Type()
)
vRtrMvpnVrfImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy5.setStatus("current")


class _VRtrMvpnVrfImportPolicy6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy6_Object = MibTableColumn
vRtrMvpnVrfImportPolicy6 = _VRtrMvpnVrfImportPolicy6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 6),
    _VRtrMvpnVrfImportPolicy6_Type()
)
vRtrMvpnVrfImportPolicy6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy6.setStatus("current")


class _VRtrMvpnVrfImportPolicy7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy7_Object = MibTableColumn
vRtrMvpnVrfImportPolicy7 = _VRtrMvpnVrfImportPolicy7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 7),
    _VRtrMvpnVrfImportPolicy7_Type()
)
vRtrMvpnVrfImportPolicy7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy7.setStatus("current")


class _VRtrMvpnVrfImportPolicy8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy8_Object = MibTableColumn
vRtrMvpnVrfImportPolicy8 = _VRtrMvpnVrfImportPolicy8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 8),
    _VRtrMvpnVrfImportPolicy8_Type()
)
vRtrMvpnVrfImportPolicy8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy8.setStatus("current")


class _VRtrMvpnVrfImportPolicy9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy9_Object = MibTableColumn
vRtrMvpnVrfImportPolicy9 = _VRtrMvpnVrfImportPolicy9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 9),
    _VRtrMvpnVrfImportPolicy9_Type()
)
vRtrMvpnVrfImportPolicy9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy9.setStatus("current")


class _VRtrMvpnVrfImportPolicy10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy10_Object = MibTableColumn
vRtrMvpnVrfImportPolicy10 = _VRtrMvpnVrfImportPolicy10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 10),
    _VRtrMvpnVrfImportPolicy10_Type()
)
vRtrMvpnVrfImportPolicy10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy10.setStatus("current")


class _VRtrMvpnVrfImportPolicy11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy11_Object = MibTableColumn
vRtrMvpnVrfImportPolicy11 = _VRtrMvpnVrfImportPolicy11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 11),
    _VRtrMvpnVrfImportPolicy11_Type()
)
vRtrMvpnVrfImportPolicy11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy11.setStatus("current")


class _VRtrMvpnVrfImportPolicy12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy12_Object = MibTableColumn
vRtrMvpnVrfImportPolicy12 = _VRtrMvpnVrfImportPolicy12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 12),
    _VRtrMvpnVrfImportPolicy12_Type()
)
vRtrMvpnVrfImportPolicy12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy12.setStatus("current")


class _VRtrMvpnVrfImportPolicy13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy13_Object = MibTableColumn
vRtrMvpnVrfImportPolicy13 = _VRtrMvpnVrfImportPolicy13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 13),
    _VRtrMvpnVrfImportPolicy13_Type()
)
vRtrMvpnVrfImportPolicy13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy13.setStatus("current")


class _VRtrMvpnVrfImportPolicy14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy14_Object = MibTableColumn
vRtrMvpnVrfImportPolicy14 = _VRtrMvpnVrfImportPolicy14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 14),
    _VRtrMvpnVrfImportPolicy14_Type()
)
vRtrMvpnVrfImportPolicy14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy14.setStatus("current")


class _VRtrMvpnVrfImportPolicy15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfImportPolicy15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfImportPolicy15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfImportPolicy15_Object = MibTableColumn
vRtrMvpnVrfImportPolicy15 = _VRtrMvpnVrfImportPolicy15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 15),
    _VRtrMvpnVrfImportPolicy15_Type()
)
vRtrMvpnVrfImportPolicy15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfImportPolicy15.setStatus("current")


class _VRtrMvpnVrfExportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy1_Object = MibTableColumn
vRtrMvpnVrfExportPolicy1 = _VRtrMvpnVrfExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 16),
    _VRtrMvpnVrfExportPolicy1_Type()
)
vRtrMvpnVrfExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy1.setStatus("current")


class _VRtrMvpnVrfExportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy2_Object = MibTableColumn
vRtrMvpnVrfExportPolicy2 = _VRtrMvpnVrfExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 17),
    _VRtrMvpnVrfExportPolicy2_Type()
)
vRtrMvpnVrfExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy2.setStatus("current")


class _VRtrMvpnVrfExportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy3_Object = MibTableColumn
vRtrMvpnVrfExportPolicy3 = _VRtrMvpnVrfExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 18),
    _VRtrMvpnVrfExportPolicy3_Type()
)
vRtrMvpnVrfExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy3.setStatus("current")


class _VRtrMvpnVrfExportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy4_Object = MibTableColumn
vRtrMvpnVrfExportPolicy4 = _VRtrMvpnVrfExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 19),
    _VRtrMvpnVrfExportPolicy4_Type()
)
vRtrMvpnVrfExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy4.setStatus("current")


class _VRtrMvpnVrfExportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy5_Object = MibTableColumn
vRtrMvpnVrfExportPolicy5 = _VRtrMvpnVrfExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 20),
    _VRtrMvpnVrfExportPolicy5_Type()
)
vRtrMvpnVrfExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy5.setStatus("current")


class _VRtrMvpnVrfExportPolicy6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy6_Object = MibTableColumn
vRtrMvpnVrfExportPolicy6 = _VRtrMvpnVrfExportPolicy6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 21),
    _VRtrMvpnVrfExportPolicy6_Type()
)
vRtrMvpnVrfExportPolicy6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy6.setStatus("current")


class _VRtrMvpnVrfExportPolicy7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy7_Object = MibTableColumn
vRtrMvpnVrfExportPolicy7 = _VRtrMvpnVrfExportPolicy7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 22),
    _VRtrMvpnVrfExportPolicy7_Type()
)
vRtrMvpnVrfExportPolicy7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy7.setStatus("current")


class _VRtrMvpnVrfExportPolicy8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy8_Object = MibTableColumn
vRtrMvpnVrfExportPolicy8 = _VRtrMvpnVrfExportPolicy8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 23),
    _VRtrMvpnVrfExportPolicy8_Type()
)
vRtrMvpnVrfExportPolicy8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy8.setStatus("current")


class _VRtrMvpnVrfExportPolicy9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy9_Object = MibTableColumn
vRtrMvpnVrfExportPolicy9 = _VRtrMvpnVrfExportPolicy9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 24),
    _VRtrMvpnVrfExportPolicy9_Type()
)
vRtrMvpnVrfExportPolicy9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy9.setStatus("current")


class _VRtrMvpnVrfExportPolicy10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy10_Object = MibTableColumn
vRtrMvpnVrfExportPolicy10 = _VRtrMvpnVrfExportPolicy10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 25),
    _VRtrMvpnVrfExportPolicy10_Type()
)
vRtrMvpnVrfExportPolicy10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy10.setStatus("current")


class _VRtrMvpnVrfExportPolicy11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy11_Object = MibTableColumn
vRtrMvpnVrfExportPolicy11 = _VRtrMvpnVrfExportPolicy11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 26),
    _VRtrMvpnVrfExportPolicy11_Type()
)
vRtrMvpnVrfExportPolicy11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy11.setStatus("current")


class _VRtrMvpnVrfExportPolicy12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy12_Object = MibTableColumn
vRtrMvpnVrfExportPolicy12 = _VRtrMvpnVrfExportPolicy12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 27),
    _VRtrMvpnVrfExportPolicy12_Type()
)
vRtrMvpnVrfExportPolicy12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy12.setStatus("current")


class _VRtrMvpnVrfExportPolicy13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy13_Object = MibTableColumn
vRtrMvpnVrfExportPolicy13 = _VRtrMvpnVrfExportPolicy13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 28),
    _VRtrMvpnVrfExportPolicy13_Type()
)
vRtrMvpnVrfExportPolicy13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy13.setStatus("current")


class _VRtrMvpnVrfExportPolicy14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy14_Object = MibTableColumn
vRtrMvpnVrfExportPolicy14 = _VRtrMvpnVrfExportPolicy14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 29),
    _VRtrMvpnVrfExportPolicy14_Type()
)
vRtrMvpnVrfExportPolicy14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy14.setStatus("current")


class _VRtrMvpnVrfExportPolicy15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrMvpnVrfExportPolicy15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrMvpnVrfExportPolicy15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrMvpnVrfExportPolicy15_Object = MibTableColumn
vRtrMvpnVrfExportPolicy15 = _VRtrMvpnVrfExportPolicy15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 77, 1, 30),
    _VRtrMvpnVrfExportPolicy15_Type()
)
vRtrMvpnVrfExportPolicy15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrMvpnVrfExportPolicy15.setStatus("current")
_VRtrIfQosTable_Object = MibTable
vRtrIfQosTable = _VRtrIfQosTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78)
)
if mibBuilder.loadTexts:
    vRtrIfQosTable.setStatus("current")
_VRtrIfQosEntry_Object = MibTableRow
vRtrIfQosEntry = _VRtrIfQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1)
)
if mibBuilder.loadTexts:
    vRtrIfQosEntry.setStatus("current")


class _VRtrIfQosNetworkPolicyId_Type(TNetworkPolicyID):
    """Custom type vRtrIfQosNetworkPolicyId based on TNetworkPolicyID"""
    defaultValue = 1


_VRtrIfQosNetworkPolicyId_Type.__name__ = "TNetworkPolicyID"
_VRtrIfQosNetworkPolicyId_Object = MibTableColumn
vRtrIfQosNetworkPolicyId = _VRtrIfQosNetworkPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 1),
    _VRtrIfQosNetworkPolicyId_Type()
)
vRtrIfQosNetworkPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosNetworkPolicyId.setStatus("current")


class _VRtrIfQosEgrPortRedirectQGrp_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfQosEgrPortRedirectQGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfQosEgrPortRedirectQGrp_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfQosEgrPortRedirectQGrp_Object = MibTableColumn
vRtrIfQosEgrPortRedirectQGrp = _VRtrIfQosEgrPortRedirectQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 2),
    _VRtrIfQosEgrPortRedirectQGrp_Type()
)
vRtrIfQosEgrPortRedirectQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrPortRedirectQGrp.setStatus("current")


class _VRtrIfQosEgrQGrpInstanceId_Type(TQosQGrpInstanceIDorZero):
    """Custom type vRtrIfQosEgrQGrpInstanceId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_VRtrIfQosEgrQGrpInstanceId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_VRtrIfQosEgrQGrpInstanceId_Object = MibTableColumn
vRtrIfQosEgrQGrpInstanceId = _VRtrIfQosEgrQGrpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 3),
    _VRtrIfQosEgrQGrpInstanceId_Type()
)
vRtrIfQosEgrQGrpInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrQGrpInstanceId.setStatus("current")


class _VRtrIfQosIngFpRedirectQGrp_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfQosIngFpRedirectQGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfQosIngFpRedirectQGrp_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfQosIngFpRedirectQGrp_Object = MibTableColumn
vRtrIfQosIngFpRedirectQGrp = _VRtrIfQosIngFpRedirectQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 4),
    _VRtrIfQosIngFpRedirectQGrp_Type()
)
vRtrIfQosIngFpRedirectQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosIngFpRedirectQGrp.setStatus("current")


class _VRtrIfQosIngQGrpInstanceId_Type(TQosQGrpInstanceIDorZero):
    """Custom type vRtrIfQosIngQGrpInstanceId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_VRtrIfQosIngQGrpInstanceId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_VRtrIfQosIngQGrpInstanceId_Object = MibTableColumn
vRtrIfQosIngQGrpInstanceId = _VRtrIfQosIngQGrpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 5),
    _VRtrIfQosIngQGrpInstanceId_Type()
)
vRtrIfQosIngQGrpInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosIngQGrpInstanceId.setStatus("current")


class _VRtrIfQosEgrVlanQosPlcy_Type(TLNamedItemOrEmpty):
    """Custom type vRtrIfQosEgrVlanQosPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_VRtrIfQosEgrVlanQosPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrIfQosEgrVlanQosPlcy_Object = MibTableColumn
vRtrIfQosEgrVlanQosPlcy = _VRtrIfQosEgrVlanQosPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 6),
    _VRtrIfQosEgrVlanQosPlcy_Type()
)
vRtrIfQosEgrVlanQosPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrVlanQosPlcy.setStatus("current")


class _VRtrIfQosEgrRemarkPlcy_Type(TLNamedItemOrEmpty):
    """Custom type vRtrIfQosEgrRemarkPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_VRtrIfQosEgrRemarkPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrIfQosEgrRemarkPlcy_Object = MibTableColumn
vRtrIfQosEgrRemarkPlcy = _VRtrIfQosEgrRemarkPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 7),
    _VRtrIfQosEgrRemarkPlcy_Type()
)
vRtrIfQosEgrRemarkPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrRemarkPlcy.setStatus("current")


class _VRtrIfQosNetworkIngressPolicy_Type(TLNamedItemOrEmpty):
    """Custom type vRtrIfQosNetworkIngressPolicy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_VRtrIfQosNetworkIngressPolicy_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrIfQosNetworkIngressPolicy_Object = MibTableColumn
vRtrIfQosNetworkIngressPolicy = _VRtrIfQosNetworkIngressPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 8),
    _VRtrIfQosNetworkIngressPolicy_Type()
)
vRtrIfQosNetworkIngressPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosNetworkIngressPolicy.setStatus("current")


class _VRtrIfQosEgrAggRatePIRLmt_Type(Integer32):
    """Custom type vRtrIfQosEgrAggRatePIRLmt based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 400000000),
    )


_VRtrIfQosEgrAggRatePIRLmt_Type.__name__ = "Integer32"
_VRtrIfQosEgrAggRatePIRLmt_Object = MibTableColumn
vRtrIfQosEgrAggRatePIRLmt = _VRtrIfQosEgrAggRatePIRLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 9),
    _VRtrIfQosEgrAggRatePIRLmt_Type()
)
vRtrIfQosEgrAggRatePIRLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrAggRatePIRLmt.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfQosEgrAggRatePIRLmt.setUnits("kilobps")


class _VRtrIfQosEgrAggRateCIRLmt_Type(Integer32):
    """Custom type vRtrIfQosEgrAggRateCIRLmt based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 400000000),
    )


_VRtrIfQosEgrAggRateCIRLmt_Type.__name__ = "Integer32"
_VRtrIfQosEgrAggRateCIRLmt_Object = MibTableColumn
vRtrIfQosEgrAggRateCIRLmt = _VRtrIfQosEgrAggRateCIRLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 10),
    _VRtrIfQosEgrAggRateCIRLmt_Type()
)
vRtrIfQosEgrAggRateCIRLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrAggRateCIRLmt.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfQosEgrAggRateCIRLmt.setUnits("kilobps")


class _VRtrIfQosEgrOperVlanQosPlcy_Type(TLNamedItemOrEmpty):
    """Custom type vRtrIfQosEgrOperVlanQosPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfQosEgrOperVlanQosPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrIfQosEgrOperVlanQosPlcy_Object = MibTableColumn
vRtrIfQosEgrOperVlanQosPlcy = _VRtrIfQosEgrOperVlanQosPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 11),
    _VRtrIfQosEgrOperVlanQosPlcy_Type()
)
vRtrIfQosEgrOperVlanQosPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfQosEgrOperVlanQosPlcy.setStatus("current")


class _VRtrIfQosEgrVlanPlcyPortRedirect_Type(TruthValue):
    """Custom type vRtrIfQosEgrVlanPlcyPortRedirect based on TruthValue"""
    defaultValue = 2


_VRtrIfQosEgrVlanPlcyPortRedirect_Type.__name__ = "TruthValue"
_VRtrIfQosEgrVlanPlcyPortRedirect_Object = MibTableColumn
vRtrIfQosEgrVlanPlcyPortRedirect = _VRtrIfQosEgrVlanPlcyPortRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 78, 1, 12),
    _VRtrIfQosEgrVlanPlcyPortRedirect_Type()
)
vRtrIfQosEgrVlanPlcyPortRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfQosEgrVlanPlcyPortRedirect.setStatus("current")
_VRtrDnsTableLastCh_Type = TimeStamp
_VRtrDnsTableLastCh_Object = MibScalar
vRtrDnsTableLastCh = _VRtrDnsTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 79),
    _VRtrDnsTableLastCh_Type()
)
vRtrDnsTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDnsTableLastCh.setStatus("current")
_VRtrDnsTable_Object = MibTable
vRtrDnsTable = _VRtrDnsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80)
)
if mibBuilder.loadTexts:
    vRtrDnsTable.setStatus("current")
_VRtrDnsEntry_Object = MibTableRow
vRtrDnsEntry = _VRtrDnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1)
)
vRtrDnsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrDnsEntry.setStatus("current")
_VRtrDnsLastCh_Type = TimeStamp
_VRtrDnsLastCh_Object = MibTableColumn
vRtrDnsLastCh = _VRtrDnsLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 1),
    _VRtrDnsLastCh_Type()
)
vRtrDnsLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDnsLastCh.setStatus("current")
_VRtrDnsRowStatus_Type = RowStatus
_VRtrDnsRowStatus_Object = MibTableColumn
vRtrDnsRowStatus = _VRtrDnsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 2),
    _VRtrDnsRowStatus_Type()
)
vRtrDnsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsRowStatus.setStatus("current")


class _VRtrDnsAdminState_Type(TmnxEnabledDisabled):
    """Custom type vRtrDnsAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrDnsAdminState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrDnsAdminState_Object = MibTableColumn
vRtrDnsAdminState = _VRtrDnsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 3),
    _VRtrDnsAdminState_Type()
)
vRtrDnsAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsAdminState.setStatus("current")


class _VRtrDnsPrimaryAddrType_Type(InetAddressType):
    """Custom type vRtrDnsPrimaryAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrDnsPrimaryAddrType_Type.__name__ = "InetAddressType"
_VRtrDnsPrimaryAddrType_Object = MibTableColumn
vRtrDnsPrimaryAddrType = _VRtrDnsPrimaryAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 4),
    _VRtrDnsPrimaryAddrType_Type()
)
vRtrDnsPrimaryAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsPrimaryAddrType.setStatus("current")


class _VRtrDnsPrimaryAddr_Type(InetAddress):
    """Custom type vRtrDnsPrimaryAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrDnsPrimaryAddr_Type.__name__ = "InetAddress"
_VRtrDnsPrimaryAddr_Object = MibTableColumn
vRtrDnsPrimaryAddr = _VRtrDnsPrimaryAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 5),
    _VRtrDnsPrimaryAddr_Type()
)
vRtrDnsPrimaryAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsPrimaryAddr.setStatus("current")


class _VRtrDnsSecondaryAddrType_Type(InetAddressType):
    """Custom type vRtrDnsSecondaryAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrDnsSecondaryAddrType_Type.__name__ = "InetAddressType"
_VRtrDnsSecondaryAddrType_Object = MibTableColumn
vRtrDnsSecondaryAddrType = _VRtrDnsSecondaryAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 6),
    _VRtrDnsSecondaryAddrType_Type()
)
vRtrDnsSecondaryAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsSecondaryAddrType.setStatus("current")


class _VRtrDnsSecondaryAddr_Type(InetAddress):
    """Custom type vRtrDnsSecondaryAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrDnsSecondaryAddr_Type.__name__ = "InetAddress"
_VRtrDnsSecondaryAddr_Object = MibTableColumn
vRtrDnsSecondaryAddr = _VRtrDnsSecondaryAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 7),
    _VRtrDnsSecondaryAddr_Type()
)
vRtrDnsSecondaryAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsSecondaryAddr.setStatus("current")


class _VRtrDnsTertiaryAddrType_Type(InetAddressType):
    """Custom type vRtrDnsTertiaryAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrDnsTertiaryAddrType_Type.__name__ = "InetAddressType"
_VRtrDnsTertiaryAddrType_Object = MibTableColumn
vRtrDnsTertiaryAddrType = _VRtrDnsTertiaryAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 8),
    _VRtrDnsTertiaryAddrType_Type()
)
vRtrDnsTertiaryAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsTertiaryAddrType.setStatus("current")


class _VRtrDnsTertiaryAddr_Type(InetAddress):
    """Custom type vRtrDnsTertiaryAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrDnsTertiaryAddr_Type.__name__ = "InetAddress"
_VRtrDnsTertiaryAddr_Object = MibTableColumn
vRtrDnsTertiaryAddr = _VRtrDnsTertiaryAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 9),
    _VRtrDnsTertiaryAddr_Type()
)
vRtrDnsTertiaryAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsTertiaryAddr.setStatus("current")


class _VRtrDnsIpv4SourceAddr_Type(InetAddressIPv4):
    """Custom type vRtrDnsIpv4SourceAddr based on InetAddressIPv4"""
    defaultHexValue = "00000000"


_VRtrDnsIpv4SourceAddr_Type.__name__ = "InetAddressIPv4"
_VRtrDnsIpv4SourceAddr_Object = MibTableColumn
vRtrDnsIpv4SourceAddr = _VRtrDnsIpv4SourceAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 10),
    _VRtrDnsIpv4SourceAddr_Type()
)
vRtrDnsIpv4SourceAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsIpv4SourceAddr.setStatus("current")


class _VRtrDnsIpv6SourceAddr_Type(InetAddressIPv6):
    """Custom type vRtrDnsIpv6SourceAddr based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrDnsIpv6SourceAddr_Type.__name__ = "InetAddressIPv6"
_VRtrDnsIpv6SourceAddr_Object = MibTableColumn
vRtrDnsIpv6SourceAddr = _VRtrDnsIpv6SourceAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 11),
    _VRtrDnsIpv6SourceAddr_Type()
)
vRtrDnsIpv6SourceAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsIpv6SourceAddr.setStatus("current")


class _VRtrDnsDefaultDomainName_Type(DisplayString):
    """Custom type vRtrDnsDefaultDomainName based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VRtrDnsDefaultDomainName_Type.__name__ = "DisplayString"
_VRtrDnsDefaultDomainName_Object = MibTableColumn
vRtrDnsDefaultDomainName = _VRtrDnsDefaultDomainName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 80, 1, 12),
    _VRtrDnsDefaultDomainName_Type()
)
vRtrDnsDefaultDomainName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsDefaultDomainName.setStatus("current")
_VRtrInetAllCidrRouteTnlExtTable_Object = MibTable
vRtrInetAllCidrRouteTnlExtTable = _VRtrInetAllCidrRouteTnlExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81)
)
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteTnlExtTable.setStatus("current")
_VRtrInetAllCidrRouteTnlExtEntry_Object = MibTableRow
vRtrInetAllCidrRouteTnlExtEntry = _VRtrInetAllCidrRouteTnlExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81, 1)
)
vRtrInetAllCidrRouteTnlExtEntry.setIndexNames(
    (0, "IP-FORWARD-MIB", "inetCidrRouteDestType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteDest"),
    (0, "IP-FORWARD-MIB", "inetCidrRoutePfxLen"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteProto"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteProtoID"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHopType"),
    (0, "IP-FORWARD-MIB", "inetCidrRouteNextHop"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlNxtHopType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlNxtHopOwner"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlNxtHopTnlId"),
)
if mibBuilder.loadTexts:
    vRtrInetAllCidrRouteTnlExtEntry.setStatus("current")
_VRtrInetAllCidrRteTnlNxtHopType_Type = TmnxInetCidrNextHopType
_VRtrInetAllCidrRteTnlNxtHopType_Object = MibTableColumn
vRtrInetAllCidrRteTnlNxtHopType = _VRtrInetAllCidrRteTnlNxtHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81, 1, 1),
    _VRtrInetAllCidrRteTnlNxtHopType_Type()
)
vRtrInetAllCidrRteTnlNxtHopType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRteTnlNxtHopType.setStatus("current")
_VRtrInetAllCidrRteTnlNxtHopOwner_Type = TmnxInetCidrNextHopOwner
_VRtrInetAllCidrRteTnlNxtHopOwner_Object = MibTableColumn
vRtrInetAllCidrRteTnlNxtHopOwner = _VRtrInetAllCidrRteTnlNxtHopOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81, 1, 2),
    _VRtrInetAllCidrRteTnlNxtHopOwner_Type()
)
vRtrInetAllCidrRteTnlNxtHopOwner.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRteTnlNxtHopOwner.setStatus("current")
_VRtrInetAllCidrRteTnlNxtHopTnlId_Type = Unsigned32
_VRtrInetAllCidrRteTnlNxtHopTnlId_Object = MibTableColumn
vRtrInetAllCidrRteTnlNxtHopTnlId = _VRtrInetAllCidrRteTnlNxtHopTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81, 1, 3),
    _VRtrInetAllCidrRteTnlNxtHopTnlId_Type()
)
vRtrInetAllCidrRteTnlNxtHopTnlId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRteTnlNxtHopTnlId.setStatus("current")
_VRtrInetAllCidrRteTnlEnabledTime_Type = TimeStamp
_VRtrInetAllCidrRteTnlEnabledTime_Object = MibTableColumn
vRtrInetAllCidrRteTnlEnabledTime = _VRtrInetAllCidrRteTnlEnabledTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 81, 1, 4),
    _VRtrInetAllCidrRteTnlEnabledTime_Type()
)
vRtrInetAllCidrRteTnlEnabledTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetAllCidrRteTnlEnabledTime.setStatus("current")
_VRtrRsmTableLastCh_Type = TimeStamp
_VRtrRsmTableLastCh_Object = MibScalar
vRtrRsmTableLastCh = _VRtrRsmTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 82),
    _VRtrRsmTableLastCh_Type()
)
vRtrRsmTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsmTableLastCh.setStatus("current")
_VRtrRsmTable_Object = MibTable
vRtrRsmTable = _VRtrRsmTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83)
)
if mibBuilder.loadTexts:
    vRtrRsmTable.setStatus("current")
_VRtrRsmEntry_Object = MibTableRow
vRtrRsmEntry = _VRtrRsmEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83, 1)
)
vRtrRsmEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrRsmEntry.setStatus("current")
_VRtrRsmLastCh_Type = TimeStamp
_VRtrRsmLastCh_Object = MibTableColumn
vRtrRsmLastCh = _VRtrRsmLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83, 1, 1),
    _VRtrRsmLastCh_Type()
)
vRtrRsmLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRsmLastCh.setStatus("current")
_VRtrRsmRowStatus_Type = RowStatus
_VRtrRsmRowStatus_Object = MibTableColumn
vRtrRsmRowStatus = _VRtrRsmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83, 1, 2),
    _VRtrRsmRowStatus_Type()
)
vRtrRsmRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsmRowStatus.setStatus("current")


class _VRtrRsmGroup_Type(TmnxIsaBbGrpId):
    """Custom type vRtrRsmGroup based on TmnxIsaBbGrpId"""
    defaultValue = 0


_VRtrRsmGroup_Type.__name__ = "TmnxIsaBbGrpId"
_VRtrRsmGroup_Object = MibTableColumn
vRtrRsmGroup = _VRtrRsmGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83, 1, 3),
    _VRtrRsmGroup_Type()
)
vRtrRsmGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsmGroup.setStatus("current")


class _VRtrRsmToBaseNetwork_Type(TruthValue):
    """Custom type vRtrRsmToBaseNetwork based on TruthValue"""
    defaultValue = 2


_VRtrRsmToBaseNetwork_Type.__name__ = "TruthValue"
_VRtrRsmToBaseNetwork_Object = MibTableColumn
vRtrRsmToBaseNetwork = _VRtrRsmToBaseNetwork_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 83, 1, 4),
    _VRtrRsmToBaseNetwork_Type()
)
vRtrRsmToBaseNetwork.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRsmToBaseNetwork.setStatus("current")
_VRtrIfLocalPoolTable_Object = MibTable
vRtrIfLocalPoolTable = _VRtrIfLocalPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84)
)
if mibBuilder.loadTexts:
    vRtrIfLocalPoolTable.setStatus("current")
_VRtrIfLocalPoolEntry_Object = MibTableRow
vRtrIfLocalPoolEntry = _VRtrIfLocalPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1)
)
if mibBuilder.loadTexts:
    vRtrIfLocalPoolEntry.setStatus("current")


class _VRtrIfLocalPoolAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfLocalPoolAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfLocalPoolAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfLocalPoolAdminState_Object = MibTableColumn
vRtrIfLocalPoolAdminState = _VRtrIfLocalPoolAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 1),
    _VRtrIfLocalPoolAdminState_Type()
)
vRtrIfLocalPoolAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolAdminState.setStatus("current")


class _VRtrIfLocalPoolServerName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfLocalPoolServerName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfLocalPoolServerName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfLocalPoolServerName_Object = MibTableColumn
vRtrIfLocalPoolServerName = _VRtrIfLocalPoolServerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 2),
    _VRtrIfLocalPoolServerName_Type()
)
vRtrIfLocalPoolServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolServerName.setStatus("current")


class _VRtrIfLocalPoolClientApps_Type(Bits):
    """Custom type vRtrIfLocalPoolClientApps based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("ppp-v4", 0),
          ("ipoe-v4", 1))
    )

_VRtrIfLocalPoolClientApps_Type.__name__ = "Bits"
_VRtrIfLocalPoolClientApps_Object = MibTableColumn
vRtrIfLocalPoolClientApps = _VRtrIfLocalPoolClientApps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 3),
    _VRtrIfLocalPoolClientApps_Type()
)
vRtrIfLocalPoolClientApps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolClientApps.setStatus("current")


class _VRtrIfLocalPoolDefPoolName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfLocalPoolDefPoolName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfLocalPoolDefPoolName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfLocalPoolDefPoolName_Object = MibTableColumn
vRtrIfLocalPoolDefPoolName = _VRtrIfLocalPoolDefPoolName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 4),
    _VRtrIfLocalPoolDefPoolName_Type()
)
vRtrIfLocalPoolDefPoolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolDefPoolName.setStatus("current")


class _VRtrIfLocalPoolSecPoolName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfLocalPoolSecPoolName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfLocalPoolSecPoolName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfLocalPoolSecPoolName_Object = MibTableColumn
vRtrIfLocalPoolSecPoolName = _VRtrIfLocalPoolSecPoolName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 5),
    _VRtrIfLocalPoolSecPoolName_Type()
)
vRtrIfLocalPoolSecPoolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolSecPoolName.setStatus("current")


class _VRtrIfLocalPoolV6ServerName_Type(TNamedItemOrEmpty):
    """Custom type vRtrIfLocalPoolV6ServerName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrIfLocalPoolV6ServerName_Type.__name__ = "TNamedItemOrEmpty"
_VRtrIfLocalPoolV6ServerName_Object = MibTableColumn
vRtrIfLocalPoolV6ServerName = _VRtrIfLocalPoolV6ServerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 6),
    _VRtrIfLocalPoolV6ServerName_Type()
)
vRtrIfLocalPoolV6ServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolV6ServerName.setStatus("current")


class _VRtrIfLocalPoolV6ClientApps_Type(Bits):
    """Custom type vRtrIfLocalPoolV6ClientApps based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("pppSlaac", 0),
          ("ipoeWan", 1),
          ("ipoeSlaac", 2))
    )

_VRtrIfLocalPoolV6ClientApps_Type.__name__ = "Bits"
_VRtrIfLocalPoolV6ClientApps_Object = MibTableColumn
vRtrIfLocalPoolV6ClientApps = _VRtrIfLocalPoolV6ClientApps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 84, 1, 7),
    _VRtrIfLocalPoolV6ClientApps_Type()
)
vRtrIfLocalPoolV6ClientApps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLocalPoolV6ClientApps.setStatus("current")
_VRtrIfDcpFpStaticStatTable_Object = MibTable
vRtrIfDcpFpStaticStatTable = _VRtrIfDcpFpStaticStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85)
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticStatTable.setStatus("current")
_VRtrIfDcpFpStaticStatEntry_Object = MibTableRow
vRtrIfDcpFpStaticStatEntry = _VRtrIfDcpFpStaticStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1)
)
vRtrIfDcpFpStaticStatEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticPlcrName"),
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticStatEntry.setStatus("current")
_VRtrIfDcpFpStaticPlcrName_Type = TNamedItem
_VRtrIfDcpFpStaticPlcrName_Object = MibTableColumn
vRtrIfDcpFpStaticPlcrName = _VRtrIfDcpFpStaticPlcrName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 1),
    _VRtrIfDcpFpStaticPlcrName_Type()
)
vRtrIfDcpFpStaticPlcrName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticPlcrName.setStatus("current")
_VRtrIfDcpFpStaticState_Type = TmnxDistCpuProtState
_VRtrIfDcpFpStaticState_Object = MibTableColumn
vRtrIfDcpFpStaticState = _VRtrIfDcpFpStaticState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 2),
    _VRtrIfDcpFpStaticState_Type()
)
vRtrIfDcpFpStaticState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticState.setStatus("current")
_VRtrIfDcpFpStaticExcdCount_Type = Counter64
_VRtrIfDcpFpStaticExcdCount_Object = MibTableColumn
vRtrIfDcpFpStaticExcdCount = _VRtrIfDcpFpStaticExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 3),
    _VRtrIfDcpFpStaticExcdCount_Type()
)
vRtrIfDcpFpStaticExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticExcdCount.setStatus("current")
_VRtrIfDcpFpStaticExcdCountHi_Type = Counter32
_VRtrIfDcpFpStaticExcdCountHi_Object = MibTableColumn
vRtrIfDcpFpStaticExcdCountHi = _VRtrIfDcpFpStaticExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 4),
    _VRtrIfDcpFpStaticExcdCountHi_Type()
)
vRtrIfDcpFpStaticExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticExcdCountHi.setStatus("current")
_VRtrIfDcpFpStaticExcdCountLo_Type = Counter32
_VRtrIfDcpFpStaticExcdCountLo_Object = MibTableColumn
vRtrIfDcpFpStaticExcdCountLo = _VRtrIfDcpFpStaticExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 5),
    _VRtrIfDcpFpStaticExcdCountLo_Type()
)
vRtrIfDcpFpStaticExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticExcdCountLo.setStatus("current")
_VRtrIfDcpFpStaticHoldDown_Type = TmnxDistCpuProtActionDuration
_VRtrIfDcpFpStaticHoldDown_Object = MibTableColumn
vRtrIfDcpFpStaticHoldDown = _VRtrIfDcpFpStaticHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 6),
    _VRtrIfDcpFpStaticHoldDown_Type()
)
vRtrIfDcpFpStaticHoldDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticHoldDown.setUnits("seconds")
_VRtrIfDcpFpStaticDetectionTime_Type = Unsigned32
_VRtrIfDcpFpStaticDetectionTime_Object = MibTableColumn
vRtrIfDcpFpStaticDetectionTime = _VRtrIfDcpFpStaticDetectionTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 85, 1, 7),
    _VRtrIfDcpFpStaticDetectionTime_Type()
)
vRtrIfDcpFpStaticDetectionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticDetectionTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDcpFpStaticDetectionTime.setUnits("seconds")
_VRtrIfDcpFpDynStatTable_Object = MibTable
vRtrIfDcpFpDynStatTable = _VRtrIfDcpFpDynStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86)
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynStatTable.setStatus("current")
_VRtrIfDcpFpDynStatEntry_Object = MibTableRow
vRtrIfDcpFpDynStatEntry = _VRtrIfDcpFpDynStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1)
)
vRtrIfDcpFpDynStatEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDcpFpProtocol"),
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynStatEntry.setStatus("current")
_VRtrIfDcpFpProtocol_Type = TmnxDistCpuProtProtocolId
_VRtrIfDcpFpProtocol_Object = MibTableColumn
vRtrIfDcpFpProtocol = _VRtrIfDcpFpProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 1),
    _VRtrIfDcpFpProtocol_Type()
)
vRtrIfDcpFpProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDcpFpProtocol.setStatus("current")
_VRtrIfDcpFpDynState_Type = TmnxDistCpuProtState
_VRtrIfDcpFpDynState_Object = MibTableColumn
vRtrIfDcpFpDynState = _VRtrIfDcpFpDynState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 2),
    _VRtrIfDcpFpDynState_Type()
)
vRtrIfDcpFpDynState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynState.setStatus("current")
_VRtrIfDcpFpDynExcdCount_Type = Counter64
_VRtrIfDcpFpDynExcdCount_Object = MibTableColumn
vRtrIfDcpFpDynExcdCount = _VRtrIfDcpFpDynExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 3),
    _VRtrIfDcpFpDynExcdCount_Type()
)
vRtrIfDcpFpDynExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynExcdCount.setStatus("current")
_VRtrIfDcpFpDynExcdCountHi_Type = Counter32
_VRtrIfDcpFpDynExcdCountHi_Object = MibTableColumn
vRtrIfDcpFpDynExcdCountHi = _VRtrIfDcpFpDynExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 4),
    _VRtrIfDcpFpDynExcdCountHi_Type()
)
vRtrIfDcpFpDynExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynExcdCountHi.setStatus("current")
_VRtrIfDcpFpDynExcdCountLo_Type = Counter32
_VRtrIfDcpFpDynExcdCountLo_Object = MibTableColumn
vRtrIfDcpFpDynExcdCountLo = _VRtrIfDcpFpDynExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 5),
    _VRtrIfDcpFpDynExcdCountLo_Type()
)
vRtrIfDcpFpDynExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynExcdCountLo.setStatus("current")
_VRtrIfDcpFpDynHoldDown_Type = TmnxDistCpuProtActionDuration
_VRtrIfDcpFpDynHoldDown_Object = MibTableColumn
vRtrIfDcpFpDynHoldDown = _VRtrIfDcpFpDynHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 6),
    _VRtrIfDcpFpDynHoldDown_Type()
)
vRtrIfDcpFpDynHoldDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynHoldDown.setUnits("seconds")
_VRtrIfDcpFpDynDetectionTime_Type = Unsigned32
_VRtrIfDcpFpDynDetectionTime_Object = MibTableColumn
vRtrIfDcpFpDynDetectionTime = _VRtrIfDcpFpDynDetectionTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 7),
    _VRtrIfDcpFpDynDetectionTime_Type()
)
vRtrIfDcpFpDynDetectionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynDetectionTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynDetectionTime.setUnits("seconds")
_VRtrIfDcpFpDynAllocated_Type = TruthValue
_VRtrIfDcpFpDynAllocated_Object = MibTableColumn
vRtrIfDcpFpDynAllocated = _VRtrIfDcpFpDynAllocated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 86, 1, 8),
    _VRtrIfDcpFpDynAllocated_Type()
)
vRtrIfDcpFpDynAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpDynAllocated.setStatus("current")
_VRtrIfDcpFpLocMonStatTable_Object = MibTable
vRtrIfDcpFpLocMonStatTable = _VRtrIfDcpFpLocMonStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87)
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonStatTable.setStatus("current")
_VRtrIfDcpFpLocMonStatEntry_Object = MibTableRow
vRtrIfDcpFpLocMonStatEntry = _VRtrIfDcpFpLocMonStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1)
)
vRtrIfDcpFpLocMonStatEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"),
    (0, "TIMETRA-CHASSIS-MIB", "tmnxFPNum"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonPlcrName"),
)
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonStatEntry.setStatus("current")
_VRtrIfDcpFpLocMonPlcrName_Type = TNamedItem
_VRtrIfDcpFpLocMonPlcrName_Object = MibTableColumn
vRtrIfDcpFpLocMonPlcrName = _VRtrIfDcpFpLocMonPlcrName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 1),
    _VRtrIfDcpFpLocMonPlcrName_Type()
)
vRtrIfDcpFpLocMonPlcrName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonPlcrName.setStatus("current")
_VRtrIfDcpFpLocMonState_Type = TmnxDistCpuProtState
_VRtrIfDcpFpLocMonState_Object = MibTableColumn
vRtrIfDcpFpLocMonState = _VRtrIfDcpFpLocMonState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 2),
    _VRtrIfDcpFpLocMonState_Type()
)
vRtrIfDcpFpLocMonState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonState.setStatus("current")
_VRtrIfDcpFpLocMonExcdCount_Type = Counter64
_VRtrIfDcpFpLocMonExcdCount_Object = MibTableColumn
vRtrIfDcpFpLocMonExcdCount = _VRtrIfDcpFpLocMonExcdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 3),
    _VRtrIfDcpFpLocMonExcdCount_Type()
)
vRtrIfDcpFpLocMonExcdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonExcdCount.setStatus("current")
_VRtrIfDcpFpLocMonExcdCountHi_Type = Counter32
_VRtrIfDcpFpLocMonExcdCountHi_Object = MibTableColumn
vRtrIfDcpFpLocMonExcdCountHi = _VRtrIfDcpFpLocMonExcdCountHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 4),
    _VRtrIfDcpFpLocMonExcdCountHi_Type()
)
vRtrIfDcpFpLocMonExcdCountHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonExcdCountHi.setStatus("current")
_VRtrIfDcpFpLocMonExcdCountLo_Type = Counter32
_VRtrIfDcpFpLocMonExcdCountLo_Object = MibTableColumn
vRtrIfDcpFpLocMonExcdCountLo = _VRtrIfDcpFpLocMonExcdCountLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 5),
    _VRtrIfDcpFpLocMonExcdCountLo_Type()
)
vRtrIfDcpFpLocMonExcdCountLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonExcdCountLo.setStatus("current")
_VRtrIfDcpFpLocMonAllDynAlloc_Type = TruthValue
_VRtrIfDcpFpLocMonAllDynAlloc_Object = MibTableColumn
vRtrIfDcpFpLocMonAllDynAlloc = _VRtrIfDcpFpLocMonAllDynAlloc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 87, 1, 6),
    _VRtrIfDcpFpLocMonAllDynAlloc_Type()
)
vRtrIfDcpFpLocMonAllDynAlloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDcpFpLocMonAllDynAlloc.setStatus("current")
_VRtrIfDHCP6ProxyDuidTableLastCh_Type = TimeStamp
_VRtrIfDHCP6ProxyDuidTableLastCh_Object = MibScalar
vRtrIfDHCP6ProxyDuidTableLastCh = _VRtrIfDHCP6ProxyDuidTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 88),
    _VRtrIfDHCP6ProxyDuidTableLastCh_Type()
)
vRtrIfDHCP6ProxyDuidTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidTableLastCh.setStatus("current")
_VRtrIfDHCP6ProxyDuidTable_Object = MibTable
vRtrIfDHCP6ProxyDuidTable = _VRtrIfDHCP6ProxyDuidTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidTable.setStatus("current")
_VRtrIfDHCP6ProxyDuidEntry_Object = MibTableRow
vRtrIfDHCP6ProxyDuidEntry = _VRtrIfDHCP6ProxyDuidEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidEntry.setStatus("current")
_VRtrIfDHCP6ProxyDuidLastChanged_Type = TimeStamp
_VRtrIfDHCP6ProxyDuidLastChanged_Object = MibTableColumn
vRtrIfDHCP6ProxyDuidLastChanged = _VRtrIfDHCP6ProxyDuidLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1, 1),
    _VRtrIfDHCP6ProxyDuidLastChanged_Type()
)
vRtrIfDHCP6ProxyDuidLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidLastChanged.setStatus("current")


class _VRtrIfDHCP6ProxyDuidTypeCode_Type(TmnxDhcpServerDUIDTypeCode):
    """Custom type vRtrIfDHCP6ProxyDuidTypeCode based on TmnxDhcpServerDUIDTypeCode"""
    defaultValue = 3


_VRtrIfDHCP6ProxyDuidTypeCode_Type.__name__ = "TmnxDhcpServerDUIDTypeCode"
_VRtrIfDHCP6ProxyDuidTypeCode_Object = MibTableColumn
vRtrIfDHCP6ProxyDuidTypeCode = _VRtrIfDHCP6ProxyDuidTypeCode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1, 2),
    _VRtrIfDHCP6ProxyDuidTypeCode_Type()
)
vRtrIfDHCP6ProxyDuidTypeCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidTypeCode.setStatus("current")
_VRtrIfDHCP6ProxyDuidEnNumber_Type = Unsigned32
_VRtrIfDHCP6ProxyDuidEnNumber_Object = MibTableColumn
vRtrIfDHCP6ProxyDuidEnNumber = _VRtrIfDHCP6ProxyDuidEnNumber_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1, 3),
    _VRtrIfDHCP6ProxyDuidEnNumber_Type()
)
vRtrIfDHCP6ProxyDuidEnNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidEnNumber.setStatus("current")


class _VRtrIfDHCP6ProxyDuidEnIdData_Type(OctetString):
    """Custom type vRtrIfDHCP6ProxyDuidEnIdData based on OctetString"""
    defaultValue = OctetString("")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_VRtrIfDHCP6ProxyDuidEnIdData_Type.__name__ = "OctetString"
_VRtrIfDHCP6ProxyDuidEnIdData_Object = MibTableColumn
vRtrIfDHCP6ProxyDuidEnIdData = _VRtrIfDHCP6ProxyDuidEnIdData_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1, 4),
    _VRtrIfDHCP6ProxyDuidEnIdData_Type()
)
vRtrIfDHCP6ProxyDuidEnIdData.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidEnIdData.setStatus("current")


class _VRtrIfDHCP6ProxyDuidEnIdDataType_Type(TmnxDhcpOptionType):
    """Custom type vRtrIfDHCP6ProxyDuidEnIdDataType based on TmnxDhcpOptionType"""
    defaultValue = 2


_VRtrIfDHCP6ProxyDuidEnIdDataType_Type.__name__ = "TmnxDhcpOptionType"
_VRtrIfDHCP6ProxyDuidEnIdDataType_Object = MibTableColumn
vRtrIfDHCP6ProxyDuidEnIdDataType = _VRtrIfDHCP6ProxyDuidEnIdDataType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 89, 1, 5),
    _VRtrIfDHCP6ProxyDuidEnIdDataType_Type()
)
vRtrIfDHCP6ProxyDuidEnIdDataType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ProxyDuidEnIdDataType.setStatus("current")
_VRtrIfMacAccountingStatsTable_Object = MibTable
vRtrIfMacAccountingStatsTable = _VRtrIfMacAccountingStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90)
)
if mibBuilder.loadTexts:
    vRtrIfMacAccountingStatsTable.setStatus("current")
_VRtrIfMacAccountingStatsEntry_Object = MibTableRow
vRtrIfMacAccountingStatsEntry = _VRtrIfMacAccountingStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1)
)
vRtrIfMacAccountingStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfSourceMacAddress"),
)
if mibBuilder.loadTexts:
    vRtrIfMacAccountingStatsEntry.setStatus("current")
_VRtrIfSourceMacAddress_Type = MacAddress
_VRtrIfSourceMacAddress_Object = MibTableColumn
vRtrIfSourceMacAddress = _VRtrIfSourceMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 1),
    _VRtrIfSourceMacAddress_Type()
)
vRtrIfSourceMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfSourceMacAddress.setStatus("current")
_VRtrIfMacAccountingInOctets_Type = Counter64
_VRtrIfMacAccountingInOctets_Object = MibTableColumn
vRtrIfMacAccountingInOctets = _VRtrIfMacAccountingInOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 2),
    _VRtrIfMacAccountingInOctets_Type()
)
vRtrIfMacAccountingInOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInOctets.setStatus("current")
_VRtrIfMacAccountingInOctetsL_Type = Counter32
_VRtrIfMacAccountingInOctetsL_Object = MibTableColumn
vRtrIfMacAccountingInOctetsL = _VRtrIfMacAccountingInOctetsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 3),
    _VRtrIfMacAccountingInOctetsL_Type()
)
vRtrIfMacAccountingInOctetsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInOctetsL.setStatus("current")
_VRtrIfMacAccountingInOctetsH_Type = Counter32
_VRtrIfMacAccountingInOctetsH_Object = MibTableColumn
vRtrIfMacAccountingInOctetsH = _VRtrIfMacAccountingInOctetsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 4),
    _VRtrIfMacAccountingInOctetsH_Type()
)
vRtrIfMacAccountingInOctetsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInOctetsH.setStatus("current")
_VRtrIfMacAccountingInFrames_Type = Counter64
_VRtrIfMacAccountingInFrames_Object = MibTableColumn
vRtrIfMacAccountingInFrames = _VRtrIfMacAccountingInFrames_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 5),
    _VRtrIfMacAccountingInFrames_Type()
)
vRtrIfMacAccountingInFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInFrames.setStatus("current")
_VRtrIfMacAccountingInFramesL_Type = Counter32
_VRtrIfMacAccountingInFramesL_Object = MibTableColumn
vRtrIfMacAccountingInFramesL = _VRtrIfMacAccountingInFramesL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 6),
    _VRtrIfMacAccountingInFramesL_Type()
)
vRtrIfMacAccountingInFramesL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInFramesL.setStatus("current")
_VRtrIfMacAccountingInFramesH_Type = Counter32
_VRtrIfMacAccountingInFramesH_Object = MibTableColumn
vRtrIfMacAccountingInFramesH = _VRtrIfMacAccountingInFramesH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 7),
    _VRtrIfMacAccountingInFramesH_Type()
)
vRtrIfMacAccountingInFramesH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingInFramesH.setStatus("current")
_VRtrIfMacAccountingOutOctets_Type = Counter64
_VRtrIfMacAccountingOutOctets_Object = MibTableColumn
vRtrIfMacAccountingOutOctets = _VRtrIfMacAccountingOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 8),
    _VRtrIfMacAccountingOutOctets_Type()
)
vRtrIfMacAccountingOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutOctets.setStatus("current")
_VRtrIfMacAccountingOutOctetsL_Type = Counter32
_VRtrIfMacAccountingOutOctetsL_Object = MibTableColumn
vRtrIfMacAccountingOutOctetsL = _VRtrIfMacAccountingOutOctetsL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 9),
    _VRtrIfMacAccountingOutOctetsL_Type()
)
vRtrIfMacAccountingOutOctetsL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutOctetsL.setStatus("current")
_VRtrIfMacAccountingOutOctetsH_Type = Counter32
_VRtrIfMacAccountingOutOctetsH_Object = MibTableColumn
vRtrIfMacAccountingOutOctetsH = _VRtrIfMacAccountingOutOctetsH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 10),
    _VRtrIfMacAccountingOutOctetsH_Type()
)
vRtrIfMacAccountingOutOctetsH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutOctetsH.setStatus("current")
_VRtrIfMacAccountingOutFrames_Type = Counter64
_VRtrIfMacAccountingOutFrames_Object = MibTableColumn
vRtrIfMacAccountingOutFrames = _VRtrIfMacAccountingOutFrames_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 11),
    _VRtrIfMacAccountingOutFrames_Type()
)
vRtrIfMacAccountingOutFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutFrames.setStatus("current")
_VRtrIfMacAccountingOutFramesL_Type = Counter32
_VRtrIfMacAccountingOutFramesL_Object = MibTableColumn
vRtrIfMacAccountingOutFramesL = _VRtrIfMacAccountingOutFramesL_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 12),
    _VRtrIfMacAccountingOutFramesL_Type()
)
vRtrIfMacAccountingOutFramesL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutFramesL.setStatus("current")
_VRtrIfMacAccountingOutFramesH_Type = Counter32
_VRtrIfMacAccountingOutFramesH_Object = MibTableColumn
vRtrIfMacAccountingOutFramesH = _VRtrIfMacAccountingOutFramesH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 90, 1, 13),
    _VRtrIfMacAccountingOutFramesH_Type()
)
vRtrIfMacAccountingOutFramesH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfMacAccountingOutFramesH.setStatus("current")
_VRtrIpv6RtrAdvertTable_Object = MibTable
vRtrIpv6RtrAdvertTable = _VRtrIpv6RtrAdvertTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 91)
)
if mibBuilder.loadTexts:
    vRtrIpv6RtrAdvertTable.setStatus("current")
_VRtrIpv6RtrAdvertEntry_Object = MibTableRow
vRtrIpv6RtrAdvertEntry = _VRtrIpv6RtrAdvertEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 91, 1)
)
if mibBuilder.loadTexts:
    vRtrIpv6RtrAdvertEntry.setStatus("current")
_VRtrIpv6RtrAdvertCreationOrigin_Type = TmnxCreateOrigin
_VRtrIpv6RtrAdvertCreationOrigin_Object = MibTableColumn
vRtrIpv6RtrAdvertCreationOrigin = _VRtrIpv6RtrAdvertCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 91, 1, 1),
    _VRtrIpv6RtrAdvertCreationOrigin_Type()
)
vRtrIpv6RtrAdvertCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIpv6RtrAdvertCreationOrigin.setStatus("current")
_VRtrIfBfdSessExtTable_Object = MibTable
vRtrIfBfdSessExtTable = _VRtrIfBfdSessExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92)
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTable.setStatus("current")
_VRtrIfBfdSessExtEntry_Object = MibTableRow
vRtrIfBfdSessExtEntry = _VRtrIfBfdSessExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1)
)
vRtrIfBfdSessExtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLinkType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRxInfoId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemAddr"),
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtEntry.setStatus("current")


class _VRtrIfBfdSessExtLinkType_Type(Integer32):
    """Custom type vRtrIfBfdSessExtLinkType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10)
        )
    )
    namedValues = NamedValues(
        *(("pointToPoint", 0),
          ("head", 1),
          ("tail", 2),
          ("client", 3),
          ("ccOnly", 4),
          ("ccWithCv", 5),
          ("microBfd", 6),
          ("vccvBfd", 7),
          ("reserved10", 10))
    )


_VRtrIfBfdSessExtLinkType_Type.__name__ = "Integer32"
_VRtrIfBfdSessExtLinkType_Object = MibTableColumn
vRtrIfBfdSessExtLinkType = _VRtrIfBfdSessExtLinkType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 1),
    _VRtrIfBfdSessExtLinkType_Type()
)
vRtrIfBfdSessExtLinkType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLinkType.setStatus("current")
_VRtrIfBfdSessExtRxInfoId_Type = Unsigned32
_VRtrIfBfdSessExtRxInfoId_Object = MibTableColumn
vRtrIfBfdSessExtRxInfoId = _VRtrIfBfdSessExtRxInfoId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 2),
    _VRtrIfBfdSessExtRxInfoId_Type()
)
vRtrIfBfdSessExtRxInfoId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRxInfoId.setStatus("current")
_VRtrIfBfdSessExtLclAddrType_Type = InetAddressType
_VRtrIfBfdSessExtLclAddrType_Object = MibTableColumn
vRtrIfBfdSessExtLclAddrType = _VRtrIfBfdSessExtLclAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 3),
    _VRtrIfBfdSessExtLclAddrType_Type()
)
vRtrIfBfdSessExtLclAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLclAddrType.setStatus("current")


class _VRtrIfBfdSessExtLclAddr_Type(InetAddress):
    """Custom type vRtrIfBfdSessExtLclAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfBfdSessExtLclAddr_Type.__name__ = "InetAddress"
_VRtrIfBfdSessExtLclAddr_Object = MibTableColumn
vRtrIfBfdSessExtLclAddr = _VRtrIfBfdSessExtLclAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 4),
    _VRtrIfBfdSessExtLclAddr_Type()
)
vRtrIfBfdSessExtLclAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLclAddr.setStatus("current")
_VRtrIfBfdSessExtRemAddrType_Type = InetAddressType
_VRtrIfBfdSessExtRemAddrType_Object = MibTableColumn
vRtrIfBfdSessExtRemAddrType = _VRtrIfBfdSessExtRemAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 5),
    _VRtrIfBfdSessExtRemAddrType_Type()
)
vRtrIfBfdSessExtRemAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemAddrType.setStatus("current")


class _VRtrIfBfdSessExtRemAddr_Type(InetAddress):
    """Custom type vRtrIfBfdSessExtRemAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrIfBfdSessExtRemAddr_Type.__name__ = "InetAddress"
_VRtrIfBfdSessExtRemAddr_Object = MibTableColumn
vRtrIfBfdSessExtRemAddr = _VRtrIfBfdSessExtRemAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 6),
    _VRtrIfBfdSessExtRemAddr_Type()
)
vRtrIfBfdSessExtRemAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemAddr.setStatus("current")
_VRtrIfBfdSessExtOperState_Type = TmnxOperState
_VRtrIfBfdSessExtOperState_Object = MibTableColumn
vRtrIfBfdSessExtOperState = _VRtrIfBfdSessExtOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 7),
    _VRtrIfBfdSessExtOperState_Type()
)
vRtrIfBfdSessExtOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtOperState.setStatus("current")
_VRtrIfBfdSessExtState_Type = TmnxBfdSessProtocolState
_VRtrIfBfdSessExtState_Object = MibTableColumn
vRtrIfBfdSessExtState = _VRtrIfBfdSessExtState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 8),
    _VRtrIfBfdSessExtState_Type()
)
vRtrIfBfdSessExtState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtState.setStatus("current")
_VRtrIfBfdSessExtOperFlags_Type = TmnxBfdSessOperFlags
_VRtrIfBfdSessExtOperFlags_Object = MibTableColumn
vRtrIfBfdSessExtOperFlags = _VRtrIfBfdSessExtOperFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 9),
    _VRtrIfBfdSessExtOperFlags_Type()
)
vRtrIfBfdSessExtOperFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtOperFlags.setStatus("current")
_VRtrIfBfdSessExtMesgRecv_Type = Counter32
_VRtrIfBfdSessExtMesgRecv_Object = MibTableColumn
vRtrIfBfdSessExtMesgRecv = _VRtrIfBfdSessExtMesgRecv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 10),
    _VRtrIfBfdSessExtMesgRecv_Type()
)
vRtrIfBfdSessExtMesgRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtMesgRecv.setStatus("current")
_VRtrIfBfdSessExtMesgSent_Type = Counter32
_VRtrIfBfdSessExtMesgSent_Object = MibTableColumn
vRtrIfBfdSessExtMesgSent = _VRtrIfBfdSessExtMesgSent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 11),
    _VRtrIfBfdSessExtMesgSent_Type()
)
vRtrIfBfdSessExtMesgSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtMesgSent.setStatus("current")
_VRtrIfBfdSessExtLastDownTime_Type = TimeTicks
_VRtrIfBfdSessExtLastDownTime_Object = MibTableColumn
vRtrIfBfdSessExtLastDownTime = _VRtrIfBfdSessExtLastDownTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 12),
    _VRtrIfBfdSessExtLastDownTime_Type()
)
vRtrIfBfdSessExtLastDownTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLastDownTime.setStatus("current")
_VRtrIfBfdSessExtLastUpTime_Type = TimeTicks
_VRtrIfBfdSessExtLastUpTime_Object = MibTableColumn
vRtrIfBfdSessExtLastUpTime = _VRtrIfBfdSessExtLastUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 13),
    _VRtrIfBfdSessExtLastUpTime_Type()
)
vRtrIfBfdSessExtLastUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLastUpTime.setStatus("current")
_VRtrIfBfdSessExtUpCount_Type = Counter32
_VRtrIfBfdSessExtUpCount_Object = MibTableColumn
vRtrIfBfdSessExtUpCount = _VRtrIfBfdSessExtUpCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 14),
    _VRtrIfBfdSessExtUpCount_Type()
)
vRtrIfBfdSessExtUpCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtUpCount.setStatus("current")
_VRtrIfBfdSessExtDownCount_Type = Counter32
_VRtrIfBfdSessExtDownCount_Object = MibTableColumn
vRtrIfBfdSessExtDownCount = _VRtrIfBfdSessExtDownCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 15),
    _VRtrIfBfdSessExtDownCount_Type()
)
vRtrIfBfdSessExtDownCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtDownCount.setStatus("current")
_VRtrIfBfdSessExtLclDisc_Type = Unsigned32
_VRtrIfBfdSessExtLclDisc_Object = MibTableColumn
vRtrIfBfdSessExtLclDisc = _VRtrIfBfdSessExtLclDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 16),
    _VRtrIfBfdSessExtLclDisc_Type()
)
vRtrIfBfdSessExtLclDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLclDisc.setStatus("current")
_VRtrIfBfdSessExtRemDisc_Type = Unsigned32
_VRtrIfBfdSessExtRemDisc_Object = MibTableColumn
vRtrIfBfdSessExtRemDisc = _VRtrIfBfdSessExtRemDisc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 17),
    _VRtrIfBfdSessExtRemDisc_Type()
)
vRtrIfBfdSessExtRemDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemDisc.setStatus("current")
_VRtrIfBfdSessExtProtocols_Type = TmnxBfdSessionProtocols
_VRtrIfBfdSessExtProtocols_Object = MibTableColumn
vRtrIfBfdSessExtProtocols = _VRtrIfBfdSessExtProtocols_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 18),
    _VRtrIfBfdSessExtProtocols_Type()
)
vRtrIfBfdSessExtProtocols.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtProtocols.setStatus("current")
_VRtrIfBfdSessExtTxInterval_Type = Unsigned32
_VRtrIfBfdSessExtTxInterval_Object = MibTableColumn
vRtrIfBfdSessExtTxInterval = _VRtrIfBfdSessExtTxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 19),
    _VRtrIfBfdSessExtTxInterval_Type()
)
vRtrIfBfdSessExtTxInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTxInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTxInterval.setUnits("milliseconds")
_VRtrIfBfdSessExtRxInterval_Type = Unsigned32
_VRtrIfBfdSessExtRxInterval_Object = MibTableColumn
vRtrIfBfdSessExtRxInterval = _VRtrIfBfdSessExtRxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 20),
    _VRtrIfBfdSessExtRxInterval_Type()
)
vRtrIfBfdSessExtRxInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRxInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRxInterval.setUnits("milliseconds")
_VRtrIfBfdSessExtType_Type = TmnxBfdTermination
_VRtrIfBfdSessExtType_Object = MibTableColumn
vRtrIfBfdSessExtType = _VRtrIfBfdSessExtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 21),
    _VRtrIfBfdSessExtType_Type()
)
vRtrIfBfdSessExtType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtType.setStatus("current")
_VRtrIfBfdSessExtVerMismatch_Type = Counter32
_VRtrIfBfdSessExtVerMismatch_Object = MibTableColumn
vRtrIfBfdSessExtVerMismatch = _VRtrIfBfdSessExtVerMismatch_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 22),
    _VRtrIfBfdSessExtVerMismatch_Type()
)
vRtrIfBfdSessExtVerMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtVerMismatch.setStatus("current")
_VRtrIfBfdSessExtTimeSinceLastRx_Type = Unsigned32
_VRtrIfBfdSessExtTimeSinceLastRx_Object = MibTableColumn
vRtrIfBfdSessExtTimeSinceLastRx = _VRtrIfBfdSessExtTimeSinceLastRx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 23),
    _VRtrIfBfdSessExtTimeSinceLastRx_Type()
)
vRtrIfBfdSessExtTimeSinceLastRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTimeSinceLastRx.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTimeSinceLastRx.setUnits("milliseconds")
_VRtrIfBfdSessExtTimeSinceLastTx_Type = Unsigned32
_VRtrIfBfdSessExtTimeSinceLastTx_Object = MibTableColumn
vRtrIfBfdSessExtTimeSinceLastTx = _VRtrIfBfdSessExtTimeSinceLastTx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 24),
    _VRtrIfBfdSessExtTimeSinceLastTx_Type()
)
vRtrIfBfdSessExtTimeSinceLastTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTimeSinceLastTx.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtTimeSinceLastTx.setUnits("milliseconds")
_VRtrIfBfdSessExtRemoteLspNum_Type = Unsigned32
_VRtrIfBfdSessExtRemoteLspNum_Object = MibTableColumn
vRtrIfBfdSessExtRemoteLspNum = _VRtrIfBfdSessExtRemoteLspNum_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 25),
    _VRtrIfBfdSessExtRemoteLspNum_Type()
)
vRtrIfBfdSessExtRemoteLspNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemoteLspNum.setStatus("current")
_VRtrIfBfdSessExtRemoteTunnelNum_Type = Unsigned32
_VRtrIfBfdSessExtRemoteTunnelNum_Object = MibTableColumn
vRtrIfBfdSessExtRemoteTunnelNum = _VRtrIfBfdSessExtRemoteTunnelNum_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 26),
    _VRtrIfBfdSessExtRemoteTunnelNum_Type()
)
vRtrIfBfdSessExtRemoteTunnelNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemoteTunnelNum.setStatus("current")
_VRtrIfBfdSessExtRemoteNodeId_Type = TmnxMplsTpNodeID
_VRtrIfBfdSessExtRemoteNodeId_Object = MibTableColumn
vRtrIfBfdSessExtRemoteNodeId = _VRtrIfBfdSessExtRemoteNodeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 27),
    _VRtrIfBfdSessExtRemoteNodeId_Type()
)
vRtrIfBfdSessExtRemoteNodeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemoteNodeId.setStatus("current")
_VRtrIfBfdSessExtRemoteGlobalId_Type = TmnxMplsTpGlobalID
_VRtrIfBfdSessExtRemoteGlobalId_Object = MibTableColumn
vRtrIfBfdSessExtRemoteGlobalId = _VRtrIfBfdSessExtRemoteGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 28),
    _VRtrIfBfdSessExtRemoteGlobalId_Type()
)
vRtrIfBfdSessExtRemoteGlobalId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtRemoteGlobalId.setStatus("current")
_VRtrIfBfdSessExtLspPathTunnelId_Type = Unsigned32
_VRtrIfBfdSessExtLspPathTunnelId_Object = MibTableColumn
vRtrIfBfdSessExtLspPathTunnelId = _VRtrIfBfdSessExtLspPathTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 29),
    _VRtrIfBfdSessExtLspPathTunnelId_Type()
)
vRtrIfBfdSessExtLspPathTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLspPathTunnelId.setStatus("current")


class _VRtrIfBfdSessExtLspPathId_Type(Integer32):
    """Custom type vRtrIfBfdSessExtLspPathId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("working", 1),
          ("protecting", 2))
    )


_VRtrIfBfdSessExtLspPathId_Type.__name__ = "Integer32"
_VRtrIfBfdSessExtLspPathId_Object = MibTableColumn
vRtrIfBfdSessExtLspPathId = _VRtrIfBfdSessExtLspPathId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 30),
    _VRtrIfBfdSessExtLspPathId_Type()
)
vRtrIfBfdSessExtLspPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtLspPathId.setStatus("current")
_VRtrIfBfdSessExtSvcId_Type = TmnxServId
_VRtrIfBfdSessExtSvcId_Object = MibTableColumn
vRtrIfBfdSessExtSvcId = _VRtrIfBfdSessExtSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 31),
    _VRtrIfBfdSessExtSvcId_Type()
)
vRtrIfBfdSessExtSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtSvcId.setStatus("current")
_VRtrIfBfdSessExtSdpBindId_Type = SdpBindId
_VRtrIfBfdSessExtSdpBindId_Object = MibTableColumn
vRtrIfBfdSessExtSdpBindId = _VRtrIfBfdSessExtSdpBindId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 92, 1, 32),
    _VRtrIfBfdSessExtSdpBindId_Type()
)
vRtrIfBfdSessExtSdpBindId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessExtSdpBindId.setStatus("current")
_TmnxVrtrIfAdminGrpTableLastCh_Type = TimeStamp
_TmnxVrtrIfAdminGrpTableLastCh_Object = MibScalar
tmnxVrtrIfAdminGrpTableLastCh = _TmnxVrtrIfAdminGrpTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 93),
    _TmnxVrtrIfAdminGrpTableLastCh_Type()
)
tmnxVrtrIfAdminGrpTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrIfAdminGrpTableLastCh.setStatus("current")
_TmnxVrtrIfAdminGroupTable_Object = MibTable
tmnxVrtrIfAdminGroupTable = _TmnxVrtrIfAdminGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 94)
)
if mibBuilder.loadTexts:
    tmnxVrtrIfAdminGroupTable.setStatus("current")
_TmnxVrtrIfAdminGroupEntry_Object = MibTableRow
tmnxVrtrIfAdminGroupEntry = _TmnxVrtrIfAdminGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 94, 1)
)
tmnxVrtrIfAdminGroupEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (1, "TIMETRA-VRTR-MIB", "tmnxAdminGrpName"),
)
if mibBuilder.loadTexts:
    tmnxVrtrIfAdminGroupEntry.setStatus("current")
_TmnxVrtrIfAdminGroupRowStatus_Type = RowStatus
_TmnxVrtrIfAdminGroupRowStatus_Object = MibTableColumn
tmnxVrtrIfAdminGroupRowStatus = _TmnxVrtrIfAdminGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 94, 1, 1),
    _TmnxVrtrIfAdminGroupRowStatus_Type()
)
tmnxVrtrIfAdminGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrIfAdminGroupRowStatus.setStatus("current")
_TmnxVrtrIfAdminGroupLastCh_Type = TimeStamp
_TmnxVrtrIfAdminGroupLastCh_Object = MibTableColumn
tmnxVrtrIfAdminGroupLastCh = _TmnxVrtrIfAdminGroupLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 94, 1, 2),
    _TmnxVrtrIfAdminGroupLastCh_Type()
)
tmnxVrtrIfAdminGroupLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrIfAdminGroupLastCh.setStatus("current")
_TmnxVrtrIfSrlgGrpTableLastCh_Type = TimeStamp
_TmnxVrtrIfSrlgGrpTableLastCh_Object = MibScalar
tmnxVrtrIfSrlgGrpTableLastCh = _TmnxVrtrIfSrlgGrpTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 95),
    _TmnxVrtrIfSrlgGrpTableLastCh_Type()
)
tmnxVrtrIfSrlgGrpTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrIfSrlgGrpTableLastCh.setStatus("current")
_TmnxVrtrIfSrlgGroupTable_Object = MibTable
tmnxVrtrIfSrlgGroupTable = _TmnxVrtrIfSrlgGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 96)
)
if mibBuilder.loadTexts:
    tmnxVrtrIfSrlgGroupTable.setStatus("current")
_TmnxVrtrIfSrlgGroupEntry_Object = MibTableRow
tmnxVrtrIfSrlgGroupEntry = _TmnxVrtrIfSrlgGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 96, 1)
)
tmnxVrtrIfSrlgGroupEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (1, "TIMETRA-VRTR-MIB", "tmnxSrlgGrpName"),
)
if mibBuilder.loadTexts:
    tmnxVrtrIfSrlgGroupEntry.setStatus("current")
_TmnxVrtrIfSrlgGroupRowStatus_Type = RowStatus
_TmnxVrtrIfSrlgGroupRowStatus_Object = MibTableColumn
tmnxVrtrIfSrlgGroupRowStatus = _TmnxVrtrIfSrlgGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 96, 1, 1),
    _TmnxVrtrIfSrlgGroupRowStatus_Type()
)
tmnxVrtrIfSrlgGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrIfSrlgGroupRowStatus.setStatus("current")
_TmnxVrtrIfSrlgGroupLastCh_Type = TimeStamp
_TmnxVrtrIfSrlgGroupLastCh_Object = MibTableColumn
tmnxVrtrIfSrlgGroupLastCh = _TmnxVrtrIfSrlgGroupLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 96, 1, 2),
    _TmnxVrtrIfSrlgGroupLastCh_Type()
)
tmnxVrtrIfSrlgGroupLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrIfSrlgGroupLastCh.setStatus("current")
_VRtrIfSendTableLastChanged_Type = TimeStamp
_VRtrIfSendTableLastChanged_Object = MibScalar
vRtrIfSendTableLastChanged = _VRtrIfSendTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 97),
    _VRtrIfSendTableLastChanged_Type()
)
vRtrIfSendTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfSendTableLastChanged.setStatus("current")
_VRtrIfSendTable_Object = MibTable
vRtrIfSendTable = _VRtrIfSendTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98)
)
if mibBuilder.loadTexts:
    vRtrIfSendTable.setStatus("current")
_VRtrIfSendEntry_Object = MibTableRow
vRtrIfSendEntry = _VRtrIfSendEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1)
)
vRtrIfSendEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfSendEntry.setStatus("current")
_VRtrIfSendLastChanged_Type = TimeStamp
_VRtrIfSendLastChanged_Object = MibTableColumn
vRtrIfSendLastChanged = _VRtrIfSendLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 1),
    _VRtrIfSendLastChanged_Type()
)
vRtrIfSendLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfSendLastChanged.setStatus("current")


class _VRtrIfSendAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfSendAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfSendAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfSendAdminState_Object = MibTableColumn
vRtrIfSendAdminState = _VRtrIfSendAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 2),
    _VRtrIfSendAdminState_Type()
)
vRtrIfSendAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfSendAdminState.setStatus("current")


class _VRtrIfSendAllowUnsecuredMsgs_Type(TruthValue):
    """Custom type vRtrIfSendAllowUnsecuredMsgs based on TruthValue"""
    defaultValue = 1


_VRtrIfSendAllowUnsecuredMsgs_Type.__name__ = "TruthValue"
_VRtrIfSendAllowUnsecuredMsgs_Object = MibTableColumn
vRtrIfSendAllowUnsecuredMsgs = _VRtrIfSendAllowUnsecuredMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 3),
    _VRtrIfSendAllowUnsecuredMsgs_Type()
)
vRtrIfSendAllowUnsecuredMsgs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfSendAllowUnsecuredMsgs.setStatus("current")


class _VRtrIfSendCgaSecurityParameter_Type(Unsigned32):
    """Custom type vRtrIfSendCgaSecurityParameter based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_VRtrIfSendCgaSecurityParameter_Type.__name__ = "Unsigned32"
_VRtrIfSendCgaSecurityParameter_Object = MibTableColumn
vRtrIfSendCgaSecurityParameter = _VRtrIfSendCgaSecurityParameter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 4),
    _VRtrIfSendCgaSecurityParameter_Type()
)
vRtrIfSendCgaSecurityParameter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfSendCgaSecurityParameter.setStatus("current")


class _VRtrIfSendCgaVerificationMinbits_Type(Unsigned32):
    """Custom type vRtrIfSendCgaVerificationMinbits based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1024),
    )


_VRtrIfSendCgaVerificationMinbits_Type.__name__ = "Unsigned32"
_VRtrIfSendCgaVerificationMinbits_Object = MibTableColumn
vRtrIfSendCgaVerificationMinbits = _VRtrIfSendCgaVerificationMinbits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 5),
    _VRtrIfSendCgaVerificationMinbits_Type()
)
vRtrIfSendCgaVerificationMinbits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfSendCgaVerificationMinbits.setStatus("current")


class _VRtrIfSendLinkLocalCgaModifier_Type(TmnxSendCgaModifier):
    """Custom type vRtrIfSendLinkLocalCgaModifier based on TmnxSendCgaModifier"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrIfSendLinkLocalCgaModifier_Type.__name__ = "TmnxSendCgaModifier"
_VRtrIfSendLinkLocalCgaModifier_Object = MibTableColumn
vRtrIfSendLinkLocalCgaModifier = _VRtrIfSendLinkLocalCgaModifier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 98, 1, 6),
    _VRtrIfSendLinkLocalCgaModifier_Type()
)
vRtrIfSendLinkLocalCgaModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfSendLinkLocalCgaModifier.setStatus("current")
_TmnxAdminGroupTblLastCh_Type = TimeStamp
_TmnxAdminGroupTblLastCh_Object = MibScalar
tmnxAdminGroupTblLastCh = _TmnxAdminGroupTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 99),
    _TmnxAdminGroupTblLastCh_Type()
)
tmnxAdminGroupTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxAdminGroupTblLastCh.setStatus("current")
_TmnxAdminGroupTable_Object = MibTable
tmnxAdminGroupTable = _TmnxAdminGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100)
)
if mibBuilder.loadTexts:
    tmnxAdminGroupTable.setStatus("current")
_TmnxAdminGroupEntry_Object = MibTableRow
tmnxAdminGroupEntry = _TmnxAdminGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100, 1)
)
tmnxAdminGroupEntry.setIndexNames(
    (1, "TIMETRA-VRTR-MIB", "tmnxAdminGrpName"),
)
if mibBuilder.loadTexts:
    tmnxAdminGroupEntry.setStatus("current")
_TmnxAdminGrpName_Type = TNamedItem
_TmnxAdminGrpName_Object = MibTableColumn
tmnxAdminGrpName = _TmnxAdminGrpName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100, 1, 1),
    _TmnxAdminGrpName_Type()
)
tmnxAdminGrpName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxAdminGrpName.setStatus("current")
_TmnxAdminGrpRowStatus_Type = RowStatus
_TmnxAdminGrpRowStatus_Object = MibTableColumn
tmnxAdminGrpRowStatus = _TmnxAdminGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100, 1, 2),
    _TmnxAdminGrpRowStatus_Type()
)
tmnxAdminGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxAdminGrpRowStatus.setStatus("current")
_TmnxAdminGrpRowLstChng_Type = TimeStamp
_TmnxAdminGrpRowLstChng_Object = MibTableColumn
tmnxAdminGrpRowLstChng = _TmnxAdminGrpRowLstChng_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100, 1, 3),
    _TmnxAdminGrpRowLstChng_Type()
)
tmnxAdminGrpRowLstChng.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxAdminGrpRowLstChng.setStatus("current")


class _TmnxAdminGrpValue_Type(Unsigned32):
    """Custom type tmnxAdminGrpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_TmnxAdminGrpValue_Type.__name__ = "Unsigned32"
_TmnxAdminGrpValue_Object = MibTableColumn
tmnxAdminGrpValue = _TmnxAdminGrpValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 100, 1, 4),
    _TmnxAdminGrpValue_Type()
)
tmnxAdminGrpValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxAdminGrpValue.setStatus("current")
_TmnxSrlgGroupTblLastCh_Type = TimeStamp
_TmnxSrlgGroupTblLastCh_Object = MibScalar
tmnxSrlgGroupTblLastCh = _TmnxSrlgGroupTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 101),
    _TmnxSrlgGroupTblLastCh_Type()
)
tmnxSrlgGroupTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSrlgGroupTblLastCh.setStatus("current")
_TmnxSrlgGroupTable_Object = MibTable
tmnxSrlgGroupTable = _TmnxSrlgGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102)
)
if mibBuilder.loadTexts:
    tmnxSrlgGroupTable.setStatus("current")
_TmnxSrlgGroupEntry_Object = MibTableRow
tmnxSrlgGroupEntry = _TmnxSrlgGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1)
)
tmnxSrlgGroupEntry.setIndexNames(
    (1, "TIMETRA-VRTR-MIB", "tmnxSrlgGrpName"),
)
if mibBuilder.loadTexts:
    tmnxSrlgGroupEntry.setStatus("current")
_TmnxSrlgGrpName_Type = TNamedItem
_TmnxSrlgGrpName_Object = MibTableColumn
tmnxSrlgGrpName = _TmnxSrlgGrpName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1, 1),
    _TmnxSrlgGrpName_Type()
)
tmnxSrlgGrpName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSrlgGrpName.setStatus("current")
_TmnxSrlgGrpRowStatus_Type = RowStatus
_TmnxSrlgGrpRowStatus_Object = MibTableColumn
tmnxSrlgGrpRowStatus = _TmnxSrlgGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1, 2),
    _TmnxSrlgGrpRowStatus_Type()
)
tmnxSrlgGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSrlgGrpRowStatus.setStatus("current")
_TmnxSrlgGrpRowLstChng_Type = TimeStamp
_TmnxSrlgGrpRowLstChng_Object = MibTableColumn
tmnxSrlgGrpRowLstChng = _TmnxSrlgGrpRowLstChng_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1, 3),
    _TmnxSrlgGrpRowLstChng_Type()
)
tmnxSrlgGrpRowLstChng.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSrlgGrpRowLstChng.setStatus("current")
_TmnxSrlgGrpValue_Type = Unsigned32
_TmnxSrlgGrpValue_Object = MibTableColumn
tmnxSrlgGrpValue = _TmnxSrlgGrpValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1, 4),
    _TmnxSrlgGrpValue_Type()
)
tmnxSrlgGrpValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSrlgGrpValue.setStatus("current")


class _TmnxSrlgGrpPenaltyWeight_Type(Unsigned32):
    """Custom type tmnxSrlgGrpPenaltyWeight based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TmnxSrlgGrpPenaltyWeight_Type.__name__ = "Unsigned32"
_TmnxSrlgGrpPenaltyWeight_Object = MibTableColumn
tmnxSrlgGrpPenaltyWeight = _TmnxSrlgGrpPenaltyWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 102, 1, 5),
    _TmnxSrlgGrpPenaltyWeight_Type()
)
tmnxSrlgGrpPenaltyWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSrlgGrpPenaltyWeight.setStatus("current")
_VRtrPlcyAcctTemplTblLastChanged_Type = TimeStamp
_VRtrPlcyAcctTemplTblLastChanged_Object = MibScalar
vRtrPlcyAcctTemplTblLastChanged = _VRtrPlcyAcctTemplTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 103),
    _VRtrPlcyAcctTemplTblLastChanged_Type()
)
vRtrPlcyAcctTemplTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplTblLastChanged.setStatus("current")
_VRtrPlcyAcctTemplateTable_Object = MibTable
vRtrPlcyAcctTemplateTable = _VRtrPlcyAcctTemplateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 104)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplateTable.setStatus("current")
_VRtrPlcyAcctTemplateEntry_Object = MibTableRow
vRtrPlcyAcctTemplateEntry = _VRtrPlcyAcctTemplateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 104, 1)
)
vRtrPlcyAcctTemplateEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateName"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplateEntry.setStatus("current")
_VRtrPlcyAcctTemplateName_Type = TNamedItem
_VRtrPlcyAcctTemplateName_Object = MibTableColumn
vRtrPlcyAcctTemplateName = _VRtrPlcyAcctTemplateName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 104, 1, 1),
    _VRtrPlcyAcctTemplateName_Type()
)
vRtrPlcyAcctTemplateName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplateName.setStatus("current")
_VRtrPlcyAcctTemplateRowStatus_Type = RowStatus
_VRtrPlcyAcctTemplateRowStatus_Object = MibTableColumn
vRtrPlcyAcctTemplateRowStatus = _VRtrPlcyAcctTemplateRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 104, 1, 2),
    _VRtrPlcyAcctTemplateRowStatus_Type()
)
vRtrPlcyAcctTemplateRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplateRowStatus.setStatus("current")
_VRtrPlcyAcctTemplateLastChgd_Type = TimeStamp
_VRtrPlcyAcctTemplateLastChgd_Object = MibTableColumn
vRtrPlcyAcctTemplateLastChgd = _VRtrPlcyAcctTemplateLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 104, 1, 3),
    _VRtrPlcyAcctTemplateLastChgd_Type()
)
vRtrPlcyAcctTemplateLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctTemplateLastChgd.setStatus("current")
_VRtrPlcyAcctSrcClassTblLstChgd_Type = TimeStamp
_VRtrPlcyAcctSrcClassTblLstChgd_Object = MibScalar
vRtrPlcyAcctSrcClassTblLstChgd = _VRtrPlcyAcctSrcClassTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 105),
    _VRtrPlcyAcctSrcClassTblLstChgd_Type()
)
vRtrPlcyAcctSrcClassTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassTblLstChgd.setStatus("current")
_VRtrPlcyAcctSrcClassTable_Object = MibTable
vRtrPlcyAcctSrcClassTable = _VRtrPlcyAcctSrcClassTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 106)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassTable.setStatus("current")
_VRtrPlcyAcctSrcClassEntry_Object = MibTableRow
vRtrPlcyAcctSrcClassEntry = _VRtrPlcyAcctSrcClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 106, 1)
)
vRtrPlcyAcctSrcClassEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctSrcClassIndex"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassEntry.setStatus("current")
_VRtrPlcyAcctSrcClassIndex_Type = ClassIndex
_VRtrPlcyAcctSrcClassIndex_Object = MibTableColumn
vRtrPlcyAcctSrcClassIndex = _VRtrPlcyAcctSrcClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 106, 1, 1),
    _VRtrPlcyAcctSrcClassIndex_Type()
)
vRtrPlcyAcctSrcClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassIndex.setStatus("current")
_VRtrPlcyAcctSrcClassRowStatus_Type = RowStatus
_VRtrPlcyAcctSrcClassRowStatus_Object = MibTableColumn
vRtrPlcyAcctSrcClassRowStatus = _VRtrPlcyAcctSrcClassRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 106, 1, 2),
    _VRtrPlcyAcctSrcClassRowStatus_Type()
)
vRtrPlcyAcctSrcClassRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassRowStatus.setStatus("current")
_VRtrPlcyAcctSrcClassLastChgd_Type = TimeStamp
_VRtrPlcyAcctSrcClassLastChgd_Object = MibTableColumn
vRtrPlcyAcctSrcClassLastChgd = _VRtrPlcyAcctSrcClassLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 106, 1, 3),
    _VRtrPlcyAcctSrcClassLastChgd_Type()
)
vRtrPlcyAcctSrcClassLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctSrcClassLastChgd.setStatus("current")
_VRtrPlcyAcctDestClassTblLstChgd_Type = TimeStamp
_VRtrPlcyAcctDestClassTblLstChgd_Object = MibScalar
vRtrPlcyAcctDestClassTblLstChgd = _VRtrPlcyAcctDestClassTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 107),
    _VRtrPlcyAcctDestClassTblLstChgd_Type()
)
vRtrPlcyAcctDestClassTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassTblLstChgd.setStatus("current")
_VRtrPlcyAcctDestClassTable_Object = MibTable
vRtrPlcyAcctDestClassTable = _VRtrPlcyAcctDestClassTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassTable.setStatus("current")
_VRtrPlcyAcctDestClassEntry_Object = MibTableRow
vRtrPlcyAcctDestClassEntry = _VRtrPlcyAcctDestClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108, 1)
)
vRtrPlcyAcctDestClassEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctDestClassIndex"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassEntry.setStatus("current")
_VRtrPlcyAcctDestClassIndex_Type = ClassIndex
_VRtrPlcyAcctDestClassIndex_Object = MibTableColumn
vRtrPlcyAcctDestClassIndex = _VRtrPlcyAcctDestClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108, 1, 1),
    _VRtrPlcyAcctDestClassIndex_Type()
)
vRtrPlcyAcctDestClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassIndex.setStatus("current")
_VRtrPlcyAcctDestClassRowStatus_Type = RowStatus
_VRtrPlcyAcctDestClassRowStatus_Object = MibTableColumn
vRtrPlcyAcctDestClassRowStatus = _VRtrPlcyAcctDestClassRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108, 1, 2),
    _VRtrPlcyAcctDestClassRowStatus_Type()
)
vRtrPlcyAcctDestClassRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassRowStatus.setStatus("current")
_VRtrPlcyAcctDestClassLastChgd_Type = TimeStamp
_VRtrPlcyAcctDestClassLastChgd_Object = MibTableColumn
vRtrPlcyAcctDestClassLastChgd = _VRtrPlcyAcctDestClassLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108, 1, 3),
    _VRtrPlcyAcctDestClassLastChgd_Type()
)
vRtrPlcyAcctDestClassLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassLastChgd.setStatus("current")


class _VRtrPlcyAcctDestClassPolicerId_Type(Unsigned32):
    """Custom type vRtrPlcyAcctDestClassPolicerId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_VRtrPlcyAcctDestClassPolicerId_Type.__name__ = "Unsigned32"
_VRtrPlcyAcctDestClassPolicerId_Object = MibTableColumn
vRtrPlcyAcctDestClassPolicerId = _VRtrPlcyAcctDestClassPolicerId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 108, 1, 4),
    _VRtrPlcyAcctDestClassPolicerId_Type()
)
vRtrPlcyAcctDestClassPolicerId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctDestClassPolicerId.setStatus("current")
_VRtrPlcyAcctIfStatsTblLstChgd_Type = TimeStamp
_VRtrPlcyAcctIfStatsTblLstChgd_Object = MibScalar
vRtrPlcyAcctIfStatsTblLstChgd = _VRtrPlcyAcctIfStatsTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 109),
    _VRtrPlcyAcctIfStatsTblLstChgd_Type()
)
vRtrPlcyAcctIfStatsTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctIfStatsTblLstChgd.setStatus("current")
_VRtrPlcyAcctInterfaceStatsTable_Object = MibTable
vRtrPlcyAcctInterfaceStatsTable = _VRtrPlcyAcctInterfaceStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctInterfaceStatsTable.setStatus("current")
_VRtrPlcyAcctInterfaceStatsEntry_Object = MibTableRow
vRtrPlcyAcctInterfaceStatsEntry = _VRtrPlcyAcctInterfaceStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1)
)
vRtrPlcyAcctInterfaceStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctIndex"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctInterfaceStatsEntry.setStatus("current")


class _VRtrPlcyAcctType_Type(Integer32):
    """Custom type vRtrPlcyAcctType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("sourceClass", 0),
          ("destClass", 1))
    )


_VRtrPlcyAcctType_Type.__name__ = "Integer32"
_VRtrPlcyAcctType_Object = MibTableColumn
vRtrPlcyAcctType = _VRtrPlcyAcctType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1, 1),
    _VRtrPlcyAcctType_Type()
)
vRtrPlcyAcctType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctType.setStatus("current")


class _VRtrPlcyAcctIndex_Type(Unsigned32):
    """Custom type vRtrPlcyAcctIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrPlcyAcctIndex_Type.__name__ = "Unsigned32"
_VRtrPlcyAcctIndex_Object = MibTableColumn
vRtrPlcyAcctIndex = _VRtrPlcyAcctIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1, 2),
    _VRtrPlcyAcctIndex_Type()
)
vRtrPlcyAcctIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctIndex.setStatus("current")
_VRtrPlcyAcctRxFwdPkts_Type = Counter64
_VRtrPlcyAcctRxFwdPkts_Object = MibTableColumn
vRtrPlcyAcctRxFwdPkts = _VRtrPlcyAcctRxFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1, 3),
    _VRtrPlcyAcctRxFwdPkts_Type()
)
vRtrPlcyAcctRxFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctRxFwdPkts.setStatus("current")
_VRtrPlcyAcctRxFwdBytes_Type = Counter64
_VRtrPlcyAcctRxFwdBytes_Object = MibTableColumn
vRtrPlcyAcctRxFwdBytes = _VRtrPlcyAcctRxFwdBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1, 4),
    _VRtrPlcyAcctRxFwdBytes_Type()
)
vRtrPlcyAcctRxFwdBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctRxFwdBytes.setStatus("current")
_VRtrPlcyAcctRxIncompleteCnt_Type = TruthValue
_VRtrPlcyAcctRxIncompleteCnt_Object = MibTableColumn
vRtrPlcyAcctRxIncompleteCnt = _VRtrPlcyAcctRxIncompleteCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 110, 1, 5),
    _VRtrPlcyAcctRxIncompleteCnt_Type()
)
vRtrPlcyAcctRxIncompleteCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctRxIncompleteCnt.setStatus("current")
_VRtrIfBfdSessSdpBindTable_Object = MibTable
vRtrIfBfdSessSdpBindTable = _VRtrIfBfdSessSdpBindTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 111)
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessSdpBindTable.setStatus("current")
_VRtrIfBfdSessSdpBindEntry_Object = MibTableRow
vRtrIfBfdSessSdpBindEntry = _VRtrIfBfdSessSdpBindEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 111, 1)
)
vRtrIfBfdSessSdpBindEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"),
)
if mibBuilder.loadTexts:
    vRtrIfBfdSessSdpBindEntry.setStatus("current")
_VRtrIfBfdSessSdpBindIndex_Type = Unsigned32
_VRtrIfBfdSessSdpBindIndex_Object = MibTableColumn
vRtrIfBfdSessSdpBindIndex = _VRtrIfBfdSessSdpBindIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 111, 1, 1),
    _VRtrIfBfdSessSdpBindIndex_Type()
)
vRtrIfBfdSessSdpBindIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfBfdSessSdpBindIndex.setStatus("current")
_VRtrRATable_Object = MibTable
vRtrRATable = _VRtrRATable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112)
)
if mibBuilder.loadTexts:
    vRtrRATable.setStatus("current")
_VRtrRAEntry_Object = MibTableRow
vRtrRAEntry = _VRtrRAEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1)
)
vRtrRAEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrRAEntry.setStatus("current")
_VRtrRARowStatus_Type = RowStatus
_VRtrRARowStatus_Object = MibTableColumn
vRtrRARowStatus = _VRtrRARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 1),
    _VRtrRARowStatus_Type()
)
vRtrRARowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRARowStatus.setStatus("current")


class _VRtrRADnsOptServer1_Type(InetAddressIPv6):
    """Custom type vRtrRADnsOptServer1 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRADnsOptServer1_Type.__name__ = "InetAddressIPv6"
_VRtrRADnsOptServer1_Object = MibTableColumn
vRtrRADnsOptServer1 = _VRtrRADnsOptServer1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 2),
    _VRtrRADnsOptServer1_Type()
)
vRtrRADnsOptServer1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRADnsOptServer1.setStatus("current")


class _VRtrRADnsOptServer2_Type(InetAddressIPv6):
    """Custom type vRtrRADnsOptServer2 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRADnsOptServer2_Type.__name__ = "InetAddressIPv6"
_VRtrRADnsOptServer2_Object = MibTableColumn
vRtrRADnsOptServer2 = _VRtrRADnsOptServer2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 3),
    _VRtrRADnsOptServer2_Type()
)
vRtrRADnsOptServer2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRADnsOptServer2.setStatus("current")


class _VRtrRADnsOptServer3_Type(InetAddressIPv6):
    """Custom type vRtrRADnsOptServer3 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRADnsOptServer3_Type.__name__ = "InetAddressIPv6"
_VRtrRADnsOptServer3_Object = MibTableColumn
vRtrRADnsOptServer3 = _VRtrRADnsOptServer3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 4),
    _VRtrRADnsOptServer3_Type()
)
vRtrRADnsOptServer3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRADnsOptServer3.setStatus("current")


class _VRtrRADnsOptServer4_Type(InetAddressIPv6):
    """Custom type vRtrRADnsOptServer4 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRADnsOptServer4_Type.__name__ = "InetAddressIPv6"
_VRtrRADnsOptServer4_Object = MibTableColumn
vRtrRADnsOptServer4 = _VRtrRADnsOptServer4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 5),
    _VRtrRADnsOptServer4_Type()
)
vRtrRADnsOptServer4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRADnsOptServer4.setStatus("current")


class _VRtrRADnsOptRdnssLtime_Type(Integer32):
    """Custom type vRtrRADnsOptRdnssLtime based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 0),
        ValueRangeConstraint(4, 3600),
    )


_VRtrRADnsOptRdnssLtime_Type.__name__ = "Integer32"
_VRtrRADnsOptRdnssLtime_Object = MibTableColumn
vRtrRADnsOptRdnssLtime = _VRtrRADnsOptRdnssLtime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 112, 1, 6),
    _VRtrRADnsOptRdnssLtime_Type()
)
vRtrRADnsOptRdnssLtime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRADnsOptRdnssLtime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRADnsOptRdnssLtime.setUnits("seconds")
_VRtrRAIfTable_Object = MibTable
vRtrRAIfTable = _VRtrRAIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113)
)
if mibBuilder.loadTexts:
    vRtrRAIfTable.setStatus("current")
_VRtrRAIfEntry_Object = MibTableRow
vRtrRAIfEntry = _VRtrRAIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1)
)
vRtrRAIfEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrRAIfEntry.setStatus("current")
_VRtrRAIfRowStatus_Type = RowStatus
_VRtrRAIfRowStatus_Object = MibTableColumn
vRtrRAIfRowStatus = _VRtrRAIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 1),
    _VRtrRAIfRowStatus_Type()
)
vRtrRAIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfRowStatus.setStatus("current")


class _VRtrRAIfDnsOptServer1_Type(InetAddressIPv6):
    """Custom type vRtrRAIfDnsOptServer1 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRAIfDnsOptServer1_Type.__name__ = "InetAddressIPv6"
_VRtrRAIfDnsOptServer1_Object = MibTableColumn
vRtrRAIfDnsOptServer1 = _VRtrRAIfDnsOptServer1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 2),
    _VRtrRAIfDnsOptServer1_Type()
)
vRtrRAIfDnsOptServer1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptServer1.setStatus("current")


class _VRtrRAIfDnsOptServer2_Type(InetAddressIPv6):
    """Custom type vRtrRAIfDnsOptServer2 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRAIfDnsOptServer2_Type.__name__ = "InetAddressIPv6"
_VRtrRAIfDnsOptServer2_Object = MibTableColumn
vRtrRAIfDnsOptServer2 = _VRtrRAIfDnsOptServer2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 3),
    _VRtrRAIfDnsOptServer2_Type()
)
vRtrRAIfDnsOptServer2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptServer2.setStatus("current")


class _VRtrRAIfDnsOptServer3_Type(InetAddressIPv6):
    """Custom type vRtrRAIfDnsOptServer3 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRAIfDnsOptServer3_Type.__name__ = "InetAddressIPv6"
_VRtrRAIfDnsOptServer3_Object = MibTableColumn
vRtrRAIfDnsOptServer3 = _VRtrRAIfDnsOptServer3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 4),
    _VRtrRAIfDnsOptServer3_Type()
)
vRtrRAIfDnsOptServer3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptServer3.setStatus("current")


class _VRtrRAIfDnsOptServer4_Type(InetAddressIPv6):
    """Custom type vRtrRAIfDnsOptServer4 based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_VRtrRAIfDnsOptServer4_Type.__name__ = "InetAddressIPv6"
_VRtrRAIfDnsOptServer4_Object = MibTableColumn
vRtrRAIfDnsOptServer4 = _VRtrRAIfDnsOptServer4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 5),
    _VRtrRAIfDnsOptServer4_Type()
)
vRtrRAIfDnsOptServer4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptServer4.setStatus("current")


class _VRtrRAIfDnsOptRdnssLtime_Type(Integer32):
    """Custom type vRtrRAIfDnsOptRdnssLtime based on Integer32"""
    defaultValue = -2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2, 0),
        ValueRangeConstraint(4, 3600),
    )


_VRtrRAIfDnsOptRdnssLtime_Type.__name__ = "Integer32"
_VRtrRAIfDnsOptRdnssLtime_Object = MibTableColumn
vRtrRAIfDnsOptRdnssLtime = _VRtrRAIfDnsOptRdnssLtime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 6),
    _VRtrRAIfDnsOptRdnssLtime_Type()
)
vRtrRAIfDnsOptRdnssLtime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptRdnssLtime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptRdnssLtime.setUnits("seconds")


class _VRtrRAIfDnsOptInclDns_Type(TruthValue):
    """Custom type vRtrRAIfDnsOptInclDns based on TruthValue"""
    defaultValue = 1


_VRtrRAIfDnsOptInclDns_Type.__name__ = "TruthValue"
_VRtrRAIfDnsOptInclDns_Object = MibTableColumn
vRtrRAIfDnsOptInclDns = _VRtrRAIfDnsOptInclDns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 113, 1, 7),
    _VRtrRAIfDnsOptInclDns_Type()
)
vRtrRAIfDnsOptInclDns.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrRAIfDnsOptInclDns.setStatus("current")
_VRtrTTLPropTblLstChgd_Type = TimeStamp
_VRtrTTLPropTblLstChgd_Object = MibScalar
vRtrTTLPropTblLstChgd = _VRtrTTLPropTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 114),
    _VRtrTTLPropTblLstChgd_Type()
)
vRtrTTLPropTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrTTLPropTblLstChgd.setStatus("current")
_VRtrTTLPropTable_Object = MibTable
vRtrTTLPropTable = _VRtrTTLPropTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115)
)
if mibBuilder.loadTexts:
    vRtrTTLPropTable.setStatus("current")
_VRtrTTLPropEntry_Object = MibTableRow
vRtrTTLPropEntry = _VRtrTTLPropEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1)
)
vRtrTTLPropEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrTTLPropEntry.setStatus("current")


class _VRtrTTLPropVprnLocal_Type(VRtrVprnTTLPropagateType):
    """Custom type vRtrTTLPropVprnLocal based on VRtrVprnTTLPropagateType"""
    defaultValue = 2


_VRtrTTLPropVprnLocal_Type.__name__ = "VRtrVprnTTLPropagateType"
_VRtrTTLPropVprnLocal_Object = MibTableColumn
vRtrTTLPropVprnLocal = _VRtrTTLPropVprnLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1, 1),
    _VRtrTTLPropVprnLocal_Type()
)
vRtrTTLPropVprnLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTTLPropVprnLocal.setStatus("current")


class _VRtrTTLPropVprnTransit_Type(VRtrVprnTTLPropagateType):
    """Custom type vRtrTTLPropVprnTransit based on VRtrVprnTTLPropagateType"""
    defaultValue = 2


_VRtrTTLPropVprnTransit_Type.__name__ = "VRtrVprnTTLPropagateType"
_VRtrTTLPropVprnTransit_Object = MibTableColumn
vRtrTTLPropVprnTransit = _VRtrTTLPropVprnTransit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1, 2),
    _VRtrTTLPropVprnTransit_Type()
)
vRtrTTLPropVprnTransit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTTLPropVprnTransit.setStatus("current")


class _VRtrTTLPropLabelRouteLocal_Type(VRtrTTLPropagateType):
    """Custom type vRtrTTLPropLabelRouteLocal based on VRtrTTLPropagateType"""
    defaultValue = 0


_VRtrTTLPropLabelRouteLocal_Type.__name__ = "VRtrTTLPropagateType"
_VRtrTTLPropLabelRouteLocal_Object = MibTableColumn
vRtrTTLPropLabelRouteLocal = _VRtrTTLPropLabelRouteLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1, 3),
    _VRtrTTLPropLabelRouteLocal_Type()
)
vRtrTTLPropLabelRouteLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTTLPropLabelRouteLocal.setStatus("current")


class _VRtrTTLPropLabelRouteTransit_Type(VRtrTTLPropagateType):
    """Custom type vRtrTTLPropLabelRouteTransit based on VRtrTTLPropagateType"""
    defaultValue = 0


_VRtrTTLPropLabelRouteTransit_Type.__name__ = "VRtrTTLPropagateType"
_VRtrTTLPropLabelRouteTransit_Object = MibTableColumn
vRtrTTLPropLabelRouteTransit = _VRtrTTLPropLabelRouteTransit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1, 4),
    _VRtrTTLPropLabelRouteTransit_Type()
)
vRtrTTLPropLabelRouteTransit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTTLPropLabelRouteTransit.setStatus("current")


class _VRtrTTLPropLsrLabelRoute_Type(VRtrTTLPropagateType):
    """Custom type vRtrTTLPropLsrLabelRoute based on VRtrTTLPropagateType"""
    defaultValue = 0


_VRtrTTLPropLsrLabelRoute_Type.__name__ = "VRtrTTLPropagateType"
_VRtrTTLPropLsrLabelRoute_Object = MibTableColumn
vRtrTTLPropLsrLabelRoute = _VRtrTTLPropLsrLabelRoute_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 115, 1, 5),
    _VRtrTTLPropLsrLabelRoute_Type()
)
vRtrTTLPropLsrLabelRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrTTLPropLsrLabelRoute.setStatus("current")
_VRtrSvcTTLPropTblLstChgd_Type = TimeStamp
_VRtrSvcTTLPropTblLstChgd_Object = MibScalar
vRtrSvcTTLPropTblLstChgd = _VRtrSvcTTLPropTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 116),
    _VRtrSvcTTLPropTblLstChgd_Type()
)
vRtrSvcTTLPropTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrSvcTTLPropTblLstChgd.setStatus("current")
_VRtrSvcTTLPropTable_Object = MibTable
vRtrSvcTTLPropTable = _VRtrSvcTTLPropTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 117)
)
if mibBuilder.loadTexts:
    vRtrSvcTTLPropTable.setStatus("current")
_VRtrSvcTTLPropEntry_Object = MibTableRow
vRtrSvcTTLPropEntry = _VRtrSvcTTLPropEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 117, 1)
)
vRtrSvcTTLPropEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrSvcTTLPropEntry.setStatus("current")


class _VRtrSvcTTLPropVprnLocal_Type(VRtrVprnTTLPropagateType):
    """Custom type vRtrSvcTTLPropVprnLocal based on VRtrVprnTTLPropagateType"""
    defaultValue = 3


_VRtrSvcTTLPropVprnLocal_Type.__name__ = "VRtrVprnTTLPropagateType"
_VRtrSvcTTLPropVprnLocal_Object = MibTableColumn
vRtrSvcTTLPropVprnLocal = _VRtrSvcTTLPropVprnLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 117, 1, 1),
    _VRtrSvcTTLPropVprnLocal_Type()
)
vRtrSvcTTLPropVprnLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcTTLPropVprnLocal.setStatus("current")


class _VRtrSvcTTLPropVprnTransit_Type(VRtrVprnTTLPropagateType):
    """Custom type vRtrSvcTTLPropVprnTransit based on VRtrVprnTTLPropagateType"""
    defaultValue = 3


_VRtrSvcTTLPropVprnTransit_Type.__name__ = "VRtrVprnTTLPropagateType"
_VRtrSvcTTLPropVprnTransit_Object = MibTableColumn
vRtrSvcTTLPropVprnTransit = _VRtrSvcTTLPropVprnTransit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 117, 1, 2),
    _VRtrSvcTTLPropVprnTransit_Type()
)
vRtrSvcTTLPropVprnTransit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrSvcTTLPropVprnTransit.setStatus("current")
_VRtrInetTunnelTable_Object = MibTable
vRtrInetTunnelTable = _VRtrInetTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118)
)
if mibBuilder.loadTexts:
    vRtrInetTunnelTable.setStatus("obsolete")
_VRtrInetTunnelEntry_Object = MibTableRow
vRtrInetTunnelEntry = _VRtrInetTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1)
)
vRtrInetTunnelEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelDestAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelDestAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelPreference"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelTypeInstance"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelNextHopAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetTunnelNextHopAddr"),
)
if mibBuilder.loadTexts:
    vRtrInetTunnelEntry.setStatus("obsolete")
_VRtrInetTunnelDestAddrType_Type = InetAddressType
_VRtrInetTunnelDestAddrType_Object = MibTableColumn
vRtrInetTunnelDestAddrType = _VRtrInetTunnelDestAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 1),
    _VRtrInetTunnelDestAddrType_Type()
)
vRtrInetTunnelDestAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelDestAddrType.setStatus("obsolete")


class _VRtrInetTunnelDestAddr_Type(InetAddress):
    """Custom type vRtrInetTunnelDestAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetTunnelDestAddr_Type.__name__ = "InetAddress"
_VRtrInetTunnelDestAddr_Object = MibTableColumn
vRtrInetTunnelDestAddr = _VRtrInetTunnelDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 2),
    _VRtrInetTunnelDestAddr_Type()
)
vRtrInetTunnelDestAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelDestAddr.setStatus("obsolete")
_VRtrInetTunnelDestPfxLen_Type = InetAddressPrefixLength
_VRtrInetTunnelDestPfxLen_Object = MibTableColumn
vRtrInetTunnelDestPfxLen = _VRtrInetTunnelDestPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 3),
    _VRtrInetTunnelDestPfxLen_Type()
)
vRtrInetTunnelDestPfxLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelDestPfxLen.setStatus("obsolete")


class _VRtrInetTunnelPreference_Type(Unsigned32):
    """Custom type vRtrInetTunnelPreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VRtrInetTunnelPreference_Type.__name__ = "Unsigned32"
_VRtrInetTunnelPreference_Object = MibTableColumn
vRtrInetTunnelPreference = _VRtrInetTunnelPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 4),
    _VRtrInetTunnelPreference_Type()
)
vRtrInetTunnelPreference.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelPreference.setStatus("obsolete")
_VRtrInetTunnelType_Type = TmnxTunnelTypeExt
_VRtrInetTunnelType_Object = MibTableColumn
vRtrInetTunnelType = _VRtrInetTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 5),
    _VRtrInetTunnelType_Type()
)
vRtrInetTunnelType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelType.setStatus("obsolete")
_VRtrInetTunnelTypeInstance_Type = Unsigned32
_VRtrInetTunnelTypeInstance_Object = MibTableColumn
vRtrInetTunnelTypeInstance = _VRtrInetTunnelTypeInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 6),
    _VRtrInetTunnelTypeInstance_Type()
)
vRtrInetTunnelTypeInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelTypeInstance.setStatus("obsolete")
_VRtrInetTunnelID_Type = TmnxTunnelID
_VRtrInetTunnelID_Object = MibTableColumn
vRtrInetTunnelID = _VRtrInetTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 7),
    _VRtrInetTunnelID_Type()
)
vRtrInetTunnelID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelID.setStatus("obsolete")
_VRtrInetTunnelNextHopAddrType_Type = InetAddressType
_VRtrInetTunnelNextHopAddrType_Object = MibTableColumn
vRtrInetTunnelNextHopAddrType = _VRtrInetTunnelNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 8),
    _VRtrInetTunnelNextHopAddrType_Type()
)
vRtrInetTunnelNextHopAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelNextHopAddrType.setStatus("obsolete")


class _VRtrInetTunnelNextHopAddr_Type(InetAddress):
    """Custom type vRtrInetTunnelNextHopAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrInetTunnelNextHopAddr_Type.__name__ = "InetAddress"
_VRtrInetTunnelNextHopAddr_Object = MibTableColumn
vRtrInetTunnelNextHopAddr = _VRtrInetTunnelNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 9),
    _VRtrInetTunnelNextHopAddr_Type()
)
vRtrInetTunnelNextHopAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetTunnelNextHopAddr.setStatus("obsolete")
_VRtrInetTunnelMetric_Type = Unsigned32
_VRtrInetTunnelMetric_Object = MibTableColumn
vRtrInetTunnelMetric = _VRtrInetTunnelMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 10),
    _VRtrInetTunnelMetric_Type()
)
vRtrInetTunnelMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelMetric.setStatus("obsolete")
_VRtrInetTunnelAge_Type = Integer32
_VRtrInetTunnelAge_Object = MibTableColumn
vRtrInetTunnelAge = _VRtrInetTunnelAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 11),
    _VRtrInetTunnelAge_Type()
)
vRtrInetTunnelAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelAge.setStatus("obsolete")


class _VRtrInetTunnelNextHopFlags_Type(Integer32):
    """Custom type vRtrInetTunnelNextHopFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("hasLfa", 1),
          ("hasBackup", 2),
          ("isBackup", 3),
          ("isBgpInactive", 4))
    )


_VRtrInetTunnelNextHopFlags_Type.__name__ = "Integer32"
_VRtrInetTunnelNextHopFlags_Object = MibTableColumn
vRtrInetTunnelNextHopFlags = _VRtrInetTunnelNextHopFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 12),
    _VRtrInetTunnelNextHopFlags_Type()
)
vRtrInetTunnelNextHopFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelNextHopFlags.setStatus("obsolete")
_VRtrInetTunnelLspBandwidth_Type = Counter64
_VRtrInetTunnelLspBandwidth_Object = MibTableColumn
vRtrInetTunnelLspBandwidth = _VRtrInetTunnelLspBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 13),
    _VRtrInetTunnelLspBandwidth_Type()
)
vRtrInetTunnelLspBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelLspBandwidth.setStatus("obsolete")
if mibBuilder.loadTexts:
    vRtrInetTunnelLspBandwidth.setUnits("mega-bits per second")
_VRtrInetTunnelMTU_Type = Unsigned32
_VRtrInetTunnelMTU_Object = MibTableColumn
vRtrInetTunnelMTU = _VRtrInetTunnelMTU_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 14),
    _VRtrInetTunnelMTU_Type()
)
vRtrInetTunnelMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelMTU.setStatus("obsolete")
_VRtrInetTunnelLspWeight_Type = Unsigned32
_VRtrInetTunnelLspWeight_Object = MibTableColumn
vRtrInetTunnelLspWeight = _VRtrInetTunnelLspWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 15),
    _VRtrInetTunnelLspWeight_Type()
)
vRtrInetTunnelLspWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelLspWeight.setStatus("obsolete")
_VRtrInetTunnelLspId_Type = Unsigned32
_VRtrInetTunnelLspId_Object = MibTableColumn
vRtrInetTunnelLspId = _VRtrInetTunnelLspId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 16),
    _VRtrInetTunnelLspId_Type()
)
vRtrInetTunnelLspId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelLspId.setStatus("obsolete")


class _VRtrInetTunnelFlags_Type(Bits):
    """Custom type vRtrInetTunnelFlags based on Bits"""
    namedValues = NamedValues(
        *(("isOverTunnel", 0),
          ("useRelativeMetric", 1),
          ("autoLSP", 2),
          ("hasLFA", 3),
          ("excludeForLdpOverRsvp", 4),
          ("excludeForL3VPN", 5),
          ("excludeForBGPShortcuts", 6),
          ("excludeForBGPLabeledRoutes", 7),
          ("excludeForLFA", 8),
          ("excludeForIGPShortcuts", 9),
          ("entropyLabelCapable", 10),
          ("isAdjacencyTunnel", 11),
          ("lspBfdDown", 12))
    )

_VRtrInetTunnelFlags_Type.__name__ = "Bits"
_VRtrInetTunnelFlags_Object = MibTableColumn
vRtrInetTunnelFlags = _VRtrInetTunnelFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 17),
    _VRtrInetTunnelFlags_Type()
)
vRtrInetTunnelFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelFlags.setStatus("obsolete")
_VRtrInetTunnelRelativeMetric_Type = Integer32
_VRtrInetTunnelRelativeMetric_Object = MibTableColumn
vRtrInetTunnelRelativeMetric = _VRtrInetTunnelRelativeMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 18),
    _VRtrInetTunnelRelativeMetric_Type()
)
vRtrInetTunnelRelativeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelRelativeMetric.setStatus("obsolete")
_VRtrInetTunnelLabel_Type = Integer32
_VRtrInetTunnelLabel_Object = MibTableColumn
vRtrInetTunnelLabel = _VRtrInetTunnelLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 19),
    _VRtrInetTunnelLabel_Type()
)
vRtrInetTunnelLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelLabel.setStatus("obsolete")
_VRtrInetTunnelBypassLabel_Type = Integer32
_VRtrInetTunnelBypassLabel_Object = MibTableColumn
vRtrInetTunnelBypassLabel = _VRtrInetTunnelBypassLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 20),
    _VRtrInetTunnelBypassLabel_Type()
)
vRtrInetTunnelBypassLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelBypassLabel.setStatus("obsolete")
_VRtrInetTunnelLspFC_Type = TmnxCBFClasses
_VRtrInetTunnelLspFC_Object = MibTableColumn
vRtrInetTunnelLspFC = _VRtrInetTunnelLspFC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 21),
    _VRtrInetTunnelLspFC_Type()
)
vRtrInetTunnelLspFC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelLspFC.setStatus("obsolete")
_VRtrInetTunnelMaxLabels_Type = Integer32
_VRtrInetTunnelMaxLabels_Object = MibTableColumn
vRtrInetTunnelMaxLabels = _VRtrInetTunnelMaxLabels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 22),
    _VRtrInetTunnelMaxLabels_Type()
)
vRtrInetTunnelMaxLabels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelMaxLabels.setStatus("obsolete")
_VRtrInetTunnelNhTunnelId_Type = TmnxTunnelID
_VRtrInetTunnelNhTunnelId_Object = MibTableColumn
vRtrInetTunnelNhTunnelId = _VRtrInetTunnelNhTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 23),
    _VRtrInetTunnelNhTunnelId_Type()
)
vRtrInetTunnelNhTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelNhTunnelId.setStatus("obsolete")
_VRtrInetTunnelNhTunnelType_Type = TmnxTunnelTypeExt
_VRtrInetTunnelNhTunnelType_Object = MibTableColumn
vRtrInetTunnelNhTunnelType = _VRtrInetTunnelNhTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 24),
    _VRtrInetTunnelNhTunnelType_Type()
)
vRtrInetTunnelNhTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelNhTunnelType.setStatus("obsolete")
_VRtrInetTunnelNhTunnelInst_Type = Unsigned32
_VRtrInetTunnelNhTunnelInst_Object = MibTableColumn
vRtrInetTunnelNhTunnelInst = _VRtrInetTunnelNhTunnelInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 118, 1, 25),
    _VRtrInetTunnelNhTunnelInst_Type()
)
vRtrInetTunnelNhTunnelInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetTunnelNhTunnelInst.setStatus("obsolete")
_VRtrInetSRIndirectTable_Object = MibTable
vRtrInetSRIndirectTable = _VRtrInetSRIndirectTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119)
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTable.setStatus("current")
_VRtrInetSRIndirectEntry_Object = MibTableRow
vRtrInetSRIndirectEntry = _VRtrInetSRIndirectEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1)
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectEntry.setStatus("current")


class _VRtrInetSRIndirectTunnelLdp_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelLdp based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelLdp_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelLdp_Object = MibTableColumn
vRtrInetSRIndirectTunnelLdp = _VRtrInetSRIndirectTunnelLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 1),
    _VRtrInetSRIndirectTunnelLdp_Type()
)
vRtrInetSRIndirectTunnelLdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelLdp.setStatus("current")


class _VRtrInetSRIndirectTunnelRsvpTe_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelRsvpTe based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelRsvpTe_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelRsvpTe_Object = MibTableColumn
vRtrInetSRIndirectTunnelRsvpTe = _VRtrInetSRIndirectTunnelRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 2),
    _VRtrInetSRIndirectTunnelRsvpTe_Type()
)
vRtrInetSRIndirectTunnelRsvpTe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelRsvpTe.setStatus("current")


class _VRtrInetSRIndirectTunnelDisalIgp_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelDisalIgp based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelDisalIgp_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelDisalIgp_Object = MibTableColumn
vRtrInetSRIndirectTunnelDisalIgp = _VRtrInetSRIndirectTunnelDisalIgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 3),
    _VRtrInetSRIndirectTunnelDisalIgp_Type()
)
vRtrInetSRIndirectTunnelDisalIgp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelDisalIgp.setStatus("current")


class _VRtrInetSRIndirectTunResStatus_Type(TResolveStatus):
    """Custom type vRtrInetSRIndirectTunResStatus based on TResolveStatus"""
    defaultValue = 0


_VRtrInetSRIndirectTunResStatus_Type.__name__ = "TResolveStatus"
_VRtrInetSRIndirectTunResStatus_Object = MibTableColumn
vRtrInetSRIndirectTunResStatus = _VRtrInetSRIndirectTunResStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 4),
    _VRtrInetSRIndirectTunResStatus_Type()
)
vRtrInetSRIndirectTunResStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunResStatus.setStatus("current")


class _VRtrInetSRIndirectTunnelSrIsis_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelSrIsis based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelSrIsis_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelSrIsis_Object = MibTableColumn
vRtrInetSRIndirectTunnelSrIsis = _VRtrInetSRIndirectTunnelSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 5),
    _VRtrInetSRIndirectTunnelSrIsis_Type()
)
vRtrInetSRIndirectTunnelSrIsis.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelSrIsis.setStatus("current")


class _VRtrInetSRIndirectTunnelSrOspf_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelSrOspf based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelSrOspf_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelSrOspf_Object = MibTableColumn
vRtrInetSRIndirectTunnelSrOspf = _VRtrInetSRIndirectTunnelSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 6),
    _VRtrInetSRIndirectTunnelSrOspf_Type()
)
vRtrInetSRIndirectTunnelSrOspf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelSrOspf.setStatus("current")


class _VRtrInetSRIndirectTunnelSrTe_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelSrTe based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelSrTe_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelSrTe_Object = MibTableColumn
vRtrInetSRIndirectTunnelSrTe = _VRtrInetSRIndirectTunnelSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 7),
    _VRtrInetSRIndirectTunnelSrTe_Type()
)
vRtrInetSRIndirectTunnelSrTe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelSrTe.setStatus("current")


class _VRtrInetSRIndirectTunnelRibApi_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelRibApi based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelRibApi_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelRibApi_Object = MibTableColumn
vRtrInetSRIndirectTunnelRibApi = _VRtrInetSRIndirectTunnelRibApi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 8),
    _VRtrInetSRIndirectTunnelRibApi_Type()
)
vRtrInetSRIndirectTunnelRibApi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelRibApi.setStatus("current")


class _VRtrInetSRIndirectTnlMplsFwdPlcy_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTnlMplsFwdPlcy based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTnlMplsFwdPlcy_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTnlMplsFwdPlcy_Object = MibTableColumn
vRtrInetSRIndirectTnlMplsFwdPlcy = _VRtrInetSRIndirectTnlMplsFwdPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 9),
    _VRtrInetSRIndirectTnlMplsFwdPlcy_Type()
)
vRtrInetSRIndirectTnlMplsFwdPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTnlMplsFwdPlcy.setStatus("current")


class _VRtrInetSRIndirectTunnelSrOspf3_Type(TruthValue):
    """Custom type vRtrInetSRIndirectTunnelSrOspf3 based on TruthValue"""
    defaultValue = 2


_VRtrInetSRIndirectTunnelSrOspf3_Type.__name__ = "TruthValue"
_VRtrInetSRIndirectTunnelSrOspf3_Object = MibTableColumn
vRtrInetSRIndirectTunnelSrOspf3 = _VRtrInetSRIndirectTunnelSrOspf3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 10),
    _VRtrInetSRIndirectTunnelSrOspf3_Type()
)
vRtrInetSRIndirectTunnelSrOspf3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunnelSrOspf3.setStatus("current")


class _VRtrInetSRIndirectTunFlexAlgoId_Type(TmnxFlexAlgoIdOrZero):
    """Custom type vRtrInetSRIndirectTunFlexAlgoId based on TmnxFlexAlgoIdOrZero"""
    defaultValue = 0


_VRtrInetSRIndirectTunFlexAlgoId_Type.__name__ = "TmnxFlexAlgoIdOrZero"
_VRtrInetSRIndirectTunFlexAlgoId_Object = MibTableColumn
vRtrInetSRIndirectTunFlexAlgoId = _VRtrInetSRIndirectTunFlexAlgoId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 119, 1, 11),
    _VRtrInetSRIndirectTunFlexAlgoId_Type()
)
vRtrInetSRIndirectTunFlexAlgoId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectTunFlexAlgoId.setStatus("current")
_VRtrInetSRIndirectLspTable_Object = MibTable
vRtrInetSRIndirectLspTable = _VRtrInetSRIndirectLspTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 120)
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectLspTable.setStatus("current")
_VRtrInetSRIndirectLspEntry_Object = MibTableRow
vRtrInetSRIndirectLspEntry = _VRtrInetSRIndirectLspEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 120, 1)
)
vRtrInetSRIndirectLspEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetSRIndirectLspName"),
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectLspEntry.setStatus("current")
_VRtrInetSRIndirectLspName_Type = TLNamedItemOrEmpty
_VRtrInetSRIndirectLspName_Object = MibTableColumn
vRtrInetSRIndirectLspName = _VRtrInetSRIndirectLspName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 120, 1, 1),
    _VRtrInetSRIndirectLspName_Type()
)
vRtrInetSRIndirectLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectLspName.setStatus("current")
_VRtrInetSRIndirectLspRowStatus_Type = RowStatus
_VRtrInetSRIndirectLspRowStatus_Object = MibTableColumn
vRtrInetSRIndirectLspRowStatus = _VRtrInetSRIndirectLspRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 120, 1, 2),
    _VRtrInetSRIndirectLspRowStatus_Type()
)
vRtrInetSRIndirectLspRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectLspRowStatus.setStatus("current")
_VRtrIfLagPerLinkHashTable_Object = MibTable
vRtrIfLagPerLinkHashTable = _VRtrIfLagPerLinkHashTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 121)
)
if mibBuilder.loadTexts:
    vRtrIfLagPerLinkHashTable.setStatus("current")
_VRtrIfLagPerLinkHashEntry_Object = MibTableRow
vRtrIfLagPerLinkHashEntry = _VRtrIfLagPerLinkHashEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 121, 1)
)
vRtrIfLagPerLinkHashEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfLagPerLinkHashEntry.setStatus("current")
_VRtrIfLagPerLinkHashLastChgd_Type = TimeStamp
_VRtrIfLagPerLinkHashLastChgd_Object = MibTableColumn
vRtrIfLagPerLinkHashLastChgd = _VRtrIfLagPerLinkHashLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 121, 1, 1),
    _VRtrIfLagPerLinkHashLastChgd_Type()
)
vRtrIfLagPerLinkHashLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLagPerLinkHashLastChgd.setStatus("current")


class _VRtrIfLagPerLinkHashClass_Type(TmnxLagPerLinkHashClass):
    """Custom type vRtrIfLagPerLinkHashClass based on TmnxLagPerLinkHashClass"""
    defaultValue = 1


_VRtrIfLagPerLinkHashClass_Type.__name__ = "TmnxLagPerLinkHashClass"
_VRtrIfLagPerLinkHashClass_Object = MibTableColumn
vRtrIfLagPerLinkHashClass = _VRtrIfLagPerLinkHashClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 121, 1, 2),
    _VRtrIfLagPerLinkHashClass_Type()
)
vRtrIfLagPerLinkHashClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfLagPerLinkHashClass.setStatus("current")


class _VRtrIfLagPerLinkHashWeight_Type(TmnxLagPerLinkHashWeight):
    """Custom type vRtrIfLagPerLinkHashWeight based on TmnxLagPerLinkHashWeight"""
    defaultValue = 1


_VRtrIfLagPerLinkHashWeight_Type.__name__ = "TmnxLagPerLinkHashWeight"
_VRtrIfLagPerLinkHashWeight_Object = MibTableColumn
vRtrIfLagPerLinkHashWeight = _VRtrIfLagPerLinkHashWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 121, 1, 3),
    _VRtrIfLagPerLinkHashWeight_Type()
)
vRtrIfLagPerLinkHashWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrIfLagPerLinkHashWeight.setStatus("current")
_TmnxVrtrIfIndexIfNameTable_Object = MibTable
tmnxVrtrIfIndexIfNameTable = _TmnxVrtrIfIndexIfNameTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 122)
)
if mibBuilder.loadTexts:
    tmnxVrtrIfIndexIfNameTable.setStatus("current")
_TmnxVrtrIfIndexIfNameEntry_Object = MibTableRow
tmnxVrtrIfIndexIfNameEntry = _TmnxVrtrIfIndexIfNameEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 122, 1)
)
tmnxVrtrIfIndexIfNameEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    tmnxVrtrIfIndexIfNameEntry.setStatus("current")
_TmnxVrtrIfIndexVrtrIfName_Type = TNamedItem
_TmnxVrtrIfIndexVrtrIfName_Object = MibTableColumn
tmnxVrtrIfIndexVrtrIfName = _TmnxVrtrIfIndexVrtrIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 122, 1, 1),
    _TmnxVrtrIfIndexVrtrIfName_Type()
)
tmnxVrtrIfIndexVrtrIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrIfIndexVrtrIfName.setStatus("current")
_VRtrInetStaticRoutePfxTable_Object = MibTable
vRtrInetStaticRoutePfxTable = _VRtrInetStaticRoutePfxTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123)
)
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxTable.setStatus("current")
_VRtrInetStaticRoutePfxEntry_Object = MibTableRow
vRtrInetStaticRoutePfxEntry = _VRtrInetStaticRoutePfxEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1)
)
vRtrInetStaticRoutePfxEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
)
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxEntry.setStatus("current")
_VRtrInetStaticRoutePfxRowStatus_Type = RowStatus
_VRtrInetStaticRoutePfxRowStatus_Object = MibTableColumn
vRtrInetStaticRoutePfxRowStatus = _VRtrInetStaticRoutePfxRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 1),
    _VRtrInetStaticRoutePfxRowStatus_Type()
)
vRtrInetStaticRoutePfxRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxRowStatus.setStatus("current")
_VRtrInetStaticRoutePfxCreateOrig_Type = TmnxCreateOrigin
_VRtrInetStaticRoutePfxCreateOrig_Object = MibTableColumn
vRtrInetStaticRoutePfxCreateOrig = _VRtrInetStaticRoutePfxCreateOrig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 2),
    _VRtrInetStaticRoutePfxCreateOrig_Type()
)
vRtrInetStaticRoutePfxCreateOrig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCreateOrig.setStatus("current")
_VRtrInetStaticRoutePfxCfgNHCount_Type = Counter32
_VRtrInetStaticRoutePfxCfgNHCount_Object = MibTableColumn
vRtrInetStaticRoutePfxCfgNHCount = _VRtrInetStaticRoutePfxCfgNHCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 3),
    _VRtrInetStaticRoutePfxCfgNHCount_Type()
)
vRtrInetStaticRoutePfxCfgNHCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCfgNHCount.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal1_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal1 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal1_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal1_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal1 = _VRtrInetStaticRoutePfxCommVal1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 4),
    _VRtrInetStaticRoutePfxCommVal1_Type()
)
vRtrInetStaticRoutePfxCommVal1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal1.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal2_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal2 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal2_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal2_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal2 = _VRtrInetStaticRoutePfxCommVal2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 5),
    _VRtrInetStaticRoutePfxCommVal2_Type()
)
vRtrInetStaticRoutePfxCommVal2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal2.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal3_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal3 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal3_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal3_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal3 = _VRtrInetStaticRoutePfxCommVal3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 6),
    _VRtrInetStaticRoutePfxCommVal3_Type()
)
vRtrInetStaticRoutePfxCommVal3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal3.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal4_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal4 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal4_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal4_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal4 = _VRtrInetStaticRoutePfxCommVal4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 7),
    _VRtrInetStaticRoutePfxCommVal4_Type()
)
vRtrInetStaticRoutePfxCommVal4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal4.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal5_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal5 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal5_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal5_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal5 = _VRtrInetStaticRoutePfxCommVal5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 8),
    _VRtrInetStaticRoutePfxCommVal5_Type()
)
vRtrInetStaticRoutePfxCommVal5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal5.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal6_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal6 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal6_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal6_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal6 = _VRtrInetStaticRoutePfxCommVal6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 9),
    _VRtrInetStaticRoutePfxCommVal6_Type()
)
vRtrInetStaticRoutePfxCommVal6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal6.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal7_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal7 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal7_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal7_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal7 = _VRtrInetStaticRoutePfxCommVal7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 10),
    _VRtrInetStaticRoutePfxCommVal7_Type()
)
vRtrInetStaticRoutePfxCommVal7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal7.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal8_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal8 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal8_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal8_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal8 = _VRtrInetStaticRoutePfxCommVal8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 11),
    _VRtrInetStaticRoutePfxCommVal8_Type()
)
vRtrInetStaticRoutePfxCommVal8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal8.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal9_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal9 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal9_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal9_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal9 = _VRtrInetStaticRoutePfxCommVal9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 12),
    _VRtrInetStaticRoutePfxCommVal9_Type()
)
vRtrInetStaticRoutePfxCommVal9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal9.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal10_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal10 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal10_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal10_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal10 = _VRtrInetStaticRoutePfxCommVal10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 13),
    _VRtrInetStaticRoutePfxCommVal10_Type()
)
vRtrInetStaticRoutePfxCommVal10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal10.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal11_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal11 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal11_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal11_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal11 = _VRtrInetStaticRoutePfxCommVal11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 14),
    _VRtrInetStaticRoutePfxCommVal11_Type()
)
vRtrInetStaticRoutePfxCommVal11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal11.setStatus("current")


class _VRtrInetStaticRoutePfxCommVal12_Type(DisplayString):
    """Custom type vRtrInetStaticRoutePfxCommVal12 based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 72),
    )


_VRtrInetStaticRoutePfxCommVal12_Type.__name__ = "DisplayString"
_VRtrInetStaticRoutePfxCommVal12_Object = MibTableColumn
vRtrInetStaticRoutePfxCommVal12 = _VRtrInetStaticRoutePfxCommVal12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 15),
    _VRtrInetStaticRoutePfxCommVal12_Type()
)
vRtrInetStaticRoutePfxCommVal12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxCommVal12.setStatus("current")


class _VRtrInetStaticRoutePfxTag_Type(Unsigned32):
    """Custom type vRtrInetStaticRoutePfxTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrInetStaticRoutePfxTag_Type.__name__ = "Unsigned32"
_VRtrInetStaticRoutePfxTag_Object = MibTableColumn
vRtrInetStaticRoutePfxTag = _VRtrInetStaticRoutePfxTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 16),
    _VRtrInetStaticRoutePfxTag_Type()
)
vRtrInetStaticRoutePfxTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxTag.setStatus("current")


class _VRtrInetStaticRoutePfxBackupTag_Type(Unsigned32):
    """Custom type vRtrInetStaticRoutePfxBackupTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrInetStaticRoutePfxBackupTag_Type.__name__ = "Unsigned32"
_VRtrInetStaticRoutePfxBackupTag_Object = MibTableColumn
vRtrInetStaticRoutePfxBackupTag = _VRtrInetStaticRoutePfxBackupTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 123, 1, 17),
    _VRtrInetStaticRoutePfxBackupTag_Type()
)
vRtrInetStaticRoutePfxBackupTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetStaticRoutePfxBackupTag.setStatus("current")
_TmnxVrtrMssAdjTableLastCh_Type = TimeStamp
_TmnxVrtrMssAdjTableLastCh_Object = MibScalar
tmnxVrtrMssAdjTableLastCh = _TmnxVrtrMssAdjTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 124),
    _TmnxVrtrMssAdjTableLastCh_Type()
)
tmnxVrtrMssAdjTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjTableLastCh.setStatus("current")
_TmnxVrtrMssAdjTable_Object = MibTable
tmnxVrtrMssAdjTable = _TmnxVrtrMssAdjTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125)
)
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjTable.setStatus("current")
_TmnxVrtrMssAdjEntry_Object = MibTableRow
tmnxVrtrMssAdjEntry = _TmnxVrtrMssAdjEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125, 1)
)
tmnxVrtrMssAdjEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjEntry.setStatus("current")
_TmnxVrtrMssAdjLastCh_Type = TimeStamp
_TmnxVrtrMssAdjLastCh_Object = MibTableColumn
tmnxVrtrMssAdjLastCh = _TmnxVrtrMssAdjLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125, 1, 1),
    _TmnxVrtrMssAdjLastCh_Type()
)
tmnxVrtrMssAdjLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjLastCh.setStatus("current")
_TmnxVrtrMssAdjRowStatus_Type = RowStatus
_TmnxVrtrMssAdjRowStatus_Object = MibTableColumn
tmnxVrtrMssAdjRowStatus = _TmnxVrtrMssAdjRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125, 1, 2),
    _TmnxVrtrMssAdjRowStatus_Type()
)
tmnxVrtrMssAdjRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjRowStatus.setStatus("current")


class _TmnxVrtrMssAdjGroup_Type(TmnxIsaBbGrpId):
    """Custom type tmnxVrtrMssAdjGroup based on TmnxIsaBbGrpId"""
    subtypeSpec = TmnxIsaBbGrpId.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_TmnxVrtrMssAdjGroup_Type.__name__ = "TmnxIsaBbGrpId"
_TmnxVrtrMssAdjGroup_Object = MibTableColumn
tmnxVrtrMssAdjGroup = _TmnxVrtrMssAdjGroup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125, 1, 3),
    _TmnxVrtrMssAdjGroup_Type()
)
tmnxVrtrMssAdjGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjGroup.setStatus("current")


class _TmnxVrtrMssAdjSegmentSize_Type(Unsigned32):
    """Custom type tmnxVrtrMssAdjSegmentSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(160, 10240),
    )


_TmnxVrtrMssAdjSegmentSize_Type.__name__ = "Unsigned32"
_TmnxVrtrMssAdjSegmentSize_Object = MibTableColumn
tmnxVrtrMssAdjSegmentSize = _TmnxVrtrMssAdjSegmentSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 125, 1, 4),
    _TmnxVrtrMssAdjSegmentSize_Type()
)
tmnxVrtrMssAdjSegmentSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrMssAdjSegmentSize.setStatus("current")
_VRtrConfFlowspecTableLstChg_Type = TimeStamp
_VRtrConfFlowspecTableLstChg_Object = MibScalar
vRtrConfFlowspecTableLstChg = _VRtrConfFlowspecTableLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 126),
    _VRtrConfFlowspecTableLstChg_Type()
)
vRtrConfFlowspecTableLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrConfFlowspecTableLstChg.setStatus("current")
_VRtrConfFlowspecTable_Object = MibTable
vRtrConfFlowspecTable = _VRtrConfFlowspecTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127)
)
if mibBuilder.loadTexts:
    vRtrConfFlowspecTable.setStatus("current")
_VRtrConfFlowspecEntry_Object = MibTableRow
vRtrConfFlowspecEntry = _VRtrConfFlowspecEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127, 1)
)
if mibBuilder.loadTexts:
    vRtrConfFlowspecEntry.setStatus("current")
_VRtrConfFlowspecLastChanged_Type = TimeStamp
_VRtrConfFlowspecLastChanged_Object = MibTableColumn
vRtrConfFlowspecLastChanged = _VRtrConfFlowspecLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127, 1, 1),
    _VRtrConfFlowspecLastChanged_Type()
)
vRtrConfFlowspecLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrConfFlowspecLastChanged.setStatus("current")


class _VRtrIpEmbeddedFlowspecMaxSize_Type(TmnxEmbFlowspecFltrMaxSize):
    """Custom type vRtrIpEmbeddedFlowspecMaxSize based on TmnxEmbFlowspecFltrMaxSize"""
    defaultValue = 512


_VRtrIpEmbeddedFlowspecMaxSize_Type.__name__ = "TmnxEmbFlowspecFltrMaxSize"
_VRtrIpEmbeddedFlowspecMaxSize_Object = MibTableColumn
vRtrIpEmbeddedFlowspecMaxSize = _VRtrIpEmbeddedFlowspecMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127, 1, 2),
    _VRtrIpEmbeddedFlowspecMaxSize_Type()
)
vRtrIpEmbeddedFlowspecMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpEmbeddedFlowspecMaxSize.setStatus("current")


class _VRtrIpv6EmbeddedFlowspecMaxSize_Type(TmnxEmbFlowspecFltrMaxSize):
    """Custom type vRtrIpv6EmbeddedFlowspecMaxSize based on TmnxEmbFlowspecFltrMaxSize"""
    defaultValue = 512


_VRtrIpv6EmbeddedFlowspecMaxSize_Type.__name__ = "TmnxEmbFlowspecFltrMaxSize"
_VRtrIpv6EmbeddedFlowspecMaxSize_Object = MibTableColumn
vRtrIpv6EmbeddedFlowspecMaxSize = _VRtrIpv6EmbeddedFlowspecMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127, 1, 3),
    _VRtrIpv6EmbeddedFlowspecMaxSize_Type()
)
vRtrIpv6EmbeddedFlowspecMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIpv6EmbeddedFlowspecMaxSize.setStatus("current")


class _VRtrFlowspecFltrCamType_Type(TIPvXFilterType):
    """Custom type vRtrFlowspecFltrCamType based on TIPvXFilterType"""
    defaultValue = 0


_VRtrFlowspecFltrCamType_Type.__name__ = "TIPvXFilterType"
_VRtrFlowspecFltrCamType_Object = MibTableColumn
vRtrFlowspecFltrCamType = _VRtrFlowspecFltrCamType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 127, 1, 4),
    _VRtrFlowspecFltrCamType_Type()
)
vRtrFlowspecFltrCamType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrFlowspecFltrCamType.setStatus("current")
_VRtrInetSRIndirectSrTeLspTable_Object = MibTable
vRtrInetSRIndirectSrTeLspTable = _VRtrInetSRIndirectSrTeLspTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 128)
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectSrTeLspTable.setStatus("current")
_VRtrInetSRIndirectSrTeLspEntry_Object = MibTableRow
vRtrInetSRIndirectSrTeLspEntry = _VRtrInetSRIndirectSrTeLspEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 128, 1)
)
vRtrInetSRIndirectSrTeLspEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDest"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetSRIndirectSrTeLspName"),
)
if mibBuilder.loadTexts:
    vRtrInetSRIndirectSrTeLspEntry.setStatus("current")
_VRtrInetSRIndirectSrTeLspName_Type = TLNamedItemOrEmpty
_VRtrInetSRIndirectSrTeLspName_Object = MibTableColumn
vRtrInetSRIndirectSrTeLspName = _VRtrInetSRIndirectSrTeLspName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 128, 1, 1),
    _VRtrInetSRIndirectSrTeLspName_Type()
)
vRtrInetSRIndirectSrTeLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetSRIndirectSrTeLspName.setStatus("current")
_VRtrInetSRIndSrTeLspRowStatus_Type = RowStatus
_VRtrInetSRIndSrTeLspRowStatus_Object = MibTableColumn
vRtrInetSRIndSrTeLspRowStatus = _VRtrInetSRIndSrTeLspRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 128, 1, 2),
    _VRtrInetSRIndSrTeLspRowStatus_Type()
)
vRtrInetSRIndSrTeLspRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrInetSRIndSrTeLspRowStatus.setStatus("current")
_VRtrIcmpStatTable_Object = MibTable
vRtrIcmpStatTable = _VRtrIcmpStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129)
)
if mibBuilder.loadTexts:
    vRtrIcmpStatTable.setStatus("current")
_VRtrIcmpStatEntry_Object = MibTableRow
vRtrIcmpStatEntry = _VRtrIcmpStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1)
)
if mibBuilder.loadTexts:
    vRtrIcmpStatEntry.setStatus("current")
_VRtrIcmpInMsgs_Type = Counter32
_VRtrIcmpInMsgs_Object = MibTableColumn
vRtrIcmpInMsgs = _VRtrIcmpInMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 1),
    _VRtrIcmpInMsgs_Type()
)
vRtrIcmpInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInMsgs.setStatus("current")
_VRtrIcmpInErrors_Type = Counter32
_VRtrIcmpInErrors_Object = MibTableColumn
vRtrIcmpInErrors = _VRtrIcmpInErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 2),
    _VRtrIcmpInErrors_Type()
)
vRtrIcmpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInErrors.setStatus("current")
_VRtrIcmpInDestUnreachs_Type = Counter32
_VRtrIcmpInDestUnreachs_Object = MibTableColumn
vRtrIcmpInDestUnreachs = _VRtrIcmpInDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 3),
    _VRtrIcmpInDestUnreachs_Type()
)
vRtrIcmpInDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInDestUnreachs.setStatus("current")
_VRtrIcmpInRedirects_Type = Counter32
_VRtrIcmpInRedirects_Object = MibTableColumn
vRtrIcmpInRedirects = _VRtrIcmpInRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 4),
    _VRtrIcmpInRedirects_Type()
)
vRtrIcmpInRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInRedirects.setStatus("current")
_VRtrIcmpInEchos_Type = Counter32
_VRtrIcmpInEchos_Object = MibTableColumn
vRtrIcmpInEchos = _VRtrIcmpInEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 5),
    _VRtrIcmpInEchos_Type()
)
vRtrIcmpInEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInEchos.setStatus("current")
_VRtrIcmpInEchoReplies_Type = Counter32
_VRtrIcmpInEchoReplies_Object = MibTableColumn
vRtrIcmpInEchoReplies = _VRtrIcmpInEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 6),
    _VRtrIcmpInEchoReplies_Type()
)
vRtrIcmpInEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInEchoReplies.setStatus("current")
_VRtrIcmpInTimeExcds_Type = Counter32
_VRtrIcmpInTimeExcds_Object = MibTableColumn
vRtrIcmpInTimeExcds = _VRtrIcmpInTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 7),
    _VRtrIcmpInTimeExcds_Type()
)
vRtrIcmpInTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInTimeExcds.setStatus("current")
_VRtrIcmpInSrcQuenchs_Type = Counter32
_VRtrIcmpInSrcQuenchs_Object = MibTableColumn
vRtrIcmpInSrcQuenchs = _VRtrIcmpInSrcQuenchs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 8),
    _VRtrIcmpInSrcQuenchs_Type()
)
vRtrIcmpInSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInSrcQuenchs.setStatus("current")
_VRtrIcmpInTimestamps_Type = Counter32
_VRtrIcmpInTimestamps_Object = MibTableColumn
vRtrIcmpInTimestamps = _VRtrIcmpInTimestamps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 9),
    _VRtrIcmpInTimestamps_Type()
)
vRtrIcmpInTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInTimestamps.setStatus("current")
_VRtrIcmpInTimestampReps_Type = Counter32
_VRtrIcmpInTimestampReps_Object = MibTableColumn
vRtrIcmpInTimestampReps = _VRtrIcmpInTimestampReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 10),
    _VRtrIcmpInTimestampReps_Type()
)
vRtrIcmpInTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInTimestampReps.setStatus("current")
_VRtrIcmpInAddrMasks_Type = Counter32
_VRtrIcmpInAddrMasks_Object = MibTableColumn
vRtrIcmpInAddrMasks = _VRtrIcmpInAddrMasks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 11),
    _VRtrIcmpInAddrMasks_Type()
)
vRtrIcmpInAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInAddrMasks.setStatus("current")
_VRtrIcmpInAddrMaskReps_Type = Counter32
_VRtrIcmpInAddrMaskReps_Object = MibTableColumn
vRtrIcmpInAddrMaskReps = _VRtrIcmpInAddrMaskReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 12),
    _VRtrIcmpInAddrMaskReps_Type()
)
vRtrIcmpInAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInAddrMaskReps.setStatus("current")
_VRtrIcmpInParmProblems_Type = Counter32
_VRtrIcmpInParmProblems_Object = MibTableColumn
vRtrIcmpInParmProblems = _VRtrIcmpInParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 13),
    _VRtrIcmpInParmProblems_Type()
)
vRtrIcmpInParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpInParmProblems.setStatus("current")
_VRtrIcmpOutMsgs_Type = Counter32
_VRtrIcmpOutMsgs_Object = MibTableColumn
vRtrIcmpOutMsgs = _VRtrIcmpOutMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 14),
    _VRtrIcmpOutMsgs_Type()
)
vRtrIcmpOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutMsgs.setStatus("current")
_VRtrIcmpOutErrors_Type = Counter32
_VRtrIcmpOutErrors_Object = MibTableColumn
vRtrIcmpOutErrors = _VRtrIcmpOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 15),
    _VRtrIcmpOutErrors_Type()
)
vRtrIcmpOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutErrors.setStatus("current")
_VRtrIcmpOutDestUnreachs_Type = Counter32
_VRtrIcmpOutDestUnreachs_Object = MibTableColumn
vRtrIcmpOutDestUnreachs = _VRtrIcmpOutDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 16),
    _VRtrIcmpOutDestUnreachs_Type()
)
vRtrIcmpOutDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutDestUnreachs.setStatus("current")
_VRtrIcmpOutRedirects_Type = Counter32
_VRtrIcmpOutRedirects_Object = MibTableColumn
vRtrIcmpOutRedirects = _VRtrIcmpOutRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 17),
    _VRtrIcmpOutRedirects_Type()
)
vRtrIcmpOutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutRedirects.setStatus("current")
_VRtrIcmpOutEchos_Type = Counter32
_VRtrIcmpOutEchos_Object = MibTableColumn
vRtrIcmpOutEchos = _VRtrIcmpOutEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 18),
    _VRtrIcmpOutEchos_Type()
)
vRtrIcmpOutEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutEchos.setStatus("current")
_VRtrIcmpOutEchoReplies_Type = Counter32
_VRtrIcmpOutEchoReplies_Object = MibTableColumn
vRtrIcmpOutEchoReplies = _VRtrIcmpOutEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 19),
    _VRtrIcmpOutEchoReplies_Type()
)
vRtrIcmpOutEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutEchoReplies.setStatus("current")
_VRtrIcmpOutTimeExcds_Type = Counter32
_VRtrIcmpOutTimeExcds_Object = MibTableColumn
vRtrIcmpOutTimeExcds = _VRtrIcmpOutTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 20),
    _VRtrIcmpOutTimeExcds_Type()
)
vRtrIcmpOutTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutTimeExcds.setStatus("current")
_VRtrIcmpOutSrcQuenchs_Type = Counter32
_VRtrIcmpOutSrcQuenchs_Object = MibTableColumn
vRtrIcmpOutSrcQuenchs = _VRtrIcmpOutSrcQuenchs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 21),
    _VRtrIcmpOutSrcQuenchs_Type()
)
vRtrIcmpOutSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutSrcQuenchs.setStatus("current")
_VRtrIcmpOutTimestamps_Type = Counter32
_VRtrIcmpOutTimestamps_Object = MibTableColumn
vRtrIcmpOutTimestamps = _VRtrIcmpOutTimestamps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 22),
    _VRtrIcmpOutTimestamps_Type()
)
vRtrIcmpOutTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutTimestamps.setStatus("current")
_VRtrIcmpOutTimestampReps_Type = Counter32
_VRtrIcmpOutTimestampReps_Object = MibTableColumn
vRtrIcmpOutTimestampReps = _VRtrIcmpOutTimestampReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 23),
    _VRtrIcmpOutTimestampReps_Type()
)
vRtrIcmpOutTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutTimestampReps.setStatus("current")
_VRtrIcmpOutAddrMasks_Type = Counter32
_VRtrIcmpOutAddrMasks_Object = MibTableColumn
vRtrIcmpOutAddrMasks = _VRtrIcmpOutAddrMasks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 24),
    _VRtrIcmpOutAddrMasks_Type()
)
vRtrIcmpOutAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutAddrMasks.setStatus("current")
_VRtrIcmpOutAddrMaskReps_Type = Counter32
_VRtrIcmpOutAddrMaskReps_Object = MibTableColumn
vRtrIcmpOutAddrMaskReps = _VRtrIcmpOutAddrMaskReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 25),
    _VRtrIcmpOutAddrMaskReps_Type()
)
vRtrIcmpOutAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutAddrMaskReps.setStatus("current")
_VRtrIcmpOutParmProblems_Type = Counter32
_VRtrIcmpOutParmProblems_Object = MibTableColumn
vRtrIcmpOutParmProblems = _VRtrIcmpOutParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 26),
    _VRtrIcmpOutParmProblems_Type()
)
vRtrIcmpOutParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutParmProblems.setStatus("current")
_VRtrIcmpOutDiscards_Type = Counter32
_VRtrIcmpOutDiscards_Object = MibTableColumn
vRtrIcmpOutDiscards = _VRtrIcmpOutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 129, 1, 27),
    _VRtrIcmpOutDiscards_Type()
)
vRtrIcmpOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIcmpOutDiscards.setStatus("current")
_VRtrIfIcmpStatTable_Object = MibTable
vRtrIfIcmpStatTable = _VRtrIfIcmpStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130)
)
if mibBuilder.loadTexts:
    vRtrIfIcmpStatTable.setStatus("current")
_VRtrIfIcmpStatEntry_Object = MibTableRow
vRtrIfIcmpStatEntry = _VRtrIfIcmpStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1)
)
if mibBuilder.loadTexts:
    vRtrIfIcmpStatEntry.setStatus("current")
_VRtrIfIcmpInMsgs_Type = Counter32
_VRtrIfIcmpInMsgs_Object = MibTableColumn
vRtrIfIcmpInMsgs = _VRtrIfIcmpInMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 1),
    _VRtrIfIcmpInMsgs_Type()
)
vRtrIfIcmpInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInMsgs.setStatus("current")
_VRtrIfIcmpInErrors_Type = Counter32
_VRtrIfIcmpInErrors_Object = MibTableColumn
vRtrIfIcmpInErrors = _VRtrIfIcmpInErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 2),
    _VRtrIfIcmpInErrors_Type()
)
vRtrIfIcmpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInErrors.setStatus("current")
_VRtrIfIcmpInDestUnreachs_Type = Counter32
_VRtrIfIcmpInDestUnreachs_Object = MibTableColumn
vRtrIfIcmpInDestUnreachs = _VRtrIfIcmpInDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 3),
    _VRtrIfIcmpInDestUnreachs_Type()
)
vRtrIfIcmpInDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInDestUnreachs.setStatus("current")
_VRtrIfIcmpInRedirects_Type = Counter32
_VRtrIfIcmpInRedirects_Object = MibTableColumn
vRtrIfIcmpInRedirects = _VRtrIfIcmpInRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 4),
    _VRtrIfIcmpInRedirects_Type()
)
vRtrIfIcmpInRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInRedirects.setStatus("current")
_VRtrIfIcmpInEchos_Type = Counter32
_VRtrIfIcmpInEchos_Object = MibTableColumn
vRtrIfIcmpInEchos = _VRtrIfIcmpInEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 5),
    _VRtrIfIcmpInEchos_Type()
)
vRtrIfIcmpInEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInEchos.setStatus("current")
_VRtrIfIcmpInEchoReplies_Type = Counter32
_VRtrIfIcmpInEchoReplies_Object = MibTableColumn
vRtrIfIcmpInEchoReplies = _VRtrIfIcmpInEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 6),
    _VRtrIfIcmpInEchoReplies_Type()
)
vRtrIfIcmpInEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInEchoReplies.setStatus("current")
_VRtrIfIcmpInTimeExcds_Type = Counter32
_VRtrIfIcmpInTimeExcds_Object = MibTableColumn
vRtrIfIcmpInTimeExcds = _VRtrIfIcmpInTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 7),
    _VRtrIfIcmpInTimeExcds_Type()
)
vRtrIfIcmpInTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInTimeExcds.setStatus("current")
_VRtrIfIcmpInSrcQuenchs_Type = Counter32
_VRtrIfIcmpInSrcQuenchs_Object = MibTableColumn
vRtrIfIcmpInSrcQuenchs = _VRtrIfIcmpInSrcQuenchs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 8),
    _VRtrIfIcmpInSrcQuenchs_Type()
)
vRtrIfIcmpInSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInSrcQuenchs.setStatus("current")
_VRtrIfIcmpInTimestamps_Type = Counter32
_VRtrIfIcmpInTimestamps_Object = MibTableColumn
vRtrIfIcmpInTimestamps = _VRtrIfIcmpInTimestamps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 9),
    _VRtrIfIcmpInTimestamps_Type()
)
vRtrIfIcmpInTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInTimestamps.setStatus("current")
_VRtrIfIcmpInTimestampReps_Type = Counter32
_VRtrIfIcmpInTimestampReps_Object = MibTableColumn
vRtrIfIcmpInTimestampReps = _VRtrIfIcmpInTimestampReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 10),
    _VRtrIfIcmpInTimestampReps_Type()
)
vRtrIfIcmpInTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInTimestampReps.setStatus("current")
_VRtrIfIcmpInAddrMasks_Type = Counter32
_VRtrIfIcmpInAddrMasks_Object = MibTableColumn
vRtrIfIcmpInAddrMasks = _VRtrIfIcmpInAddrMasks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 11),
    _VRtrIfIcmpInAddrMasks_Type()
)
vRtrIfIcmpInAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInAddrMasks.setStatus("current")
_VRtrIfIcmpInAddrMaskReps_Type = Counter32
_VRtrIfIcmpInAddrMaskReps_Object = MibTableColumn
vRtrIfIcmpInAddrMaskReps = _VRtrIfIcmpInAddrMaskReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 12),
    _VRtrIfIcmpInAddrMaskReps_Type()
)
vRtrIfIcmpInAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInAddrMaskReps.setStatus("current")
_VRtrIfIcmpInParmProblems_Type = Counter32
_VRtrIfIcmpInParmProblems_Object = MibTableColumn
vRtrIfIcmpInParmProblems = _VRtrIfIcmpInParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 13),
    _VRtrIfIcmpInParmProblems_Type()
)
vRtrIfIcmpInParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpInParmProblems.setStatus("current")
_VRtrIfIcmpOutMsgs_Type = Counter32
_VRtrIfIcmpOutMsgs_Object = MibTableColumn
vRtrIfIcmpOutMsgs = _VRtrIfIcmpOutMsgs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 14),
    _VRtrIfIcmpOutMsgs_Type()
)
vRtrIfIcmpOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutMsgs.setStatus("current")
_VRtrIfIcmpOutErrors_Type = Counter32
_VRtrIfIcmpOutErrors_Object = MibTableColumn
vRtrIfIcmpOutErrors = _VRtrIfIcmpOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 15),
    _VRtrIfIcmpOutErrors_Type()
)
vRtrIfIcmpOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutErrors.setStatus("current")
_VRtrIfIcmpOutDestUnreachs_Type = Counter32
_VRtrIfIcmpOutDestUnreachs_Object = MibTableColumn
vRtrIfIcmpOutDestUnreachs = _VRtrIfIcmpOutDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 16),
    _VRtrIfIcmpOutDestUnreachs_Type()
)
vRtrIfIcmpOutDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutDestUnreachs.setStatus("current")
_VRtrIfIcmpOutRedirects_Type = Counter32
_VRtrIfIcmpOutRedirects_Object = MibTableColumn
vRtrIfIcmpOutRedirects = _VRtrIfIcmpOutRedirects_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 17),
    _VRtrIfIcmpOutRedirects_Type()
)
vRtrIfIcmpOutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutRedirects.setStatus("current")
_VRtrIfIcmpOutEchos_Type = Counter32
_VRtrIfIcmpOutEchos_Object = MibTableColumn
vRtrIfIcmpOutEchos = _VRtrIfIcmpOutEchos_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 18),
    _VRtrIfIcmpOutEchos_Type()
)
vRtrIfIcmpOutEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutEchos.setStatus("current")
_VRtrIfIcmpOutEchoReplies_Type = Counter32
_VRtrIfIcmpOutEchoReplies_Object = MibTableColumn
vRtrIfIcmpOutEchoReplies = _VRtrIfIcmpOutEchoReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 19),
    _VRtrIfIcmpOutEchoReplies_Type()
)
vRtrIfIcmpOutEchoReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutEchoReplies.setStatus("current")
_VRtrIfIcmpOutTimeExcds_Type = Counter32
_VRtrIfIcmpOutTimeExcds_Object = MibTableColumn
vRtrIfIcmpOutTimeExcds = _VRtrIfIcmpOutTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 20),
    _VRtrIfIcmpOutTimeExcds_Type()
)
vRtrIfIcmpOutTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutTimeExcds.setStatus("current")
_VRtrIfIcmpOutSrcQuenchs_Type = Counter32
_VRtrIfIcmpOutSrcQuenchs_Object = MibTableColumn
vRtrIfIcmpOutSrcQuenchs = _VRtrIfIcmpOutSrcQuenchs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 21),
    _VRtrIfIcmpOutSrcQuenchs_Type()
)
vRtrIfIcmpOutSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutSrcQuenchs.setStatus("current")
_VRtrIfIcmpOutTimestamps_Type = Counter32
_VRtrIfIcmpOutTimestamps_Object = MibTableColumn
vRtrIfIcmpOutTimestamps = _VRtrIfIcmpOutTimestamps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 22),
    _VRtrIfIcmpOutTimestamps_Type()
)
vRtrIfIcmpOutTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutTimestamps.setStatus("current")
_VRtrIfIcmpOutTimestampReps_Type = Counter32
_VRtrIfIcmpOutTimestampReps_Object = MibTableColumn
vRtrIfIcmpOutTimestampReps = _VRtrIfIcmpOutTimestampReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 23),
    _VRtrIfIcmpOutTimestampReps_Type()
)
vRtrIfIcmpOutTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutTimestampReps.setStatus("current")
_VRtrIfIcmpOutAddrMasks_Type = Counter32
_VRtrIfIcmpOutAddrMasks_Object = MibTableColumn
vRtrIfIcmpOutAddrMasks = _VRtrIfIcmpOutAddrMasks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 24),
    _VRtrIfIcmpOutAddrMasks_Type()
)
vRtrIfIcmpOutAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutAddrMasks.setStatus("current")
_VRtrIfIcmpOutAddrMaskReps_Type = Counter32
_VRtrIfIcmpOutAddrMaskReps_Object = MibTableColumn
vRtrIfIcmpOutAddrMaskReps = _VRtrIfIcmpOutAddrMaskReps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 25),
    _VRtrIfIcmpOutAddrMaskReps_Type()
)
vRtrIfIcmpOutAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutAddrMaskReps.setStatus("current")
_VRtrIfIcmpOutParmProblems_Type = Counter32
_VRtrIfIcmpOutParmProblems_Object = MibTableColumn
vRtrIfIcmpOutParmProblems = _VRtrIfIcmpOutParmProblems_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 26),
    _VRtrIfIcmpOutParmProblems_Type()
)
vRtrIfIcmpOutParmProblems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutParmProblems.setStatus("current")
_VRtrIfIcmpOutDiscards_Type = Counter32
_VRtrIfIcmpOutDiscards_Object = MibTableColumn
vRtrIfIcmpOutDiscards = _VRtrIfIcmpOutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 130, 1, 27),
    _VRtrIfIcmpOutDiscards_Type()
)
vRtrIfIcmpOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIcmpOutDiscards.setStatus("current")
_VRtrIfExtParmsTable_Object = MibTable
vRtrIfExtParmsTable = _VRtrIfExtParmsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131)
)
if mibBuilder.loadTexts:
    vRtrIfExtParmsTable.setStatus("current")
_VRtrIfExtParmsEntry_Object = MibTableRow
vRtrIfExtParmsEntry = _VRtrIfExtParmsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1)
)
if mibBuilder.loadTexts:
    vRtrIfExtParmsEntry.setStatus("current")


class _VRtrIfIpv4ArpPopulateHost_Type(TruthValue):
    """Custom type vRtrIfIpv4ArpPopulateHost based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv4ArpPopulateHost_Type.__name__ = "TruthValue"
_VRtrIfIpv4ArpPopulateHost_Object = MibTableColumn
vRtrIfIpv4ArpPopulateHost = _VRtrIfIpv4ArpPopulateHost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 1),
    _VRtrIfIpv4ArpPopulateHost_Type()
)
vRtrIfIpv4ArpPopulateHost.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv4ArpPopulateHost.setStatus("obsolete")


class _VRtrIfIpv4ArpRouteTag_Type(Unsigned32):
    """Custom type vRtrIfIpv4ArpRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_VRtrIfIpv4ArpRouteTag_Type.__name__ = "Unsigned32"
_VRtrIfIpv4ArpRouteTag_Object = MibTableColumn
vRtrIfIpv4ArpRouteTag = _VRtrIfIpv4ArpRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 2),
    _VRtrIfIpv4ArpRouteTag_Type()
)
vRtrIfIpv4ArpRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv4ArpRouteTag.setStatus("obsolete")


class _VRtrIfIpv6NdPopulateHost_Type(TruthValue):
    """Custom type vRtrIfIpv6NdPopulateHost based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6NdPopulateHost_Type.__name__ = "TruthValue"
_VRtrIfIpv6NdPopulateHost_Object = MibTableColumn
vRtrIfIpv6NdPopulateHost = _VRtrIfIpv6NdPopulateHost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 3),
    _VRtrIfIpv6NdPopulateHost_Type()
)
vRtrIfIpv6NdPopulateHost.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdPopulateHost.setStatus("obsolete")


class _VRtrIfIpv6NdRouteTag_Type(Unsigned32):
    """Custom type vRtrIfIpv6NdRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_VRtrIfIpv6NdRouteTag_Type.__name__ = "Unsigned32"
_VRtrIfIpv6NdRouteTag_Object = MibTableColumn
vRtrIfIpv6NdRouteTag = _VRtrIfIpv6NdRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 4),
    _VRtrIfIpv6NdRouteTag_Type()
)
vRtrIfIpv6NdRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6NdRouteTag.setStatus("obsolete")


class _VRtrIfIpHelperGatewayAddress_Type(IpAddress):
    """Custom type vRtrIfIpHelperGatewayAddress based on IpAddress"""
    defaultHexValue = "00000000"


_VRtrIfIpHelperGatewayAddress_Type.__name__ = "IpAddress"
_VRtrIfIpHelperGatewayAddress_Object = MibTableColumn
vRtrIfIpHelperGatewayAddress = _VRtrIfIpHelperGatewayAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 5),
    _VRtrIfIpHelperGatewayAddress_Type()
)
vRtrIfIpHelperGatewayAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpHelperGatewayAddress.setStatus("current")


class _VRtrIfGreTermination_Type(TruthValue):
    """Custom type vRtrIfGreTermination based on TruthValue"""
    defaultValue = 2


_VRtrIfGreTermination_Type.__name__ = "TruthValue"
_VRtrIfGreTermination_Object = MibTableColumn
vRtrIfGreTermination = _VRtrIfGreTermination_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 6),
    _VRtrIfGreTermination_Type()
)
vRtrIfGreTermination.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfGreTermination.setStatus("current")


class _VRtrIfIlmUntrusted_Type(TruthValue):
    """Custom type vRtrIfIlmUntrusted based on TruthValue"""
    defaultValue = 2


_VRtrIfIlmUntrusted_Type.__name__ = "TruthValue"
_VRtrIfIlmUntrusted_Object = MibTableColumn
vRtrIfIlmUntrusted = _VRtrIfIlmUntrusted_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 7),
    _VRtrIfIlmUntrusted_Type()
)
vRtrIfIlmUntrusted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIlmUntrusted.setStatus("current")


class _VRtrIfIlmDefaultForwarding_Type(Integer32):
    """Custom type vRtrIfIlmDefaultForwarding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("drop", 2))
    )


_VRtrIfIlmDefaultForwarding_Type.__name__ = "Integer32"
_VRtrIfIlmDefaultForwarding_Object = MibTableColumn
vRtrIfIlmDefaultForwarding = _VRtrIfIlmDefaultForwarding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 8),
    _VRtrIfIlmDefaultForwarding_Type()
)
vRtrIfIlmDefaultForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIlmDefaultForwarding.setStatus("current")


class _VRtrIfIpv6ForwardIpv4_Type(TruthValue):
    """Custom type vRtrIfIpv6ForwardIpv4 based on TruthValue"""
    defaultValue = 2


_VRtrIfIpv6ForwardIpv4_Type.__name__ = "TruthValue"
_VRtrIfIpv6ForwardIpv4_Object = MibTableColumn
vRtrIfIpv6ForwardIpv4 = _VRtrIfIpv6ForwardIpv4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 9),
    _VRtrIfIpv6ForwardIpv4_Type()
)
vRtrIfIpv6ForwardIpv4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIpv6ForwardIpv4.setStatus("current")


class _VRtrIfAcctPolicyId_Type(Unsigned32):
    """Custom type vRtrIfAcctPolicyId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 99),
    )


_VRtrIfAcctPolicyId_Type.__name__ = "Unsigned32"
_VRtrIfAcctPolicyId_Object = MibTableColumn
vRtrIfAcctPolicyId = _VRtrIfAcctPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 10),
    _VRtrIfAcctPolicyId_Type()
)
vRtrIfAcctPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfAcctPolicyId.setStatus("current")


class _VRtrIfCollectStats_Type(TruthValue):
    """Custom type vRtrIfCollectStats based on TruthValue"""
    defaultValue = 2


_VRtrIfCollectStats_Type.__name__ = "TruthValue"
_VRtrIfCollectStats_Object = MibTableColumn
vRtrIfCollectStats = _VRtrIfCollectStats_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 11),
    _VRtrIfCollectStats_Type()
)
vRtrIfCollectStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfCollectStats.setStatus("current")


class _VRtrIfUnidirectionalLinkDelay_Type(Integer32):
    """Custom type vRtrIfUnidirectionalLinkDelay based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16777214),
    )


_VRtrIfUnidirectionalLinkDelay_Type.__name__ = "Integer32"
_VRtrIfUnidirectionalLinkDelay_Object = MibTableColumn
vRtrIfUnidirectionalLinkDelay = _VRtrIfUnidirectionalLinkDelay_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 12),
    _VRtrIfUnidirectionalLinkDelay_Type()
)
vRtrIfUnidirectionalLinkDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfUnidirectionalLinkDelay.setStatus("current")


class _VRtrIfIngrDestinationClassLookup_Type(TruthValue):
    """Custom type vRtrIfIngrDestinationClassLookup based on TruthValue"""
    defaultValue = 2


_VRtrIfIngrDestinationClassLookup_Type.__name__ = "TruthValue"
_VRtrIfIngrDestinationClassLookup_Object = MibTableColumn
vRtrIfIngrDestinationClassLookup = _VRtrIfIngrDestinationClassLookup_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 131, 1, 13),
    _VRtrIfIngrDestinationClassLookup_Type()
)
vRtrIfIngrDestinationClassLookup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfIngrDestinationClassLookup.setStatus("current")
_VRtrAdminTagsTable_Object = MibTable
vRtrAdminTagsTable = _VRtrAdminTagsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 133)
)
if mibBuilder.loadTexts:
    vRtrAdminTagsTable.setStatus("current")
_VRtrAdminTagsEntry_Object = MibTableRow
vRtrAdminTagsEntry = _VRtrAdminTagsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 133, 1)
)
vRtrAdminTagsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdminTag"),
)
if mibBuilder.loadTexts:
    vRtrAdminTagsEntry.setStatus("current")
_VRtrAdminTag_Type = TNamedItem
_VRtrAdminTag_Object = MibTableColumn
vRtrAdminTag = _VRtrAdminTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 133, 1, 1),
    _VRtrAdminTag_Type()
)
vRtrAdminTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAdminTag.setStatus("current")
_VRtrAdminTagsRowStatus_Type = RowStatus
_VRtrAdminTagsRowStatus_Object = MibTableColumn
vRtrAdminTagsRowStatus = _VRtrAdminTagsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 133, 1, 2),
    _VRtrAdminTagsRowStatus_Type()
)
vRtrAdminTagsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdminTagsRowStatus.setStatus("current")
_VRtrAdminTagsPolicyTable_Object = MibTable
vRtrAdminTagsPolicyTable = _VRtrAdminTagsPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 134)
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyTable.setStatus("current")
_VRtrAdminTagsPolicyEntry_Object = MibTableRow
vRtrAdminTagsPolicyEntry = _VRtrAdminTagsPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 134, 1)
)
vRtrAdminTagsPolicyEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdminTagPolicy"),
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyEntry.setStatus("current")
_VRtrAdminTagPolicy_Type = TLPolicyNameOrExpOrEmpty
_VRtrAdminTagPolicy_Object = MibTableColumn
vRtrAdminTagPolicy = _VRtrAdminTagPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 134, 1, 1),
    _VRtrAdminTagPolicy_Type()
)
vRtrAdminTagPolicy.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAdminTagPolicy.setStatus("current")
_VRtrAdminTagsPolicyRowStatus_Type = RowStatus
_VRtrAdminTagsPolicyRowStatus_Object = MibTableColumn
vRtrAdminTagsPolicyRowStatus = _VRtrAdminTagsPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 134, 1, 2),
    _VRtrAdminTagsPolicyRowStatus_Type()
)
vRtrAdminTagsPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyRowStatus.setStatus("current")
_VRtrAdminTagsPolicyIncludeTable_Object = MibTable
vRtrAdminTagsPolicyIncludeTable = _VRtrAdminTagsPolicyIncludeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 135)
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyIncludeTable.setStatus("current")
_VRtrAdminTagsPolicyIncludeEntry_Object = MibTableRow
vRtrAdminTagsPolicyIncludeEntry = _VRtrAdminTagsPolicyIncludeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 135, 1)
)
vRtrAdminTagsPolicyIncludeEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdminTagPolicy"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIncludeAdminTag"),
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyIncludeEntry.setStatus("current")
_VRtrIncludeAdminTag_Type = TNamedItem
_VRtrIncludeAdminTag_Object = MibTableColumn
vRtrIncludeAdminTag = _VRtrIncludeAdminTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 135, 1, 1),
    _VRtrIncludeAdminTag_Type()
)
vRtrIncludeAdminTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIncludeAdminTag.setStatus("current")
_VRtrATPolicyIncludeRowStatus_Type = RowStatus
_VRtrATPolicyIncludeRowStatus_Object = MibTableColumn
vRtrATPolicyIncludeRowStatus = _VRtrATPolicyIncludeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 135, 1, 2),
    _VRtrATPolicyIncludeRowStatus_Type()
)
vRtrATPolicyIncludeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrATPolicyIncludeRowStatus.setStatus("current")
_VRtrAdminTagsPolicyExcludeTable_Object = MibTable
vRtrAdminTagsPolicyExcludeTable = _VRtrAdminTagsPolicyExcludeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 136)
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyExcludeTable.setStatus("current")
_VRtrAdminTagsPolicyExcludeEntry_Object = MibTableRow
vRtrAdminTagsPolicyExcludeEntry = _VRtrAdminTagsPolicyExcludeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 136, 1)
)
vRtrAdminTagsPolicyExcludeEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAdminTagPolicy"),
    (0, "TIMETRA-VRTR-MIB", "vRtrExcludeAdminTag"),
)
if mibBuilder.loadTexts:
    vRtrAdminTagsPolicyExcludeEntry.setStatus("current")
_VRtrExcludeAdminTag_Type = TNamedItem
_VRtrExcludeAdminTag_Object = MibTableColumn
vRtrExcludeAdminTag = _VRtrExcludeAdminTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 136, 1, 1),
    _VRtrExcludeAdminTag_Type()
)
vRtrExcludeAdminTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrExcludeAdminTag.setStatus("current")
_VRtrATPolicyExcludeRowStatus_Type = RowStatus
_VRtrATPolicyExcludeRowStatus_Object = MibTableColumn
vRtrATPolicyExcludeRowStatus = _VRtrATPolicyExcludeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 136, 1, 2),
    _VRtrATPolicyExcludeRowStatus_Type()
)
vRtrATPolicyExcludeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrATPolicyExcludeRowStatus.setStatus("current")
_VRtrInetExtTunnelTable_Object = MibTable
vRtrInetExtTunnelTable = _VRtrInetExtTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137)
)
if mibBuilder.loadTexts:
    vRtrInetExtTunnelTable.setStatus("current")
_VRtrInetExtTunnelEntry_Object = MibTableRow
vRtrInetExtTunnelEntry = _VRtrInetExtTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1)
)
vRtrInetExtTunnelEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetExtTunnelDestAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetExtTunnelDestAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetExtTunnelDestPfxLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetExtTunnelListIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhListIndex"),
)
if mibBuilder.loadTexts:
    vRtrInetExtTunnelEntry.setStatus("current")
_VRtrInetExtTunnelDestAddrType_Type = InetAddressType
_VRtrInetExtTunnelDestAddrType_Object = MibTableColumn
vRtrInetExtTunnelDestAddrType = _VRtrInetExtTunnelDestAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 1),
    _VRtrInetExtTunnelDestAddrType_Type()
)
vRtrInetExtTunnelDestAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelDestAddrType.setStatus("current")


class _VRtrInetExtTunnelDestAddr_Type(InetAddress):
    """Custom type vRtrInetExtTunnelDestAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetExtTunnelDestAddr_Type.__name__ = "InetAddress"
_VRtrInetExtTunnelDestAddr_Object = MibTableColumn
vRtrInetExtTunnelDestAddr = _VRtrInetExtTunnelDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 2),
    _VRtrInetExtTunnelDestAddr_Type()
)
vRtrInetExtTunnelDestAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelDestAddr.setStatus("current")
_VRtrInetExtTunnelDestPfxLen_Type = InetAddressPrefixLength
_VRtrInetExtTunnelDestPfxLen_Object = MibTableColumn
vRtrInetExtTunnelDestPfxLen = _VRtrInetExtTunnelDestPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 3),
    _VRtrInetExtTunnelDestPfxLen_Type()
)
vRtrInetExtTunnelDestPfxLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelDestPfxLen.setStatus("current")
_VRtrInetExtTunnelListIndex_Type = Unsigned32
_VRtrInetExtTunnelListIndex_Object = MibTableColumn
vRtrInetExtTunnelListIndex = _VRtrInetExtTunnelListIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 4),
    _VRtrInetExtTunnelListIndex_Type()
)
vRtrInetExtTunnelListIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelListIndex.setStatus("current")
_VRtrInetExtTunnelNhListIndex_Type = Unsigned32
_VRtrInetExtTunnelNhListIndex_Object = MibTableColumn
vRtrInetExtTunnelNhListIndex = _VRtrInetExtTunnelNhListIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 5),
    _VRtrInetExtTunnelNhListIndex_Type()
)
vRtrInetExtTunnelNhListIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhListIndex.setStatus("current")


class _VRtrInetExtTunnelPreference_Type(Unsigned32):
    """Custom type vRtrInetExtTunnelPreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrInetExtTunnelPreference_Type.__name__ = "Unsigned32"
_VRtrInetExtTunnelPreference_Object = MibTableColumn
vRtrInetExtTunnelPreference = _VRtrInetExtTunnelPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 6),
    _VRtrInetExtTunnelPreference_Type()
)
vRtrInetExtTunnelPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelPreference.setStatus("current")
_VRtrInetExtTunnelType_Type = TmnxTunnelTypeExt
_VRtrInetExtTunnelType_Object = MibTableColumn
vRtrInetExtTunnelType = _VRtrInetExtTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 7),
    _VRtrInetExtTunnelType_Type()
)
vRtrInetExtTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelType.setStatus("current")
_VRtrInetExtTunnelTypeInstance_Type = Unsigned32
_VRtrInetExtTunnelTypeInstance_Object = MibTableColumn
vRtrInetExtTunnelTypeInstance = _VRtrInetExtTunnelTypeInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 8),
    _VRtrInetExtTunnelTypeInstance_Type()
)
vRtrInetExtTunnelTypeInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelTypeInstance.setStatus("current")
_VRtrInetExtTunnelID_Type = TmnxTunnelID
_VRtrInetExtTunnelID_Object = MibTableColumn
vRtrInetExtTunnelID = _VRtrInetExtTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 9),
    _VRtrInetExtTunnelID_Type()
)
vRtrInetExtTunnelID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelID.setStatus("current")
_VRtrInetExtTunnelNextHopAddrType_Type = InetAddressType
_VRtrInetExtTunnelNextHopAddrType_Object = MibTableColumn
vRtrInetExtTunnelNextHopAddrType = _VRtrInetExtTunnelNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 10),
    _VRtrInetExtTunnelNextHopAddrType_Type()
)
vRtrInetExtTunnelNextHopAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNextHopAddrType.setStatus("current")


class _VRtrInetExtTunnelNextHopAddr_Type(InetAddress):
    """Custom type vRtrInetExtTunnelNextHopAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_VRtrInetExtTunnelNextHopAddr_Type.__name__ = "InetAddress"
_VRtrInetExtTunnelNextHopAddr_Object = MibTableColumn
vRtrInetExtTunnelNextHopAddr = _VRtrInetExtTunnelNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 11),
    _VRtrInetExtTunnelNextHopAddr_Type()
)
vRtrInetExtTunnelNextHopAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNextHopAddr.setStatus("current")
_VRtrInetExtTunnelMetric_Type = Unsigned32
_VRtrInetExtTunnelMetric_Object = MibTableColumn
vRtrInetExtTunnelMetric = _VRtrInetExtTunnelMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 12),
    _VRtrInetExtTunnelMetric_Type()
)
vRtrInetExtTunnelMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelMetric.setStatus("current")
_VRtrInetExtTunnelAge_Type = Integer32
_VRtrInetExtTunnelAge_Object = MibTableColumn
vRtrInetExtTunnelAge = _VRtrInetExtTunnelAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 13),
    _VRtrInetExtTunnelAge_Type()
)
vRtrInetExtTunnelAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelAge.setStatus("current")


class _VRtrInetExtTunnelNextHopFlags_Type(Integer32):
    """Custom type vRtrInetExtTunnelNextHopFlags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("hasLfa", 1),
          ("hasBackup", 2),
          ("isBackup", 3),
          ("isBgpInactive", 4),
          ("isLfa", 5))
    )


_VRtrInetExtTunnelNextHopFlags_Type.__name__ = "Integer32"
_VRtrInetExtTunnelNextHopFlags_Object = MibTableColumn
vRtrInetExtTunnelNextHopFlags = _VRtrInetExtTunnelNextHopFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 14),
    _VRtrInetExtTunnelNextHopFlags_Type()
)
vRtrInetExtTunnelNextHopFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNextHopFlags.setStatus("current")
_VRtrInetExtTunnelLspBandwidth_Type = Counter64
_VRtrInetExtTunnelLspBandwidth_Object = MibTableColumn
vRtrInetExtTunnelLspBandwidth = _VRtrInetExtTunnelLspBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 15),
    _VRtrInetExtTunnelLspBandwidth_Type()
)
vRtrInetExtTunnelLspBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLspBandwidth.setStatus("current")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLspBandwidth.setUnits("mega-bits per second")
_VRtrInetExtTunnelMTU_Type = Unsigned32
_VRtrInetExtTunnelMTU_Object = MibTableColumn
vRtrInetExtTunnelMTU = _VRtrInetExtTunnelMTU_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 16),
    _VRtrInetExtTunnelMTU_Type()
)
vRtrInetExtTunnelMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelMTU.setStatus("current")
_VRtrInetExtTunnelLspWeight_Type = Unsigned32
_VRtrInetExtTunnelLspWeight_Object = MibTableColumn
vRtrInetExtTunnelLspWeight = _VRtrInetExtTunnelLspWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 17),
    _VRtrInetExtTunnelLspWeight_Type()
)
vRtrInetExtTunnelLspWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLspWeight.setStatus("current")
_VRtrInetExtTunnelLspId_Type = Unsigned32
_VRtrInetExtTunnelLspId_Object = MibTableColumn
vRtrInetExtTunnelLspId = _VRtrInetExtTunnelLspId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 18),
    _VRtrInetExtTunnelLspId_Type()
)
vRtrInetExtTunnelLspId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLspId.setStatus("current")


class _VRtrInetExtTunnelFlags_Type(Bits):
    """Custom type vRtrInetExtTunnelFlags based on Bits"""
    namedValues = NamedValues(
        *(("isOverTunnel", 0),
          ("useRelativeMetric", 1),
          ("autoLSP", 2),
          ("hasLFA", 3),
          ("excludeForLdpOverRsvp", 4),
          ("excludeForL3VPN", 5),
          ("excludeForBGPShortcuts", 6),
          ("excludeForBGPLabeledRoutes", 7),
          ("excludeForLFA", 8),
          ("excludeForIGPShortcuts", 9),
          ("entropyLabelCapable", 10),
          ("isAdjacencyTunnel", 11),
          ("lspBfdDown", 12),
          ("hasColor", 13),
          ("preferTransportFRR", 14))
    )

_VRtrInetExtTunnelFlags_Type.__name__ = "Bits"
_VRtrInetExtTunnelFlags_Object = MibTableColumn
vRtrInetExtTunnelFlags = _VRtrInetExtTunnelFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 19),
    _VRtrInetExtTunnelFlags_Type()
)
vRtrInetExtTunnelFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelFlags.setStatus("current")
_VRtrInetExtTunnelRelativeMetric_Type = Integer32
_VRtrInetExtTunnelRelativeMetric_Object = MibTableColumn
vRtrInetExtTunnelRelativeMetric = _VRtrInetExtTunnelRelativeMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 20),
    _VRtrInetExtTunnelRelativeMetric_Type()
)
vRtrInetExtTunnelRelativeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelRelativeMetric.setStatus("current")
_VRtrInetExtTunnelLabel_Type = Integer32
_VRtrInetExtTunnelLabel_Object = MibTableColumn
vRtrInetExtTunnelLabel = _VRtrInetExtTunnelLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 21),
    _VRtrInetExtTunnelLabel_Type()
)
vRtrInetExtTunnelLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLabel.setStatus("current")
_VRtrInetExtTunnelBypassLabel_Type = Integer32
_VRtrInetExtTunnelBypassLabel_Object = MibTableColumn
vRtrInetExtTunnelBypassLabel = _VRtrInetExtTunnelBypassLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 22),
    _VRtrInetExtTunnelBypassLabel_Type()
)
vRtrInetExtTunnelBypassLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelBypassLabel.setStatus("current")
_VRtrInetExtTunnelLspFC_Type = TmnxCBFClasses
_VRtrInetExtTunnelLspFC_Object = MibTableColumn
vRtrInetExtTunnelLspFC = _VRtrInetExtTunnelLspFC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 23),
    _VRtrInetExtTunnelLspFC_Type()
)
vRtrInetExtTunnelLspFC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelLspFC.setStatus("current")
_VRtrInetExtTunnelMaxLabels_Type = Integer32
_VRtrInetExtTunnelMaxLabels_Object = MibTableColumn
vRtrInetExtTunnelMaxLabels = _VRtrInetExtTunnelMaxLabels_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 24),
    _VRtrInetExtTunnelMaxLabels_Type()
)
vRtrInetExtTunnelMaxLabels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelMaxLabels.setStatus("current")
_VRtrInetExtTunnelNhTunnelId_Type = TmnxTunnelID
_VRtrInetExtTunnelNhTunnelId_Object = MibTableColumn
vRtrInetExtTunnelNhTunnelId = _VRtrInetExtTunnelNhTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 25),
    _VRtrInetExtTunnelNhTunnelId_Type()
)
vRtrInetExtTunnelNhTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhTunnelId.setStatus("current")
_VRtrInetExtTunnelNhTunnelType_Type = TmnxTunnelTypeExt
_VRtrInetExtTunnelNhTunnelType_Object = MibTableColumn
vRtrInetExtTunnelNhTunnelType = _VRtrInetExtTunnelNhTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 26),
    _VRtrInetExtTunnelNhTunnelType_Type()
)
vRtrInetExtTunnelNhTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhTunnelType.setStatus("current")
_VRtrInetExtTunnelNhTunnelInst_Type = Unsigned32
_VRtrInetExtTunnelNhTunnelInst_Object = MibTableColumn
vRtrInetExtTunnelNhTunnelInst = _VRtrInetExtTunnelNhTunnelInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 27),
    _VRtrInetExtTunnelNhTunnelInst_Type()
)
vRtrInetExtTunnelNhTunnelInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhTunnelInst.setStatus("current")
_VRtrInetExtTunnelColor_Type = Unsigned32
_VRtrInetExtTunnelColor_Object = MibTableColumn
vRtrInetExtTunnelColor = _VRtrInetExtTunnelColor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 28),
    _VRtrInetExtTunnelColor_Type()
)
vRtrInetExtTunnelColor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelColor.setStatus("current")
_VRtrInetExtTunnelNhWeight_Type = Unsigned32
_VRtrInetExtTunnelNhWeight_Object = MibTableColumn
vRtrInetExtTunnelNhWeight = _VRtrInetExtTunnelNhWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 29),
    _VRtrInetExtTunnelNhWeight_Type()
)
vRtrInetExtTunnelNhWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhWeight.setStatus("current")


class _VRtrInetExtTunnelNhBitFlags_Type(Bits):
    """Custom type vRtrInetExtTunnelNhBitFlags based on Bits"""
    namedValues = NamedValues(
        *(("hasGroupId", 0),
          ("isInactive", 1),
          ("isBackup", 2))
    )

_VRtrInetExtTunnelNhBitFlags_Type.__name__ = "Bits"
_VRtrInetExtTunnelNhBitFlags_Object = MibTableColumn
vRtrInetExtTunnelNhBitFlags = _VRtrInetExtTunnelNhBitFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 30),
    _VRtrInetExtTunnelNhBitFlags_Type()
)
vRtrInetExtTunnelNhBitFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhBitFlags.setStatus("current")
_VRtrInetExtTunnelNhGroupId_Type = Unsigned32
_VRtrInetExtTunnelNhGroupId_Object = MibTableColumn
vRtrInetExtTunnelNhGroupId = _VRtrInetExtTunnelNhGroupId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 31),
    _VRtrInetExtTunnelNhGroupId_Type()
)
vRtrInetExtTunnelNhGroupId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelNhGroupId.setStatus("current")
_VRtrInetExtTunnelAlgorithm_Type = TmnxAlgorithmId
_VRtrInetExtTunnelAlgorithm_Object = MibTableColumn
vRtrInetExtTunnelAlgorithm = _VRtrInetExtTunnelAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 32),
    _VRtrInetExtTunnelAlgorithm_Type()
)
vRtrInetExtTunnelAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelAlgorithm.setStatus("current")
_VRtrInetExtTunnelSidAddrType_Type = InetAddressType
_VRtrInetExtTunnelSidAddrType_Object = MibTableColumn
vRtrInetExtTunnelSidAddrType = _VRtrInetExtTunnelSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 33),
    _VRtrInetExtTunnelSidAddrType_Type()
)
vRtrInetExtTunnelSidAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelSidAddrType.setStatus("current")


class _VRtrInetExtTunnelSidAddr_Type(InetAddress):
    """Custom type vRtrInetExtTunnelSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrInetExtTunnelSidAddr_Type.__name__ = "InetAddress"
_VRtrInetExtTunnelSidAddr_Object = MibTableColumn
vRtrInetExtTunnelSidAddr = _VRtrInetExtTunnelSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 137, 1, 34),
    _VRtrInetExtTunnelSidAddr_Type()
)
vRtrInetExtTunnelSidAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrInetExtTunnelSidAddr.setStatus("current")
_VRtrLeakExportPolicyTable_Object = MibTable
vRtrLeakExportPolicyTable = _VRtrLeakExportPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138)
)
if mibBuilder.loadTexts:
    vRtrLeakExportPolicyTable.setStatus("current")
_VRtrLeakExportPolicyEntry_Object = MibTableRow
vRtrLeakExportPolicyEntry = _VRtrLeakExportPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1)
)
if mibBuilder.loadTexts:
    vRtrLeakExportPolicyEntry.setStatus("current")


class _VRtrLeakExportPolicy1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrLeakExportPolicy1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrLeakExportPolicy1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrLeakExportPolicy1_Object = MibTableColumn
vRtrLeakExportPolicy1 = _VRtrLeakExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 1),
    _VRtrLeakExportPolicy1_Type()
)
vRtrLeakExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportPolicy1.setStatus("current")


class _VRtrLeakExportPolicy2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrLeakExportPolicy2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrLeakExportPolicy2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrLeakExportPolicy2_Object = MibTableColumn
vRtrLeakExportPolicy2 = _VRtrLeakExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 2),
    _VRtrLeakExportPolicy2_Type()
)
vRtrLeakExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportPolicy2.setStatus("current")


class _VRtrLeakExportPolicy3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrLeakExportPolicy3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrLeakExportPolicy3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrLeakExportPolicy3_Object = MibTableColumn
vRtrLeakExportPolicy3 = _VRtrLeakExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 3),
    _VRtrLeakExportPolicy3_Type()
)
vRtrLeakExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportPolicy3.setStatus("current")


class _VRtrLeakExportPolicy4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrLeakExportPolicy4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrLeakExportPolicy4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrLeakExportPolicy4_Object = MibTableColumn
vRtrLeakExportPolicy4 = _VRtrLeakExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 4),
    _VRtrLeakExportPolicy4_Type()
)
vRtrLeakExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportPolicy4.setStatus("current")


class _VRtrLeakExportPolicy5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrLeakExportPolicy5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrLeakExportPolicy5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrLeakExportPolicy5_Object = MibTableColumn
vRtrLeakExportPolicy5 = _VRtrLeakExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 5),
    _VRtrLeakExportPolicy5_Type()
)
vRtrLeakExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportPolicy5.setStatus("current")


class _VRtrLeakExportLimit_Type(Unsigned32):
    """Custom type vRtrLeakExportLimit based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_VRtrLeakExportLimit_Type.__name__ = "Unsigned32"
_VRtrLeakExportLimit_Object = MibTableColumn
vRtrLeakExportLimit = _VRtrLeakExportLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 138, 1, 6),
    _VRtrLeakExportLimit_Type()
)
vRtrLeakExportLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLeakExportLimit.setStatus("current")
_VRtrRibApiMplsTable_Object = MibTable
vRtrRibApiMplsTable = _VRtrRibApiMplsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 139)
)
if mibBuilder.loadTexts:
    vRtrRibApiMplsTable.setStatus("current")
_VRtrRibApiMplsEntry_Object = MibTableRow
vRtrRibApiMplsEntry = _VRtrRibApiMplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 139, 1)
)
vRtrRibApiMplsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrRibApiMplsEntry.setStatus("current")
_VRtrRibApiMplsLastChanged_Type = TimeStamp
_VRtrRibApiMplsLastChanged_Object = MibTableColumn
vRtrRibApiMplsLastChanged = _VRtrRibApiMplsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 139, 1, 1),
    _VRtrRibApiMplsLastChanged_Type()
)
vRtrRibApiMplsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrRibApiMplsLastChanged.setStatus("current")


class _VRtrRibApiMplsAdminState_Type(TmnxAdminState):
    """Custom type vRtrRibApiMplsAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrRibApiMplsAdminState_Type.__name__ = "TmnxAdminState"
_VRtrRibApiMplsAdminState_Object = MibTableColumn
vRtrRibApiMplsAdminState = _VRtrRibApiMplsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 139, 1, 2),
    _VRtrRibApiMplsAdminState_Type()
)
vRtrRibApiMplsAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrRibApiMplsAdminState.setStatus("current")


class _VRtrRibApiMplsReservedLblBlk_Type(TLNamedItemOrEmpty):
    """Custom type vRtrRibApiMplsReservedLblBlk based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrRibApiMplsReservedLblBlk_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrRibApiMplsReservedLblBlk_Object = MibTableColumn
vRtrRibApiMplsReservedLblBlk = _VRtrRibApiMplsReservedLblBlk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 139, 1, 3),
    _VRtrRibApiMplsReservedLblBlk_Type()
)
vRtrRibApiMplsReservedLblBlk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrRibApiMplsReservedLblBlk.setStatus("current")
_TmnxVRtrNeInfoTable_Object = MibTable
tmnxVRtrNeInfoTable = _TmnxVRtrNeInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140)
)
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoTable.setStatus("current")
_TmnxVRtrNeInfoEntry_Object = MibTableRow
tmnxVRtrNeInfoEntry = _TmnxVRtrNeInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1)
)
tmnxVRtrNeInfoEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeid"),
)
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoEntry.setStatus("current")
_TmnxVRtrNeInfoNeid_Type = TmnxVrtrNeid
_TmnxVRtrNeInfoNeid_Object = MibTableColumn
tmnxVRtrNeInfoNeid = _TmnxVRtrNeInfoNeid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 1),
    _TmnxVRtrNeInfoNeid_Type()
)
tmnxVRtrNeInfoNeid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeid.setStatus("current")
_TmnxVRtrNeInfoNeidHex_Type = TmnxVrtrNeid
_TmnxVRtrNeInfoNeidHex_Object = MibTableColumn
tmnxVRtrNeInfoNeidHex = _TmnxVRtrNeInfoNeidHex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 2),
    _TmnxVRtrNeInfoNeidHex_Type()
)
tmnxVRtrNeInfoNeidHex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeidHex.setStatus("current")
_TmnxVRtrNeInfoNeipV4Type_Type = InetAddressType
_TmnxVRtrNeInfoNeipV4Type_Object = MibTableColumn
tmnxVRtrNeInfoNeipV4Type = _TmnxVRtrNeInfoNeipV4Type_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 3),
    _TmnxVRtrNeInfoNeipV4Type_Type()
)
tmnxVRtrNeInfoNeipV4Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV4Type.setStatus("current")


class _TmnxVRtrNeInfoNeipV4_Type(InetAddress):
    """Custom type tmnxVRtrNeInfoNeipV4 based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_TmnxVRtrNeInfoNeipV4_Type.__name__ = "InetAddress"
_TmnxVRtrNeInfoNeipV4_Object = MibTableColumn
tmnxVRtrNeInfoNeipV4 = _TmnxVRtrNeInfoNeipV4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 4),
    _TmnxVRtrNeInfoNeipV4_Type()
)
tmnxVRtrNeInfoNeipV4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV4.setStatus("current")
_TmnxVRtrNeInfoNeipV4PrefixLen_Type = InetAddressPrefixLength
_TmnxVRtrNeInfoNeipV4PrefixLen_Object = MibTableColumn
tmnxVRtrNeInfoNeipV4PrefixLen = _TmnxVRtrNeInfoNeipV4PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 5),
    _TmnxVRtrNeInfoNeipV4PrefixLen_Type()
)
tmnxVRtrNeInfoNeipV4PrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV4PrefixLen.setStatus("current")
_TmnxVRtrNeInfoNeipV6Type_Type = InetAddressType
_TmnxVRtrNeInfoNeipV6Type_Object = MibTableColumn
tmnxVRtrNeInfoNeipV6Type = _TmnxVRtrNeInfoNeipV6Type_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 6),
    _TmnxVRtrNeInfoNeipV6Type_Type()
)
tmnxVRtrNeInfoNeipV6Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV6Type.setStatus("current")


class _TmnxVRtrNeInfoNeipV6_Type(InetAddress):
    """Custom type tmnxVRtrNeInfoNeipV6 based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_TmnxVRtrNeInfoNeipV6_Type.__name__ = "InetAddress"
_TmnxVRtrNeInfoNeipV6_Object = MibTableColumn
tmnxVRtrNeInfoNeipV6 = _TmnxVRtrNeInfoNeipV6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 7),
    _TmnxVRtrNeInfoNeipV6_Type()
)
tmnxVRtrNeInfoNeipV6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV6.setStatus("current")
_TmnxVRtrNeInfoNeipV6PrefixLen_Type = InetAddressPrefixLength
_TmnxVRtrNeInfoNeipV6PrefixLen_Object = MibTableColumn
tmnxVRtrNeInfoNeipV6PrefixLen = _TmnxVRtrNeInfoNeipV6PrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 8),
    _TmnxVRtrNeInfoNeipV6PrefixLen_Type()
)
tmnxVRtrNeInfoNeipV6PrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoNeipV6PrefixLen.setStatus("current")
_TmnxVRtrNeInfoSystemMac_Type = MacAddress
_TmnxVRtrNeInfoSystemMac_Object = MibTableColumn
tmnxVRtrNeInfoSystemMac = _TmnxVRtrNeInfoSystemMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 9),
    _TmnxVRtrNeInfoSystemMac_Type()
)
tmnxVRtrNeInfoSystemMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoSystemMac.setStatus("current")
_TmnxVRtrNeInfoPlatformType_Type = DisplayString
_TmnxVRtrNeInfoPlatformType_Object = MibTableColumn
tmnxVRtrNeInfoPlatformType = _TmnxVRtrNeInfoPlatformType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 10),
    _TmnxVRtrNeInfoPlatformType_Type()
)
tmnxVRtrNeInfoPlatformType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoPlatformType.setStatus("current")
_TmnxVRtrNeInfoVendorId_Type = DisplayString
_TmnxVRtrNeInfoVendorId_Object = MibTableColumn
tmnxVRtrNeInfoVendorId = _TmnxVRtrNeInfoVendorId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 140, 1, 11),
    _TmnxVRtrNeInfoVendorId_Type()
)
tmnxVRtrNeInfoVendorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoVendorId.setStatus("current")
_VRtrIfDHCPOSelSrvrTable_Object = MibTable
vRtrIfDHCPOSelSrvrTable = _VRtrIfDHCPOSelSrvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141)
)
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrTable.setStatus("current")
_VRtrIfDHCPOSelSrvrEntry_Object = MibTableRow
vRtrIfDHCPOSelSrvrEntry = _VRtrIfDHCPOSelSrvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141, 1)
)
vRtrIfDHCPOSelSrvrEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelSrvrAddressType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelSrvrAddress"),
)
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrEntry.setStatus("current")
_VRtrIfDHCPOSelSrvrAddressType_Type = InetAddressType
_VRtrIfDHCPOSelSrvrAddressType_Object = MibTableColumn
vRtrIfDHCPOSelSrvrAddressType = _VRtrIfDHCPOSelSrvrAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141, 1, 1),
    _VRtrIfDHCPOSelSrvrAddressType_Type()
)
vRtrIfDHCPOSelSrvrAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrAddressType.setStatus("current")


class _VRtrIfDHCPOSelSrvrAddress_Type(InetAddress):
    """Custom type vRtrIfDHCPOSelSrvrAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfDHCPOSelSrvrAddress_Type.__name__ = "InetAddress"
_VRtrIfDHCPOSelSrvrAddress_Object = MibTableColumn
vRtrIfDHCPOSelSrvrAddress = _VRtrIfDHCPOSelSrvrAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141, 1, 2),
    _VRtrIfDHCPOSelSrvrAddress_Type()
)
vRtrIfDHCPOSelSrvrAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrAddress.setStatus("current")
_VRtrIfDHCPOSelSrvrRowStatus_Type = RowStatus
_VRtrIfDHCPOSelSrvrRowStatus_Object = MibTableColumn
vRtrIfDHCPOSelSrvrRowStatus = _VRtrIfDHCPOSelSrvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141, 1, 3),
    _VRtrIfDHCPOSelSrvrRowStatus_Type()
)
vRtrIfDHCPOSelSrvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrRowStatus.setStatus("current")


class _VRtrIfDHCPOSelSrvrDiscoDly_Type(Integer32):
    """Custom type vRtrIfDHCPOSelSrvrDiscoDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCPOSelSrvrDiscoDly_Type.__name__ = "Integer32"
_VRtrIfDHCPOSelSrvrDiscoDly_Object = MibTableColumn
vRtrIfDHCPOSelSrvrDiscoDly = _VRtrIfDHCPOSelSrvrDiscoDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 141, 1, 4),
    _VRtrIfDHCPOSelSrvrDiscoDly_Type()
)
vRtrIfDHCPOSelSrvrDiscoDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrDiscoDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCPOSelSrvrDiscoDly.setUnits("deci-seconds")
_VRtrIfDHCP6ASelSrvrTable_Object = MibTable
vRtrIfDHCP6ASelSrvrTable = _VRtrIfDHCP6ASelSrvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142)
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrTable.setStatus("current")
_VRtrIfDHCP6ASelSrvrEntry_Object = MibTableRow
vRtrIfDHCP6ASelSrvrEntry = _VRtrIfDHCP6ASelSrvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1)
)
vRtrIfDHCP6ASelSrvrEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSrvrAddressType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSrvrAddress"),
)
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrEntry.setStatus("current")
_VRtrIfDHCP6ASelSrvrAddressType_Type = InetAddressType
_VRtrIfDHCP6ASelSrvrAddressType_Object = MibTableColumn
vRtrIfDHCP6ASelSrvrAddressType = _VRtrIfDHCP6ASelSrvrAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1, 1),
    _VRtrIfDHCP6ASelSrvrAddressType_Type()
)
vRtrIfDHCP6ASelSrvrAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrAddressType.setStatus("current")


class _VRtrIfDHCP6ASelSrvrAddress_Type(InetAddress):
    """Custom type vRtrIfDHCP6ASelSrvrAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDHCP6ASelSrvrAddress_Type.__name__ = "InetAddress"
_VRtrIfDHCP6ASelSrvrAddress_Object = MibTableColumn
vRtrIfDHCP6ASelSrvrAddress = _VRtrIfDHCP6ASelSrvrAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1, 2),
    _VRtrIfDHCP6ASelSrvrAddress_Type()
)
vRtrIfDHCP6ASelSrvrAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrAddress.setStatus("current")
_VRtrIfDHCP6ASelSrvrRowStatus_Type = RowStatus
_VRtrIfDHCP6ASelSrvrRowStatus_Object = MibTableColumn
vRtrIfDHCP6ASelSrvrRowStatus = _VRtrIfDHCP6ASelSrvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1, 3),
    _VRtrIfDHCP6ASelSrvrRowStatus_Type()
)
vRtrIfDHCP6ASelSrvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrRowStatus.setStatus("current")


class _VRtrIfDHCP6ASelSrvrSolDly_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelSrvrSolDly based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_VRtrIfDHCP6ASelSrvrSolDly_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelSrvrSolDly_Object = MibTableColumn
vRtrIfDHCP6ASelSrvrSolDly = _VRtrIfDHCP6ASelSrvrSolDly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1, 4),
    _VRtrIfDHCP6ASelSrvrSolDly_Type()
)
vRtrIfDHCP6ASelSrvrSolDly.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrSolDly.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrSolDly.setUnits("deci-seconds")


class _VRtrIfDHCP6ASelSrvrPref_Type(Integer32):
    """Custom type vRtrIfDHCP6ASelSrvrPref based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_VRtrIfDHCP6ASelSrvrPref_Type.__name__ = "Integer32"
_VRtrIfDHCP6ASelSrvrPref_Object = MibTableColumn
vRtrIfDHCP6ASelSrvrPref = _VRtrIfDHCP6ASelSrvrPref_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 142, 1, 5),
    _VRtrIfDHCP6ASelSrvrPref_Type()
)
vRtrIfDHCP6ASelSrvrPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDHCP6ASelSrvrPref.setStatus("current")
_VRtrLspBfdTableLastChanged_Type = TimeStamp
_VRtrLspBfdTableLastChanged_Object = MibScalar
vRtrLspBfdTableLastChanged = _VRtrLspBfdTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 143),
    _VRtrLspBfdTableLastChanged_Type()
)
vRtrLspBfdTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLspBfdTableLastChanged.setStatus("current")
_VRtrLspBfdTable_Object = MibTable
vRtrLspBfdTable = _VRtrLspBfdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144)
)
if mibBuilder.loadTexts:
    vRtrLspBfdTable.setStatus("current")
_VRtrLspBfdEntry_Object = MibTableRow
vRtrLspBfdEntry = _VRtrLspBfdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144, 1)
)
vRtrLspBfdEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
)
if mibBuilder.loadTexts:
    vRtrLspBfdEntry.setStatus("current")
_VRtrLspBfdLastChanged_Type = TimeStamp
_VRtrLspBfdLastChanged_Object = MibTableColumn
vRtrLspBfdLastChanged = _VRtrLspBfdLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144, 1, 1),
    _VRtrLspBfdLastChanged_Type()
)
vRtrLspBfdLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrLspBfdLastChanged.setStatus("current")


class _VRtrLspBfdTailEndTxInterval_Type(Unsigned32):
    """Custom type vRtrLspBfdTailEndTxInterval based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_VRtrLspBfdTailEndTxInterval_Type.__name__ = "Unsigned32"
_VRtrLspBfdTailEndTxInterval_Object = MibTableColumn
vRtrLspBfdTailEndTxInterval = _VRtrLspBfdTailEndTxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144, 1, 2),
    _VRtrLspBfdTailEndTxInterval_Type()
)
vRtrLspBfdTailEndTxInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLspBfdTailEndTxInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrLspBfdTailEndTxInterval.setUnits("milliseconds")


class _VRtrLspBfdTailEndRxInterval_Type(Unsigned32):
    """Custom type vRtrLspBfdTailEndRxInterval based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_VRtrLspBfdTailEndRxInterval_Type.__name__ = "Unsigned32"
_VRtrLspBfdTailEndRxInterval_Object = MibTableColumn
vRtrLspBfdTailEndRxInterval = _VRtrLspBfdTailEndRxInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144, 1, 3),
    _VRtrLspBfdTailEndRxInterval_Type()
)
vRtrLspBfdTailEndRxInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLspBfdTailEndRxInterval.setStatus("current")
if mibBuilder.loadTexts:
    vRtrLspBfdTailEndRxInterval.setUnits("milliseconds")


class _VRtrLspBfdTailEndMultiplier_Type(Unsigned32):
    """Custom type vRtrLspBfdTailEndMultiplier based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_VRtrLspBfdTailEndMultiplier_Type.__name__ = "Unsigned32"
_VRtrLspBfdTailEndMultiplier_Object = MibTableColumn
vRtrLspBfdTailEndMultiplier = _VRtrLspBfdTailEndMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 144, 1, 4),
    _VRtrLspBfdTailEndMultiplier_Type()
)
vRtrLspBfdTailEndMultiplier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLspBfdTailEndMultiplier.setStatus("current")
_TmnxVRtrDCObjs_ObjectIdentity = ObjectIdentity
tmnxVRtrDCObjs = _TmnxVRtrDCObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 200)
)
_TmnxVrtrSys_ObjectIdentity = ObjectIdentity
tmnxVrtrSys = _TmnxVrtrSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201)
)


class _TmnxVrtrSysEnforceUniqueIfIndex_Type(TruthValue):
    """Custom type tmnxVrtrSysEnforceUniqueIfIndex based on TruthValue"""
    defaultValue = 2


_TmnxVrtrSysEnforceUniqueIfIndex_Type.__name__ = "TruthValue"
_TmnxVrtrSysEnforceUniqueIfIndex_Object = MibScalar
tmnxVrtrSysEnforceUniqueIfIndex = _TmnxVrtrSysEnforceUniqueIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 1),
    _TmnxVrtrSysEnforceUniqueIfIndex_Type()
)
tmnxVrtrSysEnforceUniqueIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrSysEnforceUniqueIfIndex.setStatus("current")


class _TmnxVrtrSysAllowQinQNetworkIntf_Type(TruthValue):
    """Custom type tmnxVrtrSysAllowQinQNetworkIntf based on TruthValue"""
    defaultValue = 2


_TmnxVrtrSysAllowQinQNetworkIntf_Type.__name__ = "TruthValue"
_TmnxVrtrSysAllowQinQNetworkIntf_Object = MibScalar
tmnxVrtrSysAllowQinQNetworkIntf = _TmnxVrtrSysAllowQinQNetworkIntf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 2),
    _TmnxVrtrSysAllowQinQNetworkIntf_Type()
)
tmnxVrtrSysAllowQinQNetworkIntf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrSysAllowQinQNetworkIntf.setStatus("current")


class _TmnxVrtrSysMplsTunnelMode_Type(VrtrMplsTunnelMode):
    """Custom type tmnxVrtrSysMplsTunnelMode based on VrtrMplsTunnelMode"""
    defaultValue = 0


_TmnxVrtrSysMplsTunnelMode_Type.__name__ = "VrtrMplsTunnelMode"
_TmnxVrtrSysMplsTunnelMode_Object = MibScalar
tmnxVrtrSysMplsTunnelMode = _TmnxVrtrSysMplsTunnelMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 3),
    _TmnxVrtrSysMplsTunnelMode_Type()
)
tmnxVrtrSysMplsTunnelMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrSysMplsTunnelMode.setStatus("current")


class _TmnxVrtrSysMplsLblStackStatCount_Type(Unsigned32):
    """Custom type tmnxVrtrSysMplsLblStackStatCount based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_TmnxVrtrSysMplsLblStackStatCount_Type.__name__ = "Unsigned32"
_TmnxVrtrSysMplsLblStackStatCount_Object = MibScalar
tmnxVrtrSysMplsLblStackStatCount = _TmnxVrtrSysMplsLblStackStatCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 4),
    _TmnxVrtrSysMplsLblStackStatCount_Type()
)
tmnxVrtrSysMplsLblStackStatCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrSysMplsLblStackStatCount.setStatus("current")


class _TmnxVrtrFwdIPoverIPv6_Type(TruthValue):
    """Custom type tmnxVrtrFwdIPoverIPv6 based on TruthValue"""
    defaultValue = 2


_TmnxVrtrFwdIPoverIPv6_Type.__name__ = "TruthValue"
_TmnxVrtrFwdIPoverIPv6_Object = MibScalar
tmnxVrtrFwdIPoverIPv6 = _TmnxVrtrFwdIPoverIPv6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 5),
    _TmnxVrtrFwdIPoverIPv6_Type()
)
tmnxVrtrFwdIPoverIPv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrFwdIPoverIPv6.setStatus("current")


class _TmnxVrtrFwdIPoverGre_Type(TruthValue):
    """Custom type tmnxVrtrFwdIPoverGre based on TruthValue"""
    defaultValue = 2


_TmnxVrtrFwdIPoverGre_Type.__name__ = "TruthValue"
_TmnxVrtrFwdIPoverGre_Object = MibScalar
tmnxVrtrFwdIPoverGre = _TmnxVrtrFwdIPoverGre_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 6),
    _TmnxVrtrFwdIPoverGre_Type()
)
tmnxVrtrFwdIPoverGre.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrFwdIPoverGre.setStatus("current")


class _TmnxVrtrIPEHPerform_Type(Integer32):
    """Custom type tmnxVrtrIPEHPerform based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("max", 1),
          ("limited", 2))
    )


_TmnxVrtrIPEHPerform_Type.__name__ = "Integer32"
_TmnxVrtrIPEHPerform_Object = MibScalar
tmnxVrtrIPEHPerform = _TmnxVrtrIPEHPerform_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 7),
    _TmnxVrtrIPEHPerform_Type()
)
tmnxVrtrIPEHPerform.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxVrtrIPEHPerform.setStatus("current")


class _TmnxVrtrIPAllowCPUFragmentation_Type(TruthValue):
    """Custom type tmnxVrtrIPAllowCPUFragmentation based on TruthValue"""
    defaultValue = 2


_TmnxVrtrIPAllowCPUFragmentation_Type.__name__ = "TruthValue"
_TmnxVrtrIPAllowCPUFragmentation_Object = MibScalar
tmnxVrtrIPAllowCPUFragmentation = _TmnxVrtrIPAllowCPUFragmentation_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 8),
    _TmnxVrtrIPAllowCPUFragmentation_Type()
)
tmnxVrtrIPAllowCPUFragmentation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrIPAllowCPUFragmentation.setStatus("current")


class _TmnxVrtrIPAllowICMPRedirect_Type(TruthValue):
    """Custom type tmnxVrtrIPAllowICMPRedirect based on TruthValue"""
    defaultValue = 2


_TmnxVrtrIPAllowICMPRedirect_Type.__name__ = "TruthValue"
_TmnxVrtrIPAllowICMPRedirect_Object = MibScalar
tmnxVrtrIPAllowICMPRedirect = _TmnxVrtrIPAllowICMPRedirect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 201, 9),
    _TmnxVrtrIPAllowICMPRedirect_Type()
)
tmnxVrtrIPAllowICMPRedirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxVrtrIPAllowICMPRedirect.setStatus("current")
_TmnxVrtrAutoconfiguration_ObjectIdentity = ObjectIdentity
tmnxVrtrAutoconfiguration = _TmnxVrtrAutoconfiguration_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202)
)
_TmnxVrtrDhcpClient_ObjectIdentity = ObjectIdentity
tmnxVrtrDhcpClient = _TmnxVrtrDhcpClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1)
)
_VRtrIfDhcpClTable_Object = MibTable
vRtrIfDhcpClTable = _VRtrIfDhcpClTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1)
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClTable.setStatus("current")
_VRtrIfDhcpClEntry_Object = MibTableRow
vRtrIfDhcpClEntry = _VRtrIfDhcpClEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1)
)
vRtrIfDhcpClEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClEntry.setStatus("current")
_VRtrIfDhcpClLastChanged_Type = TimeStamp
_VRtrIfDhcpClLastChanged_Object = MibTableColumn
vRtrIfDhcpClLastChanged = _VRtrIfDhcpClLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 1),
    _VRtrIfDhcpClLastChanged_Type()
)
vRtrIfDhcpClLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClLastChanged.setStatus("current")
_VRtrIfDhcpClRowStatus_Type = RowStatus
_VRtrIfDhcpClRowStatus_Object = MibTableColumn
vRtrIfDhcpClRowStatus = _VRtrIfDhcpClRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 2),
    _VRtrIfDhcpClRowStatus_Type()
)
vRtrIfDhcpClRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRowStatus.setStatus("current")


class _VRtrIfDhcpClAdminState_Type(TmnxAdminState):
    """Custom type vRtrIfDhcpClAdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfDhcpClAdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfDhcpClAdminState_Object = MibTableColumn
vRtrIfDhcpClAdminState = _VRtrIfDhcpClAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 3),
    _VRtrIfDhcpClAdminState_Type()
)
vRtrIfDhcpClAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClAdminState.setStatus("current")


class _VRtrIfDhcpClVendorClassIdFmt_Type(TmnxDataFormat):
    """Custom type vRtrIfDhcpClVendorClassIdFmt based on TmnxDataFormat"""
    defaultValue = 2


_VRtrIfDhcpClVendorClassIdFmt_Type.__name__ = "TmnxDataFormat"
_VRtrIfDhcpClVendorClassIdFmt_Object = MibTableColumn
vRtrIfDhcpClVendorClassIdFmt = _VRtrIfDhcpClVendorClassIdFmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 4),
    _VRtrIfDhcpClVendorClassIdFmt_Type()
)
vRtrIfDhcpClVendorClassIdFmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClVendorClassIdFmt.setStatus("current")


class _VRtrIfDhcpClVendorClassId_Type(OctetString):
    """Custom type vRtrIfDhcpClVendorClassId based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_VRtrIfDhcpClVendorClassId_Type.__name__ = "OctetString"
_VRtrIfDhcpClVendorClassId_Object = MibTableColumn
vRtrIfDhcpClVendorClassId = _VRtrIfDhcpClVendorClassId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 5),
    _VRtrIfDhcpClVendorClassId_Type()
)
vRtrIfDhcpClVendorClassId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClVendorClassId.setStatus("current")


class _VRtrIfDhcpClClientIdOrigin_Type(Integer32):
    """Custom type vRtrIfDhcpClClientIdOrigin based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("useMac", 0),
          ("interface", 1),
          ("configured", 2))
    )


_VRtrIfDhcpClClientIdOrigin_Type.__name__ = "Integer32"
_VRtrIfDhcpClClientIdOrigin_Object = MibTableColumn
vRtrIfDhcpClClientIdOrigin = _VRtrIfDhcpClClientIdOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 6),
    _VRtrIfDhcpClClientIdOrigin_Type()
)
vRtrIfDhcpClClientIdOrigin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClClientIdOrigin.setStatus("current")


class _VRtrIfDhcpClClientIdFmt_Type(TmnxDataFormat):
    """Custom type vRtrIfDhcpClClientIdFmt based on TmnxDataFormat"""
    defaultValue = 2


_VRtrIfDhcpClClientIdFmt_Type.__name__ = "TmnxDataFormat"
_VRtrIfDhcpClClientIdFmt_Object = MibTableColumn
vRtrIfDhcpClClientIdFmt = _VRtrIfDhcpClClientIdFmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 7),
    _VRtrIfDhcpClClientIdFmt_Type()
)
vRtrIfDhcpClClientIdFmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClClientIdFmt.setStatus("current")


class _VRtrIfDhcpClClientId_Type(OctetString):
    """Custom type vRtrIfDhcpClClientId based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_VRtrIfDhcpClClientId_Type.__name__ = "OctetString"
_VRtrIfDhcpClClientId_Object = MibTableColumn
vRtrIfDhcpClClientId = _VRtrIfDhcpClClientId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 8),
    _VRtrIfDhcpClClientId_Type()
)
vRtrIfDhcpClClientId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClClientId.setStatus("current")


class _VRtrIfDhcpClLeaseTime_Type(Unsigned32):
    """Custom type vRtrIfDhcpClLeaseTime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 315446399),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_VRtrIfDhcpClLeaseTime_Type.__name__ = "Unsigned32"
_VRtrIfDhcpClLeaseTime_Object = MibTableColumn
vRtrIfDhcpClLeaseTime = _VRtrIfDhcpClLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 9),
    _VRtrIfDhcpClLeaseTime_Type()
)
vRtrIfDhcpClLeaseTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfDhcpClLeaseTime.setUnits("seconds")


class _VRtrIfDhcpClRequestOptions_Type(Bits):
    """Custom type vRtrIfDhcpClRequestOptions based on Bits"""
    defaultBinValue = "0"

    namedValues = NamedValues(
        *(("router", 0),
          ("staticRoute", 1),
          ("dnsServer", 2))
    )

_VRtrIfDhcpClRequestOptions_Type.__name__ = "Bits"
_VRtrIfDhcpClRequestOptions_Object = MibTableColumn
vRtrIfDhcpClRequestOptions = _VRtrIfDhcpClRequestOptions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 1, 1, 10),
    _VRtrIfDhcpClRequestOptions_Type()
)
vRtrIfDhcpClRequestOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRequestOptions.setStatus("current")
_VRtrIfDhcpClStatsTable_Object = MibTable
vRtrIfDhcpClStatsTable = _VRtrIfDhcpClStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2)
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsTable.setStatus("current")
_VRtrIfDhcpClStatsEntry_Object = MibTableRow
vRtrIfDhcpClStatsEntry = _VRtrIfDhcpClStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1)
)
vRtrIfDhcpClStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsEntry.setStatus("current")
_VRtrIfDhcpClStatsClearedTime_Type = TimeStamp
_VRtrIfDhcpClStatsClearedTime_Object = MibTableColumn
vRtrIfDhcpClStatsClearedTime = _VRtrIfDhcpClStatsClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 1),
    _VRtrIfDhcpClStatsClearedTime_Type()
)
vRtrIfDhcpClStatsClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsClearedTime.setStatus("current")
_VRtrIfDhcpClStatsTxDiscovers_Type = Counter64
_VRtrIfDhcpClStatsTxDiscovers_Object = MibTableColumn
vRtrIfDhcpClStatsTxDiscovers = _VRtrIfDhcpClStatsTxDiscovers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 2),
    _VRtrIfDhcpClStatsTxDiscovers_Type()
)
vRtrIfDhcpClStatsTxDiscovers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsTxDiscovers.setStatus("current")
_VRtrIfDhcpClStatsTxRequests_Type = Counter64
_VRtrIfDhcpClStatsTxRequests_Object = MibTableColumn
vRtrIfDhcpClStatsTxRequests = _VRtrIfDhcpClStatsTxRequests_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 3),
    _VRtrIfDhcpClStatsTxRequests_Type()
)
vRtrIfDhcpClStatsTxRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsTxRequests.setStatus("current")
_VRtrIfDhcpClStatsTxReleases_Type = Counter64
_VRtrIfDhcpClStatsTxReleases_Object = MibTableColumn
vRtrIfDhcpClStatsTxReleases = _VRtrIfDhcpClStatsTxReleases_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 4),
    _VRtrIfDhcpClStatsTxReleases_Type()
)
vRtrIfDhcpClStatsTxReleases.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsTxReleases.setStatus("current")
_VRtrIfDhcpClStatsTxDeclines_Type = Counter64
_VRtrIfDhcpClStatsTxDeclines_Object = MibTableColumn
vRtrIfDhcpClStatsTxDeclines = _VRtrIfDhcpClStatsTxDeclines_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 5),
    _VRtrIfDhcpClStatsTxDeclines_Type()
)
vRtrIfDhcpClStatsTxDeclines.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsTxDeclines.setStatus("current")
_VRtrIfDhcpClStatsRxOffers_Type = Counter64
_VRtrIfDhcpClStatsRxOffers_Object = MibTableColumn
vRtrIfDhcpClStatsRxOffers = _VRtrIfDhcpClStatsRxOffers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 6),
    _VRtrIfDhcpClStatsRxOffers_Type()
)
vRtrIfDhcpClStatsRxOffers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsRxOffers.setStatus("current")
_VRtrIfDhcpClStatsRxAcks_Type = Counter64
_VRtrIfDhcpClStatsRxAcks_Object = MibTableColumn
vRtrIfDhcpClStatsRxAcks = _VRtrIfDhcpClStatsRxAcks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 7),
    _VRtrIfDhcpClStatsRxAcks_Type()
)
vRtrIfDhcpClStatsRxAcks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsRxAcks.setStatus("current")
_VRtrIfDhcpClStatsRxNaks_Type = Counter64
_VRtrIfDhcpClStatsRxNaks_Object = MibTableColumn
vRtrIfDhcpClStatsRxNaks = _VRtrIfDhcpClStatsRxNaks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 8),
    _VRtrIfDhcpClStatsRxNaks_Type()
)
vRtrIfDhcpClStatsRxNaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsRxNaks.setStatus("current")
_VRtrIfDhcpClStatsRxDrops_Type = Counter64
_VRtrIfDhcpClStatsRxDrops_Object = MibTableColumn
vRtrIfDhcpClStatsRxDrops = _VRtrIfDhcpClStatsRxDrops_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 2, 1, 9),
    _VRtrIfDhcpClStatsRxDrops_Type()
)
vRtrIfDhcpClStatsRxDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStatsRxDrops.setStatus("current")
_VRtrIfDhcpClStateTable_Object = MibTable
vRtrIfDhcpClStateTable = _VRtrIfDhcpClStateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3)
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateTable.setStatus("current")
_VRtrIfDhcpClStateEntry_Object = MibTableRow
vRtrIfDhcpClStateEntry = _VRtrIfDhcpClStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1)
)
vRtrIfDhcpClStateEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateEntry.setStatus("current")
_VRtrIfDhcpClStateCiAddrType_Type = InetAddressType
_VRtrIfDhcpClStateCiAddrType_Object = MibTableColumn
vRtrIfDhcpClStateCiAddrType = _VRtrIfDhcpClStateCiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 1),
    _VRtrIfDhcpClStateCiAddrType_Type()
)
vRtrIfDhcpClStateCiAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateCiAddrType.setStatus("current")


class _VRtrIfDhcpClStateCiAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateCiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateCiAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateCiAddr_Object = MibTableColumn
vRtrIfDhcpClStateCiAddr = _VRtrIfDhcpClStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 2),
    _VRtrIfDhcpClStateCiAddr_Type()
)
vRtrIfDhcpClStateCiAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateCiAddr.setStatus("current")


class _VRtrIfDhcpClStateCiAddrMaskLen_Type(Unsigned32):
    """Custom type vRtrIfDhcpClStateCiAddrMaskLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_VRtrIfDhcpClStateCiAddrMaskLen_Type.__name__ = "Unsigned32"
_VRtrIfDhcpClStateCiAddrMaskLen_Object = MibTableColumn
vRtrIfDhcpClStateCiAddrMaskLen = _VRtrIfDhcpClStateCiAddrMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 3),
    _VRtrIfDhcpClStateCiAddrMaskLen_Type()
)
vRtrIfDhcpClStateCiAddrMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateCiAddrMaskLen.setStatus("current")
_VRtrIfDhcpClStateChAddr_Type = MacAddress
_VRtrIfDhcpClStateChAddr_Object = MibTableColumn
vRtrIfDhcpClStateChAddr = _VRtrIfDhcpClStateChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 4),
    _VRtrIfDhcpClStateChAddr_Type()
)
vRtrIfDhcpClStateChAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateChAddr.setStatus("current")
_VRtrIfDhcpClStateSiAddrType_Type = InetAddressType
_VRtrIfDhcpClStateSiAddrType_Object = MibTableColumn
vRtrIfDhcpClStateSiAddrType = _VRtrIfDhcpClStateSiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 5),
    _VRtrIfDhcpClStateSiAddrType_Type()
)
vRtrIfDhcpClStateSiAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateSiAddrType.setStatus("current")


class _VRtrIfDhcpClStateSiAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateSiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateSiAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateSiAddr_Object = MibTableColumn
vRtrIfDhcpClStateSiAddr = _VRtrIfDhcpClStateSiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 6),
    _VRtrIfDhcpClStateSiAddr_Type()
)
vRtrIfDhcpClStateSiAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateSiAddr.setStatus("current")
_VRtrIfDhcpClStateRtAddrType_Type = InetAddressType
_VRtrIfDhcpClStateRtAddrType_Object = MibTableColumn
vRtrIfDhcpClStateRtAddrType = _VRtrIfDhcpClStateRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 7),
    _VRtrIfDhcpClStateRtAddrType_Type()
)
vRtrIfDhcpClStateRtAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateRtAddrType.setStatus("current")


class _VRtrIfDhcpClStateRtAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateRtAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateRtAddr_Object = MibTableColumn
vRtrIfDhcpClStateRtAddr = _VRtrIfDhcpClStateRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 8),
    _VRtrIfDhcpClStateRtAddr_Type()
)
vRtrIfDhcpClStateRtAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateRtAddr.setStatus("current")
_VRtrIfDhcpClStateDnsPriAddrType_Type = InetAddressType
_VRtrIfDhcpClStateDnsPriAddrType_Object = MibTableColumn
vRtrIfDhcpClStateDnsPriAddrType = _VRtrIfDhcpClStateDnsPriAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 9),
    _VRtrIfDhcpClStateDnsPriAddrType_Type()
)
vRtrIfDhcpClStateDnsPriAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsPriAddrType.setStatus("current")


class _VRtrIfDhcpClStateDnsPriAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateDnsPriAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateDnsPriAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateDnsPriAddr_Object = MibTableColumn
vRtrIfDhcpClStateDnsPriAddr = _VRtrIfDhcpClStateDnsPriAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 10),
    _VRtrIfDhcpClStateDnsPriAddr_Type()
)
vRtrIfDhcpClStateDnsPriAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsPriAddr.setStatus("current")
_VRtrIfDhcpClStateDnsSecAddrType_Type = InetAddressType
_VRtrIfDhcpClStateDnsSecAddrType_Object = MibTableColumn
vRtrIfDhcpClStateDnsSecAddrType = _VRtrIfDhcpClStateDnsSecAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 11),
    _VRtrIfDhcpClStateDnsSecAddrType_Type()
)
vRtrIfDhcpClStateDnsSecAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsSecAddrType.setStatus("current")


class _VRtrIfDhcpClStateDnsSecAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateDnsSecAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateDnsSecAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateDnsSecAddr_Object = MibTableColumn
vRtrIfDhcpClStateDnsSecAddr = _VRtrIfDhcpClStateDnsSecAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 12),
    _VRtrIfDhcpClStateDnsSecAddr_Type()
)
vRtrIfDhcpClStateDnsSecAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsSecAddr.setStatus("current")
_VRtrIfDhcpClStateDnsTerAddrType_Type = InetAddressType
_VRtrIfDhcpClStateDnsTerAddrType_Object = MibTableColumn
vRtrIfDhcpClStateDnsTerAddrType = _VRtrIfDhcpClStateDnsTerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 13),
    _VRtrIfDhcpClStateDnsTerAddrType_Type()
)
vRtrIfDhcpClStateDnsTerAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsTerAddrType.setStatus("current")


class _VRtrIfDhcpClStateDnsTerAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClStateDnsTerAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcpClStateDnsTerAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClStateDnsTerAddr_Object = MibTableColumn
vRtrIfDhcpClStateDnsTerAddr = _VRtrIfDhcpClStateDnsTerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 14),
    _VRtrIfDhcpClStateDnsTerAddr_Type()
)
vRtrIfDhcpClStateDnsTerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsTerAddr.setStatus("current")
_VRtrIfDhcpClStateLeaseAcquired_Type = DateAndTimeOrEmpty
_VRtrIfDhcpClStateLeaseAcquired_Object = MibTableColumn
vRtrIfDhcpClStateLeaseAcquired = _VRtrIfDhcpClStateLeaseAcquired_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 15),
    _VRtrIfDhcpClStateLeaseAcquired_Type()
)
vRtrIfDhcpClStateLeaseAcquired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateLeaseAcquired.setStatus("current")
_VRtrIfDhcpClStateLeaseRenew_Type = DateAndTimeOrEmpty
_VRtrIfDhcpClStateLeaseRenew_Object = MibTableColumn
vRtrIfDhcpClStateLeaseRenew = _VRtrIfDhcpClStateLeaseRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 16),
    _VRtrIfDhcpClStateLeaseRenew_Type()
)
vRtrIfDhcpClStateLeaseRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateLeaseRenew.setStatus("current")
_VRtrIfDhcpClStateLeaseRebind_Type = DateAndTimeOrEmpty
_VRtrIfDhcpClStateLeaseRebind_Object = MibTableColumn
vRtrIfDhcpClStateLeaseRebind = _VRtrIfDhcpClStateLeaseRebind_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 17),
    _VRtrIfDhcpClStateLeaseRebind_Type()
)
vRtrIfDhcpClStateLeaseRebind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateLeaseRebind.setStatus("current")
_VRtrIfDhcpClStateLeaseEnd_Type = DateAndTimeOrEmpty
_VRtrIfDhcpClStateLeaseEnd_Object = MibTableColumn
vRtrIfDhcpClStateLeaseEnd = _VRtrIfDhcpClStateLeaseEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 18),
    _VRtrIfDhcpClStateLeaseEnd_Type()
)
vRtrIfDhcpClStateLeaseEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateLeaseEnd.setStatus("current")
_VRtrIfDhcpClDhcpState_Type = TmnxDhcpClientState
_VRtrIfDhcpClDhcpState_Object = MibTableColumn
vRtrIfDhcpClDhcpState = _VRtrIfDhcpClDhcpState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 19),
    _VRtrIfDhcpClDhcpState_Type()
)
vRtrIfDhcpClDhcpState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClDhcpState.setStatus("current")


class _VRtrIfDhcpClStateStatus_Type(Integer32):
    """Custom type vRtrIfDhcpClStateStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("initializing", 1),
          ("requesting", 2),
          ("lost", 3),
          ("established", 4),
          ("failed", 5))
    )


_VRtrIfDhcpClStateStatus_Type.__name__ = "Integer32"
_VRtrIfDhcpClStateStatus_Object = MibTableColumn
vRtrIfDhcpClStateStatus = _VRtrIfDhcpClStateStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 20),
    _VRtrIfDhcpClStateStatus_Type()
)
vRtrIfDhcpClStateStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateStatus.setStatus("current")


class _VRtrIfDhcpClStateDescription_Type(DisplayString):
    """Custom type vRtrIfDhcpClStateDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VRtrIfDhcpClStateDescription_Type.__name__ = "DisplayString"
_VRtrIfDhcpClStateDescription_Object = MibTableColumn
vRtrIfDhcpClStateDescription = _VRtrIfDhcpClStateDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 3, 1, 21),
    _VRtrIfDhcpClStateDescription_Type()
)
vRtrIfDhcpClStateDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDescription.setStatus("current")
_VRtrIfDhcpClRtTable_Object = MibTable
vRtrIfDhcpClRtTable = _VRtrIfDhcpClRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4)
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtTable.setStatus("current")
_VRtrIfDhcpClRtEntry_Object = MibTableRow
vRtrIfDhcpClRtEntry = _VRtrIfDhcpClRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1)
)
vRtrIfDhcpClRtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtPrefixLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtNhAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtNhAddr"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtEntry.setStatus("current")
_VRtrIfDhcpClRtAddrType_Type = InetAddressType
_VRtrIfDhcpClRtAddrType_Object = MibTableColumn
vRtrIfDhcpClRtAddrType = _VRtrIfDhcpClRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 1),
    _VRtrIfDhcpClRtAddrType_Type()
)
vRtrIfDhcpClRtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtAddrType.setStatus("current")


class _VRtrIfDhcpClRtAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfDhcpClRtAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClRtAddr_Object = MibTableColumn
vRtrIfDhcpClRtAddr = _VRtrIfDhcpClRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 2),
    _VRtrIfDhcpClRtAddr_Type()
)
vRtrIfDhcpClRtAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtAddr.setStatus("current")
_VRtrIfDhcpClRtPrefixLen_Type = InetAddressPrefixLength
_VRtrIfDhcpClRtPrefixLen_Object = MibTableColumn
vRtrIfDhcpClRtPrefixLen = _VRtrIfDhcpClRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 3),
    _VRtrIfDhcpClRtPrefixLen_Type()
)
vRtrIfDhcpClRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtPrefixLen.setStatus("current")
_VRtrIfDhcpClRtNhAddrType_Type = InetAddressType
_VRtrIfDhcpClRtNhAddrType_Object = MibTableColumn
vRtrIfDhcpClRtNhAddrType = _VRtrIfDhcpClRtNhAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 4),
    _VRtrIfDhcpClRtNhAddrType_Type()
)
vRtrIfDhcpClRtNhAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtNhAddrType.setStatus("current")


class _VRtrIfDhcpClRtNhAddr_Type(InetAddress):
    """Custom type vRtrIfDhcpClRtNhAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfDhcpClRtNhAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcpClRtNhAddr_Object = MibTableColumn
vRtrIfDhcpClRtNhAddr = _VRtrIfDhcpClRtNhAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 5),
    _VRtrIfDhcpClRtNhAddr_Type()
)
vRtrIfDhcpClRtNhAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtNhAddr.setStatus("current")


class _VRtrIfDhcpClRtStatus_Type(Integer32):
    """Custom type vRtrIfDhcpClRtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("installed", 1),
          ("invalid", 2),
          ("noRouteToNexthop", 3),
          ("errorInternal", 4),
          ("errorOutOfMemory", 5),
          ("errorInstallCheck", 6),
          ("errorInstallInternal", 7),
          ("errorUninstallCheck", 8),
          ("errorUninstallInternal", 9),
          ("lowerServerId", 10))
    )


_VRtrIfDhcpClRtStatus_Type.__name__ = "Integer32"
_VRtrIfDhcpClRtStatus_Object = MibTableColumn
vRtrIfDhcpClRtStatus = _VRtrIfDhcpClRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 4, 1, 6),
    _VRtrIfDhcpClRtStatus_Type()
)
vRtrIfDhcpClRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtStatus.setStatus("current")
_VRtrIfDhcp6ClStatsTable_Object = MibTable
vRtrIfDhcp6ClStatsTable = _VRtrIfDhcp6ClStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10)
)
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTable.setStatus("current")
_VRtrIfDhcp6ClStatsEntry_Object = MibTableRow
vRtrIfDhcp6ClStatsEntry = _VRtrIfDhcp6ClStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1)
)
vRtrIfDhcp6ClStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsEntry.setStatus("current")
_VRtrIfDhcp6ClStatsClearedTime_Type = TimeStamp
_VRtrIfDhcp6ClStatsClearedTime_Object = MibTableColumn
vRtrIfDhcp6ClStatsClearedTime = _VRtrIfDhcp6ClStatsClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 1),
    _VRtrIfDhcp6ClStatsClearedTime_Type()
)
vRtrIfDhcp6ClStatsClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsClearedTime.setStatus("current")
_VRtrIfDhcp6ClStatsTxSolicits_Type = Counter64
_VRtrIfDhcp6ClStatsTxSolicits_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxSolicits = _VRtrIfDhcp6ClStatsTxSolicits_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 2),
    _VRtrIfDhcp6ClStatsTxSolicits_Type()
)
vRtrIfDhcp6ClStatsTxSolicits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxSolicits.setStatus("current")
_VRtrIfDhcp6ClStatsRxAdvertises_Type = Counter64
_VRtrIfDhcp6ClStatsRxAdvertises_Object = MibTableColumn
vRtrIfDhcp6ClStatsRxAdvertises = _VRtrIfDhcp6ClStatsRxAdvertises_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 3),
    _VRtrIfDhcp6ClStatsRxAdvertises_Type()
)
vRtrIfDhcp6ClStatsRxAdvertises.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsRxAdvertises.setStatus("current")
_VRtrIfDhcp6ClStatsTxRequests_Type = Counter64
_VRtrIfDhcp6ClStatsTxRequests_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxRequests = _VRtrIfDhcp6ClStatsTxRequests_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 4),
    _VRtrIfDhcp6ClStatsTxRequests_Type()
)
vRtrIfDhcp6ClStatsTxRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxRequests.setStatus("current")
_VRtrIfDhcp6ClStatsTxConfirms_Type = Counter64
_VRtrIfDhcp6ClStatsTxConfirms_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxConfirms = _VRtrIfDhcp6ClStatsTxConfirms_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 5),
    _VRtrIfDhcp6ClStatsTxConfirms_Type()
)
vRtrIfDhcp6ClStatsTxConfirms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxConfirms.setStatus("current")
_VRtrIfDhcp6ClStatsTxRenews_Type = Counter64
_VRtrIfDhcp6ClStatsTxRenews_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxRenews = _VRtrIfDhcp6ClStatsTxRenews_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 6),
    _VRtrIfDhcp6ClStatsTxRenews_Type()
)
vRtrIfDhcp6ClStatsTxRenews.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxRenews.setStatus("current")
_VRtrIfDhcp6ClStatsTxRebinds_Type = Counter64
_VRtrIfDhcp6ClStatsTxRebinds_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxRebinds = _VRtrIfDhcp6ClStatsTxRebinds_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 7),
    _VRtrIfDhcp6ClStatsTxRebinds_Type()
)
vRtrIfDhcp6ClStatsTxRebinds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxRebinds.setStatus("current")
_VRtrIfDhcp6ClStatsRxReplies_Type = Counter64
_VRtrIfDhcp6ClStatsRxReplies_Object = MibTableColumn
vRtrIfDhcp6ClStatsRxReplies = _VRtrIfDhcp6ClStatsRxReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 8),
    _VRtrIfDhcp6ClStatsRxReplies_Type()
)
vRtrIfDhcp6ClStatsRxReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsRxReplies.setStatus("current")
_VRtrIfDhcp6ClStatsTxReleases_Type = Counter64
_VRtrIfDhcp6ClStatsTxReleases_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxReleases = _VRtrIfDhcp6ClStatsTxReleases_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 9),
    _VRtrIfDhcp6ClStatsTxReleases_Type()
)
vRtrIfDhcp6ClStatsTxReleases.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxReleases.setStatus("current")
_VRtrIfDhcp6ClStatsTxDeclines_Type = Counter64
_VRtrIfDhcp6ClStatsTxDeclines_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxDeclines = _VRtrIfDhcp6ClStatsTxDeclines_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 10),
    _VRtrIfDhcp6ClStatsTxDeclines_Type()
)
vRtrIfDhcp6ClStatsTxDeclines.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxDeclines.setStatus("current")
_VRtrIfDhcp6ClStatsRxReconfigures_Type = Counter64
_VRtrIfDhcp6ClStatsRxReconfigures_Object = MibTableColumn
vRtrIfDhcp6ClStatsRxReconfigures = _VRtrIfDhcp6ClStatsRxReconfigures_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 11),
    _VRtrIfDhcp6ClStatsRxReconfigures_Type()
)
vRtrIfDhcp6ClStatsRxReconfigures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsRxReconfigures.setStatus("current")
_VRtrIfDhcp6ClStatsTxInfRequests_Type = Counter64
_VRtrIfDhcp6ClStatsTxInfRequests_Object = MibTableColumn
vRtrIfDhcp6ClStatsTxInfRequests = _VRtrIfDhcp6ClStatsTxInfRequests_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 12),
    _VRtrIfDhcp6ClStatsTxInfRequests_Type()
)
vRtrIfDhcp6ClStatsTxInfRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsTxInfRequests.setStatus("current")
_VRtrIfDhcp6ClStatsRxDrops_Type = Counter64
_VRtrIfDhcp6ClStatsRxDrops_Object = MibTableColumn
vRtrIfDhcp6ClStatsRxDrops = _VRtrIfDhcp6ClStatsRxDrops_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 10, 1, 13),
    _VRtrIfDhcp6ClStatsRxDrops_Type()
)
vRtrIfDhcp6ClStatsRxDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStatsRxDrops.setStatus("current")
_VRtrIfDhcp6ClStateTable_Object = MibTable
vRtrIfDhcp6ClStateTable = _VRtrIfDhcp6ClStateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11)
)
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateTable.setStatus("current")
_VRtrIfDhcp6ClStateEntry_Object = MibTableRow
vRtrIfDhcp6ClStateEntry = _VRtrIfDhcp6ClStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1)
)
vRtrIfDhcp6ClStateEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateEntry.setStatus("current")
_VRtrIfDhcp6ClStateCiAddrType_Type = InetAddressType
_VRtrIfDhcp6ClStateCiAddrType_Object = MibTableColumn
vRtrIfDhcp6ClStateCiAddrType = _VRtrIfDhcp6ClStateCiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 1),
    _VRtrIfDhcp6ClStateCiAddrType_Type()
)
vRtrIfDhcp6ClStateCiAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateCiAddrType.setStatus("current")


class _VRtrIfDhcp6ClStateCiAddr_Type(InetAddress):
    """Custom type vRtrIfDhcp6ClStateCiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcp6ClStateCiAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcp6ClStateCiAddr_Object = MibTableColumn
vRtrIfDhcp6ClStateCiAddr = _VRtrIfDhcp6ClStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 2),
    _VRtrIfDhcp6ClStateCiAddr_Type()
)
vRtrIfDhcp6ClStateCiAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateCiAddr.setStatus("current")


class _VRtrIfDhcp6ClStateCiAddrMaskLen_Type(Unsigned32):
    """Custom type vRtrIfDhcp6ClStateCiAddrMaskLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_VRtrIfDhcp6ClStateCiAddrMaskLen_Type.__name__ = "Unsigned32"
_VRtrIfDhcp6ClStateCiAddrMaskLen_Object = MibTableColumn
vRtrIfDhcp6ClStateCiAddrMaskLen = _VRtrIfDhcp6ClStateCiAddrMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 3),
    _VRtrIfDhcp6ClStateCiAddrMaskLen_Type()
)
vRtrIfDhcp6ClStateCiAddrMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateCiAddrMaskLen.setStatus("current")


class _VRtrIfDhcp6ClStateClientDuid_Type(OctetString):
    """Custom type vRtrIfDhcp6ClStateClientDuid based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 129),
    )


_VRtrIfDhcp6ClStateClientDuid_Type.__name__ = "OctetString"
_VRtrIfDhcp6ClStateClientDuid_Object = MibTableColumn
vRtrIfDhcp6ClStateClientDuid = _VRtrIfDhcp6ClStateClientDuid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 4),
    _VRtrIfDhcp6ClStateClientDuid_Type()
)
vRtrIfDhcp6ClStateClientDuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateClientDuid.setStatus("current")
_VRtrIfDhcp6ClStateSiAddrType_Type = InetAddressType
_VRtrIfDhcp6ClStateSiAddrType_Object = MibTableColumn
vRtrIfDhcp6ClStateSiAddrType = _VRtrIfDhcp6ClStateSiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 5),
    _VRtrIfDhcp6ClStateSiAddrType_Type()
)
vRtrIfDhcp6ClStateSiAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateSiAddrType.setStatus("current")


class _VRtrIfDhcp6ClStateSiAddr_Type(InetAddress):
    """Custom type vRtrIfDhcp6ClStateSiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcp6ClStateSiAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcp6ClStateSiAddr_Object = MibTableColumn
vRtrIfDhcp6ClStateSiAddr = _VRtrIfDhcp6ClStateSiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 6),
    _VRtrIfDhcp6ClStateSiAddr_Type()
)
vRtrIfDhcp6ClStateSiAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateSiAddr.setStatus("current")


class _VRtrIfDhcp6ClStateServerDuid_Type(OctetString):
    """Custom type vRtrIfDhcp6ClStateServerDuid based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 129),
    )


_VRtrIfDhcp6ClStateServerDuid_Type.__name__ = "OctetString"
_VRtrIfDhcp6ClStateServerDuid_Object = MibTableColumn
vRtrIfDhcp6ClStateServerDuid = _VRtrIfDhcp6ClStateServerDuid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 7),
    _VRtrIfDhcp6ClStateServerDuid_Type()
)
vRtrIfDhcp6ClStateServerDuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateServerDuid.setStatus("current")
_VRtrIfDhcp6ClStateDnsPriAddrType_Type = InetAddressType
_VRtrIfDhcp6ClStateDnsPriAddrType_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsPriAddrType = _VRtrIfDhcp6ClStateDnsPriAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 8),
    _VRtrIfDhcp6ClStateDnsPriAddrType_Type()
)
vRtrIfDhcp6ClStateDnsPriAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsPriAddrType.setStatus("current")


class _VRtrIfDhcp6ClStateDnsPriAddr_Type(InetAddress):
    """Custom type vRtrIfDhcp6ClStateDnsPriAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcp6ClStateDnsPriAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcp6ClStateDnsPriAddr_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsPriAddr = _VRtrIfDhcp6ClStateDnsPriAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 9),
    _VRtrIfDhcp6ClStateDnsPriAddr_Type()
)
vRtrIfDhcp6ClStateDnsPriAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsPriAddr.setStatus("current")
_VRtrIfDhcp6ClStateDnsSecAddrType_Type = InetAddressType
_VRtrIfDhcp6ClStateDnsSecAddrType_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsSecAddrType = _VRtrIfDhcp6ClStateDnsSecAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 10),
    _VRtrIfDhcp6ClStateDnsSecAddrType_Type()
)
vRtrIfDhcp6ClStateDnsSecAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsSecAddrType.setStatus("current")


class _VRtrIfDhcp6ClStateDnsSecAddr_Type(InetAddress):
    """Custom type vRtrIfDhcp6ClStateDnsSecAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcp6ClStateDnsSecAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcp6ClStateDnsSecAddr_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsSecAddr = _VRtrIfDhcp6ClStateDnsSecAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 11),
    _VRtrIfDhcp6ClStateDnsSecAddr_Type()
)
vRtrIfDhcp6ClStateDnsSecAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsSecAddr.setStatus("current")
_VRtrIfDhcp6ClStateDnsTerAddrType_Type = InetAddressType
_VRtrIfDhcp6ClStateDnsTerAddrType_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsTerAddrType = _VRtrIfDhcp6ClStateDnsTerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 12),
    _VRtrIfDhcp6ClStateDnsTerAddrType_Type()
)
vRtrIfDhcp6ClStateDnsTerAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsTerAddrType.setStatus("current")


class _VRtrIfDhcp6ClStateDnsTerAddr_Type(InetAddress):
    """Custom type vRtrIfDhcp6ClStateDnsTerAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfDhcp6ClStateDnsTerAddr_Type.__name__ = "InetAddress"
_VRtrIfDhcp6ClStateDnsTerAddr_Object = MibTableColumn
vRtrIfDhcp6ClStateDnsTerAddr = _VRtrIfDhcp6ClStateDnsTerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 13),
    _VRtrIfDhcp6ClStateDnsTerAddr_Type()
)
vRtrIfDhcp6ClStateDnsTerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsTerAddr.setStatus("current")
_VRtrIfDhcp6ClStateLeaseCreated_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeaseCreated_Object = MibTableColumn
vRtrIfDhcp6ClStateLeaseCreated = _VRtrIfDhcp6ClStateLeaseCreated_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 14),
    _VRtrIfDhcp6ClStateLeaseCreated_Type()
)
vRtrIfDhcp6ClStateLeaseCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeaseCreated.setStatus("current")
_VRtrIfDhcp6ClStateLeaseAcquired_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeaseAcquired_Object = MibTableColumn
vRtrIfDhcp6ClStateLeaseAcquired = _VRtrIfDhcp6ClStateLeaseAcquired_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 15),
    _VRtrIfDhcp6ClStateLeaseAcquired_Type()
)
vRtrIfDhcp6ClStateLeaseAcquired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeaseAcquired.setStatus("current")
_VRtrIfDhcp6ClStateLeaseRenew_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeaseRenew_Object = MibTableColumn
vRtrIfDhcp6ClStateLeaseRenew = _VRtrIfDhcp6ClStateLeaseRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 16),
    _VRtrIfDhcp6ClStateLeaseRenew_Type()
)
vRtrIfDhcp6ClStateLeaseRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeaseRenew.setStatus("current")
_VRtrIfDhcp6ClStateLeaseRebind_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeaseRebind_Object = MibTableColumn
vRtrIfDhcp6ClStateLeaseRebind = _VRtrIfDhcp6ClStateLeaseRebind_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 17),
    _VRtrIfDhcp6ClStateLeaseRebind_Type()
)
vRtrIfDhcp6ClStateLeaseRebind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeaseRebind.setStatus("current")
_VRtrIfDhcp6ClStateLeasePrefLftm_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeasePrefLftm_Object = MibTableColumn
vRtrIfDhcp6ClStateLeasePrefLftm = _VRtrIfDhcp6ClStateLeasePrefLftm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 18),
    _VRtrIfDhcp6ClStateLeasePrefLftm_Type()
)
vRtrIfDhcp6ClStateLeasePrefLftm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeasePrefLftm.setStatus("current")
_VRtrIfDhcp6ClStateLeaseValidLftm_Type = DateAndTimeOrEmpty
_VRtrIfDhcp6ClStateLeaseValidLftm_Object = MibTableColumn
vRtrIfDhcp6ClStateLeaseValidLftm = _VRtrIfDhcp6ClStateLeaseValidLftm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 19),
    _VRtrIfDhcp6ClStateLeaseValidLftm_Type()
)
vRtrIfDhcp6ClStateLeaseValidLftm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateLeaseValidLftm.setStatus("current")


class _VRtrIfDhcp6ClStateStatus_Type(Integer32):
    """Custom type vRtrIfDhcp6ClStateStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("initializing", 1),
          ("requesting", 2),
          ("lost", 3),
          ("established", 4),
          ("failed", 5),
          ("released", 6))
    )


_VRtrIfDhcp6ClStateStatus_Type.__name__ = "Integer32"
_VRtrIfDhcp6ClStateStatus_Object = MibTableColumn
vRtrIfDhcp6ClStateStatus = _VRtrIfDhcp6ClStateStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 20),
    _VRtrIfDhcp6ClStateStatus_Type()
)
vRtrIfDhcp6ClStateStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateStatus.setStatus("current")


class _VRtrIfDhcp6ClStateDescription_Type(DisplayString):
    """Custom type vRtrIfDhcp6ClStateDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_VRtrIfDhcp6ClStateDescription_Type.__name__ = "DisplayString"
_VRtrIfDhcp6ClStateDescription_Object = MibTableColumn
vRtrIfDhcp6ClStateDescription = _VRtrIfDhcp6ClStateDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 1, 11, 1, 21),
    _VRtrIfDhcp6ClStateDescription_Type()
)
vRtrIfDhcp6ClStateDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDescription.setStatus("current")
_TmnxVrtrRouterAdvertisement_ObjectIdentity = ObjectIdentity
tmnxVrtrRouterAdvertisement = _TmnxVrtrRouterAdvertisement_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2)
)
_VRtrAutoCfgRaRtTable_Object = MibTable
vRtrAutoCfgRaRtTable = _VRtrAutoCfgRaRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1)
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtTable.setStatus("current")
_VRtrAutoCfgRaRtEntry_Object = MibTableRow
vRtrAutoCfgRaRtEntry = _VRtrAutoCfgRaRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1)
)
vRtrAutoCfgRaRtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtPrefixLen"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtNhAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtNhAddr"),
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtEntry.setStatus("current")
_VRtrAutoCfgRaRtAddrType_Type = InetAddressType
_VRtrAutoCfgRaRtAddrType_Object = MibTableColumn
vRtrAutoCfgRaRtAddrType = _VRtrAutoCfgRaRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 1),
    _VRtrAutoCfgRaRtAddrType_Type()
)
vRtrAutoCfgRaRtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtAddrType.setStatus("current")


class _VRtrAutoCfgRaRtAddr_Type(InetAddress):
    """Custom type vRtrAutoCfgRaRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrAutoCfgRaRtAddr_Type.__name__ = "InetAddress"
_VRtrAutoCfgRaRtAddr_Object = MibTableColumn
vRtrAutoCfgRaRtAddr = _VRtrAutoCfgRaRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 2),
    _VRtrAutoCfgRaRtAddr_Type()
)
vRtrAutoCfgRaRtAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtAddr.setStatus("current")
_VRtrAutoCfgRaRtPrefixLen_Type = InetAddressPrefixLength
_VRtrAutoCfgRaRtPrefixLen_Object = MibTableColumn
vRtrAutoCfgRaRtPrefixLen = _VRtrAutoCfgRaRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 3),
    _VRtrAutoCfgRaRtPrefixLen_Type()
)
vRtrAutoCfgRaRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtPrefixLen.setStatus("current")
_VRtrAutoCfgRaRtNhAddrType_Type = InetAddressType
_VRtrAutoCfgRaRtNhAddrType_Object = MibTableColumn
vRtrAutoCfgRaRtNhAddrType = _VRtrAutoCfgRaRtNhAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 4),
    _VRtrAutoCfgRaRtNhAddrType_Type()
)
vRtrAutoCfgRaRtNhAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtNhAddrType.setStatus("current")
_VRtrAutoCfgRaRtNhAddr_Type = InetAddressIPv6z
_VRtrAutoCfgRaRtNhAddr_Object = MibTableColumn
vRtrAutoCfgRaRtNhAddr = _VRtrAutoCfgRaRtNhAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 5),
    _VRtrAutoCfgRaRtNhAddr_Type()
)
vRtrAutoCfgRaRtNhAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtNhAddr.setStatus("current")


class _VRtrAutoCfgRaRtStatus_Type(Integer32):
    """Custom type vRtrAutoCfgRaRtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("installed", 1),
          ("invalid", 2),
          ("interfaceDown", 3),
          ("errorInternal", 4),
          ("errorOutOfMemory", 5),
          ("errorInstallCheck", 6),
          ("errorInstallInternal", 7),
          ("errorUninstallCheck", 8),
          ("errorUninstallInternal", 9),
          ("expired", 10),
          ("standby", 11),
          ("lowerPreference", 12))
    )


_VRtrAutoCfgRaRtStatus_Type.__name__ = "Integer32"
_VRtrAutoCfgRaRtStatus_Object = MibTableColumn
vRtrAutoCfgRaRtStatus = _VRtrAutoCfgRaRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 6),
    _VRtrAutoCfgRaRtStatus_Type()
)
vRtrAutoCfgRaRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtStatus.setStatus("current")


class _VRtrAutoCfgRaRtTimer_Type(Unsigned32):
    """Custom type vRtrAutoCfgRaRtTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_VRtrAutoCfgRaRtTimer_Type.__name__ = "Unsigned32"
_VRtrAutoCfgRaRtTimer_Object = MibTableColumn
vRtrAutoCfgRaRtTimer = _VRtrAutoCfgRaRtTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 1, 1, 8),
    _VRtrAutoCfgRaRtTimer_Type()
)
vRtrAutoCfgRaRtTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtTimer.setUnits("seconds")
_VRtrAutoCfgRaRouterTable_Object = MibTable
vRtrAutoCfgRaRouterTable = _VRtrAutoCfgRaRouterTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2)
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterTable.setStatus("current")
_VRtrAutoCfgRaRouterEntry_Object = MibTableRow
vRtrAutoCfgRaRouterEntry = _VRtrAutoCfgRaRouterEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1)
)
vRtrAutoCfgRaRouterEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterNbrAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterNbrAddr"),
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterEntry.setStatus("current")
_VRtrAutoCfgRaRouterNbrAddrType_Type = InetAddressType
_VRtrAutoCfgRaRouterNbrAddrType_Object = MibTableColumn
vRtrAutoCfgRaRouterNbrAddrType = _VRtrAutoCfgRaRouterNbrAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 2),
    _VRtrAutoCfgRaRouterNbrAddrType_Type()
)
vRtrAutoCfgRaRouterNbrAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterNbrAddrType.setStatus("current")
_VRtrAutoCfgRaRouterNbrAddr_Type = InetAddressIPv6z
_VRtrAutoCfgRaRouterNbrAddr_Object = MibTableColumn
vRtrAutoCfgRaRouterNbrAddr = _VRtrAutoCfgRaRouterNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 3),
    _VRtrAutoCfgRaRouterNbrAddr_Type()
)
vRtrAutoCfgRaRouterNbrAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterNbrAddr.setStatus("current")
_VRtrAutoCfgRaRouterIfIndex_Type = InterfaceIndex
_VRtrAutoCfgRaRouterIfIndex_Object = MibTableColumn
vRtrAutoCfgRaRouterIfIndex = _VRtrAutoCfgRaRouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 4),
    _VRtrAutoCfgRaRouterIfIndex_Type()
)
vRtrAutoCfgRaRouterIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterIfIndex.setStatus("current")
_VRtrAutoCfgRaRouterCurHopLimit_Type = Unsigned32
_VRtrAutoCfgRaRouterCurHopLimit_Object = MibTableColumn
vRtrAutoCfgRaRouterCurHopLimit = _VRtrAutoCfgRaRouterCurHopLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 5),
    _VRtrAutoCfgRaRouterCurHopLimit_Type()
)
vRtrAutoCfgRaRouterCurHopLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterCurHopLimit.setStatus("current")
_VRtrAutoCfgRaRouterManagedFlag_Type = TruthValue
_VRtrAutoCfgRaRouterManagedFlag_Object = MibTableColumn
vRtrAutoCfgRaRouterManagedFlag = _VRtrAutoCfgRaRouterManagedFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 6),
    _VRtrAutoCfgRaRouterManagedFlag_Type()
)
vRtrAutoCfgRaRouterManagedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterManagedFlag.setStatus("current")
_VRtrAutoCfgRaRouterOtherCfgFlag_Type = TruthValue
_VRtrAutoCfgRaRouterOtherCfgFlag_Object = MibTableColumn
vRtrAutoCfgRaRouterOtherCfgFlag = _VRtrAutoCfgRaRouterOtherCfgFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 7),
    _VRtrAutoCfgRaRouterOtherCfgFlag_Type()
)
vRtrAutoCfgRaRouterOtherCfgFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterOtherCfgFlag.setStatus("current")


class _VRtrAutoCfgRaRouterPreference_Type(Integer32):
    """Custom type vRtrAutoCfgRaRouterPreference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("medium", 2),
          ("low", 3),
          ("reserved", 4))
    )


_VRtrAutoCfgRaRouterPreference_Type.__name__ = "Integer32"
_VRtrAutoCfgRaRouterPreference_Object = MibTableColumn
vRtrAutoCfgRaRouterPreference = _VRtrAutoCfgRaRouterPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 8),
    _VRtrAutoCfgRaRouterPreference_Type()
)
vRtrAutoCfgRaRouterPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterPreference.setStatus("current")
_VRtrAutoCfgRaRouterLifetime_Type = Unsigned32
_VRtrAutoCfgRaRouterLifetime_Object = MibTableColumn
vRtrAutoCfgRaRouterLifetime = _VRtrAutoCfgRaRouterLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 9),
    _VRtrAutoCfgRaRouterLifetime_Type()
)
vRtrAutoCfgRaRouterLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterLifetime.setUnits("seconds")
_VRtrAutoCfgRaRouterReachableTime_Type = Unsigned32
_VRtrAutoCfgRaRouterReachableTime_Object = MibTableColumn
vRtrAutoCfgRaRouterReachableTime = _VRtrAutoCfgRaRouterReachableTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 10),
    _VRtrAutoCfgRaRouterReachableTime_Type()
)
vRtrAutoCfgRaRouterReachableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterReachableTime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterReachableTime.setUnits("milliseconds")
_VRtrAutoCfgRaRouterRetransTimer_Type = Unsigned32
_VRtrAutoCfgRaRouterRetransTimer_Object = MibTableColumn
vRtrAutoCfgRaRouterRetransTimer = _VRtrAutoCfgRaRouterRetransTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 2, 1, 11),
    _VRtrAutoCfgRaRouterRetransTimer_Type()
)
vRtrAutoCfgRaRouterRetransTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterRetransTimer.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRouterRetransTimer.setUnits("milliseconds")
_VRtrAutoCfgRaPrefixTable_Object = MibTable
vRtrAutoCfgRaPrefixTable = _VRtrAutoCfgRaPrefixTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3)
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixTable.setStatus("current")
_VRtrAutoCfgRaPrefixEntry_Object = MibTableRow
vRtrAutoCfgRaPrefixEntry = _VRtrAutoCfgRaPrefixEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1)
)
vRtrAutoCfgRaPrefixEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixNbrAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixNbrAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixLength"),
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixEntry.setStatus("current")
_VRtrAutoCfgRaPrefixNbrAddrType_Type = InetAddressType
_VRtrAutoCfgRaPrefixNbrAddrType_Object = MibTableColumn
vRtrAutoCfgRaPrefixNbrAddrType = _VRtrAutoCfgRaPrefixNbrAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 2),
    _VRtrAutoCfgRaPrefixNbrAddrType_Type()
)
vRtrAutoCfgRaPrefixNbrAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixNbrAddrType.setStatus("current")
_VRtrAutoCfgRaPrefixNbrAddr_Type = InetAddressIPv6z
_VRtrAutoCfgRaPrefixNbrAddr_Object = MibTableColumn
vRtrAutoCfgRaPrefixNbrAddr = _VRtrAutoCfgRaPrefixNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 3),
    _VRtrAutoCfgRaPrefixNbrAddr_Type()
)
vRtrAutoCfgRaPrefixNbrAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixNbrAddr.setStatus("current")


class _VRtrAutoCfgRaPrefixPrefix_Type(InetAddress):
    """Custom type vRtrAutoCfgRaPrefixPrefix based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_VRtrAutoCfgRaPrefixPrefix_Type.__name__ = "InetAddress"
_VRtrAutoCfgRaPrefixPrefix_Object = MibTableColumn
vRtrAutoCfgRaPrefixPrefix = _VRtrAutoCfgRaPrefixPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 4),
    _VRtrAutoCfgRaPrefixPrefix_Type()
)
vRtrAutoCfgRaPrefixPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixPrefix.setStatus("current")
_VRtrAutoCfgRaPrefixLength_Type = InetAddressPrefixLength
_VRtrAutoCfgRaPrefixLength_Object = MibTableColumn
vRtrAutoCfgRaPrefixLength = _VRtrAutoCfgRaPrefixLength_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 5),
    _VRtrAutoCfgRaPrefixLength_Type()
)
vRtrAutoCfgRaPrefixLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixLength.setStatus("current")
_VRtrAutoCfgRaPrefixIfIndex_Type = InterfaceIndex
_VRtrAutoCfgRaPrefixIfIndex_Object = MibTableColumn
vRtrAutoCfgRaPrefixIfIndex = _VRtrAutoCfgRaPrefixIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 6),
    _VRtrAutoCfgRaPrefixIfIndex_Type()
)
vRtrAutoCfgRaPrefixIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixIfIndex.setStatus("current")
_VRtrAutoCfgRaPrefixOnLinkFlag_Type = TruthValue
_VRtrAutoCfgRaPrefixOnLinkFlag_Object = MibTableColumn
vRtrAutoCfgRaPrefixOnLinkFlag = _VRtrAutoCfgRaPrefixOnLinkFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 7),
    _VRtrAutoCfgRaPrefixOnLinkFlag_Type()
)
vRtrAutoCfgRaPrefixOnLinkFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixOnLinkFlag.setStatus("current")
_VRtrAutoCfgRaPrefixAutonomFlag_Type = TruthValue
_VRtrAutoCfgRaPrefixAutonomFlag_Object = MibTableColumn
vRtrAutoCfgRaPrefixAutonomFlag = _VRtrAutoCfgRaPrefixAutonomFlag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 8),
    _VRtrAutoCfgRaPrefixAutonomFlag_Type()
)
vRtrAutoCfgRaPrefixAutonomFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixAutonomFlag.setStatus("current")
_VRtrAutoCfgRaPrefixPrefLftm_Type = Unsigned32
_VRtrAutoCfgRaPrefixPrefLftm_Object = MibTableColumn
vRtrAutoCfgRaPrefixPrefLftm = _VRtrAutoCfgRaPrefixPrefLftm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 9),
    _VRtrAutoCfgRaPrefixPrefLftm_Type()
)
vRtrAutoCfgRaPrefixPrefLftm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixPrefLftm.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixPrefLftm.setUnits("seconds")
_VRtrAutoCfgRaPrefixValidLftm_Type = Unsigned32
_VRtrAutoCfgRaPrefixValidLftm_Object = MibTableColumn
vRtrAutoCfgRaPrefixValidLftm = _VRtrAutoCfgRaPrefixValidLftm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 3, 1, 10),
    _VRtrAutoCfgRaPrefixValidLftm_Type()
)
vRtrAutoCfgRaPrefixValidLftm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixValidLftm.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaPrefixValidLftm.setUnits("seconds")
_VRtrAutoCfgRaSpecRtTable_Object = MibTable
vRtrAutoCfgRaSpecRtTable = _VRtrAutoCfgRaSpecRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4)
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtTable.setStatus("current")
_VRtrAutoCfgRaSpecRtEntry_Object = MibTableRow
vRtrAutoCfgRaSpecRtEntry = _VRtrAutoCfgRaSpecRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1)
)
vRtrAutoCfgRaSpecRtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtNbrAddrType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtNbrAddr"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtPrefix"),
    (0, "TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtPrefixLength"),
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtEntry.setStatus("current")
_VRtrAutoCfgRaSpecRtNbrAddrType_Type = InetAddressType
_VRtrAutoCfgRaSpecRtNbrAddrType_Object = MibTableColumn
vRtrAutoCfgRaSpecRtNbrAddrType = _VRtrAutoCfgRaSpecRtNbrAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 2),
    _VRtrAutoCfgRaSpecRtNbrAddrType_Type()
)
vRtrAutoCfgRaSpecRtNbrAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtNbrAddrType.setStatus("current")
_VRtrAutoCfgRaSpecRtNbrAddr_Type = InetAddressIPv6z
_VRtrAutoCfgRaSpecRtNbrAddr_Object = MibTableColumn
vRtrAutoCfgRaSpecRtNbrAddr = _VRtrAutoCfgRaSpecRtNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 3),
    _VRtrAutoCfgRaSpecRtNbrAddr_Type()
)
vRtrAutoCfgRaSpecRtNbrAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtNbrAddr.setStatus("current")


class _VRtrAutoCfgRaSpecRtPrefix_Type(InetAddress):
    """Custom type vRtrAutoCfgRaSpecRtPrefix based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_VRtrAutoCfgRaSpecRtPrefix_Type.__name__ = "InetAddress"
_VRtrAutoCfgRaSpecRtPrefix_Object = MibTableColumn
vRtrAutoCfgRaSpecRtPrefix = _VRtrAutoCfgRaSpecRtPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 4),
    _VRtrAutoCfgRaSpecRtPrefix_Type()
)
vRtrAutoCfgRaSpecRtPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtPrefix.setStatus("current")
_VRtrAutoCfgRaSpecRtPrefixLength_Type = InetAddressPrefixLength
_VRtrAutoCfgRaSpecRtPrefixLength_Object = MibTableColumn
vRtrAutoCfgRaSpecRtPrefixLength = _VRtrAutoCfgRaSpecRtPrefixLength_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 5),
    _VRtrAutoCfgRaSpecRtPrefixLength_Type()
)
vRtrAutoCfgRaSpecRtPrefixLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtPrefixLength.setStatus("current")
_VRtrAutoCfgRaSpecRtIfIndex_Type = InterfaceIndex
_VRtrAutoCfgRaSpecRtIfIndex_Object = MibTableColumn
vRtrAutoCfgRaSpecRtIfIndex = _VRtrAutoCfgRaSpecRtIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 6),
    _VRtrAutoCfgRaSpecRtIfIndex_Type()
)
vRtrAutoCfgRaSpecRtIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtIfIndex.setStatus("current")


class _VRtrAutoCfgRaSpecRtPreference_Type(Integer32):
    """Custom type vRtrAutoCfgRaSpecRtPreference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("medium", 2),
          ("low", 3),
          ("reserved", 4))
    )


_VRtrAutoCfgRaSpecRtPreference_Type.__name__ = "Integer32"
_VRtrAutoCfgRaSpecRtPreference_Object = MibTableColumn
vRtrAutoCfgRaSpecRtPreference = _VRtrAutoCfgRaSpecRtPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 7),
    _VRtrAutoCfgRaSpecRtPreference_Type()
)
vRtrAutoCfgRaSpecRtPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtPreference.setStatus("current")
_VRtrAutoCfgRaSpecRtLifetime_Type = Unsigned32
_VRtrAutoCfgRaSpecRtLifetime_Object = MibTableColumn
vRtrAutoCfgRaSpecRtLifetime = _VRtrAutoCfgRaSpecRtLifetime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 4, 1, 9),
    _VRtrAutoCfgRaSpecRtLifetime_Type()
)
vRtrAutoCfgRaSpecRtLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtLifetime.setStatus("current")
if mibBuilder.loadTexts:
    vRtrAutoCfgRaSpecRtLifetime.setUnits("seconds")
_VRtrIfAutoCfgRaStatsTable_Object = MibTable
vRtrIfAutoCfgRaStatsTable = _VRtrIfAutoCfgRaStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5)
)
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsTable.setStatus("current")
_VRtrIfAutoCfgRaStatsEntry_Object = MibTableRow
vRtrIfAutoCfgRaStatsEntry = _VRtrIfAutoCfgRaStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1)
)
vRtrIfAutoCfgRaStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsEntry.setStatus("current")
_VRtrIfAutoCfgRaStatsClearedTime_Type = TimeStamp
_VRtrIfAutoCfgRaStatsClearedTime_Object = MibTableColumn
vRtrIfAutoCfgRaStatsClearedTime = _VRtrIfAutoCfgRaStatsClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 1),
    _VRtrIfAutoCfgRaStatsClearedTime_Type()
)
vRtrIfAutoCfgRaStatsClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsClearedTime.setStatus("current")
_VRtrIfAutoCfgRaStatsOutRtrSol_Type = Counter64
_VRtrIfAutoCfgRaStatsOutRtrSol_Object = MibTableColumn
vRtrIfAutoCfgRaStatsOutRtrSol = _VRtrIfAutoCfgRaStatsOutRtrSol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 2),
    _VRtrIfAutoCfgRaStatsOutRtrSol_Type()
)
vRtrIfAutoCfgRaStatsOutRtrSol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsOutRtrSol.setStatus("current")
_VRtrIfAutoCfgRaStatsRtrSolTime_Type = TimeTicks
_VRtrIfAutoCfgRaStatsRtrSolTime_Object = MibTableColumn
vRtrIfAutoCfgRaStatsRtrSolTime = _VRtrIfAutoCfgRaStatsRtrSolTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 3),
    _VRtrIfAutoCfgRaStatsRtrSolTime_Type()
)
vRtrIfAutoCfgRaStatsRtrSolTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsRtrSolTime.setStatus("current")
_VRtrIfAutoCfgRaStatsOutRtrSolErr_Type = Counter64
_VRtrIfAutoCfgRaStatsOutRtrSolErr_Object = MibTableColumn
vRtrIfAutoCfgRaStatsOutRtrSolErr = _VRtrIfAutoCfgRaStatsOutRtrSolErr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 4),
    _VRtrIfAutoCfgRaStatsOutRtrSolErr_Type()
)
vRtrIfAutoCfgRaStatsOutRtrSolErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsOutRtrSolErr.setStatus("current")
_VRtrIfAutoCfgRaStatsInRtrAdv_Type = Counter64
_VRtrIfAutoCfgRaStatsInRtrAdv_Object = MibTableColumn
vRtrIfAutoCfgRaStatsInRtrAdv = _VRtrIfAutoCfgRaStatsInRtrAdv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 5),
    _VRtrIfAutoCfgRaStatsInRtrAdv_Type()
)
vRtrIfAutoCfgRaStatsInRtrAdv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsInRtrAdv.setStatus("current")
_VRtrIfAutoCfgRaStatsRtrAdvTime_Type = TimeTicks
_VRtrIfAutoCfgRaStatsRtrAdvTime_Object = MibTableColumn
vRtrIfAutoCfgRaStatsRtrAdvTime = _VRtrIfAutoCfgRaStatsRtrAdvTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 6),
    _VRtrIfAutoCfgRaStatsRtrAdvTime_Type()
)
vRtrIfAutoCfgRaStatsRtrAdvTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsRtrAdvTime.setStatus("current")
_VRtrIfAutoCfgRaStatsInRtrAdvErr_Type = Counter64
_VRtrIfAutoCfgRaStatsInRtrAdvErr_Object = MibTableColumn
vRtrIfAutoCfgRaStatsInRtrAdvErr = _VRtrIfAutoCfgRaStatsInRtrAdvErr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 202, 2, 5, 1, 7),
    _VRtrIfAutoCfgRaStatsInRtrAdvErr_Type()
)
vRtrIfAutoCfgRaStatsInRtrAdvErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfAutoCfgRaStatsInRtrAdvErr.setStatus("current")
_VRtrIfEgressQueueStatsTable_Object = MibTable
vRtrIfEgressQueueStatsTable = _VRtrIfEgressQueueStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203)
)
if mibBuilder.loadTexts:
    vRtrIfEgressQueueStatsTable.setStatus("current")
_VRtrIfEgressQueueStatsEntry_Object = MibTableRow
vRtrIfEgressQueueStatsEntry = _VRtrIfEgressQueueStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1)
)
vRtrIfEgressQueueStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfEgressQueueIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfEgressQueueStatsEntry.setStatus("current")
_VRtrIfEgressQueueIndex_Type = Unsigned32
_VRtrIfEgressQueueIndex_Object = MibTableColumn
vRtrIfEgressQueueIndex = _VRtrIfEgressQueueIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 1),
    _VRtrIfEgressQueueIndex_Type()
)
vRtrIfEgressQueueIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfEgressQueueIndex.setStatus("current")
_VRtrIfEgressQueueFwdPkts_Type = Counter64
_VRtrIfEgressQueueFwdPkts_Object = MibTableColumn
vRtrIfEgressQueueFwdPkts = _VRtrIfEgressQueueFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 2),
    _VRtrIfEgressQueueFwdPkts_Type()
)
vRtrIfEgressQueueFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgressQueueFwdPkts.setStatus("current")
_VRtrIfEgressQueueFwdOcts_Type = Counter64
_VRtrIfEgressQueueFwdOcts_Object = MibTableColumn
vRtrIfEgressQueueFwdOcts = _VRtrIfEgressQueueFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 3),
    _VRtrIfEgressQueueFwdOcts_Type()
)
vRtrIfEgressQueueFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgressQueueFwdOcts.setStatus("current")
_VRtrIfEgressQueueDrpPkts_Type = Counter64
_VRtrIfEgressQueueDrpPkts_Object = MibTableColumn
vRtrIfEgressQueueDrpPkts = _VRtrIfEgressQueueDrpPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 4),
    _VRtrIfEgressQueueDrpPkts_Type()
)
vRtrIfEgressQueueDrpPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgressQueueDrpPkts.setStatus("current")
_VRtrIfEgressQueueDrpOcts_Type = Counter64
_VRtrIfEgressQueueDrpOcts_Object = MibTableColumn
vRtrIfEgressQueueDrpOcts = _VRtrIfEgressQueueDrpOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 5),
    _VRtrIfEgressQueueDrpOcts_Type()
)
vRtrIfEgressQueueDrpOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgressQueueDrpOcts.setStatus("current")
_VRtrIfEgrQFwdInProfPkts_Type = Counter64
_VRtrIfEgrQFwdInProfPkts_Object = MibTableColumn
vRtrIfEgrQFwdInProfPkts = _VRtrIfEgrQFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 6),
    _VRtrIfEgrQFwdInProfPkts_Type()
)
vRtrIfEgrQFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdInProfPkts.setStatus("current")
_VRtrIfEgrQFwdInProfOcts_Type = Counter64
_VRtrIfEgrQFwdInProfOcts_Object = MibTableColumn
vRtrIfEgrQFwdInProfOcts = _VRtrIfEgrQFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 7),
    _VRtrIfEgrQFwdInProfOcts_Type()
)
vRtrIfEgrQFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdInProfOcts.setStatus("current")
_VRtrIfEgrQDrpInProfPkts_Type = Counter64
_VRtrIfEgrQDrpInProfPkts_Object = MibTableColumn
vRtrIfEgrQDrpInProfPkts = _VRtrIfEgrQDrpInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 8),
    _VRtrIfEgrQDrpInProfPkts_Type()
)
vRtrIfEgrQDrpInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpInProfPkts.setStatus("current")
_VRtrIfEgrQDrpInProfOcts_Type = Counter64
_VRtrIfEgrQDrpInProfOcts_Object = MibTableColumn
vRtrIfEgrQDrpInProfOcts = _VRtrIfEgrQDrpInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 9),
    _VRtrIfEgrQDrpInProfOcts_Type()
)
vRtrIfEgrQDrpInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpInProfOcts.setStatus("current")
_VRtrIfEgrQFwdOutProfPkts_Type = Counter64
_VRtrIfEgrQFwdOutProfPkts_Object = MibTableColumn
vRtrIfEgrQFwdOutProfPkts = _VRtrIfEgrQFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 10),
    _VRtrIfEgrQFwdOutProfPkts_Type()
)
vRtrIfEgrQFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdOutProfPkts.setStatus("current")
_VRtrIfEgrQFwdOutProfOcts_Type = Counter64
_VRtrIfEgrQFwdOutProfOcts_Object = MibTableColumn
vRtrIfEgrQFwdOutProfOcts = _VRtrIfEgrQFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 11),
    _VRtrIfEgrQFwdOutProfOcts_Type()
)
vRtrIfEgrQFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdOutProfOcts.setStatus("current")
_VRtrIfEgrQDrpOutProfPkts_Type = Counter64
_VRtrIfEgrQDrpOutProfPkts_Object = MibTableColumn
vRtrIfEgrQDrpOutProfPkts = _VRtrIfEgrQDrpOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 12),
    _VRtrIfEgrQDrpOutProfPkts_Type()
)
vRtrIfEgrQDrpOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpOutProfPkts.setStatus("current")
_VRtrIfEgrQDrpOutProfOcts_Type = Counter64
_VRtrIfEgrQDrpOutProfOcts_Object = MibTableColumn
vRtrIfEgrQDrpOutProfOcts = _VRtrIfEgrQDrpOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 13),
    _VRtrIfEgrQDrpOutProfOcts_Type()
)
vRtrIfEgrQDrpOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpOutProfOcts.setStatus("current")
_VRtrIfEgrQFwdExdProfPkts_Type = Counter64
_VRtrIfEgrQFwdExdProfPkts_Object = MibTableColumn
vRtrIfEgrQFwdExdProfPkts = _VRtrIfEgrQFwdExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 14),
    _VRtrIfEgrQFwdExdProfPkts_Type()
)
vRtrIfEgrQFwdExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdExdProfPkts.setStatus("current")
_VRtrIfEgrQFwdExdProfOcts_Type = Counter64
_VRtrIfEgrQFwdExdProfOcts_Object = MibTableColumn
vRtrIfEgrQFwdExdProfOcts = _VRtrIfEgrQFwdExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 15),
    _VRtrIfEgrQFwdExdProfOcts_Type()
)
vRtrIfEgrQFwdExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdExdProfOcts.setStatus("current")
_VRtrIfEgrQDrpExdProfPkts_Type = Counter64
_VRtrIfEgrQDrpExdProfPkts_Object = MibTableColumn
vRtrIfEgrQDrpExdProfPkts = _VRtrIfEgrQDrpExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 16),
    _VRtrIfEgrQDrpExdProfPkts_Type()
)
vRtrIfEgrQDrpExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpExdProfPkts.setStatus("current")
_VRtrIfEgrQDrpExdProfOcts_Type = Counter64
_VRtrIfEgrQDrpExdProfOcts_Object = MibTableColumn
vRtrIfEgrQDrpExdProfOcts = _VRtrIfEgrQDrpExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 17),
    _VRtrIfEgrQDrpExdProfOcts_Type()
)
vRtrIfEgrQDrpExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpExdProfOcts.setStatus("current")
_VRtrIfEgrQFwdInPlusProfPkts_Type = Counter64
_VRtrIfEgrQFwdInPlusProfPkts_Object = MibTableColumn
vRtrIfEgrQFwdInPlusProfPkts = _VRtrIfEgrQFwdInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 18),
    _VRtrIfEgrQFwdInPlusProfPkts_Type()
)
vRtrIfEgrQFwdInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdInPlusProfPkts.setStatus("current")
_VRtrIfEgrQFwdInPlusProfOcts_Type = Counter64
_VRtrIfEgrQFwdInPlusProfOcts_Object = MibTableColumn
vRtrIfEgrQFwdInPlusProfOcts = _VRtrIfEgrQFwdInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 19),
    _VRtrIfEgrQFwdInPlusProfOcts_Type()
)
vRtrIfEgrQFwdInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQFwdInPlusProfOcts.setStatus("current")
_VRtrIfEgrQDrpInPlusProfPkts_Type = Counter64
_VRtrIfEgrQDrpInPlusProfPkts_Object = MibTableColumn
vRtrIfEgrQDrpInPlusProfPkts = _VRtrIfEgrQDrpInPlusProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 20),
    _VRtrIfEgrQDrpInPlusProfPkts_Type()
)
vRtrIfEgrQDrpInPlusProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpInPlusProfPkts.setStatus("current")
_VRtrIfEgrQDrpInPlusProfOcts_Type = Counter64
_VRtrIfEgrQDrpInPlusProfOcts_Object = MibTableColumn
vRtrIfEgrQDrpInPlusProfOcts = _VRtrIfEgrQDrpInPlusProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 203, 1, 21),
    _VRtrIfEgrQDrpInPlusProfOcts_Type()
)
vRtrIfEgrQDrpInPlusProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEgrQDrpInPlusProfOcts.setStatus("current")
_VRtrIfIngPolicerStatsTable_Object = MibTable
vRtrIfIngPolicerStatsTable = _VRtrIfIngPolicerStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204)
)
if mibBuilder.loadTexts:
    vRtrIfIngPolicerStatsTable.setStatus("current")
_VRtrIfIngPolicerStatsEntry_Object = MibTableRow
vRtrIfIngPolicerStatsEntry = _VRtrIfIngPolicerStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1)
)
vRtrIfIngPolicerStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIngPolicerIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfIngPolicerStatsEntry.setStatus("current")


class _VRtrIfIngPolicerIndex_Type(Unsigned32):
    """Custom type vRtrIfIngPolicerIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_VRtrIfIngPolicerIndex_Type.__name__ = "Unsigned32"
_VRtrIfIngPolicerIndex_Object = MibTableColumn
vRtrIfIngPolicerIndex = _VRtrIfIngPolicerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 1),
    _VRtrIfIngPolicerIndex_Type()
)
vRtrIfIngPolicerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerIndex.setStatus("current")
_VRtrIfIngPolicerFwdInProfPkts_Type = Counter64
_VRtrIfIngPolicerFwdInProfPkts_Object = MibTableColumn
vRtrIfIngPolicerFwdInProfPkts = _VRtrIfIngPolicerFwdInProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 2),
    _VRtrIfIngPolicerFwdInProfPkts_Type()
)
vRtrIfIngPolicerFwdInProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerFwdInProfPkts.setStatus("current")
_VRtrIfIngPolicerFwdOutProfPkts_Type = Counter64
_VRtrIfIngPolicerFwdOutProfPkts_Object = MibTableColumn
vRtrIfIngPolicerFwdOutProfPkts = _VRtrIfIngPolicerFwdOutProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 3),
    _VRtrIfIngPolicerFwdOutProfPkts_Type()
)
vRtrIfIngPolicerFwdOutProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerFwdOutProfPkts.setStatus("current")
_VRtrIfIngPolicerFwdInProfOcts_Type = Counter64
_VRtrIfIngPolicerFwdInProfOcts_Object = MibTableColumn
vRtrIfIngPolicerFwdInProfOcts = _VRtrIfIngPolicerFwdInProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 4),
    _VRtrIfIngPolicerFwdInProfOcts_Type()
)
vRtrIfIngPolicerFwdInProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerFwdInProfOcts.setStatus("current")
_VRtrIfIngPolicerFwdOutProfOcts_Type = Counter64
_VRtrIfIngPolicerFwdOutProfOcts_Object = MibTableColumn
vRtrIfIngPolicerFwdOutProfOcts = _VRtrIfIngPolicerFwdOutProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 5),
    _VRtrIfIngPolicerFwdOutProfOcts_Type()
)
vRtrIfIngPolicerFwdOutProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerFwdOutProfOcts.setStatus("current")
_VRtrIfIngPolicerDrpExdProfPkts_Type = Counter64
_VRtrIfIngPolicerDrpExdProfPkts_Object = MibTableColumn
vRtrIfIngPolicerDrpExdProfPkts = _VRtrIfIngPolicerDrpExdProfPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 6),
    _VRtrIfIngPolicerDrpExdProfPkts_Type()
)
vRtrIfIngPolicerDrpExdProfPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerDrpExdProfPkts.setStatus("current")
_VRtrIfIngPolicerDrpExdProfOcts_Type = Counter64
_VRtrIfIngPolicerDrpExdProfOcts_Object = MibTableColumn
vRtrIfIngPolicerDrpExdProfOcts = _VRtrIfIngPolicerDrpExdProfOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 204, 1, 7),
    _VRtrIfIngPolicerDrpExdProfOcts_Type()
)
vRtrIfIngPolicerDrpExdProfOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfIngPolicerDrpExdProfOcts.setStatus("current")
_VRtrIfArpHostRtTblLstChg_Type = TimeStamp
_VRtrIfArpHostRtTblLstChg_Object = MibScalar
vRtrIfArpHostRtTblLstChg = _VRtrIfArpHostRtTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 205),
    _VRtrIfArpHostRtTblLstChg_Type()
)
vRtrIfArpHostRtTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfArpHostRtTblLstChg.setStatus("current")
_VRtrIfArpHostRtTable_Object = MibTable
vRtrIfArpHostRtTable = _VRtrIfArpHostRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206)
)
if mibBuilder.loadTexts:
    vRtrIfArpHostRtTable.setStatus("current")
_VRtrIfArpHostRtEntry_Object = MibTableRow
vRtrIfArpHostRtEntry = _VRtrIfArpHostRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206, 1)
)
vRtrIfArpHostRtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfArpHostRtType"),
)
if mibBuilder.loadTexts:
    vRtrIfArpHostRtEntry.setStatus("current")


class _VRtrIfArpHostRtType_Type(Integer32):
    """Custom type vRtrIfArpHostRtType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("evpn", 3))
    )


_VRtrIfArpHostRtType_Type.__name__ = "Integer32"
_VRtrIfArpHostRtType_Object = MibTableColumn
vRtrIfArpHostRtType = _VRtrIfArpHostRtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206, 1, 1),
    _VRtrIfArpHostRtType_Type()
)
vRtrIfArpHostRtType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfArpHostRtType.setStatus("current")
_VRtrIfArpHostRtRowStatus_Type = RowStatus
_VRtrIfArpHostRtRowStatus_Object = MibTableColumn
vRtrIfArpHostRtRowStatus = _VRtrIfArpHostRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206, 1, 2),
    _VRtrIfArpHostRtRowStatus_Type()
)
vRtrIfArpHostRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpHostRtRowStatus.setStatus("current")
_VRtrIfArpHostRtLastChgd_Type = TimeStamp
_VRtrIfArpHostRtLastChgd_Object = MibTableColumn
vRtrIfArpHostRtLastChgd = _VRtrIfArpHostRtLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206, 1, 3),
    _VRtrIfArpHostRtLastChgd_Type()
)
vRtrIfArpHostRtLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfArpHostRtLastChgd.setStatus("current")


class _VRtrIfArpHostRtRouteTag_Type(Unsigned32):
    """Custom type vRtrIfArpHostRtRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_VRtrIfArpHostRtRouteTag_Type.__name__ = "Unsigned32"
_VRtrIfArpHostRtRouteTag_Object = MibTableColumn
vRtrIfArpHostRtRouteTag = _VRtrIfArpHostRtRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 206, 1, 4),
    _VRtrIfArpHostRtRouteTag_Type()
)
vRtrIfArpHostRtRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfArpHostRtRouteTag.setStatus("current")
_VRtrIfNdHostRtTblLstChg_Type = TimeStamp
_VRtrIfNdHostRtTblLstChg_Object = MibScalar
vRtrIfNdHostRtTblLstChg = _VRtrIfNdHostRtTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 207),
    _VRtrIfNdHostRtTblLstChg_Type()
)
vRtrIfNdHostRtTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfNdHostRtTblLstChg.setStatus("current")
_VRtrIfNdHostRtTable_Object = MibTable
vRtrIfNdHostRtTable = _VRtrIfNdHostRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208)
)
if mibBuilder.loadTexts:
    vRtrIfNdHostRtTable.setStatus("current")
_VRtrIfNdHostRtEntry_Object = MibTableRow
vRtrIfNdHostRtEntry = _VRtrIfNdHostRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208, 1)
)
vRtrIfNdHostRtEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfNdHostRtType"),
)
if mibBuilder.loadTexts:
    vRtrIfNdHostRtEntry.setStatus("current")


class _VRtrIfNdHostRtType_Type(Integer32):
    """Custom type vRtrIfNdHostRtType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("evpn", 3))
    )


_VRtrIfNdHostRtType_Type.__name__ = "Integer32"
_VRtrIfNdHostRtType_Object = MibTableColumn
vRtrIfNdHostRtType = _VRtrIfNdHostRtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208, 1, 1),
    _VRtrIfNdHostRtType_Type()
)
vRtrIfNdHostRtType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrIfNdHostRtType.setStatus("current")
_VRtrIfNdHostRtRowStatus_Type = RowStatus
_VRtrIfNdHostRtRowStatus_Object = MibTableColumn
vRtrIfNdHostRtRowStatus = _VRtrIfNdHostRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208, 1, 2),
    _VRtrIfNdHostRtRowStatus_Type()
)
vRtrIfNdHostRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfNdHostRtRowStatus.setStatus("current")
_VRtrIfNdHostRtLastChgd_Type = TimeStamp
_VRtrIfNdHostRtLastChgd_Object = MibTableColumn
vRtrIfNdHostRtLastChgd = _VRtrIfNdHostRtLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208, 1, 3),
    _VRtrIfNdHostRtLastChgd_Type()
)
vRtrIfNdHostRtLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfNdHostRtLastChgd.setStatus("current")


class _VRtrIfNdHostRtRouteTag_Type(Unsigned32):
    """Custom type vRtrIfNdHostRtRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_VRtrIfNdHostRtRouteTag_Type.__name__ = "Unsigned32"
_VRtrIfNdHostRtRouteTag_Object = MibTableColumn
vRtrIfNdHostRtRouteTag = _VRtrIfNdHostRtRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 208, 1, 4),
    _VRtrIfNdHostRtRouteTag_Type()
)
vRtrIfNdHostRtRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfNdHostRtRouteTag.setStatus("current")
_VRtrDnsRedirectTableLastChanged_Type = TimeStamp
_VRtrDnsRedirectTableLastChanged_Object = MibScalar
vRtrDnsRedirectTableLastChanged = _VRtrDnsRedirectTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 209),
    _VRtrDnsRedirectTableLastChanged_Type()
)
vRtrDnsRedirectTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDnsRedirectTableLastChanged.setStatus("current")
_VRtrDnsRedirectTable_Object = MibTable
vRtrDnsRedirectTable = _VRtrDnsRedirectTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210)
)
if mibBuilder.loadTexts:
    vRtrDnsRedirectTable.setStatus("current")
_VRtrDnsRedirectEntry_Object = MibTableRow
vRtrDnsRedirectEntry = _VRtrDnsRedirectEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1)
)
vRtrDnsRedirectEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrDnsRedirectRequestRouterId"),
    (0, "TIMETRA-VRTR-MIB", "vRtrDnsRedirectDnsRouterId"),
)
if mibBuilder.loadTexts:
    vRtrDnsRedirectEntry.setStatus("current")


class _VRtrDnsRedirectRequestRouterId_Type(Unsigned32):
    """Custom type vRtrDnsRedirectRequestRouterId based on Unsigned32"""
    defaultValue = 0


_VRtrDnsRedirectRequestRouterId_Type.__name__ = "Unsigned32"
_VRtrDnsRedirectRequestRouterId_Object = MibTableColumn
vRtrDnsRedirectRequestRouterId = _VRtrDnsRedirectRequestRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1, 1),
    _VRtrDnsRedirectRequestRouterId_Type()
)
vRtrDnsRedirectRequestRouterId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrDnsRedirectRequestRouterId.setStatus("current")


class _VRtrDnsRedirectDnsRouterId_Type(Unsigned32):
    """Custom type vRtrDnsRedirectDnsRouterId based on Unsigned32"""
    defaultValue = 0


_VRtrDnsRedirectDnsRouterId_Type.__name__ = "Unsigned32"
_VRtrDnsRedirectDnsRouterId_Object = MibTableColumn
vRtrDnsRedirectDnsRouterId = _VRtrDnsRedirectDnsRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1, 2),
    _VRtrDnsRedirectDnsRouterId_Type()
)
vRtrDnsRedirectDnsRouterId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrDnsRedirectDnsRouterId.setStatus("current")
_VRtrDnsRedirectRowStatus_Type = RowStatus
_VRtrDnsRedirectRowStatus_Object = MibTableColumn
vRtrDnsRedirectRowStatus = _VRtrDnsRedirectRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1, 3),
    _VRtrDnsRedirectRowStatus_Type()
)
vRtrDnsRedirectRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsRedirectRowStatus.setStatus("current")


class _VRtrDnsRedirectPreference_Type(Unsigned32):
    """Custom type vRtrDnsRedirectPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrDnsRedirectPreference_Type.__name__ = "Unsigned32"
_VRtrDnsRedirectPreference_Object = MibTableColumn
vRtrDnsRedirectPreference = _VRtrDnsRedirectPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1, 4),
    _VRtrDnsRedirectPreference_Type()
)
vRtrDnsRedirectPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDnsRedirectPreference.setStatus("current")
_VRtrDnsRedirectLastChanged_Type = TimeStamp
_VRtrDnsRedirectLastChanged_Object = MibTableColumn
vRtrDnsRedirectLastChanged = _VRtrDnsRedirectLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 210, 1, 5),
    _VRtrDnsRedirectLastChanged_Type()
)
vRtrDnsRedirectLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDnsRedirectLastChanged.setStatus("current")
_TmnxVrtrFlexAlgoObjs_ObjectIdentity = ObjectIdentity
tmnxVrtrFlexAlgoObjs = _TmnxVrtrFlexAlgoObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211)
)
_TmnxFlexAlgoDefTblLastCh_Type = TimeStamp
_TmnxFlexAlgoDefTblLastCh_Object = MibScalar
tmnxFlexAlgoDefTblLastCh = _TmnxFlexAlgoDefTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 1),
    _TmnxFlexAlgoDefTblLastCh_Type()
)
tmnxFlexAlgoDefTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxFlexAlgoDefTblLastCh.setStatus("current")
_TmnxFlexAlgoDefinitionTable_Object = MibTable
tmnxFlexAlgoDefinitionTable = _TmnxFlexAlgoDefinitionTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2)
)
if mibBuilder.loadTexts:
    tmnxFlexAlgoDefinitionTable.setStatus("current")
_TmnxFlexAlgoDefinitionEntry_Object = MibTableRow
tmnxFlexAlgoDefinitionEntry = _TmnxFlexAlgoDefinitionEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1)
)
tmnxFlexAlgoDefinitionEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "tmnxFlexAlgoName"),
)
if mibBuilder.loadTexts:
    tmnxFlexAlgoDefinitionEntry.setStatus("current")
_TmnxFlexAlgoName_Type = TNamedItem
_TmnxFlexAlgoName_Object = MibTableColumn
tmnxFlexAlgoName = _TmnxFlexAlgoName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 1),
    _TmnxFlexAlgoName_Type()
)
tmnxFlexAlgoName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxFlexAlgoName.setStatus("current")
_TmnxFlexAlgoRowLstChng_Type = TimeStamp
_TmnxFlexAlgoRowLstChng_Object = MibTableColumn
tmnxFlexAlgoRowLstChng = _TmnxFlexAlgoRowLstChng_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 2),
    _TmnxFlexAlgoRowLstChng_Type()
)
tmnxFlexAlgoRowLstChng.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxFlexAlgoRowLstChng.setStatus("current")
_TmnxFlexAlgoRowStatus_Type = RowStatus
_TmnxFlexAlgoRowStatus_Object = MibTableColumn
tmnxFlexAlgoRowStatus = _TmnxFlexAlgoRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 3),
    _TmnxFlexAlgoRowStatus_Type()
)
tmnxFlexAlgoRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoRowStatus.setStatus("current")


class _TmnxFlexAlgoAdminState_Type(TmnxAdminState):
    """Custom type tmnxFlexAlgoAdminState based on TmnxAdminState"""
    defaultValue = 3


_TmnxFlexAlgoAdminState_Type.__name__ = "TmnxAdminState"
_TmnxFlexAlgoAdminState_Object = MibTableColumn
tmnxFlexAlgoAdminState = _TmnxFlexAlgoAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 4),
    _TmnxFlexAlgoAdminState_Type()
)
tmnxFlexAlgoAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminState.setStatus("current")


class _TmnxFlexAlgoDescription_Type(TItemDescription):
    """Custom type tmnxFlexAlgoDescription based on TItemDescription"""
    defaultValue = OctetString("")


_TmnxFlexAlgoDescription_Type.__name__ = "TItemDescription"
_TmnxFlexAlgoDescription_Object = MibTableColumn
tmnxFlexAlgoDescription = _TmnxFlexAlgoDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 5),
    _TmnxFlexAlgoDescription_Type()
)
tmnxFlexAlgoDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoDescription.setStatus("current")


class _TmnxFlexAlgoMetricType_Type(Integer32):
    """Custom type tmnxFlexAlgoMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("igp", 0),
          ("delay", 1),
          ("teMetric", 2))
    )


_TmnxFlexAlgoMetricType_Type.__name__ = "Integer32"
_TmnxFlexAlgoMetricType_Object = MibTableColumn
tmnxFlexAlgoMetricType = _TmnxFlexAlgoMetricType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 6),
    _TmnxFlexAlgoMetricType_Type()
)
tmnxFlexAlgoMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoMetricType.setStatus("current")


class _TmnxFlexAlgoPriority_Type(Integer32):
    """Custom type tmnxFlexAlgoPriority based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TmnxFlexAlgoPriority_Type.__name__ = "Integer32"
_TmnxFlexAlgoPriority_Object = MibTableColumn
tmnxFlexAlgoPriority = _TmnxFlexAlgoPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 7),
    _TmnxFlexAlgoPriority_Type()
)
tmnxFlexAlgoPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoPriority.setStatus("current")


class _TmnxFlexAlgoFlagsTlv_Type(TmnxEnabledDisabled):
    """Custom type tmnxFlexAlgoFlagsTlv based on TmnxEnabledDisabled"""
    defaultValue = 1


_TmnxFlexAlgoFlagsTlv_Type.__name__ = "TmnxEnabledDisabled"
_TmnxFlexAlgoFlagsTlv_Object = MibTableColumn
tmnxFlexAlgoFlagsTlv = _TmnxFlexAlgoFlagsTlv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 2, 1, 8),
    _TmnxFlexAlgoFlagsTlv_Type()
)
tmnxFlexAlgoFlagsTlv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoFlagsTlv.setStatus("current")
_TmnxFlexAlgoAdminGrpTblLstCh_Type = TimeStamp
_TmnxFlexAlgoAdminGrpTblLstCh_Object = MibScalar
tmnxFlexAlgoAdminGrpTblLstCh = _TmnxFlexAlgoAdminGrpTblLstCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 3),
    _TmnxFlexAlgoAdminGrpTblLstCh_Type()
)
tmnxFlexAlgoAdminGrpTblLstCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpTblLstCh.setStatus("current")
_TmnxFlexAlgoAdminGrpTable_Object = MibTable
tmnxFlexAlgoAdminGrpTable = _TmnxFlexAlgoAdminGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 4)
)
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpTable.setStatus("current")
_TmnxFlexAlgoAdminGrpEntry_Object = MibTableRow
tmnxFlexAlgoAdminGrpEntry = _TmnxFlexAlgoAdminGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 4, 1)
)
tmnxFlexAlgoAdminGrpEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "tmnxFlexAlgoName"),
    (0, "TIMETRA-VRTR-MIB", "tmnxFlexAlgoAdminGrpType"),
    (0, "TIMETRA-VRTR-MIB", "tmnxAdminGrpName"),
)
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpEntry.setStatus("current")


class _TmnxFlexAlgoAdminGrpType_Type(Integer32):
    """Custom type tmnxFlexAlgoAdminGrpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("exclude", 1),
          ("includeAny", 2),
          ("includeAll", 3))
    )


_TmnxFlexAlgoAdminGrpType_Type.__name__ = "Integer32"
_TmnxFlexAlgoAdminGrpType_Object = MibTableColumn
tmnxFlexAlgoAdminGrpType = _TmnxFlexAlgoAdminGrpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 4, 1, 1),
    _TmnxFlexAlgoAdminGrpType_Type()
)
tmnxFlexAlgoAdminGrpType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpType.setStatus("current")
_TmnxFlexAlgoAdminGrpRowLstCh_Type = TimeStamp
_TmnxFlexAlgoAdminGrpRowLstCh_Object = MibTableColumn
tmnxFlexAlgoAdminGrpRowLstCh = _TmnxFlexAlgoAdminGrpRowLstCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 4, 1, 2),
    _TmnxFlexAlgoAdminGrpRowLstCh_Type()
)
tmnxFlexAlgoAdminGrpRowLstCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpRowLstCh.setStatus("current")
_TmnxFlexAlgoAdminGrpRowStatus_Type = RowStatus
_TmnxFlexAlgoAdminGrpRowStatus_Object = MibTableColumn
tmnxFlexAlgoAdminGrpRowStatus = _TmnxFlexAlgoAdminGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 211, 4, 1, 3),
    _TmnxFlexAlgoAdminGrpRowStatus_Type()
)
tmnxFlexAlgoAdminGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxFlexAlgoAdminGrpRowStatus.setStatus("current")
_VRtrBgpEvpnObjs_ObjectIdentity = ObjectIdentity
vRtrBgpEvpnObjs = _VRtrBgpEvpnObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212)
)
_VRtrBgpEvpnTblLastCh_Type = TimeStamp
_VRtrBgpEvpnTblLastCh_Object = MibScalar
vRtrBgpEvpnTblLastCh = _VRtrBgpEvpnTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 1),
    _VRtrBgpEvpnTblLastCh_Type()
)
vRtrBgpEvpnTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnTblLastCh.setStatus("current")
_VRtrBgpEvpnTable_Object = MibTable
vRtrBgpEvpnTable = _VRtrBgpEvpnTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2)
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnTable.setStatus("current")
_VRtrBgpEvpnEntry_Object = MibTableRow
vRtrBgpEvpnEntry = _VRtrBgpEvpnEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1)
)
vRtrBgpEvpnEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnEntry.setStatus("current")


class _VRtrBgpEvpnInstance_Type(Integer32):
    """Custom type vRtrBgpEvpnInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_VRtrBgpEvpnInstance_Type.__name__ = "Integer32"
_VRtrBgpEvpnInstance_Object = MibTableColumn
vRtrBgpEvpnInstance = _VRtrBgpEvpnInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 1),
    _VRtrBgpEvpnInstance_Type()
)
vRtrBgpEvpnInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrBgpEvpnInstance.setStatus("current")
_VRtrBgpEvpnRowStatus_Type = RowStatus
_VRtrBgpEvpnRowStatus_Object = MibTableColumn
vRtrBgpEvpnRowStatus = _VRtrBgpEvpnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 2),
    _VRtrBgpEvpnRowStatus_Type()
)
vRtrBgpEvpnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnRowStatus.setStatus("current")
_VRtrBgpEvpnLastChanged_Type = TimeStamp
_VRtrBgpEvpnLastChanged_Object = MibTableColumn
vRtrBgpEvpnLastChanged = _VRtrBgpEvpnLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 3),
    _VRtrBgpEvpnLastChanged_Type()
)
vRtrBgpEvpnLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnLastChanged.setStatus("current")


class _VRtrBgpEvpnAdminState_Type(TmnxEnabledDisabled):
    """Custom type vRtrBgpEvpnAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrBgpEvpnAdminState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrBgpEvpnAdminState_Object = MibTableColumn
vRtrBgpEvpnAdminState = _VRtrBgpEvpnAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 4),
    _VRtrBgpEvpnAdminState_Type()
)
vRtrBgpEvpnAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAdminState.setStatus("current")


class _VRtrBgpEvpnDefRtTag_Type(Unsigned32):
    """Custom type vRtrBgpEvpnDefRtTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrBgpEvpnDefRtTag_Type.__name__ = "Unsigned32"
_VRtrBgpEvpnDefRtTag_Object = MibTableColumn
vRtrBgpEvpnDefRtTag = _VRtrBgpEvpnDefRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 8),
    _VRtrBgpEvpnDefRtTag_Type()
)
vRtrBgpEvpnDefRtTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnDefRtTag.setStatus("current")


class _VRtrBgpEvpnVrfRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type vRtrBgpEvpnVrfRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_VRtrBgpEvpnVrfRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_VRtrBgpEvpnVrfRD_Object = MibTableColumn
vRtrBgpEvpnVrfRD = _VRtrBgpEvpnVrfRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 9),
    _VRtrBgpEvpnVrfRD_Type()
)
vRtrBgpEvpnVrfRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfRD.setStatus("current")


class _VRtrBgpEvpnExportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrBgpEvpnExportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrBgpEvpnExportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrBgpEvpnExportRteTarget_Object = MibTableColumn
vRtrBgpEvpnExportRteTarget = _VRtrBgpEvpnExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 10),
    _VRtrBgpEvpnExportRteTarget_Type()
)
vRtrBgpEvpnExportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnExportRteTarget.setStatus("current")


class _VRtrBgpEvpnImportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrBgpEvpnImportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrBgpEvpnImportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrBgpEvpnImportRteTarget_Object = MibTableColumn
vRtrBgpEvpnImportRteTarget = _VRtrBgpEvpnImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 11),
    _VRtrBgpEvpnImportRteTarget_Type()
)
vRtrBgpEvpnImportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnImportRteTarget.setStatus("current")


class _VRtrBgpEvpnAutoRD_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoRD based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoRD_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoRD_Object = MibTableColumn
vRtrBgpEvpnAutoRD = _VRtrBgpEvpnAutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 12),
    _VRtrBgpEvpnAutoRD_Type()
)
vRtrBgpEvpnAutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoRD.setStatus("current")
_VRtrBgpEvpnOperRD_Type = TmnxVPNRouteDistinguisher
_VRtrBgpEvpnOperRD_Object = MibTableColumn
vRtrBgpEvpnOperRD = _VRtrBgpEvpnOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 13),
    _VRtrBgpEvpnOperRD_Type()
)
vRtrBgpEvpnOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnOperRD.setStatus("current")
_VRtrBgpEvpnOperRDType_Type = TmnxRouteDistType
_VRtrBgpEvpnOperRDType_Object = MibTableColumn
vRtrBgpEvpnOperRDType = _VRtrBgpEvpnOperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 14),
    _VRtrBgpEvpnOperRDType_Type()
)
vRtrBgpEvpnOperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnOperRDType.setStatus("current")
_VRtrBgpEvpnVrfTarget_Type = TNamedItemOrEmpty
_VRtrBgpEvpnVrfTarget_Object = MibTableColumn
vRtrBgpEvpnVrfTarget = _VRtrBgpEvpnVrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 15),
    _VRtrBgpEvpnVrfTarget_Type()
)
vRtrBgpEvpnVrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfTarget.setStatus("current")


class _VRtrBgpEvpnDomainId_Type(TmnxDPathDomainId):
    """Custom type vRtrBgpEvpnDomainId based on TmnxDPathDomainId"""
    defaultHexValue = "000000000000"


_VRtrBgpEvpnDomainId_Type.__name__ = "TmnxDPathDomainId"
_VRtrBgpEvpnDomainId_Object = MibTableColumn
vRtrBgpEvpnDomainId = _VRtrBgpEvpnDomainId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 16),
    _VRtrBgpEvpnDomainId_Type()
)
vRtrBgpEvpnDomainId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnDomainId.setStatus("current")


class _VRtrBgpEvpnDynEgrLblLmt_Type(TruthValue):
    """Custom type vRtrBgpEvpnDynEgrLblLmt based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnDynEgrLblLmt_Type.__name__ = "TruthValue"
_VRtrBgpEvpnDynEgrLblLmt_Object = MibTableColumn
vRtrBgpEvpnDynEgrLblLmt = _VRtrBgpEvpnDynEgrLblLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 2, 1, 17),
    _VRtrBgpEvpnDynEgrLblLmt_Type()
)
vRtrBgpEvpnDynEgrLblLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnDynEgrLblLmt.setStatus("current")
_VRtrBgpEvpnMplsTblLastCh_Type = TimeStamp
_VRtrBgpEvpnMplsTblLastCh_Object = MibScalar
vRtrBgpEvpnMplsTblLastCh = _VRtrBgpEvpnMplsTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 3),
    _VRtrBgpEvpnMplsTblLastCh_Type()
)
vRtrBgpEvpnMplsTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsTblLastCh.setStatus("current")
_VRtrBgpEvpnMplsTable_Object = MibTable
vRtrBgpEvpnMplsTable = _VRtrBgpEvpnMplsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 4)
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsTable.setStatus("current")
_VRtrBgpEvpnMplsEntry_Object = MibTableRow
vRtrBgpEvpnMplsEntry = _VRtrBgpEvpnMplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 4, 1)
)
vRtrBgpEvpnMplsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsEntry.setStatus("current")
_VRtrBgpEvpnMplsLastChanged_Type = TimeStamp
_VRtrBgpEvpnMplsLastChanged_Object = MibTableColumn
vRtrBgpEvpnMplsLastChanged = _VRtrBgpEvpnMplsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 4, 1, 1),
    _VRtrBgpEvpnMplsLastChanged_Type()
)
vRtrBgpEvpnMplsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsLastChanged.setStatus("current")


class _VRtrBgpEvpnMplsTnlEncapMpls_Type(TruthValue):
    """Custom type vRtrBgpEvpnMplsTnlEncapMpls based on TruthValue"""
    defaultValue = 1


_VRtrBgpEvpnMplsTnlEncapMpls_Type.__name__ = "TruthValue"
_VRtrBgpEvpnMplsTnlEncapMpls_Object = MibTableColumn
vRtrBgpEvpnMplsTnlEncapMpls = _VRtrBgpEvpnMplsTnlEncapMpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 4, 1, 2),
    _VRtrBgpEvpnMplsTnlEncapMpls_Type()
)
vRtrBgpEvpnMplsTnlEncapMpls.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsTnlEncapMpls.setStatus("current")


class _VRtrBgpEvpnMplsTnlEncapMoUdp_Type(TruthValue):
    """Custom type vRtrBgpEvpnMplsTnlEncapMoUdp based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnMplsTnlEncapMoUdp_Type.__name__ = "TruthValue"
_VRtrBgpEvpnMplsTnlEncapMoUdp_Object = MibTableColumn
vRtrBgpEvpnMplsTnlEncapMoUdp = _VRtrBgpEvpnMplsTnlEncapMoUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 4, 1, 3),
    _VRtrBgpEvpnMplsTnlEncapMoUdp_Type()
)
vRtrBgpEvpnMplsTnlEncapMoUdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnMplsTnlEncapMoUdp.setStatus("current")
_VRtrBgpEvpnABTTblLastCh_Type = TimeStamp
_VRtrBgpEvpnABTTblLastCh_Object = MibScalar
vRtrBgpEvpnABTTblLastCh = _VRtrBgpEvpnABTTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 5),
    _VRtrBgpEvpnABTTblLastCh_Type()
)
vRtrBgpEvpnABTTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnABTTblLastCh.setStatus("current")
_VRtrBgpEvpnAutoBndTnlTable_Object = MibTable
vRtrBgpEvpnAutoBndTnlTable = _VRtrBgpEvpnAutoBndTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6)
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlTable.setStatus("current")
_VRtrBgpEvpnAutoBndTnlEntry_Object = MibTableRow
vRtrBgpEvpnAutoBndTnlEntry = _VRtrBgpEvpnAutoBndTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1)
)
vRtrBgpEvpnAutoBndTnlEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlEntry.setStatus("current")
_VRtrBgpEvpnAutoBndTnlLastChg_Type = TimeStamp
_VRtrBgpEvpnAutoBndTnlLastChg_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlLastChg = _VRtrBgpEvpnAutoBndTnlLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 1),
    _VRtrBgpEvpnAutoBndTnlLastChg_Type()
)
vRtrBgpEvpnAutoBndTnlLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlLastChg.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlStatus_Type(TResolveStatus):
    """Custom type vRtrBgpEvpnAutoBndTnlStatus based on TResolveStatus"""
    defaultValue = 0


_VRtrBgpEvpnAutoBndTnlStatus_Type.__name__ = "TResolveStatus"
_VRtrBgpEvpnAutoBndTnlStatus_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlStatus = _VRtrBgpEvpnAutoBndTnlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 2),
    _VRtrBgpEvpnAutoBndTnlStatus_Type()
)
vRtrBgpEvpnAutoBndTnlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlStatus.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlTag_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlTag based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlTag_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlTag_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlTag = _VRtrBgpEvpnAutoBndTnlTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 3),
    _VRtrBgpEvpnAutoBndTnlTag_Type()
)
vRtrBgpEvpnAutoBndTnlTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlTag.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlEcmp_Type(Unsigned32):
    """Custom type vRtrBgpEvpnAutoBndTnlEcmp based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_VRtrBgpEvpnAutoBndTnlEcmp_Type.__name__ = "Unsigned32"
_VRtrBgpEvpnAutoBndTnlEcmp_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlEcmp = _VRtrBgpEvpnAutoBndTnlEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 4),
    _VRtrBgpEvpnAutoBndTnlEcmp_Type()
)
vRtrBgpEvpnAutoBndTnlEcmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlEcmp.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlLdp_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlLdp based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlLdp_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlLdp_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlLdp = _VRtrBgpEvpnAutoBndTnlLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 5),
    _VRtrBgpEvpnAutoBndTnlLdp_Type()
)
vRtrBgpEvpnAutoBndTnlLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlLdp.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlRsvpTe_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlRsvpTe based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlRsvpTe_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlRsvpTe_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlRsvpTe = _VRtrBgpEvpnAutoBndTnlRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 6),
    _VRtrBgpEvpnAutoBndTnlRsvpTe_Type()
)
vRtrBgpEvpnAutoBndTnlRsvpTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlRsvpTe.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlSrIsis_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlSrIsis based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlSrIsis_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlSrIsis_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlSrIsis = _VRtrBgpEvpnAutoBndTnlSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 7),
    _VRtrBgpEvpnAutoBndTnlSrIsis_Type()
)
vRtrBgpEvpnAutoBndTnlSrIsis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlSrIsis.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlSrOspf_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlSrOspf based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlSrOspf_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlSrOspf_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlSrOspf = _VRtrBgpEvpnAutoBndTnlSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 8),
    _VRtrBgpEvpnAutoBndTnlSrOspf_Type()
)
vRtrBgpEvpnAutoBndTnlSrOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlSrOspf.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlBgp_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlBgp based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlBgp_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlBgp_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlBgp = _VRtrBgpEvpnAutoBndTnlBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 9),
    _VRtrBgpEvpnAutoBndTnlBgp_Type()
)
vRtrBgpEvpnAutoBndTnlBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlBgp.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlSrTe_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlSrTe based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlSrTe_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlSrTe_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlSrTe = _VRtrBgpEvpnAutoBndTnlSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 10),
    _VRtrBgpEvpnAutoBndTnlSrTe_Type()
)
vRtrBgpEvpnAutoBndTnlSrTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlSrTe.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlUdp_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlUdp based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlUdp_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlUdp_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlUdp = _VRtrBgpEvpnAutoBndTnlUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 11),
    _VRtrBgpEvpnAutoBndTnlUdp_Type()
)
vRtrBgpEvpnAutoBndTnlUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlUdp.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlSrPlcy_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlSrPlcy based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlSrPlcy_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlSrPlcy_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlSrPlcy = _VRtrBgpEvpnAutoBndTnlSrPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 12),
    _VRtrBgpEvpnAutoBndTnlSrPlcy_Type()
)
vRtrBgpEvpnAutoBndTnlSrPlcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlSrPlcy.setStatus("current")


class _VRtrBgpEvpnBndTnlMplsFwdPlcy_Type(TruthValue):
    """Custom type vRtrBgpEvpnBndTnlMplsFwdPlcy based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnBndTnlMplsFwdPlcy_Type.__name__ = "TruthValue"
_VRtrBgpEvpnBndTnlMplsFwdPlcy_Object = MibTableColumn
vRtrBgpEvpnBndTnlMplsFwdPlcy = _VRtrBgpEvpnBndTnlMplsFwdPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 13),
    _VRtrBgpEvpnBndTnlMplsFwdPlcy_Type()
)
vRtrBgpEvpnBndTnlMplsFwdPlcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnBndTnlMplsFwdPlcy.setStatus("current")


class _VRtrBgpEvpnBndTnlRibApi_Type(TruthValue):
    """Custom type vRtrBgpEvpnBndTnlRibApi based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnBndTnlRibApi_Type.__name__ = "TruthValue"
_VRtrBgpEvpnBndTnlRibApi_Object = MibTableColumn
vRtrBgpEvpnBndTnlRibApi = _VRtrBgpEvpnBndTnlRibApi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 14),
    _VRtrBgpEvpnBndTnlRibApi_Type()
)
vRtrBgpEvpnBndTnlRibApi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnBndTnlRibApi.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlSrOspf3_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlSrOspf3 based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlSrOspf3_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlSrOspf3_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlSrOspf3 = _VRtrBgpEvpnAutoBndTnlSrOspf3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 15),
    _VRtrBgpEvpnAutoBndTnlSrOspf3_Type()
)
vRtrBgpEvpnAutoBndTnlSrOspf3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlSrOspf3.setStatus("current")


class _VRtrBgpEvpnAutoBndTnlFlexAlgoFb_Type(TruthValue):
    """Custom type vRtrBgpEvpnAutoBndTnlFlexAlgoFb based on TruthValue"""
    defaultValue = 2


_VRtrBgpEvpnAutoBndTnlFlexAlgoFb_Type.__name__ = "TruthValue"
_VRtrBgpEvpnAutoBndTnlFlexAlgoFb_Object = MibTableColumn
vRtrBgpEvpnAutoBndTnlFlexAlgoFb = _VRtrBgpEvpnAutoBndTnlFlexAlgoFb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 6, 1, 16),
    _VRtrBgpEvpnAutoBndTnlFlexAlgoFb_Type()
)
vRtrBgpEvpnAutoBndTnlFlexAlgoFb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vRtrBgpEvpnAutoBndTnlFlexAlgoFb.setStatus("current")
_VRtrBgpEvpnVrfPolicyTblLastCh_Type = TimeStamp
_VRtrBgpEvpnVrfPolicyTblLastCh_Object = MibScalar
vRtrBgpEvpnVrfPolicyTblLastCh = _VRtrBgpEvpnVrfPolicyTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 7),
    _VRtrBgpEvpnVrfPolicyTblLastCh_Type()
)
vRtrBgpEvpnVrfPolicyTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyTblLastCh.setStatus("current")
_VRtrBgpEvpnVrfPolicyTable_Object = MibTable
vRtrBgpEvpnVrfPolicyTable = _VRtrBgpEvpnVrfPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8)
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyTable.setStatus("current")
_VRtrBgpEvpnVrfPolicyEntry_Object = MibTableRow
vRtrBgpEvpnVrfPolicyEntry = _VRtrBgpEvpnVrfPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1)
)
vRtrBgpEvpnVrfPolicyEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyEntry.setStatus("current")
_VRtrBgpEvpnVrfPolicyLastChg_Type = TimeStamp
_VRtrBgpEvpnVrfPolicyLastChg_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyLastChg = _VRtrBgpEvpnVrfPolicyLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 1),
    _VRtrBgpEvpnVrfPolicyLastChg_Type()
)
vRtrBgpEvpnVrfPolicyLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyLastChg.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp1_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp1 = _VRtrBgpEvpnVrfPolicyImp1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 2),
    _VRtrBgpEvpnVrfPolicyImp1_Type()
)
vRtrBgpEvpnVrfPolicyImp1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp1.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp2_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp2 = _VRtrBgpEvpnVrfPolicyImp2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 3),
    _VRtrBgpEvpnVrfPolicyImp2_Type()
)
vRtrBgpEvpnVrfPolicyImp2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp2.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp3_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp3 = _VRtrBgpEvpnVrfPolicyImp3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 4),
    _VRtrBgpEvpnVrfPolicyImp3_Type()
)
vRtrBgpEvpnVrfPolicyImp3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp3.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp4_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp4 = _VRtrBgpEvpnVrfPolicyImp4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 5),
    _VRtrBgpEvpnVrfPolicyImp4_Type()
)
vRtrBgpEvpnVrfPolicyImp4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp4.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp5_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp5 = _VRtrBgpEvpnVrfPolicyImp5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 6),
    _VRtrBgpEvpnVrfPolicyImp5_Type()
)
vRtrBgpEvpnVrfPolicyImp5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp5.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp6_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp6 = _VRtrBgpEvpnVrfPolicyImp6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 7),
    _VRtrBgpEvpnVrfPolicyImp6_Type()
)
vRtrBgpEvpnVrfPolicyImp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp6.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp7_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp7 = _VRtrBgpEvpnVrfPolicyImp7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 8),
    _VRtrBgpEvpnVrfPolicyImp7_Type()
)
vRtrBgpEvpnVrfPolicyImp7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp7.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp8_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp8 = _VRtrBgpEvpnVrfPolicyImp8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 9),
    _VRtrBgpEvpnVrfPolicyImp8_Type()
)
vRtrBgpEvpnVrfPolicyImp8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp8.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp9_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp9 = _VRtrBgpEvpnVrfPolicyImp9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 10),
    _VRtrBgpEvpnVrfPolicyImp9_Type()
)
vRtrBgpEvpnVrfPolicyImp9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp9.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp10_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp10 = _VRtrBgpEvpnVrfPolicyImp10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 11),
    _VRtrBgpEvpnVrfPolicyImp10_Type()
)
vRtrBgpEvpnVrfPolicyImp10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp10.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp11_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp11 = _VRtrBgpEvpnVrfPolicyImp11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 12),
    _VRtrBgpEvpnVrfPolicyImp11_Type()
)
vRtrBgpEvpnVrfPolicyImp11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp11.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp12_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp12 = _VRtrBgpEvpnVrfPolicyImp12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 13),
    _VRtrBgpEvpnVrfPolicyImp12_Type()
)
vRtrBgpEvpnVrfPolicyImp12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp12.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp13_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp13 = _VRtrBgpEvpnVrfPolicyImp13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 14),
    _VRtrBgpEvpnVrfPolicyImp13_Type()
)
vRtrBgpEvpnVrfPolicyImp13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp13.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp14_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp14 = _VRtrBgpEvpnVrfPolicyImp14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 15),
    _VRtrBgpEvpnVrfPolicyImp14_Type()
)
vRtrBgpEvpnVrfPolicyImp14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp14.setStatus("current")


class _VRtrBgpEvpnVrfPolicyImp15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyImp15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyImp15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyImp15_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyImp15 = _VRtrBgpEvpnVrfPolicyImp15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 16),
    _VRtrBgpEvpnVrfPolicyImp15_Type()
)
vRtrBgpEvpnVrfPolicyImp15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyImp15.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp1_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp1 = _VRtrBgpEvpnVrfPolicyExp1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 17),
    _VRtrBgpEvpnVrfPolicyExp1_Type()
)
vRtrBgpEvpnVrfPolicyExp1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp1.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp2_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp2 = _VRtrBgpEvpnVrfPolicyExp2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 18),
    _VRtrBgpEvpnVrfPolicyExp2_Type()
)
vRtrBgpEvpnVrfPolicyExp2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp2.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp3_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp3 = _VRtrBgpEvpnVrfPolicyExp3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 19),
    _VRtrBgpEvpnVrfPolicyExp3_Type()
)
vRtrBgpEvpnVrfPolicyExp3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp3.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp4_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp4 = _VRtrBgpEvpnVrfPolicyExp4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 20),
    _VRtrBgpEvpnVrfPolicyExp4_Type()
)
vRtrBgpEvpnVrfPolicyExp4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp4.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp5_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp5 = _VRtrBgpEvpnVrfPolicyExp5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 21),
    _VRtrBgpEvpnVrfPolicyExp5_Type()
)
vRtrBgpEvpnVrfPolicyExp5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp5.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp6_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp6 = _VRtrBgpEvpnVrfPolicyExp6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 22),
    _VRtrBgpEvpnVrfPolicyExp6_Type()
)
vRtrBgpEvpnVrfPolicyExp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp6.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp7_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp7 = _VRtrBgpEvpnVrfPolicyExp7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 23),
    _VRtrBgpEvpnVrfPolicyExp7_Type()
)
vRtrBgpEvpnVrfPolicyExp7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp7.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp8_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp8 = _VRtrBgpEvpnVrfPolicyExp8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 24),
    _VRtrBgpEvpnVrfPolicyExp8_Type()
)
vRtrBgpEvpnVrfPolicyExp8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp8.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp9_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp9 = _VRtrBgpEvpnVrfPolicyExp9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 25),
    _VRtrBgpEvpnVrfPolicyExp9_Type()
)
vRtrBgpEvpnVrfPolicyExp9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp9.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp10_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp10 = _VRtrBgpEvpnVrfPolicyExp10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 26),
    _VRtrBgpEvpnVrfPolicyExp10_Type()
)
vRtrBgpEvpnVrfPolicyExp10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp10.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp11_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp11 = _VRtrBgpEvpnVrfPolicyExp11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 27),
    _VRtrBgpEvpnVrfPolicyExp11_Type()
)
vRtrBgpEvpnVrfPolicyExp11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp11.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp12_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp12 = _VRtrBgpEvpnVrfPolicyExp12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 28),
    _VRtrBgpEvpnVrfPolicyExp12_Type()
)
vRtrBgpEvpnVrfPolicyExp12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp12.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp13_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp13 = _VRtrBgpEvpnVrfPolicyExp13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 29),
    _VRtrBgpEvpnVrfPolicyExp13_Type()
)
vRtrBgpEvpnVrfPolicyExp13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp13.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp14_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp14 = _VRtrBgpEvpnVrfPolicyExp14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 30),
    _VRtrBgpEvpnVrfPolicyExp14_Type()
)
vRtrBgpEvpnVrfPolicyExp14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp14.setStatus("current")


class _VRtrBgpEvpnVrfPolicyExp15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpEvpnVrfPolicyExp15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpEvpnVrfPolicyExp15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpEvpnVrfPolicyExp15_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyExp15 = _VRtrBgpEvpnVrfPolicyExp15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 31),
    _VRtrBgpEvpnVrfPolicyExp15_Type()
)
vRtrBgpEvpnVrfPolicyExp15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyExp15.setStatus("current")


class _VRtrBgpEvpnVrfPolicyCreateOrig_Type(TmnxCreateOrigin):
    """Custom type vRtrBgpEvpnVrfPolicyCreateOrig based on TmnxCreateOrigin"""
    defaultValue = 1


_VRtrBgpEvpnVrfPolicyCreateOrig_Type.__name__ = "TmnxCreateOrigin"
_VRtrBgpEvpnVrfPolicyCreateOrig_Object = MibTableColumn
vRtrBgpEvpnVrfPolicyCreateOrig = _VRtrBgpEvpnVrfPolicyCreateOrig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 212, 8, 1, 32),
    _VRtrBgpEvpnVrfPolicyCreateOrig_Type()
)
vRtrBgpEvpnVrfPolicyCreateOrig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpEvpnVrfPolicyCreateOrig.setStatus("current")
_VRtrIfEthLoopbackObjs_ObjectIdentity = ObjectIdentity
vRtrIfEthLoopbackObjs = _VRtrIfEthLoopbackObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213)
)
_VRtrIfEthLoopbackTblLastCh_Type = TimeStamp
_VRtrIfEthLoopbackTblLastCh_Object = MibScalar
vRtrIfEthLoopbackTblLastCh = _VRtrIfEthLoopbackTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 1),
    _VRtrIfEthLoopbackTblLastCh_Type()
)
vRtrIfEthLoopbackTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackTblLastCh.setStatus("current")
_VRtrIfEthLoopbackTable_Object = MibTable
vRtrIfEthLoopbackTable = _VRtrIfEthLoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 2)
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackTable.setStatus("current")
_VRtrIfEthLoopbackEntry_Object = MibTableRow
vRtrIfEthLoopbackEntry = _VRtrIfEthLoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 2, 1)
)
vRtrIfEthLoopbackEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackEntry.setStatus("current")
_VRtrIfEthLoopbackRowStatus_Type = RowStatus
_VRtrIfEthLoopbackRowStatus_Object = MibTableColumn
vRtrIfEthLoopbackRowStatus = _VRtrIfEthLoopbackRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 2, 1, 1),
    _VRtrIfEthLoopbackRowStatus_Type()
)
vRtrIfEthLoopbackRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackRowStatus.setStatus("current")


class _VRtrIfEthLoopbackMacSwap_Type(TmnxEnabledDisabled):
    """Custom type vRtrIfEthLoopbackMacSwap based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrIfEthLoopbackMacSwap_Type.__name__ = "TmnxEnabledDisabled"
_VRtrIfEthLoopbackMacSwap_Object = MibTableColumn
vRtrIfEthLoopbackMacSwap = _VRtrIfEthLoopbackMacSwap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 2, 1, 2),
    _VRtrIfEthLoopbackMacSwap_Type()
)
vRtrIfEthLoopbackMacSwap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackMacSwap.setStatus("current")
_VRtrIfEthLoopbackOperState_Type = TmnxOperState
_VRtrIfEthLoopbackOperState_Object = MibTableColumn
vRtrIfEthLoopbackOperState = _VRtrIfEthLoopbackOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 213, 2, 1, 3),
    _VRtrIfEthLoopbackOperState_Type()
)
vRtrIfEthLoopbackOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackOperState.setStatus("current")
_VRtrPlcyAcctPolicerTblLstChgd_Type = TimeStamp
_VRtrPlcyAcctPolicerTblLstChgd_Object = MibScalar
vRtrPlcyAcctPolicerTblLstChgd = _VRtrPlcyAcctPolicerTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 214),
    _VRtrPlcyAcctPolicerTblLstChgd_Type()
)
vRtrPlcyAcctPolicerTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerTblLstChgd.setStatus("current")
_VRtrPlcyAcctPolicerTable_Object = MibTable
vRtrPlcyAcctPolicerTable = _VRtrPlcyAcctPolicerTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerTable.setStatus("current")
_VRtrPlcyAcctPolicerEntry_Object = MibTableRow
vRtrPlcyAcctPolicerEntry = _VRtrPlcyAcctPolicerEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1)
)
vRtrPlcyAcctPolicerEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateName"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerIndex"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerEntry.setStatus("current")
_VRtrPlcyAcctPolicerIndex_Type = TPlcyAcctPolicerId
_VRtrPlcyAcctPolicerIndex_Object = MibTableColumn
vRtrPlcyAcctPolicerIndex = _VRtrPlcyAcctPolicerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 1),
    _VRtrPlcyAcctPolicerIndex_Type()
)
vRtrPlcyAcctPolicerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerIndex.setStatus("current")
_VRtrPlcyAcctPolicerRowStatus_Type = RowStatus
_VRtrPlcyAcctPolicerRowStatus_Object = MibTableColumn
vRtrPlcyAcctPolicerRowStatus = _VRtrPlcyAcctPolicerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 2),
    _VRtrPlcyAcctPolicerRowStatus_Type()
)
vRtrPlcyAcctPolicerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerRowStatus.setStatus("current")
_VRtrPlcyAcctPolicerLastChgd_Type = TimeStamp
_VRtrPlcyAcctPolicerLastChgd_Object = MibTableColumn
vRtrPlcyAcctPolicerLastChgd = _VRtrPlcyAcctPolicerLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 3),
    _VRtrPlcyAcctPolicerLastChgd_Type()
)
vRtrPlcyAcctPolicerLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerLastChgd.setStatus("current")


class _VRtrPlcyAcctPolicerPeakRateHi_Type(TmnxQosRateHigh32):
    """Custom type vRtrPlcyAcctPolicerPeakRateHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_VRtrPlcyAcctPolicerPeakRateHi_Type.__name__ = "TmnxQosRateHigh32"
_VRtrPlcyAcctPolicerPeakRateHi_Object = MibTableColumn
vRtrPlcyAcctPolicerPeakRateHi = _VRtrPlcyAcctPolicerPeakRateHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 4),
    _VRtrPlcyAcctPolicerPeakRateHi_Type()
)
vRtrPlcyAcctPolicerPeakRateHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerPeakRateHi.setStatus("current")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerPeakRateHi.setUnits("kilobps")


class _VRtrPlcyAcctPolicerPeakRateLo_Type(TmnxQosRateLow32):
    """Custom type vRtrPlcyAcctPolicerPeakRateLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_VRtrPlcyAcctPolicerPeakRateLo_Type.__name__ = "TmnxQosRateLow32"
_VRtrPlcyAcctPolicerPeakRateLo_Object = MibTableColumn
vRtrPlcyAcctPolicerPeakRateLo = _VRtrPlcyAcctPolicerPeakRateLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 5),
    _VRtrPlcyAcctPolicerPeakRateLo_Type()
)
vRtrPlcyAcctPolicerPeakRateLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerPeakRateLo.setStatus("current")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerPeakRateLo.setUnits("kilobps")


class _VRtrPlcyAcctPolicerMaxBurstSize_Type(TPlcrBurstSizeBytes):
    """Custom type vRtrPlcyAcctPolicerMaxBurstSize based on TPlcrBurstSizeBytes"""
    defaultValue = -1


_VRtrPlcyAcctPolicerMaxBurstSize_Type.__name__ = "TPlcrBurstSizeBytes"
_VRtrPlcyAcctPolicerMaxBurstSize_Object = MibTableColumn
vRtrPlcyAcctPolicerMaxBurstSize = _VRtrPlcyAcctPolicerMaxBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 215, 1, 6),
    _VRtrPlcyAcctPolicerMaxBurstSize_Type()
)
vRtrPlcyAcctPolicerMaxBurstSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerMaxBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerMaxBurstSize.setUnits("bytes")
_VRtrPlcyAcctIfPolStatsTblLstChgd_Type = TimeStamp
_VRtrPlcyAcctIfPolStatsTblLstChgd_Object = MibScalar
vRtrPlcyAcctIfPolStatsTblLstChgd = _VRtrPlcyAcctIfPolStatsTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 216),
    _VRtrPlcyAcctIfPolStatsTblLstChgd_Type()
)
vRtrPlcyAcctIfPolStatsTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctIfPolStatsTblLstChgd.setStatus("current")
_VRtrPlcyAcctIntfPolStatsTable_Object = MibTable
vRtrPlcyAcctIntfPolStatsTable = _VRtrPlcyAcctIntfPolStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217)
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctIntfPolStatsTable.setStatus("current")
_VRtrPlcyAcctIntfPolStatsEntry_Object = MibTableRow
vRtrPlcyAcctIntfPolStatsEntry = _VRtrPlcyAcctIntfPolStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1)
)
vRtrPlcyAcctIntfPolStatsEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrIfIndex"),
    (0, "TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerIndex"),
)
if mibBuilder.loadTexts:
    vRtrPlcyAcctIntfPolStatsEntry.setStatus("current")
_VRtrPlcyAcctPolicerDropPkts_Type = Counter64
_VRtrPlcyAcctPolicerDropPkts_Object = MibTableColumn
vRtrPlcyAcctPolicerDropPkts = _VRtrPlcyAcctPolicerDropPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1, 1),
    _VRtrPlcyAcctPolicerDropPkts_Type()
)
vRtrPlcyAcctPolicerDropPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerDropPkts.setStatus("current")
_VRtrPlcyAcctPolicerDropBytes_Type = Counter64
_VRtrPlcyAcctPolicerDropBytes_Object = MibTableColumn
vRtrPlcyAcctPolicerDropBytes = _VRtrPlcyAcctPolicerDropBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1, 2),
    _VRtrPlcyAcctPolicerDropBytes_Type()
)
vRtrPlcyAcctPolicerDropBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerDropBytes.setStatus("current")
_VRtrPlcyAcctPolicerFwdPkts_Type = Counter64
_VRtrPlcyAcctPolicerFwdPkts_Object = MibTableColumn
vRtrPlcyAcctPolicerFwdPkts = _VRtrPlcyAcctPolicerFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1, 3),
    _VRtrPlcyAcctPolicerFwdPkts_Type()
)
vRtrPlcyAcctPolicerFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerFwdPkts.setStatus("current")
_VRtrPlcyAcctPolicerFwdBytes_Type = Counter64
_VRtrPlcyAcctPolicerFwdBytes_Object = MibTableColumn
vRtrPlcyAcctPolicerFwdBytes = _VRtrPlcyAcctPolicerFwdBytes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1, 4),
    _VRtrPlcyAcctPolicerFwdBytes_Type()
)
vRtrPlcyAcctPolicerFwdBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerFwdBytes.setStatus("current")
_VRtrPlcyAcctPolicerIncompleteCnt_Type = TruthValue
_VRtrPlcyAcctPolicerIncompleteCnt_Object = MibTableColumn
vRtrPlcyAcctPolicerIncompleteCnt = _VRtrPlcyAcctPolicerIncompleteCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 217, 1, 5),
    _VRtrPlcyAcctPolicerIncompleteCnt_Type()
)
vRtrPlcyAcctPolicerIncompleteCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrPlcyAcctPolicerIncompleteCnt.setStatus("current")
_VRtrBgpSrv6Objs_ObjectIdentity = ObjectIdentity
vRtrBgpSrv6Objs = _VRtrBgpSrv6Objs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218)
)
_VRtrBgpSrv6TblLastCh_Type = TimeStamp
_VRtrBgpSrv6TblLastCh_Object = MibScalar
vRtrBgpSrv6TblLastCh = _VRtrBgpSrv6TblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 1),
    _VRtrBgpSrv6TblLastCh_Type()
)
vRtrBgpSrv6TblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6TblLastCh.setStatus("current")
_VRtrBgpSrv6Table_Object = MibTable
vRtrBgpSrv6Table = _VRtrBgpSrv6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2)
)
if mibBuilder.loadTexts:
    vRtrBgpSrv6Table.setStatus("current")
_VRtrBgpSrv6Entry_Object = MibTableRow
vRtrBgpSrv6Entry = _VRtrBgpSrv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1)
)
vRtrBgpSrv6Entry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpSrv6BgpInstType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpSrv6BgpInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpSrv6Entry.setStatus("current")


class _VRtrBgpSrv6BgpInstType_Type(Integer32):
    """Custom type vRtrBgpSrv6BgpInstType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipvpn", 1),
          ("evpn", 2))
    )


_VRtrBgpSrv6BgpInstType_Type.__name__ = "Integer32"
_VRtrBgpSrv6BgpInstType_Object = MibTableColumn
vRtrBgpSrv6BgpInstType = _VRtrBgpSrv6BgpInstType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 1),
    _VRtrBgpSrv6BgpInstType_Type()
)
vRtrBgpSrv6BgpInstType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrBgpSrv6BgpInstType.setStatus("current")


class _VRtrBgpSrv6BgpInstance_Type(Integer32):
    """Custom type vRtrBgpSrv6BgpInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_VRtrBgpSrv6BgpInstance_Type.__name__ = "Integer32"
_VRtrBgpSrv6BgpInstance_Object = MibTableColumn
vRtrBgpSrv6BgpInstance = _VRtrBgpSrv6BgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 2),
    _VRtrBgpSrv6BgpInstance_Type()
)
vRtrBgpSrv6BgpInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vRtrBgpSrv6BgpInstance.setStatus("current")
_VRtrBgpSrv6RowStatus_Type = RowStatus
_VRtrBgpSrv6RowStatus_Object = MibTableColumn
vRtrBgpSrv6RowStatus = _VRtrBgpSrv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 3),
    _VRtrBgpSrv6RowStatus_Type()
)
vRtrBgpSrv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6RowStatus.setStatus("current")
_VRtrBgpSrv6LastChanged_Type = TimeStamp
_VRtrBgpSrv6LastChanged_Object = MibTableColumn
vRtrBgpSrv6LastChanged = _VRtrBgpSrv6LastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 4),
    _VRtrBgpSrv6LastChanged_Type()
)
vRtrBgpSrv6LastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6LastChanged.setStatus("current")


class _VRtrBgpSrv6AdminState_Type(TmnxEnabledDisabled):
    """Custom type vRtrBgpSrv6AdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_VRtrBgpSrv6AdminState_Type.__name__ = "TmnxEnabledDisabled"
_VRtrBgpSrv6AdminState_Object = MibTableColumn
vRtrBgpSrv6AdminState = _VRtrBgpSrv6AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 5),
    _VRtrBgpSrv6AdminState_Type()
)
vRtrBgpSrv6AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6AdminState.setStatus("current")


class _VRtrBgpSrv6Instance_Type(Integer32):
    """Custom type vRtrBgpSrv6Instance based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_VRtrBgpSrv6Instance_Type.__name__ = "Integer32"
_VRtrBgpSrv6Instance_Object = MibTableColumn
vRtrBgpSrv6Instance = _VRtrBgpSrv6Instance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 6),
    _VRtrBgpSrv6Instance_Type()
)
vRtrBgpSrv6Instance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6Instance.setStatus("current")


class _VRtrBgpSrv6DefLocator_Type(TLNamedItemOrEmpty):
    """Custom type vRtrBgpSrv6DefLocator based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrBgpSrv6DefLocator_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrBgpSrv6DefLocator_Object = MibTableColumn
vRtrBgpSrv6DefLocator = _VRtrBgpSrv6DefLocator_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 7),
    _VRtrBgpSrv6DefLocator_Type()
)
vRtrBgpSrv6DefLocator.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6DefLocator.setStatus("current")


class _VRtrBgpSrv6VrfRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type vRtrBgpSrv6VrfRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_VRtrBgpSrv6VrfRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_VRtrBgpSrv6VrfRD_Object = MibTableColumn
vRtrBgpSrv6VrfRD = _VRtrBgpSrv6VrfRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 8),
    _VRtrBgpSrv6VrfRD_Type()
)
vRtrBgpSrv6VrfRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfRD.setStatus("current")


class _VRtrBgpSrv6AutoRD_Type(TruthValue):
    """Custom type vRtrBgpSrv6AutoRD based on TruthValue"""
    defaultValue = 2


_VRtrBgpSrv6AutoRD_Type.__name__ = "TruthValue"
_VRtrBgpSrv6AutoRD_Object = MibTableColumn
vRtrBgpSrv6AutoRD = _VRtrBgpSrv6AutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 10),
    _VRtrBgpSrv6AutoRD_Type()
)
vRtrBgpSrv6AutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6AutoRD.setStatus("current")
_VRtrBgpSrv6OperRD_Type = TmnxVPNRouteDistinguisher
_VRtrBgpSrv6OperRD_Object = MibTableColumn
vRtrBgpSrv6OperRD = _VRtrBgpSrv6OperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 11),
    _VRtrBgpSrv6OperRD_Type()
)
vRtrBgpSrv6OperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6OperRD.setStatus("current")
_VRtrBgpSrv6OperRDType_Type = TmnxRouteDistType
_VRtrBgpSrv6OperRDType_Object = MibTableColumn
vRtrBgpSrv6OperRDType = _VRtrBgpSrv6OperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 12),
    _VRtrBgpSrv6OperRDType_Type()
)
vRtrBgpSrv6OperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6OperRDType.setStatus("current")
_VRtrBgpSrv6VrfTarget_Type = TNamedItemOrEmpty
_VRtrBgpSrv6VrfTarget_Object = MibTableColumn
vRtrBgpSrv6VrfTarget = _VRtrBgpSrv6VrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 13),
    _VRtrBgpSrv6VrfTarget_Type()
)
vRtrBgpSrv6VrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfTarget.setStatus("current")


class _VRtrBgpSrv6ExportVrfTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrBgpSrv6ExportVrfTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrBgpSrv6ExportVrfTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrBgpSrv6ExportVrfTarget_Object = MibTableColumn
vRtrBgpSrv6ExportVrfTarget = _VRtrBgpSrv6ExportVrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 14),
    _VRtrBgpSrv6ExportVrfTarget_Type()
)
vRtrBgpSrv6ExportVrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6ExportVrfTarget.setStatus("current")


class _VRtrBgpSrv6ImportVrfTarget_Type(TNamedItemOrEmpty):
    """Custom type vRtrBgpSrv6ImportVrfTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_VRtrBgpSrv6ImportVrfTarget_Type.__name__ = "TNamedItemOrEmpty"
_VRtrBgpSrv6ImportVrfTarget_Object = MibTableColumn
vRtrBgpSrv6ImportVrfTarget = _VRtrBgpSrv6ImportVrfTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 15),
    _VRtrBgpSrv6ImportVrfTarget_Type()
)
vRtrBgpSrv6ImportVrfTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6ImportVrfTarget.setStatus("current")


class _VRtrBgpSrv6SrcAddrType_Type(InetAddressType):
    """Custom type vRtrBgpSrv6SrcAddrType based on InetAddressType"""
    defaultValue = 0


_VRtrBgpSrv6SrcAddrType_Type.__name__ = "InetAddressType"
_VRtrBgpSrv6SrcAddrType_Object = MibTableColumn
vRtrBgpSrv6SrcAddrType = _VRtrBgpSrv6SrcAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 16),
    _VRtrBgpSrv6SrcAddrType_Type()
)
vRtrBgpSrv6SrcAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6SrcAddrType.setStatus("current")


class _VRtrBgpSrv6SrcAddr_Type(InetAddress):
    """Custom type vRtrBgpSrv6SrcAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrBgpSrv6SrcAddr_Type.__name__ = "InetAddress"
_VRtrBgpSrv6SrcAddr_Object = MibTableColumn
vRtrBgpSrv6SrcAddr = _VRtrBgpSrv6SrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 17),
    _VRtrBgpSrv6SrcAddr_Type()
)
vRtrBgpSrv6SrcAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6SrcAddr.setStatus("current")


class _VRtrBgpSrv6DefRtTag_Type(Unsigned32):
    """Custom type vRtrBgpSrv6DefRtTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VRtrBgpSrv6DefRtTag_Type.__name__ = "Unsigned32"
_VRtrBgpSrv6DefRtTag_Object = MibTableColumn
vRtrBgpSrv6DefRtTag = _VRtrBgpSrv6DefRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 18),
    _VRtrBgpSrv6DefRtTag_Type()
)
vRtrBgpSrv6DefRtTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6DefRtTag.setStatus("current")


class _VRtrBgpSrv6DomainId_Type(TmnxDPathDomainId):
    """Custom type vRtrBgpSrv6DomainId based on TmnxDPathDomainId"""
    defaultHexValue = "000000000000"


_VRtrBgpSrv6DomainId_Type.__name__ = "TmnxDPathDomainId"
_VRtrBgpSrv6DomainId_Object = MibTableColumn
vRtrBgpSrv6DomainId = _VRtrBgpSrv6DomainId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 2, 1, 19),
    _VRtrBgpSrv6DomainId_Type()
)
vRtrBgpSrv6DomainId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6DomainId.setStatus("current")
_VRtrBgpSrv6VrfPolicyTblLastCh_Type = TimeStamp
_VRtrBgpSrv6VrfPolicyTblLastCh_Object = MibScalar
vRtrBgpSrv6VrfPolicyTblLastCh = _VRtrBgpSrv6VrfPolicyTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 3),
    _VRtrBgpSrv6VrfPolicyTblLastCh_Type()
)
vRtrBgpSrv6VrfPolicyTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyTblLastCh.setStatus("current")
_VRtrBgpSrv6VrfPolicyTable_Object = MibTable
vRtrBgpSrv6VrfPolicyTable = _VRtrBgpSrv6VrfPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4)
)
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyTable.setStatus("current")
_VRtrBgpSrv6VrfPolicyEntry_Object = MibTableRow
vRtrBgpSrv6VrfPolicyEntry = _VRtrBgpSrv6VrfPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1)
)
vRtrBgpSrv6VrfPolicyEntry.setIndexNames(
    (0, "TIMETRA-VRTR-MIB", "vRtrID"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpSrv6BgpInstType"),
    (0, "TIMETRA-VRTR-MIB", "vRtrBgpSrv6BgpInstance"),
)
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyEntry.setStatus("current")
_VRtrBgpSrv6VrfPolicyLastChg_Type = TimeStamp
_VRtrBgpSrv6VrfPolicyLastChg_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyLastChg = _VRtrBgpSrv6VrfPolicyLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 1),
    _VRtrBgpSrv6VrfPolicyLastChg_Type()
)
vRtrBgpSrv6VrfPolicyLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyLastChg.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp1_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp1 = _VRtrBgpSrv6VrfPolicyImp1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 2),
    _VRtrBgpSrv6VrfPolicyImp1_Type()
)
vRtrBgpSrv6VrfPolicyImp1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp1.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp2_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp2 = _VRtrBgpSrv6VrfPolicyImp2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 3),
    _VRtrBgpSrv6VrfPolicyImp2_Type()
)
vRtrBgpSrv6VrfPolicyImp2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp2.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp3_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp3 = _VRtrBgpSrv6VrfPolicyImp3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 4),
    _VRtrBgpSrv6VrfPolicyImp3_Type()
)
vRtrBgpSrv6VrfPolicyImp3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp3.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp4_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp4 = _VRtrBgpSrv6VrfPolicyImp4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 5),
    _VRtrBgpSrv6VrfPolicyImp4_Type()
)
vRtrBgpSrv6VrfPolicyImp4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp4.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp5_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp5 = _VRtrBgpSrv6VrfPolicyImp5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 6),
    _VRtrBgpSrv6VrfPolicyImp5_Type()
)
vRtrBgpSrv6VrfPolicyImp5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp5.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp6_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp6 = _VRtrBgpSrv6VrfPolicyImp6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 7),
    _VRtrBgpSrv6VrfPolicyImp6_Type()
)
vRtrBgpSrv6VrfPolicyImp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp6.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp7_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp7 = _VRtrBgpSrv6VrfPolicyImp7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 8),
    _VRtrBgpSrv6VrfPolicyImp7_Type()
)
vRtrBgpSrv6VrfPolicyImp7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp7.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp8_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp8 = _VRtrBgpSrv6VrfPolicyImp8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 9),
    _VRtrBgpSrv6VrfPolicyImp8_Type()
)
vRtrBgpSrv6VrfPolicyImp8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp8.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp9_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp9 = _VRtrBgpSrv6VrfPolicyImp9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 10),
    _VRtrBgpSrv6VrfPolicyImp9_Type()
)
vRtrBgpSrv6VrfPolicyImp9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp9.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp10_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp10 = _VRtrBgpSrv6VrfPolicyImp10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 11),
    _VRtrBgpSrv6VrfPolicyImp10_Type()
)
vRtrBgpSrv6VrfPolicyImp10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp10.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp11_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp11 = _VRtrBgpSrv6VrfPolicyImp11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 12),
    _VRtrBgpSrv6VrfPolicyImp11_Type()
)
vRtrBgpSrv6VrfPolicyImp11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp11.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp12_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp12 = _VRtrBgpSrv6VrfPolicyImp12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 13),
    _VRtrBgpSrv6VrfPolicyImp12_Type()
)
vRtrBgpSrv6VrfPolicyImp12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp12.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp13_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp13 = _VRtrBgpSrv6VrfPolicyImp13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 14),
    _VRtrBgpSrv6VrfPolicyImp13_Type()
)
vRtrBgpSrv6VrfPolicyImp13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp13.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp14_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp14 = _VRtrBgpSrv6VrfPolicyImp14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 15),
    _VRtrBgpSrv6VrfPolicyImp14_Type()
)
vRtrBgpSrv6VrfPolicyImp14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp14.setStatus("current")


class _VRtrBgpSrv6VrfPolicyImp15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyImp15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyImp15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyImp15_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyImp15 = _VRtrBgpSrv6VrfPolicyImp15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 16),
    _VRtrBgpSrv6VrfPolicyImp15_Type()
)
vRtrBgpSrv6VrfPolicyImp15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyImp15.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp1_Type(TXLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp1 based on TXLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp1_Type.__name__ = "TXLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp1_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp1 = _VRtrBgpSrv6VrfPolicyExp1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 17),
    _VRtrBgpSrv6VrfPolicyExp1_Type()
)
vRtrBgpSrv6VrfPolicyExp1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp1.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp2_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp2 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp2_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp2_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp2 = _VRtrBgpSrv6VrfPolicyExp2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 18),
    _VRtrBgpSrv6VrfPolicyExp2_Type()
)
vRtrBgpSrv6VrfPolicyExp2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp2.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp3_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp3 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp3_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp3_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp3 = _VRtrBgpSrv6VrfPolicyExp3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 19),
    _VRtrBgpSrv6VrfPolicyExp3_Type()
)
vRtrBgpSrv6VrfPolicyExp3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp3.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp4_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp4 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp4_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp4_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp4 = _VRtrBgpSrv6VrfPolicyExp4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 20),
    _VRtrBgpSrv6VrfPolicyExp4_Type()
)
vRtrBgpSrv6VrfPolicyExp4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp4.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp5_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp5 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp5_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp5_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp5 = _VRtrBgpSrv6VrfPolicyExp5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 21),
    _VRtrBgpSrv6VrfPolicyExp5_Type()
)
vRtrBgpSrv6VrfPolicyExp5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp5.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp6_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp6 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp6_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp6_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp6 = _VRtrBgpSrv6VrfPolicyExp6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 22),
    _VRtrBgpSrv6VrfPolicyExp6_Type()
)
vRtrBgpSrv6VrfPolicyExp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp6.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp7_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp7 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp7_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp7_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp7 = _VRtrBgpSrv6VrfPolicyExp7_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 23),
    _VRtrBgpSrv6VrfPolicyExp7_Type()
)
vRtrBgpSrv6VrfPolicyExp7.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp7.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp8_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp8 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp8_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp8_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp8 = _VRtrBgpSrv6VrfPolicyExp8_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 24),
    _VRtrBgpSrv6VrfPolicyExp8_Type()
)
vRtrBgpSrv6VrfPolicyExp8.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp8.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp9_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp9 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp9_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp9_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp9 = _VRtrBgpSrv6VrfPolicyExp9_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 25),
    _VRtrBgpSrv6VrfPolicyExp9_Type()
)
vRtrBgpSrv6VrfPolicyExp9.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp9.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp10_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp10 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp10_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp10_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp10 = _VRtrBgpSrv6VrfPolicyExp10_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 26),
    _VRtrBgpSrv6VrfPolicyExp10_Type()
)
vRtrBgpSrv6VrfPolicyExp10.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp10.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp11_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp11 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp11_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp11_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp11 = _VRtrBgpSrv6VrfPolicyExp11_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 27),
    _VRtrBgpSrv6VrfPolicyExp11_Type()
)
vRtrBgpSrv6VrfPolicyExp11.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp11.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp12_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp12 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp12_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp12_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp12 = _VRtrBgpSrv6VrfPolicyExp12_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 28),
    _VRtrBgpSrv6VrfPolicyExp12_Type()
)
vRtrBgpSrv6VrfPolicyExp12.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp12.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp13_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp13 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp13_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp13_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp13 = _VRtrBgpSrv6VrfPolicyExp13_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 29),
    _VRtrBgpSrv6VrfPolicyExp13_Type()
)
vRtrBgpSrv6VrfPolicyExp13.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp13.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp14_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp14 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp14_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp14_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp14 = _VRtrBgpSrv6VrfPolicyExp14_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 30),
    _VRtrBgpSrv6VrfPolicyExp14_Type()
)
vRtrBgpSrv6VrfPolicyExp14.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp14.setStatus("current")


class _VRtrBgpSrv6VrfPolicyExp15_Type(TLPolicyNameOrExpOrEmpty):
    """Custom type vRtrBgpSrv6VrfPolicyExp15 based on TLPolicyNameOrExpOrEmpty"""
    defaultHexValue = ""


_VRtrBgpSrv6VrfPolicyExp15_Type.__name__ = "TLPolicyNameOrExpOrEmpty"
_VRtrBgpSrv6VrfPolicyExp15_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyExp15 = _VRtrBgpSrv6VrfPolicyExp15_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 31),
    _VRtrBgpSrv6VrfPolicyExp15_Type()
)
vRtrBgpSrv6VrfPolicyExp15.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyExp15.setStatus("current")


class _VRtrBgpSrv6VrfPolicyCreateOrig_Type(TmnxCreateOrigin):
    """Custom type vRtrBgpSrv6VrfPolicyCreateOrig based on TmnxCreateOrigin"""
    defaultValue = 1


_VRtrBgpSrv6VrfPolicyCreateOrig_Type.__name__ = "TmnxCreateOrigin"
_VRtrBgpSrv6VrfPolicyCreateOrig_Object = MibTableColumn
vRtrBgpSrv6VrfPolicyCreateOrig = _VRtrBgpSrv6VrfPolicyCreateOrig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 218, 4, 1, 32),
    _VRtrBgpSrv6VrfPolicyCreateOrig_Type()
)
vRtrBgpSrv6VrfPolicyCreateOrig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrBgpSrv6VrfPolicyCreateOrig.setStatus("current")
_VRtrIfLinkDelayTable_Object = MibTable
vRtrIfLinkDelayTable = _VRtrIfLinkDelayTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219)
)
if mibBuilder.loadTexts:
    vRtrIfLinkDelayTable.setStatus("current")
_VRtrIfLinkDelayEntry_Object = MibTableRow
vRtrIfLinkDelayEntry = _VRtrIfLinkDelayEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1)
)
if mibBuilder.loadTexts:
    vRtrIfLinkDelayEntry.setStatus("current")


class _VRtrIfLinkDelaySelection_Type(Integer32):
    """Custom type vRtrIfLinkDelaySelection based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("staticPreferred", 3),
          ("dynamicPreferred", 4))
    )


_VRtrIfLinkDelaySelection_Type.__name__ = "Integer32"
_VRtrIfLinkDelaySelection_Object = MibTableColumn
vRtrIfLinkDelaySelection = _VRtrIfLinkDelaySelection_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 1),
    _VRtrIfLinkDelaySelection_Type()
)
vRtrIfLinkDelaySelection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLinkDelaySelection.setStatus("current")


class _VRtrIfLinkDelayStatic_Type(Integer32):
    """Custom type vRtrIfLinkDelayStatic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16777214),
    )


_VRtrIfLinkDelayStatic_Type.__name__ = "Integer32"
_VRtrIfLinkDelayStatic_Object = MibTableColumn
vRtrIfLinkDelayStatic = _VRtrIfLinkDelayStatic_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 2),
    _VRtrIfLinkDelayStatic_Type()
)
vRtrIfLinkDelayStatic.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayStatic.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayStatic.setUnits("microseconds")


class _VRtrIfLinkDelayDynamic_Type(Integer32):
    """Custom type vRtrIfLinkDelayDynamic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16777214),
    )


_VRtrIfLinkDelayDynamic_Type.__name__ = "Integer32"
_VRtrIfLinkDelayDynamic_Object = MibTableColumn
vRtrIfLinkDelayDynamic = _VRtrIfLinkDelayDynamic_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 3),
    _VRtrIfLinkDelayDynamic_Type()
)
vRtrIfLinkDelayDynamic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayDynamic.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayDynamic.setUnits("microseconds")


class _VRtrIfLinkDelayOper_Type(Integer32):
    """Custom type vRtrIfLinkDelayOper based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16777214),
    )


_VRtrIfLinkDelayOper_Type.__name__ = "Integer32"
_VRtrIfLinkDelayOper_Object = MibTableColumn
vRtrIfLinkDelayOper = _VRtrIfLinkDelayOper_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 4),
    _VRtrIfLinkDelayOper_Type()
)
vRtrIfLinkDelayOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayOper.setStatus("current")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayOper.setUnits("microseconds")


class _VRtrIfLinkDelayMeasureTemplName_Type(TLNamedItemOrEmpty):
    """Custom type vRtrIfLinkDelayMeasureTemplName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_VRtrIfLinkDelayMeasureTemplName_Type.__name__ = "TLNamedItemOrEmpty"
_VRtrIfLinkDelayMeasureTemplName_Object = MibTableColumn
vRtrIfLinkDelayMeasureTemplName = _VRtrIfLinkDelayMeasureTemplName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 5),
    _VRtrIfLinkDelayMeasureTemplName_Type()
)
vRtrIfLinkDelayMeasureTemplName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLinkDelayMeasureTemplName.setStatus("current")


class _VRtrIfLnkDlyTwampIpv4AdminState_Type(TmnxAdminState):
    """Custom type vRtrIfLnkDlyTwampIpv4AdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfLnkDlyTwampIpv4AdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfLnkDlyTwampIpv4AdminState_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv4AdminState = _VRtrIfLnkDlyTwampIpv4AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 6),
    _VRtrIfLnkDlyTwampIpv4AdminState_Type()
)
vRtrIfLnkDlyTwampIpv4AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv4AdminState.setStatus("current")


class _VRtrIfLnkDlyTwampIpv4DstAddrType_Type(InetAddressType):
    """Custom type vRtrIfLnkDlyTwampIpv4DstAddrType based on InetAddressType"""
    defaultValue = 1


_VRtrIfLnkDlyTwampIpv4DstAddrType_Type.__name__ = "InetAddressType"
_VRtrIfLnkDlyTwampIpv4DstAddrType_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv4DstAddrType = _VRtrIfLnkDlyTwampIpv4DstAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 7),
    _VRtrIfLnkDlyTwampIpv4DstAddrType_Type()
)
vRtrIfLnkDlyTwampIpv4DstAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv4DstAddrType.setStatus("current")


class _VRtrIfLnkDlyTwampIpv4DstAddr_Type(InetAddress):
    """Custom type vRtrIfLnkDlyTwampIpv4DstAddr based on InetAddress"""
    defaultHexValue = "00000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfLnkDlyTwampIpv4DstAddr_Type.__name__ = "InetAddress"
_VRtrIfLnkDlyTwampIpv4DstAddr_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv4DstAddr = _VRtrIfLnkDlyTwampIpv4DstAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 8),
    _VRtrIfLnkDlyTwampIpv4DstAddr_Type()
)
vRtrIfLnkDlyTwampIpv4DstAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv4DstAddr.setStatus("current")


class _VRtrIfLnkDlyTwampIpv4SrcAddrType_Type(InetAddressType):
    """Custom type vRtrIfLnkDlyTwampIpv4SrcAddrType based on InetAddressType"""
    defaultValue = 1


_VRtrIfLnkDlyTwampIpv4SrcAddrType_Type.__name__ = "InetAddressType"
_VRtrIfLnkDlyTwampIpv4SrcAddrType_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv4SrcAddrType = _VRtrIfLnkDlyTwampIpv4SrcAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 9),
    _VRtrIfLnkDlyTwampIpv4SrcAddrType_Type()
)
vRtrIfLnkDlyTwampIpv4SrcAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv4SrcAddrType.setStatus("current")


class _VRtrIfLnkDlyTwampIpv4SrcAddr_Type(InetAddress):
    """Custom type vRtrIfLnkDlyTwampIpv4SrcAddr based on InetAddress"""
    defaultHexValue = "00000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_VRtrIfLnkDlyTwampIpv4SrcAddr_Type.__name__ = "InetAddress"
_VRtrIfLnkDlyTwampIpv4SrcAddr_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv4SrcAddr = _VRtrIfLnkDlyTwampIpv4SrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 10),
    _VRtrIfLnkDlyTwampIpv4SrcAddr_Type()
)
vRtrIfLnkDlyTwampIpv4SrcAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv4SrcAddr.setStatus("current")


class _VRtrIfLnkDlyTwampIpv6AdminState_Type(TmnxAdminState):
    """Custom type vRtrIfLnkDlyTwampIpv6AdminState based on TmnxAdminState"""
    defaultValue = 3


_VRtrIfLnkDlyTwampIpv6AdminState_Type.__name__ = "TmnxAdminState"
_VRtrIfLnkDlyTwampIpv6AdminState_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv6AdminState = _VRtrIfLnkDlyTwampIpv6AdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 11),
    _VRtrIfLnkDlyTwampIpv6AdminState_Type()
)
vRtrIfLnkDlyTwampIpv6AdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv6AdminState.setStatus("current")


class _VRtrIfLnkDlyTwampIpv6DstAddrType_Type(InetAddressType):
    """Custom type vRtrIfLnkDlyTwampIpv6DstAddrType based on InetAddressType"""
    defaultValue = 2


_VRtrIfLnkDlyTwampIpv6DstAddrType_Type.__name__ = "InetAddressType"
_VRtrIfLnkDlyTwampIpv6DstAddrType_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv6DstAddrType = _VRtrIfLnkDlyTwampIpv6DstAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 12),
    _VRtrIfLnkDlyTwampIpv6DstAddrType_Type()
)
vRtrIfLnkDlyTwampIpv6DstAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv6DstAddrType.setStatus("current")


class _VRtrIfLnkDlyTwampIpv6DstAddr_Type(InetAddress):
    """Custom type vRtrIfLnkDlyTwampIpv6DstAddr based on InetAddress"""
    defaultHexValue = "00000000000000000000000000000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfLnkDlyTwampIpv6DstAddr_Type.__name__ = "InetAddress"
_VRtrIfLnkDlyTwampIpv6DstAddr_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv6DstAddr = _VRtrIfLnkDlyTwampIpv6DstAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 13),
    _VRtrIfLnkDlyTwampIpv6DstAddr_Type()
)
vRtrIfLnkDlyTwampIpv6DstAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv6DstAddr.setStatus("current")


class _VRtrIfLnkDlyTwampIpv6SrcAddrType_Type(InetAddressType):
    """Custom type vRtrIfLnkDlyTwampIpv6SrcAddrType based on InetAddressType"""
    defaultValue = 2


_VRtrIfLnkDlyTwampIpv6SrcAddrType_Type.__name__ = "InetAddressType"
_VRtrIfLnkDlyTwampIpv6SrcAddrType_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv6SrcAddrType = _VRtrIfLnkDlyTwampIpv6SrcAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 14),
    _VRtrIfLnkDlyTwampIpv6SrcAddrType_Type()
)
vRtrIfLnkDlyTwampIpv6SrcAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv6SrcAddrType.setStatus("current")


class _VRtrIfLnkDlyTwampIpv6SrcAddr_Type(InetAddress):
    """Custom type vRtrIfLnkDlyTwampIpv6SrcAddr based on InetAddress"""
    defaultHexValue = "00000000000000000000000000000000"

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_VRtrIfLnkDlyTwampIpv6SrcAddr_Type.__name__ = "InetAddress"
_VRtrIfLnkDlyTwampIpv6SrcAddr_Object = MibTableColumn
vRtrIfLnkDlyTwampIpv6SrcAddr = _VRtrIfLnkDlyTwampIpv6SrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 219, 1, 15),
    _VRtrIfLnkDlyTwampIpv6SrcAddr_Type()
)
vRtrIfLnkDlyTwampIpv6SrcAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrIfLnkDlyTwampIpv6SrcAddr.setStatus("current")
_VRtrDPathAttrTable_Object = MibTable
vRtrDPathAttrTable = _VRtrDPathAttrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220)
)
if mibBuilder.loadTexts:
    vRtrDPathAttrTable.setStatus("current")
_VRtrDPathAttrEntry_Object = MibTableRow
vRtrDPathAttrEntry = _VRtrDPathAttrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220, 1)
)
if mibBuilder.loadTexts:
    vRtrDPathAttrEntry.setStatus("current")


class _VRtrBgpIpVpnMplsDomainId_Type(TmnxDPathDomainId):
    """Custom type vRtrBgpIpVpnMplsDomainId based on TmnxDPathDomainId"""
    defaultHexValue = "000000000000"


_VRtrBgpIpVpnMplsDomainId_Type.__name__ = "TmnxDPathDomainId"
_VRtrBgpIpVpnMplsDomainId_Object = MibTableColumn
vRtrBgpIpVpnMplsDomainId = _VRtrBgpIpVpnMplsDomainId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220, 1, 1),
    _VRtrBgpIpVpnMplsDomainId_Type()
)
vRtrBgpIpVpnMplsDomainId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrBgpIpVpnMplsDomainId.setStatus("current")


class _VRtrLocalRoutesDomainId_Type(TmnxDPathDomainId):
    """Custom type vRtrLocalRoutesDomainId based on TmnxDPathDomainId"""
    defaultHexValue = "000000000000"


_VRtrLocalRoutesDomainId_Type.__name__ = "TmnxDPathDomainId"
_VRtrLocalRoutesDomainId_Object = MibTableColumn
vRtrLocalRoutesDomainId = _VRtrLocalRoutesDomainId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220, 1, 2),
    _VRtrLocalRoutesDomainId_Type()
)
vRtrLocalRoutesDomainId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrLocalRoutesDomainId.setStatus("current")


class _VRtrDpathLengthIgnore_Type(TruthValue):
    """Custom type vRtrDpathLengthIgnore based on TruthValue"""
    defaultValue = 2


_VRtrDpathLengthIgnore_Type.__name__ = "TruthValue"
_VRtrDpathLengthIgnore_Object = MibTableColumn
vRtrDpathLengthIgnore = _VRtrDpathLengthIgnore_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220, 1, 3),
    _VRtrDpathLengthIgnore_Type()
)
vRtrDpathLengthIgnore.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vRtrDpathLengthIgnore.setStatus("current")
_VRtrDPathAttrLastChanged_Type = TimeStamp
_VRtrDPathAttrLastChanged_Object = MibTableColumn
vRtrDPathAttrLastChanged = _VRtrDPathAttrLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 3, 220, 1, 4),
    _VRtrDPathAttrLastChanged_Type()
)
vRtrDPathAttrLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vRtrDPathAttrLastChanged.setStatus("current")
_TmnxVRtrNotifyPrefix_ObjectIdentity = ObjectIdentity
tmnxVRtrNotifyPrefix = _TmnxVRtrNotifyPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3)
)
_TmnxVRtrNotifications_ObjectIdentity = ObjectIdentity
tmnxVRtrNotifications = _TmnxVRtrNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0)
)
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrStatEntry")
)
vRtrStatEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
ipCidrRouteEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIpCidrRouteEntry")
)
vRtrIpCidrRouteEntry.setIndexNames(*ipCidrRouteEntry.getIndexNames())
ipNetToMediaEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIpNetToMediaEntry")
)
vRtrIpNetToMediaEntry.setIndexNames(*ipNetToMediaEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrPolicyEntry")
)
vRtrPolicyEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfProxyArpEntry")
)
vRtrIfProxyArpEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfDHCPEntry")
)
vRtrIfDHCPEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfDHCPRelayStatsEntry")
)
vRtrIfDHCPRelayStatsEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
ipNetToPhysicalEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIpNetToPhysicalEntry")
)
vRtrIpNetToPhysicalEntry.setIndexNames(*ipNetToPhysicalEntry.getIndexNames())
inetCidrRouteEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrInetCidrRouteEntry")
)
vRtrInetCidrRouteEntry.setIndexNames(*inetCidrRouteEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIcmp6Entry")
)
vRtrIcmp6Entry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfIcmp6Entry")
)
vRtrIfIcmp6Entry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfBfdEntry")
)
vRtrIfBfdEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfDHCP6Entry")
)
vRtrIfDHCP6Entry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfProxyNDEntry")
)
vRtrIfProxyNDEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfIpcpEntry")
)
vRtrIfIpcpEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrConfExtEntry")
)
vRtrConfExtEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfExtEntry")
)
vRtrIfExtEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIpPoolAddrEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIpPoolStatEntry")
)
vRtrIpPoolStatEntry.setIndexNames(*vRtrIpPoolAddrEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfIpReasEntry")
)
vRtrIfIpReasEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfStatsEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfStatsExtEntry")
)
vRtrIfStatsExtEntry.setIndexNames(*vRtrIfStatsEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrStatExtEntry")
)
vRtrStatExtEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrVrfPolicyEntry")
)
vRtrVrfPolicyEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrMvpnVrfPolicyEntry")
)
vRtrMvpnVrfPolicyEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfQosEntry")
)
vRtrIfQosEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfLocalPoolEntry")
)
vRtrIfLocalPoolEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfDHCP6ProxyDuidEntry")
)
vRtrIfDHCP6ProxyDuidEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
ipv6RouterAdvertEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIpv6RtrAdvertEntry")
)
vRtrIpv6RtrAdvertEntry.setIndexNames(*ipv6RouterAdvertEntry.getIndexNames())
vRtrInetStaticRouteEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrInetSRIndirectEntry")
)
vRtrInetSRIndirectEntry.setIndexNames(*vRtrInetStaticRouteEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrConfFlowspecEntry")
)
vRtrConfFlowspecEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIcmpStatEntry")
)
vRtrIcmpStatEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfIcmpStatEntry")
)
vRtrIfIcmpStatEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfExtParmsEntry")
)
vRtrIfExtParmsEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrLeakExportPolicyEntry")
)
vRtrLeakExportPolicyEntry.setIndexNames(*vRtrConfEntry.getIndexNames())
vRtrIfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrIfLinkDelayEntry")
)
vRtrIfLinkDelayEntry.setIndexNames(*vRtrIfEntry.getIndexNames())
vRtrConfEntry.registerAugmentions(
    ("TIMETRA-VRTR-MIB",
     "vRtrDPathAttrEntry")
)
vRtrDPathAttrEntry.setIndexNames(*vRtrConfEntry.getIndexNames())

# Managed Objects groups

tmnxVRtrGlobalR2r1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 10)
)
tmnxVRtrGlobalR2r1Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrNextVRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrConfiguredVRtrs"),
        ("TIMETRA-VRTR-MIB", "vRtrActiveVRtrs"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteThresholdSoakTime"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxARPEntries"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalR2r1Group.setStatus("obsolete")

tmnxVRtrIfSubscrAuthV3v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 11)
)
tmnxVRtrIfSubscrAuthV3v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPAuthPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayAuthPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayAuthPktsSuccess"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfSubscrAuthV3v0Group.setStatus("current")

tmnxVRtrV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 14)
)
tmnxVRtrV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrOspfStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIsIsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrOspfv3Status"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV4v0Group.setStatus("obsolete")

tmnxVRtrIfV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 15)
)
tmnxVRtrIfV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTotalNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPortID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfChannelID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEncapValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAlias"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPhysicalAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpTimeout"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpMaskReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirectsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachablesTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpiredTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNtpBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumbered"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDirectedBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCflowd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfVPNClass"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTosMarkingTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpPopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNameIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV4v0Group.setStatus("obsolete")

tmnxVRtrIpV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 16)
)
tmnxVRtrIpV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRiaIpAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaNetMask"),
        ("TIMETRA-VRTR-MIB", "vRiaBcastAddrFormat"),
        ("TIMETRA-VRTR-MIB", "vRiaReasmMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRiaIgpInhibit"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrState"),
        ("TIMETRA-VRTR-MIB", "vRiaInetEui64"),
        ("TIMETRA-VRTR-MIB", "vRiaInetOperAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHopUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAvailableIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEnableBfd"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAvailIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInstanceAggregationTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetInstAggrTblLastChged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalIsRouter"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalPort"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalEncap"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteMetric"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV4v0Group.setStatus("obsolete")

tmnxVRtrObsoletedObjectsV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 17)
)
tmnxVRtrObsoletedObjectsV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPLseStateChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLseStateRemainLseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLseStateOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLseStatePersistKey"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCPClientLease"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateOldCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateOldChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStatePopulateError"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoOption"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAutoFilter"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPSnooping"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAutoFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperAutoFilter"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoFilterDHCPClientAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoFilterDHCPClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoletedObjectsV4v0Group.setStatus("current")

tmnxVRtrBfdV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 18)
)
tmnxVRtrBfdV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdTransmitInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdReceiveInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgRecv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgSent"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastDownTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionUpCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionDownCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRxInterval"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV4v0Group.setStatus("obsolete")

tmnxVRtrIPv6IfV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 20)
)
tmnxVRtrIPv6IfV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIPv6ConfigAllowed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIPv6OperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIPv6IngressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIPv6EgressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6Redirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6NumRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6RedirectsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6Unreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6NumUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6UnreachablesTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6TimeExceeded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6NumTimeExceeded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6TimeExceededTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6PktTooBig"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6NumPktTooBig"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6PktTooBigTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6ParamProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6NumParamProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV6ParamProblemTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkLocalAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkLocalAddressState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkLocalAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InAdminProhibs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InPktTooBigs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InRtrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InRtrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InNbrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InNbrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InGrpMembQueries"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InGrpMembResponses"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6InGrpMembReductions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutAdminProhibs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutPktTooBigs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutRtrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutRtrSolicitsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutRtrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutRtrAdvTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutNbrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutNbrSolicitsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutNbrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutNbrAdvTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutGrpMembQueries"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutGrpMembResponses"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutGrpMembReductions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmp6OutDiscards"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InAdminProhibs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InPktTooBigs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InRtrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InRtrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InNbrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InNbrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InGrpMembQueries"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InGrpMembResponses"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6InGrpMembReductions"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutAdminProhibs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutPktTooBigs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutRtrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutRtrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutNbrSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutNbrAdvertisements"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutGrpMembQueries"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutGrpMembResponses"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutGrpMembReductions"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmp6OutDiscards"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6IfV4v0Group.setStatus("current")

tmnxVRtrIPv6V4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 21)
)
tmnxVRtrIPv6V4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrV6DirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6DirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6OSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6OSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6RIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6RIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6AggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6AggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveNbrEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalNbrEntries"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6V4v0Group.setStatus("current")

tmnxVRtrIPv6IpV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 22)
)
tmnxVRtrIPv6IpV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6IpV4v0Group.setStatus("obsolete")

tmnxVRtrIPv6IpV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 24)
)
tmnxVRtrIPv6IpV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6TableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6AdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6OperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6Description"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayItfIdOption"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6CurrLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6SourceAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6EnableNgbrResolution"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RemoteIdOption"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ServerMaxLeaseStates"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6CurrServerLeaseStates"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ItfIdString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyNDPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdDUID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdIAID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdPrefLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxdValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PfxDelegationLstChgd"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6IpV5v0Group.setStatus("current")

tmnxVRtrIfV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 25)
)
tmnxVRtrIfV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTotalNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPortID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEncapValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAlias"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPhysicalAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpTimeout"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpMaskReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirectsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachablesTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpiredTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNtpBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumbered"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDirectedBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCflowd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfVPNClass"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTosMarkingTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpPopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLastOperStateChange"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNameIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelaySeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayUpTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayEnable"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV5v0Group.setStatus("obsolete")

tmnxVRtrIpV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 26)
)
tmnxVRtrIpV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRiaIpAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaNetMask"),
        ("TIMETRA-VRTR-MIB", "vRiaBcastAddrFormat"),
        ("TIMETRA-VRTR-MIB", "vRiaReasmMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRiaIgpInhibit"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrState"),
        ("TIMETRA-VRTR-MIB", "vRiaInetEui64"),
        ("TIMETRA-VRTR-MIB", "vRiaInetOperAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIpType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIp"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHopUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAvailableIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEnableBfd"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAvailIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInstanceAggregationTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetInstAggrTblLastChged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalIsRouter"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalPort"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalEncap"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteIfVRtrId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV5v0Group.setStatus("obsolete")

tmnxVRtrV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 27)
)
tmnxVRtrV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIsIsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV5v0Group.setStatus("obsolete")

tmnxVRtrObsoleteV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 29)
)
tmnxVRtrObsoleteV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrOspfStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrOspfv3Status"),
        ("TIMETRA-VRTR-MIB", "vRtrIfChannelID"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteV5v0Group.setStatus("current")

tmnxVRtrNotificationObjV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 30)
)
tmnxVRtrNotificationObjV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObjV5v0Group.setStatus("obsolete")

tmnxVRtrIfDhcpServerGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 31)
)
tmnxVRtrIfDhcpServerGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfLocalDhcpServerName")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDhcpServerGroup.setStatus("current")

tmnxVRtrV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 32)
)
tmnxVRtrV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIsIsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV6v0Group.setStatus("obsolete")

tmnxVRtrStaticRteCPEChkV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 33)
)
tmnxVRtrStaticRteCPEChkV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeDropCnt"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeEnableLog"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkInPktCnt"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkOutPktCnt"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkUpTrans"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkDownTrans"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeChkTTL"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStaticRteCPEChkV6v0Group.setStatus("current")

tmnxVRtrIfIpcpV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 34)
)
tmnxVRtrIfIpcpV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpcpPeerAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpcpPeerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpcpPriDnsAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpcpPriDnsAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpcpSecDnsAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpcpSecDnsAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfIpcpV6v0Group.setStatus("current")

tmnxVRtrIfCpmProtectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 35)
)
tmnxVRtrIfCpmProtectGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfCpmProtPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCpmProtUncfgdProtoDropCnt"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfCpmProtectGroup.setStatus("current")

tmnxDscpAppV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 36)
)
tmnxDscpAppV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxDscpAppLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppDscpValue"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpFCLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpFCValue"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpFCTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDot1pAppTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDot1pAppLastChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxDot1pAppValue"))
)
if mibBuilder.loadTexts:
    tmnxDscpAppV6v0Group.setStatus("current")

tmnxVRtrIfDHCPRelayGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 37)
)
tmnxVRtrIfDHCPRelayGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLayer2Header"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAntiSpoofMacAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPClientApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayGroup.setStatus("obsolete")

tmnxVRtrGlobalV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 38)
)
tmnxVRtrGlobalV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrNextVRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrConfiguredVRtrs"),
        ("TIMETRA-VRTR-MIB", "vRtrActiveVRtrs"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteThresholdSoakTime"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6RouteThresholdSoakTime"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalV6v0Group.setStatus("current")

tmnxVRtrNotificationObjV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 39)
)
tmnxVRtrNotificationObjV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutePrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxRoutesType"),
        ("TIMETRA-VRTR-MIB", "vRtrSlotOrCpmFlag"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObjV6v0Group.setStatus("obsolete")

tmnxVRtrBfdV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 41)
)
tmnxVRtrBfdV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdTransmitInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdReceiveInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgRecv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgSent"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastDownTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionUpCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionDownCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdEchoInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV6v0Group.setStatus("obsolete")

tmnxVRtrV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 42)
)
tmnxVRtrV6v1Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIgnoreNextHopMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrIfStripLabel"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV6v1Group.setStatus("current")

tmnxVRtrIPv6MgtIfV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 43)
)
tmnxVRtrIPv6MgtIfV7v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfIPv6ConfigAllowed")
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6MgtIfV7v0Group.setStatus("current")

tmnxVRtrFibStatsV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 44)
)
tmnxVRtrFibStatsV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrFibStatStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatAggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6StaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6DirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6OSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6RIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6AggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOverflows"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPAvailable"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelAvailable"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFibStatsV6v0Group.setStatus("obsolete")

tmnxVRtrInetAllCidrRouteV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 45)
)
tmnxVRtrInetAllCidrRouteV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteAge"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteNextHopAS"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric1"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric2"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric3"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric4"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric5"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteIfVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteIsActive"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetAllCidrRouteV7v0Group.setStatus("current")

tmnxVRtrInetStaticRouteV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 46)
)
tmnxVRtrInetStaticRouteV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePrefixListName"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePrefixListFlag"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetStaticRouteV7v0Group.setStatus("current")

tmnxVRtrFibStatsV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 47)
)
tmnxVRtrFibStatsV6v1Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrFibStatStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatAggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6StaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6DirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6OSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6RIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6AggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOverflows"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatAlarmCount"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatLastAlarmTime"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatHighUtilization"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPAvailable"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelAvailable"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFibStatsV6v1Group.setStatus("obsolete")

tmnxVRtruRPFV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 49)
)
tmnxVRtruRPFV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckMode"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFCheckFailBytesHigh32"))
)
if mibBuilder.loadTexts:
    tmnxVRtruRPFV7v0Group.setStatus("current")

tmnxVRtrMvpnV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 50)
)
tmnxVRtrMvpnV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnCMcastImportRT"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMvpnV7v0Group.setStatus("obsolete")

tmnxVRtrIfV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 51)
)
tmnxVRtrIfV7v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfQosQGrp")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV7v0Group.setStatus("obsolete")

tmnxVRtrIpV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 52)
)
tmnxVRtrIpV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRiaIpAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaNetMask"),
        ("TIMETRA-VRTR-MIB", "vRiaBcastAddrFormat"),
        ("TIMETRA-VRTR-MIB", "vRiaReasmMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRiaIgpInhibit"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrState"),
        ("TIMETRA-VRTR-MIB", "vRiaInetEui64"),
        ("TIMETRA-VRTR-MIB", "vRiaInetOperAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIpType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIp"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHopUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAvailableIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEnableBfd"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAvailIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetInstAggrTblLastChged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalIsRouter"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalPort"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalEncap"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteIfVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteTunnEndpntInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrProtocolInstance"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLdpSync"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV7v0Group.setStatus("obsolete")

tmnxVRtrV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 53)
)
tmnxVRtrV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIsIsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdmLnkLclAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddrType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV7v0Group.setStatus("obsolete")

tmnxVRtrObsoleteV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 54)
)
tmnxVRtrObsoleteV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrAS"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrInstanceAggregationTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorAS"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregationOperState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteV7v0Group.setStatus("current")

tmnxVRtrIfDHCPRelayV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 55)
)
tmnxVRtrIfDHCPRelayV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLayer2Header"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAntiSpoofMacAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPClientApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUseArpForReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPlainBootp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUserDb"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV7v0Group.setStatus("obsolete")

tmnxVRtrBfdV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 56)
)
tmnxVRtrBfdV7v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionVerMismatch")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV7v0Group.setStatus("obsolete")

tmnxVRtrIfDHCPRelayV6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 57)
)
tmnxVRtrIfDHCPRelayV6v1Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLayer2Header"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAntiSpoofMacAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPClientApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUseArpForReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV6v1Group.setStatus("current")

tmnxVRtrNotificationObjV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 58)
)
tmnxVRtrNotificationObjV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutePrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxRoutesType"),
        ("TIMETRA-VRTR-MIB", "vRtrSlotOrCpmFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObjV7v0Group.setStatus("obsolete")

tmnxVRtrV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 60)
)
tmnxVRtrV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefix"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefixType"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrHostRoutePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdmLnkLclAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLsrIpLoadBalancing"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRenewTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRebindTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyPrefLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6UserDb"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadHldOffTime"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadStart"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadTime"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtState"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV8v0Group.setStatus("obsolete")

tmnxVRtrIfDHCPRelayV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 61)
)
tmnxVRtrIfDHCPRelayV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLayer2Header"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAntiSpoofMacAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPClientApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUseArpForReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPlainBootp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUserDb"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV8v0Group.setStatus("obsolete")

tmnxVRtrNetDomainGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 62)
)
tmnxVRtrNetDomainGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrNetDomainRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainDesc"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainIfAssociationCnt"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainSdpAssociationCnt"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNetDomainRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNetDomainLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNetDomainTblLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainTblLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNetDomainGroup.setStatus("current")

tmnxVRtrObsoleteV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 64)
)
tmnxVRtrObsoleteV8v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIsIsStatus")
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteV8v0Group.setStatus("current")

tmnxVRtrTunIntV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 65)
)
tmnxVRtrTunIntV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSessionId"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfTransmitInt"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfStandbyLspName"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfStandbyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfStandbyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfHoldTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfStandbySessionId"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfStandbyIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcBfdEnable"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcSessionId"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcTransmitInt"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpTunIfSrcStandbySessionId"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpTunIfRootNode"))
)
if mibBuilder.loadTexts:
    tmnxVRtrTunIntV8v0Group.setStatus("current")

tmnxVRtrBfdV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 66)
)
tmnxVRtrBfdV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastTx"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV8v0Group.setStatus("obsolete")

tmnxVRtrMvpnPmsiV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 67)
)
tmnxVRtrMvpnPmsiV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiP2MPAdmin"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiP2MPAdmin"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiLspTemplate"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiLspTemplate"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiMaxLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrInterASMvpn"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMvpnPmsiV8v0Group.setStatus("current")

tmnxVRtrFibStatsV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 68)
)
tmnxVRtrFibStatsV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrFibStatStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatAggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6StaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6DirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6OSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6RIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6AggrRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6ManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatOverflows"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatAlarmCount"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatLastAlarmTime"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatHighUtilization"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopIPAvailable"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelActive"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNextHopTunnelAvailable"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatMobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6MobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatVPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6VPNLeakRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFibStatsV8v0Group.setStatus("current")

tmnxVRtrV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 69)
)
tmnxVRtrV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIngressIpv4Flowspec"),
        ("TIMETRA-VRTR-MIB", "vRtrFibPriority"),
        ("TIMETRA-VRTR-MIB", "vRtrCarrierCarrierVpn"),
        ("TIMETRA-VRTR-MIB", "vRtrLabelMode"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSharedQueue"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSharedQueueCIR"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSharedQueuePIR"),
        ("TIMETRA-VRTR-MIB", "vRiaHoldUpTime"),
        ("TIMETRA-VRTR-MIB", "vRiaTrackSrrpInstance"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnMdtSafi"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnMdtDefGrpAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnMdtDefGrpAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopRepCount"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteBkupFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteBkupNHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteBkupNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteBkupMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteNHopRepCount"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpExportInactive"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV9v0Group.setStatus("current")

tmnxVRtrIfDHCP6V9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 70)
)
tmnxVRtrIfDHCP6V9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LocalDhcpServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RelayApplications"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCP6V9v0Group.setStatus("current")

tmnxVRtrQPPBV9v0R4Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 71)
)
tmnxVRtrQPPBV9v0R4Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteFC"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteFCPriority"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosRouteLookup"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6QosRouteLookup"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHFC"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHPriority"))
)
if mibBuilder.loadTexts:
    tmnxVRtrQPPBV9v0R4Group.setStatus("current")

tmnxVRtrBfdV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 72)
)
tmnxVRtrBfdV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdExtTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtTransmitInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtReceiveInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtEchoInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgRecv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgSent"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastDownTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionUpCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionDownCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastTx"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV9v0Group.setStatus("obsolete")

tmnxVRtrIfIpReasV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 73)
)
tmnxVRtrIfIpReasV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpReasPortID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasContextValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsRcvdLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsRcvdHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesRcvdLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesRcvdHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsReas"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsReasLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragPktsReasHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesReas"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesReasLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragBytesReasHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragReasErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragReasErrorsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragReasErrorsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragDiscLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasFragDiscHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasOutBufRes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasOutBufResLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasOutBufResHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsRxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsRxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesRxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesRxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsTx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsTxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasPktsTxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesTx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesTxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasBytesTxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsRcvdLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsRcvdHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesRcvdL32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesRcvdH32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsReas"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsReasLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragPktsReasHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesReas"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesReasL32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragBytesReasH32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragReasErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragReasErrorsL32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragReasErrorsH32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragDiscLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6FragDiscHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6OutBufRes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6OutBufResLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6OutBufResHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsRxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsRxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesRxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesRxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsTx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsTxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6PktsTxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesTx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesTxLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpReasV6BytesTxHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSpeed"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfIpReasV9v0Group.setStatus("current")

tmnxVRtrIfStatsV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 74)
)
tmnxVRtrIfStatsV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfRxBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4Bytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4BytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4BytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DiscardPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4Pkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4PktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4PktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6Bytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6BytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6BytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6DiscardPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6Pkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6PktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV6PktsLow32"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfStatsV9v0Group.setStatus("current")

tmnxVRtrNotificationObjV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 75)
)
tmnxVRtrNotificationObjV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutePrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxRoutesType"),
        ("TIMETRA-VRTR-MIB", "vRtrSlotOrCpmFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessChangedProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessProtoChngdState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObjV8v0Group.setStatus("obsolete")

tmnxVRtrIfDHCPRelayV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 76)
)
tmnxVRtrIfDHCPRelayV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLayer2Header"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAntiSpoofMacAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPClientApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUseArpForReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPlainBootp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPUserDb"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPFilterId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV9v0Group.setStatus("current")

tmnxVRtrNatRedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 77)
)
tmnxVRtrNatRedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrNatRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNatActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6NatRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6NatActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatNatRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6NatRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNatRedGroup.setStatus("current")

tmnxVRtrIfV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 78)
)
tmnxVRtrIfV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfoEncrypted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfStatusString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperDownReason"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV9v0Group.setStatus("obsolete")

tmnxVRtrMSPwV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 79)
)
tmnxVRtrMSPwV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMsPwL2RtIsBestRoute"),
        ("TIMETRA-VRTR-MIB", "vRtrMsPwL2RtRDCommunity"),
        ("TIMETRA-VRTR-MIB", "vRtrMsPwL2RtAge"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMSPwV9v0Group.setStatus("current")

tmnxVRtrMvpnSrcRedV9v0R4Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 80)
)
tmnxVRtrMvpnSrcRedV9v0R4Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiEnableBfdRoot"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiEnableBfdLeaf"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiBfdRtTraInt"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiBfdRootMult"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMvpnSrcRedV9v0R4Group.setStatus("current")

tmnxVRtrObsoletedBfdV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 81)
)
tmnxVRtrObsoletedBfdV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdTransmitInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdReceiveInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdEchoInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoletedBfdV9v0Group.setStatus("current")

tmnxVRtrStatV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 82)
)
tmnxVRtrStatV9v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrISISAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ISISAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ISISActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatCurrNumAltRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStatV9v0Group.setStatus("current")

tmnxVRtruRPFV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 83)
)
tmnxVRtruRPFV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpv6uRPFCheckState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6uRPFCheckMode"))
)
if mibBuilder.loadTexts:
    tmnxVRtruRPFV10v0Group.setStatus("current")

tmnxVRtrPolicyGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 84)
)
tmnxVRtrPolicyGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy6"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy7"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy8"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy9"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy10"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy11"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy12"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy13"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy14"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportPolicy15"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy6"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy7"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy8"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy9"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy10"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy11"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy12"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy13"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy14"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportPolicy15"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy6"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy7"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy8"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy9"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy10"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy11"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy12"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy13"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy14"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportPolicy15"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy6"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy7"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy8"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy9"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy10"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy11"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy12"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy13"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy14"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportPolicy15"))
)
if mibBuilder.loadTexts:
    tmnxVRtrPolicyGroup.setStatus("current")

tmnxVRtrIfDHCP6V10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 85)
)
tmnxVRtrIfDHCP6V10v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LinkAddress")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCP6V10v0Group.setStatus("current")

tmnxVRtrGlobalV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 86)
)
tmnxVRtrGlobalV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTmsOffRampVprn"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTmsMgmtVprn"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnBackupPath"),
        ("TIMETRA-VRTR-MIB", "vRtrIpFastReroute"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv4SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv6SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfStatusString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperDownReason"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalV10v0Group.setStatus("obsolete")

tmnxVRtrQosQGrplV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 87)
)
tmnxVRtrQosQGrplV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfQosNetworkPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrPortRedirectQGrp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrQGrpInstanceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosIngFpRedirectQGrp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosIngQGrpInstanceId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrQosQGrplV10v0Group.setStatus("current")

tmnxVRtrStatV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 88)
)
tmnxVRtrStatV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBGPVPNAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPVPNActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPVPNAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BGPVPNActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6OSPFAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6OSPFActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrPeriodicRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrPeriodicActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6PeriodicRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6PeriodicActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStatV10v0Group.setStatus("current")

tmnxVRtrIfObsoletedV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 89)
)
tmnxVRtrIfObsoletedV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfoEncrypted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosQGrp"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfObsoletedV10v0Group.setStatus("current")

tmnxVRtrV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 90)
)
tmnxVRtrV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefix"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefixType"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrHostRoutePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdmLnkLclAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLsrIpLoadBalancing"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRenewTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRebindTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyPrefLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6UserDb"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadHldOffTime"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadStart"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadTime"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtState"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnCMcastImportRT"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxIpv6ExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwnAxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePaddingSize"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV10v0Group.setStatus("obsolete")

tmnxVRtrIfV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 91)
)
tmnxVRtrIfV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTotalNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPortID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEncapValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAlias"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPhysicalAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpTimeout"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpMaskReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirectsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachablesTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpiredTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNtpBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumbered"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDirectedBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCflowd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfVPNClass"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTosMarkingTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpPopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLastOperStateChange"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNameIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelaySeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayUpTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayEnable"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHOwnAxInfo"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV10v0Group.setStatus("obsolete")

tmnxVRtrFlowSpecV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 93)
)
tmnxVRtrFlowSpecV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIngressIpv4Flowspec"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressIpv6Flowspec"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFlowSpecV11v0Group.setStatus("current")

tmnxVRtrIfExtV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 94)
)
tmnxVRtrIfExtV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfLagLinkMapProfile"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLagActivePort"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressStatsEnabled"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEnableMacAccounting"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV11v0Group.setStatus("obsolete")

tmnxVRtrGrtLocalMgmtV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 95)
)
tmnxVRtrGrtLocalMgmtV10v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrGrtLocalMgmtState")
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtLocalMgmtV10v0Group.setStatus("current")

tmnxVRtrV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 96)
)
tmnxVRtrV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCreationOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolDefPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolSecPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmGroup"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynamicBgp"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelNextHopFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNH"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV11v0Group.setStatus("obsolete")

tmnxVRtrStatV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 97)
)
tmnxVRtrStatV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrOSPFv3Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFv3ActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFv3AltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFv3ActiveAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6ManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalMplsTpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveMplsTpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6PdRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6PdActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6NaRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6NaActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6TaRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6TaActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6PdExclRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6Dhcpv6PdExclActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStatV11v0Group.setStatus("current")

tmnxVRtrMcastV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 98)
)
tmnxVRtrMcastV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfMcastNetworkDomainName"),
        ("TIMETRA-VRTR-MIB", "vRtrNetDomainMcastAssociationCnt"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMcastV11v0Group.setStatus("current")

tmnxVRtrIfStatsV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 99)
)
tmnxVRtrIfStatsV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfRxV6Pkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV6PktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV6PktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV6Bytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV6BytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV6BytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV6uRPFCheckFailBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV4Pkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV4Bytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV4uRPFCheckFailPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfV4uRPFCheckFailBytes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfStatsV11v0Group.setStatus("current")

tmnxVRtrIfDHCPRelayV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 100)
)
tmnxVRtrIfDHCPRelayV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayUnicastMsg"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxUDB"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV11v0Group.setStatus("current")

tmnxVrtrIfDCpuProtV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 102)
)
tmnxVrtrIfDCpuProtV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticHoldDown"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticDetectionTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynHoldDown"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynDetectionTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynAllocated"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonAllDynAlloc"))
)
if mibBuilder.loadTexts:
    tmnxVrtrIfDCpuProtV11v0Group.setStatus("current")

tmnxVrtrIfDHCP6ProxyDuidGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 103)
)
tmnxVrtrIfDHCP6ProxyDuidGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidTypeCode"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidEnNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidEnIdData"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyDuidEnIdDataType"))
)
if mibBuilder.loadTexts:
    tmnxVrtrIfDHCP6ProxyDuidGroup.setStatus("current")

tmnxVrtrDcpNotifyObjsV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 104)
)
tmnxVrtrDcpNotifyObjsV11v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured")
)
if mibBuilder.loadTexts:
    tmnxVrtrDcpNotifyObjsV11v0Group.setStatus("current")

tmnxVRtrIfMacStatsV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 106)
)
tmnxVRtrIfMacStatsV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInOctets"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInOctetsL"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInOctetsH"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInFrames"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInFramesL"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingInFramesH"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutOctets"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutOctetsL"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutOctetsH"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutFrames"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutFramesL"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMacAccountingOutFramesH"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfMacStatsV11v0Group.setStatus("current")

tmnxVRtrIpv6RtrAdvertV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 107)
)
tmnxVRtrIpv6RtrAdvertV11v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIpv6RtrAdvertCreationOrigin")
)
if mibBuilder.loadTexts:
    tmnxVRtrIpv6RtrAdvertV11v0Group.setStatus("current")

tmnxVRtrBfdV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 108)
)
tmnxVRtrBfdV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdExtTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtTransmitInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtReceiveInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtMultiplier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtEchoInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdExtType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtMesgRecv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtMesgSent"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLastDownTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLastUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtUpCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtDownCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtVerMismatch"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtTimeSinceLastRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtTimeSinceLastTx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemoteLspNum"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemoteTunnelNum"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemoteNodeId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtRemoteGlobalId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdV11v0Group.setStatus("current")

tmnxVRtrBfdSessionObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 109)
)
tmnxVRtrBfdSessionObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgRecv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionMesgSent"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastDownTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLastUpTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionUpCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionDownCount"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRemDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionRxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionVerMismatch"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastRx"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionTimeSinceLastTx"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessionObsoletedGroup.setStatus("current")

tmnxVRtrIfDHCP6V11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 112)
)
tmnxVRtrIfDHCP6V11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RoutePopulatePd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RoutePopulateNa"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RoutePopulateTa"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCP6V11v0Group.setStatus("current")

tmnxVRtrNotifyObjsV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 113)
)
tmnxVRtrNotifyObjsV11v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrNotifTruthValue")
)
if mibBuilder.loadTexts:
    tmnxVRtrNotifyObjsV11v0Group.setStatus("current")

tmnxVRtrV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 114)
)
tmnxVRtrV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRipNgStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTcpMss"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6TcpMss"),
        ("TIMETRA-VRTR-MIB", "vRtrIfuRPFIgnoreDefault"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6uRPFIgnoreDefault"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfAdminGrpTableLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfAdminGroupRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfAdminGroupLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfSrlgGrpTableLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfSrlgGroupRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfSrlgGroupLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteValidateNH"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPPythonPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVirtualSubnet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteSrcClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDstClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6NdCacheStaleTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteSrcClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteDstClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtSrcClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtDstClassIndex"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressSendCgaModifier"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV12v0Group.setStatus("current")

tmnxVRtrIfDHCP6V12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 115)
)
tmnxVRtrIfDHCP6V12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCP6RoutePopulateExcl"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6PythonPolicy"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCP6V12v0Group.setStatus("current")

tmnxVRtrExportBgpVpnV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 116)
)
tmnxVRtrExportBgpVpnV11v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrAllowExportBgpVpn")
)
if mibBuilder.loadTexts:
    tmnxVRtrExportBgpVpnV11v0Group.setStatus("current")

tmnxVRtrGenerateICMPV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 117)
)
tmnxVRtrGenerateICMPV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteGenerateIcmp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrGenerateIcmp"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGenerateICMPV12v0Group.setStatus("current")

tmnxVRtrIfSendV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 118)
)
tmnxVRtrIfSendV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrSendKeyRollover"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendAllowUnsecuredMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendCgaSecurityParameter"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendCgaVerificationMinbits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendLinkLocalCgaModifier"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfSendTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalSecureNd"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfSendV12v0Group.setStatus("current")

tmnxvRtrIfAttributeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 119)
)
tmnxvRtrIfAttributeGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxAdminGroupTblLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxAdminGrpRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxAdminGrpRowLstChng"),
        ("TIMETRA-VRTR-MIB", "tmnxAdminGrpValue"),
        ("TIMETRA-VRTR-MIB", "tmnxSrlgGroupTblLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxSrlgGrpRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxSrlgGrpRowLstChng"),
        ("TIMETRA-VRTR-MIB", "tmnxSrlgGrpValue"))
)
if mibBuilder.loadTexts:
    tmnxvRtrIfAttributeGroup.setStatus("current")

tmnxVRtrIfExtV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 121)
)
tmnxVRtrIfExtV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfLagLinkMapProfile"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLagActivePort"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressStatsEnabled"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6DadDisable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEnableMacAccounting"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdCacheStaleTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTmsOffRampIgrVrf"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV12v0Group.setStatus("obsolete")

tmnxVRtrCreation12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 122)
)
tmnxVRtrCreation12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaCreationOrigin"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfPlcyCreationOrigin"))
)
if mibBuilder.loadTexts:
    tmnxVRtrCreation12v0Group.setStatus("current")

tmnxVRtrIPsecStatGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 123)
)
tmnxVRtrIPsecStatGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIPsecRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPsecActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPsecStatGroup.setStatus("current")

tmnxVRtrVirtualCPE12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 124)
)
tmnxVRtrVirtualCPE12v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrAllowSnmpAccess")
)
if mibBuilder.loadTexts:
    tmnxVRtrVirtualCPE12v0Group.setStatus("current")

tmnxVRtrBgpEvpn12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 125)
)
tmnxVRtrBgpEvpn12v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrStatBGPEVPNARPEntries")
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpEvpn12v0Group.setStatus("current")

tmnxVRtrLagHashLoadBal12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 126)
)
tmnxVRtrLagHashLoadBal12v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfTeidLoadBalancing")
)
if mibBuilder.loadTexts:
    tmnxVRtrLagHashLoadBal12v0Group.setStatus("current")

tmnxVRtrPlcyAcctTempl12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 127)
)
tmnxVRtrPlcyAcctTempl12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplTblLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctTemplateLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctSrcClassTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctSrcClassRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctSrcClassLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctDestClassTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctDestClassRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctDestClassLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPlcyAcctTemplateName"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctIfStatsTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctRxFwdPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctRxFwdBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctRxIncompleteCnt"))
)
if mibBuilder.loadTexts:
    tmnxVRtrPlcyAcctTempl12v0Group.setStatus("current")

tmnxVRtrLagEgrLoadBal12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 128)
)
tmnxVRtrLagEgrLoadBal12v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfEgrIpLoadBalancing")
)
if mibBuilder.loadTexts:
    tmnxVRtrLagEgrLoadBal12v0Group.setStatus("current")

tmnxVRtrVccvBfd12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 129)
)
tmnxVRtrVccvBfd12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessSdpBindIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrVccvBfd12v0Group.setStatus("current")

tmnxVRtrRAV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 130)
)
tmnxVRtrRAV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRARowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRADnsOptServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrRADnsOptServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrRADnsOptServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrRADnsOptServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrRADnsOptRdnssLtime"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptRdnssLtime"),
        ("TIMETRA-VRTR-MIB", "vRtrRAIfDnsOptInclDns"))
)
if mibBuilder.loadTexts:
    tmnxVRtrRAV12v0Group.setStatus("current")

tmnxVRtrIcmpTunnelingGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 132)
)
tmnxVRtrIcmpTunnelingGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIcmpTunneling"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropVprnLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropVprnTransit"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropLabelRouteLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropLabelRouteTransit"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropLsrLabelRoute"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcTTLPropVprnLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcTTLPropVprnTransit"),
        ("TIMETRA-VRTR-MIB", "vRtrTTLPropTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcTTLPropTblLstChgd"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIcmpTunnelingGroup.setStatus("current")

tmnxVRtrAggrRouteV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 133)
)
tmnxVRtrAggrRouteV12v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetAggrDescription")
)
if mibBuilder.loadTexts:
    tmnxVRtrAggrRouteV12v0Group.setStatus("current")

tmnxVRtrBgpEvpnIpRoutes12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 134)
)
tmnxVRtrBgpEvpnIpRoutes12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPEvpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPEvpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPEvpnRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpEvpnIpRoutes12v0Group.setStatus("obsolete")

tmnxVRtrConfExtV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 135)
)
tmnxVRtrConfExtV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnMdSourceAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnMdSourceAddress"))
)
if mibBuilder.loadTexts:
    tmnxVRtrConfExtV12v0Group.setStatus("current")

tmnxVRtrStickyHashEcmp12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 136)
)
tmnxVRtrStickyHashEcmp12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStickyHashEcmp12v0Group.setStatus("current")

tmnxVRtrV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 137)
)
tmnxVRtrV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxSrlgGrpPenaltyWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrDisableSelectiveFib"),
        ("TIMETRA-VRTR-MIB", "vRtrWeightedEcmp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelaySiaddrOvrAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelaySiaddrOvrAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlNextHopWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefix"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefixType"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrHostRoutePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdmLnkLclAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLsrIpLoadBalancing"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRenewTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRebindTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyPrefLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6UserDb"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadHldOffTime"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadStart"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadTime"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtState"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnCMcastImportRT"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxIpv6ExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwnAxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePaddingSize"),
        ("TIMETRA-VRTR-MIB", "vRtrV6LDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6LDPActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV13v0Group.setStatus("obsolete")

tmnxVRtrNotifyObjsNHRvplsArpGrp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 138)
)
tmnxVRtrNotifyObjsNHRvplsArpGrp.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxNHRvplsARPEntries")
)
if mibBuilder.loadTexts:
    tmnxVRtrNotifyObjsNHRvplsArpGrp.setStatus("current")

tmnxVRtrTunnelExtTableV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 141)
)
tmnxVRtrTunnelExtTableV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNextHopFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspBandwidth"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelRelativeMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLabel"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelBypassLabel"))
)
if mibBuilder.loadTexts:
    tmnxVRtrTunnelExtTableV13v0Group.setStatus("obsolete")

tmnxVRtrMcastSpmsiEnhV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 142)
)
tmnxVRtrMcastSpmsiEnhV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnWildcardSpmsi"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnWildcardSpmsiBsrSig"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMcastSpmsiEnhV13v0Group.setStatus("current")

tmnxVRtrHoldDownTimeV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 143)
)
tmnxVRtrHoldDownTimeV12v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStaticRouteHoldDownEnable"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteHoldDownInitial"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteHoldDownMultiplr"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteHoldDownMaxValue"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteHoldTimeLeft"))
)
if mibBuilder.loadTexts:
    tmnxVRtrHoldDownTimeV12v0Group.setStatus("current")

tmnxVRtrLoadBalEnhV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 144)
)
tmnxVRtrLoadBalEnhV13v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfSpiLoadBalancing")
)
if mibBuilder.loadTexts:
    tmnxVRtrLoadBalEnhV13v0Group.setStatus("current")

tmnxVRtrInetSRIndirectV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 145)
)
tmnxVRtrInetSRIndirectV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelLdp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelRsvpTe"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelDisalIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectLspRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunResStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetSRIndirectV13v0Group.setStatus("current")

tmnxVRtrIfExtIfArpRetryTimerGrp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 146)
)
tmnxVRtrIfExtIfArpRetryTimerGrp.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfArpRetryTimer")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtIfArpRetryTimerGrp.setStatus("current")

tmnxVRtrBgpAutoRDGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 147)
)
tmnxVRtrBgpAutoRDGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBgpAutoRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpOperRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpOperRDType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpAutoRDGroup.setStatus("current")

tmnxVRtrTunnelTableStatGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 148)
)
tmnxVRtrTunnelTableStatGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalIsisTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIsisTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalOspfTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveOspfTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrTunnelTableStatGroup.setStatus("current")

tmnxVRtrIfDHCPRelayV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 149)
)
tmnxVRtrIfDHCPRelayV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxNq"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6FilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6SnpgAdminState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV13v0Group.setStatus("current")

tmnxVRtrLdpIpv613v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 150)
)
tmnxVRtrLdpIpv613v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrLdpShortcutType")
)
if mibBuilder.loadTexts:
    tmnxVRtrLdpIpv613v0Group.setStatus("current")

tmnxVRtrIfLagPerLinkHashGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 151)
)
tmnxVRtrIfLagPerLinkHashGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfLagPerLinkHashLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLagPerLinkHashClass"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLagPerLinkHashWeight"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfLagPerLinkHashGroup.setStatus("current")

tmnxVRtrCidrNextHopOwnInstGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 152)
)
tmnxVRtrCidrNextHopOwnInstGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopOwnInst"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHOwnInst"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopOwnInst"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwnInst"))
)
if mibBuilder.loadTexts:
    tmnxVRtrCidrNextHopOwnInstGroup.setStatus("current")

tmnxVRtrIpV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 153)
)
tmnxVRtrIpV13v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRiaIpAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaNetMask"),
        ("TIMETRA-VRTR-MIB", "vRiaBcastAddrFormat"),
        ("TIMETRA-VRTR-MIB", "vRiaReasmMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRiaIgpInhibit"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrState"),
        ("TIMETRA-VRTR-MIB", "vRiaInetEui64"),
        ("TIMETRA-VRTR-MIB", "vRiaInetOperAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIpType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIp"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHopUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAvailableIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEnableBfd"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAvailIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetInstAggrTblLastChged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalIsRouter"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalPort"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalEncap"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteIfVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteTunnEndpntInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrProtocolInstance"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLdpSync"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCreationOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolDefPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolSecPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmGroup"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynamicBgp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNH"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV13v0Group.setStatus("obsolete")

tmnxVRtrIpV13v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 154)
)
tmnxVRtrIpV13v0ObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteDisallowIgp"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteIgpShortcut"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDisallowIgp"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV13v0ObsoletedGroup.setStatus("current")

tmnxVRtrIfObsoletedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 155)
)
tmnxVRtrIfObsoletedV13v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfCflowd")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfObsoletedV13v0Group.setStatus("current")

tmnxVRtrV13v0GenObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 156)
)
tmnxVRtrV13v0GenObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrTunnelNextHopFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpShortcut"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV13v0GenObsoletedGroup.setStatus("current")

tmnxVRtrIfArpNbrLimitGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 157)
)
tmnxVRtrIfArpNbrLimitGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfArpLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfArpNbrLimitGroup.setStatus("current")

tmnxVRtrIfExtV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 158)
)
tmnxVRtrIfExtV13v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfVasIfType")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV13v0Group.setStatus("current")

tmnxVRtrV13v0IfStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 159)
)
tmnxVRtrV13v0IfStatsGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfRxMplsPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxMplsPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxMplsBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxMplsBytes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV13v0IfStatsGroup.setStatus("current")

tmnxVRtrTunnelTableCBFV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 161)
)
tmnxVRtrTunnelTableCBFV13v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspFC")
)
if mibBuilder.loadTexts:
    tmnxVRtrTunnelTableCBFV13v0Group.setStatus("obsolete")

tmnxVRtrIPv6IPsecStatGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 162)
)
tmnxVRtrIPv6IPsecStatGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrV6IPsecRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6IPsecActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6IPsecStatGroup.setStatus("current")

tmnxVRtrUniqueIfIndexGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 163)
)
tmnxVRtrUniqueIfIndexGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVrtrIfIndexVrtrIfName"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrSysEnforceUniqueIfIndex"))
)
if mibBuilder.loadTexts:
    tmnxVRtrUniqueIfIndexGroup.setStatus("current")

tmnxVRtrStaticRoutePrefixGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 164)
)
tmnxVRtrStaticRoutePrefixGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCreateOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCfgNHCount"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStaticRoutePrefixGroup.setStatus("current")

tmnxVRtrV14v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 165)
)
tmnxVRtrV14v0ObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressIpv4Flowspec"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressIpv6Flowspec"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV14v0ObsoletedGroup.setStatus("current")

tmnxVRtrV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 166)
)
tmnxVRtrV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxSrlgGrpPenaltyWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrDisableSelectiveFib"),
        ("TIMETRA-VRTR-MIB", "vRtrWeightedEcmp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelaySiaddrOvrAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelaySiaddrOvrAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlNextHopWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrName"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRipStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsvpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrNewIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrLdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRouterId"),
        ("TIMETRA-VRTR-MIB", "vRtrTriggeredPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrRouteDistinguisher"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrVpnId"),
        ("TIMETRA-VRTR-MIB", "vRtrDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestart"),
        ("TIMETRA-VRTR-MIB", "vRtrGracefulRestartType"),
        ("TIMETRA-VRTR-MIB", "vRtrType"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrCustId"),
        ("TIMETRA-VRTR-MIB", "vRtrIgmpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrPimStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMsdpStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrVprnType"),
        ("TIMETRA-VRTR-MIB", "vRtrSecondaryVrfId"),
        ("TIMETRA-VRTR-MIB", "vRtrMldStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MaxNumRoutesLogOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6IgnoreIcmpRedirect"),
        ("TIMETRA-VRTR-MIB", "vRtrMcPathMgmtPlcyName"),
        ("TIMETRA-VRTR-MIB", "vRtrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDirectActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrOSPFActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBGPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrISISActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrRIPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAggregateActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatConfiguredIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIfs"),
        ("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPVpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveLdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrSubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatTotalRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatActiveRsvpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6HostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatLocalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatStaticARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatDynamicARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatManagedARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatInternalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatLastCleared"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6DropStatPktsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsLstClrd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsRcvd"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsSent"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6MsgStatsDropped"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNHTunnelName"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrConfederationAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefix"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrPrefixType"),
        ("TIMETRA-VRTR-MIB", "vRiaSubscrHostRoutePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdmLnkLclAddrPreferred"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminLinkLocalAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLsrIpLoadBalancing"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRenewTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyRebindTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyPrefLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ProxyApplications"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6UserDb"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadHldOffTime"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadState"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadStart"),
        ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadTime"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrLDPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtState"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrVPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6VPNLeakActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6SubMgmtActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiType"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6MobileHostActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfExportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnVrfImportTargetUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnImportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnExportPolicyUnicast"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnCMcastImportRT"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxIpv6ExportRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRteTnlEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNextHopOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtNHOwnerAuxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRtBkupNHOwnAxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePaddingSize"),
        ("TIMETRA-VRTR-MIB", "vRtrV6LDPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6LDPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrMssAdjTableLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrMssAdjLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrMssAdjRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrMssAdjGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrMssAdjSegmentSize"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV14v0Group.setStatus("current")

tmnxVRtrEntropyLabelGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 169)
)
tmnxVRtrEntropyLabelGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrEntropyLabel")
)
if mibBuilder.loadTexts:
    tmnxVRtrEntropyLabelGroup.setStatus("current")

tmnxVRtrLspBfdGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 170)
)
tmnxVRtrLspBfdGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrLspBfdSession"),
        ("TIMETRA-VRTR-MIB", "vRtrLspBfdMaxSessions"))
)
if mibBuilder.loadTexts:
    tmnxVRtrLspBfdGroup.setStatus("current")

tmnxVRtrIfV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 171)
)
tmnxVRtrIfV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDelayV4UpSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV4DownSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6UpSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6DownSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV4Timer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6Timer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayV4Enable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayV6Enable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperV4DownReason"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperV6DownReason"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpEolib"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV14v0Group.setStatus("obsolete")

tmnxVRtrConfFlowspecV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 172)
)
tmnxVRtrConfFlowspecV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrConfFlowspecTableLstChg"),
        ("TIMETRA-VRTR-MIB", "vRtrConfFlowspecLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpEmbeddedFlowspecMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6EmbeddedFlowspecMaxSize"))
)
if mibBuilder.loadTexts:
    tmnxVRtrConfFlowspecV14v0Group.setStatus("current")

tmnxVRtrInetSRIndirectV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 173)
)
tmnxVRtrInetSRIndirectV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelSrIsis"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelSrOspf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelSrTe"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndSrTeLspRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetSRIndirectV14v0Group.setStatus("current")

tmnxVRtrFibStatsV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 174)
)
tmnxVRtrFibStatsV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrFibStatTotalInstalledRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatCurrentUtilization"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatFilteredRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6TotalInstalledRt"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6CurrentUtilization"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6FilteredRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6Overflows"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFibStatsV14v0Group.setStatus("current")

tmnxVRtrIfDHCPRelayV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 175)
)
tmnxVRtrIfDHCPRelayV14v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsStream")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfDHCPRelayV14v0Group.setStatus("current")

tmnxVRtrBgpLblIpRoutes14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 176)
)
tmnxVRtrBgpLblIpRoutes14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatBGPLabelV4Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPLabelV4ActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPLabelV6Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPLabelV6ActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPLabelV4Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPLabelV6Routes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpLblIpRoutes14v0Group.setStatus("current")

tmnxVRtrV6TunnelTableStatGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 177)
)
tmnxVRtrV6TunnelTableStatGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalIsisV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveIsisV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV6TunnelTableStatGroup.setStatus("current")

tmnxVRtrSrTeV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 178)
)
tmnxVRtrSrTeV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalSrTeTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSrTeTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrTeV14v0Group.setStatus("current")

tmnxVRtrIfExtV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 179)
)
tmnxVRtrIfExtV14v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfCreationOrigin")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV14v0Group.setStatus("current")

tmnxVRtrV14v0NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 181)
)
tmnxVRtrV14v0NotifyObjsGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrNotifIgnorePortState")
)
if mibBuilder.loadTexts:
    tmnxVRtrV14v0NotifyObjsGroup.setStatus("current")

tmnxVRtrTunnelTableLSCV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 182)
)
tmnxVRtrTunnelTableLSCV14v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetTunnelMaxLabels")
)
if mibBuilder.loadTexts:
    tmnxVRtrTunnelTableLSCV14v0Group.setStatus("obsolete")

tmnxVRtrIcmpV4StatsV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 183)
)
tmnxVRtrIcmpV4StatsV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIcmpInMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInSrcQuenchs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInTimestamps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInTimestampReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInAddrMasks"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInAddrMaskReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpInParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutSrcQuenchs"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutTimestamps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutTimestampReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutAddrMasks"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutAddrMaskReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInSrcQuenchs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInTimestamps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInTimestampReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInAddrMasks"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInAddrMaskReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpInParmProblems"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutMsgs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutErrors"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutDestUnreachs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutEchos"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutEchoReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutTimeExcds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutSrcQuenchs"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutTimestamps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutTimestampReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutAddrMasks"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutAddrMaskReps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutParmProblems"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIcmpV4StatsV14v0Group.setStatus("current")

tmnxVRtrIcmpV4ParamV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 184)
)
tmnxVRtrIcmpV4ParamV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIcmpV4ParamProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV4NumParamProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpV4ParamProblemTime"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIcmpV4ParamV14v0Group.setStatus("current")

tmnxVRtrTunnelTableNhTV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 185)
)
tmnxVRtrTunnelTableNhTV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelInst"))
)
if mibBuilder.loadTexts:
    tmnxVRtrTunnelTableNhTV14v0Group.setStatus("obsolete")

tmnxVRtrFpeV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 186)
)
tmnxVRtrFpeV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalFpeTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveFpeTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFpeV14v0Group.setStatus("current")

tmnxVRtrV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 187)
)
tmnxVRtrV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMtrace2AdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrMtrace2UdpPort"),
        ("TIMETRA-VRTR-MIB", "vRtrOperRouterId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV15v0Group.setStatus("current")

tmnxVrtrDDosDCpuProtPolicyGrp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 188)
)
tmnxVrtrDDosDCpuProtPolicyGrp.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfOperDCpuProtPolicy")
)
if mibBuilder.loadTexts:
    tmnxVrtrDDosDCpuProtPolicyGrp.setStatus("current")

tmnxVRtrIfExtV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 189)
)
tmnxVRtrIfExtV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfUrpfSelectedVprnsOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpTunnelRemoteIpAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpTunnelRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV15v0Group.setStatus("current")

tmnxVRtrUdpTunnelGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 191)
)
tmnxVRtrUdpTunnelGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalUdpTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveUdpTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrUdpTunnelGroup.setStatus("current")

tmnxVRtrIpV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 192)
)
tmnxVRtrIpV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRiaIpAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaNetMask"),
        ("TIMETRA-VRTR-MIB", "vRiaBcastAddrFormat"),
        ("TIMETRA-VRTR-MIB", "vRiaReasmMaxSize"),
        ("TIMETRA-VRTR-MIB", "vRiaIgpInhibit"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddrState"),
        ("TIMETRA-VRTR-MIB", "vRiaInetEui64"),
        ("TIMETRA-VRTR-MIB", "vRiaInetOperAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddressType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetGwAddress"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIpType"),
        ("TIMETRA-VRTR-MIB", "vRiaInetRemoteIp"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrIpCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteEnableBfd"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteAvailIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToMediaOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixAutonomousFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixPreferredLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAdvPrefixRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetInstAggrTblLastChged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrSummaryOnly"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrASSet"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorIPAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalIsRouter"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalPort"),
        ("TIMETRA-VRTR-MIB", "vRtrIpNetToPhysicalEncap"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteIfVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrAggregatorAS4Byte"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteTunnEndpntInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrProtocolInstance"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLdpSync"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCreationOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrIndirectAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolDefPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolSecPoolName"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmGroup"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynamicBgp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ServerName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLocalPoolV6ClientApps"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteDynBgpNH"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV15v0Group.setStatus("current")

tmnxVRtrIpV15v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 193)
)
tmnxVRtrIpV15v0ObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStaticRouteDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteLastEnabledTime"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRoutePreference"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteEgressIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteNextHopUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexDest"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteIndexMask"),
        ("TIMETRA-VRTR-MIB", "vRtrStaticRouteAvailableIndex"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV15v0ObsoletedGroup.setStatus("current")

tmnxVRtrQinQNetworkIntfGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 194)
)
tmnxVRtrQinQNetworkIntfGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVrtrSysAllowQinQNetworkIntf")
)
if mibBuilder.loadTexts:
    tmnxVRtrQinQNetworkIntfGroup.setStatus("current")

tmnxVRtrIfV15v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 195)
)
tmnxVRtrIfV15v0ObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDelaySeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayUpTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayEnable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperDownReason"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV15v0ObsoletedGroup.setStatus("current")

tmnxVRtrGlobalV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 196)
)
tmnxVRtrGlobalV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrVpnBackupPath"),
        ("TIMETRA-VRTR-MIB", "vRtrIpFastReroute"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv4SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv6SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfStatusString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperDownReason"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalV15v0Group.setStatus("obsolete")

tmnxVRtrGlobalObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 197)
)
tmnxVRtrGlobalObsoletedGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTmsOffRampVprn"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTmsMgmtVprn"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNtpBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAlias"),
        ("TIMETRA-VRTR-MIB", "vRtrIfStatusString"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastIpv4StatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastIpv4StatBGPEvpnActvRts"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastIpv6StatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastIpv6StatBGPEvpnActvRts"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalObsoletedGroup.setStatus("current")

tmnxVRtrIfExtV15v0ObjectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 198)
)
tmnxVRtrIfExtV15v0ObjectGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfLagLinkMapProfile"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLagActivePort"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressStatsEnabled"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6ReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6DadDisable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEnableMacAccounting"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdCacheStaleTime"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtV15v0ObjectGroup.setStatus("current")

tmnxVRtrIfExtObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 199)
)
tmnxVRtrIfExtObsoletedGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfTmsOffRampIgrVrf")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtObsoletedGroup.setStatus("current")

tmnxVRtrClassFwdingV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 200)
)
tmnxVRtrClassFwdingV15v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrClassForwarding")
)
if mibBuilder.loadTexts:
    tmnxVRtrClassFwdingV15v0Group.setStatus("current")

tmnxVRtrIfExtHostRteV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 202)
)
tmnxVRtrIfExtHostRteV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpLearnUnsol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpProRef"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdLearnUnsol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdProRef"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpPopulateHost"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdPopulateHost"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrStatArpRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatArpActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatNdRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatNdActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtHostRteV15v0Group.setStatus("obsolete")

tmnxVRtrIfNgeStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 203)
)
tmnxVRtrIfNgeStatsGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTxNgeEncryptPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxNgeEncryptBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeDecryptPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeDecryptBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeInvSpiDropPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeInvSpiDropBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeOthDropPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeOthDropBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeIcmpDropPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxNgeIcmpDropBytes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfNgeStatsGroup.setStatus("current")

tmnxVRtrIfStatsV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 205)
)
tmnxVRtrIfStatsV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfAltRxMplsPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAltTxMplsPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAltRxMplsBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAltTxMplsBytes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfStatsV16v0Group.setStatus("current")

tmnxVRtrAdminTagsV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 206)
)
tmnxVRtrAdminTagsV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrAdminTagsRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAdminTagsPolicyRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrATPolicyIncludeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrATPolicyExcludeRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrAdminTagsV16v0Group.setStatus("current")

tmnxVRtrLargeCommValV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 207)
)
tmnxVRtrLargeCommValV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal2"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal3"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal4"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal5"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal6"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal7"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal8"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal9"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal10"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal11"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrCommunityVal12"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal1"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal2"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal3"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal4"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal5"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal6"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal7"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal8"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal9"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal10"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal11"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxCommVal12"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxTag"))
)
if mibBuilder.loadTexts:
    tmnxVRtrLargeCommValV16v0Group.setStatus("current")

tmnxVRtrIfStatsDBCastV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 208)
)
tmnxVRtrIfStatsDBCastV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTxV4DirectedBcastPktDrop"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxV4DirectedBcastByteDrop"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfStatsDBCastV16v0Group.setStatus("current")

tmnxVRtrIfV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 209)
)
tmnxVRtrIfV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTotalNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPortID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEncapValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfPhysicalAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpTimeout"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpMaskReply"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumRedirects"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpRedirectsTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumUnreachables"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpUnreachablesTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpNumTtlExpired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIcmpTtlExpiredTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumbered"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressFilterId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDirectedBroadcast"),
        ("TIMETRA-VRTR-MIB", "vRtrIfMplsStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfUnnumberedIf"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCflowd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfVPNClass"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTosMarkingTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpPopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLastOperStateChange"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperMtu"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArp"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpLocal"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfProxyArpPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNameIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayInfoAction"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayCircuitId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer1"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer2"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer3"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer4"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer5"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer6"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer7"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServer8"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxMalformedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRxUntrustedPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsDiscarded"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsRelayed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayServerPktsSnooped"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxRad"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayClientPktsProxLS"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenRelease"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayPktsGenForceRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperLeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPGiAddressAsSrc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPMatchOption82"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPRelayRemoteIdStr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyServerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPProxyLTRadiusOverride"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorIncludeOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPVendorOptionString"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGlobalIndexvRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelaySeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayUpTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayEnable"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHOwner"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteBkupNHOwnAxInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV4UpSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV4DownSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6UpSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6DownSeconds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV4Timer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDelayV6Timer"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayV4Enable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInitDelayV6Enable"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperV4DownReason"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperV6DownReason"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpEolib"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpHelperGatewayAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrIfGreTermination"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIlmUntrusted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIlmDefaultForwarding"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV16v0Group.setStatus("current")

tmnxVRtrLocalPrefV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 210)
)
tmnxVRtrLocalPrefV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetAggrFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAggrLocalPreference"))
)
if mibBuilder.loadTexts:
    tmnxVRtrLocalPrefV16v0Group.setStatus("current")

tmnxVRtrIpV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 211)
)
tmnxVRtrIpV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRiaInetAddressPrimaryPreference"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressPrimaryPreferred"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpV16v0Group.setStatus("current")

tmnxVRtrLoadBalWeightV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 212)
)
tmnxVRtrLoadBalWeightV16v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteLoadBalWeight")
)
if mibBuilder.loadTexts:
    tmnxVRtrLoadBalWeightV16v0Group.setStatus("current")

tmnxVRtrInetExtTunnelV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 213)
)
tmnxVRtrInetExtTunnelV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelPreference"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelTypeInstance"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelID"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNextHopAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNextHopAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNextHopFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelLspBandwidth"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelLspWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelLspId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelRelativeMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelLabel"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelBypassLabel"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelLspFC"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelMaxLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhTunnelType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhTunnelInst"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelColor"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhWeight"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetExtTunnelV16v0Group.setStatus("current")

tmnxVRtrGrtLeakImpPolV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 214)
)
tmnxVRtrGrtLeakImpPolV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrLeakExportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrLeakExportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrLeakExportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrLeakExportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrLeakExportPolicy5"),
        ("TIMETRA-VRTR-MIB", "vRtrLeakExportLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtImportPolicy1"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtImportPolicy2"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtImportPolicy3"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtImportPolicy4"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtImportPolicy5"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtLeakImpPolV16v0Group.setStatus("current")

tmnxVRtrInetTunnStatV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 215)
)
tmnxVRtrInetTunnStatV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalOspfv3Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveOspfv3Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalOspfv3IPv6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveOspfv3IPv6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetTunnStatV16v0Group.setStatus("current")

tmnxVRtrGlobalV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 216)
)
tmnxVRtrGlobalV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrVpnBackupPath"),
        ("TIMETRA-VRTR-MIB", "vRtrIpFastReroute"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTableLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsPrimaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsSecondaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsTertiaryAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv4SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsIpv6SourceAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfInfo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxBytesLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsHigh32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxPktsLow32"),
        ("TIMETRA-VRTR-MIB", "vRtrIfOperDownReason"),
        ("TIMETRA-VRTR-MIB", "vRtrPolicyReferenceChecks"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalV16v0Group.setStatus("current")

tmnxVRtrInetRouteV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 217)
)
tmnxVRtrInetRouteV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHIsFec"),
        ("TIMETRA-VRTR-MIB", "vRtrInetCidrRouteNHFecPfxLen"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteNHIsFec"),
        ("TIMETRA-VRTR-MIB", "vRtrInetAllCidrRouteNHFecPfxLen"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetRouteV16v0Group.setStatus("current")

tmnxVRtrSrTnlStatV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 218)
)
tmnxVRtrSrTnlStatV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalSrPolicyTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSrPolicyTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrTnlStatV16v0Group.setStatus("current")

tmnxTunnelTableObsoleteV16v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 219)
)
tmnxTunnelTableObsoleteV16v0Grp.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetTunnelMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelAge"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNextHopFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspBandwidth"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelMTU"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspWeight"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelRelativeMetric"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLabel"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelBypassLabel"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelLspFC"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelMaxLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetTunnelNhTunnelInst"))
)
if mibBuilder.loadTexts:
    tmnxTunnelTableObsoleteV16v0Grp.setStatus("current")

tmnxVRtrBierV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 220)
)
tmnxVRtrBierV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiBierSubDomain"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiBierSubDomain"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBierV16v0Group.setStatus("current")

tmnxVRtrDhcpClientGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 230)
)
tmnxVRtrDhcpClientGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDhcpClLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClVendorClassIdFmt"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClVendorClassId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClClientIdOrigin"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClClientIdFmt"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClLeaseTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClRequestOptions"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsClearedTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsTxDiscovers"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsTxRequests"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsTxReleases"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsTxDeclines"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsRxOffers"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsRxAcks"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsRxNaks"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStatsRxDrops"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateCiAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateCiAddrMaskLen"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateSiAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateSiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateRtAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateRtAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsPriAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsPriAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsSecAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsSecAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsTerAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsTerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateLeaseAcquired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateLeaseRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateLeaseRebind"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateLeaseEnd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClDhcpState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterCurHopLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterManagedFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterOtherCfgFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterPreference"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterReachableTime"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRouterRetransTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixOnLinkFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixAutonomFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixPrefLftm"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaPrefixValidLftm"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtPreference"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaSpecRtLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsClearedTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsOutRtrSol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsRtrSolTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsOutRtrSolErr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsInRtrAdv"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsRtrAdvTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfAutoCfgRaStatsInRtrAdvErr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsClearedTime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxSolicits"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsRxAdvertises"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxRequests"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxConfirms"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxRenews"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxRebinds"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsRxReplies"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxReleases"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxDeclines"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsRxReconfigures"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsTxInfRequests"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStatsRxDrops"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateCiAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateCiAddrMaskLen"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateClientDuid"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateSiAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateSiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateServerDuid"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsPriAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsPriAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsSecAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsSecAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsTerAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsTerAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeaseCreated"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeaseAcquired"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeaseRenew"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeaseRebind"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeasePrefLftm"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateLeaseValidLftm"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDhcpClientGroup.setStatus("current")

tmnxVRtrRibApiV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 231)
)
tmnxVRtrRibApiV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrRibApiMplsLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrRibApiMplsAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrRibApiMplsReservedLblBlk"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelRibApi"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhBitFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelNhGroupId"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTnlMplsFwdPlcy"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRibApiV4Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRibApiV4Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRibApiV6Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRibApiV6Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRibApiV4Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRibApiV4Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalRibApiV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveRibApiV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotMplsFwdPlcyV4Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrRibApiV16v0Group.setStatus("current")

tmnxVRtrRibTelemetryV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 232)
)
tmnxVRtrRibTelemetryV16v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrFibTelemetry")
)
if mibBuilder.loadTexts:
    tmnxVRtrRibTelemetryV16v0Group.setStatus("current")

tmnxVRtrMplsFwdPlcyV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 233)
)
tmnxVRtrMplsFwdPlcyV16v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotMplsFwdPlcyV4Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActMplsFwdPlcyV4Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotMplsFwdPlcyV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActMplsFwdPlcyV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMplsFwdPlcyV16v0Group.setStatus("current")

tmnxVRtrIcmpV4StatsV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 234)
)
tmnxVRtrIcmpV4StatsV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIcmpOutDiscards"),
        ("TIMETRA-VRTR-MIB", "vRtrIcmpOutDiscards"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIcmpV4StatsV19v0Group.setStatus("current")

tmnxVRtrInetSRIndirectV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 236)
)
tmnxVRtrInetSRIndirectV16v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunnelSrOspf3")
)
if mibBuilder.loadTexts:
    tmnxVRtrInetSRIndirectV16v0Group.setStatus("current")

tmnxVRtrDhcpRoutesV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 237)
)
tmnxVRtrDhcpRoutesV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrDHCPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCPActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6DHCPRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6DHCPActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDhcpRoutesV19v0Group.setStatus("current")

tmnxVRtrV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 238)
)
tmnxVRtrV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrWeightedEcmpStrict"),
        ("TIMETRA-VRTR-MIB", "vRtrIpv6TeRouterIdIfName"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeidHex"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoSystemMac"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoPlatformType"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoVendorId"),
        ("TIMETRA-VRTR-MIB", "vRtrEcmpUnequalCost"),
        ("TIMETRA-VRTR-MIB", "vRtrRsmToBaseNetwork"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrSysMplsLblStackStatCount"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiP2mpPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiP2mpPolicy"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV19v0Group.setStatus("current")

tmnxVRtrIfV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 239)
)
tmnxVRtrIfV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpv6ForwardIpv4"),
        ("TIMETRA-VRTR-MIB", "vRiaInetAddressGreTermination"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV19v0Group.setStatus("current")

vRtrIfEgressQueueV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 241)
)
vRtrIfEgressQueueV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueFwdPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueFwdOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueDrpPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueDrpOcts"))
)
if mibBuilder.loadTexts:
    vRtrIfEgressQueueV19v0Group.setStatus("current")

tmnxVRtrIfQosV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 242)
)
tmnxVRtrIfQosV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfQosEgrVlanQosPlcy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrRemarkPlcy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosNetworkIngressPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrAggRatePIRLmt"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrAggRateCIRLmt"),
        ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrOperVlanQosPlcy"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfQosV19v0Group.setStatus("current")

vRtrIfIngressPolicerV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 243)
)
vRtrIfIngressPolicerV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerFwdInProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerFwdOutProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerFwdInProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerFwdOutProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerDrpExdProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngPolicerDrpExdProfOcts"))
)
if mibBuilder.loadTexts:
    vRtrIfIngressPolicerV19v0Group.setStatus("current")

vRtrMplsTunnelModeV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 244)
)
vRtrMplsTunnelModeV19v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVrtrSysMplsTunnelMode")
)
if mibBuilder.loadTexts:
    vRtrMplsTunnelModeV19v0Group.setStatus("current")

tmnxVRtrDiscardCV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 245)
)
tmnxVRtrDiscardCV19v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetAggrDiscardComponent")
)
if mibBuilder.loadTexts:
    tmnxVRtrDiscardCV19v0Group.setStatus("current")

tmnxVRtrConfFlowspecV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 246)
)
tmnxVRtrConfFlowspecV19v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrFlowspecFltrCamType")
)
if mibBuilder.loadTexts:
    tmnxVRtrConfFlowspecV19v0Group.setStatus("current")

tmnxVRtrIfHostRouteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 247)
)
tmnxVRtrIfHostRouteGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfArpHostRtRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpHostRtLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpHostRtRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpHostRtTblLstChg"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfHostRouteGroup.setStatus("current")

tmnxVRtrNeInfoGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 248)
)
tmnxVRtrNeInfoGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeidHex"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoSystemMac"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoPlatformType"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoVendorId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNeInfoGroup.setStatus("obsolete")

tmnxVRtrTunTerminationV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 250)
)
tmnxVRtrTunTerminationV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVrtrFwdIPoverIPv6"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrFwdIPoverGre"))
)
if mibBuilder.loadTexts:
    tmnxVRtrTunTerminationV19v0Group.setStatus("current")

tmnxVRtrIfNdHostRouteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 251)
)
tmnxVRtrIfNdHostRouteGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfNdHostRtRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNdHostRtLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNdHostRtRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrIfNdHostRtTblLstChg"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfNdHostRouteGroup.setStatus("current")

tmnxVRtrIfPhysStatsV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 252)
)
tmnxVRtrIfPhysStatsV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfAcctPolicyId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfCollectStats"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfPhysStatsV19v0Group.setStatus("current")

tmnxVRtrSrTnlStatV19v10Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 253)
)
tmnxVRtrSrTnlStatV19v10Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatActiveSrPolicyV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSrPolicyV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrTnlStatV19v10Group.setStatus("current")

tmnxVRtrDnsV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 254)
)
tmnxVRtrDnsV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrDnsDefaultDomainName"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRedirectPreference"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRedirectRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRedirectLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrDnsRedirectTableLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDnsV20v0Group.setStatus("current")

tmnxVRtrHelperRedirectPkts = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 256)
)
tmnxVRtrHelperRedirectPkts.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfRxV4IpHelperRedirectPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxV4IpHelperRedirectBytes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrHelperRedirectPkts.setStatus("current")

tmnxVRtrIPEHV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 257)
)
tmnxVRtrIPEHV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVrtrIPEHPerform")
)
if mibBuilder.loadTexts:
    tmnxVRtrIPEHV20v0Group.setStatus("current")

tmnxVRtrIfExtParmsV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 258)
)
tmnxVRtrIfExtParmsV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfUnidirectionalLinkDelay"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngrDestinationClassLookup"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtParmsV20v0Group.setStatus("current")

vRtrIfEgressQueueV19v01Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 259)
)
vRtrIfEgressQueueV19v01Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdInProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdInProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpInProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpInProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdOutProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdOutProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpOutProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpOutProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdExdProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdExdProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpExdProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpExdProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdInPlusProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQFwdInPlusProfOcts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpInPlusProfPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgrQDrpInPlusProfOcts"))
)
if mibBuilder.loadTexts:
    vRtrIfEgressQueueV19v01Group.setStatus("current")

tmnxVRtrAggtIPPrefixV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 260)
)
tmnxVRtrAggtIPPrefixV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetAggrTunnelGroup")
)
if mibBuilder.loadTexts:
    tmnxVRtrAggtIPPrefixV20v0Group.setStatus("current")

tmnxFlexAlgoV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 261)
)
tmnxFlexAlgoV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxFlexAlgoDefTblLastCh"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoAdminGrpTblLstCh"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoRowLstChng"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoRowStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoAdminState"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoDescription"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoMetricType"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoPriority"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoAdminGrpRowLstCh"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoAdminGrpRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelAlgorithm"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoFlagsTlv"))
)
if mibBuilder.loadTexts:
    tmnxFlexAlgoV20v0Group.setStatus("current")

tmnxVRtrBgpEpe20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 262)
)
tmnxVRtrBgpEpe20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpEpeTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpEpeTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpEpeV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpEpeV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpEpe20v0Group.setStatus("current")

tmnxVrtrSRPolicyV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 263)
)
tmnxVrtrSRPolicyV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMvpnIpmsiSRPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrMvpnSpmsiSRPolicy"))
)
if mibBuilder.loadTexts:
    tmnxVrtrSRPolicyV20v0Group.setStatus("current")

tmnxVRtrIfExtHostRteV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 264)
)
tmnxVRtrIfExtHostRteV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpLearnUnsol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpProRef"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdLearnUnsol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdProRef"),
        ("TIMETRA-VRTR-MIB", "vRtrStatArpRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatArpActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatNdRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatNdActiveRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfExtHostRteV20v0Group.setStatus("current")

tmnxVRtrIfTableObsoleteV20v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 265)
)
tmnxVRtrIfTableObsoleteV20v0Grp.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpPopulateHost"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv4ArpRouteTag"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdPopulateHost"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NdRouteTag"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfTableObsoleteV20v0Grp.setStatus("current")

tmnxVRtrInetSRIndirectV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 266)
)
tmnxVRtrInetSRIndirectV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetSRIndirectTunFlexAlgoId")
)
if mibBuilder.loadTexts:
    tmnxVRtrInetSRIndirectV20v0Group.setStatus("current")

tmnxvRtrInetAggrPolicyV20Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 267)
)
tmnxvRtrInetAggrPolicyV20Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrInetAggrPolicy")
)
if mibBuilder.loadTexts:
    tmnxvRtrInetAggrPolicyV20Group.setStatus("current")

tmnxVRtrSrTeV6Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 268)
)
tmnxVRtrSrTeV6Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalSrTeV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveSrTeV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrTeV6Group.setStatus("current")

tmnxVRtrIPV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 269)
)
tmnxVRtrIPV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVrtrIPAllowCPUFragmentation")
)
if mibBuilder.loadTexts:
    tmnxVRtrIPV20v0Group.setStatus("current")

tmnxVRtrV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 270)
)
tmnxVRtrV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelDiscoDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelClntMac"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelClntMacDiscoDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSlctDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelPref"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelClntMac"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelClntMacSlctDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelClntMacPref"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelSrvrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPOSelSrvrDiscoDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSrvrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSrvrSolDly"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ASelSrvrPref"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV20v0Group.setStatus("current")

tmnxVRtrBgpEvpnV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 271)
)
tmnxVRtrBgpEvpnV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyLastChg"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp1"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp2"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp3"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp4"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp5"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp6"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp7"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp8"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp9"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp10"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp11"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp12"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp13"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp14"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyImp15"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp1"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp2"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp3"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp4"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp5"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp6"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp7"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp8"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp9"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp10"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp11"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp12"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp13"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp14"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyExp15"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnMplsTnlEncapMoUdp"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnExportRteTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnImportRteTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnABTTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlBgp"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlEcmp"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlLastChg"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlLdp"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlRsvpTe"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlSrIsis"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlSrOspf"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlSrOspf3"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlSrPlcy"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlSrTe"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlTag"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlUdp"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnBndTnlMplsFwdPlcy"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnBndTnlRibApi"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnDefRtTag"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnMplsTnlEncapMpls"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnMplsLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnMplsTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnOperRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnOperRDType"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfPolicyCreateOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIflRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIflActRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIflAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIflActAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIflRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIflActRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIflAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIflActAltRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIffRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnIffActRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIffRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6BgpEvpnIffActRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPEvpnIflRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPEvpnIflRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPEvpnIffRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPEvpnIffRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpEvpnV20v0Group.setStatus("current")

tmnxVRtrLspBfdV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 272)
)
tmnxVRtrLspBfdV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrLspBfdTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrLspBfdLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrLspBfdTailEndTxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrLspBfdTailEndRxInterval"),
        ("TIMETRA-VRTR-MIB", "vRtrLspBfdTailEndMultiplier"))
)
if mibBuilder.loadTexts:
    tmnxVRtrLspBfdV20v0Group.setStatus("current")

tmnxVRtrIcmpRedirectV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 273)
)
tmnxVRtrIcmpRedirectV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVrtrIPAllowICMPRedirect")
)
if mibBuilder.loadTexts:
    tmnxVRtrIcmpRedirectV20v0Group.setStatus("current")

vRtrIfEthLoopbackV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 274)
)
vRtrIfEthLoopbackV20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackMacSwap"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackOperState"))
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackV20v0Group.setStatus("current")

tmnxVRtrBgpLabelIpv620v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 275)
)
tmnxVRtrBgpLabelIpv620v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatTotalBgpV6Tunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatActiveBgpV6Tunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpLabelIpv620v0Group.setStatus("current")

tmnxVRtrHelperMplsStatsPktsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 278)
)
tmnxVRtrHelperMplsStatsPktsGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfRxIpMplsBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfRxIpMplsPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxIpMplsBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrIfTxIpMplsPkts"))
)
if mibBuilder.loadTexts:
    tmnxVRtrHelperMplsStatsPktsGroup.setStatus("current")

tmnxVRtrPlcyAcctQPPB20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 279)
)
tmnxVRtrPlcyAcctQPPB20v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerLastChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerPeakRateHi"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerPeakRateLo"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerMaxBurstSize"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctDestClassPolicerId"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctIfPolStatsTblLstChgd"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerDropPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerDropBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerFwdPkts"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerFwdBytes"),
        ("TIMETRA-VRTR-MIB", "vRtrPlcyAcctPolicerIncompleteCnt"))
)
if mibBuilder.loadTexts:
    tmnxVRtrPlcyAcctQPPB20v0Group.setStatus("current")

tmnxVRtrStaticRtBackupNHGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 280)
)
tmnxVRtrStaticRtBackupNHGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRoutePfxBackupTag"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteBackupNHType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteBackupNHAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteBackupStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStaticRtBackupNHGroup.setStatus("current")

vRtrBgpIpVpnMplsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 281)
)
vRtrBgpIpVpnMplsGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrBgpIpVpnMplsAdminState")
)
if mibBuilder.loadTexts:
    vRtrBgpIpVpnMplsGroup.setStatus("current")

tmnxVRtrMtrace2V21Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 282)
)
tmnxVRtrMtrace2V21Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrMtrace2OperState")
)
if mibBuilder.loadTexts:
    tmnxVRtrMtrace2V21Group.setStatus("current")

tmnxVRtrBgpEvpnV21v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 284)
)
tmnxVRtrBgpEvpnV21v0Grp.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrBgpEvpnAutoBndTnlFlexAlgoFb")
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpEvpnV21v0Grp.setStatus("current")

tmnxVRtrV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 285)
)
tmnxVRtrV21v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LseSplitAdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LseSplitValidLifetime"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6FlowLabelHashing"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPReleaseIncludeGiaddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrV21v0Group.setStatus("current")

tmnxVRtrSrV6Isis21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 286)
)
tmnxVRtrSrV6Isis21v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatActiveSrV6IsisTunnels"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalSrV6IsisTunnels"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrV6Isis21v0Group.setStatus("current")

tmnxVRtrBgpSrv6V21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 287)
)
tmnxVRtrBgpSrv6V21v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyLastChg"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp1"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp2"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp3"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp4"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp5"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp6"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp7"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp8"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp9"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp10"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp11"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp12"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp13"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp14"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyImp15"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp1"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp2"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp3"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp4"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp5"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp6"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp7"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp8"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp9"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp10"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp11"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp12"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp13"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp14"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyExp15"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyTblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6AutoRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6ExportVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6ImportVrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6AdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6RowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6DefRtTag"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6TblLastCh"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6LastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6OperRD"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6OperRDType"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfPolicyCreateOrig"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6VrfTarget"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6Instance"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6DefLocator"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6SrcAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6SrcAddrType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBgpSrv6V21v0Group.setStatus("current")

tmnxVRtrFlexAlgoDelayV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 289)
)
tmnxVRtrFlexAlgoDelayV21v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfLinkDelayStatic")
)
if mibBuilder.loadTexts:
    tmnxVRtrFlexAlgoDelayV21v0Group.setStatus("current")

tmnxVRtrFlexAlgoDlyDynV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 290)
)
tmnxVRtrFlexAlgoDlyDynV21v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfLinkDelaySelection"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkDelayOper"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkDelayDynamic"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLinkDelayMeasureTemplName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv4AdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv4DstAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv4DstAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv4SrcAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv4SrcAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv6AdminState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv6DstAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv6DstAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv6SrcAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLnkDlyTwampIpv6SrcAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrFlexAlgoDlyDynV21v0Group.setStatus("current")

tmnxVRtrGlobalObsoleteV21v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 291)
)
tmnxVRtrGlobalObsoleteV21v0Grp.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatBGPEvpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrV6StatBGPEvpnActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatBGPEvpnRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatV6BGPEvpnRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGlobalObsoleteV21v0Grp.setStatus("current")

tmnxVRtrSrV621v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 292)
)
tmnxVRtrSrV621v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelSidAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetExtTunnelSidAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrFibStatSrV6Routes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatSrV6ActiveRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrStatSrV6TotalRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrSrV621v0Group.setStatus("current")

tmnxVRtrNotificationObjV21v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 293)
)
tmnxVRtrNotificationObjV21v0Grp.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutePrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxRoutesType"),
        ("TIMETRA-VRTR-MIB", "vRtrSlotOrCpmFlag"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessChangedProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessProtoChngdState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObjV21v0Grp.setStatus("current")

tmnxVRtrFibStatObj21Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 294)
)
tmnxVRtrFibStatObj21Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrFibStatIpVpnCurrUtilization")
)
if mibBuilder.loadTexts:
    tmnxVRtrFibStatObj21Group.setStatus("current")

tmnxVRtrDPathAttrObj21Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 297)
)
tmnxVRtrDPathAttrObj21Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBgpEvpnDomainId"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpSrv6DomainId"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpIpVpnMplsDomainId"),
        ("TIMETRA-VRTR-MIB", "vRtrLocalRoutesDomainId"),
        ("TIMETRA-VRTR-MIB", "vRtrDpathLengthIgnore"),
        ("TIMETRA-VRTR-MIB", "vRtrDPathAttrLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDPathAttrObj21Group.setStatus("current")

tmnxVRtrIfHQosOnLagV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 298)
)
tmnxVRtrIfHQosOnLagV21v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfQosEgrVlanPlcyPortRedirect")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfHQosOnLagV21v0Group.setStatus("current")

tmnxVRtrDynEgLblLmtObj22Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 299)
)
tmnxVRtrDynEgLblLmtObj22Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBgpEvpnDynEgrLblLmt"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpIpVpnMplsDynEgrLblLmt"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDynEgLblLmtObj22Group.setStatus("current")

tmnxVRtrIfV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 300)
)
tmnxVRtrIfV22v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfIngressIPFilterPair")
)
if mibBuilder.loadTexts:
    tmnxVRtrIfV22v0Group.setStatus("current")

tmnxVRtrObsoleteV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 301)
)
tmnxVRtrObsoleteV22v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeMask"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrSvcIpRangeExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetSvcIpRangeExclusive"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteV22v0Group.setStatus("current")

tmnxVRtrIpPoolGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 4, 1)
)
tmnxVRtrIpPoolGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIpPoolTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolExclusive"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolStatFree"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolStatHeld"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolStatAllocated"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddressHoldTimer"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddrTableLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddrRowStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddrLastChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddrBlock"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolAddrIpv6AssignedLen"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolSuppress0and255"),
        ("TIMETRA-VRTR-MIB", "vRtrConfMobGwTableLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpPoolGroup.setStatus("current")

tmnxMGVRtrIfV4v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 4, 2)
)
tmnxMGVRtrIfV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfTrackMobile"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6TrackMobile"),
        ("TIMETRA-VRTR-MIB", "vRtrIpPoolIsRemote"))
)
if mibBuilder.loadTexts:
    tmnxMGVRtrIfV4v0Group.setStatus("current")


# Notification objects

tmnxVRtrMidRouteTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 1)
)
tmnxVRtrMidRouteTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMidRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMidRouteTCA.setStatus(
        "current"
    )

tmnxVRtrHighRouteTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 2)
)
tmnxVRtrHighRouteTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrHighRouteTCA.setStatus(
        "current"
    )

tmnxVRtrHighRouteCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 3)
)
tmnxVRtrHighRouteCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrHighRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrHighRouteCleared.setStatus(
        "current"
    )

tmnxVRtrIllegalLabelTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 4)
)
tmnxVRtrIllegalLabelTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatIllegalLabels"),
        ("TIMETRA-VRTR-MIB", "vRtrIllegalLabelThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIllegalLabelTCA.setStatus(
        "obsolete"
    )

tmnxVRtrMcastMidRouteTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 5)
)
tmnxVRtrMcastMidRouteTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMcastMidRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMcastMidRouteTCA.setStatus(
        "current"
    )

tmnxVRtrMcastMaxRoutesTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 6)
)
tmnxVRtrMcastMaxRoutesTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMcastMaxRoutesTCA.setStatus(
        "current"
    )

tmnxVRtrMcastMaxRoutesCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 7)
)
tmnxVRtrMcastMaxRoutesCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrMulticastRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxMcastNumRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMcastMaxRoutesCleared.setStatus(
        "current"
    )

tmnxVRtrMaxArpEntriesTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 8)
)
tmnxVRtrMaxArpEntriesTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxARPEntries"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMaxArpEntriesTCA.setStatus(
        "current"
    )

tmnxVRtrMaxArpEntriesCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 9)
)
tmnxVRtrMaxArpEntriesCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatActiveARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrStatTotalARPEntries"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxARPEntries"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMaxArpEntriesCleared.setStatus(
        "current"
    )

tmnxVRtrDHCPAFEntriesExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 10)
)
tmnxVRtrDHCPAFEntriesExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDHCPOperAutoFilter"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoFilterDHCPClientAddress"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoFilterDHCPClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPAFEntriesExceeded.setStatus(
        "obsolete"
    )

tmnxVRtrMaxRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 11)
)
tmnxVRtrMaxRoutes.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrStatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrMaxRoutesType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMaxRoutes.setStatus(
        "current"
    )

tmnxVRtrDHCPLseStsExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 12)
)
tmnxVRtrDHCPLseStsExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCPClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPLseStsExceeded.setStatus(
        "obsolete"
    )

tmnxVRtrDHCPLeaseStateOverride = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 13)
)
tmnxVRtrDHCPLeaseStateOverride.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateOldCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateOldChAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPLeaseStateOverride.setStatus(
        "obsolete"
    )

tmnxVRtrDHCPSuspiciousPcktRcvd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 14)
)
tmnxVRtrDHCPSuspiciousPcktRcvd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpPacketProblem"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPSuspiciousPcktRcvd.setStatus(
        "current"
    )

tmnxVRtrDHCPLseStRestoreProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 15)
)
tmnxVRtrDHCPLseStRestoreProblem.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateVRtrId"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpRestoreLseStateProblem"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPLseStRestoreProblem.setStatus(
        "obsolete"
    )

tmnxVRtrDHCPLseStatePopulateErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 16)
)
tmnxVRtrDHCPLseStatePopulateErr.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStatePopulateError"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPLseStatePopulateErr.setStatus(
        "obsolete"
    )

tmnxVRtrBfdSessionDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 17)
)
tmnxVRtrBfdSessionDown.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessionDown.setStatus(
        "obsolete"
    )

tmnxVRtrBfdMaxSessionOnSlot = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 18)
)
tmnxVRtrBfdMaxSessionOnSlot.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrBfdSlotNumber"),
        ("TIMETRA-VRTR-MIB", "vRtrNumberOfBfdSessionsOnSlot"),
        ("TIMETRA-VRTR-MIB", "vRtrBfdMaxSessionReason"),
        ("TIMETRA-VRTR-MIB", "vRtrSlotOrCpmFlag"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdMaxSessionOnSlot.setStatus(
        "current"
    )

tmnxVRtrBfdPortTypeNotSupported = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 19)
)
tmnxVRtrBfdPortTypeNotSupported.setObjects(
      *(("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"),
        ("TIMETRA-PORT-MIB", "tmnxPortType"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdPortTypeNotSupported.setStatus(
        "current"
    )

tmnxVRtrDHCPIfLseStatesExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 20)
)
tmnxVRtrDHCPIfLseStatesExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-SAP-MIB", "sapPortId"),
        ("TIMETRA-SAP-MIB", "sapEncapValue"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCPLeasePopulate"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCPIfLseStatesExceeded.setStatus(
        "current"
    )

tmnxVRtrDHCP6RelayLseStExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 21)
)
tmnxVRtrDHCP6RelayLseStExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6LeasePopulate"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6RelayLseStExceeded.setStatus(
        "current"
    )

tmnxVRtrDHCP6ServerLseStExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 22)
)
tmnxVRtrDHCP6ServerLseStExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDHCP6ServerMaxLeaseStates"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6ServerLseStExceeded.setStatus(
        "current"
    )

tmnxVRtrDHCP6LseStateOverride = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 23)
)
tmnxVRtrDHCP6LseStateOverride.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldAssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateOldChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6OldClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrDhcpLseStateNewChAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6NewClientId"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6LeaseOverrideResult"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6LseStateOverride.setStatus(
        "current"
    )

tmnxVRtrDHCP6RelayReplyStripUni = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 24)
)
tmnxVRtrDHCP6RelayReplyStripUni.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ServerNetAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6RelayReplyStripUni.setStatus(
        "current"
    )

tmnxVRtrDHCP6IllegalClientAddr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 25)
)
tmnxVRtrDHCP6IllegalClientAddr.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6IllegalClientAddr.setStatus(
        "current"
    )

tmnxVRtrDHCP6AssignedIllegSubnet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 26)
)
tmnxVRtrDHCP6AssignedIllegSubnet.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedNetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6AssignedPrefixLen"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6AssignedIllegSubnet.setStatus(
        "current"
    )

tmnxVRtrDHCP6ClientMacUnresolved = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 27)
)
tmnxVRtrDHCP6ClientMacUnresolved.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrDHCP6ClientNetAddr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDHCP6ClientMacUnresolved.setStatus(
        "current"
    )

tmnxVRtrBfdSessionUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 28)
)
tmnxVRtrBfdSessionUp.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessionUp.setStatus(
        "obsolete"
    )

tmnxVRtrIPv6MidRouteTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 29)
)
tmnxVRtrIPv6MidRouteTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrV6StatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6MidRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6MidRouteTCA.setStatus(
        "current"
    )

tmnxVRtrIPv6HighRouteTCA = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 30)
)
tmnxVRtrIPv6HighRouteTCA.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrV6StatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6HighRouteTCA.setStatus(
        "current"
    )

tmnxVRtrIPv6HighRouteCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 31)
)
tmnxVRtrIPv6HighRouteCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrV6StatCurrNumRoutes"),
        ("TIMETRA-VRTR-MIB", "vRtrIPv6HighRouteThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIPv6HighRouteCleared.setStatus(
        "current"
    )

tmnxVRtrStaticRouteCPEStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 32)
)
tmnxVRtrStaticRouteCPEStatus.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStatRteCpeNotifyAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteCpeStatus"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStaticRouteCPEStatus.setStatus(
        "current"
    )

tmnxVRtrBfdSessionDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 33)
)
tmnxVRtrBfdSessionDeleted.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessionDeleted.setStatus(
        "obsolete"
    )

tmnxVRtrBfdSessionProtChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 34)
)
tmnxVRtrBfdSessionProtChange.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessChangedProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessProtoChngdState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessionProtChange.setStatus(
        "obsolete"
    )

tmnxVRtrManagedRouteAddFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 35)
)
tmnxVRtrManagedRouteAddFailed.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRouteInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrManagedRoutePrefixLen"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrManagedRouteAddFailed.setStatus(
        "current"
    )

tmnxVRtrFibOccupancyThreshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 36)
)
tmnxVRtrFibOccupancyThreshold.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrFibStatHighUtilization")
)
if mibBuilder.loadTexts:
    tmnxVRtrFibOccupancyThreshold.setStatus(
        "current"
    )

tmnxVRtrInetAddressAttachFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 37)
)
tmnxVRtrInetAddressAttachFailed.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrInetAddressAttachFailed.setStatus(
        "current"
    )

tmnxVRtrSingleSfmOverloadStateCh = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 38)
)
tmnxVRtrSingleSfmOverloadStateCh.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrSingleSfmOverloadState")
)
if mibBuilder.loadTexts:
    tmnxVRtrSingleSfmOverloadStateCh.setStatus(
        "current"
    )

tmnxVRtrGrtExportLimitReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 39)
)
tmnxVRtrGrtExportLimitReached.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtExportLimitReached.setStatus(
        "current"
    )

tmnxVRtrGrtRoutesExpLimitDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 40)
)
tmnxVRtrGrtRoutesExpLimitDropped.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxExportRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtRoutesExpLimitDropped.setStatus(
        "current"
    )

tmnxVRtrIfLdpSyncTimerStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 41)
)
tmnxVRtrIfLdpSyncTimerStart.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfLdpSyncTimerStart.setStatus(
        "current"
    )

tmnxVRtrIfLdpSyncTimerStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 42)
)
tmnxVRtrIfLdpSyncTimerStop.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfIndex"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfLdpSyncTimer"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfLdpSyncTimerStop.setStatus(
        "current"
    )

tmnxVRtrBfdNoCpmNpResources = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 43)
)
tmnxVRtrBfdNoCpmNpResources.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessionLclDisc")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdNoCpmNpResources.setStatus(
        "obsolete"
    )

tmnxVRtrGrtV6ExportLimitReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 44)
)
tmnxVRtrGrtV6ExportLimitReached.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxIpv6ExportRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtV6ExportLimitReached.setStatus(
        "current"
    )

tmnxVRtrGrtV6RoutesExpLimDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 45)
)
tmnxVRtrGrtV6RoutesExpLimDropped.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrGrtMaxIpv6ExportRoutes"))
)
if mibBuilder.loadTexts:
    tmnxVRtrGrtV6RoutesExpLimDropped.setStatus(
        "current"
    )

tmnxVRtrStaticRouteStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 46)
)
tmnxVRtrStaticRouteStatusChanged.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteStaticType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopType"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHop"),
        ("TIMETRA-VRTR-MIB", "vRtrInetStaticRouteNextHopIf"))
)
if mibBuilder.loadTexts:
    tmnxVRtrStaticRouteStatusChanged.setStatus(
        "current"
    )

vRtrIfDcpStaticExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 47)
)
vRtrIfDcpStaticExcd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpStaticExcd.setStatus(
        "current"
    )

vRtrIfDcpDynamicExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 48)
)
vRtrIfDcpDynamicExcd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicExcd.setStatus(
        "current"
    )

vRtrIfDcpStaticHoldDownStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 49)
)
vRtrIfDcpStaticHoldDownStart.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpStaticHoldDownStart.setStatus(
        "current"
    )

vRtrIfDcpDynamicHoldDownStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 50)
)
vRtrIfDcpDynamicHoldDownStart.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicHoldDownStart.setStatus(
        "current"
    )

vRtrIfDcpStaticHoldDownEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 51)
)
vRtrIfDcpStaticHoldDownEnd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpStaticHoldDownEnd.setStatus(
        "current"
    )

vRtrIfDcpDynamicHoldDownEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 52)
)
vRtrIfDcpDynamicHoldDownEnd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicHoldDownEnd.setStatus(
        "current"
    )

vRtrIfDcpStaticConform = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 53)
)
vRtrIfDcpStaticConform.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpStaticExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpStaticConform.setStatus(
        "current"
    )

vRtrIfDcpDynamicConform = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 54)
)
vRtrIfDcpDynamicConform.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicConform.setStatus(
        "current"
    )

vRtrIfDcpLocMonExcd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 55)
)
vRtrIfDcpLocMonExcd.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpLocMonExcd.setStatus(
        "current"
    )

vRtrIfDcpLocMonExcdDynResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 56)
)
vRtrIfDcpLocMonExcdDynResource.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpLocMonExcdDynResource.setStatus(
        "current"
    )

vRtrIfDcpLocMonExcdAllDynAlloc = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 57)
)
vRtrIfDcpLocMonExcdAllDynAlloc.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpLocMonExcdAllDynAlloc.setStatus(
        "current"
    )

vRtrIfDcpLocMonExcdAllDynFreed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 58)
)
vRtrIfDcpLocMonExcdAllDynFreed.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpLocMonState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpLocMonExcdAllDynFreed.setStatus(
        "current"
    )

vRtrIfDcpDynamicEnforceAlloc = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 59)
)
vRtrIfDcpDynamicEnforceAlloc.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynAllocated"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicEnforceAlloc.setStatus(
        "current"
    )

vRtrIfDcpDynamicEnforceFreed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 60)
)
vRtrIfDcpDynamicEnforceFreed.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountHi"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpFpDynExcdCountLo"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDCpuProtPolicy"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpTimeEventOccured"))
)
if mibBuilder.loadTexts:
    vRtrIfDcpDynamicEnforceFreed.setStatus(
        "current"
    )

tmnxVRtrBfdSessExtDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 61)
)
tmnxVRtrBfdSessExtDown.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessExtDown.setStatus(
        "current"
    )

tmnxVRtrBfdSessExtUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 62)
)
tmnxVRtrBfdSessExtUp.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessExtUp.setStatus(
        "current"
    )

tmnxVRtrBfdSessExtDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 63)
)
tmnxVRtrBfdSessExtDeleted.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperFlags"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessExtDeleted.setStatus(
        "current"
    )

tmnxVRtrBfdSessExtProtChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 64)
)
tmnxVRtrBfdSessExtProtChange.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessChangedProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessProtoChngdState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdSessExtProtChange.setStatus(
        "current"
    )

tmnxVRtrBfdExtNoCpmNpResources = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 65)
)
tmnxVRtrBfdExtNoCpmNpResources.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdExtNoCpmNpResources.setStatus(
        "current"
    )

tmnxVRtrDnsFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 66)
)
tmnxVRtrDnsFault.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifTruthValue"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDnsFault.setStatus(
        "current"
    )

tmnxVRtrMacAcctLimitReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 67)
)
tmnxVRtrMacAcctLimitReached.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMacAcctLimitReached.setStatus(
        "current"
    )

tmnxVRtrMacAcctLimitCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 68)
)
tmnxVRtrMacAcctLimitCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIndex"))
)
if mibBuilder.loadTexts:
    tmnxVRtrMacAcctLimitCleared.setStatus(
        "current"
    )

tmnxVRtrNgBfdSessDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 69)
)
tmnxVRtrNgBfdSessDown.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNgBfdSessDown.setStatus(
        "current"
    )

tmnxVRtrNgBfdSessUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 70)
)
tmnxVRtrNgBfdSessUp.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNgBfdSessUp.setStatus(
        "current"
    )

tmnxVRtrNgBfdSessDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 71)
)
tmnxVRtrNgBfdSessDeleted.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtOperFlags"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNgBfdSessDeleted.setStatus(
        "current"
    )

tmnxVRtrNgBfdSessProtChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 72)
)
tmnxVRtrNgBfdSessProtChange.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtProtocols"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessChangedProtocol"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessProtoChngdState"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNgBfdSessProtChange.setStatus(
        "current"
    )

tmnxVRtrNgBfdNoCpmNpResources = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 73)
)
tmnxVRtrNgBfdNoCpmNpResources.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLspPathTunnelId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSvcId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtSdpBindId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNgBfdNoCpmNpResources.setStatus(
        "current"
    )

tmnxVRtrNHRvplsARPHighUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 74)
)
tmnxVRtrNHRvplsARPHighUsage.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxNHRvplsARPEntries")
)
if mibBuilder.loadTexts:
    tmnxVRtrNHRvplsARPHighUsage.setStatus(
        "current"
    )

tmnxVRtrNHRvplsARPExhaust = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 75)
)
tmnxVRtrNHRvplsARPExhaust.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxNHRvplsARPEntries")
)
if mibBuilder.loadTexts:
    tmnxVRtrNHRvplsARPExhaust.setStatus(
        "current"
    )

tmnxVRtrNHRvplsARPHighUsageClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 76)
)
tmnxVRtrNHRvplsARPHighUsageClr.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxNHRvplsARPEntries")
)
if mibBuilder.loadTexts:
    tmnxVRtrNHRvplsARPHighUsageClr.setStatus(
        "current"
    )

tmnxVRtrArpLmt = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 77)
)
tmnxVRtrArpLmt.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpLimit"))
)
if mibBuilder.loadTexts:
    tmnxVRtrArpLmt.setStatus(
        "current"
    )

tmnxVRtrArpThresholdExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 78)
)
tmnxVRtrArpThresholdExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrIfArpThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrArpThresholdExceeded.setStatus(
        "current"
    )

tmnxVRtrIpv6NbrLmt = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 79)
)
tmnxVRtrIpv6NbrLmt.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrLimit"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpv6NbrLmt.setStatus(
        "current"
    )

tmnxVRtrIpv6NbrThresholdExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 80)
)
tmnxVRtrIpv6NbrThresholdExceeded.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrLimit"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIpv6NbrThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIpv6NbrThresholdExceeded.setStatus(
        "current"
    )

tmnxVRtrIfIgnorePortState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 81)
)
tmnxVRtrIfIgnorePortState.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrServiceId"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifIgnorePortState"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfIgnorePortState.setStatus(
        "current"
    )

tmnxVRtrPdnAddrMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 82)
)
tmnxVRtrPdnAddrMismatch.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrNotifInetAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrFailureDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrPdnAddrMismatch.setStatus(
        "current"
    )

tmnxVRtrPdnAddrMismatchCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 83)
)
tmnxVRtrPdnAddrMismatchCleared.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrID"),
        ("TIMETRA-VRTR-MIB", "vRtrIfName"))
)
if mibBuilder.loadTexts:
    tmnxVRtrPdnAddrMismatchCleared.setStatus(
        "current"
    )

tmnxVRtrLeakExportLimitReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 84)
)
tmnxVRtrLeakExportLimitReached.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrLeakExportLimit")
)
if mibBuilder.loadTexts:
    tmnxVRtrLeakExportLimitReached.setStatus(
        "current"
    )

tmnxVRtrLeakExportLimitDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 85)
)
tmnxVRtrLeakExportLimitDropped.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrLeakExportLimit")
)
if mibBuilder.loadTexts:
    tmnxVRtrLeakExportLimitDropped.setStatus(
        "current"
    )

tmnxVRtrDhcpClientStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 86)
)
tmnxVRtrDhcpClientStatusChanged.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDhcpClientStatusChanged.setStatus(
        "current"
    )

tmnxVRtrDhcp6ClientStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 87)
)
tmnxVRtrDhcp6ClientStatusChanged.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateStatus"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDescription"))
)
if mibBuilder.loadTexts:
    tmnxVRtrDhcp6ClientStatusChanged.setStatus(
        "current"
    )

tmnxVRtrNeDiscovered = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 88)
)
tmnxVRtrNeDiscovered.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeidHex"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoSystemMac"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoPlatformType"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoVendorId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNeDiscovered.setStatus(
        "current"
    )

tmnxVRtrNeRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 89)
)
tmnxVRtrNeRemoved.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeidHex"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoSystemMac"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoPlatformType"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoVendorId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNeRemoved.setStatus(
        "current"
    )

tmnxVRtrNeModified = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 90)
)
tmnxVRtrNeModified.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeidHex"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV4PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6Type"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoNeipV6PrefixLen"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoSystemMac"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoPlatformType"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoVendorId"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNeModified.setStatus(
        "current"
    )

vRtrIfDhcpClRtStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 91)
)
vRtrIfDhcpClRtStatusChanged.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtStatus")
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClRtStatusChanged.setStatus(
        "current"
    )

vRtrIfDhcpClStateDnsChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 92)
)
vRtrIfDhcpClStateDnsChanged.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsPriAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsPriAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsSecAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsSecAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsTerAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsTerAddr"))
)
if mibBuilder.loadTexts:
    vRtrIfDhcpClStateDnsChanged.setStatus(
        "current"
    )

vRtrAutoCfgRaRtStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 93)
)
vRtrAutoCfgRaRtStatusChanged.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtStatus")
)
if mibBuilder.loadTexts:
    vRtrAutoCfgRaRtStatusChanged.setStatus(
        "current"
    )

vRtrIfDhcp6ClStateDnsChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 94)
)
vRtrIfDhcp6ClStateDnsChanged.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsPriAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsPriAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsSecAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsSecAddr"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsTerAddrType"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsTerAddr"))
)
if mibBuilder.loadTexts:
    vRtrIfDhcp6ClStateDnsChanged.setStatus(
        "current"
    )

vRtrIfEthLoopbackStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 96)
)
vRtrIfEthLoopbackStarted.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackMacSwap")
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackStarted.setStatus(
        "current"
    )

vRtrIfEthLoopbackStopped = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 97)
)
vRtrIfEthLoopbackStopped.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackMacSwap")
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackStopped.setStatus(
        "current"
    )

tmnxVRtrBfdExtNoFreeTxIntrvlSlot = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 98)
)
tmnxVRtrBfdExtNoFreeTxIntrvlSlot.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrIfBfdSessExtLclDisc")
)
if mibBuilder.loadTexts:
    tmnxVRtrBfdExtNoFreeTxIntrvlSlot.setStatus(
        "current"
    )

tmnxVRtrFibVPNOccupancyThreshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 3, 0, 99)
)
tmnxVRtrFibVPNOccupancyThreshold.setObjects(
    ("TIMETRA-VRTR-MIB", "vRtrFibStatIpVpnCurrUtilization")
)
if mibBuilder.loadTexts:
    tmnxVRtrFibVPNOccupancyThreshold.setStatus(
        "current"
    )


# Notifications groups

tmnxVRtrNotificationV4v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 19)
)
tmnxVRtrNotificationV4v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV4v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrObsoleteNotificationGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 23)
)
tmnxVRtrObsoleteNotificationGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPAFEntriesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPLseStsExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPLeaseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPLseStRestoreProblem"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPLseStatePopulateErr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteNotificationGroup.setStatus(
        "current"
    )

tmnxVRtrNotificationV5v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 28)
)
tmnxVRtrNotificationV5v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV5v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationV6v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 40)
)
tmnxVRtrNotificationV6v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV6v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationV6v1Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 48)
)
tmnxVRtrNotificationV6v1Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV6v1Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationV7v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 59)
)
tmnxVRtrNotificationV7v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAddressAttachFailed"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV7v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationV8v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 63)
)
tmnxVRtrNotificationV8v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdNoCpmNpResources"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAddressAttachFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSingleSfmOverloadStateCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtRoutesExpLimitDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStart"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStop"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV8v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationV10v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 92)
)
tmnxVRtrNotificationV10v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGrtV6ExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtV6RoutesExpLimDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteStatusChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV10v0Group.setStatus(
        "obsolete"
    )

tmnxVrtrIfDcpNotifyV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 105)
)
tmnxVrtrIfDcpNotifyV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfDcpStaticExcd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicExcd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpStaticHoldDownStart"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicHoldDownStart"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpStaticHoldDownEnd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicHoldDownEnd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpStaticConform"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicConform"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpLocMonExcd"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpLocMonExcdDynResource"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpLocMonExcdAllDynAlloc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpLocMonExcdAllDynFreed"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicEnforceAlloc"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDcpDynamicEnforceFreed"))
)
if mibBuilder.loadTexts:
    tmnxVrtrIfDcpNotifyV11v0Group.setStatus(
        "current"
    )

tmnxVRtrObsoleteNotifV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 110)
)
tmnxVRtrObsoleteNotifV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessionProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdNoCpmNpResources"))
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteNotifV11v0Group.setStatus(
        "current"
    )

tmnxVRtrNotificationV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 111)
)
tmnxVRtrNotificationV11v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAddressAttachFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSingleSfmOverloadStateCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtRoutesExpLimitDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStart"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStop"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdExtNoCpmNpResources"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDnsFault"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdNoCpmNpResources"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV11v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrNotificationNHRvplsArpGr = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 139)
)
tmnxVRtrNotificationNHRvplsArpGr.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNHRvplsARPHighUsage"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNHRvplsARPExhaust"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNHRvplsARPHighUsageClr"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationNHRvplsArpGr.setStatus(
        "current"
    )

tmnxVRtrIfArpNbrNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 160)
)
tmnxVRtrIfArpNbrNotifGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrArpLmt"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrArpThresholdExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6NbrLmt"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6NbrThresholdExceeded"))
)
if mibBuilder.loadTexts:
    tmnxVRtrIfArpNbrNotifGroup.setStatus(
        "current"
    )

tmnxVRtrObsoleteNotifV14v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 167)
)
tmnxVRtrObsoleteNotifV14v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrIllegalLabelTCA")
)
if mibBuilder.loadTexts:
    tmnxVRtrObsoleteNotifV14v0Group.setStatus(
        "current"
    )

tmnxVRtrNotificationV14v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 168)
)
tmnxVRtrNotificationV14v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAddressAttachFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSingleSfmOverloadStateCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtRoutesExpLimitDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStart"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStop"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdExtNoCpmNpResources"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDnsFault"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdNoCpmNpResources"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV14v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrLoopbackNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 180)
)
tmnxVRtrLoopbackNotifGroup.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIgnorePortState")
)
if mibBuilder.loadTexts:
    tmnxVRtrLoopbackNotifGroup.setStatus(
        "current"
    )

tmnxVRtrNotificationV15v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 201)
)
tmnxVRtrNotificationV15v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrPdnAddrMismatch"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPdnAddrMismatchCleared"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV15v0Group.setStatus(
        "obsolete"
    )

tmnxVRtrLeakExportLimNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 235)
)
tmnxVRtrLeakExportLimNotifGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrLeakExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLeakExportLimitDropped"))
)
if mibBuilder.loadTexts:
    tmnxVRtrLeakExportLimNotifGroup.setStatus(
        "current"
    )

tmnxVRtrNotificationV19v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 240)
)
tmnxVRtrNotificationV19v0Group.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGrtV6ExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtV6RoutesExpLimDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteStatusChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastMaxRoutesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxArpEntriesCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMaxRoutes"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPSuspiciousPcktRcvd"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdMaxSessionOnSlot"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdPortTypeNotSupported"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCPIfLseStatesExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ServerLseStExceeded"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6LseStateOverride"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6RelayReplyStripUni"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6IllegalClientAddr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6AssignedIllegSubnet"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDHCP6ClientMacUnresolved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MidRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteTCA"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6HighRouteCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRouteCPEStatus"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrManagedRouteAddFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibOccupancyThreshold"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAddressAttachFailed"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSingleSfmOverloadStateCh"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtExportLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtRoutesExpLimitDropped"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStart"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLdpSyncTimerStop"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdSessExtProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdExtNoCpmNpResources"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDnsFault"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitReached"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMacAcctLimitCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDown"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessUp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessDeleted"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdSessProtChange"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNgBfdNoCpmNpResources"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPdnAddrMismatch"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPdnAddrMismatchCleared"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDhcpClientStatusChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDhcp6ClientStatusChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClRtStatusChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcpClStateDnsChanged"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeDiscovered"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeRemoved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeModified"),
        ("TIMETRA-VRTR-MIB", "vRtrAutoCfgRaRtStatusChanged"),
        ("TIMETRA-VRTR-MIB", "vRtrIfDhcp6ClStateDnsChanged"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV19v0Group.setStatus(
        "current"
    )

tmnxVRtrNeNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 249)
)
tmnxVRtrNeNotifGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrNeDiscovered"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeRemoved"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeModified"))
)
if mibBuilder.loadTexts:
    tmnxVRtrNeNotifGroup.setStatus(
        "obsolete"
    )

vRtrIfEthLoopbackNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 276)
)
vRtrIfEthLoopbackNotifGroup.setObjects(
      *(("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackStarted"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackStopped"))
)
if mibBuilder.loadTexts:
    vRtrIfEthLoopbackNotifGroup.setStatus(
        "current"
    )

tmnxVRtrNotificationV20v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 277)
)
tmnxVRtrNotificationV20v0Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdExtNoFreeTxIntrvlSlot")
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationV20v0Group.setStatus(
        "current"
    )

tmnxVRtrNotificationObj21Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 2, 295)
)
tmnxVRtrNotificationObj21Group.setObjects(
    ("TIMETRA-VRTR-MIB", "tmnxVRtrFibVPNOccupancyThreshold")
)
if mibBuilder.loadTexts:
    tmnxVRtrNotificationObj21Group.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance

tmnxVRtr7450V4v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 4)
)
tmnxVRtr7450V4v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalR2r1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV4v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V4v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7750V4v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 5)
)
tmnxVRtr7750V4v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalR2r1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV4v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7750V4v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V5v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 6)
)
tmnxVRtr7450V5v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalR2r1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV4v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V5v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7750V5v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 7)
)
tmnxVRtr7750V5v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalR2r1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV4v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7750V5v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 8)
)
tmnxVRtr7450V6v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 9)
)
tmnxVRtr77x0V6v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 10)
)
tmnxVRtr7450V6v1Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v1Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 11)
)
tmnxVRtr77x0V6v1Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v1Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 12)
)
tmnxVRtr7450V7v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 13)
)
tmnxVRtr77x0V7v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 14)
)
tmnxVRtr7450V8v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 15)
)
tmnxVRtr77x0V8v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7450V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 16)
)
tmnxVRtr7450V9v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7450V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 17)
)
tmnxVRtr77x0V9v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 18)
)
tmnxVRtr77x0V10v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr77x0V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 19)
)
tmnxVRtr77x0V11v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"))
)
if mibBuilder.loadTexts:
    tmnxVRtr77x0V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 20)
)
tmnxVRtr7xx0V12v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnIpRoutes12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 21)
)
tmnxVRtr7xx0V13v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnIpRoutes12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelExtTableV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastSpmsiEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpAutoRDGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLdpIpv613v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLagPerLinkHashGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCidrNextHopOwnInstGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0ObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0GenObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrLimitGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0IfStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableCBFV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUniqueIfIndexGroup"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V14v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 22)
)
tmnxVRtr7xx0V14v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnIpRoutes12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelExtTableV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastSpmsiEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpAutoRDGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLdpIpv613v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLagPerLinkHashGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCidrNextHopOwnInstGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0ObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0GenObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrLimitGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0IfStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableCBFV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUniqueIfIndexGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRoutePrefixGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrEntropyLabelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLspBfdGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfFlowspecV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpLblIpRoutes14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6TunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoopbackNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0NotifyObjsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableLSCV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4StatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4ParamV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableNhTV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFpeV14v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V14v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V15v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 23)
)
tmnxVRtr7xx0V15v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnIpRoutes12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelExtTableV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastSpmsiEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpAutoRDGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLdpIpv613v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLagPerLinkHashGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCidrNextHopOwnInstGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0ObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0GenObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrLimitGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0IfStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableCBFV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUniqueIfIndexGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRoutePrefixGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrEntropyLabelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLspBfdGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfFlowspecV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpLblIpRoutes14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6TunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoopbackNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0NotifyObjsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableLSCV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4StatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4ParamV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableNhTV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFpeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDDosDCpuProtPolicyGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUdpTunnelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQinQNetworkIntfGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0ObjectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrClassFwdingV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtHostRteV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfNgeStatsGroup"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V15v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V16v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 25)
)
tmnxVRtr7xx0V16v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnIpRoutes12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastSpmsiEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpAutoRDGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLdpIpv613v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLagPerLinkHashGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCidrNextHopOwnInstGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0ObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0GenObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrLimitGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0IfStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUniqueIfIndexGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRoutePrefixGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrEntropyLabelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLspBfdGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfFlowspecV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpLblIpRoutes14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6TunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoopbackNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0NotifyObjsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4StatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4ParamV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFpeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDDosDCpuProtPolicyGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUdpTunnelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQinQNetworkIntfGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0ObjectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrClassFwdingV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtHostRteV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfNgeStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAdminTagsV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLargeCommValV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsDBCastV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLocalPrefV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalWeightV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetExtTunnelV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLeakImpPolV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetTunnStatV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetRouteV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTnlStatV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBierV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRibApiV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRibTelemetryV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMplsFwdPlcyV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLeakExportLimNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeInfoGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNeNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V16v0Compliance.setStatus(
        "obsolete"
    )

tmnxVRtr7xx0V19v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 26)
)
tmnxVRtr7xx0V19v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6V4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IpV5v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDhcpServerGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSubscrAuthV3v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRteCPEChkV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpcpV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfCpmProtectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxDscpAppV6v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetAllCidrRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetStaticRouteV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPolicyGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNetDomainGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunIntV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnPmsiV8v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV6v1Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQPPBV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCP6V12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDHCP6ProxyDuidGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfIpReasV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMSPwV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNatRedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMvpnSrcRedV9v0R4Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV9v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtruRPFV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpPoolGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQosQGrplV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStatV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6MgtIfV7v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxMGVRtrIfV4v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlowSpecV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLocalMgmtV10v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDCpuProtV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDcpNotifyObjsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrIfDcpNotifyV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfMacStatsV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpv6RtrAdvertV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBfdV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRAV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrExportBgpVpnV11v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGenerateICMPV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfSendV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrIfAttributeGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCreation12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVirtualCPE12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpn12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagHashLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctTempl12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLagEgrLoadBal12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrVccvBfd12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpTunnelingGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggrRouteV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfExtV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStickyHashEcmp12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotifyObjsNHRvplsArpGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationNHRvplsArpGr"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMcastSpmsiEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHoldDownTimeV12v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalEnhV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtIfArpRetryTimerGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpAutoRDGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLdpIpv613v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfLagPerLinkHashGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrCidrNextHopOwnInstGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV13v0ObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0GenObsoletedGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrLimitGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV13v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV13v0IfStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfArpNbrNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPv6IPsecStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUniqueIfIndexGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRoutePrefixGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrEntropyLabelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLspBfdGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfFlowspecV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfDHCPRelayV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpLblIpRoutes14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV6TunnelTableStatGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoopbackNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV14v0NotifyObjsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4StatsV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4ParamV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFpeV14v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrDDosDCpuProtPolicyGrp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrUdpTunnelGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrQinQNetworkIntfGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtV15v0ObjectGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrClassFwdingV15v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtHostRteV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfNgeStatsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAdminTagsV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLargeCommValV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfStatsDBCastV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLocalPrefV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIpV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLoadBalWeightV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetExtTunnelV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGrtLeakImpPolV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetTunnStatV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrGlobalV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetRouteV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTnlStatV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBierV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDhcpClientGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRibApiV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrRibTelemetryV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMplsFwdPlcyV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpV4StatsV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLeakExportLimNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV16v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDhcpRoutesV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV19v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfQosV19v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrIfIngressPolicerV19v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsTunnelModeV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDiscardCV19v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrMplsTunnelModeV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrConfFlowspecV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfHostRouteGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrTunTerminationV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfPhysStatsV19v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTnlStatV19v10Group"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEgressQueueV19v01Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrTeV6Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V19v0Compliance.setStatus(
        "current"
    )

tmnxVRtr7xx0V20v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 27)
)
tmnxVRtr7xx0V20v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrIfNdHostRouteGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDnsV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHelperRedirectPkts"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPEHV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfExtParmsV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrAggtIPPrefixV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxvRtrInetAggrPolicyV20Group"),
        ("TIMETRA-VRTR-MIB", "tmnxFlexAlgoV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEpe20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVrtrSRPolicyV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrInetSRIndirectV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIPV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrLspBfdV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIcmpRedirectV20v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpLabelIpv620v0Group"),
        ("TIMETRA-VRTR-MIB", "vRtrIfEthLoopbackNotifGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationV20v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrHelperMplsStatsPktsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrPlcyAcctQPPB20v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V20v0Compliance.setStatus(
        "current"
    )

tmnxVRtr7xx0V21v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 28)
)
tmnxVRtr7xx0V21v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrStaticRtBackupNHGroup"),
        ("TIMETRA-VRTR-MIB", "vRtrBgpIpVpnMplsGroup"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrMtrace2V21Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpEvpnV21v0Grp"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrV21v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrV6Isis21v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrBgpSrv6V21v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlexAlgoDelayV21v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFlexAlgoDlyDynV21v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrSrV621v0Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrFibStatObj21Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrNotificationObj21Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrDPathAttrObj21Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfHQosOnLagV21v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V21v0Compliance.setStatus(
        "current"
    )

tmnxVRtr7xx0V22v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 3, 1, 29)
)
tmnxVRtr7xx0V22v0Compliance.setObjects(
      *(("TIMETRA-VRTR-MIB", "tmnxVRtrDynEgLblLmtObj22Group"),
        ("TIMETRA-VRTR-MIB", "tmnxVRtrIfV22v0Group"))
)
if mibBuilder.loadTexts:
    tmnxVRtr7xx0V22v0Compliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "TIMETRA-VRTR-MIB",
    **{"TmnxVPNId": TmnxVPNId,
       "TmnxInetAddrState": TmnxInetAddrState,
       "TDSCPAppId": TDSCPAppId,
       "TDot1pAppId": TDot1pAppId,
       "TmnxVrtrSingleSfmOverloadState": TmnxVrtrSingleSfmOverloadState,
       "TmnxInetCidrNextHopType": TmnxInetCidrNextHopType,
       "TmnxInetCidrNextHopOwner": TmnxInetCidrNextHopOwner,
       "TmnxL3RouteOwner": TmnxL3RouteOwner,
       "TmnxRouteOperFlags": TmnxRouteOperFlags,
       "VRtrVprnTTLPropagateType": VRtrVprnTTLPropagateType,
       "VRtrTTLPropagateType": VRtrTTLPropagateType,
       "TmnxSendCgaModifier": TmnxSendCgaModifier,
       "TmnxEmbFlowspecFltrMaxSize": TmnxEmbFlowspecFltrMaxSize,
       "TmnxInetAddrTypeWithMcast": TmnxInetAddrTypeWithMcast,
       "TmnxVrtrNeid": TmnxVrtrNeid,
       "VrtrMplsTunnelMode": VrtrMplsTunnelMode,
       "timetraVRtrMIBModule": timetraVRtrMIBModule,
       "tmnxVRtrConformance": tmnxVRtrConformance,
       "tmnxVRtrCompliances": tmnxVRtrCompliances,
       "tmnxVRtr7450V4v0Compliance": tmnxVRtr7450V4v0Compliance,
       "tmnxVRtr7750V4v0Compliance": tmnxVRtr7750V4v0Compliance,
       "tmnxVRtr7450V5v0Compliance": tmnxVRtr7450V5v0Compliance,
       "tmnxVRtr7750V5v0Compliance": tmnxVRtr7750V5v0Compliance,
       "tmnxVRtr7450V6v0Compliance": tmnxVRtr7450V6v0Compliance,
       "tmnxVRtr77x0V6v0Compliance": tmnxVRtr77x0V6v0Compliance,
       "tmnxVRtr7450V6v1Compliance": tmnxVRtr7450V6v1Compliance,
       "tmnxVRtr77x0V6v1Compliance": tmnxVRtr77x0V6v1Compliance,
       "tmnxVRtr7450V7v0Compliance": tmnxVRtr7450V7v0Compliance,
       "tmnxVRtr77x0V7v0Compliance": tmnxVRtr77x0V7v0Compliance,
       "tmnxVRtr7450V8v0Compliance": tmnxVRtr7450V8v0Compliance,
       "tmnxVRtr77x0V8v0Compliance": tmnxVRtr77x0V8v0Compliance,
       "tmnxVRtr7450V9v0Compliance": tmnxVRtr7450V9v0Compliance,
       "tmnxVRtr77x0V9v0Compliance": tmnxVRtr77x0V9v0Compliance,
       "tmnxVRtr77x0V10v0Compliance": tmnxVRtr77x0V10v0Compliance,
       "tmnxVRtr77x0V11v0Compliance": tmnxVRtr77x0V11v0Compliance,
       "tmnxVRtr7xx0V12v0Compliance": tmnxVRtr7xx0V12v0Compliance,
       "tmnxVRtr7xx0V13v0Compliance": tmnxVRtr7xx0V13v0Compliance,
       "tmnxVRtr7xx0V14v0Compliance": tmnxVRtr7xx0V14v0Compliance,
       "tmnxVRtr7xx0V15v0Compliance": tmnxVRtr7xx0V15v0Compliance,
       "tmnxVRtr7xx0V16v0Compliance": tmnxVRtr7xx0V16v0Compliance,
       "tmnxVRtr7xx0V19v0Compliance": tmnxVRtr7xx0V19v0Compliance,
       "tmnxVRtr7xx0V20v0Compliance": tmnxVRtr7xx0V20v0Compliance,
       "tmnxVRtr7xx0V21v0Compliance": tmnxVRtr7xx0V21v0Compliance,
       "tmnxVRtr7xx0V22v0Compliance": tmnxVRtr7xx0V22v0Compliance,
       "tmnxVRtrGroups": tmnxVRtrGroups,
       "tmnxVRtrGlobalR2r1Group": tmnxVRtrGlobalR2r1Group,
       "tmnxVRtrIfSubscrAuthV3v0Group": tmnxVRtrIfSubscrAuthV3v0Group,
       "tmnxVRtrV4v0Group": tmnxVRtrV4v0Group,
       "tmnxVRtrIfV4v0Group": tmnxVRtrIfV4v0Group,
       "tmnxVRtrIpV4v0Group": tmnxVRtrIpV4v0Group,
       "tmnxVRtrObsoletedObjectsV4v0Group": tmnxVRtrObsoletedObjectsV4v0Group,
       "tmnxVRtrBfdV4v0Group": tmnxVRtrBfdV4v0Group,
       "tmnxVRtrNotificationV4v0Group": tmnxVRtrNotificationV4v0Group,
       "tmnxVRtrIPv6IfV4v0Group": tmnxVRtrIPv6IfV4v0Group,
       "tmnxVRtrIPv6V4v0Group": tmnxVRtrIPv6V4v0Group,
       "tmnxVRtrIPv6IpV4v0Group": tmnxVRtrIPv6IpV4v0Group,
       "tmnxVRtrObsoleteNotificationGroup": tmnxVRtrObsoleteNotificationGroup,
       "tmnxVRtrIPv6IpV5v0Group": tmnxVRtrIPv6IpV5v0Group,
       "tmnxVRtrIfV5v0Group": tmnxVRtrIfV5v0Group,
       "tmnxVRtrIpV5v0Group": tmnxVRtrIpV5v0Group,
       "tmnxVRtrV5v0Group": tmnxVRtrV5v0Group,
       "tmnxVRtrNotificationV5v0Group": tmnxVRtrNotificationV5v0Group,
       "tmnxVRtrObsoleteV5v0Group": tmnxVRtrObsoleteV5v0Group,
       "tmnxVRtrNotificationObjV5v0Group": tmnxVRtrNotificationObjV5v0Group,
       "tmnxVRtrIfDhcpServerGroup": tmnxVRtrIfDhcpServerGroup,
       "tmnxVRtrV6v0Group": tmnxVRtrV6v0Group,
       "tmnxVRtrStaticRteCPEChkV6v0Group": tmnxVRtrStaticRteCPEChkV6v0Group,
       "tmnxVRtrIfIpcpV6v0Group": tmnxVRtrIfIpcpV6v0Group,
       "tmnxVRtrIfCpmProtectGroup": tmnxVRtrIfCpmProtectGroup,
       "tmnxDscpAppV6v0Group": tmnxDscpAppV6v0Group,
       "tmnxVRtrIfDHCPRelayGroup": tmnxVRtrIfDHCPRelayGroup,
       "tmnxVRtrGlobalV6v0Group": tmnxVRtrGlobalV6v0Group,
       "tmnxVRtrNotificationObjV6v0Group": tmnxVRtrNotificationObjV6v0Group,
       "tmnxVRtrNotificationV6v0Group": tmnxVRtrNotificationV6v0Group,
       "tmnxVRtrBfdV6v0Group": tmnxVRtrBfdV6v0Group,
       "tmnxVRtrV6v1Group": tmnxVRtrV6v1Group,
       "tmnxVRtrIPv6MgtIfV7v0Group": tmnxVRtrIPv6MgtIfV7v0Group,
       "tmnxVRtrFibStatsV6v0Group": tmnxVRtrFibStatsV6v0Group,
       "tmnxVRtrInetAllCidrRouteV7v0Group": tmnxVRtrInetAllCidrRouteV7v0Group,
       "tmnxVRtrInetStaticRouteV7v0Group": tmnxVRtrInetStaticRouteV7v0Group,
       "tmnxVRtrFibStatsV6v1Group": tmnxVRtrFibStatsV6v1Group,
       "tmnxVRtrNotificationV6v1Group": tmnxVRtrNotificationV6v1Group,
       "tmnxVRtruRPFV7v0Group": tmnxVRtruRPFV7v0Group,
       "tmnxVRtrMvpnV7v0Group": tmnxVRtrMvpnV7v0Group,
       "tmnxVRtrIfV7v0Group": tmnxVRtrIfV7v0Group,
       "tmnxVRtrIpV7v0Group": tmnxVRtrIpV7v0Group,
       "tmnxVRtrV7v0Group": tmnxVRtrV7v0Group,
       "tmnxVRtrObsoleteV7v0Group": tmnxVRtrObsoleteV7v0Group,
       "tmnxVRtrIfDHCPRelayV7v0Group": tmnxVRtrIfDHCPRelayV7v0Group,
       "tmnxVRtrBfdV7v0Group": tmnxVRtrBfdV7v0Group,
       "tmnxVRtrIfDHCPRelayV6v1Group": tmnxVRtrIfDHCPRelayV6v1Group,
       "tmnxVRtrNotificationObjV7v0Group": tmnxVRtrNotificationObjV7v0Group,
       "tmnxVRtrNotificationV7v0Group": tmnxVRtrNotificationV7v0Group,
       "tmnxVRtrV8v0Group": tmnxVRtrV8v0Group,
       "tmnxVRtrIfDHCPRelayV8v0Group": tmnxVRtrIfDHCPRelayV8v0Group,
       "tmnxVRtrNetDomainGroup": tmnxVRtrNetDomainGroup,
       "tmnxVRtrNotificationV8v0Group": tmnxVRtrNotificationV8v0Group,
       "tmnxVRtrObsoleteV8v0Group": tmnxVRtrObsoleteV8v0Group,
       "tmnxVRtrTunIntV8v0Group": tmnxVRtrTunIntV8v0Group,
       "tmnxVRtrBfdV8v0Group": tmnxVRtrBfdV8v0Group,
       "tmnxVRtrMvpnPmsiV8v0Group": tmnxVRtrMvpnPmsiV8v0Group,
       "tmnxVRtrFibStatsV8v0Group": tmnxVRtrFibStatsV8v0Group,
       "tmnxVRtrV9v0Group": tmnxVRtrV9v0Group,
       "tmnxVRtrIfDHCP6V9v0Group": tmnxVRtrIfDHCP6V9v0Group,
       "tmnxVRtrQPPBV9v0R4Group": tmnxVRtrQPPBV9v0R4Group,
       "tmnxVRtrBfdV9v0Group": tmnxVRtrBfdV9v0Group,
       "tmnxVRtrIfIpReasV9v0Group": tmnxVRtrIfIpReasV9v0Group,
       "tmnxVRtrIfStatsV9v0Group": tmnxVRtrIfStatsV9v0Group,
       "tmnxVRtrNotificationObjV8v0Group": tmnxVRtrNotificationObjV8v0Group,
       "tmnxVRtrIfDHCPRelayV9v0Group": tmnxVRtrIfDHCPRelayV9v0Group,
       "tmnxVRtrNatRedGroup": tmnxVRtrNatRedGroup,
       "tmnxVRtrIfV9v0Group": tmnxVRtrIfV9v0Group,
       "tmnxVRtrMSPwV9v0Group": tmnxVRtrMSPwV9v0Group,
       "tmnxVRtrMvpnSrcRedV9v0R4Group": tmnxVRtrMvpnSrcRedV9v0R4Group,
       "tmnxVRtrObsoletedBfdV9v0Group": tmnxVRtrObsoletedBfdV9v0Group,
       "tmnxVRtrStatV9v0Group": tmnxVRtrStatV9v0Group,
       "tmnxVRtruRPFV10v0Group": tmnxVRtruRPFV10v0Group,
       "tmnxVRtrPolicyGroup": tmnxVRtrPolicyGroup,
       "tmnxVRtrIfDHCP6V10v0Group": tmnxVRtrIfDHCP6V10v0Group,
       "tmnxVRtrGlobalV10v0Group": tmnxVRtrGlobalV10v0Group,
       "tmnxVRtrQosQGrplV10v0Group": tmnxVRtrQosQGrplV10v0Group,
       "tmnxVRtrStatV10v0Group": tmnxVRtrStatV10v0Group,
       "tmnxVRtrIfObsoletedV10v0Group": tmnxVRtrIfObsoletedV10v0Group,
       "tmnxVRtrV10v0Group": tmnxVRtrV10v0Group,
       "tmnxVRtrIfV10v0Group": tmnxVRtrIfV10v0Group,
       "tmnxVRtrNotificationV10v0Group": tmnxVRtrNotificationV10v0Group,
       "tmnxVRtrFlowSpecV11v0Group": tmnxVRtrFlowSpecV11v0Group,
       "tmnxVRtrIfExtV11v0Group": tmnxVRtrIfExtV11v0Group,
       "tmnxVRtrGrtLocalMgmtV10v0Group": tmnxVRtrGrtLocalMgmtV10v0Group,
       "tmnxVRtrV11v0Group": tmnxVRtrV11v0Group,
       "tmnxVRtrStatV11v0Group": tmnxVRtrStatV11v0Group,
       "tmnxVRtrMcastV11v0Group": tmnxVRtrMcastV11v0Group,
       "tmnxVRtrIfStatsV11v0Group": tmnxVRtrIfStatsV11v0Group,
       "tmnxVRtrIfDHCPRelayV11v0Group": tmnxVRtrIfDHCPRelayV11v0Group,
       "tmnxVrtrIfDCpuProtV11v0Group": tmnxVrtrIfDCpuProtV11v0Group,
       "tmnxVrtrIfDHCP6ProxyDuidGroup": tmnxVrtrIfDHCP6ProxyDuidGroup,
       "tmnxVrtrDcpNotifyObjsV11v0Group": tmnxVrtrDcpNotifyObjsV11v0Group,
       "tmnxVrtrIfDcpNotifyV11v0Group": tmnxVrtrIfDcpNotifyV11v0Group,
       "tmnxVRtrIfMacStatsV11v0Group": tmnxVRtrIfMacStatsV11v0Group,
       "tmnxVRtrIpv6RtrAdvertV11v0Group": tmnxVRtrIpv6RtrAdvertV11v0Group,
       "tmnxVRtrBfdV11v0Group": tmnxVRtrBfdV11v0Group,
       "tmnxVRtrBfdSessionObsoletedGroup": tmnxVRtrBfdSessionObsoletedGroup,
       "tmnxVRtrObsoleteNotifV11v0Group": tmnxVRtrObsoleteNotifV11v0Group,
       "tmnxVRtrNotificationV11v0Group": tmnxVRtrNotificationV11v0Group,
       "tmnxVRtrIfDHCP6V11v0Group": tmnxVRtrIfDHCP6V11v0Group,
       "tmnxVRtrNotifyObjsV11v0Group": tmnxVRtrNotifyObjsV11v0Group,
       "tmnxVRtrV12v0Group": tmnxVRtrV12v0Group,
       "tmnxVRtrIfDHCP6V12v0Group": tmnxVRtrIfDHCP6V12v0Group,
       "tmnxVRtrExportBgpVpnV11v0Group": tmnxVRtrExportBgpVpnV11v0Group,
       "tmnxVRtrGenerateICMPV12v0Group": tmnxVRtrGenerateICMPV12v0Group,
       "tmnxVRtrIfSendV12v0Group": tmnxVRtrIfSendV12v0Group,
       "tmnxvRtrIfAttributeGroup": tmnxvRtrIfAttributeGroup,
       "tmnxVRtrIfExtV12v0Group": tmnxVRtrIfExtV12v0Group,
       "tmnxVRtrCreation12v0Group": tmnxVRtrCreation12v0Group,
       "tmnxVRtrIPsecStatGroup": tmnxVRtrIPsecStatGroup,
       "tmnxVRtrVirtualCPE12v0Group": tmnxVRtrVirtualCPE12v0Group,
       "tmnxVRtrBgpEvpn12v0Group": tmnxVRtrBgpEvpn12v0Group,
       "tmnxVRtrLagHashLoadBal12v0Group": tmnxVRtrLagHashLoadBal12v0Group,
       "tmnxVRtrPlcyAcctTempl12v0Group": tmnxVRtrPlcyAcctTempl12v0Group,
       "tmnxVRtrLagEgrLoadBal12v0Group": tmnxVRtrLagEgrLoadBal12v0Group,
       "tmnxVRtrVccvBfd12v0Group": tmnxVRtrVccvBfd12v0Group,
       "tmnxVRtrRAV12v0Group": tmnxVRtrRAV12v0Group,
       "tmnxVRtrIcmpTunnelingGroup": tmnxVRtrIcmpTunnelingGroup,
       "tmnxVRtrAggrRouteV12v0Group": tmnxVRtrAggrRouteV12v0Group,
       "tmnxVRtrBgpEvpnIpRoutes12v0Group": tmnxVRtrBgpEvpnIpRoutes12v0Group,
       "tmnxVRtrConfExtV12v0Group": tmnxVRtrConfExtV12v0Group,
       "tmnxVRtrStickyHashEcmp12v0Group": tmnxVRtrStickyHashEcmp12v0Group,
       "tmnxVRtrV13v0Group": tmnxVRtrV13v0Group,
       "tmnxVRtrNotifyObjsNHRvplsArpGrp": tmnxVRtrNotifyObjsNHRvplsArpGrp,
       "tmnxVRtrNotificationNHRvplsArpGr": tmnxVRtrNotificationNHRvplsArpGr,
       "tmnxVRtrTunnelExtTableV13v0Group": tmnxVRtrTunnelExtTableV13v0Group,
       "tmnxVRtrMcastSpmsiEnhV13v0Group": tmnxVRtrMcastSpmsiEnhV13v0Group,
       "tmnxVRtrHoldDownTimeV12v0Group": tmnxVRtrHoldDownTimeV12v0Group,
       "tmnxVRtrLoadBalEnhV13v0Group": tmnxVRtrLoadBalEnhV13v0Group,
       "tmnxVRtrInetSRIndirectV13v0Group": tmnxVRtrInetSRIndirectV13v0Group,
       "tmnxVRtrIfExtIfArpRetryTimerGrp": tmnxVRtrIfExtIfArpRetryTimerGrp,
       "tmnxVRtrBgpAutoRDGroup": tmnxVRtrBgpAutoRDGroup,
       "tmnxVRtrTunnelTableStatGroup": tmnxVRtrTunnelTableStatGroup,
       "tmnxVRtrIfDHCPRelayV13v0Group": tmnxVRtrIfDHCPRelayV13v0Group,
       "tmnxVRtrLdpIpv613v0Group": tmnxVRtrLdpIpv613v0Group,
       "tmnxVRtrIfLagPerLinkHashGroup": tmnxVRtrIfLagPerLinkHashGroup,
       "tmnxVRtrCidrNextHopOwnInstGroup": tmnxVRtrCidrNextHopOwnInstGroup,
       "tmnxVRtrIpV13v0Group": tmnxVRtrIpV13v0Group,
       "tmnxVRtrIpV13v0ObsoletedGroup": tmnxVRtrIpV13v0ObsoletedGroup,
       "tmnxVRtrIfObsoletedV13v0Group": tmnxVRtrIfObsoletedV13v0Group,
       "tmnxVRtrV13v0GenObsoletedGroup": tmnxVRtrV13v0GenObsoletedGroup,
       "tmnxVRtrIfArpNbrLimitGroup": tmnxVRtrIfArpNbrLimitGroup,
       "tmnxVRtrIfExtV13v0Group": tmnxVRtrIfExtV13v0Group,
       "tmnxVRtrV13v0IfStatsGroup": tmnxVRtrV13v0IfStatsGroup,
       "tmnxVRtrIfArpNbrNotifGroup": tmnxVRtrIfArpNbrNotifGroup,
       "tmnxVRtrTunnelTableCBFV13v0Group": tmnxVRtrTunnelTableCBFV13v0Group,
       "tmnxVRtrIPv6IPsecStatGroup": tmnxVRtrIPv6IPsecStatGroup,
       "tmnxVRtrUniqueIfIndexGroup": tmnxVRtrUniqueIfIndexGroup,
       "tmnxVRtrStaticRoutePrefixGroup": tmnxVRtrStaticRoutePrefixGroup,
       "tmnxVRtrV14v0ObsoletedGroup": tmnxVRtrV14v0ObsoletedGroup,
       "tmnxVRtrV14v0Group": tmnxVRtrV14v0Group,
       "tmnxVRtrObsoleteNotifV14v0Group": tmnxVRtrObsoleteNotifV14v0Group,
       "tmnxVRtrNotificationV14v0Group": tmnxVRtrNotificationV14v0Group,
       "tmnxVRtrEntropyLabelGroup": tmnxVRtrEntropyLabelGroup,
       "tmnxVRtrLspBfdGroup": tmnxVRtrLspBfdGroup,
       "tmnxVRtrIfV14v0Group": tmnxVRtrIfV14v0Group,
       "tmnxVRtrConfFlowspecV14v0Group": tmnxVRtrConfFlowspecV14v0Group,
       "tmnxVRtrInetSRIndirectV14v0Group": tmnxVRtrInetSRIndirectV14v0Group,
       "tmnxVRtrFibStatsV14v0Group": tmnxVRtrFibStatsV14v0Group,
       "tmnxVRtrIfDHCPRelayV14v0Group": tmnxVRtrIfDHCPRelayV14v0Group,
       "tmnxVRtrBgpLblIpRoutes14v0Group": tmnxVRtrBgpLblIpRoutes14v0Group,
       "tmnxVRtrV6TunnelTableStatGroup": tmnxVRtrV6TunnelTableStatGroup,
       "tmnxVRtrSrTeV14v0Group": tmnxVRtrSrTeV14v0Group,
       "tmnxVRtrIfExtV14v0Group": tmnxVRtrIfExtV14v0Group,
       "tmnxVRtrLoopbackNotifGroup": tmnxVRtrLoopbackNotifGroup,
       "tmnxVRtrV14v0NotifyObjsGroup": tmnxVRtrV14v0NotifyObjsGroup,
       "tmnxVRtrTunnelTableLSCV14v0Group": tmnxVRtrTunnelTableLSCV14v0Group,
       "tmnxVRtrIcmpV4StatsV14v0Group": tmnxVRtrIcmpV4StatsV14v0Group,
       "tmnxVRtrIcmpV4ParamV14v0Group": tmnxVRtrIcmpV4ParamV14v0Group,
       "tmnxVRtrTunnelTableNhTV14v0Group": tmnxVRtrTunnelTableNhTV14v0Group,
       "tmnxVRtrFpeV14v0Group": tmnxVRtrFpeV14v0Group,
       "tmnxVRtrV15v0Group": tmnxVRtrV15v0Group,
       "tmnxVrtrDDosDCpuProtPolicyGrp": tmnxVrtrDDosDCpuProtPolicyGrp,
       "tmnxVRtrIfExtV15v0Group": tmnxVRtrIfExtV15v0Group,
       "tmnxVRtrUdpTunnelGroup": tmnxVRtrUdpTunnelGroup,
       "tmnxVRtrIpV15v0Group": tmnxVRtrIpV15v0Group,
       "tmnxVRtrIpV15v0ObsoletedGroup": tmnxVRtrIpV15v0ObsoletedGroup,
       "tmnxVRtrQinQNetworkIntfGroup": tmnxVRtrQinQNetworkIntfGroup,
       "tmnxVRtrIfV15v0ObsoletedGroup": tmnxVRtrIfV15v0ObsoletedGroup,
       "tmnxVRtrGlobalV15v0Group": tmnxVRtrGlobalV15v0Group,
       "tmnxVRtrGlobalObsoletedGroup": tmnxVRtrGlobalObsoletedGroup,
       "tmnxVRtrIfExtV15v0ObjectGroup": tmnxVRtrIfExtV15v0ObjectGroup,
       "tmnxVRtrIfExtObsoletedGroup": tmnxVRtrIfExtObsoletedGroup,
       "tmnxVRtrClassFwdingV15v0Group": tmnxVRtrClassFwdingV15v0Group,
       "tmnxVRtrNotificationV15v0Group": tmnxVRtrNotificationV15v0Group,
       "tmnxVRtrIfExtHostRteV15v0Group": tmnxVRtrIfExtHostRteV15v0Group,
       "tmnxVRtrIfNgeStatsGroup": tmnxVRtrIfNgeStatsGroup,
       "tmnxVRtrIfStatsV16v0Group": tmnxVRtrIfStatsV16v0Group,
       "tmnxVRtrAdminTagsV16v0Group": tmnxVRtrAdminTagsV16v0Group,
       "tmnxVRtrLargeCommValV16v0Group": tmnxVRtrLargeCommValV16v0Group,
       "tmnxVRtrIfStatsDBCastV16v0Group": tmnxVRtrIfStatsDBCastV16v0Group,
       "tmnxVRtrIfV16v0Group": tmnxVRtrIfV16v0Group,
       "tmnxVRtrLocalPrefV16v0Group": tmnxVRtrLocalPrefV16v0Group,
       "tmnxVRtrIpV16v0Group": tmnxVRtrIpV16v0Group,
       "tmnxVRtrLoadBalWeightV16v0Group": tmnxVRtrLoadBalWeightV16v0Group,
       "tmnxVRtrInetExtTunnelV16v0Group": tmnxVRtrInetExtTunnelV16v0Group,
       "tmnxVRtrGrtLeakImpPolV16v0Group": tmnxVRtrGrtLeakImpPolV16v0Group,
       "tmnxVRtrInetTunnStatV16v0Group": tmnxVRtrInetTunnStatV16v0Group,
       "tmnxVRtrGlobalV16v0Group": tmnxVRtrGlobalV16v0Group,
       "tmnxVRtrInetRouteV16v0Group": tmnxVRtrInetRouteV16v0Group,
       "tmnxVRtrSrTnlStatV16v0Group": tmnxVRtrSrTnlStatV16v0Group,
       "tmnxTunnelTableObsoleteV16v0Grp": tmnxTunnelTableObsoleteV16v0Grp,
       "tmnxVRtrBierV16v0Group": tmnxVRtrBierV16v0Group,
       "tmnxVRtrDhcpClientGroup": tmnxVRtrDhcpClientGroup,
       "tmnxVRtrRibApiV16v0Group": tmnxVRtrRibApiV16v0Group,
       "tmnxVRtrRibTelemetryV16v0Group": tmnxVRtrRibTelemetryV16v0Group,
       "tmnxVRtrMplsFwdPlcyV16v0Group": tmnxVRtrMplsFwdPlcyV16v0Group,
       "tmnxVRtrIcmpV4StatsV19v0Group": tmnxVRtrIcmpV4StatsV19v0Group,
       "tmnxVRtrLeakExportLimNotifGroup": tmnxVRtrLeakExportLimNotifGroup,
       "tmnxVRtrInetSRIndirectV16v0Group": tmnxVRtrInetSRIndirectV16v0Group,
       "tmnxVRtrDhcpRoutesV19v0Group": tmnxVRtrDhcpRoutesV19v0Group,
       "tmnxVRtrV19v0Group": tmnxVRtrV19v0Group,
       "tmnxVRtrIfV19v0Group": tmnxVRtrIfV19v0Group,
       "tmnxVRtrNotificationV19v0Group": tmnxVRtrNotificationV19v0Group,
       "vRtrIfEgressQueueV19v0Group": vRtrIfEgressQueueV19v0Group,
       "tmnxVRtrIfQosV19v0Group": tmnxVRtrIfQosV19v0Group,
       "vRtrIfIngressPolicerV19v0Group": vRtrIfIngressPolicerV19v0Group,
       "vRtrMplsTunnelModeV19v0Group": vRtrMplsTunnelModeV19v0Group,
       "tmnxVRtrDiscardCV19v0Group": tmnxVRtrDiscardCV19v0Group,
       "tmnxVRtrConfFlowspecV19v0Group": tmnxVRtrConfFlowspecV19v0Group,
       "tmnxVRtrIfHostRouteGroup": tmnxVRtrIfHostRouteGroup,
       "tmnxVRtrNeInfoGroup": tmnxVRtrNeInfoGroup,
       "tmnxVRtrNeNotifGroup": tmnxVRtrNeNotifGroup,
       "tmnxVRtrTunTerminationV19v0Group": tmnxVRtrTunTerminationV19v0Group,
       "tmnxVRtrIfNdHostRouteGroup": tmnxVRtrIfNdHostRouteGroup,
       "tmnxVRtrIfPhysStatsV19v0Group": tmnxVRtrIfPhysStatsV19v0Group,
       "tmnxVRtrSrTnlStatV19v10Group": tmnxVRtrSrTnlStatV19v10Group,
       "tmnxVRtrDnsV20v0Group": tmnxVRtrDnsV20v0Group,
       "tmnxVRtrHelperRedirectPkts": tmnxVRtrHelperRedirectPkts,
       "tmnxVRtrIPEHV20v0Group": tmnxVRtrIPEHV20v0Group,
       "tmnxVRtrIfExtParmsV20v0Group": tmnxVRtrIfExtParmsV20v0Group,
       "vRtrIfEgressQueueV19v01Group": vRtrIfEgressQueueV19v01Group,
       "tmnxVRtrAggtIPPrefixV20v0Group": tmnxVRtrAggtIPPrefixV20v0Group,
       "tmnxFlexAlgoV20v0Group": tmnxFlexAlgoV20v0Group,
       "tmnxVRtrBgpEpe20v0Group": tmnxVRtrBgpEpe20v0Group,
       "tmnxVrtrSRPolicyV20v0Group": tmnxVrtrSRPolicyV20v0Group,
       "tmnxVRtrIfExtHostRteV20v0Group": tmnxVRtrIfExtHostRteV20v0Group,
       "tmnxVRtrIfTableObsoleteV20v0Grp": tmnxVRtrIfTableObsoleteV20v0Grp,
       "tmnxVRtrInetSRIndirectV20v0Group": tmnxVRtrInetSRIndirectV20v0Group,
       "tmnxvRtrInetAggrPolicyV20Group": tmnxvRtrInetAggrPolicyV20Group,
       "tmnxVRtrSrTeV6Group": tmnxVRtrSrTeV6Group,
       "tmnxVRtrIPV20v0Group": tmnxVRtrIPV20v0Group,
       "tmnxVRtrV20v0Group": tmnxVRtrV20v0Group,
       "tmnxVRtrBgpEvpnV20v0Group": tmnxVRtrBgpEvpnV20v0Group,
       "tmnxVRtrLspBfdV20v0Group": tmnxVRtrLspBfdV20v0Group,
       "tmnxVRtrIcmpRedirectV20v0Group": tmnxVRtrIcmpRedirectV20v0Group,
       "vRtrIfEthLoopbackV20v0Group": vRtrIfEthLoopbackV20v0Group,
       "tmnxVRtrBgpLabelIpv620v0Group": tmnxVRtrBgpLabelIpv620v0Group,
       "vRtrIfEthLoopbackNotifGroup": vRtrIfEthLoopbackNotifGroup,
       "tmnxVRtrNotificationV20v0Group": tmnxVRtrNotificationV20v0Group,
       "tmnxVRtrHelperMplsStatsPktsGroup": tmnxVRtrHelperMplsStatsPktsGroup,
       "tmnxVRtrPlcyAcctQPPB20v0Group": tmnxVRtrPlcyAcctQPPB20v0Group,
       "tmnxVRtrStaticRtBackupNHGroup": tmnxVRtrStaticRtBackupNHGroup,
       "vRtrBgpIpVpnMplsGroup": vRtrBgpIpVpnMplsGroup,
       "tmnxVRtrMtrace2V21Group": tmnxVRtrMtrace2V21Group,
       "tmnxVRtrBgpEvpnV21v0Grp": tmnxVRtrBgpEvpnV21v0Grp,
       "tmnxVRtrV21v0Group": tmnxVRtrV21v0Group,
       "tmnxVRtrSrV6Isis21v0Group": tmnxVRtrSrV6Isis21v0Group,
       "tmnxVRtrBgpSrv6V21v0Group": tmnxVRtrBgpSrv6V21v0Group,
       "tmnxVRtrFlexAlgoDelayV21v0Group": tmnxVRtrFlexAlgoDelayV21v0Group,
       "tmnxVRtrFlexAlgoDlyDynV21v0Group": tmnxVRtrFlexAlgoDlyDynV21v0Group,
       "tmnxVRtrGlobalObsoleteV21v0Grp": tmnxVRtrGlobalObsoleteV21v0Grp,
       "tmnxVRtrSrV621v0Group": tmnxVRtrSrV621v0Group,
       "tmnxVRtrNotificationObjV21v0Grp": tmnxVRtrNotificationObjV21v0Grp,
       "tmnxVRtrFibStatObj21Group": tmnxVRtrFibStatObj21Group,
       "tmnxVRtrNotificationObj21Group": tmnxVRtrNotificationObj21Group,
       "tmnxVRtrDPathAttrObj21Group": tmnxVRtrDPathAttrObj21Group,
       "tmnxVRtrIfHQosOnLagV21v0Group": tmnxVRtrIfHQosOnLagV21v0Group,
       "tmnxVRtrDynEgLblLmtObj22Group": tmnxVRtrDynEgLblLmtObj22Group,
       "tmnxVRtrIfV22v0Group": tmnxVRtrIfV22v0Group,
       "tmnxVRtrObsoleteV22v0Group": tmnxVRtrObsoleteV22v0Group,
       "tmnxVRtrMobGatewayCompliances": tmnxVRtrMobGatewayCompliances,
       "tmnxVRtrMobGatewayGroups": tmnxVRtrMobGatewayGroups,
       "tmnxVRtrIpPoolGroup": tmnxVRtrIpPoolGroup,
       "tmnxMGVRtrIfV4v0Group": tmnxMGVRtrIfV4v0Group,
       "tmnxDCVRtrCompliances": tmnxDCVRtrCompliances,
       "tmnxDCVRtrGroups": tmnxDCVRtrGroups,
       "tmnxVRtrObjs": tmnxVRtrObjs,
       "vRtrConfTable": vRtrConfTable,
       "vRtrConfEntry": vRtrConfEntry,
       "vRtrID": vRtrID,
       "vRtrRowStatus": vRtrRowStatus,
       "vRtrAdminState": vRtrAdminState,
       "vRtrName": vRtrName,
       "vRtrMaxNumRoutes": vRtrMaxNumRoutes,
       "vRtrBgpStatus": vRtrBgpStatus,
       "vRtrMplsStatus": vRtrMplsStatus,
       "vRtrOspfStatus": vRtrOspfStatus,
       "vRtrRipStatus": vRtrRipStatus,
       "vRtrRsvpStatus": vRtrRsvpStatus,
       "vRtrEcmpMaxRoutes": vRtrEcmpMaxRoutes,
       "vRtrAS": vRtrAS,
       "vRtrNewIfIndex": vRtrNewIfIndex,
       "vRtrLdpStatus": vRtrLdpStatus,
       "vRtrIsIsStatus": vRtrIsIsStatus,
       "vRtrRouterId": vRtrRouterId,
       "vRtrTriggeredPolicy": vRtrTriggeredPolicy,
       "vRtrConfederationAS": vRtrConfederationAS,
       "vRtrRouteDistinguisher": vRtrRouteDistinguisher,
       "vRtrMidRouteThreshold": vRtrMidRouteThreshold,
       "vRtrHighRouteThreshold": vRtrHighRouteThreshold,
       "vRtrIllegalLabelThreshold": vRtrIllegalLabelThreshold,
       "vRtrVpnId": vRtrVpnId,
       "vRtrDescription": vRtrDescription,
       "vRtrGracefulRestart": vRtrGracefulRestart,
       "vRtrGracefulRestartType": vRtrGracefulRestartType,
       "vRtrType": vRtrType,
       "vRtrServiceId": vRtrServiceId,
       "vRtrCustId": vRtrCustId,
       "vRtrIgmpStatus": vRtrIgmpStatus,
       "vRtrMaxNumRoutesLogOnly": vRtrMaxNumRoutesLogOnly,
       "vRtrVrfTarget": vRtrVrfTarget,
       "vRtrVrfExportTarget": vRtrVrfExportTarget,
       "vRtrVrfImportTarget": vRtrVrfImportTarget,
       "vRtrPimStatus": vRtrPimStatus,
       "vRtrMaxMcastNumRoutes": vRtrMaxMcastNumRoutes,
       "vRtrMaxMcastNumRoutesLogOnly": vRtrMaxMcastNumRoutesLogOnly,
       "vRtrMcastMidRouteThreshold": vRtrMcastMidRouteThreshold,
       "vRtrIgnoreIcmpRedirect": vRtrIgnoreIcmpRedirect,
       "vRtrOspfv3Status": vRtrOspfv3Status,
       "vRtrMsdpStatus": vRtrMsdpStatus,
       "vRtrVprnType": vRtrVprnType,
       "vRtrSecondaryVrfId": vRtrSecondaryVrfId,
       "vRtrMldStatus": vRtrMldStatus,
       "vRtrIPv6MaxNumRoutes": vRtrIPv6MaxNumRoutes,
       "vRtrIPv6MidRouteThreshold": vRtrIPv6MidRouteThreshold,
       "vRtrIPv6HighRouteThreshold": vRtrIPv6HighRouteThreshold,
       "vRtrIPv6MaxNumRoutesLogOnly": vRtrIPv6MaxNumRoutesLogOnly,
       "vRtrIPv6IgnoreIcmpRedirect": vRtrIPv6IgnoreIcmpRedirect,
       "vRtrMcPathMgmtPlcyName": vRtrMcPathMgmtPlcyName,
       "vRtrIgnoreNextHopMetric": vRtrIgnoreNextHopMetric,
       "vRtrMvpnVrfTarget": vRtrMvpnVrfTarget,
       "vRtrMvpnVrfExportTarget": vRtrMvpnVrfExportTarget,
       "vRtrMvpnVrfImportTarget": vRtrMvpnVrfImportTarget,
       "vRtrMvpnVrfTargetUnicast": vRtrMvpnVrfTargetUnicast,
       "vRtrMvpnVrfExportTargetUnicast": vRtrMvpnVrfExportTargetUnicast,
       "vRtrMvpnVrfImportTargetUnicast": vRtrMvpnVrfImportTargetUnicast,
       "vRtrAS4Byte": vRtrAS4Byte,
       "vRtrConfederationAS4Byte": vRtrConfederationAS4Byte,
       "vRtrMvpnCMcastImportRT": vRtrMvpnCMcastImportRT,
       "vRtrInterASMvpn": vRtrInterASMvpn,
       "vRtrRipNgStatus": vRtrRipNgStatus,
       "vRtrStatTable": vRtrStatTable,
       "vRtrStatEntry": vRtrStatEntry,
       "vRtrOperState": vRtrOperState,
       "vRtrDirectRoutes": vRtrDirectRoutes,
       "vRtrDirectActiveRoutes": vRtrDirectActiveRoutes,
       "vRtrStaticRoutes": vRtrStaticRoutes,
       "vRtrStaticActiveRoutes": vRtrStaticActiveRoutes,
       "vRtrOSPFRoutes": vRtrOSPFRoutes,
       "vRtrOSPFActiveRoutes": vRtrOSPFActiveRoutes,
       "vRtrBGPRoutes": vRtrBGPRoutes,
       "vRtrBGPActiveRoutes": vRtrBGPActiveRoutes,
       "vRtrISISRoutes": vRtrISISRoutes,
       "vRtrISISActiveRoutes": vRtrISISActiveRoutes,
       "vRtrRIPRoutes": vRtrRIPRoutes,
       "vRtrRIPActiveRoutes": vRtrRIPActiveRoutes,
       "vRtrAggregateRoutes": vRtrAggregateRoutes,
       "vRtrAggregateActiveRoutes": vRtrAggregateActiveRoutes,
       "vRtrStatConfiguredIfs": vRtrStatConfiguredIfs,
       "vRtrStatActiveIfs": vRtrStatActiveIfs,
       "vRtrStatIllegalLabels": vRtrStatIllegalLabels,
       "vRtrStatCurrNumRoutes": vRtrStatCurrNumRoutes,
       "vRtrStatBGPVpnRoutes": vRtrStatBGPVpnRoutes,
       "vRtrStatBGPVpnActiveRoutes": vRtrStatBGPVpnActiveRoutes,
       "vRtrStatTotalLdpTunnels": vRtrStatTotalLdpTunnels,
       "vRtrStatTotalSdpTunnels": vRtrStatTotalSdpTunnels,
       "vRtrStatActiveLdpTunnels": vRtrStatActiveLdpTunnels,
       "vRtrStatActiveSdpTunnels": vRtrStatActiveSdpTunnels,
       "vRtrMulticastRoutes": vRtrMulticastRoutes,
       "vRtrStatActiveARPEntries": vRtrStatActiveARPEntries,
       "vRtrStatTotalARPEntries": vRtrStatTotalARPEntries,
       "vRtrV6DirectRoutes": vRtrV6DirectRoutes,
       "vRtrV6DirectActiveRoutes": vRtrV6DirectActiveRoutes,
       "vRtrV6StaticRoutes": vRtrV6StaticRoutes,
       "vRtrV6StaticActiveRoutes": vRtrV6StaticActiveRoutes,
       "vRtrV6OSPFRoutes": vRtrV6OSPFRoutes,
       "vRtrV6OSPFActiveRoutes": vRtrV6OSPFActiveRoutes,
       "vRtrV6BGPRoutes": vRtrV6BGPRoutes,
       "vRtrV6BGPActiveRoutes": vRtrV6BGPActiveRoutes,
       "vRtrV6ISISRoutes": vRtrV6ISISRoutes,
       "vRtrV6ISISActiveRoutes": vRtrV6ISISActiveRoutes,
       "vRtrV6RIPRoutes": vRtrV6RIPRoutes,
       "vRtrV6RIPActiveRoutes": vRtrV6RIPActiveRoutes,
       "vRtrV6AggregateRoutes": vRtrV6AggregateRoutes,
       "vRtrV6AggregateActiveRoutes": vRtrV6AggregateActiveRoutes,
       "vRtrV6StatConfiguredIfs": vRtrV6StatConfiguredIfs,
       "vRtrV6StatActiveIfs": vRtrV6StatActiveIfs,
       "vRtrV6StatIllegalLabels": vRtrV6StatIllegalLabels,
       "vRtrV6StatCurrNumRoutes": vRtrV6StatCurrNumRoutes,
       "vRtrV6StatBGPVpnRoutes": vRtrV6StatBGPVpnRoutes,
       "vRtrV6StatBGPVpnActiveRoutes": vRtrV6StatBGPVpnActiveRoutes,
       "vRtrV6StatTotalLdpTunnels": vRtrV6StatTotalLdpTunnels,
       "vRtrV6StatTotalSdpTunnels": vRtrV6StatTotalSdpTunnels,
       "vRtrV6StatActiveLdpTunnels": vRtrV6StatActiveLdpTunnels,
       "vRtrV6StatActiveSdpTunnels": vRtrV6StatActiveSdpTunnels,
       "vRtrV6MulticastRoutes": vRtrV6MulticastRoutes,
       "vRtrV6StatActiveNbrEntries": vRtrV6StatActiveNbrEntries,
       "vRtrV6StatTotalNbrEntries": vRtrV6StatTotalNbrEntries,
       "vRtrSubMgmtRoutes": vRtrSubMgmtRoutes,
       "vRtrSubMgmtActiveRoutes": vRtrSubMgmtActiveRoutes,
       "vRtrStatTotalRsvpTunnels": vRtrStatTotalRsvpTunnels,
       "vRtrStatActiveRsvpTunnels": vRtrStatActiveRsvpTunnels,
       "vRtrV6StatTotalRsvpTunnels": vRtrV6StatTotalRsvpTunnels,
       "vRtrV6StatActiveRsvpTunnels": vRtrV6StatActiveRsvpTunnels,
       "vRtrHostRoutes": vRtrHostRoutes,
       "vRtrHostActiveRoutes": vRtrHostActiveRoutes,
       "vRtrV6HostRoutes": vRtrV6HostRoutes,
       "vRtrV6HostActiveRoutes": vRtrV6HostActiveRoutes,
       "vRtrStatLocalARPEntries": vRtrStatLocalARPEntries,
       "vRtrStatStaticARPEntries": vRtrStatStaticARPEntries,
       "vRtrStatDynamicARPEntries": vRtrStatDynamicARPEntries,
       "vRtrStatManagedARPEntries": vRtrStatManagedARPEntries,
       "vRtrStatInternalARPEntries": vRtrStatInternalARPEntries,
       "vRtrManagedRoutes": vRtrManagedRoutes,
       "vRtrManagedActiveRoutes": vRtrManagedActiveRoutes,
       "vRtrLDPRoutes": vRtrLDPRoutes,
       "vRtrLDPActiveRoutes": vRtrLDPActiveRoutes,
       "vRtrVPNLeakRoutes": vRtrVPNLeakRoutes,
       "vRtrVPNLeakActiveRoutes": vRtrVPNLeakActiveRoutes,
       "vRtrV6VPNLeakRoutes": vRtrV6VPNLeakRoutes,
       "vRtrV6VPNLeakActiveRoutes": vRtrV6VPNLeakActiveRoutes,
       "vRtrV6SubMgmtRoutes": vRtrV6SubMgmtRoutes,
       "vRtrV6SubMgmtActiveRoutes": vRtrV6SubMgmtActiveRoutes,
       "vRtrMobileHostRoutes": vRtrMobileHostRoutes,
       "vRtrMobileHostActiveRoutes": vRtrMobileHostActiveRoutes,
       "vRtrV6MobileHostRoutes": vRtrV6MobileHostRoutes,
       "vRtrV6MobileHostActiveRoutes": vRtrV6MobileHostActiveRoutes,
       "vRtrStatTotalBgpTunnels": vRtrStatTotalBgpTunnels,
       "vRtrStatActiveBgpTunnels": vRtrStatActiveBgpTunnels,
       "vRtrNatRoutes": vRtrNatRoutes,
       "vRtrNatActiveRoutes": vRtrNatActiveRoutes,
       "vRtrV6NatRoutes": vRtrV6NatRoutes,
       "vRtrV6NatActiveRoutes": vRtrV6NatActiveRoutes,
       "vRtrPeriodicRoutes": vRtrPeriodicRoutes,
       "vRtrPeriodicActiveRoutes": vRtrPeriodicActiveRoutes,
       "vRtrV6PeriodicRoutes": vRtrV6PeriodicRoutes,
       "vRtrV6PeriodicActiveRoutes": vRtrV6PeriodicActiveRoutes,
       "vRtrV6ManagedRoutes": vRtrV6ManagedRoutes,
       "vRtrV6ManagedActiveRoutes": vRtrV6ManagedActiveRoutes,
       "vRtrStatTotalMplsTpTunnels": vRtrStatTotalMplsTpTunnels,
       "vRtrStatActiveMplsTpTunnels": vRtrStatActiveMplsTpTunnels,
       "vRtrV6Dhcpv6PdRoutes": vRtrV6Dhcpv6PdRoutes,
       "vRtrV6Dhcpv6PdActiveRoutes": vRtrV6Dhcpv6PdActiveRoutes,
       "vRtrV6Dhcpv6NaRoutes": vRtrV6Dhcpv6NaRoutes,
       "vRtrV6Dhcpv6NaActiveRoutes": vRtrV6Dhcpv6NaActiveRoutes,
       "vRtrV6Dhcpv6TaRoutes": vRtrV6Dhcpv6TaRoutes,
       "vRtrV6Dhcpv6TaActiveRoutes": vRtrV6Dhcpv6TaActiveRoutes,
       "vRtrV6Dhcpv6PdExclRoutes": vRtrV6Dhcpv6PdExclRoutes,
       "vRtrV6Dhcpv6PdExclActiveRoutes": vRtrV6Dhcpv6PdExclActiveRoutes,
       "vRtrIPsecRoutes": vRtrIPsecRoutes,
       "vRtrIPsecActiveRoutes": vRtrIPsecActiveRoutes,
       "vRtrStatBGPEVPNARPEntries": vRtrStatBGPEVPNARPEntries,
       "vRtrStatBGPEvpnRoutes": vRtrStatBGPEvpnRoutes,
       "vRtrStatBGPEvpnActiveRoutes": vRtrStatBGPEvpnActiveRoutes,
       "vRtrV6StatBGPEvpnRoutes": vRtrV6StatBGPEvpnRoutes,
       "vRtrV6StatBGPEvpnActiveRoutes": vRtrV6StatBGPEvpnActiveRoutes,
       "vRtrMcastIpv4StatBGPEvpnRoutes": vRtrMcastIpv4StatBGPEvpnRoutes,
       "vRtrMcastIpv4StatBGPEvpnActvRts": vRtrMcastIpv4StatBGPEvpnActvRts,
       "vRtrMcastIpv6StatBGPEvpnRoutes": vRtrMcastIpv6StatBGPEvpnRoutes,
       "vRtrMcastIpv6StatBGPEvpnActvRts": vRtrMcastIpv6StatBGPEvpnActvRts,
       "vRtrV6IPsecRoutes": vRtrV6IPsecRoutes,
       "vRtrV6IPsecActiveRoutes": vRtrV6IPsecActiveRoutes,
       "vRtrStatBGPLabelV4Routes": vRtrStatBGPLabelV4Routes,
       "vRtrStatBGPLabelV4ActiveRoutes": vRtrStatBGPLabelV4ActiveRoutes,
       "vRtrStatBGPLabelV6Routes": vRtrStatBGPLabelV6Routes,
       "vRtrStatBGPLabelV6ActiveRoutes": vRtrStatBGPLabelV6ActiveRoutes,
       "vRtrStatTotalBgpEpeTunnels": vRtrStatTotalBgpEpeTunnels,
       "vRtrStatActiveBgpEpeTunnels": vRtrStatActiveBgpEpeTunnels,
       "vRtrStatTotalBgpEpeV6Tunnels": vRtrStatTotalBgpEpeV6Tunnels,
       "vRtrStatActiveBgpEpeV6Tunnels": vRtrStatActiveBgpEpeV6Tunnels,
       "vRtrStatTotalBgpV6Tunnels": vRtrStatTotalBgpV6Tunnels,
       "vRtrStatActiveBgpV6Tunnels": vRtrStatActiveBgpV6Tunnels,
       "vRtrIfTotalNumber": vRtrIfTotalNumber,
       "vRtrIfTable": vRtrIfTable,
       "vRtrIfEntry": vRtrIfEntry,
       "vRtrIfIndex": vRtrIfIndex,
       "vRtrIfRowStatus": vRtrIfRowStatus,
       "vRtrIfType": vRtrIfType,
       "vRtrIfName": vRtrIfName,
       "vRtrIfPortID": vRtrIfPortID,
       "vRtrIfChannelID": vRtrIfChannelID,
       "vRtrIfEncapValue": vRtrIfEncapValue,
       "vRtrIfAdminState": vRtrIfAdminState,
       "vRtrIfOperState": vRtrIfOperState,
       "vRtrIfAlias": vRtrIfAlias,
       "vRtrIfPhysicalAddress": vRtrIfPhysicalAddress,
       "vRtrIfArpTimeout": vRtrIfArpTimeout,
       "vRtrIfIcmpMaskReply": vRtrIfIcmpMaskReply,
       "vRtrIfIcmpRedirects": vRtrIfIcmpRedirects,
       "vRtrIfIcmpNumRedirects": vRtrIfIcmpNumRedirects,
       "vRtrIfIcmpRedirectsTime": vRtrIfIcmpRedirectsTime,
       "vRtrIfIcmpUnreachables": vRtrIfIcmpUnreachables,
       "vRtrIfIcmpNumUnreachables": vRtrIfIcmpNumUnreachables,
       "vRtrIfIcmpUnreachablesTime": vRtrIfIcmpUnreachablesTime,
       "vRtrIfIcmpTtlExpired": vRtrIfIcmpTtlExpired,
       "vRtrIfIcmpNumTtlExpired": vRtrIfIcmpNumTtlExpired,
       "vRtrIfIcmpTtlExpiredTime": vRtrIfIcmpTtlExpiredTime,
       "vRtrIfNtpBroadcast": vRtrIfNtpBroadcast,
       "vRtrIfUnnumbered": vRtrIfUnnumbered,
       "vRtrIfMtu": vRtrIfMtu,
       "vRtrIfQosPolicyId": vRtrIfQosPolicyId,
       "vRtrIfIngressFilterId": vRtrIfIngressFilterId,
       "vRtrIfEgressFilterId": vRtrIfEgressFilterId,
       "vRtrIfDirectedBroadcast": vRtrIfDirectedBroadcast,
       "vRtrIfMplsStatus": vRtrIfMplsStatus,
       "vRtrIfUnnumberedIf": vRtrIfUnnumberedIf,
       "vRtrIfCflowd": vRtrIfCflowd,
       "vRtrIfVPNClass": vRtrIfVPNClass,
       "vRtrIfDescription": vRtrIfDescription,
       "vRtrIfProtocol": vRtrIfProtocol,
       "vRtrIfTosMarkingTrusted": vRtrIfTosMarkingTrusted,
       "vRtrIfServiceId": vRtrIfServiceId,
       "vRtrIfArpPopulate": vRtrIfArpPopulate,
       "vRtrIfIPv6ConfigAllowed": vRtrIfIPv6ConfigAllowed,
       "vRtrIfIPv6OperState": vRtrIfIPv6OperState,
       "vRtrIfIPv6IngressFilterId": vRtrIfIPv6IngressFilterId,
       "vRtrIfIPv6EgressFilterId": vRtrIfIPv6EgressFilterId,
       "vRtrIfIcmpV6Redirects": vRtrIfIcmpV6Redirects,
       "vRtrIfIcmpV6NumRedirects": vRtrIfIcmpV6NumRedirects,
       "vRtrIfIcmpV6RedirectsTime": vRtrIfIcmpV6RedirectsTime,
       "vRtrIfIcmpV6Unreachables": vRtrIfIcmpV6Unreachables,
       "vRtrIfIcmpV6NumUnreachables": vRtrIfIcmpV6NumUnreachables,
       "vRtrIfIcmpV6UnreachablesTime": vRtrIfIcmpV6UnreachablesTime,
       "vRtrIfIcmpV6TimeExceeded": vRtrIfIcmpV6TimeExceeded,
       "vRtrIfIcmpV6NumTimeExceeded": vRtrIfIcmpV6NumTimeExceeded,
       "vRtrIfIcmpV6TimeExceededTime": vRtrIfIcmpV6TimeExceededTime,
       "vRtrIfIcmpV6PktTooBig": vRtrIfIcmpV6PktTooBig,
       "vRtrIfIcmpV6NumPktTooBig": vRtrIfIcmpV6NumPktTooBig,
       "vRtrIfIcmpV6PktTooBigTime": vRtrIfIcmpV6PktTooBigTime,
       "vRtrIfIcmpV6ParamProblem": vRtrIfIcmpV6ParamProblem,
       "vRtrIfIcmpV6NumParamProblem": vRtrIfIcmpV6NumParamProblem,
       "vRtrIfIcmpV6ParamProblemTime": vRtrIfIcmpV6ParamProblemTime,
       "vRtrIfLinkLocalAddressType": vRtrIfLinkLocalAddressType,
       "vRtrIfLinkLocalAddress": vRtrIfLinkLocalAddress,
       "vRtrIfLinkLocalAddressState": vRtrIfLinkLocalAddressState,
       "vRtrIfLastOperStateChange": vRtrIfLastOperStateChange,
       "vRtrIfOperMtu": vRtrIfOperMtu,
       "vRtrIfGlobalIndex": vRtrIfGlobalIndex,
       "vRtrIfDelaySeconds": vRtrIfDelaySeconds,
       "vRtrIfDelayUpTimer": vRtrIfDelayUpTimer,
       "vRtrIfLocalDhcpServerName": vRtrIfLocalDhcpServerName,
       "vRtrIfInitDelayEnable": vRtrIfInitDelayEnable,
       "vRtrIfCpmProtPolicyId": vRtrIfCpmProtPolicyId,
       "vRtrIfCpmProtUncfgdProtoDropCnt": vRtrIfCpmProtUncfgdProtoDropCnt,
       "vRtrIfLdpSyncTimer": vRtrIfLdpSyncTimer,
       "vRtrIfStripLabel": vRtrIfStripLabel,
       "vRtrIfuRPFCheckState": vRtrIfuRPFCheckState,
       "vRtrIfuRPFCheckMode": vRtrIfuRPFCheckMode,
       "vRtrIfQosQGrp": vRtrIfQosQGrp,
       "vRtrIfAdminLinkLocalAddrType": vRtrIfAdminLinkLocalAddrType,
       "vRtrIfAdminLinkLocalAddr": vRtrIfAdminLinkLocalAddr,
       "vRtrIfAdmLnkLclAddrPreferred": vRtrIfAdmLnkLclAddrPreferred,
       "vRtrIfOperDownReason": vRtrIfOperDownReason,
       "vRtrIfNameTable": vRtrIfNameTable,
       "vRtrIfNameEntry": vRtrIfNameEntry,
       "vRtrIfNameIndex": vRtrIfNameIndex,
       "vRtrIpAddrTable": vRtrIpAddrTable,
       "vRtrIpAddrEntry": vRtrIpAddrEntry,
       "vRiaIndex": vRiaIndex,
       "vRiaRowStatus": vRiaRowStatus,
       "vRiaIpAddress": vRiaIpAddress,
       "vRiaNetMask": vRiaNetMask,
       "vRiaBcastAddrFormat": vRiaBcastAddrFormat,
       "vRiaReasmMaxSize": vRiaReasmMaxSize,
       "vRiaIgpInhibit": vRiaIgpInhibit,
       "vRiaInetAddressType": vRiaInetAddressType,
       "vRiaInetAddress": vRiaInetAddress,
       "vRiaInetPrefixLen": vRiaInetPrefixLen,
       "vRiaInetAddrState": vRiaInetAddrState,
       "vRiaInetEui64": vRiaInetEui64,
       "vRiaInetOperAddress": vRiaInetOperAddress,
       "vRiaInetGwAddressType": vRiaInetGwAddressType,
       "vRiaInetGwAddress": vRiaInetGwAddress,
       "vRiaInetRemoteIpType": vRiaInetRemoteIpType,
       "vRiaInetRemoteIp": vRiaInetRemoteIp,
       "vRiaInetAddrPreferred": vRiaInetAddrPreferred,
       "vRiaSubscrPrefix": vRiaSubscrPrefix,
       "vRiaSubscrPrefixType": vRiaSubscrPrefixType,
       "vRiaSubscrHostRoutePopulate": vRiaSubscrHostRoutePopulate,
       "vRiaTrackSrrpInstance": vRiaTrackSrrpInstance,
       "vRiaHoldUpTime": vRiaHoldUpTime,
       "vRiaCreationOrigin": vRiaCreationOrigin,
       "vRiaInetAddressSendCgaModifier": vRiaInetAddressSendCgaModifier,
       "vRiaInetAddressPrimaryPreference": vRiaInetAddressPrimaryPreference,
       "vRiaInetAddressPrimaryPreferred": vRiaInetAddressPrimaryPreferred,
       "vRiaInetAddressGreTermination": vRiaInetAddressGreTermination,
       "vRtrIpCidrRouteTable": vRtrIpCidrRouteTable,
       "vRtrIpCidrRouteEntry": vRtrIpCidrRouteEntry,
       "vRtrIpCidrRouteLastEnabledTime": vRtrIpCidrRouteLastEnabledTime,
       "vRtrIpCidrRoutePreference": vRtrIpCidrRoutePreference,
       "vRtrIpCidrRouteMetric": vRtrIpCidrRouteMetric,
       "vRtrStaticRouteNumber": vRtrStaticRouteNumber,
       "vRtrStaticRouteTable": vRtrStaticRouteTable,
       "vRtrStaticRouteEntry": vRtrStaticRouteEntry,
       "vRtrStaticRouteDest": vRtrStaticRouteDest,
       "vRtrStaticRouteMask": vRtrStaticRouteMask,
       "vRtrStaticRouteIndex": vRtrStaticRouteIndex,
       "vRtrStaticRouteRowStatus": vRtrStaticRouteRowStatus,
       "vRtrStaticRouteLastEnabledTime": vRtrStaticRouteLastEnabledTime,
       "vRtrStaticRouteStatus": vRtrStaticRouteStatus,
       "vRtrStaticRouteStaticType": vRtrStaticRouteStaticType,
       "vRtrStaticRoutePreference": vRtrStaticRoutePreference,
       "vRtrStaticRouteMetric": vRtrStaticRouteMetric,
       "vRtrStaticRouteEgressIfIndex": vRtrStaticRouteEgressIfIndex,
       "vRtrStaticRouteNextHop": vRtrStaticRouteNextHop,
       "vRtrStaticRouteNextHopUnnumberedIf": vRtrStaticRouteNextHopUnnumberedIf,
       "vRtrStaticRouteAdminState": vRtrStaticRouteAdminState,
       "vRtrStaticRouteIgpShortcut": vRtrStaticRouteIgpShortcut,
       "vRtrStaticRouteDisallowIgp": vRtrStaticRouteDisallowIgp,
       "vRtrStaticRouteTag": vRtrStaticRouteTag,
       "vRtrSvcIpRangeTable": vRtrSvcIpRangeTable,
       "vRtrSvcIpRangeEntry": vRtrSvcIpRangeEntry,
       "vRtrSvcIpRangeAddress": vRtrSvcIpRangeAddress,
       "vRtrSvcIpRangeMask": vRtrSvcIpRangeMask,
       "vRtrSvcIpRangeRowStatus": vRtrSvcIpRangeRowStatus,
       "vRtrSvcIpRangeExclusive": vRtrSvcIpRangeExclusive,
       "vRtrIpNetToMediaTable": vRtrIpNetToMediaTable,
       "vRtrIpNetToMediaEntry": vRtrIpNetToMediaEntry,
       "vRtrIpNetToMediaTimer": vRtrIpNetToMediaTimer,
       "vRtrIpNetToMediaOperState": vRtrIpNetToMediaOperState,
       "vRtrInstanceAggregationTableLastChanged": vRtrInstanceAggregationTableLastChanged,
       "vRtrInstanceAggregationTable": vRtrInstanceAggregationTable,
       "vRtrInstanceAggregationEntry": vRtrInstanceAggregationEntry,
       "vRtrAggregationIpPrefix": vRtrAggregationIpPrefix,
       "vRtrAggregationIpPrefixMask": vRtrAggregationIpPrefixMask,
       "vRtrAggregationRowStatus": vRtrAggregationRowStatus,
       "vRtrAggregationLastChanged": vRtrAggregationLastChanged,
       "vRtrAggregationSummaryOnly": vRtrAggregationSummaryOnly,
       "vRtrAggregationASSet": vRtrAggregationASSet,
       "vRtrAggregationAggregatorAS": vRtrAggregationAggregatorAS,
       "vRtrAggregationAggregatorIPAddr": vRtrAggregationAggregatorIPAddr,
       "vRtrAggregationOperState": vRtrAggregationOperState,
       "vRtrStaticRouteIndexTable": vRtrStaticRouteIndexTable,
       "vRtrStaticRouteIndexEntry": vRtrStaticRouteIndexEntry,
       "vRtrStaticRouteIndexDest": vRtrStaticRouteIndexDest,
       "vRtrStaticRouteIndexMask": vRtrStaticRouteIndexMask,
       "vRtrStaticRouteAvailableIndex": vRtrStaticRouteAvailableIndex,
       "tmnxVRtrGlobalObjs": tmnxVRtrGlobalObjs,
       "vRtrNextVRtrID": vRtrNextVRtrID,
       "vRtrConfiguredVRtrs": vRtrConfiguredVRtrs,
       "vRtrActiveVRtrs": vRtrActiveVRtrs,
       "vRtrRouteThresholdSoakTime": vRtrRouteThresholdSoakTime,
       "vRtrMaxARPEntries": vRtrMaxARPEntries,
       "vRtrIPv6RouteThresholdSoakTime": vRtrIPv6RouteThresholdSoakTime,
       "vRtrSendKeyRollover": vRtrSendKeyRollover,
       "vRtrPolicyTable": vRtrPolicyTable,
       "vRtrPolicyEntry": vRtrPolicyEntry,
       "vRtrImportPolicy1": vRtrImportPolicy1,
       "vRtrImportPolicy2": vRtrImportPolicy2,
       "vRtrImportPolicy3": vRtrImportPolicy3,
       "vRtrImportPolicy4": vRtrImportPolicy4,
       "vRtrImportPolicy5": vRtrImportPolicy5,
       "vRtrExportPolicy1": vRtrExportPolicy1,
       "vRtrExportPolicy2": vRtrExportPolicy2,
       "vRtrExportPolicy3": vRtrExportPolicy3,
       "vRtrExportPolicy4": vRtrExportPolicy4,
       "vRtrExportPolicy5": vRtrExportPolicy5,
       "vRtrMvpnImportPolicy1": vRtrMvpnImportPolicy1,
       "vRtrMvpnImportPolicy2": vRtrMvpnImportPolicy2,
       "vRtrMvpnImportPolicy3": vRtrMvpnImportPolicy3,
       "vRtrMvpnImportPolicy4": vRtrMvpnImportPolicy4,
       "vRtrMvpnImportPolicy5": vRtrMvpnImportPolicy5,
       "vRtrMvpnExportPolicy1": vRtrMvpnExportPolicy1,
       "vRtrMvpnExportPolicy2": vRtrMvpnExportPolicy2,
       "vRtrMvpnExportPolicy3": vRtrMvpnExportPolicy3,
       "vRtrMvpnExportPolicy4": vRtrMvpnExportPolicy4,
       "vRtrMvpnExportPolicy5": vRtrMvpnExportPolicy5,
       "vRtrMvpnImportPolicyUnicast": vRtrMvpnImportPolicyUnicast,
       "vRtrMvpnExportPolicyUnicast": vRtrMvpnExportPolicyUnicast,
       "vRtrGrtMaxExportRoutes": vRtrGrtMaxExportRoutes,
       "vRtrGrtExportPolicy1": vRtrGrtExportPolicy1,
       "vRtrGrtExportPolicy2": vRtrGrtExportPolicy2,
       "vRtrGrtExportPolicy3": vRtrGrtExportPolicy3,
       "vRtrGrtExportPolicy4": vRtrGrtExportPolicy4,
       "vRtrGrtExportPolicy5": vRtrGrtExportPolicy5,
       "vRtrGrtMaxIpv6ExportRoutes": vRtrGrtMaxIpv6ExportRoutes,
       "vRtrGrtImportPolicy1": vRtrGrtImportPolicy1,
       "vRtrGrtImportPolicy2": vRtrGrtImportPolicy2,
       "vRtrGrtImportPolicy3": vRtrGrtImportPolicy3,
       "vRtrGrtImportPolicy4": vRtrGrtImportPolicy4,
       "vRtrGrtImportPolicy5": vRtrGrtImportPolicy5,
       "vRtrTunnelTable": vRtrTunnelTable,
       "vRtrTunnelEntry": vRtrTunnelEntry,
       "vRtrTunnelDest": vRtrTunnelDest,
       "vRtrTunnelMask": vRtrTunnelMask,
       "vRtrTunnelPreference": vRtrTunnelPreference,
       "vRtrTunnelType": vRtrTunnelType,
       "vRtrTunnelID": vRtrTunnelID,
       "vRtrTunnelNexthop": vRtrTunnelNexthop,
       "vRtrTunnelMetric": vRtrTunnelMetric,
       "vRtrTunnelAge": vRtrTunnelAge,
       "vRtrTunnelNextHopFlags": vRtrTunnelNextHopFlags,
       "vRtrIfProxyArpTable": vRtrIfProxyArpTable,
       "vRtrIfProxyArpEntry": vRtrIfProxyArpEntry,
       "vRtrIfProxyArp": vRtrIfProxyArp,
       "vRtrIfProxyArpLocal": vRtrIfProxyArpLocal,
       "vRtrIfProxyArpPolicy1": vRtrIfProxyArpPolicy1,
       "vRtrIfProxyArpPolicy2": vRtrIfProxyArpPolicy2,
       "vRtrIfProxyArpPolicy3": vRtrIfProxyArpPolicy3,
       "vRtrIfProxyArpPolicy4": vRtrIfProxyArpPolicy4,
       "vRtrIfProxyArpPolicy5": vRtrIfProxyArpPolicy5,
       "vRtrIfDHCPTable": vRtrIfDHCPTable,
       "vRtrIfDHCPEntry": vRtrIfDHCPEntry,
       "vRtrIfDHCPRelayInfoOption": vRtrIfDHCPRelayInfoOption,
       "vRtrIfDHCPRelayInfoAction": vRtrIfDHCPRelayInfoAction,
       "vRtrIfDHCPRelayCircuitId": vRtrIfDHCPRelayCircuitId,
       "vRtrIfDHCPRelayRemoteId": vRtrIfDHCPRelayRemoteId,
       "vRtrIfDHCPAutoFilter": vRtrIfDHCPAutoFilter,
       "vRtrIfDHCPRelayServer1": vRtrIfDHCPRelayServer1,
       "vRtrIfDHCPRelayServer2": vRtrIfDHCPRelayServer2,
       "vRtrIfDHCPRelayServer3": vRtrIfDHCPRelayServer3,
       "vRtrIfDHCPRelayServer4": vRtrIfDHCPRelayServer4,
       "vRtrIfDHCPRelayServer5": vRtrIfDHCPRelayServer5,
       "vRtrIfDHCPRelayServer6": vRtrIfDHCPRelayServer6,
       "vRtrIfDHCPRelayServer7": vRtrIfDHCPRelayServer7,
       "vRtrIfDHCPRelayServer8": vRtrIfDHCPRelayServer8,
       "vRtrIfDHCPRelayTrusted": vRtrIfDHCPRelayTrusted,
       "vRtrIfDHCPAdminState": vRtrIfDHCPAdminState,
       "vRtrIfDHCPSnooping": vRtrIfDHCPSnooping,
       "vRtrIfDHCPDescription": vRtrIfDHCPDescription,
       "vRtrIfDHCPAutoFilterId": vRtrIfDHCPAutoFilterId,
       "vRtrIfDHCPOperAutoFilter": vRtrIfDHCPOperAutoFilter,
       "vRtrIfDHCPAuthPolicy": vRtrIfDHCPAuthPolicy,
       "vRtrIfDHCPLeasePopulate": vRtrIfDHCPLeasePopulate,
       "vRtrIfDHCPOperLeasePopulate": vRtrIfDHCPOperLeasePopulate,
       "vRtrIfDHCPGiAddressType": vRtrIfDHCPGiAddressType,
       "vRtrIfDHCPGiAddress": vRtrIfDHCPGiAddress,
       "vRtrIfDHCPGiAddressAsSrc": vRtrIfDHCPGiAddressAsSrc,
       "vRtrIfDHCPMatchOption82": vRtrIfDHCPMatchOption82,
       "vRtrIfDHCPRelayRemoteIdStr": vRtrIfDHCPRelayRemoteIdStr,
       "vRtrIfDHCPProxyAdminState": vRtrIfDHCPProxyAdminState,
       "vRtrIfDHCPProxyServerAddr": vRtrIfDHCPProxyServerAddr,
       "vRtrIfDHCPProxyLeaseTime": vRtrIfDHCPProxyLeaseTime,
       "vRtrIfDHCPProxyLTRadiusOverride": vRtrIfDHCPProxyLTRadiusOverride,
       "vRtrIfDHCPVendorIncludeOptions": vRtrIfDHCPVendorIncludeOptions,
       "vRtrIfDHCPVendorOptionString": vRtrIfDHCPVendorOptionString,
       "vRtrIfDHCPLayer2Header": vRtrIfDHCPLayer2Header,
       "vRtrIfDHCPAntiSpoofMacAddr": vRtrIfDHCPAntiSpoofMacAddr,
       "vRtrIfDHCPClientApplications": vRtrIfDHCPClientApplications,
       "vRtrIfDHCPRelayPlainBootp": vRtrIfDHCPRelayPlainBootp,
       "vRtrIfDHCPUserDb": vRtrIfDHCPUserDb,
       "vRtrIfDHCPUseArpForReply": vRtrIfDHCPUseArpForReply,
       "vRtrIfDHCPFilterId": vRtrIfDHCPFilterId,
       "vRtrIfDHCPRelayUnicastMsg": vRtrIfDHCPRelayUnicastMsg,
       "vRtrIfDHCPPythonPolicy": vRtrIfDHCPPythonPolicy,
       "vRtrIfDHCPVirtualSubnet": vRtrIfDHCPVirtualSubnet,
       "vRtrIfDHCPRelaySiaddrOvrAddrType": vRtrIfDHCPRelaySiaddrOvrAddrType,
       "vRtrIfDHCPRelaySiaddrOvrAddr": vRtrIfDHCPRelaySiaddrOvrAddr,
       "vRtrIfDHCPOSelDiscoDly": vRtrIfDHCPOSelDiscoDly,
       "vRtrIfDHCPOSelClntMac": vRtrIfDHCPOSelClntMac,
       "vRtrIfDHCPOSelClntMacDiscoDly": vRtrIfDHCPOSelClntMacDiscoDly,
       "vRtrIfDHCPReleaseIncludeGiaddr": vRtrIfDHCPReleaseIncludeGiaddr,
       "vRtrIfDHCPRelayStatsTable": vRtrIfDHCPRelayStatsTable,
       "vRtrIfDHCPRelayStatsEntry": vRtrIfDHCPRelayStatsEntry,
       "vRtrIfDHCPRelayRxPkts": vRtrIfDHCPRelayRxPkts,
       "vRtrIfDHCPRelayTxPkts": vRtrIfDHCPRelayTxPkts,
       "vRtrIfDHCPRelayRxMalformedPkts": vRtrIfDHCPRelayRxMalformedPkts,
       "vRtrIfDHCPRelayRxUntrustedPkts": vRtrIfDHCPRelayRxUntrustedPkts,
       "vRtrIfDHCPRelayClientPktsDiscarded": vRtrIfDHCPRelayClientPktsDiscarded,
       "vRtrIfDHCPRelayClientPktsRelayed": vRtrIfDHCPRelayClientPktsRelayed,
       "vRtrIfDHCPRelayServerPktsDiscarded": vRtrIfDHCPRelayServerPktsDiscarded,
       "vRtrIfDHCPRelayServerPktsRelayed": vRtrIfDHCPRelayServerPktsRelayed,
       "vRtrIfDHCPRelayAuthPktsDiscarded": vRtrIfDHCPRelayAuthPktsDiscarded,
       "vRtrIfDHCPRelayAuthPktsSuccess": vRtrIfDHCPRelayAuthPktsSuccess,
       "vRtrIfDHCPRelayClientPktsSnooped": vRtrIfDHCPRelayClientPktsSnooped,
       "vRtrIfDHCPRelayServerPktsSnooped": vRtrIfDHCPRelayServerPktsSnooped,
       "vRtrIfDHCPRelayClientPktsProxRad": vRtrIfDHCPRelayClientPktsProxRad,
       "vRtrIfDHCPRelayClientPktsProxLS": vRtrIfDHCPRelayClientPktsProxLS,
       "vRtrIfDHCPRelayPktsGenRelease": vRtrIfDHCPRelayPktsGenRelease,
       "vRtrIfDHCPRelayPktsGenForceRenew": vRtrIfDHCPRelayPktsGenForceRenew,
       "vRtrIfDHCPRelayClientPktsProxUDB": vRtrIfDHCPRelayClientPktsProxUDB,
       "vRtrIfDHCPRelayClientPktsProxNq": vRtrIfDHCPRelayClientPktsProxNq,
       "vRtrIfDHCPRelayClientPktsStream": vRtrIfDHCPRelayClientPktsStream,
       "tmnxVRtrNotificationObjects": tmnxVRtrNotificationObjects,
       "vRtrAutoFilterDHCPClientAddress": vRtrAutoFilterDHCPClientAddress,
       "vRtrAutoFilterDHCPClientLease": vRtrAutoFilterDHCPClientLease,
       "vRtrDHCPClientLease": vRtrDHCPClientLease,
       "vRtrDhcpLseStateOldCiAddr": vRtrDhcpLseStateOldCiAddr,
       "vRtrDhcpLseStateOldChAddr": vRtrDhcpLseStateOldChAddr,
       "vRtrDhcpLseStateNewCiAddr": vRtrDhcpLseStateNewCiAddr,
       "vRtrDhcpLseStateNewChAddr": vRtrDhcpLseStateNewChAddr,
       "vRtrDhcpRestoreLseStateCiAddr": vRtrDhcpRestoreLseStateCiAddr,
       "vRtrDhcpRestoreLseStateVRtrId": vRtrDhcpRestoreLseStateVRtrId,
       "vRtrDhcpRestoreLseStateIfIndex": vRtrDhcpRestoreLseStateIfIndex,
       "vRtrDhcpRestoreLseStateProblem": vRtrDhcpRestoreLseStateProblem,
       "vRtrDhcpPacketProblem": vRtrDhcpPacketProblem,
       "vRtrDhcpLseStatePopulateError": vRtrDhcpLseStatePopulateError,
       "vRtrBfdSlotNumber": vRtrBfdSlotNumber,
       "vRtrNumberOfBfdSessionsOnSlot": vRtrNumberOfBfdSessionsOnSlot,
       "vRtrBfdMaxSessionReason": vRtrBfdMaxSessionReason,
       "vRtrDHCP6ServerNetAddrType": vRtrDHCP6ServerNetAddrType,
       "vRtrDHCP6ServerNetAddr": vRtrDHCP6ServerNetAddr,
       "vRtrDHCP6ClientNetAddrType": vRtrDHCP6ClientNetAddrType,
       "vRtrDHCP6ClientNetAddr": vRtrDHCP6ClientNetAddr,
       "vRtrDHCP6AssignedNetAddrType": vRtrDHCP6AssignedNetAddrType,
       "vRtrDHCP6AssignedNetAddr": vRtrDHCP6AssignedNetAddr,
       "vRtrDHCP6AssignedPrefixLen": vRtrDHCP6AssignedPrefixLen,
       "vRtrDHCP6OldAssignedNetAddrType": vRtrDHCP6OldAssignedNetAddrType,
       "vRtrDHCP6OldAssignedNetAddr": vRtrDHCP6OldAssignedNetAddr,
       "vRtrDHCP6OldAssignedPrefixLen": vRtrDHCP6OldAssignedPrefixLen,
       "vRtrDHCP6NewClientId": vRtrDHCP6NewClientId,
       "vRtrDHCP6OldClientId": vRtrDHCP6OldClientId,
       "vRtrDHCP6LeaseOverrideResult": vRtrDHCP6LeaseOverrideResult,
       "vRtrInetStatRteCpeNotifyAddrType": vRtrInetStatRteCpeNotifyAddrType,
       "vRtrInetStatRteCpeNotifyAddr": vRtrInetStatRteCpeNotifyAddr,
       "vRtrInetStaticRouteCpeStatus": vRtrInetStaticRouteCpeStatus,
       "vRtrManagedRouteInetAddrType": vRtrManagedRouteInetAddrType,
       "vRtrManagedRouteInetAddr": vRtrManagedRouteInetAddr,
       "vRtrManagedRoutePrefixLen": vRtrManagedRoutePrefixLen,
       "vRtrFailureDescription": vRtrFailureDescription,
       "vRtrMaxRoutesType": vRtrMaxRoutesType,
       "vRtrSlotOrCpmFlag": vRtrSlotOrCpmFlag,
       "vRtrNotifInetAddrType": vRtrNotifInetAddrType,
       "vRtrNotifInetAddr": vRtrNotifInetAddr,
       "vRtrIfBfdSessChangedProtocol": vRtrIfBfdSessChangedProtocol,
       "vRtrIfBfdSessProtoChngdState": vRtrIfBfdSessProtoChngdState,
       "vRtrIfDcpTimeEventOccured": vRtrIfDcpTimeEventOccured,
       "vRtrNotifTruthValue": vRtrNotifTruthValue,
       "tmnxVRtrMaxNHRvplsARPEntries": tmnxVRtrMaxNHRvplsARPEntries,
       "vRtrNotifIgnorePortState": vRtrNotifIgnorePortState,
       "vRtrIfDHCPLeaseStateTable": vRtrIfDHCPLeaseStateTable,
       "vRtrIfDHCPLeaseStateEntry": vRtrIfDHCPLeaseStateEntry,
       "vRtrIfDHCPLseStateCiAddr": vRtrIfDHCPLseStateCiAddr,
       "vRtrIfDHCPLseStateChAddr": vRtrIfDHCPLseStateChAddr,
       "vRtrIfDHCPLseStateRemainLseTime": vRtrIfDHCPLseStateRemainLseTime,
       "vRtrIfDHCPLseStateOption82": vRtrIfDHCPLseStateOption82,
       "vRtrIfDHCPLseStatePersistKey": vRtrIfDHCPLseStatePersistKey,
       "vRtrAdvPrefixTable": vRtrAdvPrefixTable,
       "vRtrAdvPrefixEntry": vRtrAdvPrefixEntry,
       "vRtrAdvPrefixIfIndex": vRtrAdvPrefixIfIndex,
       "vRtrAdvPrefixPrefix": vRtrAdvPrefixPrefix,
       "vRtrAdvPrefixLength": vRtrAdvPrefixLength,
       "vRtrAdvPrefixRowStatus": vRtrAdvPrefixRowStatus,
       "vRtrAdvPrefixOnLinkFlag": vRtrAdvPrefixOnLinkFlag,
       "vRtrAdvPrefixAutonomousFlag": vRtrAdvPrefixAutonomousFlag,
       "vRtrAdvPrefixPreferredLifetime": vRtrAdvPrefixPreferredLifetime,
       "vRtrAdvPrefixValidLifetime": vRtrAdvPrefixValidLifetime,
       "vRtrInetStaticRouteTable": vRtrInetStaticRouteTable,
       "vRtrInetStaticRouteEntry": vRtrInetStaticRouteEntry,
       "vRtrInetStaticRouteDestType": vRtrInetStaticRouteDestType,
       "vRtrInetStaticRouteDest": vRtrInetStaticRouteDest,
       "vRtrInetStaticRouteDestPfxLen": vRtrInetStaticRouteDestPfxLen,
       "vRtrInetStaticRouteIndex": vRtrInetStaticRouteIndex,
       "vRtrInetStaticRouteRowStatus": vRtrInetStaticRouteRowStatus,
       "vRtrInetStaticRouteLastEnabledTime": vRtrInetStaticRouteLastEnabledTime,
       "vRtrInetStaticRouteStatus": vRtrInetStaticRouteStatus,
       "vRtrInetStaticRouteStaticType": vRtrInetStaticRouteStaticType,
       "vRtrInetStaticRoutePreference": vRtrInetStaticRoutePreference,
       "vRtrInetStaticRouteMetric": vRtrInetStaticRouteMetric,
       "vRtrInetStaticRouteEgressIfIndex": vRtrInetStaticRouteEgressIfIndex,
       "vRtrInetStaticRouteNextHopType": vRtrInetStaticRouteNextHopType,
       "vRtrInetStaticRouteNextHop": vRtrInetStaticRouteNextHop,
       "vRtrInetStaticRouteNextHopIf": vRtrInetStaticRouteNextHopIf,
       "vRtrInetStaticRouteAdminState": vRtrInetStaticRouteAdminState,
       "vRtrInetStaticRouteIgpShortcut": vRtrInetStaticRouteIgpShortcut,
       "vRtrInetStaticRouteDisallowIgp": vRtrInetStaticRouteDisallowIgp,
       "vRtrInetStaticRouteTag": vRtrInetStaticRouteTag,
       "vRtrInetStaticRouteEnableBfd": vRtrInetStaticRouteEnableBfd,
       "vRtrInetStaticRouteCpeAddrType": vRtrInetStaticRouteCpeAddrType,
       "vRtrInetStaticRouteCpeAddr": vRtrInetStaticRouteCpeAddr,
       "vRtrInetStaticRouteCpeInterval": vRtrInetStaticRouteCpeInterval,
       "vRtrInetStaticRouteCpeDropCnt": vRtrInetStaticRouteCpeDropCnt,
       "vRtrInetStaticRouteCpeEnableLog": vRtrInetStaticRouteCpeEnableLog,
       "vRtrInetStaticRouteNHTunnelName": vRtrInetStaticRouteNHTunnelName,
       "vRtrInetStaticRoutePrefixListName": vRtrInetStaticRoutePrefixListName,
       "vRtrInetStaticRoutePrefixListFlag": vRtrInetStaticRoutePrefixListFlag,
       "vRtrInetStaticRouteLdpSync": vRtrInetStaticRouteLdpSync,
       "vRtrInetStaticRouteFC": vRtrInetStaticRouteFC,
       "vRtrInetStaticRouteFCPriority": vRtrInetStaticRouteFCPriority,
       "vRtrInetStaticRouteCommunityVal": vRtrInetStaticRouteCommunityVal,
       "vRtrInetStaticRouteCreationOrig": vRtrInetStaticRouteCreationOrig,
       "vRtrInetStaticRouteDynamicBgp": vRtrInetStaticRouteDynamicBgp,
       "vRtrInetStaticRouteDescription": vRtrInetStaticRouteDescription,
       "vRtrInetStaticRoutePaddingSize": vRtrInetStaticRoutePaddingSize,
       "vRtrInetStaticRouteDynBgpNHType": vRtrInetStaticRouteDynBgpNHType,
       "vRtrInetStaticRouteDynBgpNH": vRtrInetStaticRouteDynBgpNH,
       "vRtrInetStaticRouteGenerateIcmp": vRtrInetStaticRouteGenerateIcmp,
       "vRtrInetStaticRouteValidateNH": vRtrInetStaticRouteValidateNH,
       "vRtrInetStaticRouteSrcClassIndex": vRtrInetStaticRouteSrcClassIndex,
       "vRtrInetStaticRouteDstClassIndex": vRtrInetStaticRouteDstClassIndex,
       "vRtrInetStaticRouteHoldTimeLeft": vRtrInetStaticRouteHoldTimeLeft,
       "vRtrInetStaticRouteLoadBalWeight": vRtrInetStaticRouteLoadBalWeight,
       "vRtrInetStaticRouteBackupNHType": vRtrInetStaticRouteBackupNHType,
       "vRtrInetStaticRouteBackupNHAddr": vRtrInetStaticRouteBackupNHAddr,
       "vRtrInetStaticRouteBackupStatus": vRtrInetStaticRouteBackupStatus,
       "vRtrInetStaticRouteIndexTable": vRtrInetStaticRouteIndexTable,
       "vRtrInetStaticRouteIndexEntry": vRtrInetStaticRouteIndexEntry,
       "vRtrInetStaticRouteAvailIndex": vRtrInetStaticRouteAvailIndex,
       "vRtrInetInstAggrTblLastChged": vRtrInetInstAggrTblLastChged,
       "vRtrInetInstAggrTable": vRtrInetInstAggrTable,
       "vRtrInetInstAggrEntry": vRtrInetInstAggrEntry,
       "vRtrInetAggrIpPrefixType": vRtrInetAggrIpPrefixType,
       "vRtrInetAggrIpPrefix": vRtrInetAggrIpPrefix,
       "vRtrInetAggrIpPrefixLen": vRtrInetAggrIpPrefixLen,
       "vRtrInetAggrRowStatus": vRtrInetAggrRowStatus,
       "vRtrInetAggrLastChanged": vRtrInetAggrLastChanged,
       "vRtrInetAggrSummaryOnly": vRtrInetAggrSummaryOnly,
       "vRtrInetAggrASSet": vRtrInetAggrASSet,
       "vRtrInetAggrAggregatorAS": vRtrInetAggrAggregatorAS,
       "vRtrInetAggrAggregatorIPAddr": vRtrInetAggrAggregatorIPAddr,
       "vRtrInetAggrOperState": vRtrInetAggrOperState,
       "vRtrInetAggrAggregatorAS4Byte": vRtrInetAggrAggregatorAS4Byte,
       "vRtrInetAggrNextHopType": vRtrInetAggrNextHopType,
       "vRtrInetAggrCommunityVal": vRtrInetAggrCommunityVal,
       "vRtrInetAggrIndirectAddrType": vRtrInetAggrIndirectAddrType,
       "vRtrInetAggrIndirectAddr": vRtrInetAggrIndirectAddr,
       "vRtrInetAggrGenerateIcmp": vRtrInetAggrGenerateIcmp,
       "vRtrInetAggrDescription": vRtrInetAggrDescription,
       "vRtrInetAggrCommunityVal2": vRtrInetAggrCommunityVal2,
       "vRtrInetAggrCommunityVal3": vRtrInetAggrCommunityVal3,
       "vRtrInetAggrCommunityVal4": vRtrInetAggrCommunityVal4,
       "vRtrInetAggrCommunityVal5": vRtrInetAggrCommunityVal5,
       "vRtrInetAggrCommunityVal6": vRtrInetAggrCommunityVal6,
       "vRtrInetAggrCommunityVal7": vRtrInetAggrCommunityVal7,
       "vRtrInetAggrCommunityVal8": vRtrInetAggrCommunityVal8,
       "vRtrInetAggrCommunityVal9": vRtrInetAggrCommunityVal9,
       "vRtrInetAggrCommunityVal10": vRtrInetAggrCommunityVal10,
       "vRtrInetAggrCommunityVal11": vRtrInetAggrCommunityVal11,
       "vRtrInetAggrCommunityVal12": vRtrInetAggrCommunityVal12,
       "vRtrInetAggrFlags": vRtrInetAggrFlags,
       "vRtrInetAggrLocalPreference": vRtrInetAggrLocalPreference,
       "vRtrInetAggrDiscardComponent": vRtrInetAggrDiscardComponent,
       "vRtrInetAggrTunnelGroup": vRtrInetAggrTunnelGroup,
       "vRtrInetAggrPolicy": vRtrInetAggrPolicy,
       "vRtrInetSvcIpRangeTable": vRtrInetSvcIpRangeTable,
       "vRtrInetSvcIpRangeEntry": vRtrInetSvcIpRangeEntry,
       "vRtrInetSvcIpRangeAddrType": vRtrInetSvcIpRangeAddrType,
       "vRtrInetSvcIpRangeAddr": vRtrInetSvcIpRangeAddr,
       "vRtrInetSvcIpRangePfxLen": vRtrInetSvcIpRangePfxLen,
       "vRtrInetSvcIpRangeRowStatus": vRtrInetSvcIpRangeRowStatus,
       "vRtrInetSvcIpRangeExclusive": vRtrInetSvcIpRangeExclusive,
       "vRtrIpNetToPhysicalTable": vRtrIpNetToPhysicalTable,
       "vRtrIpNetToPhysicalEntry": vRtrIpNetToPhysicalEntry,
       "vRtrIpNetToPhysicalTimer": vRtrIpNetToPhysicalTimer,
       "vRtrIpNetToPhysicalOperState": vRtrIpNetToPhysicalOperState,
       "vRtrIpNetToPhysicalIsRouter": vRtrIpNetToPhysicalIsRouter,
       "vRtrIpNetToPhysicalMTU": vRtrIpNetToPhysicalMTU,
       "vRtrIpNetToPhysicalPort": vRtrIpNetToPhysicalPort,
       "vRtrIpNetToPhysicalEncap": vRtrIpNetToPhysicalEncap,
       "vRtrIpNetToPhysicalSecureNd": vRtrIpNetToPhysicalSecureNd,
       "vRtrInetCidrRouteTable": vRtrInetCidrRouteTable,
       "vRtrInetCidrRouteEntry": vRtrInetCidrRouteEntry,
       "vRtrInetCidrRouteLastEnabledTime": vRtrInetCidrRouteLastEnabledTime,
       "vRtrInetCidrRoutePreference": vRtrInetCidrRoutePreference,
       "vRtrInetCidrRouteMetric": vRtrInetCidrRouteMetric,
       "vRtrInetCidrRouteIfVRtrId": vRtrInetCidrRouteIfVRtrId,
       "vRtrInetCidrRouteTunnEndpntInfo": vRtrInetCidrRouteTunnEndpntInfo,
       "vRtrInetCidrProtocolInstance": vRtrInetCidrProtocolInstance,
       "vRtrInetCidrRouteNextHopType": vRtrInetCidrRouteNextHopType,
       "vRtrInetCidrRouteNextHopOwner": vRtrInetCidrRouteNextHopOwner,
       "vRtrInetCidrRouteNHOwnerAuxInfo": vRtrInetCidrRouteNHOwnerAuxInfo,
       "vRtrInetCidrRouteNHFC": vRtrInetCidrRouteNHFC,
       "vRtrInetCidrRouteNHPriority": vRtrInetCidrRouteNHPriority,
       "vRtrInetCidrRouteBkupFlags": vRtrInetCidrRouteBkupFlags,
       "vRtrInetCidrRouteBkupNextHopType": vRtrInetCidrRouteBkupNextHopType,
       "vRtrInetCidrRouteBkupNextHop": vRtrInetCidrRouteBkupNextHop,
       "vRtrInetCidrRouteBkupMetric": vRtrInetCidrRouteBkupMetric,
       "vRtrInetCidrRouteNextHopRepCount": vRtrInetCidrRouteNextHopRepCount,
       "vRtrInetCidrRouteBkupNHType": vRtrInetCidrRouteBkupNHType,
       "vRtrInetCidrRouteBkupNHOwner": vRtrInetCidrRouteBkupNHOwner,
       "vRtrInetCidrRouteBkupNHOwnAxInfo": vRtrInetCidrRouteBkupNHOwnAxInfo,
       "vRtrInetCidrRouteSrcClassIndex": vRtrInetCidrRouteSrcClassIndex,
       "vRtrInetCidrRouteDstClassIndex": vRtrInetCidrRouteDstClassIndex,
       "vRtrInetCidrRouteOperFlags": vRtrInetCidrRouteOperFlags,
       "vRtrInetCidrRouteNextHopWeight": vRtrInetCidrRouteNextHopWeight,
       "vRtrInetCidrRouteNextHopOwnInst": vRtrInetCidrRouteNextHopOwnInst,
       "vRtrInetCidrRouteBkupNHOwnInst": vRtrInetCidrRouteBkupNHOwnInst,
       "vRtrInetCidrRouteNHIsFec": vRtrInetCidrRouteNHIsFec,
       "vRtrInetCidrRouteNHFecPfxLen": vRtrInetCidrRouteNHFecPfxLen,
       "vRtrIcmp6Table": vRtrIcmp6Table,
       "vRtrIcmp6Entry": vRtrIcmp6Entry,
       "vRtrIcmp6InMsgs": vRtrIcmp6InMsgs,
       "vRtrIcmp6InErrors": vRtrIcmp6InErrors,
       "vRtrIcmp6InDestUnreachs": vRtrIcmp6InDestUnreachs,
       "vRtrIcmp6InAdminProhibs": vRtrIcmp6InAdminProhibs,
       "vRtrIcmp6InTimeExcds": vRtrIcmp6InTimeExcds,
       "vRtrIcmp6InParmProblems": vRtrIcmp6InParmProblems,
       "vRtrIcmp6InPktTooBigs": vRtrIcmp6InPktTooBigs,
       "vRtrIcmp6InEchos": vRtrIcmp6InEchos,
       "vRtrIcmp6InEchoReplies": vRtrIcmp6InEchoReplies,
       "vRtrIcmp6InRtrSolicits": vRtrIcmp6InRtrSolicits,
       "vRtrIcmp6InRtrAdvertisements": vRtrIcmp6InRtrAdvertisements,
       "vRtrIcmp6InNbrSolicits": vRtrIcmp6InNbrSolicits,
       "vRtrIcmp6InNbrAdvertisements": vRtrIcmp6InNbrAdvertisements,
       "vRtrIcmp6InRedirects": vRtrIcmp6InRedirects,
       "vRtrIcmp6InGrpMembQueries": vRtrIcmp6InGrpMembQueries,
       "vRtrIcmp6InGrpMembResponses": vRtrIcmp6InGrpMembResponses,
       "vRtrIcmp6InGrpMembReductions": vRtrIcmp6InGrpMembReductions,
       "vRtrIcmp6OutMsgs": vRtrIcmp6OutMsgs,
       "vRtrIcmp6OutErrors": vRtrIcmp6OutErrors,
       "vRtrIcmp6OutDestUnreachs": vRtrIcmp6OutDestUnreachs,
       "vRtrIcmp6OutAdminProhibs": vRtrIcmp6OutAdminProhibs,
       "vRtrIcmp6OutTimeExcds": vRtrIcmp6OutTimeExcds,
       "vRtrIcmp6OutParmProblems": vRtrIcmp6OutParmProblems,
       "vRtrIcmp6OutPktTooBigs": vRtrIcmp6OutPktTooBigs,
       "vRtrIcmp6OutEchos": vRtrIcmp6OutEchos,
       "vRtrIcmp6OutEchoReplies": vRtrIcmp6OutEchoReplies,
       "vRtrIcmp6OutRtrSolicits": vRtrIcmp6OutRtrSolicits,
       "vRtrIcmp6OutRtrAdvertisements": vRtrIcmp6OutRtrAdvertisements,
       "vRtrIcmp6OutNbrSolicits": vRtrIcmp6OutNbrSolicits,
       "vRtrIcmp6OutNbrAdvertisements": vRtrIcmp6OutNbrAdvertisements,
       "vRtrIcmp6OutRedirects": vRtrIcmp6OutRedirects,
       "vRtrIcmp6OutGrpMembQueries": vRtrIcmp6OutGrpMembQueries,
       "vRtrIcmp6OutGrpMembResponses": vRtrIcmp6OutGrpMembResponses,
       "vRtrIcmp6OutGrpMembReductions": vRtrIcmp6OutGrpMembReductions,
       "vRtrIcmp6OutDiscards": vRtrIcmp6OutDiscards,
       "vRtrIfIcmp6Table": vRtrIfIcmp6Table,
       "vRtrIfIcmp6Entry": vRtrIfIcmp6Entry,
       "vRtrIfIcmp6InMsgs": vRtrIfIcmp6InMsgs,
       "vRtrIfIcmp6InErrors": vRtrIfIcmp6InErrors,
       "vRtrIfIcmp6InDestUnreachs": vRtrIfIcmp6InDestUnreachs,
       "vRtrIfIcmp6InAdminProhibs": vRtrIfIcmp6InAdminProhibs,
       "vRtrIfIcmp6InTimeExcds": vRtrIfIcmp6InTimeExcds,
       "vRtrIfIcmp6InParmProblems": vRtrIfIcmp6InParmProblems,
       "vRtrIfIcmp6InPktTooBigs": vRtrIfIcmp6InPktTooBigs,
       "vRtrIfIcmp6InEchos": vRtrIfIcmp6InEchos,
       "vRtrIfIcmp6InEchoReplies": vRtrIfIcmp6InEchoReplies,
       "vRtrIfIcmp6InRtrSolicits": vRtrIfIcmp6InRtrSolicits,
       "vRtrIfIcmp6InRtrAdvertisements": vRtrIfIcmp6InRtrAdvertisements,
       "vRtrIfIcmp6InNbrSolicits": vRtrIfIcmp6InNbrSolicits,
       "vRtrIfIcmp6InNbrAdvertisements": vRtrIfIcmp6InNbrAdvertisements,
       "vRtrIfIcmp6InRedirects": vRtrIfIcmp6InRedirects,
       "vRtrIfIcmp6InGrpMembQueries": vRtrIfIcmp6InGrpMembQueries,
       "vRtrIfIcmp6InGrpMembResponses": vRtrIfIcmp6InGrpMembResponses,
       "vRtrIfIcmp6InGrpMembReductions": vRtrIfIcmp6InGrpMembReductions,
       "vRtrIfIcmp6OutMsgs": vRtrIfIcmp6OutMsgs,
       "vRtrIfIcmp6OutErrors": vRtrIfIcmp6OutErrors,
       "vRtrIfIcmp6OutDestUnreachs": vRtrIfIcmp6OutDestUnreachs,
       "vRtrIfIcmp6OutAdminProhibs": vRtrIfIcmp6OutAdminProhibs,
       "vRtrIfIcmp6OutTimeExcds": vRtrIfIcmp6OutTimeExcds,
       "vRtrIfIcmp6OutParmProblems": vRtrIfIcmp6OutParmProblems,
       "vRtrIfIcmp6OutPktTooBigs": vRtrIfIcmp6OutPktTooBigs,
       "vRtrIfIcmp6OutEchos": vRtrIfIcmp6OutEchos,
       "vRtrIfIcmp6OutEchoReplies": vRtrIfIcmp6OutEchoReplies,
       "vRtrIfIcmp6OutRtrSolicits": vRtrIfIcmp6OutRtrSolicits,
       "vRtrIfIcmp6OutRtrSolicitsTime": vRtrIfIcmp6OutRtrSolicitsTime,
       "vRtrIfIcmp6OutRtrAdvertisements": vRtrIfIcmp6OutRtrAdvertisements,
       "vRtrIfIcmp6OutRtrAdvTime": vRtrIfIcmp6OutRtrAdvTime,
       "vRtrIfIcmp6OutNbrSolicits": vRtrIfIcmp6OutNbrSolicits,
       "vRtrIfIcmp6OutNbrSolicitsTime": vRtrIfIcmp6OutNbrSolicitsTime,
       "vRtrIfIcmp6OutNbrAdvertisements": vRtrIfIcmp6OutNbrAdvertisements,
       "vRtrIfIcmp6OutNbrAdvTime": vRtrIfIcmp6OutNbrAdvTime,
       "vRtrIfIcmp6OutRedirects": vRtrIfIcmp6OutRedirects,
       "vRtrIfIcmp6OutGrpMembQueries": vRtrIfIcmp6OutGrpMembQueries,
       "vRtrIfIcmp6OutGrpMembResponses": vRtrIfIcmp6OutGrpMembResponses,
       "vRtrIfIcmp6OutGrpMembReductions": vRtrIfIcmp6OutGrpMembReductions,
       "vRtrIfIcmp6OutDiscards": vRtrIfIcmp6OutDiscards,
       "vRtrIfBfdTable": vRtrIfBfdTable,
       "vRtrIfBfdEntry": vRtrIfBfdEntry,
       "vRtrIfBfdAdminState": vRtrIfBfdAdminState,
       "vRtrIfBfdTransmitInterval": vRtrIfBfdTransmitInterval,
       "vRtrIfBfdReceiveInterval": vRtrIfBfdReceiveInterval,
       "vRtrIfBfdMultiplier": vRtrIfBfdMultiplier,
       "vRtrIfBfdEchoInterval": vRtrIfBfdEchoInterval,
       "vRtrIfBfdType": vRtrIfBfdType,
       "vRtrIfBfdSessionTable": vRtrIfBfdSessionTable,
       "vRtrIfBfdSessionEntry": vRtrIfBfdSessionEntry,
       "vRtrIfBfdSessionLclAddrType": vRtrIfBfdSessionLclAddrType,
       "vRtrIfBfdSessionLclAddr": vRtrIfBfdSessionLclAddr,
       "vRtrIfBfdSessionRemAddrType": vRtrIfBfdSessionRemAddrType,
       "vRtrIfBfdSessionRemAddr": vRtrIfBfdSessionRemAddr,
       "vRtrIfBfdSessionOperState": vRtrIfBfdSessionOperState,
       "vRtrIfBfdSessionState": vRtrIfBfdSessionState,
       "vRtrIfBfdSessionOperFlags": vRtrIfBfdSessionOperFlags,
       "vRtrIfBfdSessionMesgRecv": vRtrIfBfdSessionMesgRecv,
       "vRtrIfBfdSessionMesgSent": vRtrIfBfdSessionMesgSent,
       "vRtrIfBfdSessionLastDownTime": vRtrIfBfdSessionLastDownTime,
       "vRtrIfBfdSessionLastUpTime": vRtrIfBfdSessionLastUpTime,
       "vRtrIfBfdSessionUpCount": vRtrIfBfdSessionUpCount,
       "vRtrIfBfdSessionDownCount": vRtrIfBfdSessionDownCount,
       "vRtrIfBfdSessionLclDisc": vRtrIfBfdSessionLclDisc,
       "vRtrIfBfdSessionRemDisc": vRtrIfBfdSessionRemDisc,
       "vRtrIfBfdSessionProtocols": vRtrIfBfdSessionProtocols,
       "vRtrIfBfdSessionTxInterval": vRtrIfBfdSessionTxInterval,
       "vRtrIfBfdSessionRxInterval": vRtrIfBfdSessionRxInterval,
       "vRtrIfBfdSessionType": vRtrIfBfdSessionType,
       "vRtrIfBfdSessionVerMismatch": vRtrIfBfdSessionVerMismatch,
       "vRtrIfBfdSessionTimeSinceLastRx": vRtrIfBfdSessionTimeSinceLastRx,
       "vRtrIfBfdSessionTimeSinceLastTx": vRtrIfBfdSessionTimeSinceLastTx,
       "vRtrIfDHCP6TableLastChanged": vRtrIfDHCP6TableLastChanged,
       "vRtrIfDHCP6Table": vRtrIfDHCP6Table,
       "vRtrIfDHCP6Entry": vRtrIfDHCP6Entry,
       "vRtrIfDHCP6LastChanged": vRtrIfDHCP6LastChanged,
       "vRtrIfDHCP6AdminState": vRtrIfDHCP6AdminState,
       "vRtrIfDHCP6OperState": vRtrIfDHCP6OperState,
       "vRtrIfDHCP6Description": vRtrIfDHCP6Description,
       "vRtrIfDHCP6RelayServer1": vRtrIfDHCP6RelayServer1,
       "vRtrIfDHCP6RelayServer2": vRtrIfDHCP6RelayServer2,
       "vRtrIfDHCP6RelayServer3": vRtrIfDHCP6RelayServer3,
       "vRtrIfDHCP6RelayServer4": vRtrIfDHCP6RelayServer4,
       "vRtrIfDHCP6RelayServer5": vRtrIfDHCP6RelayServer5,
       "vRtrIfDHCP6RelayServer6": vRtrIfDHCP6RelayServer6,
       "vRtrIfDHCP6RelayServer7": vRtrIfDHCP6RelayServer7,
       "vRtrIfDHCP6RelayServer8": vRtrIfDHCP6RelayServer8,
       "vRtrIfDHCP6RelayItfIdOption": vRtrIfDHCP6RelayItfIdOption,
       "vRtrIfDHCP6LeasePopulate": vRtrIfDHCP6LeasePopulate,
       "vRtrIfDHCP6CurrLeasePopulate": vRtrIfDHCP6CurrLeasePopulate,
       "vRtrIfDHCP6SourceAddress": vRtrIfDHCP6SourceAddress,
       "vRtrIfDHCP6EnableNgbrResolution": vRtrIfDHCP6EnableNgbrResolution,
       "vRtrIfDHCP6RemoteIdOption": vRtrIfDHCP6RemoteIdOption,
       "vRtrIfDHCP6PfxdAdminState": vRtrIfDHCP6PfxdAdminState,
       "vRtrIfDHCP6ServerMaxLeaseStates": vRtrIfDHCP6ServerMaxLeaseStates,
       "vRtrIfDHCP6CurrServerLeaseStates": vRtrIfDHCP6CurrServerLeaseStates,
       "vRtrIfDHCP6ItfIdString": vRtrIfDHCP6ItfIdString,
       "vRtrIfDHCP6ProxyAdminState": vRtrIfDHCP6ProxyAdminState,
       "vRtrIfDHCP6ProxyRenewTimer": vRtrIfDHCP6ProxyRenewTimer,
       "vRtrIfDHCP6ProxyRebindTimer": vRtrIfDHCP6ProxyRebindTimer,
       "vRtrIfDHCP6ProxyValidLifetime": vRtrIfDHCP6ProxyValidLifetime,
       "vRtrIfDHCP6ProxyPrefLifetime": vRtrIfDHCP6ProxyPrefLifetime,
       "vRtrIfDHCP6ProxyApplications": vRtrIfDHCP6ProxyApplications,
       "vRtrIfDHCP6UserDb": vRtrIfDHCP6UserDb,
       "vRtrIfDHCP6LocalDhcpServerName": vRtrIfDHCP6LocalDhcpServerName,
       "vRtrIfDHCP6RelayApplications": vRtrIfDHCP6RelayApplications,
       "vRtrIfDHCP6LinkAddress": vRtrIfDHCP6LinkAddress,
       "vRtrIfDHCP6RoutePopulatePd": vRtrIfDHCP6RoutePopulatePd,
       "vRtrIfDHCP6RoutePopulateNa": vRtrIfDHCP6RoutePopulateNa,
       "vRtrIfDHCP6RoutePopulateTa": vRtrIfDHCP6RoutePopulateTa,
       "vRtrIfDHCP6RoutePopulateExcl": vRtrIfDHCP6RoutePopulateExcl,
       "vRtrIfDHCP6PythonPolicy": vRtrIfDHCP6PythonPolicy,
       "vRtrIfDHCP6FilterId": vRtrIfDHCP6FilterId,
       "vRtrIfDHCP6SnpgAdminState": vRtrIfDHCP6SnpgAdminState,
       "vRtrIfDHCP6ASelSlctDly": vRtrIfDHCP6ASelSlctDly,
       "vRtrIfDHCP6ASelPref": vRtrIfDHCP6ASelPref,
       "vRtrIfDHCP6ASelClntMac": vRtrIfDHCP6ASelClntMac,
       "vRtrIfDHCP6ASelClntMacSlctDly": vRtrIfDHCP6ASelClntMacSlctDly,
       "vRtrIfDHCP6ASelClntMacPref": vRtrIfDHCP6ASelClntMacPref,
       "vRtrIfDHCP6LseSplitAdminState": vRtrIfDHCP6LseSplitAdminState,
       "vRtrIfDHCP6LseSplitValidLifetime": vRtrIfDHCP6LseSplitValidLifetime,
       "vRtrIfGlobalIndexTable": vRtrIfGlobalIndexTable,
       "vRtrIfGlobalIndexEntry": vRtrIfGlobalIndexEntry,
       "vRtrIfGlobalIndexvRtrID": vRtrIfGlobalIndexvRtrID,
       "vRtrIfGlobalIndexvRtrIfIndex": vRtrIfGlobalIndexvRtrIfIndex,
       "vRtrIfProxyNDTable": vRtrIfProxyNDTable,
       "vRtrIfProxyNDEntry": vRtrIfProxyNDEntry,
       "vRtrIfProxyNDLocal": vRtrIfProxyNDLocal,
       "vRtrIfProxyNDPolicy1": vRtrIfProxyNDPolicy1,
       "vRtrIfProxyNDPolicy2": vRtrIfProxyNDPolicy2,
       "vRtrIfProxyNDPolicy3": vRtrIfProxyNDPolicy3,
       "vRtrIfProxyNDPolicy4": vRtrIfProxyNDPolicy4,
       "vRtrIfProxyNDPolicy5": vRtrIfProxyNDPolicy5,
       "vRtrIfDHCP6PfxDelegationLstChgd": vRtrIfDHCP6PfxDelegationLstChgd,
       "vRtrIfDHCP6PfxDelegationTable": vRtrIfDHCP6PfxDelegationTable,
       "vRtrIfDHCP6PfxDelegationEntry": vRtrIfDHCP6PfxDelegationEntry,
       "vRtrIfDHCP6PfxdPrefix": vRtrIfDHCP6PfxdPrefix,
       "vRtrIfDHCP6PfxdPrefixLen": vRtrIfDHCP6PfxdPrefixLen,
       "vRtrIfDHCP6PfxdRowStatus": vRtrIfDHCP6PfxdRowStatus,
       "vRtrIfDHCP6PfxdLastChanged": vRtrIfDHCP6PfxdLastChanged,
       "vRtrIfDHCP6PfxdDUID": vRtrIfDHCP6PfxdDUID,
       "vRtrIfDHCP6PfxdIAID": vRtrIfDHCP6PfxdIAID,
       "vRtrIfDHCP6PfxdPrefLifetime": vRtrIfDHCP6PfxdPrefLifetime,
       "vRtrIfDHCP6PfxdValidLifetime": vRtrIfDHCP6PfxdValidLifetime,
       "vRtrDHCP6DropStatTable": vRtrDHCP6DropStatTable,
       "vRtrDHCP6DropStatEntry": vRtrDHCP6DropStatEntry,
       "vRtrDHCP6DropStatReason": vRtrDHCP6DropStatReason,
       "vRtrDHCP6DropStatLastCleared": vRtrDHCP6DropStatLastCleared,
       "vRtrDHCP6DropStatPktsDropped": vRtrDHCP6DropStatPktsDropped,
       "vRtrDHCP6MsgStatTable": vRtrDHCP6MsgStatTable,
       "vRtrDHCP6MsgStatEntry": vRtrDHCP6MsgStatEntry,
       "vRtrDHCP6MsgStatsMsgType": vRtrDHCP6MsgStatsMsgType,
       "vRtrDHCP6MsgStatsLstClrd": vRtrDHCP6MsgStatsLstClrd,
       "vRtrDHCP6MsgStatsRcvd": vRtrDHCP6MsgStatsRcvd,
       "vRtrDHCP6MsgStatsSent": vRtrDHCP6MsgStatsSent,
       "vRtrDHCP6MsgStatsDropped": vRtrDHCP6MsgStatsDropped,
       "vRtrIfIpcpTable": vRtrIfIpcpTable,
       "vRtrIfIpcpEntry": vRtrIfIpcpEntry,
       "vRtrIfIpcpPeerAddrType": vRtrIfIpcpPeerAddrType,
       "vRtrIfIpcpPeerAddr": vRtrIfIpcpPeerAddr,
       "vRtrIfIpcpPriDnsAddrType": vRtrIfIpcpPriDnsAddrType,
       "vRtrIfIpcpPriDnsAddr": vRtrIfIpcpPriDnsAddr,
       "vRtrIfIpcpSecDnsAddrType": vRtrIfIpcpSecDnsAddrType,
       "vRtrIfIpcpSecDnsAddr": vRtrIfIpcpSecDnsAddr,
       "vRtrInetStatRteCpeChkStatsTable": vRtrInetStatRteCpeChkStatsTable,
       "vRtrInetStatRteCpeChkStatsEntry": vRtrInetStatRteCpeChkStatsEntry,
       "vRtrInetStatRteCpeChkUpTime": vRtrInetStatRteCpeChkUpTime,
       "vRtrInetStatRteCpeChkInPktCnt": vRtrInetStatRteCpeChkInPktCnt,
       "vRtrInetStatRteCpeChkOutPktCnt": vRtrInetStatRteCpeChkOutPktCnt,
       "vRtrInetStatRteCpeChkDownTrans": vRtrInetStatRteCpeChkDownTrans,
       "vRtrInetStatRteCpeChkUpTrans": vRtrInetStatRteCpeChkUpTrans,
       "vRtrInetStatRteCpeChkTTL": vRtrInetStatRteCpeChkTTL,
       "tmnxDscpAppTableLastChanged": tmnxDscpAppTableLastChanged,
       "tmnxDscpAppTable": tmnxDscpAppTable,
       "tmnxDscpAppEntry": tmnxDscpAppEntry,
       "tmnxDscpAppId": tmnxDscpAppId,
       "tmnxDscpAppLastChanged": tmnxDscpAppLastChanged,
       "tmnxDscpAppDscpValue": tmnxDscpAppDscpValue,
       "tmnxDscpFCTableLastChanged": tmnxDscpFCTableLastChanged,
       "tmnxDscpFCTable": tmnxDscpFCTable,
       "tmnxDscpFCEntry": tmnxDscpFCEntry,
       "tmnxDscpFCDscpValue": tmnxDscpFCDscpValue,
       "tmnxDscpFCLastChanged": tmnxDscpFCLastChanged,
       "tmnxDscpFCValue": tmnxDscpFCValue,
       "tmnxDot1pAppTableLastChanged": tmnxDot1pAppTableLastChanged,
       "tmnxDot1pAppTable": tmnxDot1pAppTable,
       "tmnxDot1pAppEntry": tmnxDot1pAppEntry,
       "tmnxDot1pAppId": tmnxDot1pAppId,
       "tmnxDot1pAppLastChanged": tmnxDot1pAppLastChanged,
       "tmnxDot1pAppValue": tmnxDot1pAppValue,
       "vRtrFibStatTable": vRtrFibStatTable,
       "vRtrFibStatEntry": vRtrFibStatEntry,
       "vRtrFibStatStaticRoutes": vRtrFibStatStaticRoutes,
       "vRtrFibStatDirectRoutes": vRtrFibStatDirectRoutes,
       "vRtrFibStatHostRoutes": vRtrFibStatHostRoutes,
       "vRtrFibStatBGPRoutes": vRtrFibStatBGPRoutes,
       "vRtrFibStatBGPVpnRoutes": vRtrFibStatBGPVpnRoutes,
       "vRtrFibStatOSPFRoutes": vRtrFibStatOSPFRoutes,
       "vRtrFibStatISISRoutes": vRtrFibStatISISRoutes,
       "vRtrFibStatRIPRoutes": vRtrFibStatRIPRoutes,
       "vRtrFibStatAggrRoutes": vRtrFibStatAggrRoutes,
       "vRtrFibStatSubMgmtRoutes": vRtrFibStatSubMgmtRoutes,
       "vRtrFibStatManagedRoutes": vRtrFibStatManagedRoutes,
       "vRtrFibStatV6StaticRoutes": vRtrFibStatV6StaticRoutes,
       "vRtrFibStatV6DirectRoutes": vRtrFibStatV6DirectRoutes,
       "vRtrFibStatV6HostRoutes": vRtrFibStatV6HostRoutes,
       "vRtrFibStatV6BGPRoutes": vRtrFibStatV6BGPRoutes,
       "vRtrFibStatV6BGPVpnRoutes": vRtrFibStatV6BGPVpnRoutes,
       "vRtrFibStatV6OSPFRoutes": vRtrFibStatV6OSPFRoutes,
       "vRtrFibStatV6ISISRoutes": vRtrFibStatV6ISISRoutes,
       "vRtrFibStatV6RIPRoutes": vRtrFibStatV6RIPRoutes,
       "vRtrFibStatV6AggrRoutes": vRtrFibStatV6AggrRoutes,
       "vRtrFibStatV6SubMgmtRoutes": vRtrFibStatV6SubMgmtRoutes,
       "vRtrFibStatV6ManagedRoutes": vRtrFibStatV6ManagedRoutes,
       "vRtrFibStatOverflows": vRtrFibStatOverflows,
       "vRtrFibStatAlarmCount": vRtrFibStatAlarmCount,
       "vRtrFibStatLastAlarmTime": vRtrFibStatLastAlarmTime,
       "vRtrFibStatHighUtilization": vRtrFibStatHighUtilization,
       "vRtrFibStatMobileHostRoutes": vRtrFibStatMobileHostRoutes,
       "vRtrFibStatV6MobileHostRoutes": vRtrFibStatV6MobileHostRoutes,
       "vRtrFibStatVPNLeakRoutes": vRtrFibStatVPNLeakRoutes,
       "vRtrFibStatV6VPNLeakRoutes": vRtrFibStatV6VPNLeakRoutes,
       "vRtrFibStatNatRoutes": vRtrFibStatNatRoutes,
       "vRtrFibStatV6NatRoutes": vRtrFibStatV6NatRoutes,
       "vRtrFibStatBGPEvpnRoutes": vRtrFibStatBGPEvpnRoutes,
       "vRtrFibStatV6BGPEvpnRoutes": vRtrFibStatV6BGPEvpnRoutes,
       "vRtrFibStatTotalInstalledRoutes": vRtrFibStatTotalInstalledRoutes,
       "vRtrFibStatCurrentUtilization": vRtrFibStatCurrentUtilization,
       "vRtrFibStatFilteredRoutes": vRtrFibStatFilteredRoutes,
       "vRtrFibStatV6TotalInstalledRt": vRtrFibStatV6TotalInstalledRt,
       "vRtrFibStatV6CurrentUtilization": vRtrFibStatV6CurrentUtilization,
       "vRtrFibStatV6FilteredRoutes": vRtrFibStatV6FilteredRoutes,
       "vRtrFibStatV6Overflows": vRtrFibStatV6Overflows,
       "vRtrFibStatBGPLabelV4Routes": vRtrFibStatBGPLabelV4Routes,
       "vRtrFibStatBGPLabelV6Routes": vRtrFibStatBGPLabelV6Routes,
       "vRtrFibStatBGPEvpnIflRoutes": vRtrFibStatBGPEvpnIflRoutes,
       "vRtrFibStatV6BGPEvpnIflRoutes": vRtrFibStatV6BGPEvpnIflRoutes,
       "vRtrFibStatBGPEvpnIffRoutes": vRtrFibStatBGPEvpnIffRoutes,
       "vRtrFibStatV6BGPEvpnIffRoutes": vRtrFibStatV6BGPEvpnIffRoutes,
       "vRtrFibStatSrV6Routes": vRtrFibStatSrV6Routes,
       "vRtrFibStatIpVpnCurrUtilization": vRtrFibStatIpVpnCurrUtilization,
       "vRtrFibStatNextHopTable": vRtrFibStatNextHopTable,
       "vRtrFibStatNextHopEntry": vRtrFibStatNextHopEntry,
       "vRtrFibStatNextHopIPActive": vRtrFibStatNextHopIPActive,
       "vRtrFibStatNextHopIPAvailable": vRtrFibStatNextHopIPAvailable,
       "vRtrFibStatNextHopTunnelActive": vRtrFibStatNextHopTunnelActive,
       "vRtrFibStatNextHopTunnelAvailable": vRtrFibStatNextHopTunnelAvailable,
       "vRtrInetAllCidrRouteTable": vRtrInetAllCidrRouteTable,
       "vRtrInetAllCidrRouteEntry": vRtrInetAllCidrRouteEntry,
       "vRtrInetAllCidrRouteProtoID": vRtrInetAllCidrRouteProtoID,
       "vRtrInetAllCidrRouteIfIndex": vRtrInetAllCidrRouteIfIndex,
       "vRtrInetAllCidrRouteType": vRtrInetAllCidrRouteType,
       "vRtrInetAllCidrRouteAge": vRtrInetAllCidrRouteAge,
       "vRtrInetAllCidrRouteNextHopAS": vRtrInetAllCidrRouteNextHopAS,
       "vRtrInetAllCidrRouteMetric1": vRtrInetAllCidrRouteMetric1,
       "vRtrInetAllCidrRouteMetric2": vRtrInetAllCidrRouteMetric2,
       "vRtrInetAllCidrRouteMetric3": vRtrInetAllCidrRouteMetric3,
       "vRtrInetAllCidrRouteMetric4": vRtrInetAllCidrRouteMetric4,
       "vRtrInetAllCidrRouteMetric5": vRtrInetAllCidrRouteMetric5,
       "vRtrInetAllCidrRoutePreference": vRtrInetAllCidrRoutePreference,
       "vRtrInetAllCidrRouteMetric": vRtrInetAllCidrRouteMetric,
       "vRtrInetAllCidrRouteIfVRtrId": vRtrInetAllCidrRouteIfVRtrId,
       "vRtrInetAllCidrRouteIsActive": vRtrInetAllCidrRouteIsActive,
       "vRtrInetAllCidrRouteBkupFlags": vRtrInetAllCidrRouteBkupFlags,
       "vRtrInetAllCidrRouteBkupNHopType": vRtrInetAllCidrRouteBkupNHopType,
       "vRtrInetAllCidrRouteBkupNextHop": vRtrInetAllCidrRouteBkupNextHop,
       "vRtrInetAllCidrRouteBkupMetric": vRtrInetAllCidrRouteBkupMetric,
       "vRtrInetAllCidrRouteNHopRepCount": vRtrInetAllCidrRouteNHopRepCount,
       "vRtrInetAllCidrRtNextHopType": vRtrInetAllCidrRtNextHopType,
       "vRtrInetAllCidrRtNextHopOwner": vRtrInetAllCidrRtNextHopOwner,
       "vRtrInetAllCidrRtNHOwnerAuxInfo": vRtrInetAllCidrRtNHOwnerAuxInfo,
       "vRtrInetAllCidrRtBkupNHType": vRtrInetAllCidrRtBkupNHType,
       "vRtrInetAllCidrRtBkupNHOwner": vRtrInetAllCidrRtBkupNHOwner,
       "vRtrInetAllCidrRtBkupNHOwnAxInfo": vRtrInetAllCidrRtBkupNHOwnAxInfo,
       "vRtrInetAllCidrRtSrcClassIndex": vRtrInetAllCidrRtSrcClassIndex,
       "vRtrInetAllCidrRtDstClassIndex": vRtrInetAllCidrRtDstClassIndex,
       "vRtrInetAllCidrRtOperFlags": vRtrInetAllCidrRtOperFlags,
       "vRtrInetAllCidrRtNextHopOwnInst": vRtrInetAllCidrRtNextHopOwnInst,
       "vRtrInetAllCidrRtBkupNHOwnInst": vRtrInetAllCidrRtBkupNHOwnInst,
       "vRtrInetAllCidrRouteNHIsFec": vRtrInetAllCidrRouteNHIsFec,
       "vRtrInetAllCidrRouteNHFecPfxLen": vRtrInetAllCidrRouteNHFecPfxLen,
       "vRtrIfStatsTable": vRtrIfStatsTable,
       "vRtrIfStatsEntry": vRtrIfStatsEntry,
       "vRtrIfuRPFCheckFailPkts": vRtrIfuRPFCheckFailPkts,
       "vRtrIfuRPFCheckFailPktsLow32": vRtrIfuRPFCheckFailPktsLow32,
       "vRtrIfuRPFCheckFailPktsHigh32": vRtrIfuRPFCheckFailPktsHigh32,
       "vRtrIfuRPFCheckFailBytes": vRtrIfuRPFCheckFailBytes,
       "vRtrIfuRPFCheckFailBytesLow32": vRtrIfuRPFCheckFailBytesLow32,
       "vRtrIfuRPFCheckFailBytesHigh32": vRtrIfuRPFCheckFailBytesHigh32,
       "vRtrIfIpReasFragPktsRcvd": vRtrIfIpReasFragPktsRcvd,
       "vRtrIfIpReasFragPktsRcvdLow32": vRtrIfIpReasFragPktsRcvdLow32,
       "vRtrIfIpReasFragPktsRcvdHigh32": vRtrIfIpReasFragPktsRcvdHigh32,
       "vRtrIfIpReasFragBytesRcvd": vRtrIfIpReasFragBytesRcvd,
       "vRtrIfIpReasFragBytesRcvdLow32": vRtrIfIpReasFragBytesRcvdLow32,
       "vRtrIfIpReasFragBytesRcvdHigh32": vRtrIfIpReasFragBytesRcvdHigh32,
       "vRtrIfIpReasFragPktsReas": vRtrIfIpReasFragPktsReas,
       "vRtrIfIpReasFragPktsReasLow32": vRtrIfIpReasFragPktsReasLow32,
       "vRtrIfIpReasFragPktsReasHigh32": vRtrIfIpReasFragPktsReasHigh32,
       "vRtrIfIpReasFragBytesReas": vRtrIfIpReasFragBytesReas,
       "vRtrIfIpReasFragBytesReasLow32": vRtrIfIpReasFragBytesReasLow32,
       "vRtrIfIpReasFragBytesReasHigh32": vRtrIfIpReasFragBytesReasHigh32,
       "vRtrIfIpReasFragReasErrors": vRtrIfIpReasFragReasErrors,
       "vRtrIfIpReasFragReasErrorsLow32": vRtrIfIpReasFragReasErrorsLow32,
       "vRtrIfIpReasFragReasErrorsHigh32": vRtrIfIpReasFragReasErrorsHigh32,
       "vRtrIfIpReasFragDisc": vRtrIfIpReasFragDisc,
       "vRtrIfIpReasFragDiscLow32": vRtrIfIpReasFragDiscLow32,
       "vRtrIfIpReasFragDiscHigh32": vRtrIfIpReasFragDiscHigh32,
       "vRtrIfIpReasOutBufRes": vRtrIfIpReasOutBufRes,
       "vRtrIfIpReasOutBufResLow32": vRtrIfIpReasOutBufResLow32,
       "vRtrIfIpReasOutBufResHigh32": vRtrIfIpReasOutBufResHigh32,
       "vRtrIfIpReasPktsRx": vRtrIfIpReasPktsRx,
       "vRtrIfIpReasPktsRxLow32": vRtrIfIpReasPktsRxLow32,
       "vRtrIfIpReasPktsRxHigh32": vRtrIfIpReasPktsRxHigh32,
       "vRtrIfIpReasBytesRx": vRtrIfIpReasBytesRx,
       "vRtrIfIpReasBytesRxLow32": vRtrIfIpReasBytesRxLow32,
       "vRtrIfIpReasBytesRxHigh32": vRtrIfIpReasBytesRxHigh32,
       "vRtrIfIpReasPktsTx": vRtrIfIpReasPktsTx,
       "vRtrIfIpReasPktsTxLow32": vRtrIfIpReasPktsTxLow32,
       "vRtrIfIpReasPktsTxHigh32": vRtrIfIpReasPktsTxHigh32,
       "vRtrIfIpReasBytesTx": vRtrIfIpReasBytesTx,
       "vRtrIfIpReasBytesTxLow32": vRtrIfIpReasBytesTxLow32,
       "vRtrIfIpReasBytesTxHigh32": vRtrIfIpReasBytesTxHigh32,
       "vRtrIfRxPkts": vRtrIfRxPkts,
       "vRtrIfRxPktsLow32": vRtrIfRxPktsLow32,
       "vRtrIfRxPktsHigh32": vRtrIfRxPktsHigh32,
       "vRtrIfRxBytes": vRtrIfRxBytes,
       "vRtrIfRxBytesLow32": vRtrIfRxBytesLow32,
       "vRtrIfRxBytesHigh32": vRtrIfRxBytesHigh32,
       "vRtrIfTxV4Pkts": vRtrIfTxV4Pkts,
       "vRtrIfTxV4PktsLow32": vRtrIfTxV4PktsLow32,
       "vRtrIfTxV4PktsHigh32": vRtrIfTxV4PktsHigh32,
       "vRtrIfTxV4Bytes": vRtrIfTxV4Bytes,
       "vRtrIfTxV4BytesLow32": vRtrIfTxV4BytesLow32,
       "vRtrIfTxV4BytesHigh32": vRtrIfTxV4BytesHigh32,
       "vRtrIfTxV6Pkts": vRtrIfTxV6Pkts,
       "vRtrIfTxV6PktsLow32": vRtrIfTxV6PktsLow32,
       "vRtrIfTxV6PktsHigh32": vRtrIfTxV6PktsHigh32,
       "vRtrIfTxV6Bytes": vRtrIfTxV6Bytes,
       "vRtrIfTxV6BytesLow32": vRtrIfTxV6BytesLow32,
       "vRtrIfTxV6BytesHigh32": vRtrIfTxV6BytesHigh32,
       "vRtrIfTxV4DiscardPkts": vRtrIfTxV4DiscardPkts,
       "vRtrIfTxV4DiscardPktsLow32": vRtrIfTxV4DiscardPktsLow32,
       "vRtrIfTxV4DiscardPktsHigh32": vRtrIfTxV4DiscardPktsHigh32,
       "vRtrIfTxV4DiscardBytes": vRtrIfTxV4DiscardBytes,
       "vRtrIfTxV4DiscardBytesLow32": vRtrIfTxV4DiscardBytesLow32,
       "vRtrIfTxV4DiscardBytesHigh32": vRtrIfTxV4DiscardBytesHigh32,
       "vRtrIfTxV6DiscardPkts": vRtrIfTxV6DiscardPkts,
       "vRtrIfTxV6DiscardPktsLow32": vRtrIfTxV6DiscardPktsLow32,
       "vRtrIfTxV6DiscardPktsHigh32": vRtrIfTxV6DiscardPktsHigh32,
       "vRtrIfTxV6DiscardBytes": vRtrIfTxV6DiscardBytes,
       "vRtrIfTxV6DiscardBytesLow32": vRtrIfTxV6DiscardBytesLow32,
       "vRtrIfTxV6DiscardBytesHigh32": vRtrIfTxV6DiscardBytesHigh32,
       "vRtrIfIpReasV6FragPktsRcvd": vRtrIfIpReasV6FragPktsRcvd,
       "vRtrIfIpReasV6FragPktsRcvdLow32": vRtrIfIpReasV6FragPktsRcvdLow32,
       "vRtrIfIpReasV6FragPktsRcvdHigh32": vRtrIfIpReasV6FragPktsRcvdHigh32,
       "vRtrIfIpReasV6FragBytesRcvd": vRtrIfIpReasV6FragBytesRcvd,
       "vRtrIfIpReasV6FragBytesRcvdL32": vRtrIfIpReasV6FragBytesRcvdL32,
       "vRtrIfIpReasV6FragBytesRcvdH32": vRtrIfIpReasV6FragBytesRcvdH32,
       "vRtrIfIpReasV6FragPktsReas": vRtrIfIpReasV6FragPktsReas,
       "vRtrIfIpReasV6FragPktsReasLow32": vRtrIfIpReasV6FragPktsReasLow32,
       "vRtrIfIpReasV6FragPktsReasHigh32": vRtrIfIpReasV6FragPktsReasHigh32,
       "vRtrIfIpReasV6FragBytesReas": vRtrIfIpReasV6FragBytesReas,
       "vRtrIfIpReasV6FragBytesReasL32": vRtrIfIpReasV6FragBytesReasL32,
       "vRtrIfIpReasV6FragBytesReasH32": vRtrIfIpReasV6FragBytesReasH32,
       "vRtrIfIpReasV6FragReasErrors": vRtrIfIpReasV6FragReasErrors,
       "vRtrIfIpReasV6FragReasErrorsL32": vRtrIfIpReasV6FragReasErrorsL32,
       "vRtrIfIpReasV6FragReasErrorsH32": vRtrIfIpReasV6FragReasErrorsH32,
       "vRtrIfIpReasV6FragDisc": vRtrIfIpReasV6FragDisc,
       "vRtrIfIpReasV6FragDiscLow32": vRtrIfIpReasV6FragDiscLow32,
       "vRtrIfIpReasV6FragDiscHigh32": vRtrIfIpReasV6FragDiscHigh32,
       "vRtrIfIpReasV6OutBufRes": vRtrIfIpReasV6OutBufRes,
       "vRtrIfIpReasV6OutBufResLow32": vRtrIfIpReasV6OutBufResLow32,
       "vRtrIfIpReasV6OutBufResHigh32": vRtrIfIpReasV6OutBufResHigh32,
       "vRtrIfIpReasV6PktsRx": vRtrIfIpReasV6PktsRx,
       "vRtrIfIpReasV6PktsRxLow32": vRtrIfIpReasV6PktsRxLow32,
       "vRtrIfIpReasV6PktsRxHigh32": vRtrIfIpReasV6PktsRxHigh32,
       "vRtrIfIpReasV6BytesRx": vRtrIfIpReasV6BytesRx,
       "vRtrIfIpReasV6BytesRxLow32": vRtrIfIpReasV6BytesRxLow32,
       "vRtrIfIpReasV6BytesRxHigh32": vRtrIfIpReasV6BytesRxHigh32,
       "vRtrIfIpReasV6PktsTx": vRtrIfIpReasV6PktsTx,
       "vRtrIfIpReasV6PktsTxLow32": vRtrIfIpReasV6PktsTxLow32,
       "vRtrIfIpReasV6PktsTxHigh32": vRtrIfIpReasV6PktsTxHigh32,
       "vRtrIfIpReasV6BytesTx": vRtrIfIpReasV6BytesTx,
       "vRtrIfIpReasV6BytesTxLow32": vRtrIfIpReasV6BytesTxLow32,
       "vRtrIfIpReasV6BytesTxHigh32": vRtrIfIpReasV6BytesTxHigh32,
       "vRtrIfSpeed": vRtrIfSpeed,
       "vRtrIfRxV6Pkts": vRtrIfRxV6Pkts,
       "vRtrIfRxV6PktsLow32": vRtrIfRxV6PktsLow32,
       "vRtrIfRxV6PktsHigh32": vRtrIfRxV6PktsHigh32,
       "vRtrIfRxV6Bytes": vRtrIfRxV6Bytes,
       "vRtrIfRxV6BytesLow32": vRtrIfRxV6BytesLow32,
       "vRtrIfRxV6BytesHigh32": vRtrIfRxV6BytesHigh32,
       "vRtrIfV6uRPFCheckFailPkts": vRtrIfV6uRPFCheckFailPkts,
       "vRtrIfV6uRPFCheckFailPktsLow32": vRtrIfV6uRPFCheckFailPktsLow32,
       "vRtrIfV6uRPFCheckFailPktsHigh32": vRtrIfV6uRPFCheckFailPktsHigh32,
       "vRtrIfV6uRPFCheckFailBytes": vRtrIfV6uRPFCheckFailBytes,
       "vRtrIfV6uRPFCheckFailBytesLow32": vRtrIfV6uRPFCheckFailBytesLow32,
       "vRtrIfV6uRPFCheckFailBytesHigh32": vRtrIfV6uRPFCheckFailBytesHigh32,
       "vRtrIfRxV4Pkts": vRtrIfRxV4Pkts,
       "vRtrIfRxV4Bytes": vRtrIfRxV4Bytes,
       "vRtrIfV4uRPFCheckFailPkts": vRtrIfV4uRPFCheckFailPkts,
       "vRtrIfV4uRPFCheckFailBytes": vRtrIfV4uRPFCheckFailBytes,
       "vRtrNetDomainTblLastChanged": vRtrNetDomainTblLastChanged,
       "vRtrNetDomainTable": vRtrNetDomainTable,
       "vRtrNetDomainEntry": vRtrNetDomainEntry,
       "vRtrNetDomainName": vRtrNetDomainName,
       "vRtrNetDomainRowStatus": vRtrNetDomainRowStatus,
       "vRtrNetDomainLastChanged": vRtrNetDomainLastChanged,
       "vRtrNetDomainDesc": vRtrNetDomainDesc,
       "vRtrNetDomainIfAssociationCnt": vRtrNetDomainIfAssociationCnt,
       "vRtrNetDomainSdpAssociationCnt": vRtrNetDomainSdpAssociationCnt,
       "vRtrNetDomainMcastAssociationCnt": vRtrNetDomainMcastAssociationCnt,
       "vRtrIfNetDomainTblLastChanged": vRtrIfNetDomainTblLastChanged,
       "vRtrIfNetDomainTable": vRtrIfNetDomainTable,
       "vRtrIfNetDomainEntry": vRtrIfNetDomainEntry,
       "vRtrIfNetDomainRowStatus": vRtrIfNetDomainRowStatus,
       "vRtrIfNetDomainLastChanged": vRtrIfNetDomainLastChanged,
       "vRtrConfExtTable": vRtrConfExtTable,
       "vRtrConfExtEntry": vRtrConfExtEntry,
       "vRtrLdpShortcut": vRtrLdpShortcut,
       "vRtrSingleSfmOverloadAdminState": vRtrSingleSfmOverloadAdminState,
       "vRtrSingleSfmOverloadHldOffTime": vRtrSingleSfmOverloadHldOffTime,
       "vRtrSingleSfmOverloadState": vRtrSingleSfmOverloadState,
       "vRtrSingleSfmOverloadStart": vRtrSingleSfmOverloadStart,
       "vRtrSingleSfmOverloadTime": vRtrSingleSfmOverloadTime,
       "vRtrGrtState": vRtrGrtState,
       "vRtrMvpnIpmsiP2MPAdmin": vRtrMvpnIpmsiP2MPAdmin,
       "vRtrMvpnSpmsiP2MPAdmin": vRtrMvpnSpmsiP2MPAdmin,
       "vRtrMvpnIpmsiLspTemplate": vRtrMvpnIpmsiLspTemplate,
       "vRtrMvpnSpmsiLspTemplate": vRtrMvpnSpmsiLspTemplate,
       "vRtrMvpnIpmsiType": vRtrMvpnIpmsiType,
       "vRtrMvpnSpmsiType": vRtrMvpnSpmsiType,
       "vRtrMvpnSpmsiMaxLimit": vRtrMvpnSpmsiMaxLimit,
       "vRtrFibPriority": vRtrFibPriority,
       "vRtrCarrierCarrierVpn": vRtrCarrierCarrierVpn,
       "vRtrLabelMode": vRtrLabelMode,
       "vRtrBgpSharedQueue": vRtrBgpSharedQueue,
       "vRtrBgpSharedQueueCIR": vRtrBgpSharedQueueCIR,
       "vRtrBgpSharedQueuePIR": vRtrBgpSharedQueuePIR,
       "vRtrMvpnMdtSafi": vRtrMvpnMdtSafi,
       "vRtrMvpnMdtDefGrpAddrType": vRtrMvpnMdtDefGrpAddrType,
       "vRtrMvpnMdtDefGrpAddress": vRtrMvpnMdtDefGrpAddress,
       "vRtrMvpnIpmsiEnableBfdRoot": vRtrMvpnIpmsiEnableBfdRoot,
       "vRtrMvpnIpmsiEnableBfdLeaf": vRtrMvpnIpmsiEnableBfdLeaf,
       "vRtrMvpnIpmsiBfdRtTraInt": vRtrMvpnIpmsiBfdRtTraInt,
       "vRtrMvpnIpmsiBfdRootMult": vRtrMvpnIpmsiBfdRootMult,
       "vRtrVpnBackupPath": vRtrVpnBackupPath,
       "vRtrIpFastReroute": vRtrIpFastReroute,
       "vRtrGrtLocalMgmtState": vRtrGrtLocalMgmtState,
       "vRtrIpv6ReachableTime": vRtrIpv6ReachableTime,
       "vRtrAllowExportBgpVpn": vRtrAllowExportBgpVpn,
       "vRtrBgpExportInactive": vRtrBgpExportInactive,
       "vRtrAllowSnmpAccess": vRtrAllowSnmpAccess,
       "vRtrIpv6NdCacheStaleTime": vRtrIpv6NdCacheStaleTime,
       "vRtrIcmpTunneling": vRtrIcmpTunneling,
       "vRtrMvpnMdSourceAddrType": vRtrMvpnMdSourceAddrType,
       "vRtrMvpnMdSourceAddress": vRtrMvpnMdSourceAddress,
       "vRtrDisableSelectiveFib": vRtrDisableSelectiveFib,
       "vRtrMvpnWildcardSpmsi": vRtrMvpnWildcardSpmsi,
       "vRtrMvpnWildcardSpmsiBsrSig": vRtrMvpnWildcardSpmsiBsrSig,
       "vRtrStaticRouteHoldDownEnable": vRtrStaticRouteHoldDownEnable,
       "vRtrStaticRouteHoldDownInitial": vRtrStaticRouteHoldDownInitial,
       "vRtrStaticRouteHoldDownMultiplr": vRtrStaticRouteHoldDownMultiplr,
       "vRtrStaticRouteHoldDownMaxValue": vRtrStaticRouteHoldDownMaxValue,
       "vRtrWeightedEcmp": vRtrWeightedEcmp,
       "vRtrBgpAutoRD": vRtrBgpAutoRD,
       "vRtrBgpOperRD": vRtrBgpOperRD,
       "vRtrBgpOperRDType": vRtrBgpOperRDType,
       "vRtrLdpShortcutType": vRtrLdpShortcutType,
       "vRtrEntropyLabel": vRtrEntropyLabel,
       "vRtrLspBfdSession": vRtrLspBfdSession,
       "vRtrLspBfdMaxSessions": vRtrLspBfdMaxSessions,
       "vRtrOperRouterId": vRtrOperRouterId,
       "vRtrClassForwarding": vRtrClassForwarding,
       "vRtrMtrace2AdminState": vRtrMtrace2AdminState,
       "vRtrMtrace2UdpPort": vRtrMtrace2UdpPort,
       "vRtrPolicyReferenceChecks": vRtrPolicyReferenceChecks,
       "vRtrMvpnIpmsiBierSubDomain": vRtrMvpnIpmsiBierSubDomain,
       "vRtrMvpnSpmsiBierSubDomain": vRtrMvpnSpmsiBierSubDomain,
       "vRtrFibTelemetry": vRtrFibTelemetry,
       "vRtrWeightedEcmpStrict": vRtrWeightedEcmpStrict,
       "vRtrIpv6TeRouterIdIfName": vRtrIpv6TeRouterIdIfName,
       "vRtrEcmpUnequalCost": vRtrEcmpUnequalCost,
       "vRtrMvpnIpmsiP2mpPolicy": vRtrMvpnIpmsiP2mpPolicy,
       "vRtrMvpnSpmsiP2mpPolicy": vRtrMvpnSpmsiP2mpPolicy,
       "vRtrMvpnIpmsiSRPolicy": vRtrMvpnIpmsiSRPolicy,
       "vRtrMvpnSpmsiSRPolicy": vRtrMvpnSpmsiSRPolicy,
       "vRtrBgpIpVpnMplsAdminState": vRtrBgpIpVpnMplsAdminState,
       "vRtrBgpIpVpnMplsDynEgrLblLmt": vRtrBgpIpVpnMplsDynEgrLblLmt,
       "vRtrIfExtTable": vRtrIfExtTable,
       "vRtrIfExtEntry": vRtrIfExtEntry,
       "vRtrIfLsrIpLoadBalancing": vRtrIfLsrIpLoadBalancing,
       "vRtrIfIngressIpv4Flowspec": vRtrIfIngressIpv4Flowspec,
       "vRtrIfInfo": vRtrIfInfo,
       "vRtrIfInfoEncrypted": vRtrIfInfoEncrypted,
       "vRtrIfQosRouteLookup": vRtrIfQosRouteLookup,
       "vRtrIfIpv6QosRouteLookup": vRtrIfIpv6QosRouteLookup,
       "vRtrIfStatusString": vRtrIfStatusString,
       "vRtrIfIpv6uRPFCheckState": vRtrIfIpv6uRPFCheckState,
       "vRtrIfIpv6uRPFCheckMode": vRtrIfIpv6uRPFCheckMode,
       "vRtrIfTmsOffRampVprn": vRtrIfTmsOffRampVprn,
       "vRtrIfTmsMgmtVprn": vRtrIfTmsMgmtVprn,
       "vRtrIfTrackMobile": vRtrIfTrackMobile,
       "vRtrIfIpv6TrackMobile": vRtrIfIpv6TrackMobile,
       "vRtrIfIngressIpv6Flowspec": vRtrIfIngressIpv6Flowspec,
       "vRtrIfLagLinkMapProfile": vRtrIfLagLinkMapProfile,
       "vRtrIfLagActivePort": vRtrIfLagActivePort,
       "vRtrIfDCpuProtPolicy": vRtrIfDCpuProtPolicy,
       "vRtrIfMcastNetworkDomainName": vRtrIfMcastNetworkDomainName,
       "vRtrIfIngressStatsEnabled": vRtrIfIngressStatsEnabled,
       "vRtrIfIpv6ReachableTime": vRtrIfIpv6ReachableTime,
       "vRtrIfEnableMacAccounting": vRtrIfEnableMacAccounting,
       "vRtrIfTcpMss": vRtrIfTcpMss,
       "vRtrIfIpv6TcpMss": vRtrIfIpv6TcpMss,
       "vRtrIfuRPFIgnoreDefault": vRtrIfuRPFIgnoreDefault,
       "vRtrIfIpv6uRPFIgnoreDefault": vRtrIfIpv6uRPFIgnoreDefault,
       "vRtrIfIpv6DadDisable": vRtrIfIpv6DadDisable,
       "vRtrIfTeidLoadBalancing": vRtrIfTeidLoadBalancing,
       "vRtrIfEgrIpLoadBalancing": vRtrIfEgrIpLoadBalancing,
       "vRtrIfPlcyAcctTemplateName": vRtrIfPlcyAcctTemplateName,
       "vRtrIfIpv6NdCacheStaleTime": vRtrIfIpv6NdCacheStaleTime,
       "vRtrIfTmsOffRampIgrVrf": vRtrIfTmsOffRampIgrVrf,
       "vRtrIfArpRetryTimer": vRtrIfArpRetryTimer,
       "vRtrIfSpiLoadBalancing": vRtrIfSpiLoadBalancing,
       "vRtrIfArpLimit": vRtrIfArpLimit,
       "vRtrIfArpLogOnly": vRtrIfArpLogOnly,
       "vRtrIfArpThreshold": vRtrIfArpThreshold,
       "vRtrIfVasIfType": vRtrIfVasIfType,
       "vRtrIfIpv6NbrLimit": vRtrIfIpv6NbrLimit,
       "vRtrIfIpv6NbrLogOnly": vRtrIfIpv6NbrLogOnly,
       "vRtrIfIpv6NbrThreshold": vRtrIfIpv6NbrThreshold,
       "vRtrIfDelayV4UpSeconds": vRtrIfDelayV4UpSeconds,
       "vRtrIfDelayV4DownSeconds": vRtrIfDelayV4DownSeconds,
       "vRtrIfDelayV6UpSeconds": vRtrIfDelayV6UpSeconds,
       "vRtrIfDelayV6DownSeconds": vRtrIfDelayV6DownSeconds,
       "vRtrIfDelayV4Timer": vRtrIfDelayV4Timer,
       "vRtrIfDelayV6Timer": vRtrIfDelayV6Timer,
       "vRtrIfInitDelayV4Enable": vRtrIfInitDelayV4Enable,
       "vRtrIfInitDelayV6Enable": vRtrIfInitDelayV6Enable,
       "vRtrIfOperV4DownReason": vRtrIfOperV4DownReason,
       "vRtrIfOperV6DownReason": vRtrIfOperV6DownReason,
       "vRtrIfLdpEolib": vRtrIfLdpEolib,
       "vRtrIfCreationOrigin": vRtrIfCreationOrigin,
       "vRtrIfIcmpV4ParamProblem": vRtrIfIcmpV4ParamProblem,
       "vRtrIfIcmpV4NumParamProblem": vRtrIfIcmpV4NumParamProblem,
       "vRtrIfIcmpV4ParamProblemTime": vRtrIfIcmpV4ParamProblemTime,
       "vRtrIfOperDCpuProtPolicy": vRtrIfOperDCpuProtPolicy,
       "vRtrIfUrpfSelectedVprnsOnly": vRtrIfUrpfSelectedVprnsOnly,
       "vRtrIfIpTunnelRemoteIpAddrType": vRtrIfIpTunnelRemoteIpAddrType,
       "vRtrIfIpTunnelRemoteIpAddr": vRtrIfIpTunnelRemoteIpAddr,
       "vRtrIfIpv4ArpLearnUnsol": vRtrIfIpv4ArpLearnUnsol,
       "vRtrIfIpv4ArpProRef": vRtrIfIpv4ArpProRef,
       "vRtrIfIpv6NdLearnUnsol": vRtrIfIpv6NdLearnUnsol,
       "vRtrIfIpv6NdProRef": vRtrIfIpv6NdProRef,
       "vRtrIfIpv6FlowLabelHashing": vRtrIfIpv6FlowLabelHashing,
       "vRtrIfIngressIPFilterPair": vRtrIfIngressIPFilterPair,
       "vRtrRsvpTunIfTableLastChanged": vRtrRsvpTunIfTableLastChanged,
       "vRtrRsvpTunIfEntryTable": vRtrRsvpTunIfEntryTable,
       "vRtrRsvpTunIfEntry": vRtrRsvpTunIfEntry,
       "vRtrRsvpTunIfLspName": vRtrRsvpTunIfLspName,
       "vRtrRsvpTunIfSenderAddrType": vRtrRsvpTunIfSenderAddrType,
       "vRtrRsvpTunIfSenderAddr": vRtrRsvpTunIfSenderAddr,
       "vRtrRsvpTunIfRowStatus": vRtrRsvpTunIfRowStatus,
       "vRtrRsvpTunIfLastChanged": vRtrRsvpTunIfLastChanged,
       "vRtrRsvpTunIfSessionId": vRtrRsvpTunIfSessionId,
       "vRtrRsvpTunIfTransmitInt": vRtrRsvpTunIfTransmitInt,
       "vRtrRsvpTunIfMultiplier": vRtrRsvpTunIfMultiplier,
       "vRtrRsvpTunIfStandbyLspName": vRtrRsvpTunIfStandbyLspName,
       "vRtrRsvpTunIfStandbyAddrType": vRtrRsvpTunIfStandbyAddrType,
       "vRtrRsvpTunIfStandbyAddr": vRtrRsvpTunIfStandbyAddr,
       "vRtrRsvpTunIfIfIndex": vRtrRsvpTunIfIfIndex,
       "vRtrRsvpTunIfHoldTimer": vRtrRsvpTunIfHoldTimer,
       "vRtrRsvpTunIfStandbySessionId": vRtrRsvpTunIfStandbySessionId,
       "vRtrRsvpTunIfStandbyIfIndex": vRtrRsvpTunIfStandbyIfIndex,
       "vRtrRsvpTunIfDescription": vRtrRsvpTunIfDescription,
       "vRtrRsvpTunIfSrcTableLastChanged": vRtrRsvpTunIfSrcTableLastChanged,
       "vRtrRsvpTunIfSrcEntryTable": vRtrRsvpTunIfSrcEntryTable,
       "vRtrRsvpTunIfSrcEntry": vRtrRsvpTunIfSrcEntry,
       "vRtrRsvpTunIfSrcAddrType": vRtrRsvpTunIfSrcAddrType,
       "vRtrRsvpTunIfSrcAddr": vRtrRsvpTunIfSrcAddr,
       "vRtrRsvpTunIfSrcRowStatus": vRtrRsvpTunIfSrcRowStatus,
       "vRtrRsvpTunIfSrcLastChanged": vRtrRsvpTunIfSrcLastChanged,
       "vRtrRsvpTunIfSrcBfdEnable": vRtrRsvpTunIfSrcBfdEnable,
       "vRtrRsvpTunIfSrcSessionId": vRtrRsvpTunIfSrcSessionId,
       "vRtrRsvpTunIfSrcTransmitInt": vRtrRsvpTunIfSrcTransmitInt,
       "vRtrRsvpTunIfSrcMultiplier": vRtrRsvpTunIfSrcMultiplier,
       "vRtrRsvpTunIfSrcStandbySessionId": vRtrRsvpTunIfSrcStandbySessionId,
       "vRtrLdpTunIfTableLastChanged": vRtrLdpTunIfTableLastChanged,
       "vRtrLdpTunIfEntryTable": vRtrLdpTunIfEntryTable,
       "vRtrLdpTunIfEntry": vRtrLdpTunIfEntry,
       "vRtrLdpTunIfP2mpId": vRtrLdpTunIfP2mpId,
       "vRtrLdpTunIfSenderAddrType": vRtrLdpTunIfSenderAddrType,
       "vRtrLdpTunIfSenderAddr": vRtrLdpTunIfSenderAddr,
       "vRtrLdpTunIfRowStatus": vRtrLdpTunIfRowStatus,
       "vRtrLdpTunIfLastChanged": vRtrLdpTunIfLastChanged,
       "vRtrLdpTunIfIfIndex": vRtrLdpTunIfIfIndex,
       "vRtrLdpTunIfDescription": vRtrLdpTunIfDescription,
       "vRtrLdpTunIfRootNode": vRtrLdpTunIfRootNode,
       "vRtrInetCidrRteTnlExtTable": vRtrInetCidrRteTnlExtTable,
       "vRtrInetCidrRteTnlExtEntry": vRtrInetCidrRteTnlExtEntry,
       "vRtrInetCidrRteTnlNextHopType": vRtrInetCidrRteTnlNextHopType,
       "vRtrInetCidrRteTnlNextHopOwner": vRtrInetCidrRteTnlNextHopOwner,
       "vRtrInetCidrRteTnlNextHopTnlId": vRtrInetCidrRteTnlNextHopTnlId,
       "vRtrInetCidrRteTnlEnabledTime": vRtrInetCidrRteTnlEnabledTime,
       "vRtrInetCidrRteTnlNextHopWeight": vRtrInetCidrRteTnlNextHopWeight,
       "tmnxVRtrMobGatewayObjs": tmnxVRtrMobGatewayObjs,
       "vRtrIpPoolTableLastChanged": vRtrIpPoolTableLastChanged,
       "vRtrIpPoolTable": vRtrIpPoolTable,
       "vRtrIpPoolEntry": vRtrIpPoolEntry,
       "vRtrIpPoolName": vRtrIpPoolName,
       "vRtrIpPoolRowStatus": vRtrIpPoolRowStatus,
       "vRtrIpPoolLastChanged": vRtrIpPoolLastChanged,
       "vRtrIpPoolDescription": vRtrIpPoolDescription,
       "vRtrIpPoolExclusive": vRtrIpPoolExclusive,
       "vRtrIpPoolAddressHoldTimer": vRtrIpPoolAddressHoldTimer,
       "vRtrIpPoolSuppress0and255": vRtrIpPoolSuppress0and255,
       "vRtrIpPoolIsRemote": vRtrIpPoolIsRemote,
       "vRtrIpPoolAddrTableLastChanged": vRtrIpPoolAddrTableLastChanged,
       "vRtrIpPoolAddrTable": vRtrIpPoolAddrTable,
       "vRtrIpPoolAddrEntry": vRtrIpPoolAddrEntry,
       "vRtrIpPoolAddrType": vRtrIpPoolAddrType,
       "vRtrIpPoolAddr": vRtrIpPoolAddr,
       "vRtrIpPoolAddrPrefixLen": vRtrIpPoolAddrPrefixLen,
       "vRtrIpPoolAddrRowStatus": vRtrIpPoolAddrRowStatus,
       "vRtrIpPoolAddrLastChanged": vRtrIpPoolAddrLastChanged,
       "vRtrIpPoolAddrBlock": vRtrIpPoolAddrBlock,
       "vRtrIpPoolAddrIpv6AssignedLen": vRtrIpPoolAddrIpv6AssignedLen,
       "vRtrIpPoolStatTable": vRtrIpPoolStatTable,
       "vRtrIpPoolStatEntry": vRtrIpPoolStatEntry,
       "vRtrIpPoolStatAllocated": vRtrIpPoolStatAllocated,
       "vRtrIpPoolStatFree": vRtrIpPoolStatFree,
       "vRtrIpPoolStatHeld": vRtrIpPoolStatHeld,
       "vRtrConfMobGwTableLastChanged": vRtrConfMobGwTableLastChanged,
       "vRtrConfMobGwTable": vRtrConfMobGwTable,
       "vRtrIfBfdExtTableLastChanged": vRtrIfBfdExtTableLastChanged,
       "vRtrIfBfdExtTable": vRtrIfBfdExtTable,
       "vRtrIfBfdExtEntry": vRtrIfBfdExtEntry,
       "vRtrIfBfdExtAddressType": vRtrIfBfdExtAddressType,
       "vRtrIfBfdExtAdminState": vRtrIfBfdExtAdminState,
       "vRtrIfBfdExtTransmitInterval": vRtrIfBfdExtTransmitInterval,
       "vRtrIfBfdExtReceiveInterval": vRtrIfBfdExtReceiveInterval,
       "vRtrIfBfdExtMultiplier": vRtrIfBfdExtMultiplier,
       "vRtrIfBfdExtEchoInterval": vRtrIfBfdExtEchoInterval,
       "vRtrIfBfdExtType": vRtrIfBfdExtType,
       "vRtrIfIpReasTable": vRtrIfIpReasTable,
       "vRtrIfIpReasEntry": vRtrIfIpReasEntry,
       "vRtrIfIpReasPortID": vRtrIfIpReasPortID,
       "vRtrIfIpReasContextValue": vRtrIfIpReasContextValue,
       "vRtrMsPwL2RtTable": vRtrMsPwL2RtTable,
       "vRtrMsPwL2RtEntry": vRtrMsPwL2RtEntry,
       "vRtrMsPwL2RtDestGlobalId": vRtrMsPwL2RtDestGlobalId,
       "vRtrMsPwL2RtDestPrefix": vRtrMsPwL2RtDestPrefix,
       "vRtrMsPwL2RtDestAcId": vRtrMsPwL2RtDestAcId,
       "vRtrMsPwL2RtDestPrefixLen": vRtrMsPwL2RtDestPrefixLen,
       "vRtrMsPwL2RtDestRD": vRtrMsPwL2RtDestRD,
       "vRtrMsPwL2RtNextHopAddrType": vRtrMsPwL2RtNextHopAddrType,
       "vRtrMsPwL2RtNextHopAddr": vRtrMsPwL2RtNextHopAddr,
       "vRtrMsPwL2RtNextHopOwner": vRtrMsPwL2RtNextHopOwner,
       "vRtrMsPwL2RtRDCommunity": vRtrMsPwL2RtRDCommunity,
       "vRtrMsPwL2RtIsBestRoute": vRtrMsPwL2RtIsBestRoute,
       "vRtrMsPwL2RtAge": vRtrMsPwL2RtAge,
       "vRtrIfStatsExtTable": vRtrIfStatsExtTable,
       "vRtrIfStatsExtEntry": vRtrIfStatsExtEntry,
       "vRtrIfTxPkts": vRtrIfTxPkts,
       "vRtrIfTxPktsLow32": vRtrIfTxPktsLow32,
       "vRtrIfTxPktsHigh32": vRtrIfTxPktsHigh32,
       "vRtrIfTxBytes": vRtrIfTxBytes,
       "vRtrIfTxBytesLow32": vRtrIfTxBytesLow32,
       "vRtrIfTxBytesHigh32": vRtrIfTxBytesHigh32,
       "vRtrIfRxMplsPkts": vRtrIfRxMplsPkts,
       "vRtrIfTxMplsPkts": vRtrIfTxMplsPkts,
       "vRtrIfRxMplsBytes": vRtrIfRxMplsBytes,
       "vRtrIfTxMplsBytes": vRtrIfTxMplsBytes,
       "vRtrIfTxNgeEncryptPkts": vRtrIfTxNgeEncryptPkts,
       "vRtrIfTxNgeEncryptBytes": vRtrIfTxNgeEncryptBytes,
       "vRtrIfRxNgeDecryptPkts": vRtrIfRxNgeDecryptPkts,
       "vRtrIfRxNgeDecryptBytes": vRtrIfRxNgeDecryptBytes,
       "vRtrIfRxNgeInvSpiDropPkts": vRtrIfRxNgeInvSpiDropPkts,
       "vRtrIfRxNgeInvSpiDropBytes": vRtrIfRxNgeInvSpiDropBytes,
       "vRtrIfRxNgeOthDropPkts": vRtrIfRxNgeOthDropPkts,
       "vRtrIfRxNgeOthDropBytes": vRtrIfRxNgeOthDropBytes,
       "vRtrIfRxNgeIcmpDropPkts": vRtrIfRxNgeIcmpDropPkts,
       "vRtrIfRxNgeIcmpDropBytes": vRtrIfRxNgeIcmpDropBytes,
       "vRtrIfAltRxMplsPkts": vRtrIfAltRxMplsPkts,
       "vRtrIfAltTxMplsPkts": vRtrIfAltTxMplsPkts,
       "vRtrIfAltRxMplsBytes": vRtrIfAltRxMplsBytes,
       "vRtrIfAltTxMplsBytes": vRtrIfAltTxMplsBytes,
       "vRtrIfTxV4DirectedBcastPktDrop": vRtrIfTxV4DirectedBcastPktDrop,
       "vRtrIfTxV4DirectedBcastByteDrop": vRtrIfTxV4DirectedBcastByteDrop,
       "vRtrIfRxV4IpHelperRedirectPkts": vRtrIfRxV4IpHelperRedirectPkts,
       "vRtrIfRxV4IpHelperRedirectBytes": vRtrIfRxV4IpHelperRedirectBytes,
       "vRtrIfRxIpMplsBytes": vRtrIfRxIpMplsBytes,
       "vRtrIfRxIpMplsPkts": vRtrIfRxIpMplsPkts,
       "vRtrIfTxIpMplsBytes": vRtrIfTxIpMplsBytes,
       "vRtrIfTxIpMplsPkts": vRtrIfTxIpMplsPkts,
       "vRtrStatExtTable": vRtrStatExtTable,
       "vRtrStatExtEntry": vRtrStatExtEntry,
       "vRtrISISAltRoutes": vRtrISISAltRoutes,
       "vRtrISISActiveAltRoutes": vRtrISISActiveAltRoutes,
       "vRtrBGPAltRoutes": vRtrBGPAltRoutes,
       "vRtrBGPActiveAltRoutes": vRtrBGPActiveAltRoutes,
       "vRtrStatCurrNumAltRoutes": vRtrStatCurrNumAltRoutes,
       "vRtrV6ISISAltRoutes": vRtrV6ISISAltRoutes,
       "vRtrV6ISISActiveAltRoutes": vRtrV6ISISActiveAltRoutes,
       "vRtrV6BGPAltRoutes": vRtrV6BGPAltRoutes,
       "vRtrV6BGPActiveAltRoutes": vRtrV6BGPActiveAltRoutes,
       "vRtrV6StatCurrNumAltRoutes": vRtrV6StatCurrNumAltRoutes,
       "vRtrBGPVPNAltRoutes": vRtrBGPVPNAltRoutes,
       "vRtrBGPVPNActiveAltRoutes": vRtrBGPVPNActiveAltRoutes,
       "vRtrV6BGPVPNAltRoutes": vRtrV6BGPVPNAltRoutes,
       "vRtrV6BGPVPNActiveAltRoutes": vRtrV6BGPVPNActiveAltRoutes,
       "vRtrOSPFAltRoutes": vRtrOSPFAltRoutes,
       "vRtrOSPFActiveAltRoutes": vRtrOSPFActiveAltRoutes,
       "vRtrV6OSPFAltRoutes": vRtrV6OSPFAltRoutes,
       "vRtrV6OSPFActiveAltRoutes": vRtrV6OSPFActiveAltRoutes,
       "vRtrOSPFv3Routes": vRtrOSPFv3Routes,
       "vRtrOSPFv3ActiveRoutes": vRtrOSPFv3ActiveRoutes,
       "vRtrOSPFv3AltRoutes": vRtrOSPFv3AltRoutes,
       "vRtrOSPFv3ActiveAltRoutes": vRtrOSPFv3ActiveAltRoutes,
       "vRtrStatTotalIsisTunnels": vRtrStatTotalIsisTunnels,
       "vRtrStatActiveIsisTunnels": vRtrStatActiveIsisTunnels,
       "vRtrStatTotalOspfTunnels": vRtrStatTotalOspfTunnels,
       "vRtrStatActiveOspfTunnels": vRtrStatActiveOspfTunnels,
       "vRtrV6LDPRoutes": vRtrV6LDPRoutes,
       "vRtrV6LDPActiveRoutes": vRtrV6LDPActiveRoutes,
       "vRtrStatTotalIsisV6Tunnels": vRtrStatTotalIsisV6Tunnels,
       "vRtrStatActiveIsisV6Tunnels": vRtrStatActiveIsisV6Tunnels,
       "vRtrStatTotalSrTeTunnels": vRtrStatTotalSrTeTunnels,
       "vRtrStatActiveSrTeTunnels": vRtrStatActiveSrTeTunnels,
       "vRtrStatTotalFpeTunnels": vRtrStatTotalFpeTunnels,
       "vRtrStatActiveFpeTunnels": vRtrStatActiveFpeTunnels,
       "vRtrStatTotalUdpTunnels": vRtrStatTotalUdpTunnels,
       "vRtrStatActiveUdpTunnels": vRtrStatActiveUdpTunnels,
       "vRtrStatArpRoutes": vRtrStatArpRoutes,
       "vRtrStatArpActiveRoutes": vRtrStatArpActiveRoutes,
       "vRtrStatNdRoutes": vRtrStatNdRoutes,
       "vRtrStatNdActiveRoutes": vRtrStatNdActiveRoutes,
       "vRtrStatTotalOspfv3Tunnels": vRtrStatTotalOspfv3Tunnels,
       "vRtrStatActiveOspfv3Tunnels": vRtrStatActiveOspfv3Tunnels,
       "vRtrStatTotalSrPolicyTunnels": vRtrStatTotalSrPolicyTunnels,
       "vRtrStatActiveSrPolicyTunnels": vRtrStatActiveSrPolicyTunnels,
       "vRtrStatTotalRibApiV4Routes": vRtrStatTotalRibApiV4Routes,
       "vRtrStatActiveRibApiV4Routes": vRtrStatActiveRibApiV4Routes,
       "vRtrStatTotalRibApiV6Routes": vRtrStatTotalRibApiV6Routes,
       "vRtrStatActiveRibApiV6Routes": vRtrStatActiveRibApiV6Routes,
       "vRtrStatTotalRibApiV4Tunnels": vRtrStatTotalRibApiV4Tunnels,
       "vRtrStatActiveRibApiV4Tunnels": vRtrStatActiveRibApiV4Tunnels,
       "vRtrStatTotalRibApiV6Tunnels": vRtrStatTotalRibApiV6Tunnels,
       "vRtrStatActiveRibApiV6Tunnels": vRtrStatActiveRibApiV6Tunnels,
       "vRtrStatTotMplsFwdPlcyV4Tunnels": vRtrStatTotMplsFwdPlcyV4Tunnels,
       "vRtrStatActMplsFwdPlcyV4Tunnels": vRtrStatActMplsFwdPlcyV4Tunnels,
       "vRtrStatTotMplsFwdPlcyV6Tunnels": vRtrStatTotMplsFwdPlcyV6Tunnels,
       "vRtrStatActMplsFwdPlcyV6Tunnels": vRtrStatActMplsFwdPlcyV6Tunnels,
       "vRtrStatTotalOspfv3IPv6Tunnels": vRtrStatTotalOspfv3IPv6Tunnels,
       "vRtrStatActiveOspfv3IPv6Tunnels": vRtrStatActiveOspfv3IPv6Tunnels,
       "vRtrDHCPRoutes": vRtrDHCPRoutes,
       "vRtrDHCPActiveRoutes": vRtrDHCPActiveRoutes,
       "vRtrV6DHCPRoutes": vRtrV6DHCPRoutes,
       "vRtrV6DHCPActiveRoutes": vRtrV6DHCPActiveRoutes,
       "vRtrStatActiveSrPolicyV6Tunnels": vRtrStatActiveSrPolicyV6Tunnels,
       "vRtrStatTotalSrPolicyV6Tunnels": vRtrStatTotalSrPolicyV6Tunnels,
       "vRtrStatTotalSrTeV6Tunnels": vRtrStatTotalSrTeV6Tunnels,
       "vRtrStatActiveSrTeV6Tunnels": vRtrStatActiveSrTeV6Tunnels,
       "vRtrBgpEvpnIflRoutes": vRtrBgpEvpnIflRoutes,
       "vRtrBgpEvpnIflActRoutes": vRtrBgpEvpnIflActRoutes,
       "vRtrBgpEvpnIflAltRoutes": vRtrBgpEvpnIflAltRoutes,
       "vRtrBgpEvpnIflActAltRoutes": vRtrBgpEvpnIflActAltRoutes,
       "vRtrV6BgpEvpnIflRoutes": vRtrV6BgpEvpnIflRoutes,
       "vRtrV6BgpEvpnIflActRoutes": vRtrV6BgpEvpnIflActRoutes,
       "vRtrV6BgpEvpnIflAltRoutes": vRtrV6BgpEvpnIflAltRoutes,
       "vRtrV6BgpEvpnIflActAltRoutes": vRtrV6BgpEvpnIflActAltRoutes,
       "vRtrBgpEvpnIffRoutes": vRtrBgpEvpnIffRoutes,
       "vRtrBgpEvpnIffActRoutes": vRtrBgpEvpnIffActRoutes,
       "vRtrV6BgpEvpnIffRoutes": vRtrV6BgpEvpnIffRoutes,
       "vRtrV6BgpEvpnIffActRoutes": vRtrV6BgpEvpnIffActRoutes,
       "vRtrMtrace2OperState": vRtrMtrace2OperState,
       "vRtrStatActiveSrV6IsisTunnels": vRtrStatActiveSrV6IsisTunnels,
       "vRtrStatTotalSrV6IsisTunnels": vRtrStatTotalSrV6IsisTunnels,
       "vRtrStatSrV6ActiveRoutes": vRtrStatSrV6ActiveRoutes,
       "vRtrStatSrV6TotalRoutes": vRtrStatSrV6TotalRoutes,
       "vRtrVrfPolicyTable": vRtrVrfPolicyTable,
       "vRtrVrfPolicyEntry": vRtrVrfPolicyEntry,
       "vRtrVrfImportPolicy1": vRtrVrfImportPolicy1,
       "vRtrVrfImportPolicy2": vRtrVrfImportPolicy2,
       "vRtrVrfImportPolicy3": vRtrVrfImportPolicy3,
       "vRtrVrfImportPolicy4": vRtrVrfImportPolicy4,
       "vRtrVrfImportPolicy5": vRtrVrfImportPolicy5,
       "vRtrVrfImportPolicy6": vRtrVrfImportPolicy6,
       "vRtrVrfImportPolicy7": vRtrVrfImportPolicy7,
       "vRtrVrfImportPolicy8": vRtrVrfImportPolicy8,
       "vRtrVrfImportPolicy9": vRtrVrfImportPolicy9,
       "vRtrVrfImportPolicy10": vRtrVrfImportPolicy10,
       "vRtrVrfImportPolicy11": vRtrVrfImportPolicy11,
       "vRtrVrfImportPolicy12": vRtrVrfImportPolicy12,
       "vRtrVrfImportPolicy13": vRtrVrfImportPolicy13,
       "vRtrVrfImportPolicy14": vRtrVrfImportPolicy14,
       "vRtrVrfImportPolicy15": vRtrVrfImportPolicy15,
       "vRtrVrfExportPolicy1": vRtrVrfExportPolicy1,
       "vRtrVrfExportPolicy2": vRtrVrfExportPolicy2,
       "vRtrVrfExportPolicy3": vRtrVrfExportPolicy3,
       "vRtrVrfExportPolicy4": vRtrVrfExportPolicy4,
       "vRtrVrfExportPolicy5": vRtrVrfExportPolicy5,
       "vRtrVrfExportPolicy6": vRtrVrfExportPolicy6,
       "vRtrVrfExportPolicy7": vRtrVrfExportPolicy7,
       "vRtrVrfExportPolicy8": vRtrVrfExportPolicy8,
       "vRtrVrfExportPolicy9": vRtrVrfExportPolicy9,
       "vRtrVrfExportPolicy10": vRtrVrfExportPolicy10,
       "vRtrVrfExportPolicy11": vRtrVrfExportPolicy11,
       "vRtrVrfExportPolicy12": vRtrVrfExportPolicy12,
       "vRtrVrfExportPolicy13": vRtrVrfExportPolicy13,
       "vRtrVrfExportPolicy14": vRtrVrfExportPolicy14,
       "vRtrVrfExportPolicy15": vRtrVrfExportPolicy15,
       "vRtrVrfPlcyCreationOrigin": vRtrVrfPlcyCreationOrigin,
       "vRtrMvpnVrfPolicyTable": vRtrMvpnVrfPolicyTable,
       "vRtrMvpnVrfPolicyEntry": vRtrMvpnVrfPolicyEntry,
       "vRtrMvpnVrfImportPolicy1": vRtrMvpnVrfImportPolicy1,
       "vRtrMvpnVrfImportPolicy2": vRtrMvpnVrfImportPolicy2,
       "vRtrMvpnVrfImportPolicy3": vRtrMvpnVrfImportPolicy3,
       "vRtrMvpnVrfImportPolicy4": vRtrMvpnVrfImportPolicy4,
       "vRtrMvpnVrfImportPolicy5": vRtrMvpnVrfImportPolicy5,
       "vRtrMvpnVrfImportPolicy6": vRtrMvpnVrfImportPolicy6,
       "vRtrMvpnVrfImportPolicy7": vRtrMvpnVrfImportPolicy7,
       "vRtrMvpnVrfImportPolicy8": vRtrMvpnVrfImportPolicy8,
       "vRtrMvpnVrfImportPolicy9": vRtrMvpnVrfImportPolicy9,
       "vRtrMvpnVrfImportPolicy10": vRtrMvpnVrfImportPolicy10,
       "vRtrMvpnVrfImportPolicy11": vRtrMvpnVrfImportPolicy11,
       "vRtrMvpnVrfImportPolicy12": vRtrMvpnVrfImportPolicy12,
       "vRtrMvpnVrfImportPolicy13": vRtrMvpnVrfImportPolicy13,
       "vRtrMvpnVrfImportPolicy14": vRtrMvpnVrfImportPolicy14,
       "vRtrMvpnVrfImportPolicy15": vRtrMvpnVrfImportPolicy15,
       "vRtrMvpnVrfExportPolicy1": vRtrMvpnVrfExportPolicy1,
       "vRtrMvpnVrfExportPolicy2": vRtrMvpnVrfExportPolicy2,
       "vRtrMvpnVrfExportPolicy3": vRtrMvpnVrfExportPolicy3,
       "vRtrMvpnVrfExportPolicy4": vRtrMvpnVrfExportPolicy4,
       "vRtrMvpnVrfExportPolicy5": vRtrMvpnVrfExportPolicy5,
       "vRtrMvpnVrfExportPolicy6": vRtrMvpnVrfExportPolicy6,
       "vRtrMvpnVrfExportPolicy7": vRtrMvpnVrfExportPolicy7,
       "vRtrMvpnVrfExportPolicy8": vRtrMvpnVrfExportPolicy8,
       "vRtrMvpnVrfExportPolicy9": vRtrMvpnVrfExportPolicy9,
       "vRtrMvpnVrfExportPolicy10": vRtrMvpnVrfExportPolicy10,
       "vRtrMvpnVrfExportPolicy11": vRtrMvpnVrfExportPolicy11,
       "vRtrMvpnVrfExportPolicy12": vRtrMvpnVrfExportPolicy12,
       "vRtrMvpnVrfExportPolicy13": vRtrMvpnVrfExportPolicy13,
       "vRtrMvpnVrfExportPolicy14": vRtrMvpnVrfExportPolicy14,
       "vRtrMvpnVrfExportPolicy15": vRtrMvpnVrfExportPolicy15,
       "vRtrIfQosTable": vRtrIfQosTable,
       "vRtrIfQosEntry": vRtrIfQosEntry,
       "vRtrIfQosNetworkPolicyId": vRtrIfQosNetworkPolicyId,
       "vRtrIfQosEgrPortRedirectQGrp": vRtrIfQosEgrPortRedirectQGrp,
       "vRtrIfQosEgrQGrpInstanceId": vRtrIfQosEgrQGrpInstanceId,
       "vRtrIfQosIngFpRedirectQGrp": vRtrIfQosIngFpRedirectQGrp,
       "vRtrIfQosIngQGrpInstanceId": vRtrIfQosIngQGrpInstanceId,
       "vRtrIfQosEgrVlanQosPlcy": vRtrIfQosEgrVlanQosPlcy,
       "vRtrIfQosEgrRemarkPlcy": vRtrIfQosEgrRemarkPlcy,
       "vRtrIfQosNetworkIngressPolicy": vRtrIfQosNetworkIngressPolicy,
       "vRtrIfQosEgrAggRatePIRLmt": vRtrIfQosEgrAggRatePIRLmt,
       "vRtrIfQosEgrAggRateCIRLmt": vRtrIfQosEgrAggRateCIRLmt,
       "vRtrIfQosEgrOperVlanQosPlcy": vRtrIfQosEgrOperVlanQosPlcy,
       "vRtrIfQosEgrVlanPlcyPortRedirect": vRtrIfQosEgrVlanPlcyPortRedirect,
       "vRtrDnsTableLastCh": vRtrDnsTableLastCh,
       "vRtrDnsTable": vRtrDnsTable,
       "vRtrDnsEntry": vRtrDnsEntry,
       "vRtrDnsLastCh": vRtrDnsLastCh,
       "vRtrDnsRowStatus": vRtrDnsRowStatus,
       "vRtrDnsAdminState": vRtrDnsAdminState,
       "vRtrDnsPrimaryAddrType": vRtrDnsPrimaryAddrType,
       "vRtrDnsPrimaryAddr": vRtrDnsPrimaryAddr,
       "vRtrDnsSecondaryAddrType": vRtrDnsSecondaryAddrType,
       "vRtrDnsSecondaryAddr": vRtrDnsSecondaryAddr,
       "vRtrDnsTertiaryAddrType": vRtrDnsTertiaryAddrType,
       "vRtrDnsTertiaryAddr": vRtrDnsTertiaryAddr,
       "vRtrDnsIpv4SourceAddr": vRtrDnsIpv4SourceAddr,
       "vRtrDnsIpv6SourceAddr": vRtrDnsIpv6SourceAddr,
       "vRtrDnsDefaultDomainName": vRtrDnsDefaultDomainName,
       "vRtrInetAllCidrRouteTnlExtTable": vRtrInetAllCidrRouteTnlExtTable,
       "vRtrInetAllCidrRouteTnlExtEntry": vRtrInetAllCidrRouteTnlExtEntry,
       "vRtrInetAllCidrRteTnlNxtHopType": vRtrInetAllCidrRteTnlNxtHopType,
       "vRtrInetAllCidrRteTnlNxtHopOwner": vRtrInetAllCidrRteTnlNxtHopOwner,
       "vRtrInetAllCidrRteTnlNxtHopTnlId": vRtrInetAllCidrRteTnlNxtHopTnlId,
       "vRtrInetAllCidrRteTnlEnabledTime": vRtrInetAllCidrRteTnlEnabledTime,
       "vRtrRsmTableLastCh": vRtrRsmTableLastCh,
       "vRtrRsmTable": vRtrRsmTable,
       "vRtrRsmEntry": vRtrRsmEntry,
       "vRtrRsmLastCh": vRtrRsmLastCh,
       "vRtrRsmRowStatus": vRtrRsmRowStatus,
       "vRtrRsmGroup": vRtrRsmGroup,
       "vRtrRsmToBaseNetwork": vRtrRsmToBaseNetwork,
       "vRtrIfLocalPoolTable": vRtrIfLocalPoolTable,
       "vRtrIfLocalPoolEntry": vRtrIfLocalPoolEntry,
       "vRtrIfLocalPoolAdminState": vRtrIfLocalPoolAdminState,
       "vRtrIfLocalPoolServerName": vRtrIfLocalPoolServerName,
       "vRtrIfLocalPoolClientApps": vRtrIfLocalPoolClientApps,
       "vRtrIfLocalPoolDefPoolName": vRtrIfLocalPoolDefPoolName,
       "vRtrIfLocalPoolSecPoolName": vRtrIfLocalPoolSecPoolName,
       "vRtrIfLocalPoolV6ServerName": vRtrIfLocalPoolV6ServerName,
       "vRtrIfLocalPoolV6ClientApps": vRtrIfLocalPoolV6ClientApps,
       "vRtrIfDcpFpStaticStatTable": vRtrIfDcpFpStaticStatTable,
       "vRtrIfDcpFpStaticStatEntry": vRtrIfDcpFpStaticStatEntry,
       "vRtrIfDcpFpStaticPlcrName": vRtrIfDcpFpStaticPlcrName,
       "vRtrIfDcpFpStaticState": vRtrIfDcpFpStaticState,
       "vRtrIfDcpFpStaticExcdCount": vRtrIfDcpFpStaticExcdCount,
       "vRtrIfDcpFpStaticExcdCountHi": vRtrIfDcpFpStaticExcdCountHi,
       "vRtrIfDcpFpStaticExcdCountLo": vRtrIfDcpFpStaticExcdCountLo,
       "vRtrIfDcpFpStaticHoldDown": vRtrIfDcpFpStaticHoldDown,
       "vRtrIfDcpFpStaticDetectionTime": vRtrIfDcpFpStaticDetectionTime,
       "vRtrIfDcpFpDynStatTable": vRtrIfDcpFpDynStatTable,
       "vRtrIfDcpFpDynStatEntry": vRtrIfDcpFpDynStatEntry,
       "vRtrIfDcpFpProtocol": vRtrIfDcpFpProtocol,
       "vRtrIfDcpFpDynState": vRtrIfDcpFpDynState,
       "vRtrIfDcpFpDynExcdCount": vRtrIfDcpFpDynExcdCount,
       "vRtrIfDcpFpDynExcdCountHi": vRtrIfDcpFpDynExcdCountHi,
       "vRtrIfDcpFpDynExcdCountLo": vRtrIfDcpFpDynExcdCountLo,
       "vRtrIfDcpFpDynHoldDown": vRtrIfDcpFpDynHoldDown,
       "vRtrIfDcpFpDynDetectionTime": vRtrIfDcpFpDynDetectionTime,
       "vRtrIfDcpFpDynAllocated": vRtrIfDcpFpDynAllocated,
       "vRtrIfDcpFpLocMonStatTable": vRtrIfDcpFpLocMonStatTable,
       "vRtrIfDcpFpLocMonStatEntry": vRtrIfDcpFpLocMonStatEntry,
       "vRtrIfDcpFpLocMonPlcrName": vRtrIfDcpFpLocMonPlcrName,
       "vRtrIfDcpFpLocMonState": vRtrIfDcpFpLocMonState,
       "vRtrIfDcpFpLocMonExcdCount": vRtrIfDcpFpLocMonExcdCount,
       "vRtrIfDcpFpLocMonExcdCountHi": vRtrIfDcpFpLocMonExcdCountHi,
       "vRtrIfDcpFpLocMonExcdCountLo": vRtrIfDcpFpLocMonExcdCountLo,
       "vRtrIfDcpFpLocMonAllDynAlloc": vRtrIfDcpFpLocMonAllDynAlloc,
       "vRtrIfDHCP6ProxyDuidTableLastCh": vRtrIfDHCP6ProxyDuidTableLastCh,
       "vRtrIfDHCP6ProxyDuidTable": vRtrIfDHCP6ProxyDuidTable,
       "vRtrIfDHCP6ProxyDuidEntry": vRtrIfDHCP6ProxyDuidEntry,
       "vRtrIfDHCP6ProxyDuidLastChanged": vRtrIfDHCP6ProxyDuidLastChanged,
       "vRtrIfDHCP6ProxyDuidTypeCode": vRtrIfDHCP6ProxyDuidTypeCode,
       "vRtrIfDHCP6ProxyDuidEnNumber": vRtrIfDHCP6ProxyDuidEnNumber,
       "vRtrIfDHCP6ProxyDuidEnIdData": vRtrIfDHCP6ProxyDuidEnIdData,
       "vRtrIfDHCP6ProxyDuidEnIdDataType": vRtrIfDHCP6ProxyDuidEnIdDataType,
       "vRtrIfMacAccountingStatsTable": vRtrIfMacAccountingStatsTable,
       "vRtrIfMacAccountingStatsEntry": vRtrIfMacAccountingStatsEntry,
       "vRtrIfSourceMacAddress": vRtrIfSourceMacAddress,
       "vRtrIfMacAccountingInOctets": vRtrIfMacAccountingInOctets,
       "vRtrIfMacAccountingInOctetsL": vRtrIfMacAccountingInOctetsL,
       "vRtrIfMacAccountingInOctetsH": vRtrIfMacAccountingInOctetsH,
       "vRtrIfMacAccountingInFrames": vRtrIfMacAccountingInFrames,
       "vRtrIfMacAccountingInFramesL": vRtrIfMacAccountingInFramesL,
       "vRtrIfMacAccountingInFramesH": vRtrIfMacAccountingInFramesH,
       "vRtrIfMacAccountingOutOctets": vRtrIfMacAccountingOutOctets,
       "vRtrIfMacAccountingOutOctetsL": vRtrIfMacAccountingOutOctetsL,
       "vRtrIfMacAccountingOutOctetsH": vRtrIfMacAccountingOutOctetsH,
       "vRtrIfMacAccountingOutFrames": vRtrIfMacAccountingOutFrames,
       "vRtrIfMacAccountingOutFramesL": vRtrIfMacAccountingOutFramesL,
       "vRtrIfMacAccountingOutFramesH": vRtrIfMacAccountingOutFramesH,
       "vRtrIpv6RtrAdvertTable": vRtrIpv6RtrAdvertTable,
       "vRtrIpv6RtrAdvertEntry": vRtrIpv6RtrAdvertEntry,
       "vRtrIpv6RtrAdvertCreationOrigin": vRtrIpv6RtrAdvertCreationOrigin,
       "vRtrIfBfdSessExtTable": vRtrIfBfdSessExtTable,
       "vRtrIfBfdSessExtEntry": vRtrIfBfdSessExtEntry,
       "vRtrIfBfdSessExtLinkType": vRtrIfBfdSessExtLinkType,
       "vRtrIfBfdSessExtRxInfoId": vRtrIfBfdSessExtRxInfoId,
       "vRtrIfBfdSessExtLclAddrType": vRtrIfBfdSessExtLclAddrType,
       "vRtrIfBfdSessExtLclAddr": vRtrIfBfdSessExtLclAddr,
       "vRtrIfBfdSessExtRemAddrType": vRtrIfBfdSessExtRemAddrType,
       "vRtrIfBfdSessExtRemAddr": vRtrIfBfdSessExtRemAddr,
       "vRtrIfBfdSessExtOperState": vRtrIfBfdSessExtOperState,
       "vRtrIfBfdSessExtState": vRtrIfBfdSessExtState,
       "vRtrIfBfdSessExtOperFlags": vRtrIfBfdSessExtOperFlags,
       "vRtrIfBfdSessExtMesgRecv": vRtrIfBfdSessExtMesgRecv,
       "vRtrIfBfdSessExtMesgSent": vRtrIfBfdSessExtMesgSent,
       "vRtrIfBfdSessExtLastDownTime": vRtrIfBfdSessExtLastDownTime,
       "vRtrIfBfdSessExtLastUpTime": vRtrIfBfdSessExtLastUpTime,
       "vRtrIfBfdSessExtUpCount": vRtrIfBfdSessExtUpCount,
       "vRtrIfBfdSessExtDownCount": vRtrIfBfdSessExtDownCount,
       "vRtrIfBfdSessExtLclDisc": vRtrIfBfdSessExtLclDisc,
       "vRtrIfBfdSessExtRemDisc": vRtrIfBfdSessExtRemDisc,
       "vRtrIfBfdSessExtProtocols": vRtrIfBfdSessExtProtocols,
       "vRtrIfBfdSessExtTxInterval": vRtrIfBfdSessExtTxInterval,
       "vRtrIfBfdSessExtRxInterval": vRtrIfBfdSessExtRxInterval,
       "vRtrIfBfdSessExtType": vRtrIfBfdSessExtType,
       "vRtrIfBfdSessExtVerMismatch": vRtrIfBfdSessExtVerMismatch,
       "vRtrIfBfdSessExtTimeSinceLastRx": vRtrIfBfdSessExtTimeSinceLastRx,
       "vRtrIfBfdSessExtTimeSinceLastTx": vRtrIfBfdSessExtTimeSinceLastTx,
       "vRtrIfBfdSessExtRemoteLspNum": vRtrIfBfdSessExtRemoteLspNum,
       "vRtrIfBfdSessExtRemoteTunnelNum": vRtrIfBfdSessExtRemoteTunnelNum,
       "vRtrIfBfdSessExtRemoteNodeId": vRtrIfBfdSessExtRemoteNodeId,
       "vRtrIfBfdSessExtRemoteGlobalId": vRtrIfBfdSessExtRemoteGlobalId,
       "vRtrIfBfdSessExtLspPathTunnelId": vRtrIfBfdSessExtLspPathTunnelId,
       "vRtrIfBfdSessExtLspPathId": vRtrIfBfdSessExtLspPathId,
       "vRtrIfBfdSessExtSvcId": vRtrIfBfdSessExtSvcId,
       "vRtrIfBfdSessExtSdpBindId": vRtrIfBfdSessExtSdpBindId,
       "tmnxVrtrIfAdminGrpTableLastCh": tmnxVrtrIfAdminGrpTableLastCh,
       "tmnxVrtrIfAdminGroupTable": tmnxVrtrIfAdminGroupTable,
       "tmnxVrtrIfAdminGroupEntry": tmnxVrtrIfAdminGroupEntry,
       "tmnxVrtrIfAdminGroupRowStatus": tmnxVrtrIfAdminGroupRowStatus,
       "tmnxVrtrIfAdminGroupLastCh": tmnxVrtrIfAdminGroupLastCh,
       "tmnxVrtrIfSrlgGrpTableLastCh": tmnxVrtrIfSrlgGrpTableLastCh,
       "tmnxVrtrIfSrlgGroupTable": tmnxVrtrIfSrlgGroupTable,
       "tmnxVrtrIfSrlgGroupEntry": tmnxVrtrIfSrlgGroupEntry,
       "tmnxVrtrIfSrlgGroupRowStatus": tmnxVrtrIfSrlgGroupRowStatus,
       "tmnxVrtrIfSrlgGroupLastCh": tmnxVrtrIfSrlgGroupLastCh,
       "vRtrIfSendTableLastChanged": vRtrIfSendTableLastChanged,
       "vRtrIfSendTable": vRtrIfSendTable,
       "vRtrIfSendEntry": vRtrIfSendEntry,
       "vRtrIfSendLastChanged": vRtrIfSendLastChanged,
       "vRtrIfSendAdminState": vRtrIfSendAdminState,
       "vRtrIfSendAllowUnsecuredMsgs": vRtrIfSendAllowUnsecuredMsgs,
       "vRtrIfSendCgaSecurityParameter": vRtrIfSendCgaSecurityParameter,
       "vRtrIfSendCgaVerificationMinbits": vRtrIfSendCgaVerificationMinbits,
       "vRtrIfSendLinkLocalCgaModifier": vRtrIfSendLinkLocalCgaModifier,
       "tmnxAdminGroupTblLastCh": tmnxAdminGroupTblLastCh,
       "tmnxAdminGroupTable": tmnxAdminGroupTable,
       "tmnxAdminGroupEntry": tmnxAdminGroupEntry,
       "tmnxAdminGrpName": tmnxAdminGrpName,
       "tmnxAdminGrpRowStatus": tmnxAdminGrpRowStatus,
       "tmnxAdminGrpRowLstChng": tmnxAdminGrpRowLstChng,
       "tmnxAdminGrpValue": tmnxAdminGrpValue,
       "tmnxSrlgGroupTblLastCh": tmnxSrlgGroupTblLastCh,
       "tmnxSrlgGroupTable": tmnxSrlgGroupTable,
       "tmnxSrlgGroupEntry": tmnxSrlgGroupEntry,
       "tmnxSrlgGrpName": tmnxSrlgGrpName,
       "tmnxSrlgGrpRowStatus": tmnxSrlgGrpRowStatus,
       "tmnxSrlgGrpRowLstChng": tmnxSrlgGrpRowLstChng,
       "tmnxSrlgGrpValue": tmnxSrlgGrpValue,
       "tmnxSrlgGrpPenaltyWeight": tmnxSrlgGrpPenaltyWeight,
       "vRtrPlcyAcctTemplTblLastChanged": vRtrPlcyAcctTemplTblLastChanged,
       "vRtrPlcyAcctTemplateTable": vRtrPlcyAcctTemplateTable,
       "vRtrPlcyAcctTemplateEntry": vRtrPlcyAcctTemplateEntry,
       "vRtrPlcyAcctTemplateName": vRtrPlcyAcctTemplateName,
       "vRtrPlcyAcctTemplateRowStatus": vRtrPlcyAcctTemplateRowStatus,
       "vRtrPlcyAcctTemplateLastChgd": vRtrPlcyAcctTemplateLastChgd,
       "vRtrPlcyAcctSrcClassTblLstChgd": vRtrPlcyAcctSrcClassTblLstChgd,
       "vRtrPlcyAcctSrcClassTable": vRtrPlcyAcctSrcClassTable,
       "vRtrPlcyAcctSrcClassEntry": vRtrPlcyAcctSrcClassEntry,
       "vRtrPlcyAcctSrcClassIndex": vRtrPlcyAcctSrcClassIndex,
       "vRtrPlcyAcctSrcClassRowStatus": vRtrPlcyAcctSrcClassRowStatus,
       "vRtrPlcyAcctSrcClassLastChgd": vRtrPlcyAcctSrcClassLastChgd,
       "vRtrPlcyAcctDestClassTblLstChgd": vRtrPlcyAcctDestClassTblLstChgd,
       "vRtrPlcyAcctDestClassTable": vRtrPlcyAcctDestClassTable,
       "vRtrPlcyAcctDestClassEntry": vRtrPlcyAcctDestClassEntry,
       "vRtrPlcyAcctDestClassIndex": vRtrPlcyAcctDestClassIndex,
       "vRtrPlcyAcctDestClassRowStatus": vRtrPlcyAcctDestClassRowStatus,
       "vRtrPlcyAcctDestClassLastChgd": vRtrPlcyAcctDestClassLastChgd,
       "vRtrPlcyAcctDestClassPolicerId": vRtrPlcyAcctDestClassPolicerId,
       "vRtrPlcyAcctIfStatsTblLstChgd": vRtrPlcyAcctIfStatsTblLstChgd,
       "vRtrPlcyAcctInterfaceStatsTable": vRtrPlcyAcctInterfaceStatsTable,
       "vRtrPlcyAcctInterfaceStatsEntry": vRtrPlcyAcctInterfaceStatsEntry,
       "vRtrPlcyAcctType": vRtrPlcyAcctType,
       "vRtrPlcyAcctIndex": vRtrPlcyAcctIndex,
       "vRtrPlcyAcctRxFwdPkts": vRtrPlcyAcctRxFwdPkts,
       "vRtrPlcyAcctRxFwdBytes": vRtrPlcyAcctRxFwdBytes,
       "vRtrPlcyAcctRxIncompleteCnt": vRtrPlcyAcctRxIncompleteCnt,
       "vRtrIfBfdSessSdpBindTable": vRtrIfBfdSessSdpBindTable,
       "vRtrIfBfdSessSdpBindEntry": vRtrIfBfdSessSdpBindEntry,
       "vRtrIfBfdSessSdpBindIndex": vRtrIfBfdSessSdpBindIndex,
       "vRtrRATable": vRtrRATable,
       "vRtrRAEntry": vRtrRAEntry,
       "vRtrRARowStatus": vRtrRARowStatus,
       "vRtrRADnsOptServer1": vRtrRADnsOptServer1,
       "vRtrRADnsOptServer2": vRtrRADnsOptServer2,
       "vRtrRADnsOptServer3": vRtrRADnsOptServer3,
       "vRtrRADnsOptServer4": vRtrRADnsOptServer4,
       "vRtrRADnsOptRdnssLtime": vRtrRADnsOptRdnssLtime,
       "vRtrRAIfTable": vRtrRAIfTable,
       "vRtrRAIfEntry": vRtrRAIfEntry,
       "vRtrRAIfRowStatus": vRtrRAIfRowStatus,
       "vRtrRAIfDnsOptServer1": vRtrRAIfDnsOptServer1,
       "vRtrRAIfDnsOptServer2": vRtrRAIfDnsOptServer2,
       "vRtrRAIfDnsOptServer3": vRtrRAIfDnsOptServer3,
       "vRtrRAIfDnsOptServer4": vRtrRAIfDnsOptServer4,
       "vRtrRAIfDnsOptRdnssLtime": vRtrRAIfDnsOptRdnssLtime,
       "vRtrRAIfDnsOptInclDns": vRtrRAIfDnsOptInclDns,
       "vRtrTTLPropTblLstChgd": vRtrTTLPropTblLstChgd,
       "vRtrTTLPropTable": vRtrTTLPropTable,
       "vRtrTTLPropEntry": vRtrTTLPropEntry,
       "vRtrTTLPropVprnLocal": vRtrTTLPropVprnLocal,
       "vRtrTTLPropVprnTransit": vRtrTTLPropVprnTransit,
       "vRtrTTLPropLabelRouteLocal": vRtrTTLPropLabelRouteLocal,
       "vRtrTTLPropLabelRouteTransit": vRtrTTLPropLabelRouteTransit,
       "vRtrTTLPropLsrLabelRoute": vRtrTTLPropLsrLabelRoute,
       "vRtrSvcTTLPropTblLstChgd": vRtrSvcTTLPropTblLstChgd,
       "vRtrSvcTTLPropTable": vRtrSvcTTLPropTable,
       "vRtrSvcTTLPropEntry": vRtrSvcTTLPropEntry,
       "vRtrSvcTTLPropVprnLocal": vRtrSvcTTLPropVprnLocal,
       "vRtrSvcTTLPropVprnTransit": vRtrSvcTTLPropVprnTransit,
       "vRtrInetTunnelTable": vRtrInetTunnelTable,
       "vRtrInetTunnelEntry": vRtrInetTunnelEntry,
       "vRtrInetTunnelDestAddrType": vRtrInetTunnelDestAddrType,
       "vRtrInetTunnelDestAddr": vRtrInetTunnelDestAddr,
       "vRtrInetTunnelDestPfxLen": vRtrInetTunnelDestPfxLen,
       "vRtrInetTunnelPreference": vRtrInetTunnelPreference,
       "vRtrInetTunnelType": vRtrInetTunnelType,
       "vRtrInetTunnelTypeInstance": vRtrInetTunnelTypeInstance,
       "vRtrInetTunnelID": vRtrInetTunnelID,
       "vRtrInetTunnelNextHopAddrType": vRtrInetTunnelNextHopAddrType,
       "vRtrInetTunnelNextHopAddr": vRtrInetTunnelNextHopAddr,
       "vRtrInetTunnelMetric": vRtrInetTunnelMetric,
       "vRtrInetTunnelAge": vRtrInetTunnelAge,
       "vRtrInetTunnelNextHopFlags": vRtrInetTunnelNextHopFlags,
       "vRtrInetTunnelLspBandwidth": vRtrInetTunnelLspBandwidth,
       "vRtrInetTunnelMTU": vRtrInetTunnelMTU,
       "vRtrInetTunnelLspWeight": vRtrInetTunnelLspWeight,
       "vRtrInetTunnelLspId": vRtrInetTunnelLspId,
       "vRtrInetTunnelFlags": vRtrInetTunnelFlags,
       "vRtrInetTunnelRelativeMetric": vRtrInetTunnelRelativeMetric,
       "vRtrInetTunnelLabel": vRtrInetTunnelLabel,
       "vRtrInetTunnelBypassLabel": vRtrInetTunnelBypassLabel,
       "vRtrInetTunnelLspFC": vRtrInetTunnelLspFC,
       "vRtrInetTunnelMaxLabels": vRtrInetTunnelMaxLabels,
       "vRtrInetTunnelNhTunnelId": vRtrInetTunnelNhTunnelId,
       "vRtrInetTunnelNhTunnelType": vRtrInetTunnelNhTunnelType,
       "vRtrInetTunnelNhTunnelInst": vRtrInetTunnelNhTunnelInst,
       "vRtrInetSRIndirectTable": vRtrInetSRIndirectTable,
       "vRtrInetSRIndirectEntry": vRtrInetSRIndirectEntry,
       "vRtrInetSRIndirectTunnelLdp": vRtrInetSRIndirectTunnelLdp,
       "vRtrInetSRIndirectTunnelRsvpTe": vRtrInetSRIndirectTunnelRsvpTe,
       "vRtrInetSRIndirectTunnelDisalIgp": vRtrInetSRIndirectTunnelDisalIgp,
       "vRtrInetSRIndirectTunResStatus": vRtrInetSRIndirectTunResStatus,
       "vRtrInetSRIndirectTunnelSrIsis": vRtrInetSRIndirectTunnelSrIsis,
       "vRtrInetSRIndirectTunnelSrOspf": vRtrInetSRIndirectTunnelSrOspf,
       "vRtrInetSRIndirectTunnelSrTe": vRtrInetSRIndirectTunnelSrTe,
       "vRtrInetSRIndirectTunnelRibApi": vRtrInetSRIndirectTunnelRibApi,
       "vRtrInetSRIndirectTnlMplsFwdPlcy": vRtrInetSRIndirectTnlMplsFwdPlcy,
       "vRtrInetSRIndirectTunnelSrOspf3": vRtrInetSRIndirectTunnelSrOspf3,
       "vRtrInetSRIndirectTunFlexAlgoId": vRtrInetSRIndirectTunFlexAlgoId,
       "vRtrInetSRIndirectLspTable": vRtrInetSRIndirectLspTable,
       "vRtrInetSRIndirectLspEntry": vRtrInetSRIndirectLspEntry,
       "vRtrInetSRIndirectLspName": vRtrInetSRIndirectLspName,
       "vRtrInetSRIndirectLspRowStatus": vRtrInetSRIndirectLspRowStatus,
       "vRtrIfLagPerLinkHashTable": vRtrIfLagPerLinkHashTable,
       "vRtrIfLagPerLinkHashEntry": vRtrIfLagPerLinkHashEntry,
       "vRtrIfLagPerLinkHashLastChgd": vRtrIfLagPerLinkHashLastChgd,
       "vRtrIfLagPerLinkHashClass": vRtrIfLagPerLinkHashClass,
       "vRtrIfLagPerLinkHashWeight": vRtrIfLagPerLinkHashWeight,
       "tmnxVrtrIfIndexIfNameTable": tmnxVrtrIfIndexIfNameTable,
       "tmnxVrtrIfIndexIfNameEntry": tmnxVrtrIfIndexIfNameEntry,
       "tmnxVrtrIfIndexVrtrIfName": tmnxVrtrIfIndexVrtrIfName,
       "vRtrInetStaticRoutePfxTable": vRtrInetStaticRoutePfxTable,
       "vRtrInetStaticRoutePfxEntry": vRtrInetStaticRoutePfxEntry,
       "vRtrInetStaticRoutePfxRowStatus": vRtrInetStaticRoutePfxRowStatus,
       "vRtrInetStaticRoutePfxCreateOrig": vRtrInetStaticRoutePfxCreateOrig,
       "vRtrInetStaticRoutePfxCfgNHCount": vRtrInetStaticRoutePfxCfgNHCount,
       "vRtrInetStaticRoutePfxCommVal1": vRtrInetStaticRoutePfxCommVal1,
       "vRtrInetStaticRoutePfxCommVal2": vRtrInetStaticRoutePfxCommVal2,
       "vRtrInetStaticRoutePfxCommVal3": vRtrInetStaticRoutePfxCommVal3,
       "vRtrInetStaticRoutePfxCommVal4": vRtrInetStaticRoutePfxCommVal4,
       "vRtrInetStaticRoutePfxCommVal5": vRtrInetStaticRoutePfxCommVal5,
       "vRtrInetStaticRoutePfxCommVal6": vRtrInetStaticRoutePfxCommVal6,
       "vRtrInetStaticRoutePfxCommVal7": vRtrInetStaticRoutePfxCommVal7,
       "vRtrInetStaticRoutePfxCommVal8": vRtrInetStaticRoutePfxCommVal8,
       "vRtrInetStaticRoutePfxCommVal9": vRtrInetStaticRoutePfxCommVal9,
       "vRtrInetStaticRoutePfxCommVal10": vRtrInetStaticRoutePfxCommVal10,
       "vRtrInetStaticRoutePfxCommVal11": vRtrInetStaticRoutePfxCommVal11,
       "vRtrInetStaticRoutePfxCommVal12": vRtrInetStaticRoutePfxCommVal12,
       "vRtrInetStaticRoutePfxTag": vRtrInetStaticRoutePfxTag,
       "vRtrInetStaticRoutePfxBackupTag": vRtrInetStaticRoutePfxBackupTag,
       "tmnxVrtrMssAdjTableLastCh": tmnxVrtrMssAdjTableLastCh,
       "tmnxVrtrMssAdjTable": tmnxVrtrMssAdjTable,
       "tmnxVrtrMssAdjEntry": tmnxVrtrMssAdjEntry,
       "tmnxVrtrMssAdjLastCh": tmnxVrtrMssAdjLastCh,
       "tmnxVrtrMssAdjRowStatus": tmnxVrtrMssAdjRowStatus,
       "tmnxVrtrMssAdjGroup": tmnxVrtrMssAdjGroup,
       "tmnxVrtrMssAdjSegmentSize": tmnxVrtrMssAdjSegmentSize,
       "vRtrConfFlowspecTableLstChg": vRtrConfFlowspecTableLstChg,
       "vRtrConfFlowspecTable": vRtrConfFlowspecTable,
       "vRtrConfFlowspecEntry": vRtrConfFlowspecEntry,
       "vRtrConfFlowspecLastChanged": vRtrConfFlowspecLastChanged,
       "vRtrIpEmbeddedFlowspecMaxSize": vRtrIpEmbeddedFlowspecMaxSize,
       "vRtrIpv6EmbeddedFlowspecMaxSize": vRtrIpv6EmbeddedFlowspecMaxSize,
       "vRtrFlowspecFltrCamType": vRtrFlowspecFltrCamType,
       "vRtrInetSRIndirectSrTeLspTable": vRtrInetSRIndirectSrTeLspTable,
       "vRtrInetSRIndirectSrTeLspEntry": vRtrInetSRIndirectSrTeLspEntry,
       "vRtrInetSRIndirectSrTeLspName": vRtrInetSRIndirectSrTeLspName,
       "vRtrInetSRIndSrTeLspRowStatus": vRtrInetSRIndSrTeLspRowStatus,
       "vRtrIcmpStatTable": vRtrIcmpStatTable,
       "vRtrIcmpStatEntry": vRtrIcmpStatEntry,
       "vRtrIcmpInMsgs": vRtrIcmpInMsgs,
       "vRtrIcmpInErrors": vRtrIcmpInErrors,
       "vRtrIcmpInDestUnreachs": vRtrIcmpInDestUnreachs,
       "vRtrIcmpInRedirects": vRtrIcmpInRedirects,
       "vRtrIcmpInEchos": vRtrIcmpInEchos,
       "vRtrIcmpInEchoReplies": vRtrIcmpInEchoReplies,
       "vRtrIcmpInTimeExcds": vRtrIcmpInTimeExcds,
       "vRtrIcmpInSrcQuenchs": vRtrIcmpInSrcQuenchs,
       "vRtrIcmpInTimestamps": vRtrIcmpInTimestamps,
       "vRtrIcmpInTimestampReps": vRtrIcmpInTimestampReps,
       "vRtrIcmpInAddrMasks": vRtrIcmpInAddrMasks,
       "vRtrIcmpInAddrMaskReps": vRtrIcmpInAddrMaskReps,
       "vRtrIcmpInParmProblems": vRtrIcmpInParmProblems,
       "vRtrIcmpOutMsgs": vRtrIcmpOutMsgs,
       "vRtrIcmpOutErrors": vRtrIcmpOutErrors,
       "vRtrIcmpOutDestUnreachs": vRtrIcmpOutDestUnreachs,
       "vRtrIcmpOutRedirects": vRtrIcmpOutRedirects,
       "vRtrIcmpOutEchos": vRtrIcmpOutEchos,
       "vRtrIcmpOutEchoReplies": vRtrIcmpOutEchoReplies,
       "vRtrIcmpOutTimeExcds": vRtrIcmpOutTimeExcds,
       "vRtrIcmpOutSrcQuenchs": vRtrIcmpOutSrcQuenchs,
       "vRtrIcmpOutTimestamps": vRtrIcmpOutTimestamps,
       "vRtrIcmpOutTimestampReps": vRtrIcmpOutTimestampReps,
       "vRtrIcmpOutAddrMasks": vRtrIcmpOutAddrMasks,
       "vRtrIcmpOutAddrMaskReps": vRtrIcmpOutAddrMaskReps,
       "vRtrIcmpOutParmProblems": vRtrIcmpOutParmProblems,
       "vRtrIcmpOutDiscards": vRtrIcmpOutDiscards,
       "vRtrIfIcmpStatTable": vRtrIfIcmpStatTable,
       "vRtrIfIcmpStatEntry": vRtrIfIcmpStatEntry,
       "vRtrIfIcmpInMsgs": vRtrIfIcmpInMsgs,
       "vRtrIfIcmpInErrors": vRtrIfIcmpInErrors,
       "vRtrIfIcmpInDestUnreachs": vRtrIfIcmpInDestUnreachs,
       "vRtrIfIcmpInRedirects": vRtrIfIcmpInRedirects,
       "vRtrIfIcmpInEchos": vRtrIfIcmpInEchos,
       "vRtrIfIcmpInEchoReplies": vRtrIfIcmpInEchoReplies,
       "vRtrIfIcmpInTimeExcds": vRtrIfIcmpInTimeExcds,
       "vRtrIfIcmpInSrcQuenchs": vRtrIfIcmpInSrcQuenchs,
       "vRtrIfIcmpInTimestamps": vRtrIfIcmpInTimestamps,
       "vRtrIfIcmpInTimestampReps": vRtrIfIcmpInTimestampReps,
       "vRtrIfIcmpInAddrMasks": vRtrIfIcmpInAddrMasks,
       "vRtrIfIcmpInAddrMaskReps": vRtrIfIcmpInAddrMaskReps,
       "vRtrIfIcmpInParmProblems": vRtrIfIcmpInParmProblems,
       "vRtrIfIcmpOutMsgs": vRtrIfIcmpOutMsgs,
       "vRtrIfIcmpOutErrors": vRtrIfIcmpOutErrors,
       "vRtrIfIcmpOutDestUnreachs": vRtrIfIcmpOutDestUnreachs,
       "vRtrIfIcmpOutRedirects": vRtrIfIcmpOutRedirects,
       "vRtrIfIcmpOutEchos": vRtrIfIcmpOutEchos,
       "vRtrIfIcmpOutEchoReplies": vRtrIfIcmpOutEchoReplies,
       "vRtrIfIcmpOutTimeExcds": vRtrIfIcmpOutTimeExcds,
       "vRtrIfIcmpOutSrcQuenchs": vRtrIfIcmpOutSrcQuenchs,
       "vRtrIfIcmpOutTimestamps": vRtrIfIcmpOutTimestamps,
       "vRtrIfIcmpOutTimestampReps": vRtrIfIcmpOutTimestampReps,
       "vRtrIfIcmpOutAddrMasks": vRtrIfIcmpOutAddrMasks,
       "vRtrIfIcmpOutAddrMaskReps": vRtrIfIcmpOutAddrMaskReps,
       "vRtrIfIcmpOutParmProblems": vRtrIfIcmpOutParmProblems,
       "vRtrIfIcmpOutDiscards": vRtrIfIcmpOutDiscards,
       "vRtrIfExtParmsTable": vRtrIfExtParmsTable,
       "vRtrIfExtParmsEntry": vRtrIfExtParmsEntry,
       "vRtrIfIpv4ArpPopulateHost": vRtrIfIpv4ArpPopulateHost,
       "vRtrIfIpv4ArpRouteTag": vRtrIfIpv4ArpRouteTag,
       "vRtrIfIpv6NdPopulateHost": vRtrIfIpv6NdPopulateHost,
       "vRtrIfIpv6NdRouteTag": vRtrIfIpv6NdRouteTag,
       "vRtrIfIpHelperGatewayAddress": vRtrIfIpHelperGatewayAddress,
       "vRtrIfGreTermination": vRtrIfGreTermination,
       "vRtrIfIlmUntrusted": vRtrIfIlmUntrusted,
       "vRtrIfIlmDefaultForwarding": vRtrIfIlmDefaultForwarding,
       "vRtrIfIpv6ForwardIpv4": vRtrIfIpv6ForwardIpv4,
       "vRtrIfAcctPolicyId": vRtrIfAcctPolicyId,
       "vRtrIfCollectStats": vRtrIfCollectStats,
       "vRtrIfUnidirectionalLinkDelay": vRtrIfUnidirectionalLinkDelay,
       "vRtrIfIngrDestinationClassLookup": vRtrIfIngrDestinationClassLookup,
       "vRtrAdminTagsTable": vRtrAdminTagsTable,
       "vRtrAdminTagsEntry": vRtrAdminTagsEntry,
       "vRtrAdminTag": vRtrAdminTag,
       "vRtrAdminTagsRowStatus": vRtrAdminTagsRowStatus,
       "vRtrAdminTagsPolicyTable": vRtrAdminTagsPolicyTable,
       "vRtrAdminTagsPolicyEntry": vRtrAdminTagsPolicyEntry,
       "vRtrAdminTagPolicy": vRtrAdminTagPolicy,
       "vRtrAdminTagsPolicyRowStatus": vRtrAdminTagsPolicyRowStatus,
       "vRtrAdminTagsPolicyIncludeTable": vRtrAdminTagsPolicyIncludeTable,
       "vRtrAdminTagsPolicyIncludeEntry": vRtrAdminTagsPolicyIncludeEntry,
       "vRtrIncludeAdminTag": vRtrIncludeAdminTag,
       "vRtrATPolicyIncludeRowStatus": vRtrATPolicyIncludeRowStatus,
       "vRtrAdminTagsPolicyExcludeTable": vRtrAdminTagsPolicyExcludeTable,
       "vRtrAdminTagsPolicyExcludeEntry": vRtrAdminTagsPolicyExcludeEntry,
       "vRtrExcludeAdminTag": vRtrExcludeAdminTag,
       "vRtrATPolicyExcludeRowStatus": vRtrATPolicyExcludeRowStatus,
       "vRtrInetExtTunnelTable": vRtrInetExtTunnelTable,
       "vRtrInetExtTunnelEntry": vRtrInetExtTunnelEntry,
       "vRtrInetExtTunnelDestAddrType": vRtrInetExtTunnelDestAddrType,
       "vRtrInetExtTunnelDestAddr": vRtrInetExtTunnelDestAddr,
       "vRtrInetExtTunnelDestPfxLen": vRtrInetExtTunnelDestPfxLen,
       "vRtrInetExtTunnelListIndex": vRtrInetExtTunnelListIndex,
       "vRtrInetExtTunnelNhListIndex": vRtrInetExtTunnelNhListIndex,
       "vRtrInetExtTunnelPreference": vRtrInetExtTunnelPreference,
       "vRtrInetExtTunnelType": vRtrInetExtTunnelType,
       "vRtrInetExtTunnelTypeInstance": vRtrInetExtTunnelTypeInstance,
       "vRtrInetExtTunnelID": vRtrInetExtTunnelID,
       "vRtrInetExtTunnelNextHopAddrType": vRtrInetExtTunnelNextHopAddrType,
       "vRtrInetExtTunnelNextHopAddr": vRtrInetExtTunnelNextHopAddr,
       "vRtrInetExtTunnelMetric": vRtrInetExtTunnelMetric,
       "vRtrInetExtTunnelAge": vRtrInetExtTunnelAge,
       "vRtrInetExtTunnelNextHopFlags": vRtrInetExtTunnelNextHopFlags,
       "vRtrInetExtTunnelLspBandwidth": vRtrInetExtTunnelLspBandwidth,
       "vRtrInetExtTunnelMTU": vRtrInetExtTunnelMTU,
       "vRtrInetExtTunnelLspWeight": vRtrInetExtTunnelLspWeight,
       "vRtrInetExtTunnelLspId": vRtrInetExtTunnelLspId,
       "vRtrInetExtTunnelFlags": vRtrInetExtTunnelFlags,
       "vRtrInetExtTunnelRelativeMetric": vRtrInetExtTunnelRelativeMetric,
       "vRtrInetExtTunnelLabel": vRtrInetExtTunnelLabel,
       "vRtrInetExtTunnelBypassLabel": vRtrInetExtTunnelBypassLabel,
       "vRtrInetExtTunnelLspFC": vRtrInetExtTunnelLspFC,
       "vRtrInetExtTunnelMaxLabels": vRtrInetExtTunnelMaxLabels,
       "vRtrInetExtTunnelNhTunnelId": vRtrInetExtTunnelNhTunnelId,
       "vRtrInetExtTunnelNhTunnelType": vRtrInetExtTunnelNhTunnelType,
       "vRtrInetExtTunnelNhTunnelInst": vRtrInetExtTunnelNhTunnelInst,
       "vRtrInetExtTunnelColor": vRtrInetExtTunnelColor,
       "vRtrInetExtTunnelNhWeight": vRtrInetExtTunnelNhWeight,
       "vRtrInetExtTunnelNhBitFlags": vRtrInetExtTunnelNhBitFlags,
       "vRtrInetExtTunnelNhGroupId": vRtrInetExtTunnelNhGroupId,
       "vRtrInetExtTunnelAlgorithm": vRtrInetExtTunnelAlgorithm,
       "vRtrInetExtTunnelSidAddrType": vRtrInetExtTunnelSidAddrType,
       "vRtrInetExtTunnelSidAddr": vRtrInetExtTunnelSidAddr,
       "vRtrLeakExportPolicyTable": vRtrLeakExportPolicyTable,
       "vRtrLeakExportPolicyEntry": vRtrLeakExportPolicyEntry,
       "vRtrLeakExportPolicy1": vRtrLeakExportPolicy1,
       "vRtrLeakExportPolicy2": vRtrLeakExportPolicy2,
       "vRtrLeakExportPolicy3": vRtrLeakExportPolicy3,
       "vRtrLeakExportPolicy4": vRtrLeakExportPolicy4,
       "vRtrLeakExportPolicy5": vRtrLeakExportPolicy5,
       "vRtrLeakExportLimit": vRtrLeakExportLimit,
       "vRtrRibApiMplsTable": vRtrRibApiMplsTable,
       "vRtrRibApiMplsEntry": vRtrRibApiMplsEntry,
       "vRtrRibApiMplsLastChanged": vRtrRibApiMplsLastChanged,
       "vRtrRibApiMplsAdminState": vRtrRibApiMplsAdminState,
       "vRtrRibApiMplsReservedLblBlk": vRtrRibApiMplsReservedLblBlk,
       "tmnxVRtrNeInfoTable": tmnxVRtrNeInfoTable,
       "tmnxVRtrNeInfoEntry": tmnxVRtrNeInfoEntry,
       "tmnxVRtrNeInfoNeid": tmnxVRtrNeInfoNeid,
       "tmnxVRtrNeInfoNeidHex": tmnxVRtrNeInfoNeidHex,
       "tmnxVRtrNeInfoNeipV4Type": tmnxVRtrNeInfoNeipV4Type,
       "tmnxVRtrNeInfoNeipV4": tmnxVRtrNeInfoNeipV4,
       "tmnxVRtrNeInfoNeipV4PrefixLen": tmnxVRtrNeInfoNeipV4PrefixLen,
       "tmnxVRtrNeInfoNeipV6Type": tmnxVRtrNeInfoNeipV6Type,
       "tmnxVRtrNeInfoNeipV6": tmnxVRtrNeInfoNeipV6,
       "tmnxVRtrNeInfoNeipV6PrefixLen": tmnxVRtrNeInfoNeipV6PrefixLen,
       "tmnxVRtrNeInfoSystemMac": tmnxVRtrNeInfoSystemMac,
       "tmnxVRtrNeInfoPlatformType": tmnxVRtrNeInfoPlatformType,
       "tmnxVRtrNeInfoVendorId": tmnxVRtrNeInfoVendorId,
       "vRtrIfDHCPOSelSrvrTable": vRtrIfDHCPOSelSrvrTable,
       "vRtrIfDHCPOSelSrvrEntry": vRtrIfDHCPOSelSrvrEntry,
       "vRtrIfDHCPOSelSrvrAddressType": vRtrIfDHCPOSelSrvrAddressType,
       "vRtrIfDHCPOSelSrvrAddress": vRtrIfDHCPOSelSrvrAddress,
       "vRtrIfDHCPOSelSrvrRowStatus": vRtrIfDHCPOSelSrvrRowStatus,
       "vRtrIfDHCPOSelSrvrDiscoDly": vRtrIfDHCPOSelSrvrDiscoDly,
       "vRtrIfDHCP6ASelSrvrTable": vRtrIfDHCP6ASelSrvrTable,
       "vRtrIfDHCP6ASelSrvrEntry": vRtrIfDHCP6ASelSrvrEntry,
       "vRtrIfDHCP6ASelSrvrAddressType": vRtrIfDHCP6ASelSrvrAddressType,
       "vRtrIfDHCP6ASelSrvrAddress": vRtrIfDHCP6ASelSrvrAddress,
       "vRtrIfDHCP6ASelSrvrRowStatus": vRtrIfDHCP6ASelSrvrRowStatus,
       "vRtrIfDHCP6ASelSrvrSolDly": vRtrIfDHCP6ASelSrvrSolDly,
       "vRtrIfDHCP6ASelSrvrPref": vRtrIfDHCP6ASelSrvrPref,
       "vRtrLspBfdTableLastChanged": vRtrLspBfdTableLastChanged,
       "vRtrLspBfdTable": vRtrLspBfdTable,
       "vRtrLspBfdEntry": vRtrLspBfdEntry,
       "vRtrLspBfdLastChanged": vRtrLspBfdLastChanged,
       "vRtrLspBfdTailEndTxInterval": vRtrLspBfdTailEndTxInterval,
       "vRtrLspBfdTailEndRxInterval": vRtrLspBfdTailEndRxInterval,
       "vRtrLspBfdTailEndMultiplier": vRtrLspBfdTailEndMultiplier,
       "tmnxVRtrDCObjs": tmnxVRtrDCObjs,
       "tmnxVrtrSys": tmnxVrtrSys,
       "tmnxVrtrSysEnforceUniqueIfIndex": tmnxVrtrSysEnforceUniqueIfIndex,
       "tmnxVrtrSysAllowQinQNetworkIntf": tmnxVrtrSysAllowQinQNetworkIntf,
       "tmnxVrtrSysMplsTunnelMode": tmnxVrtrSysMplsTunnelMode,
       "tmnxVrtrSysMplsLblStackStatCount": tmnxVrtrSysMplsLblStackStatCount,
       "tmnxVrtrFwdIPoverIPv6": tmnxVrtrFwdIPoverIPv6,
       "tmnxVrtrFwdIPoverGre": tmnxVrtrFwdIPoverGre,
       "tmnxVrtrIPEHPerform": tmnxVrtrIPEHPerform,
       "tmnxVrtrIPAllowCPUFragmentation": tmnxVrtrIPAllowCPUFragmentation,
       "tmnxVrtrIPAllowICMPRedirect": tmnxVrtrIPAllowICMPRedirect,
       "tmnxVrtrAutoconfiguration": tmnxVrtrAutoconfiguration,
       "tmnxVrtrDhcpClient": tmnxVrtrDhcpClient,
       "vRtrIfDhcpClTable": vRtrIfDhcpClTable,
       "vRtrIfDhcpClEntry": vRtrIfDhcpClEntry,
       "vRtrIfDhcpClLastChanged": vRtrIfDhcpClLastChanged,
       "vRtrIfDhcpClRowStatus": vRtrIfDhcpClRowStatus,
       "vRtrIfDhcpClAdminState": vRtrIfDhcpClAdminState,
       "vRtrIfDhcpClVendorClassIdFmt": vRtrIfDhcpClVendorClassIdFmt,
       "vRtrIfDhcpClVendorClassId": vRtrIfDhcpClVendorClassId,
       "vRtrIfDhcpClClientIdOrigin": vRtrIfDhcpClClientIdOrigin,
       "vRtrIfDhcpClClientIdFmt": vRtrIfDhcpClClientIdFmt,
       "vRtrIfDhcpClClientId": vRtrIfDhcpClClientId,
       "vRtrIfDhcpClLeaseTime": vRtrIfDhcpClLeaseTime,
       "vRtrIfDhcpClRequestOptions": vRtrIfDhcpClRequestOptions,
       "vRtrIfDhcpClStatsTable": vRtrIfDhcpClStatsTable,
       "vRtrIfDhcpClStatsEntry": vRtrIfDhcpClStatsEntry,
       "vRtrIfDhcpClStatsClearedTime": vRtrIfDhcpClStatsClearedTime,
       "vRtrIfDhcpClStatsTxDiscovers": vRtrIfDhcpClStatsTxDiscovers,
       "vRtrIfDhcpClStatsTxRequests": vRtrIfDhcpClStatsTxRequests,
       "vRtrIfDhcpClStatsTxReleases": vRtrIfDhcpClStatsTxReleases,
       "vRtrIfDhcpClStatsTxDeclines": vRtrIfDhcpClStatsTxDeclines,
       "vRtrIfDhcpClStatsRxOffers": vRtrIfDhcpClStatsRxOffers,
       "vRtrIfDhcpClStatsRxAcks": vRtrIfDhcpClStatsRxAcks,
       "vRtrIfDhcpClStatsRxNaks": vRtrIfDhcpClStatsRxNaks,
       "vRtrIfDhcpClStatsRxDrops": vRtrIfDhcpClStatsRxDrops,
       "vRtrIfDhcpClStateTable": vRtrIfDhcpClStateTable,
       "vRtrIfDhcpClStateEntry": vRtrIfDhcpClStateEntry,
       "vRtrIfDhcpClStateCiAddrType": vRtrIfDhcpClStateCiAddrType,
       "vRtrIfDhcpClStateCiAddr": vRtrIfDhcpClStateCiAddr,
       "vRtrIfDhcpClStateCiAddrMaskLen": vRtrIfDhcpClStateCiAddrMaskLen,
       "vRtrIfDhcpClStateChAddr": vRtrIfDhcpClStateChAddr,
       "vRtrIfDhcpClStateSiAddrType": vRtrIfDhcpClStateSiAddrType,
       "vRtrIfDhcpClStateSiAddr": vRtrIfDhcpClStateSiAddr,
       "vRtrIfDhcpClStateRtAddrType": vRtrIfDhcpClStateRtAddrType,
       "vRtrIfDhcpClStateRtAddr": vRtrIfDhcpClStateRtAddr,
       "vRtrIfDhcpClStateDnsPriAddrType": vRtrIfDhcpClStateDnsPriAddrType,
       "vRtrIfDhcpClStateDnsPriAddr": vRtrIfDhcpClStateDnsPriAddr,
       "vRtrIfDhcpClStateDnsSecAddrType": vRtrIfDhcpClStateDnsSecAddrType,
       "vRtrIfDhcpClStateDnsSecAddr": vRtrIfDhcpClStateDnsSecAddr,
       "vRtrIfDhcpClStateDnsTerAddrType": vRtrIfDhcpClStateDnsTerAddrType,
       "vRtrIfDhcpClStateDnsTerAddr": vRtrIfDhcpClStateDnsTerAddr,
       "vRtrIfDhcpClStateLeaseAcquired": vRtrIfDhcpClStateLeaseAcquired,
       "vRtrIfDhcpClStateLeaseRenew": vRtrIfDhcpClStateLeaseRenew,
       "vRtrIfDhcpClStateLeaseRebind": vRtrIfDhcpClStateLeaseRebind,
       "vRtrIfDhcpClStateLeaseEnd": vRtrIfDhcpClStateLeaseEnd,
       "vRtrIfDhcpClDhcpState": vRtrIfDhcpClDhcpState,
       "vRtrIfDhcpClStateStatus": vRtrIfDhcpClStateStatus,
       "vRtrIfDhcpClStateDescription": vRtrIfDhcpClStateDescription,
       "vRtrIfDhcpClRtTable": vRtrIfDhcpClRtTable,
       "vRtrIfDhcpClRtEntry": vRtrIfDhcpClRtEntry,
       "vRtrIfDhcpClRtAddrType": vRtrIfDhcpClRtAddrType,
       "vRtrIfDhcpClRtAddr": vRtrIfDhcpClRtAddr,
       "vRtrIfDhcpClRtPrefixLen": vRtrIfDhcpClRtPrefixLen,
       "vRtrIfDhcpClRtNhAddrType": vRtrIfDhcpClRtNhAddrType,
       "vRtrIfDhcpClRtNhAddr": vRtrIfDhcpClRtNhAddr,
       "vRtrIfDhcpClRtStatus": vRtrIfDhcpClRtStatus,
       "vRtrIfDhcp6ClStatsTable": vRtrIfDhcp6ClStatsTable,
       "vRtrIfDhcp6ClStatsEntry": vRtrIfDhcp6ClStatsEntry,
       "vRtrIfDhcp6ClStatsClearedTime": vRtrIfDhcp6ClStatsClearedTime,
       "vRtrIfDhcp6ClStatsTxSolicits": vRtrIfDhcp6ClStatsTxSolicits,
       "vRtrIfDhcp6ClStatsRxAdvertises": vRtrIfDhcp6ClStatsRxAdvertises,
       "vRtrIfDhcp6ClStatsTxRequests": vRtrIfDhcp6ClStatsTxRequests,
       "vRtrIfDhcp6ClStatsTxConfirms": vRtrIfDhcp6ClStatsTxConfirms,
       "vRtrIfDhcp6ClStatsTxRenews": vRtrIfDhcp6ClStatsTxRenews,
       "vRtrIfDhcp6ClStatsTxRebinds": vRtrIfDhcp6ClStatsTxRebinds,
       "vRtrIfDhcp6ClStatsRxReplies": vRtrIfDhcp6ClStatsRxReplies,
       "vRtrIfDhcp6ClStatsTxReleases": vRtrIfDhcp6ClStatsTxReleases,
       "vRtrIfDhcp6ClStatsTxDeclines": vRtrIfDhcp6ClStatsTxDeclines,
       "vRtrIfDhcp6ClStatsRxReconfigures": vRtrIfDhcp6ClStatsRxReconfigures,
       "vRtrIfDhcp6ClStatsTxInfRequests": vRtrIfDhcp6ClStatsTxInfRequests,
       "vRtrIfDhcp6ClStatsRxDrops": vRtrIfDhcp6ClStatsRxDrops,
       "vRtrIfDhcp6ClStateTable": vRtrIfDhcp6ClStateTable,
       "vRtrIfDhcp6ClStateEntry": vRtrIfDhcp6ClStateEntry,
       "vRtrIfDhcp6ClStateCiAddrType": vRtrIfDhcp6ClStateCiAddrType,
       "vRtrIfDhcp6ClStateCiAddr": vRtrIfDhcp6ClStateCiAddr,
       "vRtrIfDhcp6ClStateCiAddrMaskLen": vRtrIfDhcp6ClStateCiAddrMaskLen,
       "vRtrIfDhcp6ClStateClientDuid": vRtrIfDhcp6ClStateClientDuid,
       "vRtrIfDhcp6ClStateSiAddrType": vRtrIfDhcp6ClStateSiAddrType,
       "vRtrIfDhcp6ClStateSiAddr": vRtrIfDhcp6ClStateSiAddr,
       "vRtrIfDhcp6ClStateServerDuid": vRtrIfDhcp6ClStateServerDuid,
       "vRtrIfDhcp6ClStateDnsPriAddrType": vRtrIfDhcp6ClStateDnsPriAddrType,
       "vRtrIfDhcp6ClStateDnsPriAddr": vRtrIfDhcp6ClStateDnsPriAddr,
       "vRtrIfDhcp6ClStateDnsSecAddrType": vRtrIfDhcp6ClStateDnsSecAddrType,
       "vRtrIfDhcp6ClStateDnsSecAddr": vRtrIfDhcp6ClStateDnsSecAddr,
       "vRtrIfDhcp6ClStateDnsTerAddrType": vRtrIfDhcp6ClStateDnsTerAddrType,
       "vRtrIfDhcp6ClStateDnsTerAddr": vRtrIfDhcp6ClStateDnsTerAddr,
       "vRtrIfDhcp6ClStateLeaseCreated": vRtrIfDhcp6ClStateLeaseCreated,
       "vRtrIfDhcp6ClStateLeaseAcquired": vRtrIfDhcp6ClStateLeaseAcquired,
       "vRtrIfDhcp6ClStateLeaseRenew": vRtrIfDhcp6ClStateLeaseRenew,
       "vRtrIfDhcp6ClStateLeaseRebind": vRtrIfDhcp6ClStateLeaseRebind,
       "vRtrIfDhcp6ClStateLeasePrefLftm": vRtrIfDhcp6ClStateLeasePrefLftm,
       "vRtrIfDhcp6ClStateLeaseValidLftm": vRtrIfDhcp6ClStateLeaseValidLftm,
       "vRtrIfDhcp6ClStateStatus": vRtrIfDhcp6ClStateStatus,
       "vRtrIfDhcp6ClStateDescription": vRtrIfDhcp6ClStateDescription,
       "tmnxVrtrRouterAdvertisement": tmnxVrtrRouterAdvertisement,
       "vRtrAutoCfgRaRtTable": vRtrAutoCfgRaRtTable,
       "vRtrAutoCfgRaRtEntry": vRtrAutoCfgRaRtEntry,
       "vRtrAutoCfgRaRtAddrType": vRtrAutoCfgRaRtAddrType,
       "vRtrAutoCfgRaRtAddr": vRtrAutoCfgRaRtAddr,
       "vRtrAutoCfgRaRtPrefixLen": vRtrAutoCfgRaRtPrefixLen,
       "vRtrAutoCfgRaRtNhAddrType": vRtrAutoCfgRaRtNhAddrType,
       "vRtrAutoCfgRaRtNhAddr": vRtrAutoCfgRaRtNhAddr,
       "vRtrAutoCfgRaRtStatus": vRtrAutoCfgRaRtStatus,
       "vRtrAutoCfgRaRtTimer": vRtrAutoCfgRaRtTimer,
       "vRtrAutoCfgRaRouterTable": vRtrAutoCfgRaRouterTable,
       "vRtrAutoCfgRaRouterEntry": vRtrAutoCfgRaRouterEntry,
       "vRtrAutoCfgRaRouterNbrAddrType": vRtrAutoCfgRaRouterNbrAddrType,
       "vRtrAutoCfgRaRouterNbrAddr": vRtrAutoCfgRaRouterNbrAddr,
       "vRtrAutoCfgRaRouterIfIndex": vRtrAutoCfgRaRouterIfIndex,
       "vRtrAutoCfgRaRouterCurHopLimit": vRtrAutoCfgRaRouterCurHopLimit,
       "vRtrAutoCfgRaRouterManagedFlag": vRtrAutoCfgRaRouterManagedFlag,
       "vRtrAutoCfgRaRouterOtherCfgFlag": vRtrAutoCfgRaRouterOtherCfgFlag,
       "vRtrAutoCfgRaRouterPreference": vRtrAutoCfgRaRouterPreference,
       "vRtrAutoCfgRaRouterLifetime": vRtrAutoCfgRaRouterLifetime,
       "vRtrAutoCfgRaRouterReachableTime": vRtrAutoCfgRaRouterReachableTime,
       "vRtrAutoCfgRaRouterRetransTimer": vRtrAutoCfgRaRouterRetransTimer,
       "vRtrAutoCfgRaPrefixTable": vRtrAutoCfgRaPrefixTable,
       "vRtrAutoCfgRaPrefixEntry": vRtrAutoCfgRaPrefixEntry,
       "vRtrAutoCfgRaPrefixNbrAddrType": vRtrAutoCfgRaPrefixNbrAddrType,
       "vRtrAutoCfgRaPrefixNbrAddr": vRtrAutoCfgRaPrefixNbrAddr,
       "vRtrAutoCfgRaPrefixPrefix": vRtrAutoCfgRaPrefixPrefix,
       "vRtrAutoCfgRaPrefixLength": vRtrAutoCfgRaPrefixLength,
       "vRtrAutoCfgRaPrefixIfIndex": vRtrAutoCfgRaPrefixIfIndex,
       "vRtrAutoCfgRaPrefixOnLinkFlag": vRtrAutoCfgRaPrefixOnLinkFlag,
       "vRtrAutoCfgRaPrefixAutonomFlag": vRtrAutoCfgRaPrefixAutonomFlag,
       "vRtrAutoCfgRaPrefixPrefLftm": vRtrAutoCfgRaPrefixPrefLftm,
       "vRtrAutoCfgRaPrefixValidLftm": vRtrAutoCfgRaPrefixValidLftm,
       "vRtrAutoCfgRaSpecRtTable": vRtrAutoCfgRaSpecRtTable,
       "vRtrAutoCfgRaSpecRtEntry": vRtrAutoCfgRaSpecRtEntry,
       "vRtrAutoCfgRaSpecRtNbrAddrType": vRtrAutoCfgRaSpecRtNbrAddrType,
       "vRtrAutoCfgRaSpecRtNbrAddr": vRtrAutoCfgRaSpecRtNbrAddr,
       "vRtrAutoCfgRaSpecRtPrefix": vRtrAutoCfgRaSpecRtPrefix,
       "vRtrAutoCfgRaSpecRtPrefixLength": vRtrAutoCfgRaSpecRtPrefixLength,
       "vRtrAutoCfgRaSpecRtIfIndex": vRtrAutoCfgRaSpecRtIfIndex,
       "vRtrAutoCfgRaSpecRtPreference": vRtrAutoCfgRaSpecRtPreference,
       "vRtrAutoCfgRaSpecRtLifetime": vRtrAutoCfgRaSpecRtLifetime,
       "vRtrIfAutoCfgRaStatsTable": vRtrIfAutoCfgRaStatsTable,
       "vRtrIfAutoCfgRaStatsEntry": vRtrIfAutoCfgRaStatsEntry,
       "vRtrIfAutoCfgRaStatsClearedTime": vRtrIfAutoCfgRaStatsClearedTime,
       "vRtrIfAutoCfgRaStatsOutRtrSol": vRtrIfAutoCfgRaStatsOutRtrSol,
       "vRtrIfAutoCfgRaStatsRtrSolTime": vRtrIfAutoCfgRaStatsRtrSolTime,
       "vRtrIfAutoCfgRaStatsOutRtrSolErr": vRtrIfAutoCfgRaStatsOutRtrSolErr,
       "vRtrIfAutoCfgRaStatsInRtrAdv": vRtrIfAutoCfgRaStatsInRtrAdv,
       "vRtrIfAutoCfgRaStatsRtrAdvTime": vRtrIfAutoCfgRaStatsRtrAdvTime,
       "vRtrIfAutoCfgRaStatsInRtrAdvErr": vRtrIfAutoCfgRaStatsInRtrAdvErr,
       "vRtrIfEgressQueueStatsTable": vRtrIfEgressQueueStatsTable,
       "vRtrIfEgressQueueStatsEntry": vRtrIfEgressQueueStatsEntry,
       "vRtrIfEgressQueueIndex": vRtrIfEgressQueueIndex,
       "vRtrIfEgressQueueFwdPkts": vRtrIfEgressQueueFwdPkts,
       "vRtrIfEgressQueueFwdOcts": vRtrIfEgressQueueFwdOcts,
       "vRtrIfEgressQueueDrpPkts": vRtrIfEgressQueueDrpPkts,
       "vRtrIfEgressQueueDrpOcts": vRtrIfEgressQueueDrpOcts,
       "vRtrIfEgrQFwdInProfPkts": vRtrIfEgrQFwdInProfPkts,
       "vRtrIfEgrQFwdInProfOcts": vRtrIfEgrQFwdInProfOcts,
       "vRtrIfEgrQDrpInProfPkts": vRtrIfEgrQDrpInProfPkts,
       "vRtrIfEgrQDrpInProfOcts": vRtrIfEgrQDrpInProfOcts,
       "vRtrIfEgrQFwdOutProfPkts": vRtrIfEgrQFwdOutProfPkts,
       "vRtrIfEgrQFwdOutProfOcts": vRtrIfEgrQFwdOutProfOcts,
       "vRtrIfEgrQDrpOutProfPkts": vRtrIfEgrQDrpOutProfPkts,
       "vRtrIfEgrQDrpOutProfOcts": vRtrIfEgrQDrpOutProfOcts,
       "vRtrIfEgrQFwdExdProfPkts": vRtrIfEgrQFwdExdProfPkts,
       "vRtrIfEgrQFwdExdProfOcts": vRtrIfEgrQFwdExdProfOcts,
       "vRtrIfEgrQDrpExdProfPkts": vRtrIfEgrQDrpExdProfPkts,
       "vRtrIfEgrQDrpExdProfOcts": vRtrIfEgrQDrpExdProfOcts,
       "vRtrIfEgrQFwdInPlusProfPkts": vRtrIfEgrQFwdInPlusProfPkts,
       "vRtrIfEgrQFwdInPlusProfOcts": vRtrIfEgrQFwdInPlusProfOcts,
       "vRtrIfEgrQDrpInPlusProfPkts": vRtrIfEgrQDrpInPlusProfPkts,
       "vRtrIfEgrQDrpInPlusProfOcts": vRtrIfEgrQDrpInPlusProfOcts,
       "vRtrIfIngPolicerStatsTable": vRtrIfIngPolicerStatsTable,
       "vRtrIfIngPolicerStatsEntry": vRtrIfIngPolicerStatsEntry,
       "vRtrIfIngPolicerIndex": vRtrIfIngPolicerIndex,
       "vRtrIfIngPolicerFwdInProfPkts": vRtrIfIngPolicerFwdInProfPkts,
       "vRtrIfIngPolicerFwdOutProfPkts": vRtrIfIngPolicerFwdOutProfPkts,
       "vRtrIfIngPolicerFwdInProfOcts": vRtrIfIngPolicerFwdInProfOcts,
       "vRtrIfIngPolicerFwdOutProfOcts": vRtrIfIngPolicerFwdOutProfOcts,
       "vRtrIfIngPolicerDrpExdProfPkts": vRtrIfIngPolicerDrpExdProfPkts,
       "vRtrIfIngPolicerDrpExdProfOcts": vRtrIfIngPolicerDrpExdProfOcts,
       "vRtrIfArpHostRtTblLstChg": vRtrIfArpHostRtTblLstChg,
       "vRtrIfArpHostRtTable": vRtrIfArpHostRtTable,
       "vRtrIfArpHostRtEntry": vRtrIfArpHostRtEntry,
       "vRtrIfArpHostRtType": vRtrIfArpHostRtType,
       "vRtrIfArpHostRtRowStatus": vRtrIfArpHostRtRowStatus,
       "vRtrIfArpHostRtLastChgd": vRtrIfArpHostRtLastChgd,
       "vRtrIfArpHostRtRouteTag": vRtrIfArpHostRtRouteTag,
       "vRtrIfNdHostRtTblLstChg": vRtrIfNdHostRtTblLstChg,
       "vRtrIfNdHostRtTable": vRtrIfNdHostRtTable,
       "vRtrIfNdHostRtEntry": vRtrIfNdHostRtEntry,
       "vRtrIfNdHostRtType": vRtrIfNdHostRtType,
       "vRtrIfNdHostRtRowStatus": vRtrIfNdHostRtRowStatus,
       "vRtrIfNdHostRtLastChgd": vRtrIfNdHostRtLastChgd,
       "vRtrIfNdHostRtRouteTag": vRtrIfNdHostRtRouteTag,
       "vRtrDnsRedirectTableLastChanged": vRtrDnsRedirectTableLastChanged,
       "vRtrDnsRedirectTable": vRtrDnsRedirectTable,
       "vRtrDnsRedirectEntry": vRtrDnsRedirectEntry,
       "vRtrDnsRedirectRequestRouterId": vRtrDnsRedirectRequestRouterId,
       "vRtrDnsRedirectDnsRouterId": vRtrDnsRedirectDnsRouterId,
       "vRtrDnsRedirectRowStatus": vRtrDnsRedirectRowStatus,
       "vRtrDnsRedirectPreference": vRtrDnsRedirectPreference,
       "vRtrDnsRedirectLastChanged": vRtrDnsRedirectLastChanged,
       "tmnxVrtrFlexAlgoObjs": tmnxVrtrFlexAlgoObjs,
       "tmnxFlexAlgoDefTblLastCh": tmnxFlexAlgoDefTblLastCh,
       "tmnxFlexAlgoDefinitionTable": tmnxFlexAlgoDefinitionTable,
       "tmnxFlexAlgoDefinitionEntry": tmnxFlexAlgoDefinitionEntry,
       "tmnxFlexAlgoName": tmnxFlexAlgoName,
       "tmnxFlexAlgoRowLstChng": tmnxFlexAlgoRowLstChng,
       "tmnxFlexAlgoRowStatus": tmnxFlexAlgoRowStatus,
       "tmnxFlexAlgoAdminState": tmnxFlexAlgoAdminState,
       "tmnxFlexAlgoDescription": tmnxFlexAlgoDescription,
       "tmnxFlexAlgoMetricType": tmnxFlexAlgoMetricType,
       "tmnxFlexAlgoPriority": tmnxFlexAlgoPriority,
       "tmnxFlexAlgoFlagsTlv": tmnxFlexAlgoFlagsTlv,
       "tmnxFlexAlgoAdminGrpTblLstCh": tmnxFlexAlgoAdminGrpTblLstCh,
       "tmnxFlexAlgoAdminGrpTable": tmnxFlexAlgoAdminGrpTable,
       "tmnxFlexAlgoAdminGrpEntry": tmnxFlexAlgoAdminGrpEntry,
       "tmnxFlexAlgoAdminGrpType": tmnxFlexAlgoAdminGrpType,
       "tmnxFlexAlgoAdminGrpRowLstCh": tmnxFlexAlgoAdminGrpRowLstCh,
       "tmnxFlexAlgoAdminGrpRowStatus": tmnxFlexAlgoAdminGrpRowStatus,
       "vRtrBgpEvpnObjs": vRtrBgpEvpnObjs,
       "vRtrBgpEvpnTblLastCh": vRtrBgpEvpnTblLastCh,
       "vRtrBgpEvpnTable": vRtrBgpEvpnTable,
       "vRtrBgpEvpnEntry": vRtrBgpEvpnEntry,
       "vRtrBgpEvpnInstance": vRtrBgpEvpnInstance,
       "vRtrBgpEvpnRowStatus": vRtrBgpEvpnRowStatus,
       "vRtrBgpEvpnLastChanged": vRtrBgpEvpnLastChanged,
       "vRtrBgpEvpnAdminState": vRtrBgpEvpnAdminState,
       "vRtrBgpEvpnDefRtTag": vRtrBgpEvpnDefRtTag,
       "vRtrBgpEvpnVrfRD": vRtrBgpEvpnVrfRD,
       "vRtrBgpEvpnExportRteTarget": vRtrBgpEvpnExportRteTarget,
       "vRtrBgpEvpnImportRteTarget": vRtrBgpEvpnImportRteTarget,
       "vRtrBgpEvpnAutoRD": vRtrBgpEvpnAutoRD,
       "vRtrBgpEvpnOperRD": vRtrBgpEvpnOperRD,
       "vRtrBgpEvpnOperRDType": vRtrBgpEvpnOperRDType,
       "vRtrBgpEvpnVrfTarget": vRtrBgpEvpnVrfTarget,
       "vRtrBgpEvpnDomainId": vRtrBgpEvpnDomainId,
       "vRtrBgpEvpnDynEgrLblLmt": vRtrBgpEvpnDynEgrLblLmt,
       "vRtrBgpEvpnMplsTblLastCh": vRtrBgpEvpnMplsTblLastCh,
       "vRtrBgpEvpnMplsTable": vRtrBgpEvpnMplsTable,
       "vRtrBgpEvpnMplsEntry": vRtrBgpEvpnMplsEntry,
       "vRtrBgpEvpnMplsLastChanged": vRtrBgpEvpnMplsLastChanged,
       "vRtrBgpEvpnMplsTnlEncapMpls": vRtrBgpEvpnMplsTnlEncapMpls,
       "vRtrBgpEvpnMplsTnlEncapMoUdp": vRtrBgpEvpnMplsTnlEncapMoUdp,
       "vRtrBgpEvpnABTTblLastCh": vRtrBgpEvpnABTTblLastCh,
       "vRtrBgpEvpnAutoBndTnlTable": vRtrBgpEvpnAutoBndTnlTable,
       "vRtrBgpEvpnAutoBndTnlEntry": vRtrBgpEvpnAutoBndTnlEntry,
       "vRtrBgpEvpnAutoBndTnlLastChg": vRtrBgpEvpnAutoBndTnlLastChg,
       "vRtrBgpEvpnAutoBndTnlStatus": vRtrBgpEvpnAutoBndTnlStatus,
       "vRtrBgpEvpnAutoBndTnlTag": vRtrBgpEvpnAutoBndTnlTag,
       "vRtrBgpEvpnAutoBndTnlEcmp": vRtrBgpEvpnAutoBndTnlEcmp,
       "vRtrBgpEvpnAutoBndTnlLdp": vRtrBgpEvpnAutoBndTnlLdp,
       "vRtrBgpEvpnAutoBndTnlRsvpTe": vRtrBgpEvpnAutoBndTnlRsvpTe,
       "vRtrBgpEvpnAutoBndTnlSrIsis": vRtrBgpEvpnAutoBndTnlSrIsis,
       "vRtrBgpEvpnAutoBndTnlSrOspf": vRtrBgpEvpnAutoBndTnlSrOspf,
       "vRtrBgpEvpnAutoBndTnlBgp": vRtrBgpEvpnAutoBndTnlBgp,
       "vRtrBgpEvpnAutoBndTnlSrTe": vRtrBgpEvpnAutoBndTnlSrTe,
       "vRtrBgpEvpnAutoBndTnlUdp": vRtrBgpEvpnAutoBndTnlUdp,
       "vRtrBgpEvpnAutoBndTnlSrPlcy": vRtrBgpEvpnAutoBndTnlSrPlcy,
       "vRtrBgpEvpnBndTnlMplsFwdPlcy": vRtrBgpEvpnBndTnlMplsFwdPlcy,
       "vRtrBgpEvpnBndTnlRibApi": vRtrBgpEvpnBndTnlRibApi,
       "vRtrBgpEvpnAutoBndTnlSrOspf3": vRtrBgpEvpnAutoBndTnlSrOspf3,
       "vRtrBgpEvpnAutoBndTnlFlexAlgoFb": vRtrBgpEvpnAutoBndTnlFlexAlgoFb,
       "vRtrBgpEvpnVrfPolicyTblLastCh": vRtrBgpEvpnVrfPolicyTblLastCh,
       "vRtrBgpEvpnVrfPolicyTable": vRtrBgpEvpnVrfPolicyTable,
       "vRtrBgpEvpnVrfPolicyEntry": vRtrBgpEvpnVrfPolicyEntry,
       "vRtrBgpEvpnVrfPolicyLastChg": vRtrBgpEvpnVrfPolicyLastChg,
       "vRtrBgpEvpnVrfPolicyImp1": vRtrBgpEvpnVrfPolicyImp1,
       "vRtrBgpEvpnVrfPolicyImp2": vRtrBgpEvpnVrfPolicyImp2,
       "vRtrBgpEvpnVrfPolicyImp3": vRtrBgpEvpnVrfPolicyImp3,
       "vRtrBgpEvpnVrfPolicyImp4": vRtrBgpEvpnVrfPolicyImp4,
       "vRtrBgpEvpnVrfPolicyImp5": vRtrBgpEvpnVrfPolicyImp5,
       "vRtrBgpEvpnVrfPolicyImp6": vRtrBgpEvpnVrfPolicyImp6,
       "vRtrBgpEvpnVrfPolicyImp7": vRtrBgpEvpnVrfPolicyImp7,
       "vRtrBgpEvpnVrfPolicyImp8": vRtrBgpEvpnVrfPolicyImp8,
       "vRtrBgpEvpnVrfPolicyImp9": vRtrBgpEvpnVrfPolicyImp9,
       "vRtrBgpEvpnVrfPolicyImp10": vRtrBgpEvpnVrfPolicyImp10,
       "vRtrBgpEvpnVrfPolicyImp11": vRtrBgpEvpnVrfPolicyImp11,
       "vRtrBgpEvpnVrfPolicyImp12": vRtrBgpEvpnVrfPolicyImp12,
       "vRtrBgpEvpnVrfPolicyImp13": vRtrBgpEvpnVrfPolicyImp13,
       "vRtrBgpEvpnVrfPolicyImp14": vRtrBgpEvpnVrfPolicyImp14,
       "vRtrBgpEvpnVrfPolicyImp15": vRtrBgpEvpnVrfPolicyImp15,
       "vRtrBgpEvpnVrfPolicyExp1": vRtrBgpEvpnVrfPolicyExp1,
       "vRtrBgpEvpnVrfPolicyExp2": vRtrBgpEvpnVrfPolicyExp2,
       "vRtrBgpEvpnVrfPolicyExp3": vRtrBgpEvpnVrfPolicyExp3,
       "vRtrBgpEvpnVrfPolicyExp4": vRtrBgpEvpnVrfPolicyExp4,
       "vRtrBgpEvpnVrfPolicyExp5": vRtrBgpEvpnVrfPolicyExp5,
       "vRtrBgpEvpnVrfPolicyExp6": vRtrBgpEvpnVrfPolicyExp6,
       "vRtrBgpEvpnVrfPolicyExp7": vRtrBgpEvpnVrfPolicyExp7,
       "vRtrBgpEvpnVrfPolicyExp8": vRtrBgpEvpnVrfPolicyExp8,
       "vRtrBgpEvpnVrfPolicyExp9": vRtrBgpEvpnVrfPolicyExp9,
       "vRtrBgpEvpnVrfPolicyExp10": vRtrBgpEvpnVrfPolicyExp10,
       "vRtrBgpEvpnVrfPolicyExp11": vRtrBgpEvpnVrfPolicyExp11,
       "vRtrBgpEvpnVrfPolicyExp12": vRtrBgpEvpnVrfPolicyExp12,
       "vRtrBgpEvpnVrfPolicyExp13": vRtrBgpEvpnVrfPolicyExp13,
       "vRtrBgpEvpnVrfPolicyExp14": vRtrBgpEvpnVrfPolicyExp14,
       "vRtrBgpEvpnVrfPolicyExp15": vRtrBgpEvpnVrfPolicyExp15,
       "vRtrBgpEvpnVrfPolicyCreateOrig": vRtrBgpEvpnVrfPolicyCreateOrig,
       "vRtrIfEthLoopbackObjs": vRtrIfEthLoopbackObjs,
       "vRtrIfEthLoopbackTblLastCh": vRtrIfEthLoopbackTblLastCh,
       "vRtrIfEthLoopbackTable": vRtrIfEthLoopbackTable,
       "vRtrIfEthLoopbackEntry": vRtrIfEthLoopbackEntry,
       "vRtrIfEthLoopbackRowStatus": vRtrIfEthLoopbackRowStatus,
       "vRtrIfEthLoopbackMacSwap": vRtrIfEthLoopbackMacSwap,
       "vRtrIfEthLoopbackOperState": vRtrIfEthLoopbackOperState,
       "vRtrPlcyAcctPolicerTblLstChgd": vRtrPlcyAcctPolicerTblLstChgd,
       "vRtrPlcyAcctPolicerTable": vRtrPlcyAcctPolicerTable,
       "vRtrPlcyAcctPolicerEntry": vRtrPlcyAcctPolicerEntry,
       "vRtrPlcyAcctPolicerIndex": vRtrPlcyAcctPolicerIndex,
       "vRtrPlcyAcctPolicerRowStatus": vRtrPlcyAcctPolicerRowStatus,
       "vRtrPlcyAcctPolicerLastChgd": vRtrPlcyAcctPolicerLastChgd,
       "vRtrPlcyAcctPolicerPeakRateHi": vRtrPlcyAcctPolicerPeakRateHi,
       "vRtrPlcyAcctPolicerPeakRateLo": vRtrPlcyAcctPolicerPeakRateLo,
       "vRtrPlcyAcctPolicerMaxBurstSize": vRtrPlcyAcctPolicerMaxBurstSize,
       "vRtrPlcyAcctIfPolStatsTblLstChgd": vRtrPlcyAcctIfPolStatsTblLstChgd,
       "vRtrPlcyAcctIntfPolStatsTable": vRtrPlcyAcctIntfPolStatsTable,
       "vRtrPlcyAcctIntfPolStatsEntry": vRtrPlcyAcctIntfPolStatsEntry,
       "vRtrPlcyAcctPolicerDropPkts": vRtrPlcyAcctPolicerDropPkts,
       "vRtrPlcyAcctPolicerDropBytes": vRtrPlcyAcctPolicerDropBytes,
       "vRtrPlcyAcctPolicerFwdPkts": vRtrPlcyAcctPolicerFwdPkts,
       "vRtrPlcyAcctPolicerFwdBytes": vRtrPlcyAcctPolicerFwdBytes,
       "vRtrPlcyAcctPolicerIncompleteCnt": vRtrPlcyAcctPolicerIncompleteCnt,
       "vRtrBgpSrv6Objs": vRtrBgpSrv6Objs,
       "vRtrBgpSrv6TblLastCh": vRtrBgpSrv6TblLastCh,
       "vRtrBgpSrv6Table": vRtrBgpSrv6Table,
       "vRtrBgpSrv6Entry": vRtrBgpSrv6Entry,
       "vRtrBgpSrv6BgpInstType": vRtrBgpSrv6BgpInstType,
       "vRtrBgpSrv6BgpInstance": vRtrBgpSrv6BgpInstance,
       "vRtrBgpSrv6RowStatus": vRtrBgpSrv6RowStatus,
       "vRtrBgpSrv6LastChanged": vRtrBgpSrv6LastChanged,
       "vRtrBgpSrv6AdminState": vRtrBgpSrv6AdminState,
       "vRtrBgpSrv6Instance": vRtrBgpSrv6Instance,
       "vRtrBgpSrv6DefLocator": vRtrBgpSrv6DefLocator,
       "vRtrBgpSrv6VrfRD": vRtrBgpSrv6VrfRD,
       "vRtrBgpSrv6AutoRD": vRtrBgpSrv6AutoRD,
       "vRtrBgpSrv6OperRD": vRtrBgpSrv6OperRD,
       "vRtrBgpSrv6OperRDType": vRtrBgpSrv6OperRDType,
       "vRtrBgpSrv6VrfTarget": vRtrBgpSrv6VrfTarget,
       "vRtrBgpSrv6ExportVrfTarget": vRtrBgpSrv6ExportVrfTarget,
       "vRtrBgpSrv6ImportVrfTarget": vRtrBgpSrv6ImportVrfTarget,
       "vRtrBgpSrv6SrcAddrType": vRtrBgpSrv6SrcAddrType,
       "vRtrBgpSrv6SrcAddr": vRtrBgpSrv6SrcAddr,
       "vRtrBgpSrv6DefRtTag": vRtrBgpSrv6DefRtTag,
       "vRtrBgpSrv6DomainId": vRtrBgpSrv6DomainId,
       "vRtrBgpSrv6VrfPolicyTblLastCh": vRtrBgpSrv6VrfPolicyTblLastCh,
       "vRtrBgpSrv6VrfPolicyTable": vRtrBgpSrv6VrfPolicyTable,
       "vRtrBgpSrv6VrfPolicyEntry": vRtrBgpSrv6VrfPolicyEntry,
       "vRtrBgpSrv6VrfPolicyLastChg": vRtrBgpSrv6VrfPolicyLastChg,
       "vRtrBgpSrv6VrfPolicyImp1": vRtrBgpSrv6VrfPolicyImp1,
       "vRtrBgpSrv6VrfPolicyImp2": vRtrBgpSrv6VrfPolicyImp2,
       "vRtrBgpSrv6VrfPolicyImp3": vRtrBgpSrv6VrfPolicyImp3,
       "vRtrBgpSrv6VrfPolicyImp4": vRtrBgpSrv6VrfPolicyImp4,
       "vRtrBgpSrv6VrfPolicyImp5": vRtrBgpSrv6VrfPolicyImp5,
       "vRtrBgpSrv6VrfPolicyImp6": vRtrBgpSrv6VrfPolicyImp6,
       "vRtrBgpSrv6VrfPolicyImp7": vRtrBgpSrv6VrfPolicyImp7,
       "vRtrBgpSrv6VrfPolicyImp8": vRtrBgpSrv6VrfPolicyImp8,
       "vRtrBgpSrv6VrfPolicyImp9": vRtrBgpSrv6VrfPolicyImp9,
       "vRtrBgpSrv6VrfPolicyImp10": vRtrBgpSrv6VrfPolicyImp10,
       "vRtrBgpSrv6VrfPolicyImp11": vRtrBgpSrv6VrfPolicyImp11,
       "vRtrBgpSrv6VrfPolicyImp12": vRtrBgpSrv6VrfPolicyImp12,
       "vRtrBgpSrv6VrfPolicyImp13": vRtrBgpSrv6VrfPolicyImp13,
       "vRtrBgpSrv6VrfPolicyImp14": vRtrBgpSrv6VrfPolicyImp14,
       "vRtrBgpSrv6VrfPolicyImp15": vRtrBgpSrv6VrfPolicyImp15,
       "vRtrBgpSrv6VrfPolicyExp1": vRtrBgpSrv6VrfPolicyExp1,
       "vRtrBgpSrv6VrfPolicyExp2": vRtrBgpSrv6VrfPolicyExp2,
       "vRtrBgpSrv6VrfPolicyExp3": vRtrBgpSrv6VrfPolicyExp3,
       "vRtrBgpSrv6VrfPolicyExp4": vRtrBgpSrv6VrfPolicyExp4,
       "vRtrBgpSrv6VrfPolicyExp5": vRtrBgpSrv6VrfPolicyExp5,
       "vRtrBgpSrv6VrfPolicyExp6": vRtrBgpSrv6VrfPolicyExp6,
       "vRtrBgpSrv6VrfPolicyExp7": vRtrBgpSrv6VrfPolicyExp7,
       "vRtrBgpSrv6VrfPolicyExp8": vRtrBgpSrv6VrfPolicyExp8,
       "vRtrBgpSrv6VrfPolicyExp9": vRtrBgpSrv6VrfPolicyExp9,
       "vRtrBgpSrv6VrfPolicyExp10": vRtrBgpSrv6VrfPolicyExp10,
       "vRtrBgpSrv6VrfPolicyExp11": vRtrBgpSrv6VrfPolicyExp11,
       "vRtrBgpSrv6VrfPolicyExp12": vRtrBgpSrv6VrfPolicyExp12,
       "vRtrBgpSrv6VrfPolicyExp13": vRtrBgpSrv6VrfPolicyExp13,
       "vRtrBgpSrv6VrfPolicyExp14": vRtrBgpSrv6VrfPolicyExp14,
       "vRtrBgpSrv6VrfPolicyExp15": vRtrBgpSrv6VrfPolicyExp15,
       "vRtrBgpSrv6VrfPolicyCreateOrig": vRtrBgpSrv6VrfPolicyCreateOrig,
       "vRtrIfLinkDelayTable": vRtrIfLinkDelayTable,
       "vRtrIfLinkDelayEntry": vRtrIfLinkDelayEntry,
       "vRtrIfLinkDelaySelection": vRtrIfLinkDelaySelection,
       "vRtrIfLinkDelayStatic": vRtrIfLinkDelayStatic,
       "vRtrIfLinkDelayDynamic": vRtrIfLinkDelayDynamic,
       "vRtrIfLinkDelayOper": vRtrIfLinkDelayOper,
       "vRtrIfLinkDelayMeasureTemplName": vRtrIfLinkDelayMeasureTemplName,
       "vRtrIfLnkDlyTwampIpv4AdminState": vRtrIfLnkDlyTwampIpv4AdminState,
       "vRtrIfLnkDlyTwampIpv4DstAddrType": vRtrIfLnkDlyTwampIpv4DstAddrType,
       "vRtrIfLnkDlyTwampIpv4DstAddr": vRtrIfLnkDlyTwampIpv4DstAddr,
       "vRtrIfLnkDlyTwampIpv4SrcAddrType": vRtrIfLnkDlyTwampIpv4SrcAddrType,
       "vRtrIfLnkDlyTwampIpv4SrcAddr": vRtrIfLnkDlyTwampIpv4SrcAddr,
       "vRtrIfLnkDlyTwampIpv6AdminState": vRtrIfLnkDlyTwampIpv6AdminState,
       "vRtrIfLnkDlyTwampIpv6DstAddrType": vRtrIfLnkDlyTwampIpv6DstAddrType,
       "vRtrIfLnkDlyTwampIpv6DstAddr": vRtrIfLnkDlyTwampIpv6DstAddr,
       "vRtrIfLnkDlyTwampIpv6SrcAddrType": vRtrIfLnkDlyTwampIpv6SrcAddrType,
       "vRtrIfLnkDlyTwampIpv6SrcAddr": vRtrIfLnkDlyTwampIpv6SrcAddr,
       "vRtrDPathAttrTable": vRtrDPathAttrTable,
       "vRtrDPathAttrEntry": vRtrDPathAttrEntry,
       "vRtrBgpIpVpnMplsDomainId": vRtrBgpIpVpnMplsDomainId,
       "vRtrLocalRoutesDomainId": vRtrLocalRoutesDomainId,
       "vRtrDpathLengthIgnore": vRtrDpathLengthIgnore,
       "vRtrDPathAttrLastChanged": vRtrDPathAttrLastChanged,
       "tmnxVRtrNotifyPrefix": tmnxVRtrNotifyPrefix,
       "tmnxVRtrNotifications": tmnxVRtrNotifications,
       "tmnxVRtrMidRouteTCA": tmnxVRtrMidRouteTCA,
       "tmnxVRtrHighRouteTCA": tmnxVRtrHighRouteTCA,
       "tmnxVRtrHighRouteCleared": tmnxVRtrHighRouteCleared,
       "tmnxVRtrIllegalLabelTCA": tmnxVRtrIllegalLabelTCA,
       "tmnxVRtrMcastMidRouteTCA": tmnxVRtrMcastMidRouteTCA,
       "tmnxVRtrMcastMaxRoutesTCA": tmnxVRtrMcastMaxRoutesTCA,
       "tmnxVRtrMcastMaxRoutesCleared": tmnxVRtrMcastMaxRoutesCleared,
       "tmnxVRtrMaxArpEntriesTCA": tmnxVRtrMaxArpEntriesTCA,
       "tmnxVRtrMaxArpEntriesCleared": tmnxVRtrMaxArpEntriesCleared,
       "tmnxVRtrDHCPAFEntriesExceeded": tmnxVRtrDHCPAFEntriesExceeded,
       "tmnxVRtrMaxRoutes": tmnxVRtrMaxRoutes,
       "tmnxVRtrDHCPLseStsExceeded": tmnxVRtrDHCPLseStsExceeded,
       "tmnxVRtrDHCPLeaseStateOverride": tmnxVRtrDHCPLeaseStateOverride,
       "tmnxVRtrDHCPSuspiciousPcktRcvd": tmnxVRtrDHCPSuspiciousPcktRcvd,
       "tmnxVRtrDHCPLseStRestoreProblem": tmnxVRtrDHCPLseStRestoreProblem,
       "tmnxVRtrDHCPLseStatePopulateErr": tmnxVRtrDHCPLseStatePopulateErr,
       "tmnxVRtrBfdSessionDown": tmnxVRtrBfdSessionDown,
       "tmnxVRtrBfdMaxSessionOnSlot": tmnxVRtrBfdMaxSessionOnSlot,
       "tmnxVRtrBfdPortTypeNotSupported": tmnxVRtrBfdPortTypeNotSupported,
       "tmnxVRtrDHCPIfLseStatesExceeded": tmnxVRtrDHCPIfLseStatesExceeded,
       "tmnxVRtrDHCP6RelayLseStExceeded": tmnxVRtrDHCP6RelayLseStExceeded,
       "tmnxVRtrDHCP6ServerLseStExceeded": tmnxVRtrDHCP6ServerLseStExceeded,
       "tmnxVRtrDHCP6LseStateOverride": tmnxVRtrDHCP6LseStateOverride,
       "tmnxVRtrDHCP6RelayReplyStripUni": tmnxVRtrDHCP6RelayReplyStripUni,
       "tmnxVRtrDHCP6IllegalClientAddr": tmnxVRtrDHCP6IllegalClientAddr,
       "tmnxVRtrDHCP6AssignedIllegSubnet": tmnxVRtrDHCP6AssignedIllegSubnet,
       "tmnxVRtrDHCP6ClientMacUnresolved": tmnxVRtrDHCP6ClientMacUnresolved,
       "tmnxVRtrBfdSessionUp": tmnxVRtrBfdSessionUp,
       "tmnxVRtrIPv6MidRouteTCA": tmnxVRtrIPv6MidRouteTCA,
       "tmnxVRtrIPv6HighRouteTCA": tmnxVRtrIPv6HighRouteTCA,
       "tmnxVRtrIPv6HighRouteCleared": tmnxVRtrIPv6HighRouteCleared,
       "tmnxVRtrStaticRouteCPEStatus": tmnxVRtrStaticRouteCPEStatus,
       "tmnxVRtrBfdSessionDeleted": tmnxVRtrBfdSessionDeleted,
       "tmnxVRtrBfdSessionProtChange": tmnxVRtrBfdSessionProtChange,
       "tmnxVRtrManagedRouteAddFailed": tmnxVRtrManagedRouteAddFailed,
       "tmnxVRtrFibOccupancyThreshold": tmnxVRtrFibOccupancyThreshold,
       "tmnxVRtrInetAddressAttachFailed": tmnxVRtrInetAddressAttachFailed,
       "tmnxVRtrSingleSfmOverloadStateCh": tmnxVRtrSingleSfmOverloadStateCh,
       "tmnxVRtrGrtExportLimitReached": tmnxVRtrGrtExportLimitReached,
       "tmnxVRtrGrtRoutesExpLimitDropped": tmnxVRtrGrtRoutesExpLimitDropped,
       "tmnxVRtrIfLdpSyncTimerStart": tmnxVRtrIfLdpSyncTimerStart,
       "tmnxVRtrIfLdpSyncTimerStop": tmnxVRtrIfLdpSyncTimerStop,
       "tmnxVRtrBfdNoCpmNpResources": tmnxVRtrBfdNoCpmNpResources,
       "tmnxVRtrGrtV6ExportLimitReached": tmnxVRtrGrtV6ExportLimitReached,
       "tmnxVRtrGrtV6RoutesExpLimDropped": tmnxVRtrGrtV6RoutesExpLimDropped,
       "tmnxVRtrStaticRouteStatusChanged": tmnxVRtrStaticRouteStatusChanged,
       "vRtrIfDcpStaticExcd": vRtrIfDcpStaticExcd,
       "vRtrIfDcpDynamicExcd": vRtrIfDcpDynamicExcd,
       "vRtrIfDcpStaticHoldDownStart": vRtrIfDcpStaticHoldDownStart,
       "vRtrIfDcpDynamicHoldDownStart": vRtrIfDcpDynamicHoldDownStart,
       "vRtrIfDcpStaticHoldDownEnd": vRtrIfDcpStaticHoldDownEnd,
       "vRtrIfDcpDynamicHoldDownEnd": vRtrIfDcpDynamicHoldDownEnd,
       "vRtrIfDcpStaticConform": vRtrIfDcpStaticConform,
       "vRtrIfDcpDynamicConform": vRtrIfDcpDynamicConform,
       "vRtrIfDcpLocMonExcd": vRtrIfDcpLocMonExcd,
       "vRtrIfDcpLocMonExcdDynResource": vRtrIfDcpLocMonExcdDynResource,
       "vRtrIfDcpLocMonExcdAllDynAlloc": vRtrIfDcpLocMonExcdAllDynAlloc,
       "vRtrIfDcpLocMonExcdAllDynFreed": vRtrIfDcpLocMonExcdAllDynFreed,
       "vRtrIfDcpDynamicEnforceAlloc": vRtrIfDcpDynamicEnforceAlloc,
       "vRtrIfDcpDynamicEnforceFreed": vRtrIfDcpDynamicEnforceFreed,
       "tmnxVRtrBfdSessExtDown": tmnxVRtrBfdSessExtDown,
       "tmnxVRtrBfdSessExtUp": tmnxVRtrBfdSessExtUp,
       "tmnxVRtrBfdSessExtDeleted": tmnxVRtrBfdSessExtDeleted,
       "tmnxVRtrBfdSessExtProtChange": tmnxVRtrBfdSessExtProtChange,
       "tmnxVRtrBfdExtNoCpmNpResources": tmnxVRtrBfdExtNoCpmNpResources,
       "tmnxVRtrDnsFault": tmnxVRtrDnsFault,
       "tmnxVRtrMacAcctLimitReached": tmnxVRtrMacAcctLimitReached,
       "tmnxVRtrMacAcctLimitCleared": tmnxVRtrMacAcctLimitCleared,
       "tmnxVRtrNgBfdSessDown": tmnxVRtrNgBfdSessDown,
       "tmnxVRtrNgBfdSessUp": tmnxVRtrNgBfdSessUp,
       "tmnxVRtrNgBfdSessDeleted": tmnxVRtrNgBfdSessDeleted,
       "tmnxVRtrNgBfdSessProtChange": tmnxVRtrNgBfdSessProtChange,
       "tmnxVRtrNgBfdNoCpmNpResources": tmnxVRtrNgBfdNoCpmNpResources,
       "tmnxVRtrNHRvplsARPHighUsage": tmnxVRtrNHRvplsARPHighUsage,
       "tmnxVRtrNHRvplsARPExhaust": tmnxVRtrNHRvplsARPExhaust,
       "tmnxVRtrNHRvplsARPHighUsageClr": tmnxVRtrNHRvplsARPHighUsageClr,
       "tmnxVRtrArpLmt": tmnxVRtrArpLmt,
       "tmnxVRtrArpThresholdExceeded": tmnxVRtrArpThresholdExceeded,
       "tmnxVRtrIpv6NbrLmt": tmnxVRtrIpv6NbrLmt,
       "tmnxVRtrIpv6NbrThresholdExceeded": tmnxVRtrIpv6NbrThresholdExceeded,
       "tmnxVRtrIfIgnorePortState": tmnxVRtrIfIgnorePortState,
       "tmnxVRtrPdnAddrMismatch": tmnxVRtrPdnAddrMismatch,
       "tmnxVRtrPdnAddrMismatchCleared": tmnxVRtrPdnAddrMismatchCleared,
       "tmnxVRtrLeakExportLimitReached": tmnxVRtrLeakExportLimitReached,
       "tmnxVRtrLeakExportLimitDropped": tmnxVRtrLeakExportLimitDropped,
       "tmnxVRtrDhcpClientStatusChanged": tmnxVRtrDhcpClientStatusChanged,
       "tmnxVRtrDhcp6ClientStatusChanged": tmnxVRtrDhcp6ClientStatusChanged,
       "tmnxVRtrNeDiscovered": tmnxVRtrNeDiscovered,
       "tmnxVRtrNeRemoved": tmnxVRtrNeRemoved,
       "tmnxVRtrNeModified": tmnxVRtrNeModified,
       "vRtrIfDhcpClRtStatusChanged": vRtrIfDhcpClRtStatusChanged,
       "vRtrIfDhcpClStateDnsChanged": vRtrIfDhcpClStateDnsChanged,
       "vRtrAutoCfgRaRtStatusChanged": vRtrAutoCfgRaRtStatusChanged,
       "vRtrIfDhcp6ClStateDnsChanged": vRtrIfDhcp6ClStateDnsChanged,
       "vRtrIfEthLoopbackStarted": vRtrIfEthLoopbackStarted,
       "vRtrIfEthLoopbackStopped": vRtrIfEthLoopbackStopped,
       "tmnxVRtrBfdExtNoFreeTxIntrvlSlot": tmnxVRtrBfdExtNoFreeTxIntrvlSlot,
       "tmnxVRtrFibVPNOccupancyThreshold": tmnxVRtrFibVPNOccupancyThreshold}
)
