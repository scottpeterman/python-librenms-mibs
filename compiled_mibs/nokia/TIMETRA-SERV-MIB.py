# SNMP MIB module (TIMETRA-SERV-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\nokia\TIMETRA-SERV-MIB
# Produced by pysmi-1.6.2 at Thu Oct  2 12:14:12 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(InterfaceIndex,
 InterfaceIndexOrZero) = mibBuilder.importSymbols(
    "IF-MIB",
    "InterfaceIndex",
    "InterfaceIndexOrZero")

(InetAddress,
 InetAddressIPv4,
 InetAddressIPv6,
 InetAddressPrefixLength,
 InetAddressType,
 InetAutonomousSystemNumber) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressIPv4",
    "InetAddressIPv6",
    "InetAddressPrefixLength",
    "InetAddressType",
    "InetAutonomousSystemNumber")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DateAndTime,
 DisplayString,
 MacAddress,
 PhysAddress,
 RowPointer,
 RowStatus,
 TextualConvention,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowPointer",
    "RowStatus",
    "TextualConvention",
    "TimeStamp",
    "TruthValue")

(TConfigOrVsdFilterID,
 TFilterID) = mibBuilder.importSymbols(
    "TIMETRA-FILTER-MIB",
    "TConfigOrVsdFilterID",
    "TFilterID")

(timetraSRMIBModules,
 tmnxSRConfs,
 tmnxSRNotifyPrefix,
 tmnxSRObjs) = mibBuilder.importSymbols(
    "TIMETRA-GLOBAL-MIB",
    "timetraSRMIBModules",
    "tmnxSRConfs",
    "tmnxSRNotifyPrefix",
    "tmnxSRObjs")

(tmnxPortPortID,) = mibBuilder.importSymbols(
    "TIMETRA-PORT-MIB",
    "tmnxPortPortID")

(tSchedulerPolicyName,
 tVirtualSchedulerName) = mibBuilder.importSymbols(
    "TIMETRA-QOS-MIB",
    "tSchedulerPolicyName",
    "tVirtualSchedulerName")

(BgpPeeringStatus,
 LAGInterfaceNumberOrZero,
 PwPortIdOrZero,
 QTag,
 QTagOrZero,
 SdpBindId,
 ServiceAdminStatus,
 ServiceOperStatus,
 SvcISID,
 TBurstSizeBytesOvr,
 TDirectionIngEgr,
 TEntryId,
 THPolVirtualScheCIRRate,
 THPolVirtualSchePIRRate,
 THsClassWeightOverride,
 THsmdaWrrWeightOverride,
 TItemDescription,
 TItemLongDescription,
 TItemScope,
 TLDisplayString,
 TLNamedItem,
 TLNamedItemOrEmpty,
 TNamedItem,
 TNamedItemOrEmpty,
 TPolicyID,
 TPolicyStatementNameOrEmpty,
 TPortSchedulerAggRateLimitPIR,
 TQosOverrideType,
 TQosQGrpInstanceIDorZero,
 TQosQueueCIRRateOverride,
 TQosQueuePIRRateOverride,
 TResolveStatus,
 TSiteOperStatus,
 TSrv6Function,
 TSrv6FunctionErrorCode,
 TSrv6FunctionType,
 TSrv6FunctionValue,
 TTcpUdpPort,
 TWeight,
 TmnxActionType,
 TmnxAdminState,
 TmnxAiiType,
 TmnxAncpStringOrZero,
 TmnxAppProfileStringOrEmpty,
 TmnxBfdIntfSessOperState,
 TmnxBgpEvpnAcEthTag,
 TmnxCreateOrigin,
 TmnxCustId,
 TmnxCustIdNoZero,
 TmnxDPathDomainId,
 TmnxDefSubIdSource,
 TmnxEnabledDisabled,
 TmnxEnabledDisabledAdminState,
 TmnxEncapVal,
 TmnxEvpnMHEthSegStatus,
 TmnxEvpnMultiHomingState,
 TmnxExtServId,
 TmnxFpeId,
 TmnxISID,
 TmnxISIDNoZero,
 TmnxLdpFECType,
 TmnxLongDisplayString,
 TmnxManagedRouteStatus,
 TmnxMsPwPeSignaling,
 TmnxNatIsaGrpId,
 TmnxOperGrpHoldDownTime,
 TmnxOperGrpHoldUpTime,
 TmnxOperState,
 TmnxPortID,
 TmnxProxyEntryType,
 TmnxPwGlobalId,
 TmnxPwGlobalIdOrZero,
 TmnxPwPathHopId,
 TmnxQosRateHigh32,
 TmnxQosRateLow32,
 TmnxRadiusFramedRouteMetric,
 TmnxRadiusFramedRoutePreference,
 TmnxRadiusFramedRouteTag,
 TmnxRipListenerStatus,
 TmnxRouteDistType,
 TmnxRouteTargetOrigin,
 TmnxSecRadiusServAlgorithm,
 TmnxServId,
 TmnxSlaProfileStringOrEmpty,
 TmnxSpbBridgePriority,
 TmnxSpbFdbLocale,
 TmnxSpbFdbState,
 TmnxSpbFid,
 TmnxSpbFidOrZero,
 TmnxSpokeSdpId,
 TmnxSpokeSdpIdOrZero,
 TmnxSubHostSessionLimitOverride,
 TmnxSubIdentStringOrEmpty,
 TmnxSubMgtIntDestIdOrEmpty,
 TmnxSubProfileStringOrEmpty,
 TmnxSubShcvAction,
 TmnxSubShcvInterval,
 TmnxSubShcvRetryCount,
 TmnxSubShcvRetryTimeout,
 TmnxSubShcvSrcIpOrigin,
 TmnxSubTerminationType,
 TmnxSvcEvi,
 TmnxSvcEviOrZero,
 TmnxSvcEvpnMplsTransportType,
 TmnxSvcOperGrpCreationOrigin,
 TmnxTacplusAccessOpType,
 TmnxTlsGroupId,
 TmnxTunnelTypeExt,
 TmnxVPNRouteDistinguisher,
 TmnxVRtrID,
 TmnxVRtrIDOrZero,
 TmnxVeId,
 TmnxVni,
 TmnxVniOrZero,
 TmnxVxlanInstance) = mibBuilder.importSymbols(
    "TIMETRA-TC-MIB",
    "BgpPeeringStatus",
    "LAGInterfaceNumberOrZero",
    "PwPortIdOrZero",
    "QTag",
    "QTagOrZero",
    "SdpBindId",
    "ServiceAdminStatus",
    "ServiceOperStatus",
    "SvcISID",
    "TBurstSizeBytesOvr",
    "TDirectionIngEgr",
    "TEntryId",
    "THPolVirtualScheCIRRate",
    "THPolVirtualSchePIRRate",
    "THsClassWeightOverride",
    "THsmdaWrrWeightOverride",
    "TItemDescription",
    "TItemLongDescription",
    "TItemScope",
    "TLDisplayString",
    "TLNamedItem",
    "TLNamedItemOrEmpty",
    "TNamedItem",
    "TNamedItemOrEmpty",
    "TPolicyID",
    "TPolicyStatementNameOrEmpty",
    "TPortSchedulerAggRateLimitPIR",
    "TQosOverrideType",
    "TQosQGrpInstanceIDorZero",
    "TQosQueueCIRRateOverride",
    "TQosQueuePIRRateOverride",
    "TResolveStatus",
    "TSiteOperStatus",
    "TSrv6Function",
    "TSrv6FunctionErrorCode",
    "TSrv6FunctionType",
    "TSrv6FunctionValue",
    "TTcpUdpPort",
    "TWeight",
    "TmnxActionType",
    "TmnxAdminState",
    "TmnxAiiType",
    "TmnxAncpStringOrZero",
    "TmnxAppProfileStringOrEmpty",
    "TmnxBfdIntfSessOperState",
    "TmnxBgpEvpnAcEthTag",
    "TmnxCreateOrigin",
    "TmnxCustId",
    "TmnxCustIdNoZero",
    "TmnxDPathDomainId",
    "TmnxDefSubIdSource",
    "TmnxEnabledDisabled",
    "TmnxEnabledDisabledAdminState",
    "TmnxEncapVal",
    "TmnxEvpnMHEthSegStatus",
    "TmnxEvpnMultiHomingState",
    "TmnxExtServId",
    "TmnxFpeId",
    "TmnxISID",
    "TmnxISIDNoZero",
    "TmnxLdpFECType",
    "TmnxLongDisplayString",
    "TmnxManagedRouteStatus",
    "TmnxMsPwPeSignaling",
    "TmnxNatIsaGrpId",
    "TmnxOperGrpHoldDownTime",
    "TmnxOperGrpHoldUpTime",
    "TmnxOperState",
    "TmnxPortID",
    "TmnxProxyEntryType",
    "TmnxPwGlobalId",
    "TmnxPwGlobalIdOrZero",
    "TmnxPwPathHopId",
    "TmnxQosRateHigh32",
    "TmnxQosRateLow32",
    "TmnxRadiusFramedRouteMetric",
    "TmnxRadiusFramedRoutePreference",
    "TmnxRadiusFramedRouteTag",
    "TmnxRipListenerStatus",
    "TmnxRouteDistType",
    "TmnxRouteTargetOrigin",
    "TmnxSecRadiusServAlgorithm",
    "TmnxServId",
    "TmnxSlaProfileStringOrEmpty",
    "TmnxSpbBridgePriority",
    "TmnxSpbFdbLocale",
    "TmnxSpbFdbState",
    "TmnxSpbFid",
    "TmnxSpbFidOrZero",
    "TmnxSpokeSdpId",
    "TmnxSpokeSdpIdOrZero",
    "TmnxSubHostSessionLimitOverride",
    "TmnxSubIdentStringOrEmpty",
    "TmnxSubMgtIntDestIdOrEmpty",
    "TmnxSubProfileStringOrEmpty",
    "TmnxSubShcvAction",
    "TmnxSubShcvInterval",
    "TmnxSubShcvRetryCount",
    "TmnxSubShcvRetryTimeout",
    "TmnxSubShcvSrcIpOrigin",
    "TmnxSubTerminationType",
    "TmnxSvcEvi",
    "TmnxSvcEviOrZero",
    "TmnxSvcEvpnMplsTransportType",
    "TmnxSvcOperGrpCreationOrigin",
    "TmnxTacplusAccessOpType",
    "TmnxTlsGroupId",
    "TmnxTunnelTypeExt",
    "TmnxVPNRouteDistinguisher",
    "TmnxVRtrID",
    "TmnxVRtrIDOrZero",
    "TmnxVeId",
    "TmnxVni",
    "TmnxVniOrZero",
    "TmnxVxlanInstance")


# MODULE-IDENTITY

timetraServicesMIBModule = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 4)
)
if mibBuilder.loadTexts:
    timetraServicesMIBModule.setRevisions(
        ("2017-06-30 00:00",
         "2017-03-15 00:00",
         "2016-02-01 00:00",
         "2015-01-20 00:00",
         "2014-01-01 00:00",
         "2011-02-01 00:00",
         "2009-02-28 00:00",
         "2008-07-01 00:00",
         "2008-01-01 00:00",
         "2007-01-01 00:00",
         "2006-02-28 00:00",
         "2005-08-31 00:00",
         "2005-01-24 00:00",
         "2004-01-15 00:00",
         "2003-08-15 00:00",
         "2003-01-20 00:00",
         "2000-08-14 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class ArpHostInfoOrigin(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("radius", 2),
          ("default", 5))
    )



class ServObjName(DisplayString):
    status = "current"
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )



class ServObjDesc(DisplayString):
    status = "current"
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )



class ServObjLongDesc(DisplayString):
    status = "current"
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 160),
    )



class ServType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("epipe", 1),
          ("tls", 3),
          ("vprn", 4),
          ("ies", 5),
          ("mirror", 6),
          ("apipe", 7),
          ("fpipe", 8),
          ("ipipe", 9),
          ("cpipe", 10),
          ("intTls", 11),
          ("evpnIsaTls", 12))
    )



class VpnId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )



class SdpId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )



class SdpTemplateId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )



class PWTemplateId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )



class PWTemplateIdNoZero(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )



class SecretError(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("noResponse", 1))
    )



class TlsBpduTranslation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("disabled", 2),
          ("pvst", 3),
          ("stp", 4),
          ("pvst-rw", 5),
          ("auto-rw", 6))
    )



class TlsLimitMacMoveLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("secondary", 2),
          ("tertiary", 3))
    )



class TlsLimitMacMove(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blockable", 1),
          ("nonBlockable", 2))
    )



class TlsClientProfileError(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("internal", 1),
          ("noRoute", 2),
          ("timeout", 3),
          ("handshakeFailure", 4),
          ("closedByRemote", 5),
          ("tlsProfileDisabled", 6))
    )



class SdpBindVcType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("undef", 1),
          ("ether", 2),
          ("vlan", 4),
          ("mirror", 5),
          ("atmSdu", 6),
          ("atmCell", 7),
          ("atmVcc", 8),
          ("atmVpc", 9),
          ("frDlci", 10),
          ("ipipe", 11),
          ("satopE1", 12),
          ("satopT1", 13),
          ("satopE3", 14),
          ("satopT3", 15),
          ("cesopsn", 16),
          ("cesopsnCas", 17))
    )



class StpExceptionCondition(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("oneWayCommuniation", 2),
          ("downstreamLoopDetected", 3))
    )



class LspIdList(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 68),
    )



class BridgeId(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8



class TSapIngQueueId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )



class TSapEgrQueueId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )



class TStpPortState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("blocking", 2),
          ("listening", 3),
          ("learning", 4),
          ("forwarding", 5),
          ("broken", 6),
          ("discarding", 7))
    )



class StpPortRole(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("master", 0),
          ("root", 1),
          ("designated", 2),
          ("alternate", 3),
          ("backup", 4),
          ("disabled", 5))
    )



class StpProtocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("stp", 1),
          ("rstp", 2),
          ("mstp", 3))
    )



class MfibLocation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("sdp", 2),
          ("vxlan", 3),
          ("evpnMpls", 4),
          ("vxlanV6", 5))
    )



class MfibGrpSrcFwdOrBlk(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("block", 2))
    )



class MvplsPruneState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 1),
          ("notPruned", 2),
          ("pruned", 3))
    )



class TQosQueueAttribute(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("cbs", 0),
          ("cir", 1),
          ("cirAdaptRule", 2),
          ("mbs", 3),
          ("pir", 4),
          ("pirAdaptRule", 5),
          ("hiPrioOnly", 6),
          ("avgOverhead", 7),
          ("weight", 8),
          ("cirWeight", 9),
          ("pirPercent", 10),
          ("cirPercent", 11),
          ("drpTailLowReductnMbs", 12),
          ("hsWrrWeight", 13),
          ("hsClassWeight", 14),
          ("hsWredQueue", 15),
          ("burstLimit", 16))
    )


class TVirtSchedAttribute(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("cir", 0),
          ("pir", 1),
          ("summedCir", 2),
          ("weight", 3),
          ("cirWeight", 4))
    )


class MstiInstanceId(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )



class MstiInstanceIdOrZero(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )



class DhcpLseStateInfoOrigin(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("dhcp", 1),
          ("radius", 2),
          ("retailerRadius", 3),
          ("retailerDhcp", 4),
          ("default", 5),
          ("localUserDb", 6),
          ("gtp", 7),
          ("localPool", 8),
          ("wpp", 9),
          ("diameterGx", 10),
          ("dtc", 11),
          ("diameterNasreq", 12),
          ("data", 13),
          ("bonding", 14))
    )



class IAIDType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("temporary", 1),
          ("non-temporary", 2),
          ("prefix", 3))
    )



class TdmOptionsSigPkts(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noSigPkts", 0),
          ("dataPkts", 1),
          ("sigPkts", 2),
          ("dataAndSigPkts", 3))
    )



class TdmOptionsCasTrunkFraming(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noCas", 0),
          ("e1Trunk", 1),
          ("t1EsfTrunk", 2),
          ("t1SfTrunk", 3))
    )



class CemSapReportAlarm(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("notUsed", 0),
          ("strayPkts", 1),
          ("malformedPkts", 2),
          ("pktLoss", 3),
          ("bfrOverrun", 4),
          ("bfrUnderrun", 5),
          ("rmtPktLoss", 6),
          ("rmtFault", 7),
          ("rmtRdi", 8))
    )


class CemSapEcid(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048575),
    )



class SdpBFHundredthsOfPercent(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )



class SdpBindBandwidth(TextualConvention, Unsigned32):
    status = "current"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100000000),
    )



class L2ptProtocols(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("stp", 0),
          ("cdp", 1),
          ("vtp", 2),
          ("dtp", 3),
          ("pagp", 4),
          ("udld", 5))
    )


class ConfigStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("created", 1),
          ("modified", 2),
          ("deleted", 3))
    )



class ServAccessLocation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("spoke", 2))
    )



class ServShcvOperState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("undefined", 2),
          ("down", 3),
          ("up", 4))
    )



class TMrpPolicyDefaultAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("block", 1),
          ("allow", 2))
    )



class TMrpPolicyAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("block", 1),
          ("allow", 2),
          ("end-station", 3))
    )



class TmnxSiteId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )



class TmnxSiteIdOrEmpty(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 65535),
    )



class TmnxSVlanEncapVal(TextualConvention, Unsigned32):
    status = "current"


# MIB Managed Objects in the order of their OIDs

_TmnxServConformance_ObjectIdentity = ObjectIdentity
tmnxServConformance = _TmnxServConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4)
)
_TmnxCustConformance_ObjectIdentity = ObjectIdentity
tmnxCustConformance = _TmnxCustConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1)
)
_TmnxCustCompliances_ObjectIdentity = ObjectIdentity
tmnxCustCompliances = _TmnxCustCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 1)
)
_TmnxCustGroups_ObjectIdentity = ObjectIdentity
tmnxCustGroups = _TmnxCustGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2)
)
_TmnxSvcConformance_ObjectIdentity = ObjectIdentity
tmnxSvcConformance = _TmnxSvcConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2)
)
_TmnxSvcCompliances_ObjectIdentity = ObjectIdentity
tmnxSvcCompliances = _TmnxSvcCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1)
)
_TmnxSvcGroups_ObjectIdentity = ObjectIdentity
tmnxSvcGroups = _TmnxSvcGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2)
)
_TmnxTstpConformance_ObjectIdentity = ObjectIdentity
tmnxTstpConformance = _TmnxTstpConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 5)
)
_TmnxTstpCompliances_ObjectIdentity = ObjectIdentity
tmnxTstpCompliances = _TmnxTstpCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 5, 1)
)
_TmnxTstpGroups_ObjectIdentity = ObjectIdentity
tmnxTstpGroups = _TmnxTstpGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 5, 2)
)
_TmnxServObjs_ObjectIdentity = ObjectIdentity
tmnxServObjs = _TmnxServObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4)
)
_TmnxCustObjs_ObjectIdentity = ObjectIdentity
tmnxCustObjs = _TmnxCustObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1)
)
_CustNumEntries_Type = Integer32
_CustNumEntries_Object = MibScalar
custNumEntries = _CustNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 1),
    _CustNumEntries_Type()
)
custNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custNumEntries.setStatus("current")
_CustNextFreeId_Type = TmnxCustId
_CustNextFreeId_Object = MibScalar
custNextFreeId = _CustNextFreeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 2),
    _CustNextFreeId_Type()
)
custNextFreeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custNextFreeId.setStatus("current")
_CustInfoTable_Object = MibTable
custInfoTable = _CustInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3)
)
if mibBuilder.loadTexts:
    custInfoTable.setStatus("current")
_CustInfoEntry_Object = MibTableRow
custInfoEntry = _CustInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1)
)
custInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
)
if mibBuilder.loadTexts:
    custInfoEntry.setStatus("current")
_CustId_Type = TmnxCustIdNoZero
_CustId_Object = MibTableColumn
custId = _CustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 1),
    _CustId_Type()
)
custId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custId.setStatus("current")
_CustRowStatus_Type = RowStatus
_CustRowStatus_Object = MibTableColumn
custRowStatus = _CustRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 2),
    _CustRowStatus_Type()
)
custRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custRowStatus.setStatus("current")


class _CustDescription_Type(ServObjDesc):
    """Custom type custDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_CustDescription_Type.__name__ = "ServObjDesc"
_CustDescription_Object = MibTableColumn
custDescription = _CustDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 3),
    _CustDescription_Type()
)
custDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custDescription.setStatus("current")


class _CustContact_Type(ServObjDesc):
    """Custom type custContact based on ServObjDesc"""
    defaultValue = OctetString("")


_CustContact_Type.__name__ = "ServObjDesc"
_CustContact_Object = MibTableColumn
custContact = _CustContact_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 4),
    _CustContact_Type()
)
custContact.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custContact.setStatus("current")


class _CustPhone_Type(ServObjDesc):
    """Custom type custPhone based on ServObjDesc"""
    defaultValue = OctetString("")


_CustPhone_Type.__name__ = "ServObjDesc"
_CustPhone_Object = MibTableColumn
custPhone = _CustPhone_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 5),
    _CustPhone_Type()
)
custPhone.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custPhone.setStatus("current")
_CustLastMgmtChange_Type = TimeStamp
_CustLastMgmtChange_Object = MibTableColumn
custLastMgmtChange = _CustLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 6),
    _CustLastMgmtChange_Type()
)
custLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custLastMgmtChange.setStatus("current")
_CustCreationOrigin_Type = TmnxCreateOrigin
_CustCreationOrigin_Object = MibTableColumn
custCreationOrigin = _CustCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 7),
    _CustCreationOrigin_Type()
)
custCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custCreationOrigin.setStatus("current")


class _CustName_Type(TLNamedItemOrEmpty):
    """Custom type custName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_CustName_Type.__name__ = "TLNamedItemOrEmpty"
_CustName_Object = MibTableColumn
custName = _CustName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 3, 1, 8),
    _CustName_Type()
)
custName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custName.setStatus("current")
_CustMultiServiceSiteTable_Object = MibTable
custMultiServiceSiteTable = _CustMultiServiceSiteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4)
)
if mibBuilder.loadTexts:
    custMultiServiceSiteTable.setStatus("current")
_CustMultiServiceSiteEntry_Object = MibTableRow
custMultiServiceSiteEntry = _CustMultiServiceSiteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1)
)
custMultiServiceSiteEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (1, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
)
if mibBuilder.loadTexts:
    custMultiServiceSiteEntry.setStatus("current")
_CustMultSvcSiteName_Type = TNamedItem
_CustMultSvcSiteName_Object = MibTableColumn
custMultSvcSiteName = _CustMultSvcSiteName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 1),
    _CustMultSvcSiteName_Type()
)
custMultSvcSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteName.setStatus("current")
_CustMultSvcSiteRowStatus_Type = RowStatus
_CustMultSvcSiteRowStatus_Object = MibTableColumn
custMultSvcSiteRowStatus = _CustMultSvcSiteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 2),
    _CustMultSvcSiteRowStatus_Type()
)
custMultSvcSiteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteRowStatus.setStatus("current")


class _CustMultSvcSiteDescription_Type(ServObjDesc):
    """Custom type custMultSvcSiteDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_CustMultSvcSiteDescription_Type.__name__ = "ServObjDesc"
_CustMultSvcSiteDescription_Object = MibTableColumn
custMultSvcSiteDescription = _CustMultSvcSiteDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 3),
    _CustMultSvcSiteDescription_Type()
)
custMultSvcSiteDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteDescription.setStatus("current")


class _CustMultSvcSiteScope_Type(Integer32):
    """Custom type custMultSvcSiteScope based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("port", 1),
          ("card", 2),
          ("fpe", 3))
    )


_CustMultSvcSiteScope_Type.__name__ = "Integer32"
_CustMultSvcSiteScope_Object = MibTableColumn
custMultSvcSiteScope = _CustMultSvcSiteScope_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 4),
    _CustMultSvcSiteScope_Type()
)
custMultSvcSiteScope.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteScope.setStatus("current")


class _CustMultSvcSiteAssignment_Type(Unsigned32):
    """Custom type custMultSvcSiteAssignment based on Unsigned32"""
    defaultValue = 0


_CustMultSvcSiteAssignment_Type.__name__ = "Unsigned32"
_CustMultSvcSiteAssignment_Object = MibTableColumn
custMultSvcSiteAssignment = _CustMultSvcSiteAssignment_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 5),
    _CustMultSvcSiteAssignment_Type()
)
custMultSvcSiteAssignment.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteAssignment.setStatus("current")


class _CustMultSvcSiteIngressSchedulerPolicy_Type(ServObjName):
    """Custom type custMultSvcSiteIngressSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_CustMultSvcSiteIngressSchedulerPolicy_Type.__name__ = "ServObjName"
_CustMultSvcSiteIngressSchedulerPolicy_Object = MibTableColumn
custMultSvcSiteIngressSchedulerPolicy = _CustMultSvcSiteIngressSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 6),
    _CustMultSvcSiteIngressSchedulerPolicy_Type()
)
custMultSvcSiteIngressSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteIngressSchedulerPolicy.setStatus("current")


class _CustMultSvcSiteEgressSchedulerPolicy_Type(ServObjName):
    """Custom type custMultSvcSiteEgressSchedulerPolicy based on ServObjName"""
    defaultValue = OctetString("")


_CustMultSvcSiteEgressSchedulerPolicy_Type.__name__ = "ServObjName"
_CustMultSvcSiteEgressSchedulerPolicy_Object = MibTableColumn
custMultSvcSiteEgressSchedulerPolicy = _CustMultSvcSiteEgressSchedulerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 7),
    _CustMultSvcSiteEgressSchedulerPolicy_Type()
)
custMultSvcSiteEgressSchedulerPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgressSchedulerPolicy.setStatus("current")
_CustMultSvcSiteLastMgmtChange_Type = TimeStamp
_CustMultSvcSiteLastMgmtChange_Object = MibTableColumn
custMultSvcSiteLastMgmtChange = _CustMultSvcSiteLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 8),
    _CustMultSvcSiteLastMgmtChange_Type()
)
custMultSvcSiteLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteLastMgmtChange.setStatus("current")


class _CustMultSvcSiteTodSuite_Type(TNamedItemOrEmpty):
    """Custom type custMultSvcSiteTodSuite based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_CustMultSvcSiteTodSuite_Type.__name__ = "TNamedItemOrEmpty"
_CustMultSvcSiteTodSuite_Object = MibTableColumn
custMultSvcSiteTodSuite = _CustMultSvcSiteTodSuite_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 9),
    _CustMultSvcSiteTodSuite_Type()
)
custMultSvcSiteTodSuite.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteTodSuite.setStatus("obsolete")
_CustMultSvcSiteCurrentIngrSchedPlcy_Type = ServObjName
_CustMultSvcSiteCurrentIngrSchedPlcy_Object = MibTableColumn
custMultSvcSiteCurrentIngrSchedPlcy = _CustMultSvcSiteCurrentIngrSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 10),
    _CustMultSvcSiteCurrentIngrSchedPlcy_Type()
)
custMultSvcSiteCurrentIngrSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteCurrentIngrSchedPlcy.setStatus("obsolete")
_CustMultSvcSiteCurrentEgrSchedPlcy_Type = ServObjName
_CustMultSvcSiteCurrentEgrSchedPlcy_Object = MibTableColumn
custMultSvcSiteCurrentEgrSchedPlcy = _CustMultSvcSiteCurrentEgrSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 11),
    _CustMultSvcSiteCurrentEgrSchedPlcy_Type()
)
custMultSvcSiteCurrentEgrSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteCurrentEgrSchedPlcy.setStatus("obsolete")


class _CustMultSvcSiteEgressAggRateLimit_Type(TPortSchedulerAggRateLimitPIR):
    """Custom type custMultSvcSiteEgressAggRateLimit based on TPortSchedulerAggRateLimitPIR"""
    defaultValue = -1


_CustMultSvcSiteEgressAggRateLimit_Type.__name__ = "TPortSchedulerAggRateLimitPIR"
_CustMultSvcSiteEgressAggRateLimit_Object = MibTableColumn
custMultSvcSiteEgressAggRateLimit = _CustMultSvcSiteEgressAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 12),
    _CustMultSvcSiteEgressAggRateLimit_Type()
)
custMultSvcSiteEgressAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgressAggRateLimit.setStatus("obsolete")
if mibBuilder.loadTexts:
    custMultSvcSiteEgressAggRateLimit.setUnits("kilobps")
_CustMultSvcSiteIntendedIngrSchedPlcy_Type = ServObjName
_CustMultSvcSiteIntendedIngrSchedPlcy_Object = MibTableColumn
custMultSvcSiteIntendedIngrSchedPlcy = _CustMultSvcSiteIntendedIngrSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 13),
    _CustMultSvcSiteIntendedIngrSchedPlcy_Type()
)
custMultSvcSiteIntendedIngrSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteIntendedIngrSchedPlcy.setStatus("obsolete")
_CustMultSvcSiteIntendedEgrSchedPlcy_Type = ServObjName
_CustMultSvcSiteIntendedEgrSchedPlcy_Object = MibTableColumn
custMultSvcSiteIntendedEgrSchedPlcy = _CustMultSvcSiteIntendedEgrSchedPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 14),
    _CustMultSvcSiteIntendedEgrSchedPlcy_Type()
)
custMultSvcSiteIntendedEgrSchedPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMultSvcSiteIntendedEgrSchedPlcy.setStatus("obsolete")


class _CustMultSvcSiteFrameBasedAccnt_Type(TruthValue):
    """Custom type custMultSvcSiteFrameBasedAccnt based on TruthValue"""
    defaultValue = 2


_CustMultSvcSiteFrameBasedAccnt_Type.__name__ = "TruthValue"
_CustMultSvcSiteFrameBasedAccnt_Object = MibTableColumn
custMultSvcSiteFrameBasedAccnt = _CustMultSvcSiteFrameBasedAccnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 15),
    _CustMultSvcSiteFrameBasedAccnt_Type()
)
custMultSvcSiteFrameBasedAccnt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteFrameBasedAccnt.setStatus("current")


class _CustMultSvcSiteSubscriberMss_Type(TruthValue):
    """Custom type custMultSvcSiteSubscriberMss based on TruthValue"""
    defaultValue = 2


_CustMultSvcSiteSubscriberMss_Type.__name__ = "TruthValue"
_CustMultSvcSiteSubscriberMss_Object = MibTableColumn
custMultSvcSiteSubscriberMss = _CustMultSvcSiteSubscriberMss_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 16),
    _CustMultSvcSiteSubscriberMss_Type()
)
custMultSvcSiteSubscriberMss.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteSubscriberMss.setStatus("current")


class _CustMultSvcSiteIngPolcrCtrlPolcy_Type(TNamedItemOrEmpty):
    """Custom type custMultSvcSiteIngPolcrCtrlPolcy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_CustMultSvcSiteIngPolcrCtrlPolcy_Type.__name__ = "TNamedItemOrEmpty"
_CustMultSvcSiteIngPolcrCtrlPolcy_Object = MibTableColumn
custMultSvcSiteIngPolcrCtrlPolcy = _CustMultSvcSiteIngPolcrCtrlPolcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 17),
    _CustMultSvcSiteIngPolcrCtrlPolcy_Type()
)
custMultSvcSiteIngPolcrCtrlPolcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteIngPolcrCtrlPolcy.setStatus("current")


class _CustMultSvcSiteEgrPolcrCtrlPolcy_Type(TNamedItemOrEmpty):
    """Custom type custMultSvcSiteEgrPolcrCtrlPolcy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_CustMultSvcSiteEgrPolcrCtrlPolcy_Type.__name__ = "TNamedItemOrEmpty"
_CustMultSvcSiteEgrPolcrCtrlPolcy_Object = MibTableColumn
custMultSvcSiteEgrPolcrCtrlPolcy = _CustMultSvcSiteEgrPolcrCtrlPolcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 18),
    _CustMultSvcSiteEgrPolcrCtrlPolcy_Type()
)
custMultSvcSiteEgrPolcrCtrlPolcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgrPolcrCtrlPolcy.setStatus("current")


class _CustMultSvcSiteEgressAggRateLUB_Type(TruthValue):
    """Custom type custMultSvcSiteEgressAggRateLUB based on TruthValue"""
    defaultValue = 2


_CustMultSvcSiteEgressAggRateLUB_Type.__name__ = "TruthValue"
_CustMultSvcSiteEgressAggRateLUB_Object = MibTableColumn
custMultSvcSiteEgressAggRateLUB = _CustMultSvcSiteEgressAggRateLUB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 19),
    _CustMultSvcSiteEgressAggRateLUB_Type()
)
custMultSvcSiteEgressAggRateLUB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgressAggRateLUB.setStatus("current")


class _CustMultSvcSiteEgrAggRateLimitHi_Type(TmnxQosRateHigh32):
    """Custom type custMultSvcSiteEgrAggRateLimitHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_CustMultSvcSiteEgrAggRateLimitHi_Type.__name__ = "TmnxQosRateHigh32"
_CustMultSvcSiteEgrAggRateLimitHi_Object = MibTableColumn
custMultSvcSiteEgrAggRateLimitHi = _CustMultSvcSiteEgrAggRateLimitHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 21),
    _CustMultSvcSiteEgrAggRateLimitHi_Type()
)
custMultSvcSiteEgrAggRateLimitHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgrAggRateLimitHi.setStatus("current")
if mibBuilder.loadTexts:
    custMultSvcSiteEgrAggRateLimitHi.setUnits("kilobps")


class _CustMultSvcSiteEgrAggRateLimit_Type(TmnxQosRateLow32):
    """Custom type custMultSvcSiteEgrAggRateLimit based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_CustMultSvcSiteEgrAggRateLimit_Type.__name__ = "TmnxQosRateLow32"
_CustMultSvcSiteEgrAggRateLimit_Object = MibTableColumn
custMultSvcSiteEgrAggRateLimit = _CustMultSvcSiteEgrAggRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 4, 1, 22),
    _CustMultSvcSiteEgrAggRateLimit_Type()
)
custMultSvcSiteEgrAggRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMultSvcSiteEgrAggRateLimit.setStatus("current")
if mibBuilder.loadTexts:
    custMultSvcSiteEgrAggRateLimit.setUnits("kilobps")
_CustMultiSvcSiteIngStatsTable_Object = MibTable
custMultiSvcSiteIngStatsTable = _CustMultiSvcSiteIngStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 5)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngStatsTable.setStatus("current")
_CustMultiSvcSiteIngStatsEntry_Object = MibTableRow
custMultiSvcSiteIngStatsEntry = _CustMultiSvcSiteIngStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 5, 1)
)
custMultiSvcSiteIngStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (1, "TIMETRA-SERV-MIB", "custIngQosSchedName"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngStatsEntry.setStatus("current")
_CustIngQosSchedName_Type = TNamedItem
_CustIngQosSchedName_Object = MibTableColumn
custIngQosSchedName = _CustIngQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 5, 1, 1),
    _CustIngQosSchedName_Type()
)
custIngQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custIngQosSchedName.setStatus("current")
_CustIngQosSchedStatsForwardedPackets_Type = Counter64
_CustIngQosSchedStatsForwardedPackets_Object = MibTableColumn
custIngQosSchedStatsForwardedPackets = _CustIngQosSchedStatsForwardedPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 5, 1, 2),
    _CustIngQosSchedStatsForwardedPackets_Type()
)
custIngQosSchedStatsForwardedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosSchedStatsForwardedPackets.setStatus("current")
_CustIngQosSchedStatsForwardedOctets_Type = Counter64
_CustIngQosSchedStatsForwardedOctets_Object = MibTableColumn
custIngQosSchedStatsForwardedOctets = _CustIngQosSchedStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 5, 1, 3),
    _CustIngQosSchedStatsForwardedOctets_Type()
)
custIngQosSchedStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosSchedStatsForwardedOctets.setStatus("current")
_CustMultiSvcSiteEgrStatsTable_Object = MibTable
custMultiSvcSiteEgrStatsTable = _CustMultiSvcSiteEgrStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 6)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrStatsTable.setStatus("current")
_CustMultiSvcSiteEgrStatsEntry_Object = MibTableRow
custMultiSvcSiteEgrStatsEntry = _CustMultiSvcSiteEgrStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 6, 1)
)
custMultiSvcSiteEgrStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (1, "TIMETRA-SERV-MIB", "custEgrQosSchedName"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrStatsEntry.setStatus("current")
_CustEgrQosSchedName_Type = TNamedItem
_CustEgrQosSchedName_Object = MibTableColumn
custEgrQosSchedName = _CustEgrQosSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 6, 1, 1),
    _CustEgrQosSchedName_Type()
)
custEgrQosSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custEgrQosSchedName.setStatus("current")
_CustEgrQosSchedStatsForwardedPackets_Type = Counter64
_CustEgrQosSchedStatsForwardedPackets_Object = MibTableColumn
custEgrQosSchedStatsForwardedPackets = _CustEgrQosSchedStatsForwardedPackets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 6, 1, 2),
    _CustEgrQosSchedStatsForwardedPackets_Type()
)
custEgrQosSchedStatsForwardedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosSchedStatsForwardedPackets.setStatus("current")
_CustEgrQosSchedStatsForwardedOctets_Type = Counter64
_CustEgrQosSchedStatsForwardedOctets_Object = MibTableColumn
custEgrQosSchedStatsForwardedOctets = _CustEgrQosSchedStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 6, 1, 3),
    _CustEgrQosSchedStatsForwardedOctets_Type()
)
custEgrQosSchedStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosSchedStatsForwardedOctets.setStatus("current")
_CustIngQosPortIdSchedStatsTable_Object = MibTable
custIngQosPortIdSchedStatsTable = _CustIngQosPortIdSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7)
)
if mibBuilder.loadTexts:
    custIngQosPortIdSchedStatsTable.setStatus("current")
_CustIngQosPortIdSchedStatsEntry_Object = MibTableRow
custIngQosPortIdSchedStatsEntry = _CustIngQosPortIdSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7, 1)
)
custIngQosPortIdSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custIngQosPortIdSchedName"),
    (0, "TIMETRA-SERV-MIB", "custIngQosAssignmentPortId"),
)
if mibBuilder.loadTexts:
    custIngQosPortIdSchedStatsEntry.setStatus("current")
_CustIngQosPortIdSchedName_Type = TNamedItem
_CustIngQosPortIdSchedName_Object = MibTableColumn
custIngQosPortIdSchedName = _CustIngQosPortIdSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7, 1, 1),
    _CustIngQosPortIdSchedName_Type()
)
custIngQosPortIdSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custIngQosPortIdSchedName.setStatus("current")
_CustIngQosAssignmentPortId_Type = TmnxPortID
_CustIngQosAssignmentPortId_Object = MibTableColumn
custIngQosAssignmentPortId = _CustIngQosAssignmentPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7, 1, 2),
    _CustIngQosAssignmentPortId_Type()
)
custIngQosAssignmentPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custIngQosAssignmentPortId.setStatus("current")
_CustIngQosPortSchedFwdPkts_Type = Counter64
_CustIngQosPortSchedFwdPkts_Object = MibTableColumn
custIngQosPortSchedFwdPkts = _CustIngQosPortSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7, 1, 3),
    _CustIngQosPortSchedFwdPkts_Type()
)
custIngQosPortSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortSchedFwdPkts.setStatus("current")
_CustIngQosPortSchedFwdOctets_Type = Counter64
_CustIngQosPortSchedFwdOctets_Object = MibTableColumn
custIngQosPortSchedFwdOctets = _CustIngQosPortSchedFwdOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 7, 1, 4),
    _CustIngQosPortSchedFwdOctets_Type()
)
custIngQosPortSchedFwdOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortSchedFwdOctets.setStatus("current")
_CustEgrQosPortIdSchedStatsTable_Object = MibTable
custEgrQosPortIdSchedStatsTable = _CustEgrQosPortIdSchedStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8)
)
if mibBuilder.loadTexts:
    custEgrQosPortIdSchedStatsTable.setStatus("current")
_CustEgrQosPortIdSchedStatsEntry_Object = MibTableRow
custEgrQosPortIdSchedStatsEntry = _CustEgrQosPortIdSchedStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8, 1)
)
custEgrQosPortIdSchedStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custEgrQosPortIdSchedName"),
    (0, "TIMETRA-SERV-MIB", "custEgrQosAssignmentPortId"),
)
if mibBuilder.loadTexts:
    custEgrQosPortIdSchedStatsEntry.setStatus("current")
_CustEgrQosPortIdSchedName_Type = TNamedItem
_CustEgrQosPortIdSchedName_Object = MibTableColumn
custEgrQosPortIdSchedName = _CustEgrQosPortIdSchedName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8, 1, 1),
    _CustEgrQosPortIdSchedName_Type()
)
custEgrQosPortIdSchedName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custEgrQosPortIdSchedName.setStatus("current")
_CustEgrQosAssignmentPortId_Type = TmnxPortID
_CustEgrQosAssignmentPortId_Object = MibTableColumn
custEgrQosAssignmentPortId = _CustEgrQosAssignmentPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8, 1, 2),
    _CustEgrQosAssignmentPortId_Type()
)
custEgrQosAssignmentPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custEgrQosAssignmentPortId.setStatus("current")
_CustEgrQosPortSchedFwdPkts_Type = Counter64
_CustEgrQosPortSchedFwdPkts_Object = MibTableColumn
custEgrQosPortSchedFwdPkts = _CustEgrQosPortSchedFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8, 1, 3),
    _CustEgrQosPortSchedFwdPkts_Type()
)
custEgrQosPortSchedFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortSchedFwdPkts.setStatus("current")
_CustEgrQosPortSchedFwdOctets_Type = Counter64
_CustEgrQosPortSchedFwdOctets_Object = MibTableColumn
custEgrQosPortSchedFwdOctets = _CustEgrQosPortSchedFwdOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 8, 1, 4),
    _CustEgrQosPortSchedFwdOctets_Type()
)
custEgrQosPortSchedFwdOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortSchedFwdOctets.setStatus("current")
_CustMssIngQosSchedInfoTable_Object = MibTable
custMssIngQosSchedInfoTable = _CustMssIngQosSchedInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9)
)
if mibBuilder.loadTexts:
    custMssIngQosSchedInfoTable.setStatus("current")
_CustMssIngQosSchedInfoEntry_Object = MibTableRow
custMssIngQosSchedInfoEntry = _CustMssIngQosSchedInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1)
)
custMssIngQosSchedInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (1, "TIMETRA-SERV-MIB", "custMssIngQosSName"),
)
if mibBuilder.loadTexts:
    custMssIngQosSchedInfoEntry.setStatus("current")
_CustMssIngQosSName_Type = TNamedItem
_CustMssIngQosSName_Object = MibTableColumn
custMssIngQosSName = _CustMssIngQosSName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 1),
    _CustMssIngQosSName_Type()
)
custMssIngQosSName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custMssIngQosSName.setStatus("current")
_CustMssIngQosSRowStatus_Type = RowStatus
_CustMssIngQosSRowStatus_Object = MibTableColumn
custMssIngQosSRowStatus = _CustMssIngQosSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 2),
    _CustMssIngQosSRowStatus_Type()
)
custMssIngQosSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSRowStatus.setStatus("current")
_CustMssIngQosSLastMgmtChange_Type = TimeStamp
_CustMssIngQosSLastMgmtChange_Object = MibTableColumn
custMssIngQosSLastMgmtChange = _CustMssIngQosSLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 3),
    _CustMssIngQosSLastMgmtChange_Type()
)
custMssIngQosSLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosSLastMgmtChange.setStatus("current")
_CustMssIngQosSOverrideFlags_Type = TVirtSchedAttribute
_CustMssIngQosSOverrideFlags_Object = MibTableColumn
custMssIngQosSOverrideFlags = _CustMssIngQosSOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 4),
    _CustMssIngQosSOverrideFlags_Type()
)
custMssIngQosSOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSOverrideFlags.setStatus("current")


class _CustMssIngQosSPIR_Type(THPolVirtualSchePIRRate):
    """Custom type custMssIngQosSPIR based on THPolVirtualSchePIRRate"""
    defaultValue = -1


_CustMssIngQosSPIR_Type.__name__ = "THPolVirtualSchePIRRate"
_CustMssIngQosSPIR_Object = MibTableColumn
custMssIngQosSPIR = _CustMssIngQosSPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 5),
    _CustMssIngQosSPIR_Type()
)
custMssIngQosSPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    custMssIngQosSPIR.setUnits("kilo bits per second")


class _CustMssIngQosSCIR_Type(THPolVirtualScheCIRRate):
    """Custom type custMssIngQosSCIR based on THPolVirtualScheCIRRate"""
    defaultValue = 0


_CustMssIngQosSCIR_Type.__name__ = "THPolVirtualScheCIRRate"
_CustMssIngQosSCIR_Object = MibTableColumn
custMssIngQosSCIR = _CustMssIngQosSCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 6),
    _CustMssIngQosSCIR_Type()
)
custMssIngQosSCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    custMssIngQosSCIR.setUnits("kilo bits per second")


class _CustMssIngQosSSummedCIR_Type(TruthValue):
    """Custom type custMssIngQosSSummedCIR based on TruthValue"""
    defaultValue = 1


_CustMssIngQosSSummedCIR_Type.__name__ = "TruthValue"
_CustMssIngQosSSummedCIR_Object = MibTableColumn
custMssIngQosSSummedCIR = _CustMssIngQosSSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 7),
    _CustMssIngQosSSummedCIR_Type()
)
custMssIngQosSSummedCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSSummedCIR.setStatus("current")


class _CustMssIngQosSPIRHi_Type(TmnxQosRateHigh32):
    """Custom type custMssIngQosSPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_CustMssIngQosSPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_CustMssIngQosSPIRHi_Object = MibTableColumn
custMssIngQosSPIRHi = _CustMssIngQosSPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 8),
    _CustMssIngQosSPIRHi_Type()
)
custMssIngQosSPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    custMssIngQosSPIRHi.setUnits("kilobps")


class _CustMssIngQosSPIRLo_Type(TmnxQosRateLow32):
    """Custom type custMssIngQosSPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_CustMssIngQosSPIRLo_Type.__name__ = "TmnxQosRateLow32"
_CustMssIngQosSPIRLo_Object = MibTableColumn
custMssIngQosSPIRLo = _CustMssIngQosSPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 9),
    _CustMssIngQosSPIRLo_Type()
)
custMssIngQosSPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    custMssIngQosSPIRLo.setUnits("kilobps")


class _CustMssIngQosSCIRHi_Type(TmnxQosRateHigh32):
    """Custom type custMssIngQosSCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_CustMssIngQosSCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_CustMssIngQosSCIRHi_Object = MibTableColumn
custMssIngQosSCIRHi = _CustMssIngQosSCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 10),
    _CustMssIngQosSCIRHi_Type()
)
custMssIngQosSCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    custMssIngQosSCIRHi.setUnits("kilobps")


class _CustMssIngQosSCIRLo_Type(TmnxQosRateLow32):
    """Custom type custMssIngQosSCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_CustMssIngQosSCIRLo_Type.__name__ = "TmnxQosRateLow32"
_CustMssIngQosSCIRLo_Object = MibTableColumn
custMssIngQosSCIRLo = _CustMssIngQosSCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 11),
    _CustMssIngQosSCIRLo_Type()
)
custMssIngQosSCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    custMssIngQosSCIRLo.setUnits("kilobps")


class _CustMssIngQosSParentWeight_Type(TWeight):
    """Custom type custMssIngQosSParentWeight based on TWeight"""
    defaultValue = 1


_CustMssIngQosSParentWeight_Type.__name__ = "TWeight"
_CustMssIngQosSParentWeight_Object = MibTableColumn
custMssIngQosSParentWeight = _CustMssIngQosSParentWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 12),
    _CustMssIngQosSParentWeight_Type()
)
custMssIngQosSParentWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSParentWeight.setStatus("current")


class _CustMssIngQosSParentCIRWeight_Type(TWeight):
    """Custom type custMssIngQosSParentCIRWeight based on TWeight"""
    defaultValue = 1


_CustMssIngQosSParentCIRWeight_Type.__name__ = "TWeight"
_CustMssIngQosSParentCIRWeight_Object = MibTableColumn
custMssIngQosSParentCIRWeight = _CustMssIngQosSParentCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 9, 1, 13),
    _CustMssIngQosSParentCIRWeight_Type()
)
custMssIngQosSParentCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssIngQosSParentCIRWeight.setStatus("current")
_CustMssEgrQosSchedInfoTable_Object = MibTable
custMssEgrQosSchedInfoTable = _CustMssEgrQosSchedInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10)
)
if mibBuilder.loadTexts:
    custMssEgrQosSchedInfoTable.setStatus("current")
_CustMssEgrQosSchedInfoEntry_Object = MibTableRow
custMssEgrQosSchedInfoEntry = _CustMssEgrQosSchedInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1)
)
custMssEgrQosSchedInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (1, "TIMETRA-SERV-MIB", "custMssEgrQosSName"),
)
if mibBuilder.loadTexts:
    custMssEgrQosSchedInfoEntry.setStatus("current")
_CustMssEgrQosSName_Type = TNamedItem
_CustMssEgrQosSName_Object = MibTableColumn
custMssEgrQosSName = _CustMssEgrQosSName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 1),
    _CustMssEgrQosSName_Type()
)
custMssEgrQosSName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custMssEgrQosSName.setStatus("current")
_CustMssEgrQosSRowStatus_Type = RowStatus
_CustMssEgrQosSRowStatus_Object = MibTableColumn
custMssEgrQosSRowStatus = _CustMssEgrQosSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 2),
    _CustMssEgrQosSRowStatus_Type()
)
custMssEgrQosSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSRowStatus.setStatus("current")
_CustMssEgrQosSLastMgmtChange_Type = TimeStamp
_CustMssEgrQosSLastMgmtChange_Object = MibTableColumn
custMssEgrQosSLastMgmtChange = _CustMssEgrQosSLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 3),
    _CustMssEgrQosSLastMgmtChange_Type()
)
custMssEgrQosSLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosSLastMgmtChange.setStatus("current")
_CustMssEgrQosSOverrideFlags_Type = TVirtSchedAttribute
_CustMssEgrQosSOverrideFlags_Object = MibTableColumn
custMssEgrQosSOverrideFlags = _CustMssEgrQosSOverrideFlags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 4),
    _CustMssEgrQosSOverrideFlags_Type()
)
custMssEgrQosSOverrideFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSOverrideFlags.setStatus("current")


class _CustMssEgrQosSPIR_Type(THPolVirtualSchePIRRate):
    """Custom type custMssEgrQosSPIR based on THPolVirtualSchePIRRate"""
    defaultValue = -1


_CustMssEgrQosSPIR_Type.__name__ = "THPolVirtualSchePIRRate"
_CustMssEgrQosSPIR_Object = MibTableColumn
custMssEgrQosSPIR = _CustMssEgrQosSPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 5),
    _CustMssEgrQosSPIR_Type()
)
custMssEgrQosSPIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSPIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    custMssEgrQosSPIR.setUnits("kilo bits per second")


class _CustMssEgrQosSCIR_Type(THPolVirtualScheCIRRate):
    """Custom type custMssEgrQosSCIR based on THPolVirtualScheCIRRate"""
    defaultValue = 0


_CustMssEgrQosSCIR_Type.__name__ = "THPolVirtualScheCIRRate"
_CustMssEgrQosSCIR_Object = MibTableColumn
custMssEgrQosSCIR = _CustMssEgrQosSCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 6),
    _CustMssEgrQosSCIR_Type()
)
custMssEgrQosSCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSCIR.setStatus("obsolete")
if mibBuilder.loadTexts:
    custMssEgrQosSCIR.setUnits("kilo bits per second")


class _CustMssEgrQosSSummedCIR_Type(TruthValue):
    """Custom type custMssEgrQosSSummedCIR based on TruthValue"""
    defaultValue = 1


_CustMssEgrQosSSummedCIR_Type.__name__ = "TruthValue"
_CustMssEgrQosSSummedCIR_Object = MibTableColumn
custMssEgrQosSSummedCIR = _CustMssEgrQosSSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 7),
    _CustMssEgrQosSSummedCIR_Type()
)
custMssEgrQosSSummedCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSSummedCIR.setStatus("current")


class _CustMssEgrQosSPIRHi_Type(TmnxQosRateHigh32):
    """Custom type custMssEgrQosSPIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_CustMssEgrQosSPIRHi_Type.__name__ = "TmnxQosRateHigh32"
_CustMssEgrQosSPIRHi_Object = MibTableColumn
custMssEgrQosSPIRHi = _CustMssEgrQosSPIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 8),
    _CustMssEgrQosSPIRHi_Type()
)
custMssEgrQosSPIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSPIRHi.setStatus("current")
if mibBuilder.loadTexts:
    custMssEgrQosSPIRHi.setUnits("kilobps")


class _CustMssEgrQosSPIRLo_Type(TmnxQosRateLow32):
    """Custom type custMssEgrQosSPIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_CustMssEgrQosSPIRLo_Type.__name__ = "TmnxQosRateLow32"
_CustMssEgrQosSPIRLo_Object = MibTableColumn
custMssEgrQosSPIRLo = _CustMssEgrQosSPIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 9),
    _CustMssEgrQosSPIRLo_Type()
)
custMssEgrQosSPIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSPIRLo.setStatus("current")
if mibBuilder.loadTexts:
    custMssEgrQosSPIRLo.setUnits("kilobps")


class _CustMssEgrQosSCIRHi_Type(TmnxQosRateHigh32):
    """Custom type custMssEgrQosSCIRHi based on TmnxQosRateHigh32"""
    defaultValue = 4294967295


_CustMssEgrQosSCIRHi_Type.__name__ = "TmnxQosRateHigh32"
_CustMssEgrQosSCIRHi_Object = MibTableColumn
custMssEgrQosSCIRHi = _CustMssEgrQosSCIRHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 10),
    _CustMssEgrQosSCIRHi_Type()
)
custMssEgrQosSCIRHi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSCIRHi.setStatus("current")
if mibBuilder.loadTexts:
    custMssEgrQosSCIRHi.setUnits("kilobps")


class _CustMssEgrQosSCIRLo_Type(TmnxQosRateLow32):
    """Custom type custMssEgrQosSCIRLo based on TmnxQosRateLow32"""
    defaultValue = 4294967295


_CustMssEgrQosSCIRLo_Type.__name__ = "TmnxQosRateLow32"
_CustMssEgrQosSCIRLo_Object = MibTableColumn
custMssEgrQosSCIRLo = _CustMssEgrQosSCIRLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 11),
    _CustMssEgrQosSCIRLo_Type()
)
custMssEgrQosSCIRLo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSCIRLo.setStatus("current")
if mibBuilder.loadTexts:
    custMssEgrQosSCIRLo.setUnits("kilobps")


class _CustMssEgrQosSParentWeight_Type(TWeight):
    """Custom type custMssEgrQosSParentWeight based on TWeight"""
    defaultValue = 1


_CustMssEgrQosSParentWeight_Type.__name__ = "TWeight"
_CustMssEgrQosSParentWeight_Object = MibTableColumn
custMssEgrQosSParentWeight = _CustMssEgrQosSParentWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 12),
    _CustMssEgrQosSParentWeight_Type()
)
custMssEgrQosSParentWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSParentWeight.setStatus("current")


class _CustMssEgrQosSParentCIRWeight_Type(TWeight):
    """Custom type custMssEgrQosSParentCIRWeight based on TWeight"""
    defaultValue = 1


_CustMssEgrQosSParentCIRWeight_Type.__name__ = "TWeight"
_CustMssEgrQosSParentCIRWeight_Object = MibTableColumn
custMssEgrQosSParentCIRWeight = _CustMssEgrQosSParentCIRWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 10, 1, 13),
    _CustMssEgrQosSParentCIRWeight_Type()
)
custMssEgrQosSParentCIRWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    custMssEgrQosSParentCIRWeight.setStatus("current")
_CustMultiSvcSiteIngSchedPlcyStatsTable_Object = MibTable
custMultiSvcSiteIngSchedPlcyStatsTable = _CustMultiSvcSiteIngSchedPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 11)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngSchedPlcyStatsTable.setStatus("obsolete")
_CustMultiSvcSiteIngSchedPlcyStatsEntry_Object = MibTableRow
custMultiSvcSiteIngSchedPlcyStatsEntry = _CustMultiSvcSiteIngSchedPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 11, 1)
)
custMultiSvcSiteIngSchedPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (1, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngSchedPlcyStatsEntry.setStatus("obsolete")
_CustIngSchedPlcyStatsFwdPkt_Type = Counter64
_CustIngSchedPlcyStatsFwdPkt_Object = MibTableColumn
custIngSchedPlcyStatsFwdPkt = _CustIngSchedPlcyStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 11, 1, 1),
    _CustIngSchedPlcyStatsFwdPkt_Type()
)
custIngSchedPlcyStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngSchedPlcyStatsFwdPkt.setStatus("obsolete")
_CustIngSchedPlcyStatsFwdOct_Type = Counter64
_CustIngSchedPlcyStatsFwdOct_Object = MibTableColumn
custIngSchedPlcyStatsFwdOct = _CustIngSchedPlcyStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 11, 1, 2),
    _CustIngSchedPlcyStatsFwdOct_Type()
)
custIngSchedPlcyStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngSchedPlcyStatsFwdOct.setStatus("obsolete")
_CustMultiSvcSiteEgrSchedPlcyStatsTable_Object = MibTable
custMultiSvcSiteEgrSchedPlcyStatsTable = _CustMultiSvcSiteEgrSchedPlcyStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 12)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrSchedPlcyStatsTable.setStatus("obsolete")
_CustMultiSvcSiteEgrSchedPlcyStatsEntry_Object = MibTableRow
custMultiSvcSiteEgrSchedPlcyStatsEntry = _CustMultiSvcSiteEgrSchedPlcyStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 12, 1)
)
custMultiSvcSiteEgrSchedPlcyStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (1, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrSchedPlcyStatsEntry.setStatus("obsolete")
_CustEgrSchedPlcyStatsFwdPkt_Type = Counter64
_CustEgrSchedPlcyStatsFwdPkt_Object = MibTableColumn
custEgrSchedPlcyStatsFwdPkt = _CustEgrSchedPlcyStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 12, 1, 1),
    _CustEgrSchedPlcyStatsFwdPkt_Type()
)
custEgrSchedPlcyStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrSchedPlcyStatsFwdPkt.setStatus("obsolete")
_CustEgrSchedPlcyStatsFwdOct_Type = Counter64
_CustEgrSchedPlcyStatsFwdOct_Object = MibTableColumn
custEgrSchedPlcyStatsFwdOct = _CustEgrSchedPlcyStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 12, 1, 2),
    _CustEgrSchedPlcyStatsFwdOct_Type()
)
custEgrSchedPlcyStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrSchedPlcyStatsFwdOct.setStatus("obsolete")
_CustMultiSvcSiteIngSchedPlcyPortStatsTable_Object = MibTable
custMultiSvcSiteIngSchedPlcyPortStatsTable = _CustMultiSvcSiteIngSchedPlcyPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 13)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngSchedPlcyPortStatsTable.setStatus("obsolete")
_CustMultiSvcSiteIngSchedPlcyPortStatsEntry_Object = MibTableRow
custMultiSvcSiteIngSchedPlcyPortStatsEntry = _CustMultiSvcSiteIngSchedPlcyPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 13, 1)
)
custMultiSvcSiteIngSchedPlcyPortStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (0, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
    (0, "TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsPort"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteIngSchedPlcyPortStatsEntry.setStatus("obsolete")
_CustIngSchedPlcyPortStatsPort_Type = TmnxPortID
_CustIngSchedPlcyPortStatsPort_Object = MibTableColumn
custIngSchedPlcyPortStatsPort = _CustIngSchedPlcyPortStatsPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 13, 1, 1),
    _CustIngSchedPlcyPortStatsPort_Type()
)
custIngSchedPlcyPortStatsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custIngSchedPlcyPortStatsPort.setStatus("obsolete")
_CustIngSchedPlcyPortStatsFwdPkt_Type = Counter64
_CustIngSchedPlcyPortStatsFwdPkt_Object = MibTableColumn
custIngSchedPlcyPortStatsFwdPkt = _CustIngSchedPlcyPortStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 13, 1, 2),
    _CustIngSchedPlcyPortStatsFwdPkt_Type()
)
custIngSchedPlcyPortStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngSchedPlcyPortStatsFwdPkt.setStatus("obsolete")
_CustIngSchedPlcyPortStatsFwdOct_Type = Counter64
_CustIngSchedPlcyPortStatsFwdOct_Object = MibTableColumn
custIngSchedPlcyPortStatsFwdOct = _CustIngSchedPlcyPortStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 13, 1, 3),
    _CustIngSchedPlcyPortStatsFwdOct_Type()
)
custIngSchedPlcyPortStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngSchedPlcyPortStatsFwdOct.setStatus("obsolete")
_CustMultiSvcSiteEgrSchedPlcyPortStatsTable_Object = MibTable
custMultiSvcSiteEgrSchedPlcyPortStatsTable = _CustMultiSvcSiteEgrSchedPlcyPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 14)
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrSchedPlcyPortStatsTable.setStatus("obsolete")
_CustMultiSvcSiteEgrSchedPlcyPortStatsEntry_Object = MibTableRow
custMultiSvcSiteEgrSchedPlcyPortStatsEntry = _CustMultiSvcSiteEgrSchedPlcyPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 14, 1)
)
custMultiSvcSiteEgrSchedPlcyPortStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"),
    (0, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"),
    (0, "TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsPort"),
)
if mibBuilder.loadTexts:
    custMultiSvcSiteEgrSchedPlcyPortStatsEntry.setStatus("obsolete")
_CustEgrSchedPlcyPortStatsPort_Type = TmnxPortID
_CustEgrSchedPlcyPortStatsPort_Object = MibTableColumn
custEgrSchedPlcyPortStatsPort = _CustEgrSchedPlcyPortStatsPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 14, 1, 1),
    _CustEgrSchedPlcyPortStatsPort_Type()
)
custEgrSchedPlcyPortStatsPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custEgrSchedPlcyPortStatsPort.setStatus("obsolete")
_CustEgrSchedPlcyPortStatsFwdPkt_Type = Counter64
_CustEgrSchedPlcyPortStatsFwdPkt_Object = MibTableColumn
custEgrSchedPlcyPortStatsFwdPkt = _CustEgrSchedPlcyPortStatsFwdPkt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 14, 1, 2),
    _CustEgrSchedPlcyPortStatsFwdPkt_Type()
)
custEgrSchedPlcyPortStatsFwdPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrSchedPlcyPortStatsFwdPkt.setStatus("obsolete")
_CustEgrSchedPlcyPortStatsFwdOct_Type = Counter64
_CustEgrSchedPlcyPortStatsFwdOct_Object = MibTableColumn
custEgrSchedPlcyPortStatsFwdOct = _CustEgrSchedPlcyPortStatsFwdOct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 14, 1, 3),
    _CustEgrSchedPlcyPortStatsFwdOct_Type()
)
custEgrSchedPlcyPortStatsFwdOct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrSchedPlcyPortStatsFwdOct.setStatus("obsolete")
_CustMssIngQosArbitStatsTable_Object = MibTable
custMssIngQosArbitStatsTable = _CustMssIngQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15)
)
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsTable.setStatus("current")
_CustMssIngQosArbitStatsEntry_Object = MibTableRow
custMssIngQosArbitStatsEntry = _CustMssIngQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1)
)
custMssIngQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custMssIngQosArbitName"),
)
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsEntry.setStatus("current")
_CustMssIngQosArbitName_Type = TNamedItem
_CustMssIngQosArbitName_Object = MibTableColumn
custMssIngQosArbitName = _CustMssIngQosArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 1),
    _CustMssIngQosArbitName_Type()
)
custMssIngQosArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custMssIngQosArbitName.setStatus("current")
_CustMssIngQosArbitStatsFwdPkts_Type = Counter64
_CustMssIngQosArbitStatsFwdPkts_Object = MibTableColumn
custMssIngQosArbitStatsFwdPkts = _CustMssIngQosArbitStatsFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 2),
    _CustMssIngQosArbitStatsFwdPkts_Type()
)
custMssIngQosArbitStatsFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdPkts.setStatus("current")
_CustMssIngQosArbitStatsFwdPktsLo_Type = Counter32
_CustMssIngQosArbitStatsFwdPktsLo_Object = MibTableColumn
custMssIngQosArbitStatsFwdPktsLo = _CustMssIngQosArbitStatsFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 3),
    _CustMssIngQosArbitStatsFwdPktsLo_Type()
)
custMssIngQosArbitStatsFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdPktsLo.setStatus("current")
_CustMssIngQosArbitStatsFwdPktsHi_Type = Counter32
_CustMssIngQosArbitStatsFwdPktsHi_Object = MibTableColumn
custMssIngQosArbitStatsFwdPktsHi = _CustMssIngQosArbitStatsFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 4),
    _CustMssIngQosArbitStatsFwdPktsHi_Type()
)
custMssIngQosArbitStatsFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdPktsHi.setStatus("current")
_CustMssIngQosArbitStatsFwdOcts_Type = Counter64
_CustMssIngQosArbitStatsFwdOcts_Object = MibTableColumn
custMssIngQosArbitStatsFwdOcts = _CustMssIngQosArbitStatsFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 5),
    _CustMssIngQosArbitStatsFwdOcts_Type()
)
custMssIngQosArbitStatsFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdOcts.setStatus("current")
_CustMssIngQosArbitStatsFwdOctsLo_Type = Counter32
_CustMssIngQosArbitStatsFwdOctsLo_Object = MibTableColumn
custMssIngQosArbitStatsFwdOctsLo = _CustMssIngQosArbitStatsFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 6),
    _CustMssIngQosArbitStatsFwdOctsLo_Type()
)
custMssIngQosArbitStatsFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdOctsLo.setStatus("current")
_CustMssIngQosArbitStatsFwdOctsHi_Type = Counter32
_CustMssIngQosArbitStatsFwdOctsHi_Object = MibTableColumn
custMssIngQosArbitStatsFwdOctsHi = _CustMssIngQosArbitStatsFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 15, 1, 7),
    _CustMssIngQosArbitStatsFwdOctsHi_Type()
)
custMssIngQosArbitStatsFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssIngQosArbitStatsFwdOctsHi.setStatus("current")
_CustMssEgrQosArbitStatsTable_Object = MibTable
custMssEgrQosArbitStatsTable = _CustMssEgrQosArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16)
)
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsTable.setStatus("current")
_CustMssEgrQosArbitStatsEntry_Object = MibTableRow
custMssEgrQosArbitStatsEntry = _CustMssEgrQosArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1)
)
custMssEgrQosArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custMssEgrQosArbitName"),
)
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsEntry.setStatus("current")
_CustMssEgrQosArbitName_Type = TNamedItem
_CustMssEgrQosArbitName_Object = MibTableColumn
custMssEgrQosArbitName = _CustMssEgrQosArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 1),
    _CustMssEgrQosArbitName_Type()
)
custMssEgrQosArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custMssEgrQosArbitName.setStatus("current")
_CustMssEgrQosArbitStatsFwdPkts_Type = Counter64
_CustMssEgrQosArbitStatsFwdPkts_Object = MibTableColumn
custMssEgrQosArbitStatsFwdPkts = _CustMssEgrQosArbitStatsFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 2),
    _CustMssEgrQosArbitStatsFwdPkts_Type()
)
custMssEgrQosArbitStatsFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdPkts.setStatus("current")
_CustMssEgrQosArbitStatsFwdPktsLo_Type = Counter32
_CustMssEgrQosArbitStatsFwdPktsLo_Object = MibTableColumn
custMssEgrQosArbitStatsFwdPktsLo = _CustMssEgrQosArbitStatsFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 3),
    _CustMssEgrQosArbitStatsFwdPktsLo_Type()
)
custMssEgrQosArbitStatsFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdPktsLo.setStatus("current")
_CustMssEgrQosArbitStatsFwdPktsHi_Type = Counter32
_CustMssEgrQosArbitStatsFwdPktsHi_Object = MibTableColumn
custMssEgrQosArbitStatsFwdPktsHi = _CustMssEgrQosArbitStatsFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 4),
    _CustMssEgrQosArbitStatsFwdPktsHi_Type()
)
custMssEgrQosArbitStatsFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdPktsHi.setStatus("current")
_CustMssEgrQosArbitStatsFwdOcts_Type = Counter64
_CustMssEgrQosArbitStatsFwdOcts_Object = MibTableColumn
custMssEgrQosArbitStatsFwdOcts = _CustMssEgrQosArbitStatsFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 5),
    _CustMssEgrQosArbitStatsFwdOcts_Type()
)
custMssEgrQosArbitStatsFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdOcts.setStatus("current")
_CustMssEgrQosArbitStatsFwdOctsLo_Type = Counter32
_CustMssEgrQosArbitStatsFwdOctsLo_Object = MibTableColumn
custMssEgrQosArbitStatsFwdOctsLo = _CustMssEgrQosArbitStatsFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 6),
    _CustMssEgrQosArbitStatsFwdOctsLo_Type()
)
custMssEgrQosArbitStatsFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdOctsLo.setStatus("current")
_CustMssEgrQosArbitStatsFwdOctsHi_Type = Counter32
_CustMssEgrQosArbitStatsFwdOctsHi_Object = MibTableColumn
custMssEgrQosArbitStatsFwdOctsHi = _CustMssEgrQosArbitStatsFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 16, 1, 7),
    _CustMssEgrQosArbitStatsFwdOctsHi_Type()
)
custMssEgrQosArbitStatsFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custMssEgrQosArbitStatsFwdOctsHi.setStatus("current")
_CustIngQosPortIdArbitStatsTable_Object = MibTable
custIngQosPortIdArbitStatsTable = _CustIngQosPortIdArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17)
)
if mibBuilder.loadTexts:
    custIngQosPortIdArbitStatsTable.setStatus("current")
_CustIngQosPortIdArbitStatsEntry_Object = MibTableRow
custIngQosPortIdArbitStatsEntry = _CustIngQosPortIdArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1)
)
custIngQosPortIdArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custIngQosPortIdArbitName"),
    (0, "TIMETRA-SERV-MIB", "custIngQosAssignmentPortId"),
)
if mibBuilder.loadTexts:
    custIngQosPortIdArbitStatsEntry.setStatus("current")
_CustIngQosPortIdArbitName_Type = TNamedItem
_CustIngQosPortIdArbitName_Object = MibTableColumn
custIngQosPortIdArbitName = _CustIngQosPortIdArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 1),
    _CustIngQosPortIdArbitName_Type()
)
custIngQosPortIdArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitName.setStatus("current")
_CustIngQosPortIdArbitFwdPkts_Type = Counter64
_CustIngQosPortIdArbitFwdPkts_Object = MibTableColumn
custIngQosPortIdArbitFwdPkts = _CustIngQosPortIdArbitFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 2),
    _CustIngQosPortIdArbitFwdPkts_Type()
)
custIngQosPortIdArbitFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdPkts.setStatus("current")
_CustIngQosPortIdArbitFwdPktsLo_Type = Counter32
_CustIngQosPortIdArbitFwdPktsLo_Object = MibTableColumn
custIngQosPortIdArbitFwdPktsLo = _CustIngQosPortIdArbitFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 3),
    _CustIngQosPortIdArbitFwdPktsLo_Type()
)
custIngQosPortIdArbitFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdPktsLo.setStatus("current")
_CustIngQosPortIdArbitFwdPktsHi_Type = Counter32
_CustIngQosPortIdArbitFwdPktsHi_Object = MibTableColumn
custIngQosPortIdArbitFwdPktsHi = _CustIngQosPortIdArbitFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 4),
    _CustIngQosPortIdArbitFwdPktsHi_Type()
)
custIngQosPortIdArbitFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdPktsHi.setStatus("current")
_CustIngQosPortIdArbitFwdOcts_Type = Counter64
_CustIngQosPortIdArbitFwdOcts_Object = MibTableColumn
custIngQosPortIdArbitFwdOcts = _CustIngQosPortIdArbitFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 5),
    _CustIngQosPortIdArbitFwdOcts_Type()
)
custIngQosPortIdArbitFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdOcts.setStatus("current")
_CustIngQosPortIdArbitFwdOctsLo_Type = Counter32
_CustIngQosPortIdArbitFwdOctsLo_Object = MibTableColumn
custIngQosPortIdArbitFwdOctsLo = _CustIngQosPortIdArbitFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 6),
    _CustIngQosPortIdArbitFwdOctsLo_Type()
)
custIngQosPortIdArbitFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdOctsLo.setStatus("current")
_CustIngQosPortIdArbitFwdOctsHi_Type = Counter32
_CustIngQosPortIdArbitFwdOctsHi_Object = MibTableColumn
custIngQosPortIdArbitFwdOctsHi = _CustIngQosPortIdArbitFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 17, 1, 7),
    _CustIngQosPortIdArbitFwdOctsHi_Type()
)
custIngQosPortIdArbitFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custIngQosPortIdArbitFwdOctsHi.setStatus("current")
_CustEgrQosPortIdArbitStatsTable_Object = MibTable
custEgrQosPortIdArbitStatsTable = _CustEgrQosPortIdArbitStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18)
)
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitStatsTable.setStatus("current")
_CustEgrQosPortIdArbitStatsEntry_Object = MibTableRow
custEgrQosPortIdArbitStatsEntry = _CustEgrQosPortIdArbitStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1)
)
custEgrQosPortIdArbitStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "custId"),
    (0, "TIMETRA-SERV-MIB", "custMultSvcSiteName"),
    (0, "TIMETRA-SERV-MIB", "custEgrQosPortIdArbitName"),
    (0, "TIMETRA-SERV-MIB", "custEgrQosAssignmentPortId"),
)
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitStatsEntry.setStatus("current")
_CustEgrQosPortIdArbitName_Type = TNamedItem
_CustEgrQosPortIdArbitName_Object = MibTableColumn
custEgrQosPortIdArbitName = _CustEgrQosPortIdArbitName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 1),
    _CustEgrQosPortIdArbitName_Type()
)
custEgrQosPortIdArbitName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitName.setStatus("current")
_CustEgrQosPortIdArbitFwdPkts_Type = Counter64
_CustEgrQosPortIdArbitFwdPkts_Object = MibTableColumn
custEgrQosPortIdArbitFwdPkts = _CustEgrQosPortIdArbitFwdPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 2),
    _CustEgrQosPortIdArbitFwdPkts_Type()
)
custEgrQosPortIdArbitFwdPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdPkts.setStatus("current")
_CustEgrQosPortIdArbitFwdPktsLo_Type = Counter32
_CustEgrQosPortIdArbitFwdPktsLo_Object = MibTableColumn
custEgrQosPortIdArbitFwdPktsLo = _CustEgrQosPortIdArbitFwdPktsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 3),
    _CustEgrQosPortIdArbitFwdPktsLo_Type()
)
custEgrQosPortIdArbitFwdPktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdPktsLo.setStatus("current")
_CustEgrQosPortIdArbitFwdPktsHi_Type = Counter32
_CustEgrQosPortIdArbitFwdPktsHi_Object = MibTableColumn
custEgrQosPortIdArbitFwdPktsHi = _CustEgrQosPortIdArbitFwdPktsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 4),
    _CustEgrQosPortIdArbitFwdPktsHi_Type()
)
custEgrQosPortIdArbitFwdPktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdPktsHi.setStatus("current")
_CustEgrQosPortIdArbitFwdOcts_Type = Counter64
_CustEgrQosPortIdArbitFwdOcts_Object = MibTableColumn
custEgrQosPortIdArbitFwdOcts = _CustEgrQosPortIdArbitFwdOcts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 5),
    _CustEgrQosPortIdArbitFwdOcts_Type()
)
custEgrQosPortIdArbitFwdOcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdOcts.setStatus("current")
_CustEgrQosPortIdArbitFwdOctsLo_Type = Counter32
_CustEgrQosPortIdArbitFwdOctsLo_Object = MibTableColumn
custEgrQosPortIdArbitFwdOctsLo = _CustEgrQosPortIdArbitFwdOctsLo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 6),
    _CustEgrQosPortIdArbitFwdOctsLo_Type()
)
custEgrQosPortIdArbitFwdOctsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdOctsLo.setStatus("current")
_CustEgrQosPortIdArbitFwdOctsHi_Type = Counter32
_CustEgrQosPortIdArbitFwdOctsHi_Object = MibTableColumn
custEgrQosPortIdArbitFwdOctsHi = _CustEgrQosPortIdArbitFwdOctsHi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 1, 18, 1, 7),
    _CustEgrQosPortIdArbitFwdOctsHi_Type()
)
custEgrQosPortIdArbitFwdOctsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    custEgrQosPortIdArbitFwdOctsHi.setStatus("current")
_TmnxSvcObjs_ObjectIdentity = ObjectIdentity
tmnxSvcObjs = _TmnxSvcObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2)
)
_SvcNumEntries_Type = Integer32
_SvcNumEntries_Object = MibScalar
svcNumEntries = _SvcNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 1),
    _SvcNumEntries_Type()
)
svcNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumEntries.setStatus("current")
_SvcBaseInfoTable_Object = MibTable
svcBaseInfoTable = _SvcBaseInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2)
)
if mibBuilder.loadTexts:
    svcBaseInfoTable.setStatus("current")
_SvcBaseInfoEntry_Object = MibTableRow
svcBaseInfoEntry = _SvcBaseInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1)
)
svcBaseInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBaseInfoEntry.setStatus("current")
_SvcId_Type = TmnxServId
_SvcId_Object = MibTableColumn
svcId = _SvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 1),
    _SvcId_Type()
)
svcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcId.setStatus("current")
_SvcRowStatus_Type = RowStatus
_SvcRowStatus_Object = MibTableColumn
svcRowStatus = _SvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 2),
    _SvcRowStatus_Type()
)
svcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRowStatus.setStatus("current")
_SvcType_Type = ServType
_SvcType_Object = MibTableColumn
svcType = _SvcType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 3),
    _SvcType_Type()
)
svcType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcType.setStatus("current")
_SvcCustId_Type = TmnxCustId
_SvcCustId_Object = MibTableColumn
svcCustId = _SvcCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 4),
    _SvcCustId_Type()
)
svcCustId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcCustId.setStatus("current")
_SvcIpRouting_Type = TmnxEnabledDisabled
_SvcIpRouting_Object = MibTableColumn
svcIpRouting = _SvcIpRouting_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 5),
    _SvcIpRouting_Type()
)
svcIpRouting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIpRouting.setStatus("current")


class _SvcDescription_Type(ServObjDesc):
    """Custom type svcDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_SvcDescription_Type.__name__ = "ServObjDesc"
_SvcDescription_Object = MibTableColumn
svcDescription = _SvcDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 6),
    _SvcDescription_Type()
)
svcDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcDescription.setStatus("current")


class _SvcMtu_Type(Integer32):
    """Custom type svcMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9782),
    )


_SvcMtu_Type.__name__ = "Integer32"
_SvcMtu_Object = MibTableColumn
svcMtu = _SvcMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 7),
    _SvcMtu_Type()
)
svcMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMtu.setStatus("current")


class _SvcAdminStatus_Type(ServiceAdminStatus):
    """Custom type svcAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SvcAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SvcAdminStatus_Object = MibTableColumn
svcAdminStatus = _SvcAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 8),
    _SvcAdminStatus_Type()
)
svcAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcAdminStatus.setStatus("current")
_SvcOperStatus_Type = ServiceOperStatus
_SvcOperStatus_Object = MibTableColumn
svcOperStatus = _SvcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 9),
    _SvcOperStatus_Type()
)
svcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperStatus.setStatus("current")
_SvcNumSaps_Type = Integer32
_SvcNumSaps_Object = MibTableColumn
svcNumSaps = _SvcNumSaps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 10),
    _SvcNumSaps_Type()
)
svcNumSaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumSaps.setStatus("current")
_SvcNumSdps_Type = Integer32
_SvcNumSdps_Object = MibTableColumn
svcNumSdps = _SvcNumSdps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 11),
    _SvcNumSdps_Type()
)
svcNumSdps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumSdps.setStatus("current")
_SvcLastMgmtChange_Type = TimeStamp
_SvcLastMgmtChange_Object = MibTableColumn
svcLastMgmtChange = _SvcLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 12),
    _SvcLastMgmtChange_Type()
)
svcLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcLastMgmtChange.setStatus("current")
_SvcDefMeshVcId_Type = Unsigned32
_SvcDefMeshVcId_Object = MibTableColumn
svcDefMeshVcId = _SvcDefMeshVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 13),
    _SvcDefMeshVcId_Type()
)
svcDefMeshVcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcDefMeshVcId.setStatus("obsolete")


class _SvcVpnId_Type(VpnId):
    """Custom type svcVpnId based on VpnId"""
    defaultValue = 0


_SvcVpnId_Type.__name__ = "VpnId"
_SvcVpnId_Object = MibTableColumn
svcVpnId = _SvcVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 14),
    _SvcVpnId_Type()
)
svcVpnId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVpnId.setStatus("current")


class _SvcVRouterId_Type(TmnxVRtrIDOrZero):
    """Custom type svcVRouterId based on TmnxVRtrIDOrZero"""
    defaultValue = 0


_SvcVRouterId_Type.__name__ = "TmnxVRtrIDOrZero"
_SvcVRouterId_Object = MibTableColumn
svcVRouterId = _SvcVRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 15),
    _SvcVRouterId_Type()
)
svcVRouterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVRouterId.setStatus("current")


class _SvcAutoBind_Type(Integer32):
    """Custom type svcAutoBind based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("gre", 2),
          ("ldp", 3),
          ("rsvp-te", 4),
          ("mpls", 5),
          ("mpls-gre", 6))
    )


_SvcAutoBind_Type.__name__ = "Integer32"
_SvcAutoBind_Object = MibTableColumn
svcAutoBind = _SvcAutoBind_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 16),
    _SvcAutoBind_Type()
)
svcAutoBind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcAutoBind.setStatus("obsolete")
_SvcLastStatusChange_Type = TimeStamp
_SvcLastStatusChange_Object = MibTableColumn
svcLastStatusChange = _SvcLastStatusChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 17),
    _SvcLastStatusChange_Type()
)
svcLastStatusChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcLastStatusChange.setStatus("current")


class _SvcVllType_Type(Integer32):
    """Custom type svcVllType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              6,
              7,
              8,
              9,
              10,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("undef", 1),
          ("atmSdu", 6),
          ("atmCell", 7),
          ("atmVcc", 8),
          ("atmVpc", 9),
          ("frDlci", 10),
          ("satopE1", 12),
          ("satopT1", 13),
          ("satopE3", 14),
          ("satopT3", 15),
          ("cesopsn", 16),
          ("cesopsnCas", 17))
    )


_SvcVllType_Type.__name__ = "Integer32"
_SvcVllType_Object = MibTableColumn
svcVllType = _SvcVllType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 18),
    _SvcVllType_Type()
)
svcVllType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllType.setStatus("current")


class _SvcMgmtVpls_Type(TruthValue):
    """Custom type svcMgmtVpls based on TruthValue"""
    defaultValue = 2


_SvcMgmtVpls_Type.__name__ = "TruthValue"
_SvcMgmtVpls_Object = MibTableColumn
svcMgmtVpls = _SvcMgmtVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 19),
    _SvcMgmtVpls_Type()
)
svcMgmtVpls.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMgmtVpls.setStatus("current")


class _SvcRadiusDiscovery_Type(TruthValue):
    """Custom type svcRadiusDiscovery based on TruthValue"""
    defaultValue = 2


_SvcRadiusDiscovery_Type.__name__ = "TruthValue"
_SvcRadiusDiscovery_Object = MibTableColumn
svcRadiusDiscovery = _SvcRadiusDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 20),
    _SvcRadiusDiscovery_Type()
)
svcRadiusDiscovery.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRadiusDiscovery.setStatus("current")


class _SvcRadiusUserNameType_Type(Integer32):
    """Custom type svcRadiusUserNameType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("vpn-id", 1),
          ("router-distinguisher", 2))
    )


_SvcRadiusUserNameType_Type.__name__ = "Integer32"
_SvcRadiusUserNameType_Object = MibTableColumn
svcRadiusUserNameType = _SvcRadiusUserNameType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 21),
    _SvcRadiusUserNameType_Type()
)
svcRadiusUserNameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRadiusUserNameType.setStatus("obsolete")


class _SvcRadiusUserName_Type(DisplayString):
    """Custom type svcRadiusUserName based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SvcRadiusUserName_Type.__name__ = "DisplayString"
_SvcRadiusUserName_Object = MibTableColumn
svcRadiusUserName = _SvcRadiusUserName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 22),
    _SvcRadiusUserName_Type()
)
svcRadiusUserName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRadiusUserName.setStatus("obsolete")


class _SvcVcSwitching_Type(TruthValue):
    """Custom type svcVcSwitching based on TruthValue"""
    defaultValue = 2


_SvcVcSwitching_Type.__name__ = "TruthValue"
_SvcVcSwitching_Object = MibTableColumn
svcVcSwitching = _SvcVcSwitching_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 23),
    _SvcVcSwitching_Type()
)
svcVcSwitching.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVcSwitching.setStatus("current")


class _SvcRadiusPEDiscPolicy_Type(TNamedItemOrEmpty):
    """Custom type svcRadiusPEDiscPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcRadiusPEDiscPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SvcRadiusPEDiscPolicy_Object = MibTableColumn
svcRadiusPEDiscPolicy = _SvcRadiusPEDiscPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 24),
    _SvcRadiusPEDiscPolicy_Type()
)
svcRadiusPEDiscPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRadiusPEDiscPolicy.setStatus("obsolete")


class _SvcRadiusDiscoveryShutdown_Type(ServiceAdminStatus):
    """Custom type svcRadiusDiscoveryShutdown based on ServiceAdminStatus"""
    defaultValue = 2


_SvcRadiusDiscoveryShutdown_Type.__name__ = "ServiceAdminStatus"
_SvcRadiusDiscoveryShutdown_Object = MibTableColumn
svcRadiusDiscoveryShutdown = _SvcRadiusDiscoveryShutdown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 25),
    _SvcRadiusDiscoveryShutdown_Type()
)
svcRadiusDiscoveryShutdown.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRadiusDiscoveryShutdown.setStatus("obsolete")


class _SvcVplsType_Type(Integer32):
    """Custom type svcVplsType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("bVpls", 2),
          ("iVpls", 3))
    )


_SvcVplsType_Type.__name__ = "Integer32"
_SvcVplsType_Object = MibTableColumn
svcVplsType = _SvcVplsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 26),
    _SvcVplsType_Type()
)
svcVplsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsType.setStatus("current")
_SvcNumMcStandbySaps_Type = Integer32
_SvcNumMcStandbySaps_Object = MibTableColumn
svcNumMcStandbySaps = _SvcNumMcStandbySaps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 27),
    _SvcNumMcStandbySaps_Type()
)
svcNumMcStandbySaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumMcStandbySaps.setStatus("current")


class _SvcName_Type(TLNamedItemOrEmpty):
    """Custom type svcName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcName_Type.__name__ = "TLNamedItemOrEmpty"
_SvcName_Object = MibTableColumn
svcName = _SvcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 29),
    _SvcName_Type()
)
svcName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcName.setStatus("current")


class _SvcInterASMvpn_Type(TruthValue):
    """Custom type svcInterASMvpn based on TruthValue"""
    defaultValue = 2


_SvcInterASMvpn_Type.__name__ = "TruthValue"
_SvcInterASMvpn_Object = MibTableColumn
svcInterASMvpn = _SvcInterASMvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 30),
    _SvcInterASMvpn_Type()
)
svcInterASMvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcInterASMvpn.setStatus("obsolete")


class _SvcHashLabel_Type(TruthValue):
    """Custom type svcHashLabel based on TruthValue"""
    defaultValue = 2


_SvcHashLabel_Type.__name__ = "TruthValue"
_SvcHashLabel_Object = MibTableColumn
svcHashLabel = _SvcHashLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 31),
    _SvcHashLabel_Type()
)
svcHashLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcHashLabel.setStatus("current")
_SvcTmplUsed_Type = TNamedItemOrEmpty
_SvcTmplUsed_Object = MibTableColumn
svcTmplUsed = _SvcTmplUsed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 32),
    _SvcTmplUsed_Type()
)
svcTmplUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplUsed.setStatus("current")
_SvcCtrlSvcId_Type = TmnxServId
_SvcCtrlSvcId_Object = MibTableColumn
svcCtrlSvcId = _SvcCtrlSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 33),
    _SvcCtrlSvcId_Type()
)
svcCtrlSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcCtrlSvcId.setStatus("current")
_SvcCreationOrigin_Type = TmnxCreateOrigin
_SvcCreationOrigin_Object = MibTableColumn
svcCreationOrigin = _SvcCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 34),
    _SvcCreationOrigin_Type()
)
svcCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcCreationOrigin.setStatus("current")
_SvcNumMHStandbySaps_Type = Integer32
_SvcNumMHStandbySaps_Object = MibTableColumn
svcNumMHStandbySaps = _SvcNumMHStandbySaps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 37),
    _SvcNumMHStandbySaps_Type()
)
svcNumMHStandbySaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumMHStandbySaps.setStatus("current")
_SvcVsdDomainName_Type = TNamedItemOrEmpty
_SvcVsdDomainName_Object = MibTableColumn
svcVsdDomainName = _SvcVsdDomainName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 39),
    _SvcVsdDomainName_Type()
)
svcVsdDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainName.setStatus("current")


class _SvcIsTestSvc_Type(TruthValue):
    """Custom type svcIsTestSvc based on TruthValue"""
    defaultValue = 2


_SvcIsTestSvc_Type.__name__ = "TruthValue"
_SvcIsTestSvc_Object = MibTableColumn
svcIsTestSvc = _SvcIsTestSvc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 40),
    _SvcIsTestSvc_Type()
)
svcIsTestSvc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIsTestSvc.setStatus("current")


class _SvcTlsModeEtree_Type(TruthValue):
    """Custom type svcTlsModeEtree based on TruthValue"""
    defaultValue = 2


_SvcTlsModeEtree_Type.__name__ = "TruthValue"
_SvcTlsModeEtree_Object = MibTableColumn
svcTlsModeEtree = _SvcTlsModeEtree_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 41),
    _SvcTlsModeEtree_Type()
)
svcTlsModeEtree.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsModeEtree.setStatus("current")
_SvcNumEvpnMHStandbySaps_Type = Integer32
_SvcNumEvpnMHStandbySaps_Object = MibTableColumn
svcNumEvpnMHStandbySaps = _SvcNumEvpnMHStandbySaps_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 42),
    _SvcNumEvpnMHStandbySaps_Type()
)
svcNumEvpnMHStandbySaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNumEvpnMHStandbySaps.setStatus("current")


class _SvcLogServicesAllEvents_Type(TruthValue):
    """Custom type svcLogServicesAllEvents based on TruthValue"""
    defaultValue = 2


_SvcLogServicesAllEvents_Type.__name__ = "TruthValue"
_SvcLogServicesAllEvents_Object = MibTableColumn
svcLogServicesAllEvents = _SvcLogServicesAllEvents_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 2, 1, 43),
    _SvcLogServicesAllEvents_Type()
)
svcLogServicesAllEvents.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcLogServicesAllEvents.setStatus("current")
_SvcTlsInfoTable_Object = MibTable
svcTlsInfoTable = _SvcTlsInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3)
)
if mibBuilder.loadTexts:
    svcTlsInfoTable.setStatus("current")
_SvcTlsInfoEntry_Object = MibTableRow
svcTlsInfoEntry = _SvcTlsInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1)
)
svcTlsInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsInfoEntry.setStatus("current")


class _SvcTlsMacLearning_Type(TmnxEnabledDisabled):
    """Custom type svcTlsMacLearning based on TmnxEnabledDisabled"""
    defaultValue = 1


_SvcTlsMacLearning_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsMacLearning_Object = MibTableColumn
svcTlsMacLearning = _SvcTlsMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 1),
    _SvcTlsMacLearning_Type()
)
svcTlsMacLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacLearning.setStatus("current")


class _SvcTlsDiscardUnknownDest_Type(TmnxEnabledDisabled):
    """Custom type svcTlsDiscardUnknownDest based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsDiscardUnknownDest_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsDiscardUnknownDest_Object = MibTableColumn
svcTlsDiscardUnknownDest = _SvcTlsDiscardUnknownDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 2),
    _SvcTlsDiscardUnknownDest_Type()
)
svcTlsDiscardUnknownDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsDiscardUnknownDest.setStatus("current")


class _SvcTlsFdbTableSize_Type(Integer32):
    """Custom type svcTlsFdbTableSize based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 511999),
    )


_SvcTlsFdbTableSize_Type.__name__ = "Integer32"
_SvcTlsFdbTableSize_Object = MibTableColumn
svcTlsFdbTableSize = _SvcTlsFdbTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 3),
    _SvcTlsFdbTableSize_Type()
)
svcTlsFdbTableSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsFdbTableSize.setStatus("current")
_SvcTlsFdbNumEntries_Type = Integer32
_SvcTlsFdbNumEntries_Object = MibTableColumn
svcTlsFdbNumEntries = _SvcTlsFdbNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 4),
    _SvcTlsFdbNumEntries_Type()
)
svcTlsFdbNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumEntries.setStatus("current")
_SvcTlsFdbNumStaticEntries_Type = Integer32
_SvcTlsFdbNumStaticEntries_Object = MibTableColumn
svcTlsFdbNumStaticEntries = _SvcTlsFdbNumStaticEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 5),
    _SvcTlsFdbNumStaticEntries_Type()
)
svcTlsFdbNumStaticEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumStaticEntries.setStatus("current")


class _SvcTlsFdbLocalAgeTime_Type(Integer32):
    """Custom type svcTlsFdbLocalAgeTime based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_SvcTlsFdbLocalAgeTime_Type.__name__ = "Integer32"
_SvcTlsFdbLocalAgeTime_Object = MibTableColumn
svcTlsFdbLocalAgeTime = _SvcTlsFdbLocalAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 6),
    _SvcTlsFdbLocalAgeTime_Type()
)
svcTlsFdbLocalAgeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsFdbLocalAgeTime.setStatus("current")


class _SvcTlsFdbRemoteAgeTime_Type(Integer32):
    """Custom type svcTlsFdbRemoteAgeTime based on Integer32"""
    defaultValue = 900

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_SvcTlsFdbRemoteAgeTime_Type.__name__ = "Integer32"
_SvcTlsFdbRemoteAgeTime_Object = MibTableColumn
svcTlsFdbRemoteAgeTime = _SvcTlsFdbRemoteAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 7),
    _SvcTlsFdbRemoteAgeTime_Type()
)
svcTlsFdbRemoteAgeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsFdbRemoteAgeTime.setStatus("current")


class _SvcTlsStpAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsStpAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsStpAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsStpAdminStatus_Object = MibTableColumn
svcTlsStpAdminStatus = _SvcTlsStpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 8),
    _SvcTlsStpAdminStatus_Type()
)
svcTlsStpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpAdminStatus.setStatus("current")


class _SvcTlsStpPriority_Type(Integer32):
    """Custom type svcTlsStpPriority based on Integer32"""
    defaultValue = 32768

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcTlsStpPriority_Type.__name__ = "Integer32"
_SvcTlsStpPriority_Object = MibTableColumn
svcTlsStpPriority = _SvcTlsStpPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 9),
    _SvcTlsStpPriority_Type()
)
svcTlsStpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpPriority.setStatus("current")
_SvcTlsStpBridgeAddress_Type = MacAddress
_SvcTlsStpBridgeAddress_Object = MibTableColumn
svcTlsStpBridgeAddress = _SvcTlsStpBridgeAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 10),
    _SvcTlsStpBridgeAddress_Type()
)
svcTlsStpBridgeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpBridgeAddress.setStatus("current")
_SvcTlsStpTimeSinceTopologyChange_Type = TimeTicks
_SvcTlsStpTimeSinceTopologyChange_Object = MibTableColumn
svcTlsStpTimeSinceTopologyChange = _SvcTlsStpTimeSinceTopologyChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 11),
    _SvcTlsStpTimeSinceTopologyChange_Type()
)
svcTlsStpTimeSinceTopologyChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpTimeSinceTopologyChange.setStatus("current")
_SvcTlsStpTopologyChanges_Type = Integer32
_SvcTlsStpTopologyChanges_Object = MibTableColumn
svcTlsStpTopologyChanges = _SvcTlsStpTopologyChanges_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 12),
    _SvcTlsStpTopologyChanges_Type()
)
svcTlsStpTopologyChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpTopologyChanges.setStatus("current")
_SvcTlsStpDesignatedRoot_Type = BridgeId
_SvcTlsStpDesignatedRoot_Object = MibTableColumn
svcTlsStpDesignatedRoot = _SvcTlsStpDesignatedRoot_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 13),
    _SvcTlsStpDesignatedRoot_Type()
)
svcTlsStpDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpDesignatedRoot.setStatus("current")
_SvcTlsStpRootCost_Type = Integer32
_SvcTlsStpRootCost_Object = MibTableColumn
svcTlsStpRootCost = _SvcTlsStpRootCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 14),
    _SvcTlsStpRootCost_Type()
)
svcTlsStpRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpRootCost.setStatus("current")
_SvcTlsStpRootPort_Type = Integer32
_SvcTlsStpRootPort_Object = MibTableColumn
svcTlsStpRootPort = _SvcTlsStpRootPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 15),
    _SvcTlsStpRootPort_Type()
)
svcTlsStpRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpRootPort.setStatus("current")
_SvcTlsStpMaxAge_Type = Integer32
_SvcTlsStpMaxAge_Object = MibTableColumn
svcTlsStpMaxAge = _SvcTlsStpMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 16),
    _SvcTlsStpMaxAge_Type()
)
svcTlsStpMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpMaxAge.setStatus("current")
_SvcTlsStpHelloTime_Type = Integer32
_SvcTlsStpHelloTime_Object = MibTableColumn
svcTlsStpHelloTime = _SvcTlsStpHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 17),
    _SvcTlsStpHelloTime_Type()
)
svcTlsStpHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpHelloTime.setStatus("current")
_SvcTlsStpHoldTime_Type = Integer32
_SvcTlsStpHoldTime_Object = MibTableColumn
svcTlsStpHoldTime = _SvcTlsStpHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 18),
    _SvcTlsStpHoldTime_Type()
)
svcTlsStpHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpHoldTime.setStatus("obsolete")
_SvcTlsStpForwardDelay_Type = Integer32
_SvcTlsStpForwardDelay_Object = MibTableColumn
svcTlsStpForwardDelay = _SvcTlsStpForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 19),
    _SvcTlsStpForwardDelay_Type()
)
svcTlsStpForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpForwardDelay.setStatus("current")


class _SvcTlsStpBridgeMaxAge_Type(Integer32):
    """Custom type svcTlsStpBridgeMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 40),
    )


_SvcTlsStpBridgeMaxAge_Type.__name__ = "Integer32"
_SvcTlsStpBridgeMaxAge_Object = MibTableColumn
svcTlsStpBridgeMaxAge = _SvcTlsStpBridgeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 20),
    _SvcTlsStpBridgeMaxAge_Type()
)
svcTlsStpBridgeMaxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpBridgeMaxAge.setStatus("current")


class _SvcTlsStpBridgeHelloTime_Type(Integer32):
    """Custom type svcTlsStpBridgeHelloTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcTlsStpBridgeHelloTime_Type.__name__ = "Integer32"
_SvcTlsStpBridgeHelloTime_Object = MibTableColumn
svcTlsStpBridgeHelloTime = _SvcTlsStpBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 21),
    _SvcTlsStpBridgeHelloTime_Type()
)
svcTlsStpBridgeHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpBridgeHelloTime.setStatus("current")


class _SvcTlsStpBridgeForwardDelay_Type(Integer32):
    """Custom type svcTlsStpBridgeForwardDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 30),
    )


_SvcTlsStpBridgeForwardDelay_Type.__name__ = "Integer32"
_SvcTlsStpBridgeForwardDelay_Object = MibTableColumn
svcTlsStpBridgeForwardDelay = _SvcTlsStpBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 22),
    _SvcTlsStpBridgeForwardDelay_Type()
)
svcTlsStpBridgeForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpBridgeForwardDelay.setStatus("current")


class _SvcTlsStpOperStatus_Type(Integer32):
    """Custom type svcTlsStpOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SvcTlsStpOperStatus_Type.__name__ = "Integer32"
_SvcTlsStpOperStatus_Object = MibTableColumn
svcTlsStpOperStatus = _SvcTlsStpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 30),
    _SvcTlsStpOperStatus_Type()
)
svcTlsStpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpOperStatus.setStatus("current")


class _SvcTlsStpVirtualRootBridgeStatus_Type(Integer32):
    """Custom type svcTlsStpVirtualRootBridgeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SvcTlsStpVirtualRootBridgeStatus_Type.__name__ = "Integer32"
_SvcTlsStpVirtualRootBridgeStatus_Object = MibTableColumn
svcTlsStpVirtualRootBridgeStatus = _SvcTlsStpVirtualRootBridgeStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 31),
    _SvcTlsStpVirtualRootBridgeStatus_Type()
)
svcTlsStpVirtualRootBridgeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpVirtualRootBridgeStatus.setStatus("current")


class _SvcTlsMacAgeing_Type(TmnxEnabledDisabled):
    """Custom type svcTlsMacAgeing based on TmnxEnabledDisabled"""
    defaultValue = 1


_SvcTlsMacAgeing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsMacAgeing_Object = MibTableColumn
svcTlsMacAgeing = _SvcTlsMacAgeing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 32),
    _SvcTlsMacAgeing_Type()
)
svcTlsMacAgeing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacAgeing.setStatus("current")
_SvcTlsStpTopologyChangeActive_Type = TruthValue
_SvcTlsStpTopologyChangeActive_Object = MibTableColumn
svcTlsStpTopologyChangeActive = _SvcTlsStpTopologyChangeActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 33),
    _SvcTlsStpTopologyChangeActive_Type()
)
svcTlsStpTopologyChangeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpTopologyChangeActive.setStatus("current")


class _SvcTlsFdbTableFullHighWatermark_Type(Integer32):
    """Custom type svcTlsFdbTableFullHighWatermark based on Integer32"""
    defaultValue = 95

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsFdbTableFullHighWatermark_Type.__name__ = "Integer32"
_SvcTlsFdbTableFullHighWatermark_Object = MibTableColumn
svcTlsFdbTableFullHighWatermark = _SvcTlsFdbTableFullHighWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 34),
    _SvcTlsFdbTableFullHighWatermark_Type()
)
svcTlsFdbTableFullHighWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsFdbTableFullHighWatermark.setStatus("current")


class _SvcTlsFdbTableFullLowWatermark_Type(Integer32):
    """Custom type svcTlsFdbTableFullLowWatermark based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsFdbTableFullLowWatermark_Type.__name__ = "Integer32"
_SvcTlsFdbTableFullLowWatermark_Object = MibTableColumn
svcTlsFdbTableFullLowWatermark = _SvcTlsFdbTableFullLowWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 35),
    _SvcTlsFdbTableFullLowWatermark_Type()
)
svcTlsFdbTableFullLowWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsFdbTableFullLowWatermark.setStatus("current")
_SvcTlsVpnId_Type = VpnId
_SvcTlsVpnId_Object = MibTableColumn
svcTlsVpnId = _SvcTlsVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 36),
    _SvcTlsVpnId_Type()
)
svcTlsVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVpnId.setStatus("current")
_SvcTlsCustId_Type = TmnxCustId
_SvcTlsCustId_Object = MibTableColumn
svcTlsCustId = _SvcTlsCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 37),
    _SvcTlsCustId_Type()
)
svcTlsCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsCustId.setStatus("current")


class _SvcTlsStpVersion_Type(Integer32):
    """Custom type svcTlsStpVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("rstp", 2),
          ("compDot1w", 3),
          ("dot1w", 4),
          ("mstp", 5),
          ("pmstp", 6))
    )


_SvcTlsStpVersion_Type.__name__ = "Integer32"
_SvcTlsStpVersion_Object = MibTableColumn
svcTlsStpVersion = _SvcTlsStpVersion_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 38),
    _SvcTlsStpVersion_Type()
)
svcTlsStpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpVersion.setStatus("current")


class _SvcTlsStpHoldCount_Type(Integer32):
    """Custom type svcTlsStpHoldCount based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_SvcTlsStpHoldCount_Type.__name__ = "Integer32"
_SvcTlsStpHoldCount_Object = MibTableColumn
svcTlsStpHoldCount = _SvcTlsStpHoldCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 39),
    _SvcTlsStpHoldCount_Type()
)
svcTlsStpHoldCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpHoldCount.setStatus("current")
_SvcTlsStpPrimaryBridge_Type = BridgeId
_SvcTlsStpPrimaryBridge_Object = MibTableColumn
svcTlsStpPrimaryBridge = _SvcTlsStpPrimaryBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 40),
    _SvcTlsStpPrimaryBridge_Type()
)
svcTlsStpPrimaryBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpPrimaryBridge.setStatus("current")


class _SvcTlsStpBridgeInstanceId_Type(Integer32):
    """Custom type svcTlsStpBridgeInstanceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_SvcTlsStpBridgeInstanceId_Type.__name__ = "Integer32"
_SvcTlsStpBridgeInstanceId_Object = MibTableColumn
svcTlsStpBridgeInstanceId = _SvcTlsStpBridgeInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 41),
    _SvcTlsStpBridgeInstanceId_Type()
)
svcTlsStpBridgeInstanceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpBridgeInstanceId.setStatus("current")
_SvcTlsStpVcpOperProtocol_Type = StpProtocol
_SvcTlsStpVcpOperProtocol_Object = MibTableColumn
svcTlsStpVcpOperProtocol = _SvcTlsStpVcpOperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 42),
    _SvcTlsStpVcpOperProtocol_Type()
)
svcTlsStpVcpOperProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpVcpOperProtocol.setStatus("current")


class _SvcTlsMacMoveMaxRate_Type(Unsigned32):
    """Custom type svcTlsMacMoveMaxRate based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcTlsMacMoveMaxRate_Type.__name__ = "Unsigned32"
_SvcTlsMacMoveMaxRate_Object = MibTableColumn
svcTlsMacMoveMaxRate = _SvcTlsMacMoveMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 43),
    _SvcTlsMacMoveMaxRate_Type()
)
svcTlsMacMoveMaxRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacMoveMaxRate.setStatus("current")


class _SvcTlsMacMoveRetryTimeout_Type(Unsigned32):
    """Custom type svcTlsMacMoveRetryTimeout based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_SvcTlsMacMoveRetryTimeout_Type.__name__ = "Unsigned32"
_SvcTlsMacMoveRetryTimeout_Object = MibTableColumn
svcTlsMacMoveRetryTimeout = _SvcTlsMacMoveRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 44),
    _SvcTlsMacMoveRetryTimeout_Type()
)
svcTlsMacMoveRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacMoveRetryTimeout.setStatus("current")


class _SvcTlsMacMoveAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsMacMoveAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsMacMoveAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsMacMoveAdminStatus_Object = MibTableColumn
svcTlsMacMoveAdminStatus = _SvcTlsMacMoveAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 45),
    _SvcTlsMacMoveAdminStatus_Type()
)
svcTlsMacMoveAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacMoveAdminStatus.setStatus("current")
_SvcTlsMacRelearnOnly_Type = TruthValue
_SvcTlsMacRelearnOnly_Object = MibTableColumn
svcTlsMacRelearnOnly = _SvcTlsMacRelearnOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 46),
    _SvcTlsMacRelearnOnly_Type()
)
svcTlsMacRelearnOnly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsMacRelearnOnly.setStatus("current")


class _SvcTlsMfibTableSize_Type(Integer32):
    """Custom type svcTlsMfibTableSize based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40959),
    )


_SvcTlsMfibTableSize_Type.__name__ = "Integer32"
_SvcTlsMfibTableSize_Object = MibTableColumn
svcTlsMfibTableSize = _SvcTlsMfibTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 47),
    _SvcTlsMfibTableSize_Type()
)
svcTlsMfibTableSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMfibTableSize.setStatus("current")


class _SvcTlsMfibTableFullHighWatermark_Type(Integer32):
    """Custom type svcTlsMfibTableFullHighWatermark based on Integer32"""
    defaultValue = 95

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsMfibTableFullHighWatermark_Type.__name__ = "Integer32"
_SvcTlsMfibTableFullHighWatermark_Object = MibTableColumn
svcTlsMfibTableFullHighWatermark = _SvcTlsMfibTableFullHighWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 48),
    _SvcTlsMfibTableFullHighWatermark_Type()
)
svcTlsMfibTableFullHighWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMfibTableFullHighWatermark.setStatus("current")


class _SvcTlsMfibTableFullLowWatermark_Type(Integer32):
    """Custom type svcTlsMfibTableFullLowWatermark based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsMfibTableFullLowWatermark_Type.__name__ = "Integer32"
_SvcTlsMfibTableFullLowWatermark_Object = MibTableColumn
svcTlsMfibTableFullLowWatermark = _SvcTlsMfibTableFullLowWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 49),
    _SvcTlsMfibTableFullLowWatermark_Type()
)
svcTlsMfibTableFullLowWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMfibTableFullLowWatermark.setStatus("current")


class _SvcTlsMacFlushOnFail_Type(TmnxEnabledDisabled):
    """Custom type svcTlsMacFlushOnFail based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsMacFlushOnFail_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsMacFlushOnFail_Object = MibTableColumn
svcTlsMacFlushOnFail = _SvcTlsMacFlushOnFail_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 50),
    _SvcTlsMacFlushOnFail_Type()
)
svcTlsMacFlushOnFail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacFlushOnFail.setStatus("current")


class _SvcTlsStpRegionName_Type(DisplayString):
    """Custom type svcTlsStpRegionName based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcTlsStpRegionName_Type.__name__ = "DisplayString"
_SvcTlsStpRegionName_Object = MibTableColumn
svcTlsStpRegionName = _SvcTlsStpRegionName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 51),
    _SvcTlsStpRegionName_Type()
)
svcTlsStpRegionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpRegionName.setStatus("current")


class _SvcTlsStpRegionRevision_Type(Integer32):
    """Custom type svcTlsStpRegionRevision based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcTlsStpRegionRevision_Type.__name__ = "Integer32"
_SvcTlsStpRegionRevision_Object = MibTableColumn
svcTlsStpRegionRevision = _SvcTlsStpRegionRevision_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 52),
    _SvcTlsStpRegionRevision_Type()
)
svcTlsStpRegionRevision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpRegionRevision.setStatus("current")


class _SvcTlsStpBridgeMaxHops_Type(Integer32):
    """Custom type svcTlsStpBridgeMaxHops based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 40),
    )


_SvcTlsStpBridgeMaxHops_Type.__name__ = "Integer32"
_SvcTlsStpBridgeMaxHops_Object = MibTableColumn
svcTlsStpBridgeMaxHops = _SvcTlsStpBridgeMaxHops_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 53),
    _SvcTlsStpBridgeMaxHops_Type()
)
svcTlsStpBridgeMaxHops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsStpBridgeMaxHops.setStatus("current")
_SvcTlsStpCistRegionalRoot_Type = BridgeId
_SvcTlsStpCistRegionalRoot_Object = MibTableColumn
svcTlsStpCistRegionalRoot = _SvcTlsStpCistRegionalRoot_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 54),
    _SvcTlsStpCistRegionalRoot_Type()
)
svcTlsStpCistRegionalRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpCistRegionalRoot.setStatus("current")
_SvcTlsStpCistIntRootCost_Type = Integer32
_SvcTlsStpCistIntRootCost_Object = MibTableColumn
svcTlsStpCistIntRootCost = _SvcTlsStpCistIntRootCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 55),
    _SvcTlsStpCistIntRootCost_Type()
)
svcTlsStpCistIntRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpCistIntRootCost.setStatus("current")
_SvcTlsStpCistRemainingHopCount_Type = Integer32
_SvcTlsStpCistRemainingHopCount_Object = MibTableColumn
svcTlsStpCistRemainingHopCount = _SvcTlsStpCistRemainingHopCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 56),
    _SvcTlsStpCistRemainingHopCount_Type()
)
svcTlsStpCistRemainingHopCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpCistRemainingHopCount.setStatus("current")
_SvcTlsStpCistRegionalRootPort_Type = Integer32
_SvcTlsStpCistRegionalRootPort_Object = MibTableColumn
svcTlsStpCistRegionalRootPort = _SvcTlsStpCistRegionalRootPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 57),
    _SvcTlsStpCistRegionalRootPort_Type()
)
svcTlsStpCistRegionalRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsStpCistRegionalRootPort.setStatus("current")
_SvcTlsFdbNumLearnedEntries_Type = Integer32
_SvcTlsFdbNumLearnedEntries_Object = MibTableColumn
svcTlsFdbNumLearnedEntries = _SvcTlsFdbNumLearnedEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 58),
    _SvcTlsFdbNumLearnedEntries_Type()
)
svcTlsFdbNumLearnedEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumLearnedEntries.setStatus("current")
_SvcTlsFdbNumOamEntries_Type = Integer32
_SvcTlsFdbNumOamEntries_Object = MibTableColumn
svcTlsFdbNumOamEntries = _SvcTlsFdbNumOamEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 59),
    _SvcTlsFdbNumOamEntries_Type()
)
svcTlsFdbNumOamEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumOamEntries.setStatus("current")
_SvcTlsFdbNumDhcpEntries_Type = Integer32
_SvcTlsFdbNumDhcpEntries_Object = MibTableColumn
svcTlsFdbNumDhcpEntries = _SvcTlsFdbNumDhcpEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 60),
    _SvcTlsFdbNumDhcpEntries_Type()
)
svcTlsFdbNumDhcpEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumDhcpEntries.setStatus("current")
_SvcTlsFdbNumHostEntries_Type = Integer32
_SvcTlsFdbNumHostEntries_Object = MibTableColumn
svcTlsFdbNumHostEntries = _SvcTlsFdbNumHostEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 61),
    _SvcTlsFdbNumHostEntries_Type()
)
svcTlsFdbNumHostEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumHostEntries.setStatus("current")


class _SvcTlsShcvAction_Type(TmnxSubShcvAction):
    """Custom type svcTlsShcvAction based on TmnxSubShcvAction"""
    defaultValue = 1


_SvcTlsShcvAction_Type.__name__ = "TmnxSubShcvAction"
_SvcTlsShcvAction_Object = MibTableColumn
svcTlsShcvAction = _SvcTlsShcvAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 62),
    _SvcTlsShcvAction_Type()
)
svcTlsShcvAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvAction.setStatus("current")
_SvcTlsShcvSrcIp_Type = IpAddress
_SvcTlsShcvSrcIp_Object = MibTableColumn
svcTlsShcvSrcIp = _SvcTlsShcvSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 63),
    _SvcTlsShcvSrcIp_Type()
)
svcTlsShcvSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvSrcIp.setStatus("current")
_SvcTlsShcvSrcMac_Type = MacAddress
_SvcTlsShcvSrcMac_Object = MibTableColumn
svcTlsShcvSrcMac = _SvcTlsShcvSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 64),
    _SvcTlsShcvSrcMac_Type()
)
svcTlsShcvSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvSrcMac.setStatus("current")


class _SvcTlsShcvInterval_Type(TmnxSubShcvInterval):
    """Custom type svcTlsShcvInterval based on TmnxSubShcvInterval"""
    defaultValue = 0


_SvcTlsShcvInterval_Type.__name__ = "TmnxSubShcvInterval"
_SvcTlsShcvInterval_Object = MibTableColumn
svcTlsShcvInterval = _SvcTlsShcvInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 65),
    _SvcTlsShcvInterval_Type()
)
svcTlsShcvInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvInterval.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsShcvInterval.setUnits("minutes")


class _SvcTlsPriPortsCumulativeFactor_Type(Unsigned32):
    """Custom type svcTlsPriPortsCumulativeFactor based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SvcTlsPriPortsCumulativeFactor_Type.__name__ = "Unsigned32"
_SvcTlsPriPortsCumulativeFactor_Object = MibTableColumn
svcTlsPriPortsCumulativeFactor = _SvcTlsPriPortsCumulativeFactor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 66),
    _SvcTlsPriPortsCumulativeFactor_Type()
)
svcTlsPriPortsCumulativeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPriPortsCumulativeFactor.setStatus("current")


class _SvcTlsSecPortsCumulativeFactor_Type(Unsigned32):
    """Custom type svcTlsSecPortsCumulativeFactor based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 9),
    )


_SvcTlsSecPortsCumulativeFactor_Type.__name__ = "Unsigned32"
_SvcTlsSecPortsCumulativeFactor_Object = MibTableColumn
svcTlsSecPortsCumulativeFactor = _SvcTlsSecPortsCumulativeFactor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 67),
    _SvcTlsSecPortsCumulativeFactor_Type()
)
svcTlsSecPortsCumulativeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsSecPortsCumulativeFactor.setStatus("current")
_SvcTlsL2ptTermEnabled_Type = TruthValue
_SvcTlsL2ptTermEnabled_Object = MibTableColumn
svcTlsL2ptTermEnabled = _SvcTlsL2ptTermEnabled_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 68),
    _SvcTlsL2ptTermEnabled_Type()
)
svcTlsL2ptTermEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsL2ptTermEnabled.setStatus("current")


class _SvcTlsPropagateMacFlush_Type(TruthValue):
    """Custom type svcTlsPropagateMacFlush based on TruthValue"""
    defaultValue = 2


_SvcTlsPropagateMacFlush_Type.__name__ = "TruthValue"
_SvcTlsPropagateMacFlush_Object = MibTableColumn
svcTlsPropagateMacFlush = _SvcTlsPropagateMacFlush_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 69),
    _SvcTlsPropagateMacFlush_Type()
)
svcTlsPropagateMacFlush.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPropagateMacFlush.setStatus("current")


class _SvcTlsMrpAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsMrpAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsMrpAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsMrpAdminStatus_Object = MibTableColumn
svcTlsMrpAdminStatus = _SvcTlsMrpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 70),
    _SvcTlsMrpAdminStatus_Type()
)
svcTlsMrpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMrpAdminStatus.setStatus("current")


class _SvcTlsMrpMaxAttributes_Type(Unsigned32):
    """Custom type svcTlsMrpMaxAttributes based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_SvcTlsMrpMaxAttributes_Type.__name__ = "Unsigned32"
_SvcTlsMrpMaxAttributes_Object = MibTableColumn
svcTlsMrpMaxAttributes = _SvcTlsMrpMaxAttributes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 71),
    _SvcTlsMrpMaxAttributes_Type()
)
svcTlsMrpMaxAttributes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMrpMaxAttributes.setStatus("current")
_SvcTlsMrpAttributeCount_Type = Unsigned32
_SvcTlsMrpAttributeCount_Object = MibTableColumn
svcTlsMrpAttributeCount = _SvcTlsMrpAttributeCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 72),
    _SvcTlsMrpAttributeCount_Type()
)
svcTlsMrpAttributeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsMrpAttributeCount.setStatus("current")
_SvcTlsMrpFailedRegisterCount_Type = Unsigned32
_SvcTlsMrpFailedRegisterCount_Object = MibTableColumn
svcTlsMrpFailedRegisterCount = _SvcTlsMrpFailedRegisterCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 73),
    _SvcTlsMrpFailedRegisterCount_Type()
)
svcTlsMrpFailedRegisterCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsMrpFailedRegisterCount.setStatus("current")


class _SvcTlsMcPathMgmtPlcyName_Type(TNamedItemOrEmpty):
    """Custom type svcTlsMcPathMgmtPlcyName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("default")


_SvcTlsMcPathMgmtPlcyName_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsMcPathMgmtPlcyName_Object = MibTableColumn
svcTlsMcPathMgmtPlcyName = _SvcTlsMcPathMgmtPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 74),
    _SvcTlsMcPathMgmtPlcyName_Type()
)
svcTlsMcPathMgmtPlcyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMcPathMgmtPlcyName.setStatus("current")


class _SvcTlsMrpFloodTime_Type(Unsigned32):
    """Custom type svcTlsMrpFloodTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(3, 600),
    )


_SvcTlsMrpFloodTime_Type.__name__ = "Unsigned32"
_SvcTlsMrpFloodTime_Object = MibTableColumn
svcTlsMrpFloodTime = _SvcTlsMrpFloodTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 75),
    _SvcTlsMrpFloodTime_Type()
)
svcTlsMrpFloodTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMrpFloodTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsMrpFloodTime.setUnits("seconds")


class _SvcTlsMrpAttrTblHighWatermark_Type(Integer32):
    """Custom type svcTlsMrpAttrTblHighWatermark based on Integer32"""
    defaultValue = 95

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsMrpAttrTblHighWatermark_Type.__name__ = "Integer32"
_SvcTlsMrpAttrTblHighWatermark_Object = MibTableColumn
svcTlsMrpAttrTblHighWatermark = _SvcTlsMrpAttrTblHighWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 76),
    _SvcTlsMrpAttrTblHighWatermark_Type()
)
svcTlsMrpAttrTblHighWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMrpAttrTblHighWatermark.setStatus("current")


class _SvcTlsMrpAttrTblLowWatermark_Type(Integer32):
    """Custom type svcTlsMrpAttrTblLowWatermark based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsMrpAttrTblLowWatermark_Type.__name__ = "Integer32"
_SvcTlsMrpAttrTblLowWatermark_Object = MibTableColumn
svcTlsMrpAttrTblLowWatermark = _SvcTlsMrpAttrTblLowWatermark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 77),
    _SvcTlsMrpAttrTblLowWatermark_Type()
)
svcTlsMrpAttrTblLowWatermark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMrpAttrTblLowWatermark.setStatus("current")


class _SvcTlsMacMoveNumRetries_Type(Unsigned32):
    """Custom type svcTlsMacMoveNumRetries based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcTlsMacMoveNumRetries_Type.__name__ = "Unsigned32"
_SvcTlsMacMoveNumRetries_Object = MibTableColumn
svcTlsMacMoveNumRetries = _SvcTlsMacMoveNumRetries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 78),
    _SvcTlsMacMoveNumRetries_Type()
)
svcTlsMacMoveNumRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacMoveNumRetries.setStatus("current")


class _SvcTlsMacSubNetLen_Type(Integer32):
    """Custom type svcTlsMacSubNetLen based on Integer32"""
    defaultValue = 48

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(24, 48),
    )


_SvcTlsMacSubNetLen_Type.__name__ = "Integer32"
_SvcTlsMacSubNetLen_Object = MibTableColumn
svcTlsMacSubNetLen = _SvcTlsMacSubNetLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 79),
    _SvcTlsMacSubNetLen_Type()
)
svcTlsMacSubNetLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacSubNetLen.setStatus("current")


class _SvcTlsSendFlushOnBVplsFail_Type(TruthValue):
    """Custom type svcTlsSendFlushOnBVplsFail based on TruthValue"""
    defaultValue = 2


_SvcTlsSendFlushOnBVplsFail_Type.__name__ = "TruthValue"
_SvcTlsSendFlushOnBVplsFail_Object = MibTableColumn
svcTlsSendFlushOnBVplsFail = _SvcTlsSendFlushOnBVplsFail_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 80),
    _SvcTlsSendFlushOnBVplsFail_Type()
)
svcTlsSendFlushOnBVplsFail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsSendFlushOnBVplsFail.setStatus("current")


class _SvcTlsPropMacFlushFromBVpls_Type(TruthValue):
    """Custom type svcTlsPropMacFlushFromBVpls based on TruthValue"""
    defaultValue = 2


_SvcTlsPropMacFlushFromBVpls_Type.__name__ = "TruthValue"
_SvcTlsPropMacFlushFromBVpls_Object = MibTableColumn
svcTlsPropMacFlushFromBVpls = _SvcTlsPropMacFlushFromBVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 81),
    _SvcTlsPropMacFlushFromBVpls_Type()
)
svcTlsPropMacFlushFromBVpls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPropMacFlushFromBVpls.setStatus("current")


class _SvcTlsMacNotifInterval_Type(Unsigned32):
    """Custom type svcTlsMacNotifInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsMacNotifInterval_Type.__name__ = "Unsigned32"
_SvcTlsMacNotifInterval_Object = MibTableColumn
svcTlsMacNotifInterval = _SvcTlsMacNotifInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 82),
    _SvcTlsMacNotifInterval_Type()
)
svcTlsMacNotifInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacNotifInterval.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsMacNotifInterval.setUnits("deciseconds")


class _SvcTlsMacNotifCount_Type(Unsigned32):
    """Custom type svcTlsMacNotifCount based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_SvcTlsMacNotifCount_Type.__name__ = "Unsigned32"
_SvcTlsMacNotifCount_Object = MibTableColumn
svcTlsMacNotifCount = _SvcTlsMacNotifCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 83),
    _SvcTlsMacNotifCount_Type()
)
svcTlsMacNotifCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacNotifCount.setStatus("current")


class _SvcTlsMacNotifAdminState_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsMacNotifAdminState based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsMacNotifAdminState_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsMacNotifAdminState_Object = MibTableColumn
svcTlsMacNotifAdminState = _SvcTlsMacNotifAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 84),
    _SvcTlsMacNotifAdminState_Type()
)
svcTlsMacNotifAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMacNotifAdminState.setStatus("current")


class _SvcTlsPerSvcHashing_Type(TmnxEnabledDisabled):
    """Custom type svcTlsPerSvcHashing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsPerSvcHashing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsPerSvcHashing_Object = MibTableColumn
svcTlsPerSvcHashing = _SvcTlsPerSvcHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 85),
    _SvcTlsPerSvcHashing_Type()
)
svcTlsPerSvcHashing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPerSvcHashing.setStatus("current")


class _SvcTlsAllowIpIfBinding_Type(TruthValue):
    """Custom type svcTlsAllowIpIfBinding based on TruthValue"""
    defaultValue = 2


_SvcTlsAllowIpIfBinding_Type.__name__ = "TruthValue"
_SvcTlsAllowIpIfBinding_Object = MibTableColumn
svcTlsAllowIpIfBinding = _SvcTlsAllowIpIfBinding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 86),
    _SvcTlsAllowIpIfBinding_Type()
)
svcTlsAllowIpIfBinding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsAllowIpIfBinding.setStatus("current")


class _SvcTlsShcvRetryTimeout_Type(TmnxSubShcvRetryTimeout):
    """Custom type svcTlsShcvRetryTimeout based on TmnxSubShcvRetryTimeout"""
    defaultValue = 10


_SvcTlsShcvRetryTimeout_Type.__name__ = "TmnxSubShcvRetryTimeout"
_SvcTlsShcvRetryTimeout_Object = MibTableColumn
svcTlsShcvRetryTimeout = _SvcTlsShcvRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 87),
    _SvcTlsShcvRetryTimeout_Type()
)
svcTlsShcvRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvRetryTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsShcvRetryTimeout.setUnits("seconds")


class _SvcTlsShcvRetryCount_Type(TmnxSubShcvRetryCount):
    """Custom type svcTlsShcvRetryCount based on TmnxSubShcvRetryCount"""
    defaultValue = 2


_SvcTlsShcvRetryCount_Type.__name__ = "TmnxSubShcvRetryCount"
_SvcTlsShcvRetryCount_Object = MibTableColumn
svcTlsShcvRetryCount = _SvcTlsShcvRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 88),
    _SvcTlsShcvRetryCount_Type()
)
svcTlsShcvRetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvRetryCount.setStatus("current")


class _SvcTlsTempFloodTime_Type(Integer32):
    """Custom type svcTlsTempFloodTime based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(3, 600),
    )


_SvcTlsTempFloodTime_Type.__name__ = "Integer32"
_SvcTlsTempFloodTime_Object = MibTableColumn
svcTlsTempFloodTime = _SvcTlsTempFloodTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 89),
    _SvcTlsTempFloodTime_Type()
)
svcTlsTempFloodTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsTempFloodTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsTempFloodTime.setUnits("seconds")
_SvcTlsTempFloodActive_Type = TruthValue
_SvcTlsTempFloodActive_Object = MibTableColumn
svcTlsTempFloodActive = _SvcTlsTempFloodActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 90),
    _SvcTlsTempFloodActive_Type()
)
svcTlsTempFloodActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsTempFloodActive.setStatus("current")
_SvcTlsTempFloodChangeCount_Type = Integer32
_SvcTlsTempFloodChangeCount_Object = MibTableColumn
svcTlsTempFloodChangeCount = _SvcTlsTempFloodChangeCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 91),
    _SvcTlsTempFloodChangeCount_Type()
)
svcTlsTempFloodChangeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsTempFloodChangeCount.setStatus("current")


class _SvcTlsShcvPolicyIpv4_Type(TNamedItemOrEmpty):
    """Custom type svcTlsShcvPolicyIpv4 based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsShcvPolicyIpv4_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsShcvPolicyIpv4_Object = MibTableColumn
svcTlsShcvPolicyIpv4 = _SvcTlsShcvPolicyIpv4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 92),
    _SvcTlsShcvPolicyIpv4_Type()
)
svcTlsShcvPolicyIpv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsShcvPolicyIpv4.setStatus("current")


class _SvcTlsMcastIpv6SnpgScope_Type(Integer32):
    """Custom type svcTlsMcastIpv6SnpgScope based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sgBased", 1),
          ("macBased", 2))
    )


_SvcTlsMcastIpv6SnpgScope_Type.__name__ = "Integer32"
_SvcTlsMcastIpv6SnpgScope_Object = MibTableColumn
svcTlsMcastIpv6SnpgScope = _SvcTlsMcastIpv6SnpgScope_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 93),
    _SvcTlsMcastIpv6SnpgScope_Type()
)
svcTlsMcastIpv6SnpgScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsMcastIpv6SnpgScope.setStatus("current")


class _SvcTlsSelLearnedFdb_Type(TruthValue):
    """Custom type svcTlsSelLearnedFdb based on TruthValue"""
    defaultValue = 2


_SvcTlsSelLearnedFdb_Type.__name__ = "TruthValue"
_SvcTlsSelLearnedFdb_Object = MibTableColumn
svcTlsSelLearnedFdb = _SvcTlsSelLearnedFdb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 94),
    _SvcTlsSelLearnedFdb_Type()
)
svcTlsSelLearnedFdb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsSelLearnedFdb.setStatus("current")
_SvcTlsFdbNumEntriesInUse_Type = Integer32
_SvcTlsFdbNumEntriesInUse_Object = MibTableColumn
svcTlsFdbNumEntriesInUse = _SvcTlsFdbNumEntriesInUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 95),
    _SvcTlsFdbNumEntriesInUse_Type()
)
svcTlsFdbNumEntriesInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbNumEntriesInUse.setStatus("current")
_SvcTlsInfoLastMgmtChange_Type = TimeStamp
_SvcTlsInfoLastMgmtChange_Object = MibTableColumn
svcTlsInfoLastMgmtChange = _SvcTlsInfoLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 96),
    _SvcTlsInfoLastMgmtChange_Type()
)
svcTlsInfoLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsInfoLastMgmtChange.setStatus("current")
_SvcTlsRvplsIpIfSvcId_Type = TmnxServId
_SvcTlsRvplsIpIfSvcId_Object = MibTableColumn
svcTlsRvplsIpIfSvcId = _SvcTlsRvplsIpIfSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 97),
    _SvcTlsRvplsIpIfSvcId_Type()
)
svcTlsRvplsIpIfSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsRvplsIpIfSvcId.setStatus("current")
_SvcTlsRvplsIpIfIndex_Type = InterfaceIndexOrZero
_SvcTlsRvplsIpIfIndex_Object = MibTableColumn
svcTlsRvplsIpIfIndex = _SvcTlsRvplsIpIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 3, 1, 98),
    _SvcTlsRvplsIpIfIndex_Type()
)
svcTlsRvplsIpIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsRvplsIpIfIndex.setStatus("current")
_TlsFdbInfoTable_Object = MibTable
tlsFdbInfoTable = _TlsFdbInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4)
)
if mibBuilder.loadTexts:
    tlsFdbInfoTable.setStatus("current")
_TlsFdbInfoEntry_Object = MibTableRow
tlsFdbInfoEntry = _TlsFdbInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1)
)
tlsFdbInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsFdbMacAddr"),
)
if mibBuilder.loadTexts:
    tlsFdbInfoEntry.setStatus("current")
_TlsFdbMacAddr_Type = MacAddress
_TlsFdbMacAddr_Object = MibTableColumn
tlsFdbMacAddr = _TlsFdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 1),
    _TlsFdbMacAddr_Type()
)
tlsFdbMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbMacAddr.setStatus("current")
_TlsFdbRowStatus_Type = RowStatus
_TlsFdbRowStatus_Object = MibTableColumn
tlsFdbRowStatus = _TlsFdbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 2),
    _TlsFdbRowStatus_Type()
)
tlsFdbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbRowStatus.setStatus("current")


class _TlsFdbType_Type(Integer32):
    """Custom type tlsFdbType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("learned", 2),
          ("oam", 3),
          ("dhcp", 4),
          ("host", 5),
          ("intf", 6),
          ("spb", 7),
          ("condStatic", 8),
          ("bgpEvpn", 9),
          ("bgpEvpnStatic", 10),
          ("bgpEvpnDupDet", 11),
          ("ethCfm", 12))
    )


_TlsFdbType_Type.__name__ = "Integer32"
_TlsFdbType_Object = MibTableColumn
tlsFdbType = _TlsFdbType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 3),
    _TlsFdbType_Type()
)
tlsFdbType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbType.setStatus("current")


class _TlsFdbLocale_Type(Integer32):
    """Custom type tlsFdbLocale based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("sdp", 2),
          ("cpm", 3),
          ("endpoint", 4),
          ("vxlan", 5),
          ("evpnMpls", 6),
          ("blackhole", 7))
    )


_TlsFdbLocale_Type.__name__ = "Integer32"
_TlsFdbLocale_Object = MibTableColumn
tlsFdbLocale = _TlsFdbLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 4),
    _TlsFdbLocale_Type()
)
tlsFdbLocale.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbLocale.setStatus("current")
_TlsFdbPortId_Type = TmnxPortID
_TlsFdbPortId_Object = MibTableColumn
tlsFdbPortId = _TlsFdbPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 5),
    _TlsFdbPortId_Type()
)
tlsFdbPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbPortId.setStatus("current")
_TlsFdbEncapValue_Type = TmnxEncapVal
_TlsFdbEncapValue_Object = MibTableColumn
tlsFdbEncapValue = _TlsFdbEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 6),
    _TlsFdbEncapValue_Type()
)
tlsFdbEncapValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbEncapValue.setStatus("current")
_TlsFdbSdpId_Type = SdpId
_TlsFdbSdpId_Object = MibTableColumn
tlsFdbSdpId = _TlsFdbSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 7),
    _TlsFdbSdpId_Type()
)
tlsFdbSdpId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbSdpId.setStatus("current")
_TlsFdbVcId_Type = Unsigned32
_TlsFdbVcId_Object = MibTableColumn
tlsFdbVcId = _TlsFdbVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 8),
    _TlsFdbVcId_Type()
)
tlsFdbVcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbVcId.setStatus("current")
_TlsFdbVpnId_Type = VpnId
_TlsFdbVpnId_Object = MibTableColumn
tlsFdbVpnId = _TlsFdbVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 9),
    _TlsFdbVpnId_Type()
)
tlsFdbVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbVpnId.setStatus("current")
_TlsFdbCustId_Type = TmnxCustId
_TlsFdbCustId_Object = MibTableColumn
tlsFdbCustId = _TlsFdbCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 10),
    _TlsFdbCustId_Type()
)
tlsFdbCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbCustId.setStatus("current")
_TlsFdbLastStateChange_Type = TimeStamp
_TlsFdbLastStateChange_Object = MibTableColumn
tlsFdbLastStateChange = _TlsFdbLastStateChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 11),
    _TlsFdbLastStateChange_Type()
)
tlsFdbLastStateChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbLastStateChange.setStatus("current")
_TlsFdbProtected_Type = TruthValue
_TlsFdbProtected_Object = MibTableColumn
tlsFdbProtected = _TlsFdbProtected_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 12),
    _TlsFdbProtected_Type()
)
tlsFdbProtected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbProtected.setStatus("current")
_TlsFdbBackboneDstMac_Type = MacAddress
_TlsFdbBackboneDstMac_Object = MibTableColumn
tlsFdbBackboneDstMac = _TlsFdbBackboneDstMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 13),
    _TlsFdbBackboneDstMac_Type()
)
tlsFdbBackboneDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbBackboneDstMac.setStatus("current")
_TlsFdbNumIVplsMac_Type = Unsigned32
_TlsFdbNumIVplsMac_Object = MibTableColumn
tlsFdbNumIVplsMac = _TlsFdbNumIVplsMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 14),
    _TlsFdbNumIVplsMac_Type()
)
tlsFdbNumIVplsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbNumIVplsMac.setStatus("current")


class _TlsFdbEndPointName_Type(TNamedItemOrEmpty):
    """Custom type tlsFdbEndPointName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TlsFdbEndPointName_Type.__name__ = "TNamedItemOrEmpty"
_TlsFdbEndPointName_Object = MibTableColumn
tlsFdbEndPointName = _TlsFdbEndPointName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 15),
    _TlsFdbEndPointName_Type()
)
tlsFdbEndPointName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsFdbEndPointName.setStatus("current")
_TlsFdbEPMacOperSdpId_Type = SdpId
_TlsFdbEPMacOperSdpId_Object = MibTableColumn
tlsFdbEPMacOperSdpId = _TlsFdbEPMacOperSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 16),
    _TlsFdbEPMacOperSdpId_Type()
)
tlsFdbEPMacOperSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEPMacOperSdpId.setStatus("current")
_TlsFdbEPMacOperVcId_Type = Unsigned32
_TlsFdbEPMacOperVcId_Object = MibTableColumn
tlsFdbEPMacOperVcId = _TlsFdbEPMacOperVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 17),
    _TlsFdbEPMacOperVcId_Type()
)
tlsFdbEPMacOperVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEPMacOperVcId.setStatus("current")
_TlsFdbPbbNumEpipes_Type = Unsigned32
_TlsFdbPbbNumEpipes_Object = MibTableColumn
tlsFdbPbbNumEpipes = _TlsFdbPbbNumEpipes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 18),
    _TlsFdbPbbNumEpipes_Type()
)
tlsFdbPbbNumEpipes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbPbbNumEpipes.setStatus("current")
_TlsFdbVTEPAddrType_Type = InetAddressType
_TlsFdbVTEPAddrType_Object = MibTableColumn
tlsFdbVTEPAddrType = _TlsFdbVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 19),
    _TlsFdbVTEPAddrType_Type()
)
tlsFdbVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbVTEPAddrType.setStatus("current")


class _TlsFdbVTEPAddr_Type(InetAddress):
    """Custom type tlsFdbVTEPAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsFdbVTEPAddr_Type.__name__ = "InetAddress"
_TlsFdbVTEPAddr_Object = MibTableColumn
tlsFdbVTEPAddr = _TlsFdbVTEPAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 20),
    _TlsFdbVTEPAddr_Type()
)
tlsFdbVTEPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbVTEPAddr.setStatus("current")
_TlsFdbVNI_Type = Unsigned32
_TlsFdbVNI_Object = MibTableColumn
tlsFdbVNI = _TlsFdbVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 21),
    _TlsFdbVNI_Type()
)
tlsFdbVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbVNI.setStatus("current")
_TlsFdbEvpnMplsTEPAddrType_Type = InetAddressType
_TlsFdbEvpnMplsTEPAddrType_Object = MibTableColumn
tlsFdbEvpnMplsTEPAddrType = _TlsFdbEvpnMplsTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 22),
    _TlsFdbEvpnMplsTEPAddrType_Type()
)
tlsFdbEvpnMplsTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsTEPAddrType.setStatus("current")


class _TlsFdbEvpnMplsTEPAddr_Type(InetAddress):
    """Custom type tlsFdbEvpnMplsTEPAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsFdbEvpnMplsTEPAddr_Type.__name__ = "InetAddress"
_TlsFdbEvpnMplsTEPAddr_Object = MibTableColumn
tlsFdbEvpnMplsTEPAddr = _TlsFdbEvpnMplsTEPAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 23),
    _TlsFdbEvpnMplsTEPAddr_Type()
)
tlsFdbEvpnMplsTEPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsTEPAddr.setStatus("current")
_TlsFdbEvpnMplsLabel_Type = Unsigned32
_TlsFdbEvpnMplsLabel_Object = MibTableColumn
tlsFdbEvpnMplsLabel = _TlsFdbEvpnMplsLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 24),
    _TlsFdbEvpnMplsLabel_Type()
)
tlsFdbEvpnMplsLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsLabel.setStatus("current")


class _TlsFdbEvpnMplsEthSegId_Type(OctetString):
    """Custom type tlsFdbEvpnMplsEthSegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )
    fixed_length = 10


_TlsFdbEvpnMplsEthSegId_Type.__name__ = "OctetString"
_TlsFdbEvpnMplsEthSegId_Object = MibTableColumn
tlsFdbEvpnMplsEthSegId = _TlsFdbEvpnMplsEthSegId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 25),
    _TlsFdbEvpnMplsEthSegId_Type()
)
tlsFdbEvpnMplsEthSegId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsEthSegId.setStatus("current")
_TlsFdbIsEvpnEtreeLeaf_Type = TruthValue
_TlsFdbIsEvpnEtreeLeaf_Object = MibTableColumn
tlsFdbIsEvpnEtreeLeaf = _TlsFdbIsEvpnEtreeLeaf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 26),
    _TlsFdbIsEvpnEtreeLeaf_Type()
)
tlsFdbIsEvpnEtreeLeaf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbIsEvpnEtreeLeaf.setStatus("current")
_TlsFdbCmplxMap_Type = Counter64
_TlsFdbCmplxMap_Object = MibTableColumn
tlsFdbCmplxMap = _TlsFdbCmplxMap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 27),
    _TlsFdbCmplxMap_Type()
)
tlsFdbCmplxMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbCmplxMap.setStatus("current")
_TlsFdbVxlanInstance_Type = Integer32
_TlsFdbVxlanInstance_Object = MibTableColumn
tlsFdbVxlanInstance = _TlsFdbVxlanInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 28),
    _TlsFdbVxlanInstance_Type()
)
tlsFdbVxlanInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbVxlanInstance.setStatus("current")
_TlsFdbEvpnMplsTnlId_Type = Unsigned32
_TlsFdbEvpnMplsTnlId_Object = MibTableColumn
tlsFdbEvpnMplsTnlId = _TlsFdbEvpnMplsTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 29),
    _TlsFdbEvpnMplsTnlId_Type()
)
tlsFdbEvpnMplsTnlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsTnlId.setStatus("current")
_TlsFdbEvpnMplsTnlResType_Type = TmnxSvcEvpnMplsTransportType
_TlsFdbEvpnMplsTnlResType_Object = MibTableColumn
tlsFdbEvpnMplsTnlResType = _TlsFdbEvpnMplsTnlResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 30),
    _TlsFdbEvpnMplsTnlResType_Type()
)
tlsFdbEvpnMplsTnlResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsTnlResType.setStatus("current")
_TlsFdbEvpnMplsInstance_Type = Integer32
_TlsFdbEvpnMplsInstance_Object = MibTableColumn
tlsFdbEvpnMplsInstance = _TlsFdbEvpnMplsInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 4, 1, 31),
    _TlsFdbEvpnMplsInstance_Type()
)
tlsFdbEvpnMplsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsFdbEvpnMplsInstance.setStatus("current")
_IesIfTable_Object = MibTable
iesIfTable = _IesIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5)
)
if mibBuilder.loadTexts:
    iesIfTable.setStatus("current")
_IesIfEntry_Object = MibTableRow
iesIfEntry = _IesIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1)
)
iesIfEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    iesIfEntry.setStatus("current")
_IesIfIndex_Type = InterfaceIndex
_IesIfIndex_Object = MibTableColumn
iesIfIndex = _IesIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 1),
    _IesIfIndex_Type()
)
iesIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfIndex.setStatus("current")
_IesIfRowStatus_Type = RowStatus
_IesIfRowStatus_Object = MibTableColumn
iesIfRowStatus = _IesIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 2),
    _IesIfRowStatus_Type()
)
iesIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfRowStatus.setStatus("current")
_IesIfName_Type = TNamedItem
_IesIfName_Object = MibTableColumn
iesIfName = _IesIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 3),
    _IesIfName_Type()
)
iesIfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfName.setStatus("current")


class _IesIfDescription_Type(TItemLongDescription):
    """Custom type iesIfDescription based on TItemLongDescription"""
    defaultValue = OctetString("")


_IesIfDescription_Type.__name__ = "TItemLongDescription"
_IesIfDescription_Object = MibTableColumn
iesIfDescription = _IesIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 4),
    _IesIfDescription_Type()
)
iesIfDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDescription.setStatus("current")


class _IesIfAdminStatus_Type(ServiceAdminStatus):
    """Custom type iesIfAdminStatus based on ServiceAdminStatus"""
    defaultValue = 1


_IesIfAdminStatus_Type.__name__ = "ServiceAdminStatus"
_IesIfAdminStatus_Object = MibTableColumn
iesIfAdminStatus = _IesIfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 5),
    _IesIfAdminStatus_Type()
)
iesIfAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfAdminStatus.setStatus("current")
_IesIfOperStatus_Type = ServiceOperStatus
_IesIfOperStatus_Object = MibTableColumn
iesIfOperStatus = _IesIfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 6),
    _IesIfOperStatus_Type()
)
iesIfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfOperStatus.setStatus("current")
_IesIfLastMgmtChange_Type = TimeStamp
_IesIfLastMgmtChange_Object = MibTableColumn
iesIfLastMgmtChange = _IesIfLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 7),
    _IesIfLastMgmtChange_Type()
)
iesIfLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfLastMgmtChange.setStatus("current")
_IesIfVpnId_Type = VpnId
_IesIfVpnId_Object = MibTableColumn
iesIfVpnId = _IesIfVpnId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 8),
    _IesIfVpnId_Type()
)
iesIfVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfVpnId.setStatus("obsolete")
_IesIfCustId_Type = TmnxCustId
_IesIfCustId_Object = MibTableColumn
iesIfCustId = _IesIfCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 9),
    _IesIfCustId_Type()
)
iesIfCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfCustId.setStatus("current")
_IesIfLoopback_Type = TruthValue
_IesIfLoopback_Object = MibTableColumn
iesIfLoopback = _IesIfLoopback_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 10),
    _IesIfLoopback_Type()
)
iesIfLoopback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfLoopback.setStatus("current")
_IesIfLastStatusChange_Type = TimeStamp
_IesIfLastStatusChange_Object = MibTableColumn
iesIfLastStatusChange = _IesIfLastStatusChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 11),
    _IesIfLastStatusChange_Type()
)
iesIfLastStatusChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfLastStatusChange.setStatus("current")


class _IesIfType_Type(Integer32):
    """Custom type iesIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("service", 1),
          ("subscriber", 2),
          ("group", 3),
          ("redundant", 4),
          ("cem", 5),
          ("ipsec", 6),
          ("ipMirror", 7),
          ("video", 8),
          ("reserved9", 9),
          ("aarp", 10),
          ("aa", 11))
    )


_IesIfType_Type.__name__ = "Integer32"
_IesIfType_Object = MibTableColumn
iesIfType = _IesIfType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 12),
    _IesIfType_Type()
)
iesIfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfType.setStatus("current")


class _IesIfParentIf_Type(InterfaceIndexOrZero):
    """Custom type iesIfParentIf based on InterfaceIndexOrZero"""
    defaultValue = 0


_IesIfParentIf_Type.__name__ = "InterfaceIndexOrZero"
_IesIfParentIf_Object = MibTableColumn
iesIfParentIf = _IesIfParentIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 13),
    _IesIfParentIf_Type()
)
iesIfParentIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfParentIf.setStatus("current")


class _IesIfShcvSource_Type(TmnxSubShcvSrcIpOrigin):
    """Custom type iesIfShcvSource based on TmnxSubShcvSrcIpOrigin"""
    defaultValue = 1


_IesIfShcvSource_Type.__name__ = "TmnxSubShcvSrcIpOrigin"
_IesIfShcvSource_Object = MibTableColumn
iesIfShcvSource = _IesIfShcvSource_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 14),
    _IesIfShcvSource_Type()
)
iesIfShcvSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvSource.setStatus("current")


class _IesIfShcvAction_Type(TmnxSubShcvAction):
    """Custom type iesIfShcvAction based on TmnxSubShcvAction"""
    defaultValue = 1


_IesIfShcvAction_Type.__name__ = "TmnxSubShcvAction"
_IesIfShcvAction_Object = MibTableColumn
iesIfShcvAction = _IesIfShcvAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 15),
    _IesIfShcvAction_Type()
)
iesIfShcvAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvAction.setStatus("current")


class _IesIfShcvInterval_Type(TmnxSubShcvInterval):
    """Custom type iesIfShcvInterval based on TmnxSubShcvInterval"""
    defaultValue = 0


_IesIfShcvInterval_Type.__name__ = "TmnxSubShcvInterval"
_IesIfShcvInterval_Object = MibTableColumn
iesIfShcvInterval = _IesIfShcvInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 16),
    _IesIfShcvInterval_Type()
)
iesIfShcvInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvInterval.setStatus("current")
if mibBuilder.loadTexts:
    iesIfShcvInterval.setUnits("minutes")


class _IesIfFwdServId_Type(TmnxServId):
    """Custom type iesIfFwdServId based on TmnxServId"""
    defaultValue = 0


_IesIfFwdServId_Type.__name__ = "TmnxServId"
_IesIfFwdServId_Object = MibTableColumn
iesIfFwdServId = _IesIfFwdServId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 17),
    _IesIfFwdServId_Type()
)
iesIfFwdServId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfFwdServId.setStatus("current")


class _IesIfFwdSubIf_Type(InterfaceIndexOrZero):
    """Custom type iesIfFwdSubIf based on InterfaceIndexOrZero"""
    defaultValue = 0


_IesIfFwdSubIf_Type.__name__ = "InterfaceIndexOrZero"
_IesIfFwdSubIf_Object = MibTableColumn
iesIfFwdSubIf = _IesIfFwdSubIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 18),
    _IesIfFwdSubIf_Type()
)
iesIfFwdSubIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfFwdSubIf.setStatus("current")
_IesIfPrivateRetailSubnets_Type = TruthValue
_IesIfPrivateRetailSubnets_Object = MibTableColumn
iesIfPrivateRetailSubnets = _IesIfPrivateRetailSubnets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 19),
    _IesIfPrivateRetailSubnets_Type()
)
iesIfPrivateRetailSubnets.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfPrivateRetailSubnets.setStatus("current")


class _IesIfDelegatedPrefixLen_Type(Unsigned32):
    """Custom type iesIfDelegatedPrefixLen based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(48, 64),
    )


_IesIfDelegatedPrefixLen_Type.__name__ = "Unsigned32"
_IesIfDelegatedPrefixLen_Object = MibTableColumn
iesIfDelegatedPrefixLen = _IesIfDelegatedPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 20),
    _IesIfDelegatedPrefixLen_Type()
)
iesIfDelegatedPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDelegatedPrefixLen.setStatus("current")


class _IesIfLns_Type(TruthValue):
    """Custom type iesIfLns based on TruthValue"""
    defaultValue = 2


_IesIfLns_Type.__name__ = "TruthValue"
_IesIfLns_Object = MibTableColumn
iesIfLns = _IesIfLns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 21),
    _IesIfLns_Type()
)
iesIfLns.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfLns.setStatus("current")


class _IesIfVplsName_Type(TLNamedItemOrEmpty):
    """Custom type iesIfVplsName based on TLNamedItemOrEmpty"""
    defaultHexValue = ""


_IesIfVplsName_Type.__name__ = "TLNamedItemOrEmpty"
_IesIfVplsName_Object = MibTableColumn
iesIfVplsName = _IesIfVplsName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 22),
    _IesIfVplsName_Type()
)
iesIfVplsName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfVplsName.setStatus("current")
_IesIfVplsStatus_Type = ServiceOperStatus
_IesIfVplsStatus_Object = MibTableColumn
iesIfVplsStatus = _IesIfVplsStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 23),
    _IesIfVplsStatus_Type()
)
iesIfVplsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfVplsStatus.setStatus("current")
_IesIfVplsFailedReason_Type = DisplayString
_IesIfVplsFailedReason_Object = MibTableColumn
iesIfVplsFailedReason = _IesIfVplsFailedReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 24),
    _IesIfVplsFailedReason_Type()
)
iesIfVplsFailedReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfVplsFailedReason.setStatus("current")


class _IesIfShcvRetryTimeout_Type(TmnxSubShcvRetryTimeout):
    """Custom type iesIfShcvRetryTimeout based on TmnxSubShcvRetryTimeout"""
    defaultValue = 10


_IesIfShcvRetryTimeout_Type.__name__ = "TmnxSubShcvRetryTimeout"
_IesIfShcvRetryTimeout_Object = MibTableColumn
iesIfShcvRetryTimeout = _IesIfShcvRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 25),
    _IesIfShcvRetryTimeout_Type()
)
iesIfShcvRetryTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvRetryTimeout.setStatus("current")
if mibBuilder.loadTexts:
    iesIfShcvRetryTimeout.setUnits("seconds")


class _IesIfShcvRetryCount_Type(TmnxSubShcvRetryCount):
    """Custom type iesIfShcvRetryCount based on TmnxSubShcvRetryCount"""
    defaultValue = 2


_IesIfShcvRetryCount_Type.__name__ = "TmnxSubShcvRetryCount"
_IesIfShcvRetryCount_Object = MibTableColumn
iesIfShcvRetryCount = _IesIfShcvRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 26),
    _IesIfShcvRetryCount_Type()
)
iesIfShcvRetryCount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvRetryCount.setStatus("current")


class _IesIfSapEgressQosId_Type(TPolicyID):
    """Custom type iesIfSapEgressQosId based on TPolicyID"""
    defaultValue = 0

    subtypeSpec = TPolicyID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IesIfSapEgressQosId_Type.__name__ = "TPolicyID"
_IesIfSapEgressQosId_Object = MibTableColumn
iesIfSapEgressQosId = _IesIfSapEgressQosId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 27),
    _IesIfSapEgressQosId_Type()
)
iesIfSapEgressQosId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfSapEgressQosId.setStatus("current")


class _IesIfDefaultPrimaryDnsIPv4Addr_Type(InetAddressIPv4):
    """Custom type iesIfDefaultPrimaryDnsIPv4Addr based on InetAddressIPv4"""
    defaultHexValue = "00000000"


_IesIfDefaultPrimaryDnsIPv4Addr_Type.__name__ = "InetAddressIPv4"
_IesIfDefaultPrimaryDnsIPv4Addr_Object = MibTableColumn
iesIfDefaultPrimaryDnsIPv4Addr = _IesIfDefaultPrimaryDnsIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 28),
    _IesIfDefaultPrimaryDnsIPv4Addr_Type()
)
iesIfDefaultPrimaryDnsIPv4Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDefaultPrimaryDnsIPv4Addr.setStatus("current")


class _IesIfDefaultSecondaryDnsIPv4Addr_Type(InetAddressIPv4):
    """Custom type iesIfDefaultSecondaryDnsIPv4Addr based on InetAddressIPv4"""
    defaultHexValue = "00000000"


_IesIfDefaultSecondaryDnsIPv4Addr_Type.__name__ = "InetAddressIPv4"
_IesIfDefaultSecondaryDnsIPv4Addr_Object = MibTableColumn
iesIfDefaultSecondaryDnsIPv4Addr = _IesIfDefaultSecondaryDnsIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 29),
    _IesIfDefaultSecondaryDnsIPv4Addr_Type()
)
iesIfDefaultSecondaryDnsIPv4Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDefaultSecondaryDnsIPv4Addr.setStatus("current")


class _IesIfDefaultPrimaryDnsIPv6Addr_Type(InetAddressIPv6):
    """Custom type iesIfDefaultPrimaryDnsIPv6Addr based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_IesIfDefaultPrimaryDnsIPv6Addr_Type.__name__ = "InetAddressIPv6"
_IesIfDefaultPrimaryDnsIPv6Addr_Object = MibTableColumn
iesIfDefaultPrimaryDnsIPv6Addr = _IesIfDefaultPrimaryDnsIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 30),
    _IesIfDefaultPrimaryDnsIPv6Addr_Type()
)
iesIfDefaultPrimaryDnsIPv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDefaultPrimaryDnsIPv6Addr.setStatus("current")


class _IesIfDefaultSecondaryDnsIPv6Addr_Type(InetAddressIPv6):
    """Custom type iesIfDefaultSecondaryDnsIPv6Addr based on InetAddressIPv6"""
    defaultHexValue = "00000000000000000000000000000000"


_IesIfDefaultSecondaryDnsIPv6Addr_Type.__name__ = "InetAddressIPv6"
_IesIfDefaultSecondaryDnsIPv6Addr_Object = MibTableColumn
iesIfDefaultSecondaryDnsIPv6Addr = _IesIfDefaultSecondaryDnsIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 31),
    _IesIfDefaultSecondaryDnsIPv6Addr_Type()
)
iesIfDefaultSecondaryDnsIPv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfDefaultSecondaryDnsIPv6Addr.setStatus("current")


class _IesIfIPv6ConfigAllowed_Type(TruthValue):
    """Custom type iesIfIPv6ConfigAllowed based on TruthValue"""
    defaultValue = 2


_IesIfIPv6ConfigAllowed_Type.__name__ = "TruthValue"
_IesIfIPv6ConfigAllowed_Object = MibTableColumn
iesIfIPv6ConfigAllowed = _IesIfIPv6ConfigAllowed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 32),
    _IesIfIPv6ConfigAllowed_Type()
)
iesIfIPv6ConfigAllowed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6ConfigAllowed.setStatus("current")


class _IesIfSrrpRoutingEnabled_Type(TruthValue):
    """Custom type iesIfSrrpRoutingEnabled based on TruthValue"""
    defaultValue = 2


_IesIfSrrpRoutingEnabled_Type.__name__ = "TruthValue"
_IesIfSrrpRoutingEnabled_Object = MibTableColumn
iesIfSrrpRoutingEnabled = _IesIfSrrpRoutingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 33),
    _IesIfSrrpRoutingEnabled_Type()
)
iesIfSrrpRoutingEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfSrrpRoutingEnabled.setStatus("current")


class _IesIfSrrpRoutingHoldTime_Type(Unsigned32):
    """Custom type iesIfSrrpRoutingHoldTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 50),
    )


_IesIfSrrpRoutingHoldTime_Type.__name__ = "Unsigned32"
_IesIfSrrpRoutingHoldTime_Object = MibTableColumn
iesIfSrrpRoutingHoldTime = _IesIfSrrpRoutingHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 34),
    _IesIfSrrpRoutingHoldTime_Type()
)
iesIfSrrpRoutingHoldTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfSrrpRoutingHoldTime.setStatus("current")


class _IesIfMonitorOperGrp_Type(TNamedItemOrEmpty):
    """Custom type iesIfMonitorOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesIfMonitorOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_IesIfMonitorOperGrp_Object = MibTableColumn
iesIfMonitorOperGrp = _IesIfMonitorOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 35),
    _IesIfMonitorOperGrp_Type()
)
iesIfMonitorOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfMonitorOperGrp.setStatus("current")


class _IesIfAllowUnmatchingSubnets_Type(TruthValue):
    """Custom type iesIfAllowUnmatchingSubnets based on TruthValue"""
    defaultValue = 2


_IesIfAllowUnmatchingSubnets_Type.__name__ = "TruthValue"
_IesIfAllowUnmatchingSubnets_Object = MibTableColumn
iesIfAllowUnmatchingSubnets = _IesIfAllowUnmatchingSubnets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 36),
    _IesIfAllowUnmatchingSubnets_Type()
)
iesIfAllowUnmatchingSubnets.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfAllowUnmatchingSubnets.setStatus("current")


class _IesIfGroupInterfaceType_Type(Integer32):
    """Custom type iesIfGroupInterfaceType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("plain", 1),
          ("lns", 2),
          ("softGre", 3),
          ("gtp", 4),
          ("bonding", 5))
    )


_IesIfGroupInterfaceType_Type.__name__ = "Integer32"
_IesIfGroupInterfaceType_Object = MibTableColumn
iesIfGroupInterfaceType = _IesIfGroupInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 37),
    _IesIfGroupInterfaceType_Type()
)
iesIfGroupInterfaceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfGroupInterfaceType.setStatus("current")


class _IesIfShcvFamily_Type(Integer32):
    """Custom type iesIfShcvFamily based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("both", 0),
          ("ipv4", 1),
          ("ipv6", 2))
    )


_IesIfShcvFamily_Type.__name__ = "Integer32"
_IesIfShcvFamily_Object = MibTableColumn
iesIfShcvFamily = _IesIfShcvFamily_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 38),
    _IesIfShcvFamily_Type()
)
iesIfShcvFamily.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvFamily.setStatus("current")


class _IesIfIPv6IpoeBridgedModeEnabled_Type(TruthValue):
    """Custom type iesIfIPv6IpoeBridgedModeEnabled based on TruthValue"""
    defaultValue = 2


_IesIfIPv6IpoeBridgedModeEnabled_Type.__name__ = "TruthValue"
_IesIfIPv6IpoeBridgedModeEnabled_Object = MibTableColumn
iesIfIPv6IpoeBridgedModeEnabled = _IesIfIPv6IpoeBridgedModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 39),
    _IesIfIPv6IpoeBridgedModeEnabled_Type()
)
iesIfIPv6IpoeBridgedModeEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6IpoeBridgedModeEnabled.setStatus("current")


class _IesIfIPv6AllowUnmatchingPfxs_Type(TruthValue):
    """Custom type iesIfIPv6AllowUnmatchingPfxs based on TruthValue"""
    defaultValue = 2


_IesIfIPv6AllowUnmatchingPfxs_Type.__name__ = "TruthValue"
_IesIfIPv6AllowUnmatchingPfxs_Object = MibTableColumn
iesIfIPv6AllowUnmatchingPfxs = _IesIfIPv6AllowUnmatchingPfxs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 40),
    _IesIfIPv6AllowUnmatchingPfxs_Type()
)
iesIfIPv6AllowUnmatchingPfxs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6AllowUnmatchingPfxs.setStatus("current")


class _IesIfMcastNetDomainEgrIfCon_Type(Integer32):
    """Custom type iesIfMcastNetDomainEgrIfCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 1),
          ("notAvailable", 2),
          ("consistent", 3),
          ("inconsistent", 4))
    )


_IesIfMcastNetDomainEgrIfCon_Type.__name__ = "Integer32"
_IesIfMcastNetDomainEgrIfCon_Object = MibTableColumn
iesIfMcastNetDomainEgrIfCon = _IesIfMcastNetDomainEgrIfCon_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 41),
    _IesIfMcastNetDomainEgrIfCon_Type()
)
iesIfMcastNetDomainEgrIfCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfMcastNetDomainEgrIfCon.setStatus("current")


class _IesIfIPv6AllowMultiWanAddr_Type(TruthValue):
    """Custom type iesIfIPv6AllowMultiWanAddr based on TruthValue"""
    defaultValue = 2


_IesIfIPv6AllowMultiWanAddr_Type.__name__ = "TruthValue"
_IesIfIPv6AllowMultiWanAddr_Object = MibTableColumn
iesIfIPv6AllowMultiWanAddr = _IesIfIPv6AllowMultiWanAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 42),
    _IesIfIPv6AllowMultiWanAddr_Type()
)
iesIfIPv6AllowMultiWanAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6AllowMultiWanAddr.setStatus("current")


class _IesIfIPv6Dhcp6OverrideSlaac_Type(TruthValue):
    """Custom type iesIfIPv6Dhcp6OverrideSlaac based on TruthValue"""
    defaultValue = 2


_IesIfIPv6Dhcp6OverrideSlaac_Type.__name__ = "TruthValue"
_IesIfIPv6Dhcp6OverrideSlaac_Object = MibTableColumn
iesIfIPv6Dhcp6OverrideSlaac = _IesIfIPv6Dhcp6OverrideSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 43),
    _IesIfIPv6Dhcp6OverrideSlaac_Type()
)
iesIfIPv6Dhcp6OverrideSlaac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6Dhcp6OverrideSlaac.setStatus("current")


class _IesIfCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type iesIfCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_IesIfCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_IesIfCreationOrigin_Object = MibTableColumn
iesIfCreationOrigin = _IesIfCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 44),
    _IesIfCreationOrigin_Type()
)
iesIfCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfCreationOrigin.setStatus("current")


class _IesIfIPv6Dhcp6PDManagedRoute_Type(TruthValue):
    """Custom type iesIfIPv6Dhcp6PDManagedRoute based on TruthValue"""
    defaultValue = 2


_IesIfIPv6Dhcp6PDManagedRoute_Type.__name__ = "TruthValue"
_IesIfIPv6Dhcp6PDManagedRoute_Object = MibTableColumn
iesIfIPv6Dhcp6PDManagedRoute = _IesIfIPv6Dhcp6PDManagedRoute_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 45),
    _IesIfIPv6Dhcp6PDManagedRoute_Type()
)
iesIfIPv6Dhcp6PDManagedRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6Dhcp6PDManagedRoute.setStatus("current")


class _IesIfVplsEvpnTunnel_Type(TruthValue):
    """Custom type iesIfVplsEvpnTunnel based on TruthValue"""
    defaultValue = 2


_IesIfVplsEvpnTunnel_Type.__name__ = "TruthValue"
_IesIfVplsEvpnTunnel_Object = MibTableColumn
iesIfVplsEvpnTunnel = _IesIfVplsEvpnTunnel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 46),
    _IesIfVplsEvpnTunnel_Type()
)
iesIfVplsEvpnTunnel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfVplsEvpnTunnel.setStatus("current")


class _IesIfExportHostRoutes_Type(TruthValue):
    """Custom type iesIfExportHostRoutes based on TruthValue"""
    defaultValue = 2


_IesIfExportHostRoutes_Type.__name__ = "TruthValue"
_IesIfExportHostRoutes_Object = MibTableColumn
iesIfExportHostRoutes = _IesIfExportHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 47),
    _IesIfExportHostRoutes_Type()
)
iesIfExportHostRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfExportHostRoutes.setStatus("current")


class _IesIfSuppressAaSub_Type(TmnxEnabledDisabled):
    """Custom type iesIfSuppressAaSub based on TmnxEnabledDisabled"""
    defaultValue = 2


_IesIfSuppressAaSub_Type.__name__ = "TmnxEnabledDisabled"
_IesIfSuppressAaSub_Object = MibTableColumn
iesIfSuppressAaSub = _IesIfSuppressAaSub_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 48),
    _IesIfSuppressAaSub_Type()
)
iesIfSuppressAaSub.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfSuppressAaSub.setStatus("current")


class _IesIfShcvPolicy_Type(TNamedItemOrEmpty):
    """Custom type iesIfShcvPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesIfShcvPolicy_Type.__name__ = "TNamedItemOrEmpty"
_IesIfShcvPolicy_Object = MibTableColumn
iesIfShcvPolicy = _IesIfShcvPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 49),
    _IesIfShcvPolicy_Type()
)
iesIfShcvPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvPolicy.setStatus("current")


class _IesIfShcvPolicyIpv4_Type(TNamedItemOrEmpty):
    """Custom type iesIfShcvPolicyIpv4 based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesIfShcvPolicyIpv4_Type.__name__ = "TNamedItemOrEmpty"
_IesIfShcvPolicyIpv4_Object = MibTableColumn
iesIfShcvPolicyIpv4 = _IesIfShcvPolicyIpv4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 50),
    _IesIfShcvPolicyIpv4_Type()
)
iesIfShcvPolicyIpv4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvPolicyIpv4.setStatus("current")


class _IesIfShcvPolicyIpv6_Type(TNamedItemOrEmpty):
    """Custom type iesIfShcvPolicyIpv6 based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesIfShcvPolicyIpv6_Type.__name__ = "TNamedItemOrEmpty"
_IesIfShcvPolicyIpv6_Object = MibTableColumn
iesIfShcvPolicyIpv6 = _IesIfShcvPolicyIpv6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 51),
    _IesIfShcvPolicyIpv6_Type()
)
iesIfShcvPolicyIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfShcvPolicyIpv6.setStatus("current")


class _IesIfIpv6Dhcp6UserIdent_Type(Integer32):
    """Custom type iesIfIpv6Dhcp6UserIdent based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mac", 1),
          ("macInterfaceId", 2))
    )


_IesIfIpv6Dhcp6UserIdent_Type.__name__ = "Integer32"
_IesIfIpv6Dhcp6UserIdent_Object = MibTableColumn
iesIfIpv6Dhcp6UserIdent = _IesIfIpv6Dhcp6UserIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 52),
    _IesIfIpv6Dhcp6UserIdent_Type()
)
iesIfIpv6Dhcp6UserIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIpv6Dhcp6UserIdent.setStatus("current")


class _IesIfIPv6Dhcp6PDManagedRouteNH_Type(Integer32):
    """Custom type iesIfIPv6Dhcp6PDManagedRouteNH based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_IesIfIPv6Dhcp6PDManagedRouteNH_Type.__name__ = "Integer32"
_IesIfIPv6Dhcp6PDManagedRouteNH_Object = MibTableColumn
iesIfIPv6Dhcp6PDManagedRouteNH = _IesIfIPv6Dhcp6PDManagedRouteNH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 53),
    _IesIfIPv6Dhcp6PDManagedRouteNH_Type()
)
iesIfIPv6Dhcp6PDManagedRouteNH.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6Dhcp6PDManagedRouteNH.setStatus("current")


class _IesIfIPv6WanMode_Type(Integer32):
    """Custom type iesIfIPv6WanMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mode64", 1),
          ("mode128", 2))
    )


_IesIfIPv6WanMode_Type.__name__ = "Integer32"
_IesIfIPv6WanMode_Object = MibTableColumn
iesIfIPv6WanMode = _IesIfIPv6WanMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 56),
    _IesIfIPv6WanMode_Type()
)
iesIfIPv6WanMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfIPv6WanMode.setStatus("current")


class _IesIfVplsEvpnTnlIp6GwAddrType_Type(Integer32):
    """Custom type iesIfVplsEvpnTnlIp6GwAddrType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ip", 0),
          ("mac", 1))
    )


_IesIfVplsEvpnTnlIp6GwAddrType_Type.__name__ = "Integer32"
_IesIfVplsEvpnTnlIp6GwAddrType_Object = MibTableColumn
iesIfVplsEvpnTnlIp6GwAddrType = _IesIfVplsEvpnTnlIp6GwAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 57),
    _IesIfVplsEvpnTnlIp6GwAddrType_Type()
)
iesIfVplsEvpnTnlIp6GwAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfVplsEvpnTnlIp6GwAddrType.setStatus("current")


class _IesIfVplsEvpnTnlSupBcastDomain_Type(TruthValue):
    """Custom type iesIfVplsEvpnTnlSupBcastDomain based on TruthValue"""
    defaultValue = 2


_IesIfVplsEvpnTnlSupBcastDomain_Type.__name__ = "TruthValue"
_IesIfVplsEvpnTnlSupBcastDomain_Object = MibTableColumn
iesIfVplsEvpnTnlSupBcastDomain = _IesIfVplsEvpnTnlSupBcastDomain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 5, 1, 58),
    _IesIfVplsEvpnTnlSupBcastDomain_Type()
)
iesIfVplsEvpnTnlSupBcastDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iesIfVplsEvpnTnlSupBcastDomain.setStatus("current")
_TlsShgInfoTable_Object = MibTable
tlsShgInfoTable = _TlsShgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6)
)
if mibBuilder.loadTexts:
    tlsShgInfoTable.setStatus("current")
_TlsShgInfoEntry_Object = MibTableRow
tlsShgInfoEntry = _TlsShgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1)
)
tlsShgInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (1, "TIMETRA-SERV-MIB", "tlsShgName"),
)
if mibBuilder.loadTexts:
    tlsShgInfoEntry.setStatus("current")
_TlsShgName_Type = TNamedItem
_TlsShgName_Object = MibTableColumn
tlsShgName = _TlsShgName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 1),
    _TlsShgName_Type()
)
tlsShgName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsShgName.setStatus("current")
_TlsShgRowStatus_Type = RowStatus
_TlsShgRowStatus_Object = MibTableColumn
tlsShgRowStatus = _TlsShgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 2),
    _TlsShgRowStatus_Type()
)
tlsShgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgRowStatus.setStatus("current")
_TlsShgCustId_Type = TmnxCustId
_TlsShgCustId_Object = MibTableColumn
tlsShgCustId = _TlsShgCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 3),
    _TlsShgCustId_Type()
)
tlsShgCustId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsShgCustId.setStatus("current")
_TlsShgInstanceId_Type = Unsigned32
_TlsShgInstanceId_Object = MibTableColumn
tlsShgInstanceId = _TlsShgInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 4),
    _TlsShgInstanceId_Type()
)
tlsShgInstanceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsShgInstanceId.setStatus("current")


class _TlsShgDescription_Type(ServObjDesc):
    """Custom type tlsShgDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_TlsShgDescription_Type.__name__ = "ServObjDesc"
_TlsShgDescription_Object = MibTableColumn
tlsShgDescription = _TlsShgDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 5),
    _TlsShgDescription_Type()
)
tlsShgDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgDescription.setStatus("current")
_TlsShgLastMgmtChange_Type = TimeStamp
_TlsShgLastMgmtChange_Object = MibTableColumn
tlsShgLastMgmtChange = _TlsShgLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 6),
    _TlsShgLastMgmtChange_Type()
)
tlsShgLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsShgLastMgmtChange.setStatus("current")


class _TlsShgResidential_Type(TruthValue):
    """Custom type tlsShgResidential based on TruthValue"""
    defaultValue = 2


_TlsShgResidential_Type.__name__ = "TruthValue"
_TlsShgResidential_Object = MibTableColumn
tlsShgResidential = _TlsShgResidential_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 7),
    _TlsShgResidential_Type()
)
tlsShgResidential.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgResidential.setStatus("current")


class _TlsShgRestProtSrcMac_Type(TruthValue):
    """Custom type tlsShgRestProtSrcMac based on TruthValue"""
    defaultValue = 2


_TlsShgRestProtSrcMac_Type.__name__ = "TruthValue"
_TlsShgRestProtSrcMac_Object = MibTableColumn
tlsShgRestProtSrcMac = _TlsShgRestProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 8),
    _TlsShgRestProtSrcMac_Type()
)
tlsShgRestProtSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgRestProtSrcMac.setStatus("current")


class _TlsShgRestUnprotDstMac_Type(TruthValue):
    """Custom type tlsShgRestUnprotDstMac based on TruthValue"""
    defaultValue = 2


_TlsShgRestUnprotDstMac_Type.__name__ = "TruthValue"
_TlsShgRestUnprotDstMac_Object = MibTableColumn
tlsShgRestUnprotDstMac = _TlsShgRestUnprotDstMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 9),
    _TlsShgRestUnprotDstMac_Type()
)
tlsShgRestUnprotDstMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgRestUnprotDstMac.setStatus("current")


class _TlsShgRestProtSrcMacAction_Type(Integer32):
    """Custom type tlsShgRestProtSrcMacAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("alarm-only", 2),
          ("discardFrame", 3))
    )


_TlsShgRestProtSrcMacAction_Type.__name__ = "Integer32"
_TlsShgRestProtSrcMacAction_Object = MibTableColumn
tlsShgRestProtSrcMacAction = _TlsShgRestProtSrcMacAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 10),
    _TlsShgRestProtSrcMacAction_Type()
)
tlsShgRestProtSrcMacAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgRestProtSrcMacAction.setStatus("current")
_TlsShgCreationOrigin_Type = TmnxCreateOrigin
_TlsShgCreationOrigin_Object = MibTableColumn
tlsShgCreationOrigin = _TlsShgCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 11),
    _TlsShgCreationOrigin_Type()
)
tlsShgCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsShgCreationOrigin.setStatus("current")
_TlsShgSiteName_Type = TNamedItemOrEmpty
_TlsShgSiteName_Object = MibTableColumn
tlsShgSiteName = _TlsShgSiteName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 12),
    _TlsShgSiteName_Type()
)
tlsShgSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsShgSiteName.setStatus("current")


class _TlsShgAutoLearnMacProtect_Type(TruthValue):
    """Custom type tlsShgAutoLearnMacProtect based on TruthValue"""
    defaultValue = 2


_TlsShgAutoLearnMacProtect_Type.__name__ = "TruthValue"
_TlsShgAutoLearnMacProtect_Object = MibTableColumn
tlsShgAutoLearnMacProtect = _TlsShgAutoLearnMacProtect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 13),
    _TlsShgAutoLearnMacProtect_Type()
)
tlsShgAutoLearnMacProtect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgAutoLearnMacProtect.setStatus("current")


class _TlsShgAutoLearnMacProtectExcList_Type(TNamedItemOrEmpty):
    """Custom type tlsShgAutoLearnMacProtectExcList based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TlsShgAutoLearnMacProtectExcList_Type.__name__ = "TNamedItemOrEmpty"
_TlsShgAutoLearnMacProtectExcList_Object = MibTableColumn
tlsShgAutoLearnMacProtectExcList = _TlsShgAutoLearnMacProtectExcList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 6, 1, 14),
    _TlsShgAutoLearnMacProtectExcList_Type()
)
tlsShgAutoLearnMacProtectExcList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsShgAutoLearnMacProtectExcList.setStatus("current")
_SvcApipeInfoTable_Object = MibTable
svcApipeInfoTable = _SvcApipeInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 7)
)
if mibBuilder.loadTexts:
    svcApipeInfoTable.setStatus("current")
_SvcApipeInfoEntry_Object = MibTableRow
svcApipeInfoEntry = _SvcApipeInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 7, 1)
)
svcApipeInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcApipeInfoEntry.setStatus("current")


class _SvcApipeInterworking_Type(Integer32):
    """Custom type svcApipeInterworking based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("frf-5", 2),
          ("frf-8-2-translate", 3))
    )


_SvcApipeInterworking_Type.__name__ = "Integer32"
_SvcApipeInterworking_Object = MibTableColumn
svcApipeInterworking = _SvcApipeInterworking_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 7, 1, 1),
    _SvcApipeInterworking_Type()
)
svcApipeInterworking.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcApipeInterworking.setStatus("current")


class _SvcApipeSignaledVllTypeOverride_Type(Integer32):
    """Custom type svcApipeSignaledVllTypeOverride based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("atmVcc", 8))
    )


_SvcApipeSignaledVllTypeOverride_Type.__name__ = "Integer32"
_SvcApipeSignaledVllTypeOverride_Object = MibTableColumn
svcApipeSignaledVllTypeOverride = _SvcApipeSignaledVllTypeOverride_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 7, 1, 2),
    _SvcApipeSignaledVllTypeOverride_Type()
)
svcApipeSignaledVllTypeOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcApipeSignaledVllTypeOverride.setStatus("current")
_TlsMFibInfoTable_Object = MibTable
tlsMFibInfoTable = _TlsMFibInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8)
)
if mibBuilder.loadTexts:
    tlsMFibInfoTable.setStatus("obsolete")
_TlsMFibInfoEntry_Object = MibTableRow
tlsMFibInfoEntry = _TlsMFibInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1)
)
tlsMFibInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoGrpAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoSrcAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoLocale"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoPortId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoSdpId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibInfoVcId"),
)
if mibBuilder.loadTexts:
    tlsMFibInfoEntry.setStatus("obsolete")
_TlsMFibInfoGrpAddr_Type = IpAddress
_TlsMFibInfoGrpAddr_Object = MibTableColumn
tlsMFibInfoGrpAddr = _TlsMFibInfoGrpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 1),
    _TlsMFibInfoGrpAddr_Type()
)
tlsMFibInfoGrpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoGrpAddr.setStatus("obsolete")
_TlsMFibInfoSrcAddr_Type = IpAddress
_TlsMFibInfoSrcAddr_Object = MibTableColumn
tlsMFibInfoSrcAddr = _TlsMFibInfoSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 2),
    _TlsMFibInfoSrcAddr_Type()
)
tlsMFibInfoSrcAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoSrcAddr.setStatus("obsolete")
_TlsMFibInfoLocale_Type = MfibLocation
_TlsMFibInfoLocale_Object = MibTableColumn
tlsMFibInfoLocale = _TlsMFibInfoLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 3),
    _TlsMFibInfoLocale_Type()
)
tlsMFibInfoLocale.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoLocale.setStatus("obsolete")
_TlsMFibInfoPortId_Type = TmnxPortID
_TlsMFibInfoPortId_Object = MibTableColumn
tlsMFibInfoPortId = _TlsMFibInfoPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 4),
    _TlsMFibInfoPortId_Type()
)
tlsMFibInfoPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoPortId.setStatus("obsolete")
_TlsMFibInfoEncapValue_Type = TmnxEncapVal
_TlsMFibInfoEncapValue_Object = MibTableColumn
tlsMFibInfoEncapValue = _TlsMFibInfoEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 5),
    _TlsMFibInfoEncapValue_Type()
)
tlsMFibInfoEncapValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoEncapValue.setStatus("obsolete")
_TlsMFibInfoSdpId_Type = SdpId
_TlsMFibInfoSdpId_Object = MibTableColumn
tlsMFibInfoSdpId = _TlsMFibInfoSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 6),
    _TlsMFibInfoSdpId_Type()
)
tlsMFibInfoSdpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoSdpId.setStatus("obsolete")
_TlsMFibInfoVcId_Type = Unsigned32
_TlsMFibInfoVcId_Object = MibTableColumn
tlsMFibInfoVcId = _TlsMFibInfoVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 7),
    _TlsMFibInfoVcId_Type()
)
tlsMFibInfoVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibInfoVcId.setStatus("obsolete")
_TlsMFibInfoFwdOrBlk_Type = MfibGrpSrcFwdOrBlk
_TlsMFibInfoFwdOrBlk_Object = MibTableColumn
tlsMFibInfoFwdOrBlk = _TlsMFibInfoFwdOrBlk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 8),
    _TlsMFibInfoFwdOrBlk_Type()
)
tlsMFibInfoFwdOrBlk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibInfoFwdOrBlk.setStatus("obsolete")
_TlsMFibInfoSvcId_Type = TmnxServId
_TlsMFibInfoSvcId_Object = MibTableColumn
tlsMFibInfoSvcId = _TlsMFibInfoSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 8, 1, 9),
    _TlsMFibInfoSvcId_Type()
)
tlsMFibInfoSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibInfoSvcId.setStatus("obsolete")
_TlsMFibGrpSrcStatsTable_Object = MibTable
tlsMFibGrpSrcStatsTable = _TlsMFibGrpSrcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9)
)
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsTable.setStatus("obsolete")
_TlsMFibGrpSrcStatsEntry_Object = MibTableRow
tlsMFibGrpSrcStatsEntry = _TlsMFibGrpSrcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9, 1)
)
tlsMFibGrpSrcStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibGrpSrcStatsGrpAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibGrpSrcStatsSrcAddr"),
)
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsEntry.setStatus("obsolete")
_TlsMFibGrpSrcStatsGrpAddr_Type = IpAddress
_TlsMFibGrpSrcStatsGrpAddr_Object = MibTableColumn
tlsMFibGrpSrcStatsGrpAddr = _TlsMFibGrpSrcStatsGrpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9, 1, 1),
    _TlsMFibGrpSrcStatsGrpAddr_Type()
)
tlsMFibGrpSrcStatsGrpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsGrpAddr.setStatus("obsolete")
_TlsMFibGrpSrcStatsSrcAddr_Type = IpAddress
_TlsMFibGrpSrcStatsSrcAddr_Object = MibTableColumn
tlsMFibGrpSrcStatsSrcAddr = _TlsMFibGrpSrcStatsSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9, 1, 2),
    _TlsMFibGrpSrcStatsSrcAddr_Type()
)
tlsMFibGrpSrcStatsSrcAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsSrcAddr.setStatus("obsolete")
_TlsMFibGrpSrcStatsForwardedPkts_Type = Counter64
_TlsMFibGrpSrcStatsForwardedPkts_Object = MibTableColumn
tlsMFibGrpSrcStatsForwardedPkts = _TlsMFibGrpSrcStatsForwardedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9, 1, 3),
    _TlsMFibGrpSrcStatsForwardedPkts_Type()
)
tlsMFibGrpSrcStatsForwardedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsForwardedPkts.setStatus("obsolete")
_TlsMFibGrpSrcStatsForwardedOctets_Type = Counter64
_TlsMFibGrpSrcStatsForwardedOctets_Object = MibTableColumn
tlsMFibGrpSrcStatsForwardedOctets = _TlsMFibGrpSrcStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 9, 1, 4),
    _TlsMFibGrpSrcStatsForwardedOctets_Type()
)
tlsMFibGrpSrcStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibGrpSrcStatsForwardedOctets.setStatus("obsolete")
_TlsRdntGrpTable_Object = MibTable
tlsRdntGrpTable = _TlsRdntGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10)
)
if mibBuilder.loadTexts:
    tlsRdntGrpTable.setStatus("obsolete")
_TlsRdntGrpEntry_Object = MibTableRow
tlsRdntGrpEntry = _TlsRdntGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10, 1)
)
tlsRdntGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (1, "TIMETRA-SERV-MIB", "tlsRdntGrpName"),
)
if mibBuilder.loadTexts:
    tlsRdntGrpEntry.setStatus("obsolete")
_TlsRdntGrpName_Type = TNamedItem
_TlsRdntGrpName_Object = MibTableColumn
tlsRdntGrpName = _TlsRdntGrpName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10, 1, 1),
    _TlsRdntGrpName_Type()
)
tlsRdntGrpName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpName.setStatus("obsolete")
_TlsRdntGrpRowStatus_Type = RowStatus
_TlsRdntGrpRowStatus_Object = MibTableColumn
tlsRdntGrpRowStatus = _TlsRdntGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10, 1, 2),
    _TlsRdntGrpRowStatus_Type()
)
tlsRdntGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsRdntGrpRowStatus.setStatus("obsolete")


class _TlsRdntGrpDescription_Type(ServObjDesc):
    """Custom type tlsRdntGrpDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_TlsRdntGrpDescription_Type.__name__ = "ServObjDesc"
_TlsRdntGrpDescription_Object = MibTableColumn
tlsRdntGrpDescription = _TlsRdntGrpDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10, 1, 3),
    _TlsRdntGrpDescription_Type()
)
tlsRdntGrpDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsRdntGrpDescription.setStatus("obsolete")
_TlsRdntGrpLastMgmtChange_Type = TimeStamp
_TlsRdntGrpLastMgmtChange_Object = MibTableColumn
tlsRdntGrpLastMgmtChange = _TlsRdntGrpLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 10, 1, 4),
    _TlsRdntGrpLastMgmtChange_Type()
)
tlsRdntGrpLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsRdntGrpLastMgmtChange.setStatus("obsolete")
_TlsRdntGrpMemberTable_Object = MibTable
tlsRdntGrpMemberTable = _TlsRdntGrpMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11)
)
if mibBuilder.loadTexts:
    tlsRdntGrpMemberTable.setStatus("obsolete")
_TlsRdntGrpMemberEntry_Object = MibTableRow
tlsRdntGrpMemberEntry = _TlsRdntGrpMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1)
)
tlsRdntGrpMemberEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpName"),
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpMemberRemoteNodeAddrTp"),
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpMemberRemoteNodeAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpMemberIsSap"),
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpMemberPort"),
    (0, "TIMETRA-SERV-MIB", "tlsRdntGrpMemberEncap"),
)
if mibBuilder.loadTexts:
    tlsRdntGrpMemberEntry.setStatus("obsolete")
_TlsRdntGrpMemberRemoteNodeAddrTp_Type = InetAddressType
_TlsRdntGrpMemberRemoteNodeAddrTp_Object = MibTableColumn
tlsRdntGrpMemberRemoteNodeAddrTp = _TlsRdntGrpMemberRemoteNodeAddrTp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 1),
    _TlsRdntGrpMemberRemoteNodeAddrTp_Type()
)
tlsRdntGrpMemberRemoteNodeAddrTp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberRemoteNodeAddrTp.setStatus("obsolete")
_TlsRdntGrpMemberRemoteNodeAddr_Type = InetAddress
_TlsRdntGrpMemberRemoteNodeAddr_Object = MibTableColumn
tlsRdntGrpMemberRemoteNodeAddr = _TlsRdntGrpMemberRemoteNodeAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 2),
    _TlsRdntGrpMemberRemoteNodeAddr_Type()
)
tlsRdntGrpMemberRemoteNodeAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberRemoteNodeAddr.setStatus("obsolete")
_TlsRdntGrpMemberIsSap_Type = TruthValue
_TlsRdntGrpMemberIsSap_Object = MibTableColumn
tlsRdntGrpMemberIsSap = _TlsRdntGrpMemberIsSap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 3),
    _TlsRdntGrpMemberIsSap_Type()
)
tlsRdntGrpMemberIsSap.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberIsSap.setStatus("obsolete")
_TlsRdntGrpMemberPort_Type = TmnxPortID
_TlsRdntGrpMemberPort_Object = MibTableColumn
tlsRdntGrpMemberPort = _TlsRdntGrpMemberPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 4),
    _TlsRdntGrpMemberPort_Type()
)
tlsRdntGrpMemberPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberPort.setStatus("obsolete")
_TlsRdntGrpMemberEncap_Type = TmnxEncapVal
_TlsRdntGrpMemberEncap_Object = MibTableColumn
tlsRdntGrpMemberEncap = _TlsRdntGrpMemberEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 5),
    _TlsRdntGrpMemberEncap_Type()
)
tlsRdntGrpMemberEncap.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberEncap.setStatus("obsolete")
_TlsRdntGrpMemberRowStatus_Type = RowStatus
_TlsRdntGrpMemberRowStatus_Object = MibTableColumn
tlsRdntGrpMemberRowStatus = _TlsRdntGrpMemberRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 6),
    _TlsRdntGrpMemberRowStatus_Type()
)
tlsRdntGrpMemberRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberRowStatus.setStatus("obsolete")
_TlsRdntGrpMemberLastMgmtChange_Type = TimeStamp
_TlsRdntGrpMemberLastMgmtChange_Object = MibTableColumn
tlsRdntGrpMemberLastMgmtChange = _TlsRdntGrpMemberLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 11, 1, 7),
    _TlsRdntGrpMemberLastMgmtChange_Type()
)
tlsRdntGrpMemberLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsRdntGrpMemberLastMgmtChange.setStatus("obsolete")
_TlsMstiTable_Object = MibTable
tlsMstiTable = _TlsMstiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12)
)
if mibBuilder.loadTexts:
    tlsMstiTable.setStatus("current")
_TlsMstiEntry_Object = MibTableRow
tlsMstiEntry = _TlsMstiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1)
)
tlsMstiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiInstanceId"),
)
if mibBuilder.loadTexts:
    tlsMstiEntry.setStatus("current")
_TlsMstiInstanceId_Type = MstiInstanceId
_TlsMstiInstanceId_Object = MibTableColumn
tlsMstiInstanceId = _TlsMstiInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 1),
    _TlsMstiInstanceId_Type()
)
tlsMstiInstanceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMstiInstanceId.setStatus("current")
_TlsMstiRowStatus_Type = RowStatus
_TlsMstiRowStatus_Object = MibTableColumn
tlsMstiRowStatus = _TlsMstiRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 2),
    _TlsMstiRowStatus_Type()
)
tlsMstiRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsMstiRowStatus.setStatus("current")


class _TlsMstiPriority_Type(Integer32):
    """Custom type tlsMstiPriority based on Integer32"""
    defaultValue = 32768

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TlsMstiPriority_Type.__name__ = "Integer32"
_TlsMstiPriority_Object = MibTableColumn
tlsMstiPriority = _TlsMstiPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 3),
    _TlsMstiPriority_Type()
)
tlsMstiPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsMstiPriority.setStatus("current")
_TlsMstiLastMgmtChange_Type = TimeStamp
_TlsMstiLastMgmtChange_Object = MibTableColumn
tlsMstiLastMgmtChange = _TlsMstiLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 4),
    _TlsMstiLastMgmtChange_Type()
)
tlsMstiLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMstiLastMgmtChange.setStatus("current")
_TlsMstiRegionalRoot_Type = BridgeId
_TlsMstiRegionalRoot_Object = MibTableColumn
tlsMstiRegionalRoot = _TlsMstiRegionalRoot_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 5),
    _TlsMstiRegionalRoot_Type()
)
tlsMstiRegionalRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMstiRegionalRoot.setStatus("current")
_TlsMstiIntRootCost_Type = Integer32
_TlsMstiIntRootCost_Object = MibTableColumn
tlsMstiIntRootCost = _TlsMstiIntRootCost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 6),
    _TlsMstiIntRootCost_Type()
)
tlsMstiIntRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMstiIntRootCost.setStatus("current")
_TlsMstiRemainingHopCount_Type = Integer32
_TlsMstiRemainingHopCount_Object = MibTableColumn
tlsMstiRemainingHopCount = _TlsMstiRemainingHopCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 7),
    _TlsMstiRemainingHopCount_Type()
)
tlsMstiRemainingHopCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMstiRemainingHopCount.setStatus("current")
_TlsMstiRegionalRootPort_Type = Integer32
_TlsMstiRegionalRootPort_Object = MibTableColumn
tlsMstiRegionalRootPort = _TlsMstiRegionalRootPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 12, 1, 8),
    _TlsMstiRegionalRootPort_Type()
)
tlsMstiRegionalRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMstiRegionalRootPort.setStatus("current")
_TlsMstiManagedVlanListTable_Object = MibTable
tlsMstiManagedVlanListTable = _TlsMstiManagedVlanListTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 13)
)
if mibBuilder.loadTexts:
    tlsMstiManagedVlanListTable.setStatus("current")
_TlsMstiManagedVlanListEntry_Object = MibTableRow
tlsMstiManagedVlanListEntry = _TlsMstiManagedVlanListEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 13, 1)
)
tlsMstiManagedVlanListEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiInstanceId"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiMvplsMinVlanTag"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiMvplsMaxVlanTag"),
)
if mibBuilder.loadTexts:
    tlsMstiManagedVlanListEntry.setStatus("current")
_TlsMstiMvplsMinVlanTag_Type = QTag
_TlsMstiMvplsMinVlanTag_Object = MibTableColumn
tlsMstiMvplsMinVlanTag = _TlsMstiMvplsMinVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 13, 1, 1),
    _TlsMstiMvplsMinVlanTag_Type()
)
tlsMstiMvplsMinVlanTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMstiMvplsMinVlanTag.setStatus("current")
_TlsMstiMvplsMaxVlanTag_Type = QTag
_TlsMstiMvplsMaxVlanTag_Object = MibTableColumn
tlsMstiMvplsMaxVlanTag = _TlsMstiMvplsMaxVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 13, 1, 2),
    _TlsMstiMvplsMaxVlanTag_Type()
)
tlsMstiMvplsMaxVlanTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMstiMvplsMaxVlanTag.setStatus("current")
_TlsMstiMvplsRowStatus_Type = RowStatus
_TlsMstiMvplsRowStatus_Object = MibTableColumn
tlsMstiMvplsRowStatus = _TlsMstiMvplsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 13, 1, 3),
    _TlsMstiMvplsRowStatus_Type()
)
tlsMstiMvplsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsMstiMvplsRowStatus.setStatus("current")
_TlsEgressMulticastGroupTable_Object = MibTable
tlsEgressMulticastGroupTable = _TlsEgressMulticastGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14)
)
if mibBuilder.loadTexts:
    tlsEgressMulticastGroupTable.setStatus("obsolete")
_TlsEgressMulticastGroupEntry_Object = MibTableRow
tlsEgressMulticastGroupEntry = _TlsEgressMulticastGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1)
)
tlsEgressMulticastGroupEntry.setIndexNames(
    (1, "TIMETRA-SERV-MIB", "tlsEgrMcGrpName"),
)
if mibBuilder.loadTexts:
    tlsEgressMulticastGroupEntry.setStatus("obsolete")
_TlsEgrMcGrpName_Type = TNamedItem
_TlsEgrMcGrpName_Object = MibTableColumn
tlsEgrMcGrpName = _TlsEgrMcGrpName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 1),
    _TlsEgrMcGrpName_Type()
)
tlsEgrMcGrpName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsEgrMcGrpName.setStatus("obsolete")
_TlsEgrMcGrpRowStatus_Type = RowStatus
_TlsEgrMcGrpRowStatus_Object = MibTableColumn
tlsEgrMcGrpRowStatus = _TlsEgrMcGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 2),
    _TlsEgrMcGrpRowStatus_Type()
)
tlsEgrMcGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpRowStatus.setStatus("obsolete")
_TlsEgrMcGrpLastMgmtChange_Type = TimeStamp
_TlsEgrMcGrpLastMgmtChange_Object = MibTableColumn
tlsEgrMcGrpLastMgmtChange = _TlsEgrMcGrpLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 3),
    _TlsEgrMcGrpLastMgmtChange_Type()
)
tlsEgrMcGrpLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsEgrMcGrpLastMgmtChange.setStatus("obsolete")


class _TlsEgrMcGrpDescription_Type(ServObjDesc):
    """Custom type tlsEgrMcGrpDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_TlsEgrMcGrpDescription_Type.__name__ = "ServObjDesc"
_TlsEgrMcGrpDescription_Object = MibTableColumn
tlsEgrMcGrpDescription = _TlsEgrMcGrpDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 4),
    _TlsEgrMcGrpDescription_Type()
)
tlsEgrMcGrpDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpDescription.setStatus("obsolete")


class _TlsEgrMcGrpChainLimit_Type(Unsigned32):
    """Custom type tlsEgrMcGrpChainLimit based on Unsigned32"""
    defaultValue = 16

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30),
    )


_TlsEgrMcGrpChainLimit_Type.__name__ = "Unsigned32"
_TlsEgrMcGrpChainLimit_Object = MibTableColumn
tlsEgrMcGrpChainLimit = _TlsEgrMcGrpChainLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 5),
    _TlsEgrMcGrpChainLimit_Type()
)
tlsEgrMcGrpChainLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpChainLimit.setStatus("obsolete")


class _TlsEgrMcGrpEncapType_Type(Integer32):
    """Custom type tlsEgrMcGrpEncapType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              10)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("nullEncap", 1),
          ("qEncap", 2),
          ("qinqEncap", 10))
    )


_TlsEgrMcGrpEncapType_Type.__name__ = "Integer32"
_TlsEgrMcGrpEncapType_Object = MibTableColumn
tlsEgrMcGrpEncapType = _TlsEgrMcGrpEncapType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 6),
    _TlsEgrMcGrpEncapType_Type()
)
tlsEgrMcGrpEncapType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpEncapType.setStatus("obsolete")


class _TlsEgrMcGrpDot1qEtherType_Type(Unsigned32):
    """Custom type tlsEgrMcGrpDot1qEtherType based on Unsigned32"""
    defaultValue = 33024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1536, 65535),
    )


_TlsEgrMcGrpDot1qEtherType_Type.__name__ = "Unsigned32"
_TlsEgrMcGrpDot1qEtherType_Object = MibTableColumn
tlsEgrMcGrpDot1qEtherType = _TlsEgrMcGrpDot1qEtherType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 7),
    _TlsEgrMcGrpDot1qEtherType_Type()
)
tlsEgrMcGrpDot1qEtherType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpDot1qEtherType.setStatus("obsolete")


class _TlsEgrMcGrpMacFilterId_Type(TFilterID):
    """Custom type tlsEgrMcGrpMacFilterId based on TFilterID"""
    defaultValue = 0


_TlsEgrMcGrpMacFilterId_Type.__name__ = "TFilterID"
_TlsEgrMcGrpMacFilterId_Object = MibTableColumn
tlsEgrMcGrpMacFilterId = _TlsEgrMcGrpMacFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 8),
    _TlsEgrMcGrpMacFilterId_Type()
)
tlsEgrMcGrpMacFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpMacFilterId.setStatus("obsolete")


class _TlsEgrMcGrpIpFilterId_Type(TFilterID):
    """Custom type tlsEgrMcGrpIpFilterId based on TFilterID"""
    defaultValue = 0


_TlsEgrMcGrpIpFilterId_Type.__name__ = "TFilterID"
_TlsEgrMcGrpIpFilterId_Object = MibTableColumn
tlsEgrMcGrpIpFilterId = _TlsEgrMcGrpIpFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 9),
    _TlsEgrMcGrpIpFilterId_Type()
)
tlsEgrMcGrpIpFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpIpFilterId.setStatus("obsolete")


class _TlsEgrMcGrpIpv6FilterId_Type(TFilterID):
    """Custom type tlsEgrMcGrpIpv6FilterId based on TFilterID"""
    defaultValue = 0


_TlsEgrMcGrpIpv6FilterId_Type.__name__ = "TFilterID"
_TlsEgrMcGrpIpv6FilterId_Object = MibTableColumn
tlsEgrMcGrpIpv6FilterId = _TlsEgrMcGrpIpv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 10),
    _TlsEgrMcGrpIpv6FilterId_Type()
)
tlsEgrMcGrpIpv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpIpv6FilterId.setStatus("obsolete")


class _TlsEgrMcGrpQinqEtherType_Type(Unsigned32):
    """Custom type tlsEgrMcGrpQinqEtherType based on Unsigned32"""
    defaultValue = 33024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1536, 65535),
    )


_TlsEgrMcGrpQinqEtherType_Type.__name__ = "Unsigned32"
_TlsEgrMcGrpQinqEtherType_Object = MibTableColumn
tlsEgrMcGrpQinqEtherType = _TlsEgrMcGrpQinqEtherType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 11),
    _TlsEgrMcGrpQinqEtherType_Type()
)
tlsEgrMcGrpQinqEtherType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpQinqEtherType.setStatus("obsolete")


class _TlsEgrMcGrpQinqFixedTagPosition_Type(Integer32):
    """Custom type tlsEgrMcGrpQinqFixedTagPosition based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("topTag", 2),
          ("bottomTag", 3))
    )


_TlsEgrMcGrpQinqFixedTagPosition_Type.__name__ = "Integer32"
_TlsEgrMcGrpQinqFixedTagPosition_Object = MibTableColumn
tlsEgrMcGrpQinqFixedTagPosition = _TlsEgrMcGrpQinqFixedTagPosition_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 12),
    _TlsEgrMcGrpQinqFixedTagPosition_Type()
)
tlsEgrMcGrpQinqFixedTagPosition.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpQinqFixedTagPosition.setStatus("obsolete")


class _TlsEgrMcGrpAdminQinqFixedTagVal_Type(Unsigned32):
    """Custom type tlsEgrMcGrpAdminQinqFixedTagVal based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_TlsEgrMcGrpAdminQinqFixedTagVal_Type.__name__ = "Unsigned32"
_TlsEgrMcGrpAdminQinqFixedTagVal_Object = MibTableColumn
tlsEgrMcGrpAdminQinqFixedTagVal = _TlsEgrMcGrpAdminQinqFixedTagVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 13),
    _TlsEgrMcGrpAdminQinqFixedTagVal_Type()
)
tlsEgrMcGrpAdminQinqFixedTagVal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsEgrMcGrpAdminQinqFixedTagVal.setStatus("obsolete")
_TlsEgrMcGrpOperQinqFixedTagVal_Type = Unsigned32
_TlsEgrMcGrpOperQinqFixedTagVal_Object = MibTableColumn
tlsEgrMcGrpOperQinqFixedTagVal = _TlsEgrMcGrpOperQinqFixedTagVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 14, 1, 14),
    _TlsEgrMcGrpOperQinqFixedTagVal_Type()
)
tlsEgrMcGrpOperQinqFixedTagVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsEgrMcGrpOperQinqFixedTagVal.setStatus("obsolete")
_SvcDhcpLeaseStateTable_Object = MibTable
svcDhcpLeaseStateTable = _SvcDhcpLeaseStateTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateTable.setStatus("obsolete")
_SvcDhcpLeaseStateEntry_Object = MibTableRow
svcDhcpLeaseStateEntry = _SvcDhcpLeaseStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1)
)
svcDhcpLeaseStateEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLseStateCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLseStateCiAddr"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateEntry.setStatus("obsolete")
_SvcDhcpLseStateCiAddrType_Type = InetAddressType
_SvcDhcpLseStateCiAddrType_Object = MibTableColumn
svcDhcpLseStateCiAddrType = _SvcDhcpLseStateCiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 1),
    _SvcDhcpLseStateCiAddrType_Type()
)
svcDhcpLseStateCiAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLseStateCiAddrType.setStatus("obsolete")


class _SvcDhcpLseStateCiAddr_Type(InetAddress):
    """Custom type svcDhcpLseStateCiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLseStateCiAddr_Type.__name__ = "InetAddress"
_SvcDhcpLseStateCiAddr_Object = MibTableColumn
svcDhcpLseStateCiAddr = _SvcDhcpLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 2),
    _SvcDhcpLseStateCiAddr_Type()
)
svcDhcpLseStateCiAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLseStateCiAddr.setStatus("obsolete")


class _SvcDhcpLseStateLocale_Type(Integer32):
    """Custom type svcDhcpLseStateLocale based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("sdp", 2))
    )


_SvcDhcpLseStateLocale_Type.__name__ = "Integer32"
_SvcDhcpLseStateLocale_Object = MibTableColumn
svcDhcpLseStateLocale = _SvcDhcpLseStateLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 3),
    _SvcDhcpLseStateLocale_Type()
)
svcDhcpLseStateLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateLocale.setStatus("obsolete")
_SvcDhcpLseStatePortId_Type = TmnxPortID
_SvcDhcpLseStatePortId_Object = MibTableColumn
svcDhcpLseStatePortId = _SvcDhcpLseStatePortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 4),
    _SvcDhcpLseStatePortId_Type()
)
svcDhcpLseStatePortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePortId.setStatus("obsolete")
_SvcDhcpLseStateEncapValue_Type = TmnxEncapVal
_SvcDhcpLseStateEncapValue_Object = MibTableColumn
svcDhcpLseStateEncapValue = _SvcDhcpLseStateEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 5),
    _SvcDhcpLseStateEncapValue_Type()
)
svcDhcpLseStateEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateEncapValue.setStatus("obsolete")
_SvcDhcpLseStateSdpId_Type = SdpId
_SvcDhcpLseStateSdpId_Object = MibTableColumn
svcDhcpLseStateSdpId = _SvcDhcpLseStateSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 6),
    _SvcDhcpLseStateSdpId_Type()
)
svcDhcpLseStateSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSdpId.setStatus("obsolete")
_SvcDhcpLseStateVcId_Type = Unsigned32
_SvcDhcpLseStateVcId_Object = MibTableColumn
svcDhcpLseStateVcId = _SvcDhcpLseStateVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 7),
    _SvcDhcpLseStateVcId_Type()
)
svcDhcpLseStateVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateVcId.setStatus("obsolete")
_SvcDhcpLseStateChAddr_Type = MacAddress
_SvcDhcpLseStateChAddr_Object = MibTableColumn
svcDhcpLseStateChAddr = _SvcDhcpLseStateChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 8),
    _SvcDhcpLseStateChAddr_Type()
)
svcDhcpLseStateChAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateChAddr.setStatus("obsolete")
_SvcDhcpLseStateRemainLseTime_Type = Unsigned32
_SvcDhcpLseStateRemainLseTime_Object = MibTableColumn
svcDhcpLseStateRemainLseTime = _SvcDhcpLseStateRemainLseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 9),
    _SvcDhcpLseStateRemainLseTime_Type()
)
svcDhcpLseStateRemainLseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateRemainLseTime.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcDhcpLseStateRemainLseTime.setUnits("seconds")
_SvcDhcpLseStateOption82_Type = OctetString
_SvcDhcpLseStateOption82_Object = MibTableColumn
svcDhcpLseStateOption82 = _SvcDhcpLseStateOption82_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 10),
    _SvcDhcpLseStateOption82_Type()
)
svcDhcpLseStateOption82.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateOption82.setStatus("obsolete")
_SvcDhcpLseStatePersistKey_Type = Unsigned32
_SvcDhcpLseStatePersistKey_Object = MibTableColumn
svcDhcpLseStatePersistKey = _SvcDhcpLseStatePersistKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 11),
    _SvcDhcpLseStatePersistKey_Type()
)
svcDhcpLseStatePersistKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePersistKey.setStatus("obsolete")
_SvcDhcpLseStateSubscrIdent_Type = DisplayString
_SvcDhcpLseStateSubscrIdent_Object = MibTableColumn
svcDhcpLseStateSubscrIdent = _SvcDhcpLseStateSubscrIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 12),
    _SvcDhcpLseStateSubscrIdent_Type()
)
svcDhcpLseStateSubscrIdent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSubscrIdent.setStatus("obsolete")
_SvcDhcpLseStateSubProfString_Type = DisplayString
_SvcDhcpLseStateSubProfString_Object = MibTableColumn
svcDhcpLseStateSubProfString = _SvcDhcpLseStateSubProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 13),
    _SvcDhcpLseStateSubProfString_Type()
)
svcDhcpLseStateSubProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSubProfString.setStatus("obsolete")
_SvcDhcpLseStateSlaProfString_Type = DisplayString
_SvcDhcpLseStateSlaProfString_Object = MibTableColumn
svcDhcpLseStateSlaProfString = _SvcDhcpLseStateSlaProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 14),
    _SvcDhcpLseStateSlaProfString_Type()
)
svcDhcpLseStateSlaProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSlaProfString.setStatus("obsolete")


class _SvcDhcpLseStateShcvOperState_Type(Integer32):
    """Custom type svcDhcpLseStateShcvOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("undefined", 2),
          ("down", 3),
          ("up", 4))
    )


_SvcDhcpLseStateShcvOperState_Type.__name__ = "Integer32"
_SvcDhcpLseStateShcvOperState_Object = MibTableColumn
svcDhcpLseStateShcvOperState = _SvcDhcpLseStateShcvOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 15),
    _SvcDhcpLseStateShcvOperState_Type()
)
svcDhcpLseStateShcvOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateShcvOperState.setStatus("obsolete")
_SvcDhcpLseStateShcvChecks_Type = Unsigned32
_SvcDhcpLseStateShcvChecks_Object = MibTableColumn
svcDhcpLseStateShcvChecks = _SvcDhcpLseStateShcvChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 16),
    _SvcDhcpLseStateShcvChecks_Type()
)
svcDhcpLseStateShcvChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateShcvChecks.setStatus("obsolete")
_SvcDhcpLseStateShcvReplies_Type = Unsigned32
_SvcDhcpLseStateShcvReplies_Object = MibTableColumn
svcDhcpLseStateShcvReplies = _SvcDhcpLseStateShcvReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 17),
    _SvcDhcpLseStateShcvReplies_Type()
)
svcDhcpLseStateShcvReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateShcvReplies.setStatus("obsolete")
_SvcDhcpLseStateShcvReplyTime_Type = TimeStamp
_SvcDhcpLseStateShcvReplyTime_Object = MibTableColumn
svcDhcpLseStateShcvReplyTime = _SvcDhcpLseStateShcvReplyTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 18),
    _SvcDhcpLseStateShcvReplyTime_Type()
)
svcDhcpLseStateShcvReplyTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateShcvReplyTime.setStatus("obsolete")
_SvcDhcpLseStateClientId_Type = OctetString
_SvcDhcpLseStateClientId_Object = MibTableColumn
svcDhcpLseStateClientId = _SvcDhcpLseStateClientId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 19),
    _SvcDhcpLseStateClientId_Type()
)
svcDhcpLseStateClientId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateClientId.setStatus("obsolete")
_SvcDhcpLseStateIAID_Type = Unsigned32
_SvcDhcpLseStateIAID_Object = MibTableColumn
svcDhcpLseStateIAID = _SvcDhcpLseStateIAID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 20),
    _SvcDhcpLseStateIAID_Type()
)
svcDhcpLseStateIAID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateIAID.setStatus("obsolete")
_SvcDhcpLseStateIAIDType_Type = IAIDType
_SvcDhcpLseStateIAIDType_Object = MibTableColumn
svcDhcpLseStateIAIDType = _SvcDhcpLseStateIAIDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 21),
    _SvcDhcpLseStateIAIDType_Type()
)
svcDhcpLseStateIAIDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateIAIDType.setStatus("obsolete")


class _SvcDhcpLseStateCiAddrMaskLen_Type(Unsigned32):
    """Custom type svcDhcpLseStateCiAddrMaskLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_SvcDhcpLseStateCiAddrMaskLen_Type.__name__ = "Unsigned32"
_SvcDhcpLseStateCiAddrMaskLen_Object = MibTableColumn
svcDhcpLseStateCiAddrMaskLen = _SvcDhcpLseStateCiAddrMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 22),
    _SvcDhcpLseStateCiAddrMaskLen_Type()
)
svcDhcpLseStateCiAddrMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateCiAddrMaskLen.setStatus("obsolete")
_SvcDhcpLseStateRetailerSvcId_Type = TmnxServId
_SvcDhcpLseStateRetailerSvcId_Object = MibTableColumn
svcDhcpLseStateRetailerSvcId = _SvcDhcpLseStateRetailerSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 23),
    _SvcDhcpLseStateRetailerSvcId_Type()
)
svcDhcpLseStateRetailerSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateRetailerSvcId.setStatus("obsolete")
_SvcDhcpLseStateRetailerIf_Type = InterfaceIndexOrZero
_SvcDhcpLseStateRetailerIf_Object = MibTableColumn
svcDhcpLseStateRetailerIf = _SvcDhcpLseStateRetailerIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 24),
    _SvcDhcpLseStateRetailerIf_Type()
)
svcDhcpLseStateRetailerIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateRetailerIf.setStatus("obsolete")


class _SvcDhcpLseStateAncpString_Type(DisplayString):
    """Custom type svcDhcpLseStateAncpString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_SvcDhcpLseStateAncpString_Type.__name__ = "DisplayString"
_SvcDhcpLseStateAncpString_Object = MibTableColumn
svcDhcpLseStateAncpString = _SvcDhcpLseStateAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 25),
    _SvcDhcpLseStateAncpString_Type()
)
svcDhcpLseStateAncpString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateAncpString.setStatus("obsolete")
_SvcDhcpLseStateFramedIpNetMaskTp_Type = InetAddressType
_SvcDhcpLseStateFramedIpNetMaskTp_Object = MibTableColumn
svcDhcpLseStateFramedIpNetMaskTp = _SvcDhcpLseStateFramedIpNetMaskTp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 26),
    _SvcDhcpLseStateFramedIpNetMaskTp_Type()
)
svcDhcpLseStateFramedIpNetMaskTp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateFramedIpNetMaskTp.setStatus("obsolete")
_SvcDhcpLseStateFramedIpNetMask_Type = InetAddress
_SvcDhcpLseStateFramedIpNetMask_Object = MibTableColumn
svcDhcpLseStateFramedIpNetMask = _SvcDhcpLseStateFramedIpNetMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 27),
    _SvcDhcpLseStateFramedIpNetMask_Type()
)
svcDhcpLseStateFramedIpNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateFramedIpNetMask.setStatus("obsolete")
_SvcDhcpLseStateBCastIpAddrType_Type = InetAddressType
_SvcDhcpLseStateBCastIpAddrType_Object = MibTableColumn
svcDhcpLseStateBCastIpAddrType = _SvcDhcpLseStateBCastIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 28),
    _SvcDhcpLseStateBCastIpAddrType_Type()
)
svcDhcpLseStateBCastIpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBCastIpAddrType.setStatus("obsolete")
_SvcDhcpLseStateBCastIpAddr_Type = InetAddress
_SvcDhcpLseStateBCastIpAddr_Object = MibTableColumn
svcDhcpLseStateBCastIpAddr = _SvcDhcpLseStateBCastIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 29),
    _SvcDhcpLseStateBCastIpAddr_Type()
)
svcDhcpLseStateBCastIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBCastIpAddr.setStatus("obsolete")
_SvcDhcpLseStateDefaultRouterTp_Type = InetAddressType
_SvcDhcpLseStateDefaultRouterTp_Object = MibTableColumn
svcDhcpLseStateDefaultRouterTp = _SvcDhcpLseStateDefaultRouterTp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 30),
    _SvcDhcpLseStateDefaultRouterTp_Type()
)
svcDhcpLseStateDefaultRouterTp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDefaultRouterTp.setStatus("obsolete")
_SvcDhcpLseStateDefaultRouter_Type = InetAddress
_SvcDhcpLseStateDefaultRouter_Object = MibTableColumn
svcDhcpLseStateDefaultRouter = _SvcDhcpLseStateDefaultRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 31),
    _SvcDhcpLseStateDefaultRouter_Type()
)
svcDhcpLseStateDefaultRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDefaultRouter.setStatus("obsolete")
_SvcDhcpLseStatePrimaryDnsType_Type = InetAddressType
_SvcDhcpLseStatePrimaryDnsType_Object = MibTableColumn
svcDhcpLseStatePrimaryDnsType = _SvcDhcpLseStatePrimaryDnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 32),
    _SvcDhcpLseStatePrimaryDnsType_Type()
)
svcDhcpLseStatePrimaryDnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePrimaryDnsType.setStatus("obsolete")
_SvcDhcpLseStatePrimaryDns_Type = InetAddress
_SvcDhcpLseStatePrimaryDns_Object = MibTableColumn
svcDhcpLseStatePrimaryDns = _SvcDhcpLseStatePrimaryDns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 33),
    _SvcDhcpLseStatePrimaryDns_Type()
)
svcDhcpLseStatePrimaryDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePrimaryDns.setStatus("obsolete")
_SvcDhcpLseStateSecondaryDnsType_Type = InetAddressType
_SvcDhcpLseStateSecondaryDnsType_Object = MibTableColumn
svcDhcpLseStateSecondaryDnsType = _SvcDhcpLseStateSecondaryDnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 34),
    _SvcDhcpLseStateSecondaryDnsType_Type()
)
svcDhcpLseStateSecondaryDnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSecondaryDnsType.setStatus("obsolete")
_SvcDhcpLseStateSecondaryDns_Type = InetAddress
_SvcDhcpLseStateSecondaryDns_Object = MibTableColumn
svcDhcpLseStateSecondaryDns = _SvcDhcpLseStateSecondaryDns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 35),
    _SvcDhcpLseStateSecondaryDns_Type()
)
svcDhcpLseStateSecondaryDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSecondaryDns.setStatus("obsolete")


class _SvcDhcpLseStateSessionTimeout_Type(Unsigned32):
    """Custom type svcDhcpLseStateSessionTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcDhcpLseStateSessionTimeout_Type.__name__ = "Unsigned32"
_SvcDhcpLseStateSessionTimeout_Object = MibTableColumn
svcDhcpLseStateSessionTimeout = _SvcDhcpLseStateSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 36),
    _SvcDhcpLseStateSessionTimeout_Type()
)
svcDhcpLseStateSessionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSessionTimeout.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcDhcpLseStateSessionTimeout.setUnits("seconds")
_SvcDhcpLseStateServerLeaseStart_Type = DateAndTime
_SvcDhcpLseStateServerLeaseStart_Object = MibTableColumn
svcDhcpLseStateServerLeaseStart = _SvcDhcpLseStateServerLeaseStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 37),
    _SvcDhcpLseStateServerLeaseStart_Type()
)
svcDhcpLseStateServerLeaseStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateServerLeaseStart.setStatus("obsolete")
_SvcDhcpLseStateServerLastRenew_Type = DateAndTime
_SvcDhcpLseStateServerLastRenew_Object = MibTableColumn
svcDhcpLseStateServerLastRenew = _SvcDhcpLseStateServerLastRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 38),
    _SvcDhcpLseStateServerLastRenew_Type()
)
svcDhcpLseStateServerLastRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateServerLastRenew.setStatus("obsolete")
_SvcDhcpLseStateServerLeaseEnd_Type = DateAndTime
_SvcDhcpLseStateServerLeaseEnd_Object = MibTableColumn
svcDhcpLseStateServerLeaseEnd = _SvcDhcpLseStateServerLeaseEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 39),
    _SvcDhcpLseStateServerLeaseEnd_Type()
)
svcDhcpLseStateServerLeaseEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateServerLeaseEnd.setStatus("obsolete")
_SvcDhcpLseStateDhcpServerAddrType_Type = InetAddressType
_SvcDhcpLseStateDhcpServerAddrType_Object = MibTableColumn
svcDhcpLseStateDhcpServerAddrType = _SvcDhcpLseStateDhcpServerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 40),
    _SvcDhcpLseStateDhcpServerAddrType_Type()
)
svcDhcpLseStateDhcpServerAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDhcpServerAddrType.setStatus("obsolete")
_SvcDhcpLseStateDhcpServerAddr_Type = InetAddress
_SvcDhcpLseStateDhcpServerAddr_Object = MibTableColumn
svcDhcpLseStateDhcpServerAddr = _SvcDhcpLseStateDhcpServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 41),
    _SvcDhcpLseStateDhcpServerAddr_Type()
)
svcDhcpLseStateDhcpServerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDhcpServerAddr.setStatus("obsolete")
_SvcDhcpLseStateOriginSubscrId_Type = DhcpLseStateInfoOrigin
_SvcDhcpLseStateOriginSubscrId_Object = MibTableColumn
svcDhcpLseStateOriginSubscrId = _SvcDhcpLseStateOriginSubscrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 42),
    _SvcDhcpLseStateOriginSubscrId_Type()
)
svcDhcpLseStateOriginSubscrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateOriginSubscrId.setStatus("obsolete")
_SvcDhcpLseStateOriginStrings_Type = DhcpLseStateInfoOrigin
_SvcDhcpLseStateOriginStrings_Object = MibTableColumn
svcDhcpLseStateOriginStrings = _SvcDhcpLseStateOriginStrings_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 43),
    _SvcDhcpLseStateOriginStrings_Type()
)
svcDhcpLseStateOriginStrings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateOriginStrings.setStatus("obsolete")
_SvcDhcpLseStateOriginLeaseInfo_Type = DhcpLseStateInfoOrigin
_SvcDhcpLseStateOriginLeaseInfo_Object = MibTableColumn
svcDhcpLseStateOriginLeaseInfo = _SvcDhcpLseStateOriginLeaseInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 44),
    _SvcDhcpLseStateOriginLeaseInfo_Type()
)
svcDhcpLseStateOriginLeaseInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateOriginLeaseInfo.setStatus("obsolete")
_SvcDhcpLseStateDhcpClientAddrType_Type = InetAddressType
_SvcDhcpLseStateDhcpClientAddrType_Object = MibTableColumn
svcDhcpLseStateDhcpClientAddrType = _SvcDhcpLseStateDhcpClientAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 45),
    _SvcDhcpLseStateDhcpClientAddrType_Type()
)
svcDhcpLseStateDhcpClientAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDhcpClientAddrType.setStatus("obsolete")
_SvcDhcpLseStateDhcpClientAddr_Type = InetAddress
_SvcDhcpLseStateDhcpClientAddr_Object = MibTableColumn
svcDhcpLseStateDhcpClientAddr = _SvcDhcpLseStateDhcpClientAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 46),
    _SvcDhcpLseStateDhcpClientAddr_Type()
)
svcDhcpLseStateDhcpClientAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateDhcpClientAddr.setStatus("obsolete")
_SvcDhcpLseStateLeaseSplitActive_Type = TruthValue
_SvcDhcpLseStateLeaseSplitActive_Object = MibTableColumn
svcDhcpLseStateLeaseSplitActive = _SvcDhcpLseStateLeaseSplitActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 47),
    _SvcDhcpLseStateLeaseSplitActive_Type()
)
svcDhcpLseStateLeaseSplitActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateLeaseSplitActive.setStatus("obsolete")


class _SvcDhcpLseStateInterDestId_Type(DisplayString):
    """Custom type svcDhcpLseStateInterDestId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLseStateInterDestId_Type.__name__ = "DisplayString"
_SvcDhcpLseStateInterDestId_Object = MibTableColumn
svcDhcpLseStateInterDestId = _SvcDhcpLseStateInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 48),
    _SvcDhcpLseStateInterDestId_Type()
)
svcDhcpLseStateInterDestId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateInterDestId.setStatus("obsolete")
_SvcDhcpLseStatePrimaryNbnsType_Type = InetAddressType
_SvcDhcpLseStatePrimaryNbnsType_Object = MibTableColumn
svcDhcpLseStatePrimaryNbnsType = _SvcDhcpLseStatePrimaryNbnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 49),
    _SvcDhcpLseStatePrimaryNbnsType_Type()
)
svcDhcpLseStatePrimaryNbnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePrimaryNbnsType.setStatus("obsolete")
_SvcDhcpLseStatePrimaryNbns_Type = InetAddress
_SvcDhcpLseStatePrimaryNbns_Object = MibTableColumn
svcDhcpLseStatePrimaryNbns = _SvcDhcpLseStatePrimaryNbns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 50),
    _SvcDhcpLseStatePrimaryNbns_Type()
)
svcDhcpLseStatePrimaryNbns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStatePrimaryNbns.setStatus("obsolete")
_SvcDhcpLseStateSecondaryNbnsType_Type = InetAddressType
_SvcDhcpLseStateSecondaryNbnsType_Object = MibTableColumn
svcDhcpLseStateSecondaryNbnsType = _SvcDhcpLseStateSecondaryNbnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 51),
    _SvcDhcpLseStateSecondaryNbnsType_Type()
)
svcDhcpLseStateSecondaryNbnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSecondaryNbnsType.setStatus("obsolete")
_SvcDhcpLseStateSecondaryNbns_Type = InetAddress
_SvcDhcpLseStateSecondaryNbns_Object = MibTableColumn
svcDhcpLseStateSecondaryNbns = _SvcDhcpLseStateSecondaryNbns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 52),
    _SvcDhcpLseStateSecondaryNbns_Type()
)
svcDhcpLseStateSecondaryNbns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateSecondaryNbns.setStatus("obsolete")
_SvcDhcpLseStateAppProfString_Type = DisplayString
_SvcDhcpLseStateAppProfString_Object = MibTableColumn
svcDhcpLseStateAppProfString = _SvcDhcpLseStateAppProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 53),
    _SvcDhcpLseStateAppProfString_Type()
)
svcDhcpLseStateAppProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateAppProfString.setStatus("obsolete")
_SvcDhcpLseStateNextHopMacAddr_Type = MacAddress
_SvcDhcpLseStateNextHopMacAddr_Object = MibTableColumn
svcDhcpLseStateNextHopMacAddr = _SvcDhcpLseStateNextHopMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 54),
    _SvcDhcpLseStateNextHopMacAddr_Type()
)
svcDhcpLseStateNextHopMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateNextHopMacAddr.setStatus("obsolete")
_SvcDhcpLseStateCategoryMapName_Type = TNamedItemOrEmpty
_SvcDhcpLseStateCategoryMapName_Object = MibTableColumn
svcDhcpLseStateCategoryMapName = _SvcDhcpLseStateCategoryMapName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 55),
    _SvcDhcpLseStateCategoryMapName_Type()
)
svcDhcpLseStateCategoryMapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateCategoryMapName.setStatus("obsolete")
_SvcDhcpLseStateNakNextRenew_Type = TruthValue
_SvcDhcpLseStateNakNextRenew_Object = MibTableColumn
svcDhcpLseStateNakNextRenew = _SvcDhcpLseStateNakNextRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 56),
    _SvcDhcpLseStateNakNextRenew_Type()
)
svcDhcpLseStateNakNextRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateNakNextRenew.setStatus("obsolete")


class _SvcDhcpLseStateRadiusClassAttr_Type(OctetString):
    """Custom type svcDhcpLseStateRadiusClassAttr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SvcDhcpLseStateRadiusClassAttr_Type.__name__ = "OctetString"
_SvcDhcpLseStateRadiusClassAttr_Object = MibTableColumn
svcDhcpLseStateRadiusClassAttr = _SvcDhcpLseStateRadiusClassAttr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 57),
    _SvcDhcpLseStateRadiusClassAttr_Type()
)
svcDhcpLseStateRadiusClassAttr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateRadiusClassAttr.setStatus("obsolete")


class _SvcDhcpLseStateRadiusUserName_Type(DisplayString):
    """Custom type svcDhcpLseStateRadiusUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SvcDhcpLseStateRadiusUserName_Type.__name__ = "DisplayString"
_SvcDhcpLseStateRadiusUserName_Object = MibTableColumn
svcDhcpLseStateRadiusUserName = _SvcDhcpLseStateRadiusUserName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 16, 1, 58),
    _SvcDhcpLseStateRadiusUserName_Type()
)
svcDhcpLseStateRadiusUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateRadiusUserName.setStatus("obsolete")
_TlsProtectedMacTable_Object = MibTable
tlsProtectedMacTable = _TlsProtectedMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 17)
)
if mibBuilder.loadTexts:
    tlsProtectedMacTable.setStatus("current")
_TlsProtectedMacEntry_Object = MibTableRow
tlsProtectedMacEntry = _TlsProtectedMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 17, 1)
)
tlsProtectedMacEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacAddress"),
)
if mibBuilder.loadTexts:
    tlsProtectedMacEntry.setStatus("current")
_TlsProtMacAddress_Type = MacAddress
_TlsProtMacAddress_Object = MibTableColumn
tlsProtMacAddress = _TlsProtMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 17, 1, 1),
    _TlsProtMacAddress_Type()
)
tlsProtMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacAddress.setStatus("current")
_TlsProtMacRowStatus_Type = RowStatus
_TlsProtMacRowStatus_Object = MibTableColumn
tlsProtMacRowStatus = _TlsProtMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 17, 1, 2),
    _TlsProtMacRowStatus_Type()
)
tlsProtMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsProtMacRowStatus.setStatus("current")
_TlsProtMacLastMgmtChange_Type = TimeStamp
_TlsProtMacLastMgmtChange_Object = MibTableColumn
tlsProtMacLastMgmtChange = _TlsProtMacLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 17, 1, 3),
    _TlsProtMacLastMgmtChange_Type()
)
tlsProtMacLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsProtMacLastMgmtChange.setStatus("current")
_SvcDhcpLeaseStateModifyTable_Object = MibTable
svcDhcpLeaseStateModifyTable = _SvcDhcpLeaseStateModifyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateModifyTable.setStatus("obsolete")
_SvcDhcpLeaseStateModifyEntry_Object = MibTableRow
svcDhcpLeaseStateModifyEntry = _SvcDhcpLeaseStateModifyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateModifyEntry.setStatus("obsolete")


class _SvcDhcpLseStateModifySubIndent_Type(DisplayString):
    """Custom type svcDhcpLseStateModifySubIndent based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLseStateModifySubIndent_Type.__name__ = "DisplayString"
_SvcDhcpLseStateModifySubIndent_Object = MibTableColumn
svcDhcpLseStateModifySubIndent = _SvcDhcpLseStateModifySubIndent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 1),
    _SvcDhcpLseStateModifySubIndent_Type()
)
svcDhcpLseStateModifySubIndent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModifySubIndent.setStatus("obsolete")


class _SvcDhcpLseStateModifySubProfile_Type(DisplayString):
    """Custom type svcDhcpLseStateModifySubProfile based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SvcDhcpLseStateModifySubProfile_Type.__name__ = "DisplayString"
_SvcDhcpLseStateModifySubProfile_Object = MibTableColumn
svcDhcpLseStateModifySubProfile = _SvcDhcpLseStateModifySubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 2),
    _SvcDhcpLseStateModifySubProfile_Type()
)
svcDhcpLseStateModifySubProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModifySubProfile.setStatus("obsolete")


class _SvcDhcpLseStateModifySlaProfile_Type(DisplayString):
    """Custom type svcDhcpLseStateModifySlaProfile based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SvcDhcpLseStateModifySlaProfile_Type.__name__ = "DisplayString"
_SvcDhcpLseStateModifySlaProfile_Object = MibTableColumn
svcDhcpLseStateModifySlaProfile = _SvcDhcpLseStateModifySlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 3),
    _SvcDhcpLseStateModifySlaProfile_Type()
)
svcDhcpLseStateModifySlaProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModifySlaProfile.setStatus("obsolete")


class _SvcDhcpLseStateEvaluateState_Type(TruthValue):
    """Custom type svcDhcpLseStateEvaluateState based on TruthValue"""
    defaultValue = 2


_SvcDhcpLseStateEvaluateState_Type.__name__ = "TruthValue"
_SvcDhcpLseStateEvaluateState_Object = MibTableColumn
svcDhcpLseStateEvaluateState = _SvcDhcpLseStateEvaluateState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 4),
    _SvcDhcpLseStateEvaluateState_Type()
)
svcDhcpLseStateEvaluateState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateEvaluateState.setStatus("obsolete")


class _SvcDhcpLseStateModInterDestId_Type(DisplayString):
    """Custom type svcDhcpLseStateModInterDestId based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLseStateModInterDestId_Type.__name__ = "DisplayString"
_SvcDhcpLseStateModInterDestId_Object = MibTableColumn
svcDhcpLseStateModInterDestId = _SvcDhcpLseStateModInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 5),
    _SvcDhcpLseStateModInterDestId_Type()
)
svcDhcpLseStateModInterDestId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModInterDestId.setStatus("obsolete")


class _SvcDhcpLseStateModifyAncpString_Type(TmnxAncpStringOrZero):
    """Custom type svcDhcpLseStateModifyAncpString based on TmnxAncpStringOrZero"""
    defaultHexValue = ""


_SvcDhcpLseStateModifyAncpString_Type.__name__ = "TmnxAncpStringOrZero"
_SvcDhcpLseStateModifyAncpString_Object = MibTableColumn
svcDhcpLseStateModifyAncpString = _SvcDhcpLseStateModifyAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 6),
    _SvcDhcpLseStateModifyAncpString_Type()
)
svcDhcpLseStateModifyAncpString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModifyAncpString.setStatus("obsolete")


class _SvcDhcpLseStateModifyAppProfile_Type(DisplayString):
    """Custom type svcDhcpLseStateModifyAppProfile based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SvcDhcpLseStateModifyAppProfile_Type.__name__ = "DisplayString"
_SvcDhcpLseStateModifyAppProfile_Object = MibTableColumn
svcDhcpLseStateModifyAppProfile = _SvcDhcpLseStateModifyAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 18, 1, 7),
    _SvcDhcpLseStateModifyAppProfile_Type()
)
svcDhcpLseStateModifyAppProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateModifyAppProfile.setStatus("obsolete")
_SvcEndPointTable_Object = MibTable
svcEndPointTable = _SvcEndPointTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19)
)
if mibBuilder.loadTexts:
    svcEndPointTable.setStatus("current")
_SvcEndPointEntry_Object = MibTableRow
svcEndPointEntry = _SvcEndPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1)
)
svcEndPointEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEndPointName"),
)
if mibBuilder.loadTexts:
    svcEndPointEntry.setStatus("current")
_SvcEndPointName_Type = TNamedItem
_SvcEndPointName_Object = MibTableColumn
svcEndPointName = _SvcEndPointName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 1),
    _SvcEndPointName_Type()
)
svcEndPointName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEndPointName.setStatus("current")
_SvcEndPointRowStatus_Type = RowStatus
_SvcEndPointRowStatus_Object = MibTableColumn
svcEndPointRowStatus = _SvcEndPointRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 2),
    _SvcEndPointRowStatus_Type()
)
svcEndPointRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointRowStatus.setStatus("current")


class _SvcEndPointDescription_Type(ServObjDesc):
    """Custom type svcEndPointDescription based on ServObjDesc"""
    defaultValue = OctetString("")


_SvcEndPointDescription_Type.__name__ = "ServObjDesc"
_SvcEndPointDescription_Object = MibTableColumn
svcEndPointDescription = _SvcEndPointDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 3),
    _SvcEndPointDescription_Type()
)
svcEndPointDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointDescription.setStatus("current")


class _SvcEndPointRevertTime_Type(Integer32):
    """Custom type svcEndPointRevertTime based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 600),
    )


_SvcEndPointRevertTime_Type.__name__ = "Integer32"
_SvcEndPointRevertTime_Object = MibTableColumn
svcEndPointRevertTime = _SvcEndPointRevertTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 4),
    _SvcEndPointRevertTime_Type()
)
svcEndPointRevertTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointRevertTime.setStatus("current")
if mibBuilder.loadTexts:
    svcEndPointRevertTime.setUnits("seconds")


class _SvcEndPointTxActiveType_Type(Integer32):
    """Custom type svcEndPointTxActiveType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("sap", 1),
          ("sdpBind", 2),
          ("sdpFec", 3),
          ("bgpEvpnMpls", 4))
    )


_SvcEndPointTxActiveType_Type.__name__ = "Integer32"
_SvcEndPointTxActiveType_Object = MibTableColumn
svcEndPointTxActiveType = _SvcEndPointTxActiveType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 5),
    _SvcEndPointTxActiveType_Type()
)
svcEndPointTxActiveType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveType.setStatus("current")
_SvcEndPointTxActivePortId_Type = TmnxPortID
_SvcEndPointTxActivePortId_Object = MibTableColumn
svcEndPointTxActivePortId = _SvcEndPointTxActivePortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 6),
    _SvcEndPointTxActivePortId_Type()
)
svcEndPointTxActivePortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActivePortId.setStatus("current")
_SvcEndPointTxActiveEncap_Type = TmnxEncapVal
_SvcEndPointTxActiveEncap_Object = MibTableColumn
svcEndPointTxActiveEncap = _SvcEndPointTxActiveEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 7),
    _SvcEndPointTxActiveEncap_Type()
)
svcEndPointTxActiveEncap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveEncap.setStatus("current")
_SvcEndPointTxActiveSdpId_Type = SdpBindId
_SvcEndPointTxActiveSdpId_Object = MibTableColumn
svcEndPointTxActiveSdpId = _SvcEndPointTxActiveSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 8),
    _SvcEndPointTxActiveSdpId_Type()
)
svcEndPointTxActiveSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveSdpId.setStatus("current")


class _SvcEndPointForceSwitchOver_Type(TmnxActionType):
    """Custom type svcEndPointForceSwitchOver based on TmnxActionType"""
    defaultValue = 2


_SvcEndPointForceSwitchOver_Type.__name__ = "TmnxActionType"
_SvcEndPointForceSwitchOver_Object = MibTableColumn
svcEndPointForceSwitchOver = _SvcEndPointForceSwitchOver_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 9),
    _SvcEndPointForceSwitchOver_Type()
)
svcEndPointForceSwitchOver.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointForceSwitchOver.setStatus("current")


class _SvcEndPointForceSwitchOverSdpId_Type(SdpBindId):
    """Custom type svcEndPointForceSwitchOverSdpId based on SdpBindId"""
    defaultHexValue = "0000000000000000"


_SvcEndPointForceSwitchOverSdpId_Type.__name__ = "SdpBindId"
_SvcEndPointForceSwitchOverSdpId_Object = MibTableColumn
svcEndPointForceSwitchOverSdpId = _SvcEndPointForceSwitchOverSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 10),
    _SvcEndPointForceSwitchOverSdpId_Type()
)
svcEndPointForceSwitchOverSdpId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointForceSwitchOverSdpId.setStatus("current")


class _SvcEndPointActiveHoldDelay_Type(Unsigned32):
    """Custom type svcEndPointActiveHoldDelay based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SvcEndPointActiveHoldDelay_Type.__name__ = "Unsigned32"
_SvcEndPointActiveHoldDelay_Object = MibTableColumn
svcEndPointActiveHoldDelay = _SvcEndPointActiveHoldDelay_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 11),
    _SvcEndPointActiveHoldDelay_Type()
)
svcEndPointActiveHoldDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointActiveHoldDelay.setStatus("current")
if mibBuilder.loadTexts:
    svcEndPointActiveHoldDelay.setUnits("deciseconds")


class _SvcEndPointIgnoreStandbySig_Type(TruthValue):
    """Custom type svcEndPointIgnoreStandbySig based on TruthValue"""
    defaultValue = 2


_SvcEndPointIgnoreStandbySig_Type.__name__ = "TruthValue"
_SvcEndPointIgnoreStandbySig_Object = MibTableColumn
svcEndPointIgnoreStandbySig = _SvcEndPointIgnoreStandbySig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 12),
    _SvcEndPointIgnoreStandbySig_Type()
)
svcEndPointIgnoreStandbySig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointIgnoreStandbySig.setStatus("current")


class _SvcEndPointMacPinning_Type(TmnxEnabledDisabled):
    """Custom type svcEndPointMacPinning based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcEndPointMacPinning_Type.__name__ = "TmnxEnabledDisabled"
_SvcEndPointMacPinning_Object = MibTableColumn
svcEndPointMacPinning = _SvcEndPointMacPinning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 13),
    _SvcEndPointMacPinning_Type()
)
svcEndPointMacPinning.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMacPinning.setStatus("current")


class _SvcEndPointMacLimit_Type(Integer32):
    """Custom type svcEndPointMacLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_SvcEndPointMacLimit_Type.__name__ = "Integer32"
_SvcEndPointMacLimit_Object = MibTableColumn
svcEndPointMacLimit = _SvcEndPointMacLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 14),
    _SvcEndPointMacLimit_Type()
)
svcEndPointMacLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMacLimit.setStatus("current")


class _SvcEndPointSuppressStandbySig_Type(TruthValue):
    """Custom type svcEndPointSuppressStandbySig based on TruthValue"""
    defaultValue = 1


_SvcEndPointSuppressStandbySig_Type.__name__ = "TruthValue"
_SvcEndPointSuppressStandbySig_Object = MibTableColumn
svcEndPointSuppressStandbySig = _SvcEndPointSuppressStandbySig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 15),
    _SvcEndPointSuppressStandbySig_Type()
)
svcEndPointSuppressStandbySig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointSuppressStandbySig.setStatus("current")


class _SvcEndPointRevertTimeCountDn_Type(Integer32):
    """Custom type svcEndPointRevertTimeCountDn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 600),
    )


_SvcEndPointRevertTimeCountDn_Type.__name__ = "Integer32"
_SvcEndPointRevertTimeCountDn_Object = MibTableColumn
svcEndPointRevertTimeCountDn = _SvcEndPointRevertTimeCountDn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 16),
    _SvcEndPointRevertTimeCountDn_Type()
)
svcEndPointRevertTimeCountDn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointRevertTimeCountDn.setStatus("current")
if mibBuilder.loadTexts:
    svcEndPointRevertTimeCountDn.setUnits("seconds")
_SvcEndPointTxActiveChangeCount_Type = Counter32
_SvcEndPointTxActiveChangeCount_Object = MibTableColumn
svcEndPointTxActiveChangeCount = _SvcEndPointTxActiveChangeCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 17),
    _SvcEndPointTxActiveChangeCount_Type()
)
svcEndPointTxActiveChangeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveChangeCount.setStatus("current")
_SvcEndPointTxActiveLastChange_Type = TimeStamp
_SvcEndPointTxActiveLastChange_Object = MibTableColumn
svcEndPointTxActiveLastChange = _SvcEndPointTxActiveLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 18),
    _SvcEndPointTxActiveLastChange_Type()
)
svcEndPointTxActiveLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveLastChange.setStatus("current")
_SvcEndPointTxActiveUpTime_Type = TimeTicks
_SvcEndPointTxActiveUpTime_Object = MibTableColumn
svcEndPointTxActiveUpTime = _SvcEndPointTxActiveUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 19),
    _SvcEndPointTxActiveUpTime_Type()
)
svcEndPointTxActiveUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveUpTime.setStatus("current")


class _SvcEndPointMCEPId_Type(Unsigned32):
    """Custom type svcEndPointMCEPId based on Unsigned32"""
    defaultValue = 0


_SvcEndPointMCEPId_Type.__name__ = "Unsigned32"
_SvcEndPointMCEPId_Object = MibTableColumn
svcEndPointMCEPId = _SvcEndPointMCEPId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 20),
    _SvcEndPointMCEPId_Type()
)
svcEndPointMCEPId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMCEPId.setStatus("current")


class _SvcEndPointMCEPPeerAddrType_Type(InetAddressType):
    """Custom type svcEndPointMCEPPeerAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEndPointMCEPPeerAddrType_Type.__name__ = "InetAddressType"
_SvcEndPointMCEPPeerAddrType_Object = MibTableColumn
svcEndPointMCEPPeerAddrType = _SvcEndPointMCEPPeerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 21),
    _SvcEndPointMCEPPeerAddrType_Type()
)
svcEndPointMCEPPeerAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMCEPPeerAddrType.setStatus("current")


class _SvcEndPointMCEPPeerAddr_Type(InetAddress):
    """Custom type svcEndPointMCEPPeerAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcEndPointMCEPPeerAddr_Type.__name__ = "InetAddress"
_SvcEndPointMCEPPeerAddr_Object = MibTableColumn
svcEndPointMCEPPeerAddr = _SvcEndPointMCEPPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 22),
    _SvcEndPointMCEPPeerAddr_Type()
)
svcEndPointMCEPPeerAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMCEPPeerAddr.setStatus("current")


class _SvcEndPointMCEPPeerName_Type(TNamedItemOrEmpty):
    """Custom type svcEndPointMCEPPeerName based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcEndPointMCEPPeerName_Type.__name__ = "TNamedItemOrEmpty"
_SvcEndPointMCEPPeerName_Object = MibTableColumn
svcEndPointMCEPPeerName = _SvcEndPointMCEPPeerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 23),
    _SvcEndPointMCEPPeerName_Type()
)
svcEndPointMCEPPeerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointMCEPPeerName.setStatus("current")


class _SvcEndPointBlockOnMeshFail_Type(TruthValue):
    """Custom type svcEndPointBlockOnMeshFail based on TruthValue"""
    defaultValue = 2


_SvcEndPointBlockOnMeshFail_Type.__name__ = "TruthValue"
_SvcEndPointBlockOnMeshFail_Object = MibTableColumn
svcEndPointBlockOnMeshFail = _SvcEndPointBlockOnMeshFail_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 24),
    _SvcEndPointBlockOnMeshFail_Type()
)
svcEndPointBlockOnMeshFail.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointBlockOnMeshFail.setStatus("current")
_SvcEndPointMCEPPsvModeActive_Type = TruthValue
_SvcEndPointMCEPPsvModeActive_Object = MibTableColumn
svcEndPointMCEPPsvModeActive = _SvcEndPointMCEPPsvModeActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 25),
    _SvcEndPointMCEPPsvModeActive_Type()
)
svcEndPointMCEPPsvModeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointMCEPPsvModeActive.setStatus("current")


class _SvcEndPointStandbySigMaster_Type(TruthValue):
    """Custom type svcEndPointStandbySigMaster based on TruthValue"""
    defaultValue = 2


_SvcEndPointStandbySigMaster_Type.__name__ = "TruthValue"
_SvcEndPointStandbySigMaster_Object = MibTableColumn
svcEndPointStandbySigMaster = _SvcEndPointStandbySigMaster_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 26),
    _SvcEndPointStandbySigMaster_Type()
)
svcEndPointStandbySigMaster.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointStandbySigMaster.setStatus("current")


class _SvcEndPointStandbySigSlave_Type(TruthValue):
    """Custom type svcEndPointStandbySigSlave based on TruthValue"""
    defaultValue = 2


_SvcEndPointStandbySigSlave_Type.__name__ = "TruthValue"
_SvcEndPointStandbySigSlave_Object = MibTableColumn
svcEndPointStandbySigSlave = _SvcEndPointStandbySigSlave_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 27),
    _SvcEndPointStandbySigSlave_Type()
)
svcEndPointStandbySigSlave.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointStandbySigSlave.setStatus("current")


class _SvcEndPointForceSwitchOvrSdpFec_Type(TmnxSpokeSdpIdOrZero):
    """Custom type svcEndPointForceSwitchOvrSdpFec based on TmnxSpokeSdpIdOrZero"""
    defaultValue = 0


_SvcEndPointForceSwitchOvrSdpFec_Type.__name__ = "TmnxSpokeSdpIdOrZero"
_SvcEndPointForceSwitchOvrSdpFec_Object = MibTableColumn
svcEndPointForceSwitchOvrSdpFec = _SvcEndPointForceSwitchOvrSdpFec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 28),
    _SvcEndPointForceSwitchOvrSdpFec_Type()
)
svcEndPointForceSwitchOvrSdpFec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointForceSwitchOvrSdpFec.setStatus("current")
_SvcEndPointTxActiveSdpFec_Type = TmnxSpokeSdpIdOrZero
_SvcEndPointTxActiveSdpFec_Object = MibTableColumn
svcEndPointTxActiveSdpFec = _SvcEndPointTxActiveSdpFec_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 29),
    _SvcEndPointTxActiveSdpFec_Type()
)
svcEndPointTxActiveSdpFec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointTxActiveSdpFec.setStatus("current")


class _SvcEndPointRestProtSrcMac_Type(TruthValue):
    """Custom type svcEndPointRestProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcEndPointRestProtSrcMac_Type.__name__ = "TruthValue"
_SvcEndPointRestProtSrcMac_Object = MibTableColumn
svcEndPointRestProtSrcMac = _SvcEndPointRestProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 30),
    _SvcEndPointRestProtSrcMac_Type()
)
svcEndPointRestProtSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointRestProtSrcMac.setStatus("current")


class _SvcEndPointRestProtSrcMacAction_Type(Integer32):
    """Custom type svcEndPointRestProtSrcMacAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("alarmOnly", 2),
          ("discardFrame", 3))
    )


_SvcEndPointRestProtSrcMacAction_Type.__name__ = "Integer32"
_SvcEndPointRestProtSrcMacAction_Object = MibTableColumn
svcEndPointRestProtSrcMacAction = _SvcEndPointRestProtSrcMacAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 31),
    _SvcEndPointRestProtSrcMacAction_Type()
)
svcEndPointRestProtSrcMacAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointRestProtSrcMacAction.setStatus("current")


class _SvcEndPointAutoLearnMacProtect_Type(TruthValue):
    """Custom type svcEndPointAutoLearnMacProtect based on TruthValue"""
    defaultValue = 2


_SvcEndPointAutoLearnMacProtect_Type.__name__ = "TruthValue"
_SvcEndPointAutoLearnMacProtect_Object = MibTableColumn
svcEndPointAutoLearnMacProtect = _SvcEndPointAutoLearnMacProtect_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 32),
    _SvcEndPointAutoLearnMacProtect_Type()
)
svcEndPointAutoLearnMacProtect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEndPointAutoLearnMacProtect.setStatus("current")


class _SvcEndPointCreationOrigin_Type(Integer32):
    """Custom type svcEndPointCreationOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("bgpVpws", 1))
    )


_SvcEndPointCreationOrigin_Type.__name__ = "Integer32"
_SvcEndPointCreationOrigin_Object = MibTableColumn
svcEndPointCreationOrigin = _SvcEndPointCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 33),
    _SvcEndPointCreationOrigin_Type()
)
svcEndPointCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEndPointCreationOrigin.setStatus("current")


class _SvcEPTxActiveBgpEvpnMplsInstId_Type(Integer32):
    """Custom type svcEPTxActiveBgpEvpnMplsInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_SvcEPTxActiveBgpEvpnMplsInstId_Type.__name__ = "Integer32"
_SvcEPTxActiveBgpEvpnMplsInstId_Object = MibTableColumn
svcEPTxActiveBgpEvpnMplsInstId = _SvcEPTxActiveBgpEvpnMplsInstId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 19, 1, 34),
    _SvcEPTxActiveBgpEvpnMplsInstId_Type()
)
svcEPTxActiveBgpEvpnMplsInstId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEPTxActiveBgpEvpnMplsInstId.setStatus("current")
_IesGrpIfTable_Object = MibTable
iesGrpIfTable = _IesGrpIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21)
)
if mibBuilder.loadTexts:
    iesGrpIfTable.setStatus("current")
_IesGrpIfEntry_Object = MibTableRow
iesGrpIfEntry = _IesGrpIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1)
)
iesGrpIfEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    iesGrpIfEntry.setStatus("current")


class _IesGrpIfRedInterface_Type(InterfaceIndexOrZero):
    """Custom type iesGrpIfRedInterface based on InterfaceIndexOrZero"""
    defaultValue = 0


_IesGrpIfRedInterface_Type.__name__ = "InterfaceIndexOrZero"
_IesGrpIfRedInterface_Object = MibTableColumn
iesGrpIfRedInterface = _IesGrpIfRedInterface_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 1),
    _IesGrpIfRedInterface_Type()
)
iesGrpIfRedInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfRedInterface.setStatus("current")


class _IesGrpIfOperUpWhileEmpty_Type(TruthValue):
    """Custom type iesGrpIfOperUpWhileEmpty based on TruthValue"""
    defaultValue = 2


_IesGrpIfOperUpWhileEmpty_Type.__name__ = "TruthValue"
_IesGrpIfOperUpWhileEmpty_Object = MibTableColumn
iesGrpIfOperUpWhileEmpty = _IesGrpIfOperUpWhileEmpty_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 2),
    _IesGrpIfOperUpWhileEmpty_Type()
)
iesGrpIfOperUpWhileEmpty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfOperUpWhileEmpty.setStatus("current")


class _IesGrpIfPolicyControl_Type(TNamedItemOrEmpty):
    """Custom type iesGrpIfPolicyControl based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesGrpIfPolicyControl_Type.__name__ = "TNamedItemOrEmpty"
_IesGrpIfPolicyControl_Object = MibTableColumn
iesGrpIfPolicyControl = _IesGrpIfPolicyControl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 3),
    _IesGrpIfPolicyControl_Type()
)
iesGrpIfPolicyControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfPolicyControl.setStatus("current")


class _IesGrpIfDiameterAuthPolicy_Type(TNamedItemOrEmpty):
    """Custom type iesGrpIfDiameterAuthPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_IesGrpIfDiameterAuthPolicy_Type.__name__ = "TNamedItemOrEmpty"
_IesGrpIfDiameterAuthPolicy_Object = MibTableColumn
iesGrpIfDiameterAuthPolicy = _IesGrpIfDiameterAuthPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 4),
    _IesGrpIfDiameterAuthPolicy_Type()
)
iesGrpIfDiameterAuthPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfDiameterAuthPolicy.setStatus("current")


class _IesGrpIfIpv6AutoReply_Type(Bits):
    """Custom type iesGrpIfIpv6AutoReply based on Bits"""
    namedValues = NamedValues(
        *(("neighborSolicitation", 0),
          ("routerSolicitation", 1))
    )

_IesGrpIfIpv6AutoReply_Type.__name__ = "Bits"
_IesGrpIfIpv6AutoReply_Object = MibTableColumn
iesGrpIfIpv6AutoReply = _IesGrpIfIpv6AutoReply_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 5),
    _IesGrpIfIpv6AutoReply_Type()
)
iesGrpIfIpv6AutoReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfIpv6AutoReply.setStatus("current")


class _IesGrpIfIgnoreDfBit_Type(TruthValue):
    """Custom type iesGrpIfIgnoreDfBit based on TruthValue"""
    defaultValue = 2


_IesGrpIfIgnoreDfBit_Type.__name__ = "TruthValue"
_IesGrpIfIgnoreDfBit_Object = MibTableColumn
iesGrpIfIgnoreDfBit = _IesGrpIfIgnoreDfBit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 21, 1, 6),
    _IesGrpIfIgnoreDfBit_Type()
)
iesGrpIfIgnoreDfBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesGrpIfIgnoreDfBit.setStatus("current")
_SvcPEDiscoveryPolicyTable_Object = MibTable
svcPEDiscoveryPolicyTable = _SvcPEDiscoveryPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22)
)
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyTable.setStatus("obsolete")
_SvcPEDiscoveryPolicyEntry_Object = MibTableRow
svcPEDiscoveryPolicyEntry = _SvcPEDiscoveryPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1)
)
svcPEDiscoveryPolicyEntry.setIndexNames(
    (1, "TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyName"),
)
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyEntry.setStatus("obsolete")
_SvcPEDiscoveryPolicyName_Type = TNamedItem
_SvcPEDiscoveryPolicyName_Object = MibTableColumn
svcPEDiscoveryPolicyName = _SvcPEDiscoveryPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1, 1),
    _SvcPEDiscoveryPolicyName_Type()
)
svcPEDiscoveryPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyName.setStatus("obsolete")
_SvcPEDiscoveryPolicyRowStatus_Type = RowStatus
_SvcPEDiscoveryPolicyRowStatus_Object = MibTableColumn
svcPEDiscoveryPolicyRowStatus = _SvcPEDiscoveryPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1, 2),
    _SvcPEDiscoveryPolicyRowStatus_Type()
)
svcPEDiscoveryPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyRowStatus.setStatus("obsolete")


class _SvcPEDiscoveryPolicyPassword_Type(OctetString):
    """Custom type svcPEDiscoveryPolicyPassword based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcPEDiscoveryPolicyPassword_Type.__name__ = "OctetString"
_SvcPEDiscoveryPolicyPassword_Object = MibTableColumn
svcPEDiscoveryPolicyPassword = _SvcPEDiscoveryPolicyPassword_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1, 3),
    _SvcPEDiscoveryPolicyPassword_Type()
)
svcPEDiscoveryPolicyPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyPassword.setStatus("obsolete")


class _SvcPEDiscoveryPolicyInterval_Type(Unsigned32):
    """Custom type svcPEDiscoveryPolicyInterval based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30),
    )


_SvcPEDiscoveryPolicyInterval_Type.__name__ = "Unsigned32"
_SvcPEDiscoveryPolicyInterval_Object = MibTableColumn
svcPEDiscoveryPolicyInterval = _SvcPEDiscoveryPolicyInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1, 4),
    _SvcPEDiscoveryPolicyInterval_Type()
)
svcPEDiscoveryPolicyInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyInterval.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyInterval.setUnits("minutes")


class _SvcPEDiscoveryPolicyTimeout_Type(Unsigned32):
    """Custom type svcPEDiscoveryPolicyTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 90),
    )


_SvcPEDiscoveryPolicyTimeout_Type.__name__ = "Unsigned32"
_SvcPEDiscoveryPolicyTimeout_Object = MibTableColumn
svcPEDiscoveryPolicyTimeout = _SvcPEDiscoveryPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 22, 1, 5),
    _SvcPEDiscoveryPolicyTimeout_Type()
)
svcPEDiscoveryPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyTimeout.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcPEDiscoveryPolicyTimeout.setUnits("seconds")
_SvcPEDiscPolServerTable_Object = MibTable
svcPEDiscPolServerTable = _SvcPEDiscPolServerTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23)
)
if mibBuilder.loadTexts:
    svcPEDiscPolServerTable.setStatus("obsolete")
_SvcPEDiscPolServerEntry_Object = MibTableRow
svcPEDiscPolServerEntry = _SvcPEDiscPolServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1)
)
svcPEDiscPolServerEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPEDiscPolServerIndex"),
    (1, "TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyName"),
)
if mibBuilder.loadTexts:
    svcPEDiscPolServerEntry.setStatus("obsolete")


class _SvcPEDiscPolServerIndex_Type(Unsigned32):
    """Custom type svcPEDiscPolServerIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SvcPEDiscPolServerIndex_Type.__name__ = "Unsigned32"
_SvcPEDiscPolServerIndex_Object = MibTableColumn
svcPEDiscPolServerIndex = _SvcPEDiscPolServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 1),
    _SvcPEDiscPolServerIndex_Type()
)
svcPEDiscPolServerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPEDiscPolServerIndex.setStatus("obsolete")
_SvcPEDiscPolServerRowStatus_Type = RowStatus
_SvcPEDiscPolServerRowStatus_Object = MibTableColumn
svcPEDiscPolServerRowStatus = _SvcPEDiscPolServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 2),
    _SvcPEDiscPolServerRowStatus_Type()
)
svcPEDiscPolServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscPolServerRowStatus.setStatus("obsolete")
_SvcPEDiscPolServerAddressType_Type = InetAddressType
_SvcPEDiscPolServerAddressType_Object = MibTableColumn
svcPEDiscPolServerAddressType = _SvcPEDiscPolServerAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 3),
    _SvcPEDiscPolServerAddressType_Type()
)
svcPEDiscPolServerAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscPolServerAddressType.setStatus("obsolete")
_SvcPEDiscPolServerAddress_Type = InetAddress
_SvcPEDiscPolServerAddress_Object = MibTableColumn
svcPEDiscPolServerAddress = _SvcPEDiscPolServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 4),
    _SvcPEDiscPolServerAddress_Type()
)
svcPEDiscPolServerAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscPolServerAddress.setStatus("obsolete")


class _SvcPEDiscPolServerSecret_Type(OctetString):
    """Custom type svcPEDiscPolServerSecret based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SvcPEDiscPolServerSecret_Type.__name__ = "OctetString"
_SvcPEDiscPolServerSecret_Object = MibTableColumn
svcPEDiscPolServerSecret = _SvcPEDiscPolServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 5),
    _SvcPEDiscPolServerSecret_Type()
)
svcPEDiscPolServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscPolServerSecret.setStatus("obsolete")
_SvcPEDiscPolServerOperStatus_Type = ServiceOperStatus
_SvcPEDiscPolServerOperStatus_Object = MibTableColumn
svcPEDiscPolServerOperStatus = _SvcPEDiscPolServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 6),
    _SvcPEDiscPolServerOperStatus_Type()
)
svcPEDiscPolServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPEDiscPolServerOperStatus.setStatus("obsolete")


class _SvcPEDiscPolServerPort_Type(Unsigned32):
    """Custom type svcPEDiscPolServerPort based on Unsigned32"""
    defaultValue = 1812

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SvcPEDiscPolServerPort_Type.__name__ = "Unsigned32"
_SvcPEDiscPolServerPort_Object = MibTableColumn
svcPEDiscPolServerPort = _SvcPEDiscPolServerPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 23, 1, 7),
    _SvcPEDiscPolServerPort_Type()
)
svcPEDiscPolServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPEDiscPolServerPort.setStatus("obsolete")
_SvcWholesalerInfoTable_Object = MibTable
svcWholesalerInfoTable = _SvcWholesalerInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24)
)
if mibBuilder.loadTexts:
    svcWholesalerInfoTable.setStatus("current")
_SvcWholesalerInfoEntry_Object = MibTableRow
svcWholesalerInfoEntry = _SvcWholesalerInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1)
)
svcWholesalerInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcWholesalerID"),
)
if mibBuilder.loadTexts:
    svcWholesalerInfoEntry.setStatus("current")
_SvcWholesalerID_Type = TmnxServId
_SvcWholesalerID_Object = MibTableColumn
svcWholesalerID = _SvcWholesalerID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 1),
    _SvcWholesalerID_Type()
)
svcWholesalerID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcWholesalerID.setStatus("current")
_SvcWholesalerNumStaticHosts_Type = Unsigned32
_SvcWholesalerNumStaticHosts_Object = MibTableColumn
svcWholesalerNumStaticHosts = _SvcWholesalerNumStaticHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 2),
    _SvcWholesalerNumStaticHosts_Type()
)
svcWholesalerNumStaticHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumStaticHosts.setStatus("current")
_SvcWholesalerNumDynamicHosts_Type = Unsigned32
_SvcWholesalerNumDynamicHosts_Object = MibTableColumn
svcWholesalerNumDynamicHosts = _SvcWholesalerNumDynamicHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 3),
    _SvcWholesalerNumDynamicHosts_Type()
)
svcWholesalerNumDynamicHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumDynamicHosts.setStatus("current")
_SvcWholesalerNumDhcpLeaseStates_Type = Unsigned32
_SvcWholesalerNumDhcpLeaseStates_Object = MibTableColumn
svcWholesalerNumDhcpLeaseStates = _SvcWholesalerNumDhcpLeaseStates_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 4),
    _SvcWholesalerNumDhcpLeaseStates_Type()
)
svcWholesalerNumDhcpLeaseStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumDhcpLeaseStates.setStatus("current")
_SvcWholesalerNumPppoeSessions_Type = Unsigned32
_SvcWholesalerNumPppoeSessions_Object = MibTableColumn
svcWholesalerNumPppoeSessions = _SvcWholesalerNumPppoeSessions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 5),
    _SvcWholesalerNumPppoeSessions_Type()
)
svcWholesalerNumPppoeSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumPppoeSessions.setStatus("current")
_SvcWholesalerNumArpHosts_Type = Unsigned32
_SvcWholesalerNumArpHosts_Object = MibTableColumn
svcWholesalerNumArpHosts = _SvcWholesalerNumArpHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 6),
    _SvcWholesalerNumArpHosts_Type()
)
svcWholesalerNumArpHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumArpHosts.setStatus("current")
_SvcWholesalerNumDhcp6LeaseStates_Type = Unsigned32
_SvcWholesalerNumDhcp6LeaseStates_Object = MibTableColumn
svcWholesalerNumDhcp6LeaseStates = _SvcWholesalerNumDhcp6LeaseStates_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 7),
    _SvcWholesalerNumDhcp6LeaseStates_Type()
)
svcWholesalerNumDhcp6LeaseStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumDhcp6LeaseStates.setStatus("current")
_SvcWholesalerNumSlaacHosts_Type = Unsigned32
_SvcWholesalerNumSlaacHosts_Object = MibTableColumn
svcWholesalerNumSlaacHosts = _SvcWholesalerNumSlaacHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 8),
    _SvcWholesalerNumSlaacHosts_Type()
)
svcWholesalerNumSlaacHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumSlaacHosts.setStatus("current")
_SvcWholesalerNumStatic6Hosts_Type = Unsigned32
_SvcWholesalerNumStatic6Hosts_Object = MibTableColumn
svcWholesalerNumStatic6Hosts = _SvcWholesalerNumStatic6Hosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 9),
    _SvcWholesalerNumStatic6Hosts_Type()
)
svcWholesalerNumStatic6Hosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumStatic6Hosts.setStatus("current")
_SvcWholesalerNumIpoeSessions_Type = Unsigned32
_SvcWholesalerNumIpoeSessions_Object = MibTableColumn
svcWholesalerNumIpoeSessions = _SvcWholesalerNumIpoeSessions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 10),
    _SvcWholesalerNumIpoeSessions_Type()
)
svcWholesalerNumIpoeSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumIpoeSessions.setStatus("current")
_SvcWholesalerNumIpcpHosts_Type = Unsigned32
_SvcWholesalerNumIpcpHosts_Object = MibTableColumn
svcWholesalerNumIpcpHosts = _SvcWholesalerNumIpcpHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 24, 1, 11),
    _SvcWholesalerNumIpcpHosts_Type()
)
svcWholesalerNumIpcpHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcWholesalerNumIpcpHosts.setStatus("current")
_SvcDhcpLeaseStateActionTable_Object = MibTable
svcDhcpLeaseStateActionTable = _SvcDhcpLeaseStateActionTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 25)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateActionTable.setStatus("obsolete")
_SvcDhcpLeaseStateActionEntry_Object = MibTableRow
svcDhcpLeaseStateActionEntry = _SvcDhcpLeaseStateActionEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 25, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateActionEntry.setStatus("obsolete")


class _SvcDhcpLseStateForceRenew_Type(TruthValue):
    """Custom type svcDhcpLseStateForceRenew based on TruthValue"""
    defaultValue = 2


_SvcDhcpLseStateForceRenew_Type.__name__ = "TruthValue"
_SvcDhcpLseStateForceRenew_Object = MibTableColumn
svcDhcpLseStateForceRenew = _SvcDhcpLseStateForceRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 25, 1, 1),
    _SvcDhcpLseStateForceRenew_Type()
)
svcDhcpLseStateForceRenew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLseStateForceRenew.setStatus("obsolete")
_SvcIfDHCP6MsgStatTable_Object = MibTable
svcIfDHCP6MsgStatTable = _SvcIfDHCP6MsgStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26)
)
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatTable.setStatus("current")
_SvcIfDHCP6MsgStatEntry_Object = MibTableRow
svcIfDHCP6MsgStatEntry = _SvcIfDHCP6MsgStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26, 1)
)
svcIfDHCP6MsgStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatEntry.setStatus("current")
_SvcIfDHCP6MsgStatsLstClrd_Type = TimeStamp
_SvcIfDHCP6MsgStatsLstClrd_Object = MibTableColumn
svcIfDHCP6MsgStatsLstClrd = _SvcIfDHCP6MsgStatsLstClrd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26, 1, 1),
    _SvcIfDHCP6MsgStatsLstClrd_Type()
)
svcIfDHCP6MsgStatsLstClrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatsLstClrd.setStatus("current")
_SvcIfDHCP6MsgStatsRcvd_Type = Gauge32
_SvcIfDHCP6MsgStatsRcvd_Object = MibTableColumn
svcIfDHCP6MsgStatsRcvd = _SvcIfDHCP6MsgStatsRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26, 1, 2),
    _SvcIfDHCP6MsgStatsRcvd_Type()
)
svcIfDHCP6MsgStatsRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatsRcvd.setStatus("current")
_SvcIfDHCP6MsgStatsSent_Type = Gauge32
_SvcIfDHCP6MsgStatsSent_Object = MibTableColumn
svcIfDHCP6MsgStatsSent = _SvcIfDHCP6MsgStatsSent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26, 1, 3),
    _SvcIfDHCP6MsgStatsSent_Type()
)
svcIfDHCP6MsgStatsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatsSent.setStatus("current")
_SvcIfDHCP6MsgStatsDropped_Type = Gauge32
_SvcIfDHCP6MsgStatsDropped_Object = MibTableColumn
svcIfDHCP6MsgStatsDropped = _SvcIfDHCP6MsgStatsDropped_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 26, 1, 4),
    _SvcIfDHCP6MsgStatsDropped_Type()
)
svcIfDHCP6MsgStatsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfDHCP6MsgStatsDropped.setStatus("current")
_SvcTlsBackboneInfoTable_Object = MibTable
svcTlsBackboneInfoTable = _SvcTlsBackboneInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27)
)
if mibBuilder.loadTexts:
    svcTlsBackboneInfoTable.setStatus("current")
_SvcTlsBackboneInfoEntry_Object = MibTableRow
svcTlsBackboneInfoEntry = _SvcTlsBackboneInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1)
)
if mibBuilder.loadTexts:
    svcTlsBackboneInfoEntry.setStatus("current")


class _SvcTlsBackboneSrcMac_Type(MacAddress):
    """Custom type svcTlsBackboneSrcMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcTlsBackboneSrcMac_Type.__name__ = "MacAddress"
_SvcTlsBackboneSrcMac_Object = MibTableColumn
svcTlsBackboneSrcMac = _SvcTlsBackboneSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 1),
    _SvcTlsBackboneSrcMac_Type()
)
svcTlsBackboneSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneSrcMac.setStatus("current")


class _SvcTlsBackboneVplsSvcId_Type(TmnxServId):
    """Custom type svcTlsBackboneVplsSvcId based on TmnxServId"""
    defaultValue = 0


_SvcTlsBackboneVplsSvcId_Type.__name__ = "TmnxServId"
_SvcTlsBackboneVplsSvcId_Object = MibTableColumn
svcTlsBackboneVplsSvcId = _SvcTlsBackboneVplsSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 2),
    _SvcTlsBackboneVplsSvcId_Type()
)
svcTlsBackboneVplsSvcId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneVplsSvcId.setStatus("current")


class _SvcTlsBackboneVplsSvcISID_Type(SvcISID):
    """Custom type svcTlsBackboneVplsSvcISID based on SvcISID"""
    defaultValue = -1


_SvcTlsBackboneVplsSvcISID_Type.__name__ = "SvcISID"
_SvcTlsBackboneVplsSvcISID_Object = MibTableColumn
svcTlsBackboneVplsSvcISID = _SvcTlsBackboneVplsSvcISID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 3),
    _SvcTlsBackboneVplsSvcISID_Type()
)
svcTlsBackboneVplsSvcISID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneVplsSvcISID.setStatus("current")
_SvcTlsBackboneOperSrcMac_Type = MacAddress
_SvcTlsBackboneOperSrcMac_Object = MibTableColumn
svcTlsBackboneOperSrcMac = _SvcTlsBackboneOperSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 4),
    _SvcTlsBackboneOperSrcMac_Type()
)
svcTlsBackboneOperSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBackboneOperSrcMac.setStatus("current")
_SvcTlsBackboneOperVplsSvcISID_Type = SvcISID
_SvcTlsBackboneOperVplsSvcISID_Object = MibTableColumn
svcTlsBackboneOperVplsSvcISID = _SvcTlsBackboneOperVplsSvcISID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 5),
    _SvcTlsBackboneOperVplsSvcISID_Type()
)
svcTlsBackboneOperVplsSvcISID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBackboneOperVplsSvcISID.setStatus("current")


class _SvcTlsBackboneLDPMacFlush_Type(TruthValue):
    """Custom type svcTlsBackboneLDPMacFlush based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneLDPMacFlush_Type.__name__ = "TruthValue"
_SvcTlsBackboneLDPMacFlush_Object = MibTableColumn
svcTlsBackboneLDPMacFlush = _SvcTlsBackboneLDPMacFlush_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 6),
    _SvcTlsBackboneLDPMacFlush_Type()
)
svcTlsBackboneLDPMacFlush.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneLDPMacFlush.setStatus("current")


class _SvcTlsBackboneVplsStp_Type(TmnxEnabledDisabled):
    """Custom type svcTlsBackboneVplsStp based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsBackboneVplsStp_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsBackboneVplsStp_Object = MibTableColumn
svcTlsBackboneVplsStp = _SvcTlsBackboneVplsStp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 7),
    _SvcTlsBackboneVplsStp_Type()
)
svcTlsBackboneVplsStp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneVplsStp.setStatus("current")


class _SvcTlsBackboneLDPMacFlushNotMine_Type(TruthValue):
    """Custom type svcTlsBackboneLDPMacFlushNotMine based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneLDPMacFlushNotMine_Type.__name__ = "TruthValue"
_SvcTlsBackboneLDPMacFlushNotMine_Object = MibTableColumn
svcTlsBackboneLDPMacFlushNotMine = _SvcTlsBackboneLDPMacFlushNotMine_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 8),
    _SvcTlsBackboneLDPMacFlushNotMine_Type()
)
svcTlsBackboneLDPMacFlushNotMine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneLDPMacFlushNotMine.setStatus("current")


class _SvcTlsBackboneUseSapBMac_Type(TruthValue):
    """Custom type svcTlsBackboneUseSapBMac based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneUseSapBMac_Type.__name__ = "TruthValue"
_SvcTlsBackboneUseSapBMac_Object = MibTableColumn
svcTlsBackboneUseSapBMac = _SvcTlsBackboneUseSapBMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 9),
    _SvcTlsBackboneUseSapBMac_Type()
)
svcTlsBackboneUseSapBMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneUseSapBMac.setStatus("current")


class _SvcTlsBackboneForceQTagFwd_Type(TruthValue):
    """Custom type svcTlsBackboneForceQTagFwd based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneForceQTagFwd_Type.__name__ = "TruthValue"
_SvcTlsBackboneForceQTagFwd_Object = MibTableColumn
svcTlsBackboneForceQTagFwd = _SvcTlsBackboneForceQTagFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 10),
    _SvcTlsBackboneForceQTagFwd_Type()
)
svcTlsBackboneForceQTagFwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneForceQTagFwd.setStatus("current")


class _SvcTlsBackboneUseEsBMac_Type(TruthValue):
    """Custom type svcTlsBackboneUseEsBMac based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneUseEsBMac_Type.__name__ = "TruthValue"
_SvcTlsBackboneUseEsBMac_Object = MibTableColumn
svcTlsBackboneUseEsBMac = _SvcTlsBackboneUseEsBMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 11),
    _SvcTlsBackboneUseEsBMac_Type()
)
svcTlsBackboneUseEsBMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneUseEsBMac.setStatus("current")


class _SvcTlsBackboneEvpnFlush_Type(TruthValue):
    """Custom type svcTlsBackboneEvpnFlush based on TruthValue"""
    defaultValue = 2


_SvcTlsBackboneEvpnFlush_Type.__name__ = "TruthValue"
_SvcTlsBackboneEvpnFlush_Object = MibTableColumn
svcTlsBackboneEvpnFlush = _SvcTlsBackboneEvpnFlush_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 27, 1, 12),
    _SvcTlsBackboneEvpnFlush_Type()
)
svcTlsBackboneEvpnFlush.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBackboneEvpnFlush.setStatus("current")
_TlsMFibTable_Object = MibTable
tlsMFibTable = _TlsMFibTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28)
)
if mibBuilder.loadTexts:
    tlsMFibTable.setStatus("current")
_TlsMFibEntry_Object = MibTableRow
tlsMFibEntry = _TlsMFibEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1)
)
tlsMFibEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibEntryType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibGrpMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibGrpInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibGrpInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibSrcInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibSrcInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibLocale"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibPortId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibSdpId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibVcId"),
)
if mibBuilder.loadTexts:
    tlsMFibEntry.setStatus("current")


class _TlsMFibEntryType_Type(Integer32):
    """Custom type tlsMFibEntryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipBased", 1),
          ("macBased", 2))
    )


_TlsMFibEntryType_Type.__name__ = "Integer32"
_TlsMFibEntryType_Object = MibTableColumn
tlsMFibEntryType = _TlsMFibEntryType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 1),
    _TlsMFibEntryType_Type()
)
tlsMFibEntryType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibEntryType.setStatus("current")
_TlsMFibGrpMacAddr_Type = MacAddress
_TlsMFibGrpMacAddr_Object = MibTableColumn
tlsMFibGrpMacAddr = _TlsMFibGrpMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 2),
    _TlsMFibGrpMacAddr_Type()
)
tlsMFibGrpMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibGrpMacAddr.setStatus("current")
_TlsMFibGrpInetAddrType_Type = InetAddressType
_TlsMFibGrpInetAddrType_Object = MibTableColumn
tlsMFibGrpInetAddrType = _TlsMFibGrpInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 3),
    _TlsMFibGrpInetAddrType_Type()
)
tlsMFibGrpInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibGrpInetAddrType.setStatus("current")


class _TlsMFibGrpInetAddr_Type(InetAddress):
    """Custom type tlsMFibGrpInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibGrpInetAddr_Type.__name__ = "InetAddress"
_TlsMFibGrpInetAddr_Object = MibTableColumn
tlsMFibGrpInetAddr = _TlsMFibGrpInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 4),
    _TlsMFibGrpInetAddr_Type()
)
tlsMFibGrpInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibGrpInetAddr.setStatus("current")
_TlsMFibSrcInetAddrType_Type = InetAddressType
_TlsMFibSrcInetAddrType_Object = MibTableColumn
tlsMFibSrcInetAddrType = _TlsMFibSrcInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 5),
    _TlsMFibSrcInetAddrType_Type()
)
tlsMFibSrcInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibSrcInetAddrType.setStatus("current")


class _TlsMFibSrcInetAddr_Type(InetAddress):
    """Custom type tlsMFibSrcInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibSrcInetAddr_Type.__name__ = "InetAddress"
_TlsMFibSrcInetAddr_Object = MibTableColumn
tlsMFibSrcInetAddr = _TlsMFibSrcInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 6),
    _TlsMFibSrcInetAddr_Type()
)
tlsMFibSrcInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibSrcInetAddr.setStatus("current")
_TlsMFibLocale_Type = MfibLocation
_TlsMFibLocale_Object = MibTableColumn
tlsMFibLocale = _TlsMFibLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 7),
    _TlsMFibLocale_Type()
)
tlsMFibLocale.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibLocale.setStatus("current")
_TlsMFibPortId_Type = TmnxPortID
_TlsMFibPortId_Object = MibTableColumn
tlsMFibPortId = _TlsMFibPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 8),
    _TlsMFibPortId_Type()
)
tlsMFibPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibPortId.setStatus("current")
_TlsMFibEncapValue_Type = TmnxEncapVal
_TlsMFibEncapValue_Object = MibTableColumn
tlsMFibEncapValue = _TlsMFibEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 9),
    _TlsMFibEncapValue_Type()
)
tlsMFibEncapValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibEncapValue.setStatus("current")
_TlsMFibSdpId_Type = SdpId
_TlsMFibSdpId_Object = MibTableColumn
tlsMFibSdpId = _TlsMFibSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 10),
    _TlsMFibSdpId_Type()
)
tlsMFibSdpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibSdpId.setStatus("current")
_TlsMFibVcId_Type = Unsigned32
_TlsMFibVcId_Object = MibTableColumn
tlsMFibVcId = _TlsMFibVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 11),
    _TlsMFibVcId_Type()
)
tlsMFibVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibVcId.setStatus("current")
_TlsMFibFwdOrBlk_Type = MfibGrpSrcFwdOrBlk
_TlsMFibFwdOrBlk_Object = MibTableColumn
tlsMFibFwdOrBlk = _TlsMFibFwdOrBlk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 12),
    _TlsMFibFwdOrBlk_Type()
)
tlsMFibFwdOrBlk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibFwdOrBlk.setStatus("current")
_TlsMFibSvcId_Type = TmnxServId
_TlsMFibSvcId_Object = MibTableColumn
tlsMFibSvcId = _TlsMFibSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 28, 1, 13),
    _TlsMFibSvcId_Type()
)
tlsMFibSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibSvcId.setStatus("current")
_TlsMFibStatsTable_Object = MibTable
tlsMFibStatsTable = _TlsMFibStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29)
)
if mibBuilder.loadTexts:
    tlsMFibStatsTable.setStatus("current")
_TlsMFibStatsEntry_Object = MibTableRow
tlsMFibStatsEntry = _TlsMFibStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1)
)
tlsMFibStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsEntryType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsGrpMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsGrpInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsGrpInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsSrcInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibStatsSrcInetAddr"),
)
if mibBuilder.loadTexts:
    tlsMFibStatsEntry.setStatus("current")


class _TlsMFibStatsEntryType_Type(Integer32):
    """Custom type tlsMFibStatsEntryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipBased", 1),
          ("macBased", 2))
    )


_TlsMFibStatsEntryType_Type.__name__ = "Integer32"
_TlsMFibStatsEntryType_Object = MibTableColumn
tlsMFibStatsEntryType = _TlsMFibStatsEntryType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 1),
    _TlsMFibStatsEntryType_Type()
)
tlsMFibStatsEntryType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsEntryType.setStatus("current")
_TlsMFibStatsGrpMacAddr_Type = MacAddress
_TlsMFibStatsGrpMacAddr_Object = MibTableColumn
tlsMFibStatsGrpMacAddr = _TlsMFibStatsGrpMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 2),
    _TlsMFibStatsGrpMacAddr_Type()
)
tlsMFibStatsGrpMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsGrpMacAddr.setStatus("current")
_TlsMFibStatsGrpInetAddrType_Type = InetAddressType
_TlsMFibStatsGrpInetAddrType_Object = MibTableColumn
tlsMFibStatsGrpInetAddrType = _TlsMFibStatsGrpInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 3),
    _TlsMFibStatsGrpInetAddrType_Type()
)
tlsMFibStatsGrpInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsGrpInetAddrType.setStatus("current")


class _TlsMFibStatsGrpInetAddr_Type(InetAddress):
    """Custom type tlsMFibStatsGrpInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibStatsGrpInetAddr_Type.__name__ = "InetAddress"
_TlsMFibStatsGrpInetAddr_Object = MibTableColumn
tlsMFibStatsGrpInetAddr = _TlsMFibStatsGrpInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 4),
    _TlsMFibStatsGrpInetAddr_Type()
)
tlsMFibStatsGrpInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsGrpInetAddr.setStatus("current")
_TlsMFibStatsSrcInetAddrType_Type = InetAddressType
_TlsMFibStatsSrcInetAddrType_Object = MibTableColumn
tlsMFibStatsSrcInetAddrType = _TlsMFibStatsSrcInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 5),
    _TlsMFibStatsSrcInetAddrType_Type()
)
tlsMFibStatsSrcInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsSrcInetAddrType.setStatus("current")


class _TlsMFibStatsSrcInetAddr_Type(InetAddress):
    """Custom type tlsMFibStatsSrcInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibStatsSrcInetAddr_Type.__name__ = "InetAddress"
_TlsMFibStatsSrcInetAddr_Object = MibTableColumn
tlsMFibStatsSrcInetAddr = _TlsMFibStatsSrcInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 6),
    _TlsMFibStatsSrcInetAddr_Type()
)
tlsMFibStatsSrcInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibStatsSrcInetAddr.setStatus("current")
_TlsMFibStatsForwardedPkts_Type = Counter64
_TlsMFibStatsForwardedPkts_Object = MibTableColumn
tlsMFibStatsForwardedPkts = _TlsMFibStatsForwardedPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 7),
    _TlsMFibStatsForwardedPkts_Type()
)
tlsMFibStatsForwardedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibStatsForwardedPkts.setStatus("current")
_TlsMFibStatsForwardedOctets_Type = Counter64
_TlsMFibStatsForwardedOctets_Object = MibTableColumn
tlsMFibStatsForwardedOctets = _TlsMFibStatsForwardedOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 29, 1, 8),
    _TlsMFibStatsForwardedOctets_Type()
)
tlsMFibStatsForwardedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibStatsForwardedOctets.setStatus("current")
_SvcTlsBgpADTableLastChanged_Type = TimeStamp
_SvcTlsBgpADTableLastChanged_Object = MibScalar
svcTlsBgpADTableLastChanged = _SvcTlsBgpADTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 30),
    _SvcTlsBgpADTableLastChanged_Type()
)
svcTlsBgpADTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpADTableLastChanged.setStatus("current")
_SvcTlsBgpADTable_Object = MibTable
svcTlsBgpADTable = _SvcTlsBgpADTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31)
)
if mibBuilder.loadTexts:
    svcTlsBgpADTable.setStatus("current")
_SvcTlsBgpADEntry_Object = MibTableRow
svcTlsBgpADEntry = _SvcTlsBgpADEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1)
)
svcTlsBgpADEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsBgpADEntry.setStatus("current")
_SvcTlsBgpADRowStatus_Type = RowStatus
_SvcTlsBgpADRowStatus_Object = MibTableColumn
svcTlsBgpADRowStatus = _SvcTlsBgpADRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 1),
    _SvcTlsBgpADRowStatus_Type()
)
svcTlsBgpADRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADRowStatus.setStatus("current")
_SvcTlsBgpADLastChanged_Type = TimeStamp
_SvcTlsBgpADLastChanged_Object = MibTableColumn
svcTlsBgpADLastChanged = _SvcTlsBgpADLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 2),
    _SvcTlsBgpADLastChanged_Type()
)
svcTlsBgpADLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpADLastChanged.setStatus("current")


class _SvcTlsBgpADVplsId_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcTlsBgpADVplsId based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcTlsBgpADVplsId_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcTlsBgpADVplsId_Object = MibTableColumn
svcTlsBgpADVplsId = _SvcTlsBgpADVplsId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 3),
    _SvcTlsBgpADVplsId_Type()
)
svcTlsBgpADVplsId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVplsId.setStatus("current")


class _SvcTlsBgpADVsiPrefix_Type(Unsigned32):
    """Custom type svcTlsBgpADVsiPrefix based on Unsigned32"""
    defaultValue = 0


_SvcTlsBgpADVsiPrefix_Type.__name__ = "Unsigned32"
_SvcTlsBgpADVsiPrefix_Object = MibTableColumn
svcTlsBgpADVsiPrefix = _SvcTlsBgpADVsiPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 4),
    _SvcTlsBgpADVsiPrefix_Type()
)
svcTlsBgpADVsiPrefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiPrefix.setStatus("current")


class _SvcTlsBgpADVsiRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcTlsBgpADVsiRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcTlsBgpADVsiRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcTlsBgpADVsiRD_Object = MibTableColumn
svcTlsBgpADVsiRD = _SvcTlsBgpADVsiRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 5),
    _SvcTlsBgpADVsiRD_Type()
)
svcTlsBgpADVsiRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiRD.setStatus("obsolete")


class _SvcTlsBgpADExportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcTlsBgpADExportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsBgpADExportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsBgpADExportRteTarget_Object = MibTableColumn
svcTlsBgpADExportRteTarget = _SvcTlsBgpADExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 6),
    _SvcTlsBgpADExportRteTarget_Type()
)
svcTlsBgpADExportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADExportRteTarget.setStatus("obsolete")


class _SvcTlsBgpADVsiExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiExportPolicy1_Object = MibTableColumn
svcTlsBgpADVsiExportPolicy1 = _SvcTlsBgpADVsiExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 7),
    _SvcTlsBgpADVsiExportPolicy1_Type()
)
svcTlsBgpADVsiExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiExportPolicy1.setStatus("obsolete")


class _SvcTlsBgpADVsiExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiExportPolicy2_Object = MibTableColumn
svcTlsBgpADVsiExportPolicy2 = _SvcTlsBgpADVsiExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 8),
    _SvcTlsBgpADVsiExportPolicy2_Type()
)
svcTlsBgpADVsiExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiExportPolicy2.setStatus("obsolete")


class _SvcTlsBgpADVsiExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiExportPolicy3_Object = MibTableColumn
svcTlsBgpADVsiExportPolicy3 = _SvcTlsBgpADVsiExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 9),
    _SvcTlsBgpADVsiExportPolicy3_Type()
)
svcTlsBgpADVsiExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiExportPolicy3.setStatus("obsolete")


class _SvcTlsBgpADVsiExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiExportPolicy4_Object = MibTableColumn
svcTlsBgpADVsiExportPolicy4 = _SvcTlsBgpADVsiExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 10),
    _SvcTlsBgpADVsiExportPolicy4_Type()
)
svcTlsBgpADVsiExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiExportPolicy4.setStatus("obsolete")


class _SvcTlsBgpADVsiExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiExportPolicy5_Object = MibTableColumn
svcTlsBgpADVsiExportPolicy5 = _SvcTlsBgpADVsiExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 11),
    _SvcTlsBgpADVsiExportPolicy5_Type()
)
svcTlsBgpADVsiExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiExportPolicy5.setStatus("obsolete")


class _SvcTlsBgpADImportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcTlsBgpADImportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsBgpADImportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsBgpADImportRteTarget_Object = MibTableColumn
svcTlsBgpADImportRteTarget = _SvcTlsBgpADImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 12),
    _SvcTlsBgpADImportRteTarget_Type()
)
svcTlsBgpADImportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADImportRteTarget.setStatus("obsolete")


class _SvcTlsBgpADVsiImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiImportPolicy1_Object = MibTableColumn
svcTlsBgpADVsiImportPolicy1 = _SvcTlsBgpADVsiImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 13),
    _SvcTlsBgpADVsiImportPolicy1_Type()
)
svcTlsBgpADVsiImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiImportPolicy1.setStatus("obsolete")


class _SvcTlsBgpADVsiImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiImportPolicy2_Object = MibTableColumn
svcTlsBgpADVsiImportPolicy2 = _SvcTlsBgpADVsiImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 14),
    _SvcTlsBgpADVsiImportPolicy2_Type()
)
svcTlsBgpADVsiImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiImportPolicy2.setStatus("obsolete")


class _SvcTlsBgpADVsiImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiImportPolicy3_Object = MibTableColumn
svcTlsBgpADVsiImportPolicy3 = _SvcTlsBgpADVsiImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 15),
    _SvcTlsBgpADVsiImportPolicy3_Type()
)
svcTlsBgpADVsiImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiImportPolicy3.setStatus("obsolete")


class _SvcTlsBgpADVsiImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiImportPolicy4_Object = MibTableColumn
svcTlsBgpADVsiImportPolicy4 = _SvcTlsBgpADVsiImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 16),
    _SvcTlsBgpADVsiImportPolicy4_Type()
)
svcTlsBgpADVsiImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiImportPolicy4.setStatus("obsolete")


class _SvcTlsBgpADVsiImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpADVsiImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpADVsiImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpADVsiImportPolicy5_Object = MibTableColumn
svcTlsBgpADVsiImportPolicy5 = _SvcTlsBgpADVsiImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 17),
    _SvcTlsBgpADVsiImportPolicy5_Type()
)
svcTlsBgpADVsiImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADVsiImportPolicy5.setStatus("obsolete")


class _SvcTlsBgpADAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsBgpADAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsBgpADAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsBgpADAdminStatus_Object = MibTableColumn
svcTlsBgpADAdminStatus = _SvcTlsBgpADAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 18),
    _SvcTlsBgpADAdminStatus_Type()
)
svcTlsBgpADAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpADAdminStatus.setStatus("current")


class _SvcTlsBgpADCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcTlsBgpADCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcTlsBgpADCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcTlsBgpADCreationOrigin_Object = MibTableColumn
svcTlsBgpADCreationOrigin = _SvcTlsBgpADCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 31, 1, 19),
    _SvcTlsBgpADCreationOrigin_Type()
)
svcTlsBgpADCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpADCreationOrigin.setStatus("current")
_SvcEpipePbbTableLastChanged_Type = TimeStamp
_SvcEpipePbbTableLastChanged_Object = MibScalar
svcEpipePbbTableLastChanged = _SvcEpipePbbTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 36),
    _SvcEpipePbbTableLastChanged_Type()
)
svcEpipePbbTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbTableLastChanged.setStatus("current")
_SvcEpipePbbTable_Object = MibTable
svcEpipePbbTable = _SvcEpipePbbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37)
)
if mibBuilder.loadTexts:
    svcEpipePbbTable.setStatus("current")
_SvcEpipePbbEntry_Object = MibTableRow
svcEpipePbbEntry = _SvcEpipePbbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1)
)
svcEpipePbbEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEpipePbbEntry.setStatus("current")
_SvcEpipePbbRowStatus_Type = RowStatus
_SvcEpipePbbRowStatus_Object = MibTableColumn
svcEpipePbbRowStatus = _SvcEpipePbbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 1),
    _SvcEpipePbbRowStatus_Type()
)
svcEpipePbbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePbbRowStatus.setStatus("current")
_SvcEpipePbbLastChngd_Type = TimeStamp
_SvcEpipePbbLastChngd_Object = MibTableColumn
svcEpipePbbLastChngd = _SvcEpipePbbLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 2),
    _SvcEpipePbbLastChngd_Type()
)
svcEpipePbbLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbLastChngd.setStatus("current")
_SvcEpipePbbBvplsSvcId_Type = TmnxServId
_SvcEpipePbbBvplsSvcId_Object = MibTableColumn
svcEpipePbbBvplsSvcId = _SvcEpipePbbBvplsSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 3),
    _SvcEpipePbbBvplsSvcId_Type()
)
svcEpipePbbBvplsSvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePbbBvplsSvcId.setStatus("current")


class _SvcEpipePbbBvplsDstMac_Type(MacAddress):
    """Custom type svcEpipePbbBvplsDstMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcEpipePbbBvplsDstMac_Type.__name__ = "MacAddress"
_SvcEpipePbbBvplsDstMac_Object = MibTableColumn
svcEpipePbbBvplsDstMac = _SvcEpipePbbBvplsDstMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 4),
    _SvcEpipePbbBvplsDstMac_Type()
)
svcEpipePbbBvplsDstMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePbbBvplsDstMac.setStatus("current")
_SvcEpipePbbSvcISID_Type = SvcISID
_SvcEpipePbbSvcISID_Object = MibTableColumn
svcEpipePbbSvcISID = _SvcEpipePbbSvcISID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 5),
    _SvcEpipePbbSvcISID_Type()
)
svcEpipePbbSvcISID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePbbSvcISID.setStatus("current")
_SvcEpipePbbOperState_Type = ServiceOperStatus
_SvcEpipePbbOperState_Object = MibTableColumn
svcEpipePbbOperState = _SvcEpipePbbOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 6),
    _SvcEpipePbbOperState_Type()
)
svcEpipePbbOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbOperState.setStatus("current")
_SvcEpipePbbFlooding_Type = TruthValue
_SvcEpipePbbFlooding_Object = MibTableColumn
svcEpipePbbFlooding = _SvcEpipePbbFlooding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 7),
    _SvcEpipePbbFlooding_Type()
)
svcEpipePbbFlooding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbFlooding.setStatus("current")
_SvcEpipePbbLastStatusChange_Type = TimeStamp
_SvcEpipePbbLastStatusChange_Object = MibTableColumn
svcEpipePbbLastStatusChange = _SvcEpipePbbLastStatusChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 8),
    _SvcEpipePbbLastStatusChange_Type()
)
svcEpipePbbLastStatusChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbLastStatusChange.setStatus("current")
_SvcEpipePbbBvplsOperDstMac_Type = MacAddress
_SvcEpipePbbBvplsOperDstMac_Object = MibTableColumn
svcEpipePbbBvplsOperDstMac = _SvcEpipePbbBvplsOperDstMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 9),
    _SvcEpipePbbBvplsOperDstMac_Type()
)
svcEpipePbbBvplsOperDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePbbBvplsOperDstMac.setStatus("current")


class _SvcEpipePbbBvplsDstMacName_Type(TNamedItemOrEmpty):
    """Custom type svcEpipePbbBvplsDstMacName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipePbbBvplsDstMacName_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipePbbBvplsDstMacName_Object = MibTableColumn
svcEpipePbbBvplsDstMacName = _SvcEpipePbbBvplsDstMacName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 37, 1, 10),
    _SvcEpipePbbBvplsDstMacName_Type()
)
svcEpipePbbBvplsDstMacName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePbbBvplsDstMacName.setStatus("current")
_TlsPipInfoTable_Object = MibTable
tlsPipInfoTable = _TlsPipInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40)
)
if mibBuilder.loadTexts:
    tlsPipInfoTable.setStatus("current")
_TlsPipInfoEntry_Object = MibTableRow
tlsPipInfoEntry = _TlsPipInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1)
)
tlsPipInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    tlsPipInfoEntry.setStatus("current")
_TlsPipStpPortState_Type = TStpPortState
_TlsPipStpPortState_Object = MibTableColumn
tlsPipStpPortState = _TlsPipStpPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 1),
    _TlsPipStpPortState_Type()
)
tlsPipStpPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpPortState.setStatus("current")
_TlsPipStpPortRole_Type = StpPortRole
_TlsPipStpPortRole_Object = MibTableColumn
tlsPipStpPortRole = _TlsPipStpPortRole_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 2),
    _TlsPipStpPortRole_Type()
)
tlsPipStpPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpPortRole.setStatus("current")
_TlsPipStpDesignatedBridge_Type = BridgeId
_TlsPipStpDesignatedBridge_Object = MibTableColumn
tlsPipStpDesignatedBridge = _TlsPipStpDesignatedBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 3),
    _TlsPipStpDesignatedBridge_Type()
)
tlsPipStpDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpDesignatedBridge.setStatus("current")
_TlsPipStpDesignatedPort_Type = Integer32
_TlsPipStpDesignatedPort_Object = MibTableColumn
tlsPipStpDesignatedPort = _TlsPipStpDesignatedPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 4),
    _TlsPipStpDesignatedPort_Type()
)
tlsPipStpDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpDesignatedPort.setStatus("current")
_TlsPipStpException_Type = StpExceptionCondition
_TlsPipStpException_Object = MibTableColumn
tlsPipStpException = _TlsPipStpException_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 5),
    _TlsPipStpException_Type()
)
tlsPipStpException.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpException.setStatus("current")
_TlsPipStpForwardTransitions_Type = Counter32
_TlsPipStpForwardTransitions_Object = MibTableColumn
tlsPipStpForwardTransitions = _TlsPipStpForwardTransitions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 6),
    _TlsPipStpForwardTransitions_Type()
)
tlsPipStpForwardTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpForwardTransitions.setStatus("current")
_TlsPipStpInConfigBpdus_Type = Counter32
_TlsPipStpInConfigBpdus_Object = MibTableColumn
tlsPipStpInConfigBpdus = _TlsPipStpInConfigBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 7),
    _TlsPipStpInConfigBpdus_Type()
)
tlsPipStpInConfigBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInConfigBpdus.setStatus("current")
_TlsPipStpInTcnBpdus_Type = Counter32
_TlsPipStpInTcnBpdus_Object = MibTableColumn
tlsPipStpInTcnBpdus = _TlsPipStpInTcnBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 8),
    _TlsPipStpInTcnBpdus_Type()
)
tlsPipStpInTcnBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInTcnBpdus.setStatus("current")
_TlsPipStpInRstBpdus_Type = Counter32
_TlsPipStpInRstBpdus_Object = MibTableColumn
tlsPipStpInRstBpdus = _TlsPipStpInRstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 9),
    _TlsPipStpInRstBpdus_Type()
)
tlsPipStpInRstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInRstBpdus.setStatus("current")
_TlsPipStpInMstBpdus_Type = Counter32
_TlsPipStpInMstBpdus_Object = MibTableColumn
tlsPipStpInMstBpdus = _TlsPipStpInMstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 10),
    _TlsPipStpInMstBpdus_Type()
)
tlsPipStpInMstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInMstBpdus.setStatus("current")
_TlsPipStpInBadBpdus_Type = Counter32
_TlsPipStpInBadBpdus_Object = MibTableColumn
tlsPipStpInBadBpdus = _TlsPipStpInBadBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 11),
    _TlsPipStpInBadBpdus_Type()
)
tlsPipStpInBadBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInBadBpdus.setStatus("current")
_TlsPipStpOutConfigBpdus_Type = Counter32
_TlsPipStpOutConfigBpdus_Object = MibTableColumn
tlsPipStpOutConfigBpdus = _TlsPipStpOutConfigBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 12),
    _TlsPipStpOutConfigBpdus_Type()
)
tlsPipStpOutConfigBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOutConfigBpdus.setStatus("current")
_TlsPipStpOutTcnBpdus_Type = Counter32
_TlsPipStpOutTcnBpdus_Object = MibTableColumn
tlsPipStpOutTcnBpdus = _TlsPipStpOutTcnBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 13),
    _TlsPipStpOutTcnBpdus_Type()
)
tlsPipStpOutTcnBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOutTcnBpdus.setStatus("current")
_TlsPipStpOutRstBpdus_Type = Counter32
_TlsPipStpOutRstBpdus_Object = MibTableColumn
tlsPipStpOutRstBpdus = _TlsPipStpOutRstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 14),
    _TlsPipStpOutRstBpdus_Type()
)
tlsPipStpOutRstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOutRstBpdus.setStatus("current")
_TlsPipStpOutMstBpdus_Type = Counter32
_TlsPipStpOutMstBpdus_Object = MibTableColumn
tlsPipStpOutMstBpdus = _TlsPipStpOutMstBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 15),
    _TlsPipStpOutMstBpdus_Type()
)
tlsPipStpOutMstBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOutMstBpdus.setStatus("current")
_TlsPipStpOperStatus_Type = ServiceOperStatus
_TlsPipStpOperStatus_Object = MibTableColumn
tlsPipStpOperStatus = _TlsPipStpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 16),
    _TlsPipStpOperStatus_Type()
)
tlsPipStpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOperStatus.setStatus("current")
_TlsPipStpMvplsPruneState_Type = MvplsPruneState
_TlsPipStpMvplsPruneState_Object = MibTableColumn
tlsPipStpMvplsPruneState = _TlsPipStpMvplsPruneState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 17),
    _TlsPipStpMvplsPruneState_Type()
)
tlsPipStpMvplsPruneState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpMvplsPruneState.setStatus("current")
_TlsPipStpOperProtocol_Type = StpProtocol
_TlsPipStpOperProtocol_Object = MibTableColumn
tlsPipStpOperProtocol = _TlsPipStpOperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 18),
    _TlsPipStpOperProtocol_Type()
)
tlsPipStpOperProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpOperProtocol.setStatus("current")


class _TlsPipStpPortNum_Type(Unsigned32):
    """Custom type tlsPipStpPortNum based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_TlsPipStpPortNum_Type.__name__ = "Unsigned32"
_TlsPipStpPortNum_Object = MibTableColumn
tlsPipStpPortNum = _TlsPipStpPortNum_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 19),
    _TlsPipStpPortNum_Type()
)
tlsPipStpPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpPortNum.setStatus("current")
_TlsPipStpInsideRegion_Type = TruthValue
_TlsPipStpInsideRegion_Object = MibTableColumn
tlsPipStpInsideRegion = _TlsPipStpInsideRegion_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 20),
    _TlsPipStpInsideRegion_Type()
)
tlsPipStpInsideRegion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipStpInsideRegion.setStatus("current")
_TlsPipInTcBitBpdus_Type = Counter32
_TlsPipInTcBitBpdus_Object = MibTableColumn
tlsPipInTcBitBpdus = _TlsPipInTcBitBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 21),
    _TlsPipInTcBitBpdus_Type()
)
tlsPipInTcBitBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipInTcBitBpdus.setStatus("current")
_TlsPipOutTcBitBpdus_Type = Counter32
_TlsPipOutTcBitBpdus_Object = MibTableColumn
tlsPipOutTcBitBpdus = _TlsPipOutTcBitBpdus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 40, 1, 22),
    _TlsPipOutTcBitBpdus_Type()
)
tlsPipOutTcBitBpdus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipOutTcBitBpdus.setStatus("current")
_TlsPipMstiTable_Object = MibTable
tlsPipMstiTable = _TlsPipMstiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41)
)
if mibBuilder.loadTexts:
    tlsPipMstiTable.setStatus("current")
_TlsPipMstiEntry_Object = MibTableRow
tlsPipMstiEntry = _TlsPipMstiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41, 1)
)
tlsPipMstiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMstiInstanceId"),
)
if mibBuilder.loadTexts:
    tlsPipMstiEntry.setStatus("current")
_TlsPipMstiPortRole_Type = StpPortRole
_TlsPipMstiPortRole_Object = MibTableColumn
tlsPipMstiPortRole = _TlsPipMstiPortRole_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41, 1, 1),
    _TlsPipMstiPortRole_Type()
)
tlsPipMstiPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipMstiPortRole.setStatus("current")
_TlsPipMstiPortState_Type = TStpPortState
_TlsPipMstiPortState_Object = MibTableColumn
tlsPipMstiPortState = _TlsPipMstiPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41, 1, 2),
    _TlsPipMstiPortState_Type()
)
tlsPipMstiPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipMstiPortState.setStatus("current")
_TlsPipMstiDesignatedBridge_Type = BridgeId
_TlsPipMstiDesignatedBridge_Object = MibTableColumn
tlsPipMstiDesignatedBridge = _TlsPipMstiDesignatedBridge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41, 1, 3),
    _TlsPipMstiDesignatedBridge_Type()
)
tlsPipMstiDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipMstiDesignatedBridge.setStatus("current")
_TlsPipMstiDesignatedPort_Type = Integer32
_TlsPipMstiDesignatedPort_Object = MibTableColumn
tlsPipMstiDesignatedPort = _TlsPipMstiDesignatedPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 41, 1, 4),
    _TlsPipMstiDesignatedPort_Type()
)
tlsPipMstiDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsPipMstiDesignatedPort.setStatus("current")
_SvcTotalFdbMimDestIdxEntries_Type = Unsigned32
_SvcTotalFdbMimDestIdxEntries_Object = MibScalar
svcTotalFdbMimDestIdxEntries = _SvcTotalFdbMimDestIdxEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 42),
    _SvcTotalFdbMimDestIdxEntries_Type()
)
svcTotalFdbMimDestIdxEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTotalFdbMimDestIdxEntries.setStatus("current")
_SvcDhcpManagedRouteTable_Object = MibTable
svcDhcpManagedRouteTable = _SvcDhcpManagedRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43)
)
if mibBuilder.loadTexts:
    svcDhcpManagedRouteTable.setStatus("obsolete")
_SvcDhcpManagedRouteEntry_Object = MibTableRow
svcDhcpManagedRouteEntry = _SvcDhcpManagedRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1)
)
svcDhcpManagedRouteEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpManagedRouteInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpManagedRouteInetAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpManagedRoutePrefixLen"),
)
if mibBuilder.loadTexts:
    svcDhcpManagedRouteEntry.setStatus("obsolete")
_SvcDhcpManagedRouteInetAddrType_Type = InetAddressType
_SvcDhcpManagedRouteInetAddrType_Object = MibTableColumn
svcDhcpManagedRouteInetAddrType = _SvcDhcpManagedRouteInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 1),
    _SvcDhcpManagedRouteInetAddrType_Type()
)
svcDhcpManagedRouteInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpManagedRouteInetAddrType.setStatus("obsolete")


class _SvcDhcpManagedRouteInetAddr_Type(InetAddress):
    """Custom type svcDhcpManagedRouteInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpManagedRouteInetAddr_Type.__name__ = "InetAddress"
_SvcDhcpManagedRouteInetAddr_Object = MibTableColumn
svcDhcpManagedRouteInetAddr = _SvcDhcpManagedRouteInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 2),
    _SvcDhcpManagedRouteInetAddr_Type()
)
svcDhcpManagedRouteInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpManagedRouteInetAddr.setStatus("obsolete")


class _SvcDhcpManagedRoutePrefixLen_Type(InetAddressPrefixLength):
    """Custom type svcDhcpManagedRoutePrefixLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_SvcDhcpManagedRoutePrefixLen_Type.__name__ = "InetAddressPrefixLength"
_SvcDhcpManagedRoutePrefixLen_Object = MibTableColumn
svcDhcpManagedRoutePrefixLen = _SvcDhcpManagedRoutePrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 3),
    _SvcDhcpManagedRoutePrefixLen_Type()
)
svcDhcpManagedRoutePrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpManagedRoutePrefixLen.setStatus("obsolete")
_SvcDhcpManagedRouteStatus_Type = TmnxManagedRouteStatus
_SvcDhcpManagedRouteStatus_Object = MibTableColumn
svcDhcpManagedRouteStatus = _SvcDhcpManagedRouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 4),
    _SvcDhcpManagedRouteStatus_Type()
)
svcDhcpManagedRouteStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpManagedRouteStatus.setStatus("obsolete")
_SvcDhcpManagedRouteMetric_Type = TmnxRadiusFramedRouteMetric
_SvcDhcpManagedRouteMetric_Object = MibTableColumn
svcDhcpManagedRouteMetric = _SvcDhcpManagedRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 5),
    _SvcDhcpManagedRouteMetric_Type()
)
svcDhcpManagedRouteMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpManagedRouteMetric.setStatus("obsolete")
_SvcDhcpManagedRoutePreference_Type = TmnxRadiusFramedRoutePreference
_SvcDhcpManagedRoutePreference_Object = MibTableColumn
svcDhcpManagedRoutePreference = _SvcDhcpManagedRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 6),
    _SvcDhcpManagedRoutePreference_Type()
)
svcDhcpManagedRoutePreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpManagedRoutePreference.setStatus("obsolete")
_SvcDhcpManagedRouteTag_Type = TmnxRadiusFramedRouteTag
_SvcDhcpManagedRouteTag_Object = MibTableColumn
svcDhcpManagedRouteTag = _SvcDhcpManagedRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 43, 1, 7),
    _SvcDhcpManagedRouteTag_Type()
)
svcDhcpManagedRouteTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpManagedRouteTag.setStatus("obsolete")
_SvcArpHostTableLastChanged_Type = TimeStamp
_SvcArpHostTableLastChanged_Object = MibScalar
svcArpHostTableLastChanged = _SvcArpHostTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 44),
    _SvcArpHostTableLastChanged_Type()
)
svcArpHostTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostTableLastChanged.setStatus("current")
_SvcArpHostTable_Object = MibTable
svcArpHostTable = _SvcArpHostTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45)
)
if mibBuilder.loadTexts:
    svcArpHostTable.setStatus("current")
_SvcArpHostEntry_Object = MibTableRow
svcArpHostEntry = _SvcArpHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1)
)
svcArpHostEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddr"),
)
if mibBuilder.loadTexts:
    svcArpHostEntry.setStatus("current")
_SvcArpHostIpAddrType_Type = InetAddressType
_SvcArpHostIpAddrType_Object = MibTableColumn
svcArpHostIpAddrType = _SvcArpHostIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 1),
    _SvcArpHostIpAddrType_Type()
)
svcArpHostIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostIpAddrType.setStatus("current")


class _SvcArpHostIpAddr_Type(InetAddress):
    """Custom type svcArpHostIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcArpHostIpAddr_Type.__name__ = "InetAddress"
_SvcArpHostIpAddr_Object = MibTableColumn
svcArpHostIpAddr = _SvcArpHostIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 2),
    _SvcArpHostIpAddr_Type()
)
svcArpHostIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostIpAddr.setStatus("current")
_SvcArpHostLocale_Type = ServAccessLocation
_SvcArpHostLocale_Object = MibTableColumn
svcArpHostLocale = _SvcArpHostLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 3),
    _SvcArpHostLocale_Type()
)
svcArpHostLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostLocale.setStatus("current")
_SvcArpHostSapPortId_Type = TmnxPortID
_SvcArpHostSapPortId_Object = MibTableColumn
svcArpHostSapPortId = _SvcArpHostSapPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 4),
    _SvcArpHostSapPortId_Type()
)
svcArpHostSapPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSapPortId.setStatus("current")
_SvcArpHostSapEncapValue_Type = TmnxEncapVal
_SvcArpHostSapEncapValue_Object = MibTableColumn
svcArpHostSapEncapValue = _SvcArpHostSapEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 5),
    _SvcArpHostSapEncapValue_Type()
)
svcArpHostSapEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSapEncapValue.setStatus("current")
_SvcArpHostSdpId_Type = SdpId
_SvcArpHostSdpId_Object = MibTableColumn
svcArpHostSdpId = _SvcArpHostSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 6),
    _SvcArpHostSdpId_Type()
)
svcArpHostSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSdpId.setStatus("current")
_SvcArpHostVcId_Type = Unsigned32
_SvcArpHostVcId_Object = MibTableColumn
svcArpHostVcId = _SvcArpHostVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 7),
    _SvcArpHostVcId_Type()
)
svcArpHostVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostVcId.setStatus("current")
_SvcArpHostSessionTimeout_Type = Unsigned32
_SvcArpHostSessionTimeout_Object = MibTableColumn
svcArpHostSessionTimeout = _SvcArpHostSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 8),
    _SvcArpHostSessionTimeout_Type()
)
svcArpHostSessionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSessionTimeout.setStatus("current")


class _SvcArpHostStart_Type(DateAndTime):
    """Custom type svcArpHostStart based on DateAndTime"""
    subtypeSpec = DateAndTime.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(11, 11),
    )
    fixed_length = 11


_SvcArpHostStart_Type.__name__ = "DateAndTime"
_SvcArpHostStart_Object = MibTableColumn
svcArpHostStart = _SvcArpHostStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 9),
    _SvcArpHostStart_Type()
)
svcArpHostStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostStart.setStatus("current")


class _SvcArpHostLastAuth_Type(DateAndTime):
    """Custom type svcArpHostLastAuth based on DateAndTime"""
    subtypeSpec = DateAndTime.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(11, 11),
    )
    fixed_length = 11


_SvcArpHostLastAuth_Type.__name__ = "DateAndTime"
_SvcArpHostLastAuth_Object = MibTableColumn
svcArpHostLastAuth = _SvcArpHostLastAuth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 10),
    _SvcArpHostLastAuth_Type()
)
svcArpHostLastAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostLastAuth.setStatus("current")


class _SvcArpHostRefresh_Type(DateAndTime):
    """Custom type svcArpHostRefresh based on DateAndTime"""
    subtypeSpec = DateAndTime.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(11, 11),
    )
    fixed_length = 11


_SvcArpHostRefresh_Type.__name__ = "DateAndTime"
_SvcArpHostRefresh_Object = MibTableColumn
svcArpHostRefresh = _SvcArpHostRefresh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 11),
    _SvcArpHostRefresh_Type()
)
svcArpHostRefresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRefresh.setStatus("current")
_SvcArpHostRemainingTime_Type = Unsigned32
_SvcArpHostRemainingTime_Object = MibTableColumn
svcArpHostRemainingTime = _SvcArpHostRemainingTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 12),
    _SvcArpHostRemainingTime_Type()
)
svcArpHostRemainingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRemainingTime.setStatus("current")
if mibBuilder.loadTexts:
    svcArpHostRemainingTime.setUnits("seconds")
_SvcArpHostShcvOperState_Type = ServShcvOperState
_SvcArpHostShcvOperState_Object = MibTableColumn
svcArpHostShcvOperState = _SvcArpHostShcvOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 13),
    _SvcArpHostShcvOperState_Type()
)
svcArpHostShcvOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostShcvOperState.setStatus("current")
_SvcArpHostShcvChecks_Type = Unsigned32
_SvcArpHostShcvChecks_Object = MibTableColumn
svcArpHostShcvChecks = _SvcArpHostShcvChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 14),
    _SvcArpHostShcvChecks_Type()
)
svcArpHostShcvChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostShcvChecks.setStatus("current")
_SvcArpHostShcvReplies_Type = Unsigned32
_SvcArpHostShcvReplies_Object = MibTableColumn
svcArpHostShcvReplies = _SvcArpHostShcvReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 15),
    _SvcArpHostShcvReplies_Type()
)
svcArpHostShcvReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostShcvReplies.setStatus("current")
_SvcArpHostShcvReplyTime_Type = TimeStamp
_SvcArpHostShcvReplyTime_Object = MibTableColumn
svcArpHostShcvReplyTime = _SvcArpHostShcvReplyTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 16),
    _SvcArpHostShcvReplyTime_Type()
)
svcArpHostShcvReplyTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostShcvReplyTime.setStatus("current")
_SvcArpHostSubscrIdent_Type = TmnxSubIdentStringOrEmpty
_SvcArpHostSubscrIdent_Object = MibTableColumn
svcArpHostSubscrIdent = _SvcArpHostSubscrIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 17),
    _SvcArpHostSubscrIdent_Type()
)
svcArpHostSubscrIdent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubscrIdent.setStatus("current")
_SvcArpHostSubProfString_Type = TmnxSubProfileStringOrEmpty
_SvcArpHostSubProfString_Object = MibTableColumn
svcArpHostSubProfString = _SvcArpHostSubProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 18),
    _SvcArpHostSubProfString_Type()
)
svcArpHostSubProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubProfString.setStatus("current")
_SvcArpHostSlaProfString_Type = TmnxSlaProfileStringOrEmpty
_SvcArpHostSlaProfString_Object = MibTableColumn
svcArpHostSlaProfString = _SvcArpHostSlaProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 19),
    _SvcArpHostSlaProfString_Type()
)
svcArpHostSlaProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSlaProfString.setStatus("current")
_SvcArpHostAppProfString_Type = TmnxAppProfileStringOrEmpty
_SvcArpHostAppProfString_Object = MibTableColumn
svcArpHostAppProfString = _SvcArpHostAppProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 20),
    _SvcArpHostAppProfString_Type()
)
svcArpHostAppProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostAppProfString.setStatus("current")
_SvcArpHostAncpString_Type = TmnxAncpStringOrZero
_SvcArpHostAncpString_Object = MibTableColumn
svcArpHostAncpString = _SvcArpHostAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 21),
    _SvcArpHostAncpString_Type()
)
svcArpHostAncpString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostAncpString.setStatus("current")
_SvcArpHostInterDestId_Type = TmnxSubMgtIntDestIdOrEmpty
_SvcArpHostInterDestId_Object = MibTableColumn
svcArpHostInterDestId = _SvcArpHostInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 22),
    _SvcArpHostInterDestId_Type()
)
svcArpHostInterDestId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostInterDestId.setStatus("current")
_SvcArpHostRetailerSvcId_Type = TmnxServId
_SvcArpHostRetailerSvcId_Object = MibTableColumn
svcArpHostRetailerSvcId = _SvcArpHostRetailerSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 23),
    _SvcArpHostRetailerSvcId_Type()
)
svcArpHostRetailerSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRetailerSvcId.setStatus("current")
_SvcArpHostRetailerIf_Type = InterfaceIndexOrZero
_SvcArpHostRetailerIf_Object = MibTableColumn
svcArpHostRetailerIf = _SvcArpHostRetailerIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 24),
    _SvcArpHostRetailerIf_Type()
)
svcArpHostRetailerIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRetailerIf.setStatus("current")
_SvcArpHostMacAddr_Type = MacAddress
_SvcArpHostMacAddr_Object = MibTableColumn
svcArpHostMacAddr = _SvcArpHostMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 25),
    _SvcArpHostMacAddr_Type()
)
svcArpHostMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostMacAddr.setStatus("current")
_SvcArpHostPersistKey_Type = Unsigned32
_SvcArpHostPersistKey_Object = MibTableColumn
svcArpHostPersistKey = _SvcArpHostPersistKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 26),
    _SvcArpHostPersistKey_Type()
)
svcArpHostPersistKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostPersistKey.setStatus("current")
_SvcArpHostCategoryMapName_Type = TNamedItemOrEmpty
_SvcArpHostCategoryMapName_Object = MibTableColumn
svcArpHostCategoryMapName = _SvcArpHostCategoryMapName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 27),
    _SvcArpHostCategoryMapName_Type()
)
svcArpHostCategoryMapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostCategoryMapName.setStatus("current")


class _SvcArpHostRadiusClassAttr_Type(OctetString):
    """Custom type svcArpHostRadiusClassAttr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_SvcArpHostRadiusClassAttr_Type.__name__ = "OctetString"
_SvcArpHostRadiusClassAttr_Object = MibTableColumn
svcArpHostRadiusClassAttr = _SvcArpHostRadiusClassAttr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 28),
    _SvcArpHostRadiusClassAttr_Type()
)
svcArpHostRadiusClassAttr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRadiusClassAttr.setStatus("current")


class _SvcArpHostRadiusUserName_Type(DisplayString):
    """Custom type svcArpHostRadiusUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_SvcArpHostRadiusUserName_Type.__name__ = "DisplayString"
_SvcArpHostRadiusUserName_Object = MibTableColumn
svcArpHostRadiusUserName = _SvcArpHostRadiusUserName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 29),
    _SvcArpHostRadiusUserName_Type()
)
svcArpHostRadiusUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRadiusUserName.setStatus("current")
_SvcArpHostOriginSubscrId_Type = ArpHostInfoOrigin
_SvcArpHostOriginSubscrId_Object = MibTableColumn
svcArpHostOriginSubscrId = _SvcArpHostOriginSubscrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 30),
    _SvcArpHostOriginSubscrId_Type()
)
svcArpHostOriginSubscrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOriginSubscrId.setStatus("obsolete")
_SvcArpHostOriginStrings_Type = ArpHostInfoOrigin
_SvcArpHostOriginStrings_Object = MibTableColumn
svcArpHostOriginStrings = _SvcArpHostOriginStrings_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 45, 1, 31),
    _SvcArpHostOriginStrings_Type()
)
svcArpHostOriginStrings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOriginStrings.setStatus("obsolete")
_SvcArpHostIfTableLastMgmtChange_Type = TimeStamp
_SvcArpHostIfTableLastMgmtChange_Object = MibScalar
svcArpHostIfTableLastMgmtChange = _SvcArpHostIfTableLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 46),
    _SvcArpHostIfTableLastMgmtChange_Type()
)
svcArpHostIfTableLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostIfTableLastMgmtChange.setStatus("current")
_SvcArpHostIfTable_Object = MibTable
svcArpHostIfTable = _SvcArpHostIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47)
)
if mibBuilder.loadTexts:
    svcArpHostIfTable.setStatus("current")
_SvcArpHostIfEntry_Object = MibTableRow
svcArpHostIfEntry = _SvcArpHostIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1)
)
svcArpHostIfEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    svcArpHostIfEntry.setStatus("current")
_SvcArpHostIfLastMgmtChange_Type = TimeStamp
_SvcArpHostIfLastMgmtChange_Object = MibTableColumn
svcArpHostIfLastMgmtChange = _SvcArpHostIfLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 1),
    _SvcArpHostIfLastMgmtChange_Type()
)
svcArpHostIfLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostIfLastMgmtChange.setStatus("current")
_SvcArpHostIfAdminState_Type = TmnxAdminState
_SvcArpHostIfAdminState_Object = MibTableColumn
svcArpHostIfAdminState = _SvcArpHostIfAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 2),
    _SvcArpHostIfAdminState_Type()
)
svcArpHostIfAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcArpHostIfAdminState.setStatus("current")


class _SvcArpHostIfMaxNumHosts_Type(Unsigned32):
    """Custom type svcArpHostIfMaxNumHosts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 524287),
    )


_SvcArpHostIfMaxNumHosts_Type.__name__ = "Unsigned32"
_SvcArpHostIfMaxNumHosts_Object = MibTableColumn
svcArpHostIfMaxNumHosts = _SvcArpHostIfMaxNumHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 3),
    _SvcArpHostIfMaxNumHosts_Type()
)
svcArpHostIfMaxNumHosts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcArpHostIfMaxNumHosts.setStatus("current")


class _SvcArpHostIfMaxNumHostsSap_Type(Unsigned32):
    """Custom type svcArpHostIfMaxNumHostsSap based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_SvcArpHostIfMaxNumHostsSap_Type.__name__ = "Unsigned32"
_SvcArpHostIfMaxNumHostsSap_Object = MibTableColumn
svcArpHostIfMaxNumHostsSap = _SvcArpHostIfMaxNumHostsSap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 4),
    _SvcArpHostIfMaxNumHostsSap_Type()
)
svcArpHostIfMaxNumHostsSap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcArpHostIfMaxNumHostsSap.setStatus("current")


class _SvcArpHostIfMinAuthInterval_Type(Unsigned32):
    """Custom type svcArpHostIfMinAuthInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6000),
    )


_SvcArpHostIfMinAuthInterval_Type.__name__ = "Unsigned32"
_SvcArpHostIfMinAuthInterval_Object = MibTableColumn
svcArpHostIfMinAuthInterval = _SvcArpHostIfMinAuthInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 5),
    _SvcArpHostIfMinAuthInterval_Type()
)
svcArpHostIfMinAuthInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcArpHostIfMinAuthInterval.setStatus("current")
if mibBuilder.loadTexts:
    svcArpHostIfMinAuthInterval.setUnits("minutes")
_SvcArpHostIfNumHosts_Type = Gauge32
_SvcArpHostIfNumHosts_Object = MibTableColumn
svcArpHostIfNumHosts = _SvcArpHostIfNumHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 47, 1, 6),
    _SvcArpHostIfNumHosts_Type()
)
svcArpHostIfNumHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostIfNumHosts.setStatus("current")
_SvcArpHostDefaultSessionTimeout_Type = Unsigned32
_SvcArpHostDefaultSessionTimeout_Object = MibScalar
svcArpHostDefaultSessionTimeout = _SvcArpHostDefaultSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 48),
    _SvcArpHostDefaultSessionTimeout_Type()
)
svcArpHostDefaultSessionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostDefaultSessionTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcArpHostDefaultSessionTimeout.setUnits("seconds")
_SvcIgmpTrkTableLastMgmtChange_Type = TimeStamp
_SvcIgmpTrkTableLastMgmtChange_Object = MibScalar
svcIgmpTrkTableLastMgmtChange = _SvcIgmpTrkTableLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 49),
    _SvcIgmpTrkTableLastMgmtChange_Type()
)
svcIgmpTrkTableLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIgmpTrkTableLastMgmtChange.setStatus("current")
_SvcIgmpTrkTable_Object = MibTable
svcIgmpTrkTable = _SvcIgmpTrkTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 50)
)
if mibBuilder.loadTexts:
    svcIgmpTrkTable.setStatus("current")
_SvcIgmpTrkEntry_Object = MibTableRow
svcIgmpTrkEntry = _SvcIgmpTrkEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 50, 1)
)
svcIgmpTrkEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcIgmpTrkEntry.setStatus("current")
_SvcIgmpTrkLastMgmtChange_Type = TimeStamp
_SvcIgmpTrkLastMgmtChange_Object = MibTableColumn
svcIgmpTrkLastMgmtChange = _SvcIgmpTrkLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 50, 1, 1),
    _SvcIgmpTrkLastMgmtChange_Type()
)
svcIgmpTrkLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIgmpTrkLastMgmtChange.setStatus("current")


class _SvcIgmpTrkAdminState_Type(TmnxAdminState):
    """Custom type svcIgmpTrkAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcIgmpTrkAdminState_Type.__name__ = "TmnxAdminState"
_SvcIgmpTrkAdminState_Object = MibTableColumn
svcIgmpTrkAdminState = _SvcIgmpTrkAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 50, 1, 2),
    _SvcIgmpTrkAdminState_Type()
)
svcIgmpTrkAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIgmpTrkAdminState.setStatus("current")


class _SvcIgmpTrkExpiryTime_Type(Unsigned32):
    """Custom type svcIgmpTrkExpiryTime based on Unsigned32"""
    defaultValue = 260

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SvcIgmpTrkExpiryTime_Type.__name__ = "Unsigned32"
_SvcIgmpTrkExpiryTime_Object = MibTableColumn
svcIgmpTrkExpiryTime = _SvcIgmpTrkExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 50, 1, 3),
    _SvcIgmpTrkExpiryTime_Type()
)
svcIgmpTrkExpiryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIgmpTrkExpiryTime.setStatus("current")
if mibBuilder.loadTexts:
    svcIgmpTrkExpiryTime.setUnits("seconds")
_SvcIpipeInfoTableLastMgmtChange_Type = TimeStamp
_SvcIpipeInfoTableLastMgmtChange_Object = MibScalar
svcIpipeInfoTableLastMgmtChange = _SvcIpipeInfoTableLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 51),
    _SvcIpipeInfoTableLastMgmtChange_Type()
)
svcIpipeInfoTableLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIpipeInfoTableLastMgmtChange.setStatus("current")
_SvcIpipeInfoTable_Object = MibTable
svcIpipeInfoTable = _SvcIpipeInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52)
)
if mibBuilder.loadTexts:
    svcIpipeInfoTable.setStatus("current")
_SvcIpipeInfoEntry_Object = MibTableRow
svcIpipeInfoEntry = _SvcIpipeInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1)
)
svcIpipeInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcIpipeInfoEntry.setStatus("current")
_SvcIpipeInfoLastMgmtChange_Type = TimeStamp
_SvcIpipeInfoLastMgmtChange_Object = MibTableColumn
svcIpipeInfoLastMgmtChange = _SvcIpipeInfoLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 1),
    _SvcIpipeInfoLastMgmtChange_Type()
)
svcIpipeInfoLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIpipeInfoLastMgmtChange.setStatus("current")


class _SvcIpipeCeAddressDiscovery_Type(TmnxEnabledDisabled):
    """Custom type svcIpipeCeAddressDiscovery based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcIpipeCeAddressDiscovery_Type.__name__ = "TmnxEnabledDisabled"
_SvcIpipeCeAddressDiscovery_Object = MibTableColumn
svcIpipeCeAddressDiscovery = _SvcIpipeCeAddressDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 2),
    _SvcIpipeCeAddressDiscovery_Type()
)
svcIpipeCeAddressDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeCeAddressDiscovery.setStatus("current")


class _SvcIpipeIpv6CeAddressDiscovery_Type(TmnxEnabledDisabled):
    """Custom type svcIpipeIpv6CeAddressDiscovery based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcIpipeIpv6CeAddressDiscovery_Type.__name__ = "TmnxEnabledDisabled"
_SvcIpipeIpv6CeAddressDiscovery_Object = MibTableColumn
svcIpipeIpv6CeAddressDiscovery = _SvcIpipeIpv6CeAddressDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 3),
    _SvcIpipeIpv6CeAddressDiscovery_Type()
)
svcIpipeIpv6CeAddressDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeIpv6CeAddressDiscovery.setStatus("current")


class _SvcIpipeStackCapabilitySignaling_Type(TmnxEnabledDisabled):
    """Custom type svcIpipeStackCapabilitySignaling based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcIpipeStackCapabilitySignaling_Type.__name__ = "TmnxEnabledDisabled"
_SvcIpipeStackCapabilitySignaling_Object = MibTableColumn
svcIpipeStackCapabilitySignaling = _SvcIpipeStackCapabilitySignaling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 4),
    _SvcIpipeStackCapabilitySignaling_Type()
)
svcIpipeStackCapabilitySignaling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeStackCapabilitySignaling.setStatus("current")


class _SvcIpipeCeAddressDiscoveryKeep_Type(TruthValue):
    """Custom type svcIpipeCeAddressDiscoveryKeep based on TruthValue"""
    defaultValue = 2


_SvcIpipeCeAddressDiscoveryKeep_Type.__name__ = "TruthValue"
_SvcIpipeCeAddressDiscoveryKeep_Object = MibTableColumn
svcIpipeCeAddressDiscoveryKeep = _SvcIpipeCeAddressDiscoveryKeep_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 5),
    _SvcIpipeCeAddressDiscoveryKeep_Type()
)
svcIpipeCeAddressDiscoveryKeep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeCeAddressDiscoveryKeep.setStatus("current")


class _SvcIpipeEthFaultNotifRecTimer_Type(Unsigned32):
    """Custom type svcIpipeEthFaultNotifRecTimer based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
    )


_SvcIpipeEthFaultNotifRecTimer_Type.__name__ = "Unsigned32"
_SvcIpipeEthFaultNotifRecTimer_Object = MibTableColumn
svcIpipeEthFaultNotifRecTimer = _SvcIpipeEthFaultNotifRecTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 6),
    _SvcIpipeEthFaultNotifRecTimer_Type()
)
svcIpipeEthFaultNotifRecTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeEthFaultNotifRecTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcIpipeEthFaultNotifRecTimer.setUnits("deciseconds")


class _SvcIpipeEthFaultNotifAdminState_Type(TmnxAdminState):
    """Custom type svcIpipeEthFaultNotifAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcIpipeEthFaultNotifAdminState_Type.__name__ = "TmnxAdminState"
_SvcIpipeEthFaultNotifAdminState_Object = MibTableColumn
svcIpipeEthFaultNotifAdminState = _SvcIpipeEthFaultNotifAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 52, 1, 7),
    _SvcIpipeEthFaultNotifAdminState_Type()
)
svcIpipeEthFaultNotifAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcIpipeEthFaultNotifAdminState.setStatus("current")
_SvcDhcpLeaseStateBgpTable_Object = MibTable
svcDhcpLeaseStateBgpTable = _SvcDhcpLeaseStateBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateBgpTable.setStatus("obsolete")
_SvcDhcpLeaseStateBgpEntry_Object = MibTableRow
svcDhcpLeaseStateBgpEntry = _SvcDhcpLeaseStateBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseStateBgpEntry.setStatus("current")
_SvcDhcpLseStateBgpPrngPlcyName_Type = TNamedItemOrEmpty
_SvcDhcpLseStateBgpPrngPlcyName_Object = MibTableColumn
svcDhcpLseStateBgpPrngPlcyName = _SvcDhcpLseStateBgpPrngPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 1),
    _SvcDhcpLseStateBgpPrngPlcyName_Type()
)
svcDhcpLseStateBgpPrngPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpPrngPlcyName.setStatus("obsolete")
_SvcDhcpLseStateBgpAuthKeyChain_Type = TNamedItemOrEmpty
_SvcDhcpLseStateBgpAuthKeyChain_Object = MibTableColumn
svcDhcpLseStateBgpAuthKeyChain = _SvcDhcpLseStateBgpAuthKeyChain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 2),
    _SvcDhcpLseStateBgpAuthKeyChain_Type()
)
svcDhcpLseStateBgpAuthKeyChain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpAuthKeyChain.setStatus("obsolete")


class _SvcDhcpLseStateBgpMD5AuthKey_Type(OctetString):
    """Custom type svcDhcpLseStateBgpMD5AuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLseStateBgpMD5AuthKey_Type.__name__ = "OctetString"
_SvcDhcpLseStateBgpMD5AuthKey_Object = MibTableColumn
svcDhcpLseStateBgpMD5AuthKey = _SvcDhcpLseStateBgpMD5AuthKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 3),
    _SvcDhcpLseStateBgpMD5AuthKey_Type()
)
svcDhcpLseStateBgpMD5AuthKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpMD5AuthKey.setStatus("obsolete")
_SvcDhcpLseStateBgpImportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcDhcpLseStateBgpImportPolicy_Object = MibTableColumn
svcDhcpLseStateBgpImportPolicy = _SvcDhcpLseStateBgpImportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 4),
    _SvcDhcpLseStateBgpImportPolicy_Type()
)
svcDhcpLseStateBgpImportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpImportPolicy.setStatus("obsolete")
_SvcDhcpLseStateBgpExportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcDhcpLseStateBgpExportPolicy_Object = MibTableColumn
svcDhcpLseStateBgpExportPolicy = _SvcDhcpLseStateBgpExportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 5),
    _SvcDhcpLseStateBgpExportPolicy_Type()
)
svcDhcpLseStateBgpExportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpExportPolicy.setStatus("obsolete")
_SvcDhcpLseStateBgpPeerAS_Type = InetAutonomousSystemNumber
_SvcDhcpLseStateBgpPeerAS_Object = MibTableColumn
svcDhcpLseStateBgpPeerAS = _SvcDhcpLseStateBgpPeerAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 6),
    _SvcDhcpLseStateBgpPeerAS_Type()
)
svcDhcpLseStateBgpPeerAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpPeerAS.setStatus("obsolete")
_SvcDhcpLseStateBgpPeeringStatus_Type = BgpPeeringStatus
_SvcDhcpLseStateBgpPeeringStatus_Object = MibTableColumn
svcDhcpLseStateBgpPeeringStatus = _SvcDhcpLseStateBgpPeeringStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 53, 1, 7),
    _SvcDhcpLseStateBgpPeeringStatus_Type()
)
svcDhcpLseStateBgpPeeringStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLseStateBgpPeeringStatus.setStatus("obsolete")
_SvcArpHostMRtTable_Object = MibTable
svcArpHostMRtTable = _SvcArpHostMRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54)
)
if mibBuilder.loadTexts:
    svcArpHostMRtTable.setStatus("current")
_SvcArpHostMRtEntry_Object = MibTableRow
svcArpHostMRtEntry = _SvcArpHostMRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1)
)
svcArpHostMRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddr"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostMRtAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostMRtAddr"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostMRtPrefixLen"),
)
if mibBuilder.loadTexts:
    svcArpHostMRtEntry.setStatus("current")
_SvcArpHostMRtAddrType_Type = InetAddressType
_SvcArpHostMRtAddrType_Object = MibTableColumn
svcArpHostMRtAddrType = _SvcArpHostMRtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 1),
    _SvcArpHostMRtAddrType_Type()
)
svcArpHostMRtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostMRtAddrType.setStatus("current")


class _SvcArpHostMRtAddr_Type(InetAddress):
    """Custom type svcArpHostMRtAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcArpHostMRtAddr_Type.__name__ = "InetAddress"
_SvcArpHostMRtAddr_Object = MibTableColumn
svcArpHostMRtAddr = _SvcArpHostMRtAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 2),
    _SvcArpHostMRtAddr_Type()
)
svcArpHostMRtAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostMRtAddr.setStatus("current")
_SvcArpHostMRtPrefixLen_Type = InetAddressPrefixLength
_SvcArpHostMRtPrefixLen_Object = MibTableColumn
svcArpHostMRtPrefixLen = _SvcArpHostMRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 3),
    _SvcArpHostMRtPrefixLen_Type()
)
svcArpHostMRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostMRtPrefixLen.setStatus("current")
_SvcArpHostMRtStatus_Type = TmnxManagedRouteStatus
_SvcArpHostMRtStatus_Object = MibTableColumn
svcArpHostMRtStatus = _SvcArpHostMRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 4),
    _SvcArpHostMRtStatus_Type()
)
svcArpHostMRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostMRtStatus.setStatus("current")
_SvcArpHostMRtMetric_Type = TmnxRadiusFramedRouteMetric
_SvcArpHostMRtMetric_Object = MibTableColumn
svcArpHostMRtMetric = _SvcArpHostMRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 5),
    _SvcArpHostMRtMetric_Type()
)
svcArpHostMRtMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostMRtMetric.setStatus("current")
_SvcArpHostMRtPreference_Type = TmnxRadiusFramedRoutePreference
_SvcArpHostMRtPreference_Object = MibTableColumn
svcArpHostMRtPreference = _SvcArpHostMRtPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 6),
    _SvcArpHostMRtPreference_Type()
)
svcArpHostMRtPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostMRtPreference.setStatus("current")
_SvcArpHostMRtTag_Type = TmnxRadiusFramedRouteTag
_SvcArpHostMRtTag_Object = MibTableColumn
svcArpHostMRtTag = _SvcArpHostMRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 54, 1, 7),
    _SvcArpHostMRtTag_Type()
)
svcArpHostMRtTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostMRtTag.setStatus("current")
_SvcArpHostBgpTable_Object = MibTable
svcArpHostBgpTable = _SvcArpHostBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55)
)
if mibBuilder.loadTexts:
    svcArpHostBgpTable.setStatus("current")
_SvcArpHostBgpEntry_Object = MibTableRow
svcArpHostBgpEntry = _SvcArpHostBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1)
)
if mibBuilder.loadTexts:
    svcArpHostBgpEntry.setStatus("current")
_SvcArpHostBgpPrngPlcyName_Type = TNamedItemOrEmpty
_SvcArpHostBgpPrngPlcyName_Object = MibTableColumn
svcArpHostBgpPrngPlcyName = _SvcArpHostBgpPrngPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 1),
    _SvcArpHostBgpPrngPlcyName_Type()
)
svcArpHostBgpPrngPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpPrngPlcyName.setStatus("current")
_SvcArpHostBgpAuthKeyChain_Type = TNamedItemOrEmpty
_SvcArpHostBgpAuthKeyChain_Object = MibTableColumn
svcArpHostBgpAuthKeyChain = _SvcArpHostBgpAuthKeyChain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 2),
    _SvcArpHostBgpAuthKeyChain_Type()
)
svcArpHostBgpAuthKeyChain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpAuthKeyChain.setStatus("current")


class _SvcArpHostBgpMD5AuthKey_Type(OctetString):
    """Custom type svcArpHostBgpMD5AuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcArpHostBgpMD5AuthKey_Type.__name__ = "OctetString"
_SvcArpHostBgpMD5AuthKey_Object = MibTableColumn
svcArpHostBgpMD5AuthKey = _SvcArpHostBgpMD5AuthKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 3),
    _SvcArpHostBgpMD5AuthKey_Type()
)
svcArpHostBgpMD5AuthKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpMD5AuthKey.setStatus("current")
_SvcArpHostBgpImportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcArpHostBgpImportPolicy_Object = MibTableColumn
svcArpHostBgpImportPolicy = _SvcArpHostBgpImportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 4),
    _SvcArpHostBgpImportPolicy_Type()
)
svcArpHostBgpImportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpImportPolicy.setStatus("current")
_SvcArpHostBgpExportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcArpHostBgpExportPolicy_Object = MibTableColumn
svcArpHostBgpExportPolicy = _SvcArpHostBgpExportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 5),
    _SvcArpHostBgpExportPolicy_Type()
)
svcArpHostBgpExportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpExportPolicy.setStatus("current")
_SvcArpHostBgpPeerAS_Type = InetAutonomousSystemNumber
_SvcArpHostBgpPeerAS_Object = MibTableColumn
svcArpHostBgpPeerAS = _SvcArpHostBgpPeerAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 6),
    _SvcArpHostBgpPeerAS_Type()
)
svcArpHostBgpPeerAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpPeerAS.setStatus("current")
_SvcArpHostBgpPeeringStatus_Type = BgpPeeringStatus
_SvcArpHostBgpPeeringStatus_Object = MibTableColumn
svcArpHostBgpPeeringStatus = _SvcArpHostBgpPeeringStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 55, 1, 7),
    _SvcArpHostBgpPeeringStatus_Type()
)
svcArpHostBgpPeeringStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostBgpPeeringStatus.setStatus("current")
_SvcEpMcEpStatsTable_Object = MibTable
svcEpMcEpStatsTable = _SvcEpMcEpStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56)
)
if mibBuilder.loadTexts:
    svcEpMcEpStatsTable.setStatus("current")
_SvcEpMcEpStatsEntry_Object = MibTableRow
svcEpMcEpStatsEntry = _SvcEpMcEpStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1)
)
svcEpMcEpStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcEndPointMCEPId"),
)
if mibBuilder.loadTexts:
    svcEpMcEpStatsEntry.setStatus("current")
_SvcEpMcEpStatsPktsRxConfig_Type = Counter32
_SvcEpMcEpStatsPktsRxConfig_Object = MibTableColumn
svcEpMcEpStatsPktsRxConfig = _SvcEpMcEpStatsPktsRxConfig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1, 1),
    _SvcEpMcEpStatsPktsRxConfig_Type()
)
svcEpMcEpStatsPktsRxConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpMcEpStatsPktsRxConfig.setStatus("current")
_SvcEpMcEpStatsPktsRxState_Type = Counter32
_SvcEpMcEpStatsPktsRxState_Object = MibTableColumn
svcEpMcEpStatsPktsRxState = _SvcEpMcEpStatsPktsRxState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1, 2),
    _SvcEpMcEpStatsPktsRxState_Type()
)
svcEpMcEpStatsPktsRxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpMcEpStatsPktsRxState.setStatus("current")
_SvcEpMcEpStatsPktsTxConfig_Type = Counter32
_SvcEpMcEpStatsPktsTxConfig_Object = MibTableColumn
svcEpMcEpStatsPktsTxConfig = _SvcEpMcEpStatsPktsTxConfig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1, 3),
    _SvcEpMcEpStatsPktsTxConfig_Type()
)
svcEpMcEpStatsPktsTxConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpMcEpStatsPktsTxConfig.setStatus("current")
_SvcEpMcEpStatsPktsTxState_Type = Counter32
_SvcEpMcEpStatsPktsTxState_Object = MibTableColumn
svcEpMcEpStatsPktsTxState = _SvcEpMcEpStatsPktsTxState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1, 4),
    _SvcEpMcEpStatsPktsTxState_Type()
)
svcEpMcEpStatsPktsTxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpMcEpStatsPktsTxState.setStatus("current")
_SvcEpMcEpStatsPktsTxFailed_Type = Counter32
_SvcEpMcEpStatsPktsTxFailed_Object = MibTableColumn
svcEpMcEpStatsPktsTxFailed = _SvcEpMcEpStatsPktsTxFailed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 56, 1, 5),
    _SvcEpMcEpStatsPktsTxFailed_Type()
)
svcEpMcEpStatsPktsTxFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpMcEpStatsPktsTxFailed.setStatus("current")


class _SvcPbbSrcBVplsMacAddr_Type(MacAddress):
    """Custom type svcPbbSrcBVplsMacAddr based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcPbbSrcBVplsMacAddr_Type.__name__ = "MacAddress"
_SvcPbbSrcBVplsMacAddr_Object = MibScalar
svcPbbSrcBVplsMacAddr = _SvcPbbSrcBVplsMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 57),
    _SvcPbbSrcBVplsMacAddr_Type()
)
svcPbbSrcBVplsMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPbbSrcBVplsMacAddr.setStatus("current")
_SvcMacNameTableLastChanged_Type = TimeStamp
_SvcMacNameTableLastChanged_Object = MibScalar
svcMacNameTableLastChanged = _SvcMacNameTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 58),
    _SvcMacNameTableLastChanged_Type()
)
svcMacNameTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacNameTableLastChanged.setStatus("current")
_SvcMacNameTable_Object = MibTable
svcMacNameTable = _SvcMacNameTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59)
)
if mibBuilder.loadTexts:
    svcMacNameTable.setStatus("current")
_SvcMacNameEntry_Object = MibTableRow
svcMacNameEntry = _SvcMacNameEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59, 1)
)
svcMacNameEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMacName"),
)
if mibBuilder.loadTexts:
    svcMacNameEntry.setStatus("current")
_SvcMacName_Type = TNamedItem
_SvcMacName_Object = MibTableColumn
svcMacName = _SvcMacName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59, 1, 1),
    _SvcMacName_Type()
)
svcMacName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMacName.setStatus("current")
_SvcMacNameRowStatus_Type = RowStatus
_SvcMacNameRowStatus_Object = MibTableColumn
svcMacNameRowStatus = _SvcMacNameRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59, 1, 2),
    _SvcMacNameRowStatus_Type()
)
svcMacNameRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacNameRowStatus.setStatus("current")
_SvcMacNameLastChngd_Type = TimeStamp
_SvcMacNameLastChngd_Object = MibTableColumn
svcMacNameLastChngd = _SvcMacNameLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59, 1, 3),
    _SvcMacNameLastChngd_Type()
)
svcMacNameLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacNameLastChngd.setStatus("current")
_SvcMacNameAddr_Type = MacAddress
_SvcMacNameAddr_Object = MibTableColumn
svcMacNameAddr = _SvcMacNameAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 59, 1, 4),
    _SvcMacNameAddr_Type()
)
svcMacNameAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacNameAddr.setStatus("current")
_SvcMacNotificationGroup_ObjectIdentity = ObjectIdentity
svcMacNotificationGroup = _SvcMacNotificationGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 60)
)


class _SvcMacNotifInterval_Type(Unsigned32):
    """Custom type svcMacNotifInterval based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_SvcMacNotifInterval_Type.__name__ = "Unsigned32"
_SvcMacNotifInterval_Object = MibScalar
svcMacNotifInterval = _SvcMacNotifInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 60, 1),
    _SvcMacNotifInterval_Type()
)
svcMacNotifInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMacNotifInterval.setStatus("current")
if mibBuilder.loadTexts:
    svcMacNotifInterval.setUnits("deciseconds")


class _SvcMacNotifCount_Type(Unsigned32):
    """Custom type svcMacNotifCount based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcMacNotifCount_Type.__name__ = "Unsigned32"
_SvcMacNotifCount_Object = MibScalar
svcMacNotifCount = _SvcMacNotifCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 60, 2),
    _SvcMacNotifCount_Type()
)
svcMacNotifCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMacNotifCount.setStatus("current")
_TlsProtMacImplTable_Object = MibTable
tlsProtMacImplTable = _TlsProtMacImplTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61)
)
if mibBuilder.loadTexts:
    tlsProtMacImplTable.setStatus("current")
_TlsProtMacImplEntry_Object = MibTableRow
tlsProtMacImplEntry = _TlsProtMacImplEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1)
)
tlsProtMacImplEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacImplMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacImplLocale"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacImplPortId"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacImplEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsProtMacImplSdpBindId"),
)
if mibBuilder.loadTexts:
    tlsProtMacImplEntry.setStatus("current")
_TlsProtMacImplMacAddr_Type = MacAddress
_TlsProtMacImplMacAddr_Object = MibTableColumn
tlsProtMacImplMacAddr = _TlsProtMacImplMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 1),
    _TlsProtMacImplMacAddr_Type()
)
tlsProtMacImplMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacImplMacAddr.setStatus("current")


class _TlsProtMacImplLocale_Type(Integer32):
    """Custom type tlsProtMacImplLocale based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("sap", 1),
          ("sdp", 2))
    )


_TlsProtMacImplLocale_Type.__name__ = "Integer32"
_TlsProtMacImplLocale_Object = MibTableColumn
tlsProtMacImplLocale = _TlsProtMacImplLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 2),
    _TlsProtMacImplLocale_Type()
)
tlsProtMacImplLocale.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacImplLocale.setStatus("current")
_TlsProtMacImplPortId_Type = TmnxPortID
_TlsProtMacImplPortId_Object = MibTableColumn
tlsProtMacImplPortId = _TlsProtMacImplPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 3),
    _TlsProtMacImplPortId_Type()
)
tlsProtMacImplPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacImplPortId.setStatus("current")
_TlsProtMacImplEncapValue_Type = TmnxEncapVal
_TlsProtMacImplEncapValue_Object = MibTableColumn
tlsProtMacImplEncapValue = _TlsProtMacImplEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 4),
    _TlsProtMacImplEncapValue_Type()
)
tlsProtMacImplEncapValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacImplEncapValue.setStatus("current")
_TlsProtMacImplSdpBindId_Type = SdpBindId
_TlsProtMacImplSdpBindId_Object = MibTableColumn
tlsProtMacImplSdpBindId = _TlsProtMacImplSdpBindId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 5),
    _TlsProtMacImplSdpBindId_Type()
)
tlsProtMacImplSdpBindId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsProtMacImplSdpBindId.setStatus("current")
_TlsProtMacImplCount_Type = Counter32
_TlsProtMacImplCount_Object = MibTableColumn
tlsProtMacImplCount = _TlsProtMacImplCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 61, 1, 6),
    _TlsProtMacImplCount_Type()
)
tlsProtMacImplCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsProtMacImplCount.setStatus("current")
_SvcNameTableLastChanged_Type = TimeStamp
_SvcNameTableLastChanged_Object = MibScalar
svcNameTableLastChanged = _SvcNameTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 62),
    _SvcNameTableLastChanged_Type()
)
svcNameTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNameTableLastChanged.setStatus("current")
_SvcNameTable_Object = MibTable
svcNameTable = _SvcNameTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63)
)
if mibBuilder.loadTexts:
    svcNameTable.setStatus("current")
_SvcNameEntry_Object = MibTableRow
svcNameEntry = _SvcNameEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1)
)
svcNameEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcName"),
)
if mibBuilder.loadTexts:
    svcNameEntry.setStatus("current")


class _SvcNameId_Type(TmnxServId):
    """Custom type svcNameId based on TmnxServId"""
    defaultValue = 0


_SvcNameId_Type.__name__ = "TmnxServId"
_SvcNameId_Object = MibTableColumn
svcNameId = _SvcNameId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1, 1),
    _SvcNameId_Type()
)
svcNameId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNameId.setStatus("current")
_SvcNameRowStatus_Type = RowStatus
_SvcNameRowStatus_Object = MibTableColumn
svcNameRowStatus = _SvcNameRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1, 2),
    _SvcNameRowStatus_Type()
)
svcNameRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNameRowStatus.setStatus("current")
_SvcNameLastChanged_Type = TimeStamp
_SvcNameLastChanged_Object = MibTableColumn
svcNameLastChanged = _SvcNameLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1, 3),
    _SvcNameLastChanged_Type()
)
svcNameLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNameLastChanged.setStatus("current")


class _SvcNameType_Type(ServType):
    """Custom type svcNameType based on ServType"""
    defaultValue = 0


_SvcNameType_Type.__name__ = "ServType"
_SvcNameType_Object = MibTableColumn
svcNameType = _SvcNameType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1, 4),
    _SvcNameType_Type()
)
svcNameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNameType.setStatus("current")


class _SvcNameCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcNameCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcNameCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcNameCreationOrigin_Object = MibTableColumn
svcNameCreationOrigin = _SvcNameCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 63, 1, 5),
    _SvcNameCreationOrigin_Type()
)
svcNameCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcNameCreationOrigin.setStatus("current")
_SvcMrpPlcyTableLastChgd_Type = TimeStamp
_SvcMrpPlcyTableLastChgd_Object = MibScalar
svcMrpPlcyTableLastChgd = _SvcMrpPlcyTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 64),
    _SvcMrpPlcyTableLastChgd_Type()
)
svcMrpPlcyTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPlcyTableLastChgd.setStatus("current")
_SvcMrpPolicyTable_Object = MibTable
svcMrpPolicyTable = _SvcMrpPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65)
)
if mibBuilder.loadTexts:
    svcMrpPolicyTable.setStatus("current")
_SvcMrpPolicyEntry_Object = MibTableRow
svcMrpPolicyEntry = _SvcMrpPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1)
)
svcMrpPolicyEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyName"),
)
if mibBuilder.loadTexts:
    svcMrpPolicyEntry.setStatus("current")
_SvcMrpPolicyName_Type = TNamedItem
_SvcMrpPolicyName_Object = MibTableColumn
svcMrpPolicyName = _SvcMrpPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 1),
    _SvcMrpPolicyName_Type()
)
svcMrpPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMrpPolicyName.setStatus("current")
_SvcMrpPolicyRowStatus_Type = RowStatus
_SvcMrpPolicyRowStatus_Object = MibTableColumn
svcMrpPolicyRowStatus = _SvcMrpPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 2),
    _SvcMrpPolicyRowStatus_Type()
)
svcMrpPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyRowStatus.setStatus("current")
_SvcMrpPolicyLastChanged_Type = TimeStamp
_SvcMrpPolicyLastChanged_Object = MibTableColumn
svcMrpPolicyLastChanged = _SvcMrpPolicyLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 3),
    _SvcMrpPolicyLastChanged_Type()
)
svcMrpPolicyLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPolicyLastChanged.setStatus("current")


class _SvcMrpPolicyDescription_Type(TItemDescription):
    """Custom type svcMrpPolicyDescription based on TItemDescription"""
    defaultValue = OctetString("")


_SvcMrpPolicyDescription_Type.__name__ = "TItemDescription"
_SvcMrpPolicyDescription_Object = MibTableColumn
svcMrpPolicyDescription = _SvcMrpPolicyDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 4),
    _SvcMrpPolicyDescription_Type()
)
svcMrpPolicyDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyDescription.setStatus("current")


class _SvcMrpPolicyScope_Type(TItemScope):
    """Custom type svcMrpPolicyScope based on TItemScope"""
    defaultValue = 2


_SvcMrpPolicyScope_Type.__name__ = "TItemScope"
_SvcMrpPolicyScope_Object = MibTableColumn
svcMrpPolicyScope = _SvcMrpPolicyScope_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 5),
    _SvcMrpPolicyScope_Type()
)
svcMrpPolicyScope.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyScope.setStatus("current")


class _SvcMrpPolicyDefaultAction_Type(TMrpPolicyDefaultAction):
    """Custom type svcMrpPolicyDefaultAction based on TMrpPolicyDefaultAction"""
    defaultValue = 2


_SvcMrpPolicyDefaultAction_Type.__name__ = "TMrpPolicyDefaultAction"
_SvcMrpPolicyDefaultAction_Object = MibTableColumn
svcMrpPolicyDefaultAction = _SvcMrpPolicyDefaultAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 65, 1, 6),
    _SvcMrpPolicyDefaultAction_Type()
)
svcMrpPolicyDefaultAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyDefaultAction.setStatus("current")
_SvcMrpPlcyParamsTblLastChgd_Type = TimeStamp
_SvcMrpPlcyParamsTblLastChgd_Object = MibScalar
svcMrpPlcyParamsTblLastChgd = _SvcMrpPlcyParamsTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 66),
    _SvcMrpPlcyParamsTblLastChgd_Type()
)
svcMrpPlcyParamsTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPlcyParamsTblLastChgd.setStatus("current")
_SvcMrpPolicyParamsTable_Object = MibTable
svcMrpPolicyParamsTable = _SvcMrpPolicyParamsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67)
)
if mibBuilder.loadTexts:
    svcMrpPolicyParamsTable.setStatus("current")
_SvcMrpPolicyParamsEntry_Object = MibTableRow
svcMrpPolicyParamsEntry = _SvcMrpPolicyParamsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1)
)
svcMrpPolicyParamsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyName"),
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyParamsEntryId"),
)
if mibBuilder.loadTexts:
    svcMrpPolicyParamsEntry.setStatus("current")
_SvcMrpPolicyParamsEntryId_Type = TEntryId
_SvcMrpPolicyParamsEntryId_Object = MibTableColumn
svcMrpPolicyParamsEntryId = _SvcMrpPolicyParamsEntryId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1, 1),
    _SvcMrpPolicyParamsEntryId_Type()
)
svcMrpPolicyParamsEntryId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsEntryId.setStatus("current")
_SvcMrpPolicyParamsRowStatus_Type = RowStatus
_SvcMrpPolicyParamsRowStatus_Object = MibTableColumn
svcMrpPolicyParamsRowStatus = _SvcMrpPolicyParamsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1, 2),
    _SvcMrpPolicyParamsRowStatus_Type()
)
svcMrpPolicyParamsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsRowStatus.setStatus("current")
_SvcMrpPolicyParamsLastChanged_Type = TimeStamp
_SvcMrpPolicyParamsLastChanged_Object = MibTableColumn
svcMrpPolicyParamsLastChanged = _SvcMrpPolicyParamsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1, 3),
    _SvcMrpPolicyParamsLastChanged_Type()
)
svcMrpPolicyParamsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsLastChanged.setStatus("current")


class _SvcMrpPolicyParamsDescription_Type(TItemDescription):
    """Custom type svcMrpPolicyParamsDescription based on TItemDescription"""
    defaultValue = OctetString("")


_SvcMrpPolicyParamsDescription_Type.__name__ = "TItemDescription"
_SvcMrpPolicyParamsDescription_Object = MibTableColumn
svcMrpPolicyParamsDescription = _SvcMrpPolicyParamsDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1, 4),
    _SvcMrpPolicyParamsDescription_Type()
)
svcMrpPolicyParamsDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsDescription.setStatus("current")


class _SvcMrpPolicyParamsAction_Type(TMrpPolicyAction):
    """Custom type svcMrpPolicyParamsAction based on TMrpPolicyAction"""
    defaultValue = 0


_SvcMrpPolicyParamsAction_Type.__name__ = "TMrpPolicyAction"
_SvcMrpPolicyParamsAction_Object = MibTableColumn
svcMrpPolicyParamsAction = _SvcMrpPolicyParamsAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 67, 1, 5),
    _SvcMrpPolicyParamsAction_Type()
)
svcMrpPolicyParamsAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsAction.setStatus("current")
_SvcMrpPlcyParamsISIDTblLastChgd_Type = TimeStamp
_SvcMrpPlcyParamsISIDTblLastChgd_Object = MibScalar
svcMrpPlcyParamsISIDTblLastChgd = _SvcMrpPlcyParamsISIDTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 68),
    _SvcMrpPlcyParamsISIDTblLastChgd_Type()
)
svcMrpPlcyParamsISIDTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPlcyParamsISIDTblLastChgd.setStatus("current")
_SvcMrpPolicyParamsISIDTable_Object = MibTable
svcMrpPolicyParamsISIDTable = _SvcMrpPolicyParamsISIDTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69)
)
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDTable.setStatus("current")
_SvcMrpPolicyParamsISIDEntry_Object = MibTableRow
svcMrpPolicyParamsISIDEntry = _SvcMrpPolicyParamsISIDEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69, 1)
)
svcMrpPolicyParamsISIDEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyName"),
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyParamsEntryId"),
    (0, "TIMETRA-SERV-MIB", "svcMrpPolicyParamsISIDLow"),
)
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDEntry.setStatus("current")


class _SvcMrpPolicyParamsISIDLow_Type(SvcISID):
    """Custom type svcMrpPolicyParamsISIDLow based on SvcISID"""
    subtypeSpec = SvcISID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_SvcMrpPolicyParamsISIDLow_Type.__name__ = "SvcISID"
_SvcMrpPolicyParamsISIDLow_Object = MibTableColumn
svcMrpPolicyParamsISIDLow = _SvcMrpPolicyParamsISIDLow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69, 1, 1),
    _SvcMrpPolicyParamsISIDLow_Type()
)
svcMrpPolicyParamsISIDLow.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDLow.setStatus("current")


class _SvcMrpPolicyParamsISIDHigh_Type(SvcISID):
    """Custom type svcMrpPolicyParamsISIDHigh based on SvcISID"""
    subtypeSpec = SvcISID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_SvcMrpPolicyParamsISIDHigh_Type.__name__ = "SvcISID"
_SvcMrpPolicyParamsISIDHigh_Object = MibTableColumn
svcMrpPolicyParamsISIDHigh = _SvcMrpPolicyParamsISIDHigh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69, 1, 2),
    _SvcMrpPolicyParamsISIDHigh_Type()
)
svcMrpPolicyParamsISIDHigh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDHigh.setStatus("current")
_SvcMrpPolicyParamsISIDRowStatus_Type = RowStatus
_SvcMrpPolicyParamsISIDRowStatus_Object = MibTableColumn
svcMrpPolicyParamsISIDRowStatus = _SvcMrpPolicyParamsISIDRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69, 1, 3),
    _SvcMrpPolicyParamsISIDRowStatus_Type()
)
svcMrpPolicyParamsISIDRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDRowStatus.setStatus("current")
_SvcMrpPolicyParamsISIDLastChgd_Type = TimeStamp
_SvcMrpPolicyParamsISIDLastChgd_Object = MibTableColumn
svcMrpPolicyParamsISIDLastChgd = _SvcMrpPolicyParamsISIDLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 69, 1, 4),
    _SvcMrpPolicyParamsISIDLastChgd_Type()
)
svcMrpPolicyParamsISIDLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMrpPolicyParamsISIDLastChgd.setStatus("current")
_SvcEpipeTableLastChanged_Type = TimeStamp
_SvcEpipeTableLastChanged_Object = MibScalar
svcEpipeTableLastChanged = _SvcEpipeTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 70),
    _SvcEpipeTableLastChanged_Type()
)
svcEpipeTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeTableLastChanged.setStatus("current")
_SvcEpipeTable_Object = MibTable
svcEpipeTable = _SvcEpipeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71)
)
if mibBuilder.loadTexts:
    svcEpipeTable.setStatus("current")
_SvcEpipeEntry_Object = MibTableRow
svcEpipeEntry = _SvcEpipeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1)
)
svcEpipeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEpipeEntry.setStatus("current")
_SvcEpipeLastChngd_Type = TimeStamp
_SvcEpipeLastChngd_Object = MibTableColumn
svcEpipeLastChngd = _SvcEpipeLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 1),
    _SvcEpipeLastChngd_Type()
)
svcEpipeLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeLastChngd.setStatus("current")


class _SvcEpipePerSvcHashing_Type(TmnxEnabledDisabled):
    """Custom type svcEpipePerSvcHashing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcEpipePerSvcHashing_Type.__name__ = "TmnxEnabledDisabled"
_SvcEpipePerSvcHashing_Object = MibTableColumn
svcEpipePerSvcHashing = _SvcEpipePerSvcHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 2),
    _SvcEpipePerSvcHashing_Type()
)
svcEpipePerSvcHashing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipePerSvcHashing.setStatus("current")


class _SvcEpipeVxlanSrcTepIpAddrType_Type(InetAddressType):
    """Custom type svcEpipeVxlanSrcTepIpAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEpipeVxlanSrcTepIpAddrType_Type.__name__ = "InetAddressType"
_SvcEpipeVxlanSrcTepIpAddrType_Object = MibTableColumn
svcEpipeVxlanSrcTepIpAddrType = _SvcEpipeVxlanSrcTepIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 3),
    _SvcEpipeVxlanSrcTepIpAddrType_Type()
)
svcEpipeVxlanSrcTepIpAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeVxlanSrcTepIpAddrType.setStatus("current")


class _SvcEpipeVxlanSrcTepIpAddr_Type(InetAddress):
    """Custom type svcEpipeVxlanSrcTepIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEpipeVxlanSrcTepIpAddr_Type.__name__ = "InetAddress"
_SvcEpipeVxlanSrcTepIpAddr_Object = MibTableColumn
svcEpipeVxlanSrcTepIpAddr = _SvcEpipeVxlanSrcTepIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 4),
    _SvcEpipeVxlanSrcTepIpAddr_Type()
)
svcEpipeVxlanSrcTepIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeVxlanSrcTepIpAddr.setStatus("current")
_SvcEpipeFwdWhlSalePortId_Type = TmnxPortID
_SvcEpipeFwdWhlSalePortId_Object = MibTableColumn
svcEpipeFwdWhlSalePortId = _SvcEpipeFwdWhlSalePortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 5),
    _SvcEpipeFwdWhlSalePortId_Type()
)
svcEpipeFwdWhlSalePortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeFwdWhlSalePortId.setStatus("current")
_SvcEpipeFwdWhlSaleEncapValue_Type = TmnxEncapVal
_SvcEpipeFwdWhlSaleEncapValue_Object = MibTableColumn
svcEpipeFwdWhlSaleEncapValue = _SvcEpipeFwdWhlSaleEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 6),
    _SvcEpipeFwdWhlSaleEncapValue_Type()
)
svcEpipeFwdWhlSaleEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeFwdWhlSaleEncapValue.setStatus("current")


class _SvcEpipeIgnoreL2VpnMtuMismatch_Type(TmnxEnabledDisabled):
    """Custom type svcEpipeIgnoreL2VpnMtuMismatch based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcEpipeIgnoreL2VpnMtuMismatch_Type.__name__ = "TmnxEnabledDisabled"
_SvcEpipeIgnoreL2VpnMtuMismatch_Object = MibTableColumn
svcEpipeIgnoreL2VpnMtuMismatch = _SvcEpipeIgnoreL2VpnMtuMismatch_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 7),
    _SvcEpipeIgnoreL2VpnMtuMismatch_Type()
)
svcEpipeIgnoreL2VpnMtuMismatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeIgnoreL2VpnMtuMismatch.setStatus("current")


class _SvcEpipeLblEthOrIpL4TEID_Type(TruthValue):
    """Custom type svcEpipeLblEthOrIpL4TEID based on TruthValue"""
    defaultValue = 2


_SvcEpipeLblEthOrIpL4TEID_Type.__name__ = "TruthValue"
_SvcEpipeLblEthOrIpL4TEID_Object = MibTableColumn
svcEpipeLblEthOrIpL4TEID = _SvcEpipeLblEthOrIpL4TEID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 71, 1, 8),
    _SvcEpipeLblEthOrIpL4TEID_Type()
)
svcEpipeLblEthOrIpL4TEID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeLblEthOrIpL4TEID.setStatus("current")
_SvcEpipeBackboneTableLastChanged_Type = TimeStamp
_SvcEpipeBackboneTableLastChanged_Object = MibScalar
svcEpipeBackboneTableLastChanged = _SvcEpipeBackboneTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 72),
    _SvcEpipeBackboneTableLastChanged_Type()
)
svcEpipeBackboneTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeBackboneTableLastChanged.setStatus("current")
_SvcEpipeBackboneTable_Object = MibTable
svcEpipeBackboneTable = _SvcEpipeBackboneTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 73)
)
if mibBuilder.loadTexts:
    svcEpipeBackboneTable.setStatus("current")
_SvcEpipeBackboneEntry_Object = MibTableRow
svcEpipeBackboneEntry = _SvcEpipeBackboneEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 73, 1)
)
svcEpipeBackboneEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEpipeBackboneEntry.setStatus("current")
_SvcEpipeBackboneLastChngd_Type = TimeStamp
_SvcEpipeBackboneLastChngd_Object = MibTableColumn
svcEpipeBackboneLastChngd = _SvcEpipeBackboneLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 73, 1, 1),
    _SvcEpipeBackboneLastChngd_Type()
)
svcEpipeBackboneLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeBackboneLastChngd.setStatus("current")


class _SvcEpipeBackboneForceQTagFwd_Type(TruthValue):
    """Custom type svcEpipeBackboneForceQTagFwd based on TruthValue"""
    defaultValue = 2


_SvcEpipeBackboneForceQTagFwd_Type.__name__ = "TruthValue"
_SvcEpipeBackboneForceQTagFwd_Object = MibTableColumn
svcEpipeBackboneForceQTagFwd = _SvcEpipeBackboneForceQTagFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 73, 1, 2),
    _SvcEpipeBackboneForceQTagFwd_Type()
)
svcEpipeBackboneForceQTagFwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeBackboneForceQTagFwd.setStatus("current")


class _SvcEpipeBackboneLocalSwitchSvc_Type(Integer32):
    """Custom type svcEpipeBackboneLocalSwitchSvc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("sap", 0),
          ("pbbTunnel", 1))
    )


_SvcEpipeBackboneLocalSwitchSvc_Type.__name__ = "Integer32"
_SvcEpipeBackboneLocalSwitchSvc_Object = MibTableColumn
svcEpipeBackboneLocalSwitchSvc = _SvcEpipeBackboneLocalSwitchSvc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 73, 1, 3),
    _SvcEpipeBackboneLocalSwitchSvc_Type()
)
svcEpipeBackboneLocalSwitchSvc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcEpipeBackboneLocalSwitchSvc.setStatus("current")
_SvcTlsSiteIdTblLastChanged_Type = TimeStamp
_SvcTlsSiteIdTblLastChanged_Object = MibScalar
svcTlsSiteIdTblLastChanged = _SvcTlsSiteIdTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 74),
    _SvcTlsSiteIdTblLastChanged_Type()
)
svcTlsSiteIdTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdTblLastChanged.setStatus("current")
_SvcTlsSiteIdTable_Object = MibTable
svcTlsSiteIdTable = _SvcTlsSiteIdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75)
)
if mibBuilder.loadTexts:
    svcTlsSiteIdTable.setStatus("current")
_SvcTlsSiteIdEntry_Object = MibTableRow
svcTlsSiteIdEntry = _SvcTlsSiteIdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1)
)
svcTlsSiteIdEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsSiteIdName"),
)
if mibBuilder.loadTexts:
    svcTlsSiteIdEntry.setStatus("current")
_SvcTlsSiteIdName_Type = TNamedItem
_SvcTlsSiteIdName_Object = MibTableColumn
svcTlsSiteIdName = _SvcTlsSiteIdName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 1),
    _SvcTlsSiteIdName_Type()
)
svcTlsSiteIdName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsSiteIdName.setStatus("current")
_SvcTlsSiteIdRowStatus_Type = RowStatus
_SvcTlsSiteIdRowStatus_Object = MibTableColumn
svcTlsSiteIdRowStatus = _SvcTlsSiteIdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 2),
    _SvcTlsSiteIdRowStatus_Type()
)
svcTlsSiteIdRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdRowStatus.setStatus("current")
_SvcTlsSiteIdLastChanged_Type = TimeStamp
_SvcTlsSiteIdLastChanged_Object = MibTableColumn
svcTlsSiteIdLastChanged = _SvcTlsSiteIdLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 3),
    _SvcTlsSiteIdLastChanged_Type()
)
svcTlsSiteIdLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdLastChanged.setStatus("current")


class _SvcTlsSiteIdAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsSiteIdAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsSiteIdAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsSiteIdAdminStatus_Object = MibTableColumn
svcTlsSiteIdAdminStatus = _SvcTlsSiteIdAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 4),
    _SvcTlsSiteIdAdminStatus_Type()
)
svcTlsSiteIdAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdAdminStatus.setStatus("current")


class _SvcTlsSiteIdSiteId_Type(TmnxSiteIdOrEmpty):
    """Custom type svcTlsSiteIdSiteId based on TmnxSiteIdOrEmpty"""
    defaultValue = -1


_SvcTlsSiteIdSiteId_Type.__name__ = "TmnxSiteIdOrEmpty"
_SvcTlsSiteIdSiteId_Object = MibTableColumn
svcTlsSiteIdSiteId = _SvcTlsSiteIdSiteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 5),
    _SvcTlsSiteIdSiteId_Type()
)
svcTlsSiteIdSiteId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdSiteId.setStatus("current")


class _SvcTlsSiteIdPortId_Type(TmnxPortID):
    """Custom type svcTlsSiteIdPortId based on TmnxPortID"""
    defaultValue = 503316480


_SvcTlsSiteIdPortId_Type.__name__ = "TmnxPortID"
_SvcTlsSiteIdPortId_Object = MibTableColumn
svcTlsSiteIdPortId = _SvcTlsSiteIdPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 6),
    _SvcTlsSiteIdPortId_Type()
)
svcTlsSiteIdPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdPortId.setStatus("current")


class _SvcTlsSiteIdEncapValue_Type(TmnxEncapVal):
    """Custom type svcTlsSiteIdEncapValue based on TmnxEncapVal"""
    defaultValue = 0


_SvcTlsSiteIdEncapValue_Type.__name__ = "TmnxEncapVal"
_SvcTlsSiteIdEncapValue_Object = MibTableColumn
svcTlsSiteIdEncapValue = _SvcTlsSiteIdEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 7),
    _SvcTlsSiteIdEncapValue_Type()
)
svcTlsSiteIdEncapValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdEncapValue.setStatus("current")


class _SvcTlsSiteIdSdpBindId_Type(SdpBindId):
    """Custom type svcTlsSiteIdSdpBindId based on SdpBindId"""
    defaultHexValue = "0000000000000000"


_SvcTlsSiteIdSdpBindId_Type.__name__ = "SdpBindId"
_SvcTlsSiteIdSdpBindId_Object = MibTableColumn
svcTlsSiteIdSdpBindId = _SvcTlsSiteIdSdpBindId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 8),
    _SvcTlsSiteIdSdpBindId_Type()
)
svcTlsSiteIdSdpBindId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdSdpBindId.setStatus("current")


class _SvcTlsSiteIdShgName_Type(TNamedItemOrEmpty):
    """Custom type svcTlsSiteIdShgName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsSiteIdShgName_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsSiteIdShgName_Object = MibTableColumn
svcTlsSiteIdShgName = _SvcTlsSiteIdShgName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 9),
    _SvcTlsSiteIdShgName_Type()
)
svcTlsSiteIdShgName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdShgName.setStatus("current")


class _SvcTlsSiteIdShgMeshSdp_Type(TruthValue):
    """Custom type svcTlsSiteIdShgMeshSdp based on TruthValue"""
    defaultValue = 2


_SvcTlsSiteIdShgMeshSdp_Type.__name__ = "TruthValue"
_SvcTlsSiteIdShgMeshSdp_Object = MibTableColumn
svcTlsSiteIdShgMeshSdp = _SvcTlsSiteIdShgMeshSdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 10),
    _SvcTlsSiteIdShgMeshSdp_Type()
)
svcTlsSiteIdShgMeshSdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdShgMeshSdp.setStatus("current")


class _SvcTlsSiteIdFailedThresh_Type(Integer32):
    """Custom type svcTlsSiteIdFailedThresh based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 1000),
    )


_SvcTlsSiteIdFailedThresh_Type.__name__ = "Integer32"
_SvcTlsSiteIdFailedThresh_Object = MibTableColumn
svcTlsSiteIdFailedThresh = _SvcTlsSiteIdFailedThresh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 11),
    _SvcTlsSiteIdFailedThresh_Type()
)
svcTlsSiteIdFailedThresh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdFailedThresh.setStatus("current")
_SvcTlsSiteIdOperStatus_Type = TSiteOperStatus
_SvcTlsSiteIdOperStatus_Object = MibTableColumn
svcTlsSiteIdOperStatus = _SvcTlsSiteIdOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 12),
    _SvcTlsSiteIdOperStatus_Type()
)
svcTlsSiteIdOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdOperStatus.setStatus("current")
_SvcTlsSiteIdDesignatedFwdr_Type = TruthValue
_SvcTlsSiteIdDesignatedFwdr_Object = MibTableColumn
svcTlsSiteIdDesignatedFwdr = _SvcTlsSiteIdDesignatedFwdr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 13),
    _SvcTlsSiteIdDesignatedFwdr_Type()
)
svcTlsSiteIdDesignatedFwdr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdDesignatedFwdr.setStatus("current")


class _SvcTlsSiteIdBootTimer_Type(Integer32):
    """Custom type svcTlsSiteIdBootTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 600),
    )


_SvcTlsSiteIdBootTimer_Type.__name__ = "Integer32"
_SvcTlsSiteIdBootTimer_Object = MibTableColumn
svcTlsSiteIdBootTimer = _SvcTlsSiteIdBootTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 14),
    _SvcTlsSiteIdBootTimer_Type()
)
svcTlsSiteIdBootTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdBootTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdBootTimer.setUnits("seconds")


class _SvcTlsSiteIdSiteActTimer_Type(Integer32):
    """Custom type svcTlsSiteIdSiteActTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_SvcTlsSiteIdSiteActTimer_Type.__name__ = "Integer32"
_SvcTlsSiteIdSiteActTimer_Object = MibTableColumn
svcTlsSiteIdSiteActTimer = _SvcTlsSiteIdSiteActTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 15),
    _SvcTlsSiteIdSiteActTimer_Type()
)
svcTlsSiteIdSiteActTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdSiteActTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdSiteActTimer.setUnits("seconds")
_SvcTlsSiteIdDfUpTime_Type = Unsigned32
_SvcTlsSiteIdDfUpTime_Object = MibTableColumn
svcTlsSiteIdDfUpTime = _SvcTlsSiteIdDfUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 16),
    _SvcTlsSiteIdDfUpTime_Type()
)
svcTlsSiteIdDfUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdDfUpTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdDfUpTime.setUnits("seconds")
_SvcTlsSiteIdDfChgCnt_Type = Unsigned32
_SvcTlsSiteIdDfChgCnt_Object = MibTableColumn
svcTlsSiteIdDfChgCnt = _SvcTlsSiteIdDfChgCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 17),
    _SvcTlsSiteIdDfChgCnt_Type()
)
svcTlsSiteIdDfChgCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdDfChgCnt.setStatus("current")
_SvcTlsSiteIdTimerRemain_Type = Unsigned32
_SvcTlsSiteIdTimerRemain_Object = MibTableColumn
svcTlsSiteIdTimerRemain = _SvcTlsSiteIdTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 18),
    _SvcTlsSiteIdTimerRemain_Type()
)
svcTlsSiteIdTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdTimerRemain.setUnits("seconds")


class _SvcTlsSiteIdMonitorOperGrp_Type(TNamedItemOrEmpty):
    """Custom type svcTlsSiteIdMonitorOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsSiteIdMonitorOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsSiteIdMonitorOperGrp_Object = MibTableColumn
svcTlsSiteIdMonitorOperGrp = _SvcTlsSiteIdMonitorOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 19),
    _SvcTlsSiteIdMonitorOperGrp_Type()
)
svcTlsSiteIdMonitorOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdMonitorOperGrp.setStatus("current")
_SvcTlsSiteIdActTimerRemain_Type = Unsigned32
_SvcTlsSiteIdActTimerRemain_Object = MibTableColumn
svcTlsSiteIdActTimerRemain = _SvcTlsSiteIdActTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 20),
    _SvcTlsSiteIdActTimerRemain_Type()
)
svcTlsSiteIdActTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdActTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdActTimerRemain.setUnits("seconds")


class _SvcTlsSiteIdMinDnTimer_Type(Integer32):
    """Custom type svcTlsSiteIdMinDnTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_SvcTlsSiteIdMinDnTimer_Type.__name__ = "Integer32"
_SvcTlsSiteIdMinDnTimer_Object = MibTableColumn
svcTlsSiteIdMinDnTimer = _SvcTlsSiteIdMinDnTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 21),
    _SvcTlsSiteIdMinDnTimer_Type()
)
svcTlsSiteIdMinDnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSiteIdMinDnTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdMinDnTimer.setUnits("seconds")
_SvcTlsSiteIdMinDnTimerRemain_Type = Unsigned32
_SvcTlsSiteIdMinDnTimerRemain_Object = MibTableColumn
svcTlsSiteIdMinDnTimerRemain = _SvcTlsSiteIdMinDnTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 75, 1, 22),
    _SvcTlsSiteIdMinDnTimerRemain_Type()
)
svcTlsSiteIdMinDnTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSiteIdMinDnTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsSiteIdMinDnTimerRemain.setUnits("seconds")
_SvcBgpVplsTblLastChanged_Type = TimeStamp
_SvcBgpVplsTblLastChanged_Object = MibScalar
svcBgpVplsTblLastChanged = _SvcBgpVplsTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 78),
    _SvcBgpVplsTblLastChanged_Type()
)
svcBgpVplsTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVplsTblLastChanged.setStatus("current")
_SvcBgpVplsTable_Object = MibTable
svcBgpVplsTable = _SvcBgpVplsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79)
)
if mibBuilder.loadTexts:
    svcBgpVplsTable.setStatus("current")
_SvcBgpVplsEntry_Object = MibTableRow
svcBgpVplsEntry = _SvcBgpVplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1)
)
svcBgpVplsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBgpVplsEntry.setStatus("current")
_SvcBgpVplsRowStatus_Type = RowStatus
_SvcBgpVplsRowStatus_Object = MibTableColumn
svcBgpVplsRowStatus = _SvcBgpVplsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 1),
    _SvcBgpVplsRowStatus_Type()
)
svcBgpVplsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVplsRowStatus.setStatus("current")
_SvcBgpVplsLastChanged_Type = TimeStamp
_SvcBgpVplsLastChanged_Object = MibTableColumn
svcBgpVplsLastChanged = _SvcBgpVplsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 2),
    _SvcBgpVplsLastChanged_Type()
)
svcBgpVplsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVplsLastChanged.setStatus("current")


class _SvcBgpVplsMaxVeId_Type(TmnxVeId):
    """Custom type svcBgpVplsMaxVeId based on TmnxVeId"""
    defaultValue = -1


_SvcBgpVplsMaxVeId_Type.__name__ = "TmnxVeId"
_SvcBgpVplsMaxVeId_Object = MibTableColumn
svcBgpVplsMaxVeId = _SvcBgpVplsMaxVeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 3),
    _SvcBgpVplsMaxVeId_Type()
)
svcBgpVplsMaxVeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVplsMaxVeId.setStatus("current")


class _SvcBgpVplsAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcBgpVplsAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcBgpVplsAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcBgpVplsAdminStatus_Object = MibTableColumn
svcBgpVplsAdminStatus = _SvcBgpVplsAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 4),
    _SvcBgpVplsAdminStatus_Type()
)
svcBgpVplsAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVplsAdminStatus.setStatus("current")


class _SvcBgpVplsVeName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpVplsVeName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpVplsVeName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpVplsVeName_Object = MibTableColumn
svcBgpVplsVeName = _SvcBgpVplsVeName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 5),
    _SvcBgpVplsVeName_Type()
)
svcBgpVplsVeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVplsVeName.setStatus("current")


class _SvcBgpVplsVeId_Type(TmnxSiteIdOrEmpty):
    """Custom type svcBgpVplsVeId based on TmnxSiteIdOrEmpty"""
    defaultValue = -1


_SvcBgpVplsVeId_Type.__name__ = "TmnxSiteIdOrEmpty"
_SvcBgpVplsVeId_Object = MibTableColumn
svcBgpVplsVeId = _SvcBgpVplsVeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 6),
    _SvcBgpVplsVeId_Type()
)
svcBgpVplsVeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVplsVeId.setStatus("current")
_SvcBgpVplsPwTemplateId_Type = PWTemplateId
_SvcBgpVplsPwTemplateId_Object = MibTableColumn
svcBgpVplsPwTemplateId = _SvcBgpVplsPwTemplateId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 79, 1, 7),
    _SvcBgpVplsPwTemplateId_Type()
)
svcBgpVplsPwTemplateId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVplsPwTemplateId.setStatus("current")
_SvcTlsBgpTableLastChanged_Type = TimeStamp
_SvcTlsBgpTableLastChanged_Object = MibScalar
svcTlsBgpTableLastChanged = _SvcTlsBgpTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 80),
    _SvcTlsBgpTableLastChanged_Type()
)
svcTlsBgpTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpTableLastChanged.setStatus("obsolete")
_SvcTlsBgpTable_Object = MibTable
svcTlsBgpTable = _SvcTlsBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81)
)
if mibBuilder.loadTexts:
    svcTlsBgpTable.setStatus("obsolete")
_SvcTlsBgpEntry_Object = MibTableRow
svcTlsBgpEntry = _SvcTlsBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1)
)
svcTlsBgpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsBgpEntry.setStatus("obsolete")
_SvcTlsBgpLastChanged_Type = TimeStamp
_SvcTlsBgpLastChanged_Object = MibTableColumn
svcTlsBgpLastChanged = _SvcTlsBgpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 1),
    _SvcTlsBgpLastChanged_Type()
)
svcTlsBgpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpLastChanged.setStatus("obsolete")


class _SvcTlsBgpVsiRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcTlsBgpVsiRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcTlsBgpVsiRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcTlsBgpVsiRD_Object = MibTableColumn
svcTlsBgpVsiRD = _SvcTlsBgpVsiRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 2),
    _SvcTlsBgpVsiRD_Type()
)
svcTlsBgpVsiRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiRD.setStatus("obsolete")


class _SvcTlsBgpExportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcTlsBgpExportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsBgpExportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsBgpExportRteTarget_Object = MibTableColumn
svcTlsBgpExportRteTarget = _SvcTlsBgpExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 3),
    _SvcTlsBgpExportRteTarget_Type()
)
svcTlsBgpExportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpExportRteTarget.setStatus("obsolete")


class _SvcTlsBgpVsiExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiExportPolicy1_Object = MibTableColumn
svcTlsBgpVsiExportPolicy1 = _SvcTlsBgpVsiExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 4),
    _SvcTlsBgpVsiExportPolicy1_Type()
)
svcTlsBgpVsiExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiExportPolicy1.setStatus("obsolete")


class _SvcTlsBgpVsiExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiExportPolicy2_Object = MibTableColumn
svcTlsBgpVsiExportPolicy2 = _SvcTlsBgpVsiExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 5),
    _SvcTlsBgpVsiExportPolicy2_Type()
)
svcTlsBgpVsiExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiExportPolicy2.setStatus("obsolete")


class _SvcTlsBgpVsiExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiExportPolicy3_Object = MibTableColumn
svcTlsBgpVsiExportPolicy3 = _SvcTlsBgpVsiExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 6),
    _SvcTlsBgpVsiExportPolicy3_Type()
)
svcTlsBgpVsiExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiExportPolicy3.setStatus("obsolete")


class _SvcTlsBgpVsiExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiExportPolicy4_Object = MibTableColumn
svcTlsBgpVsiExportPolicy4 = _SvcTlsBgpVsiExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 7),
    _SvcTlsBgpVsiExportPolicy4_Type()
)
svcTlsBgpVsiExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiExportPolicy4.setStatus("obsolete")


class _SvcTlsBgpVsiExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiExportPolicy5_Object = MibTableColumn
svcTlsBgpVsiExportPolicy5 = _SvcTlsBgpVsiExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 8),
    _SvcTlsBgpVsiExportPolicy5_Type()
)
svcTlsBgpVsiExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiExportPolicy5.setStatus("obsolete")


class _SvcTlsBgpImportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcTlsBgpImportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcTlsBgpImportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsBgpImportRteTarget_Object = MibTableColumn
svcTlsBgpImportRteTarget = _SvcTlsBgpImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 9),
    _SvcTlsBgpImportRteTarget_Type()
)
svcTlsBgpImportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpImportRteTarget.setStatus("obsolete")


class _SvcTlsBgpVsiImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiImportPolicy1_Object = MibTableColumn
svcTlsBgpVsiImportPolicy1 = _SvcTlsBgpVsiImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 10),
    _SvcTlsBgpVsiImportPolicy1_Type()
)
svcTlsBgpVsiImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiImportPolicy1.setStatus("obsolete")


class _SvcTlsBgpVsiImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiImportPolicy2_Object = MibTableColumn
svcTlsBgpVsiImportPolicy2 = _SvcTlsBgpVsiImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 11),
    _SvcTlsBgpVsiImportPolicy2_Type()
)
svcTlsBgpVsiImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiImportPolicy2.setStatus("obsolete")


class _SvcTlsBgpVsiImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiImportPolicy3_Object = MibTableColumn
svcTlsBgpVsiImportPolicy3 = _SvcTlsBgpVsiImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 12),
    _SvcTlsBgpVsiImportPolicy3_Type()
)
svcTlsBgpVsiImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiImportPolicy3.setStatus("obsolete")


class _SvcTlsBgpVsiImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiImportPolicy4_Object = MibTableColumn
svcTlsBgpVsiImportPolicy4 = _SvcTlsBgpVsiImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 13),
    _SvcTlsBgpVsiImportPolicy4_Type()
)
svcTlsBgpVsiImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiImportPolicy4.setStatus("obsolete")


class _SvcTlsBgpVsiImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcTlsBgpVsiImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcTlsBgpVsiImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcTlsBgpVsiImportPolicy5_Object = MibTableColumn
svcTlsBgpVsiImportPolicy5 = _SvcTlsBgpVsiImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 14),
    _SvcTlsBgpVsiImportPolicy5_Type()
)
svcTlsBgpVsiImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpVsiImportPolicy5.setStatus("obsolete")
_SvcTlsBgpRowStatus_Type = RowStatus
_SvcTlsBgpRowStatus_Object = MibTableColumn
svcTlsBgpRowStatus = _SvcTlsBgpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 15),
    _SvcTlsBgpRowStatus_Type()
)
svcTlsBgpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpRowStatus.setStatus("obsolete")


class _SvcTlsBgpCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcTlsBgpCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcTlsBgpCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcTlsBgpCreationOrigin_Object = MibTableColumn
svcTlsBgpCreationOrigin = _SvcTlsBgpCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 16),
    _SvcTlsBgpCreationOrigin_Type()
)
svcTlsBgpCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpCreationOrigin.setStatus("obsolete")


class _SvcTlsBgpAutoRD_Type(TruthValue):
    """Custom type svcTlsBgpAutoRD based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpAutoRD_Type.__name__ = "TruthValue"
_SvcTlsBgpAutoRD_Object = MibTableColumn
svcTlsBgpAutoRD = _SvcTlsBgpAutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 17),
    _SvcTlsBgpAutoRD_Type()
)
svcTlsBgpAutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsBgpAutoRD.setStatus("obsolete")
_SvcTlsBgpOperRD_Type = TmnxVPNRouteDistinguisher
_SvcTlsBgpOperRD_Object = MibTableColumn
svcTlsBgpOperRD = _SvcTlsBgpOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 18),
    _SvcTlsBgpOperRD_Type()
)
svcTlsBgpOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperRD.setStatus("obsolete")
_SvcTlsBgpOperRDType_Type = TmnxRouteDistType
_SvcTlsBgpOperRDType_Object = MibTableColumn
svcTlsBgpOperRDType = _SvcTlsBgpOperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 19),
    _SvcTlsBgpOperRDType_Type()
)
svcTlsBgpOperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperRDType.setStatus("obsolete")
_SvcTlsBgpOperImportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcTlsBgpOperImportRteTgtOrigin_Object = MibTableColumn
svcTlsBgpOperImportRteTgtOrigin = _SvcTlsBgpOperImportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 20),
    _SvcTlsBgpOperImportRteTgtOrigin_Type()
)
svcTlsBgpOperImportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperImportRteTgtOrigin.setStatus("obsolete")
_SvcTlsBgpOperImportRteTarget_Type = TNamedItemOrEmpty
_SvcTlsBgpOperImportRteTarget_Object = MibTableColumn
svcTlsBgpOperImportRteTarget = _SvcTlsBgpOperImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 21),
    _SvcTlsBgpOperImportRteTarget_Type()
)
svcTlsBgpOperImportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperImportRteTarget.setStatus("obsolete")
_SvcTlsBgpOperExportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcTlsBgpOperExportRteTgtOrigin_Object = MibTableColumn
svcTlsBgpOperExportRteTgtOrigin = _SvcTlsBgpOperExportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 22),
    _SvcTlsBgpOperExportRteTgtOrigin_Type()
)
svcTlsBgpOperExportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperExportRteTgtOrigin.setStatus("obsolete")
_SvcTlsBgpOperExportRteTarget_Type = TNamedItemOrEmpty
_SvcTlsBgpOperExportRteTarget_Object = MibTableColumn
svcTlsBgpOperExportRteTarget = _SvcTlsBgpOperExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 81, 1, 23),
    _SvcTlsBgpOperExportRteTarget_Type()
)
svcTlsBgpOperExportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpOperExportRteTarget.setStatus("obsolete")
_SvcTlsPbbIgmpSnpgMRtrTable_Object = MibTable
svcTlsPbbIgmpSnpgMRtrTable = _SvcTlsPbbIgmpSnpgMRtrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82)
)
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrTable.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrEntry_Object = MibTableRow
svcTlsPbbIgmpSnpgMRtrEntry = _SvcTlsPbbIgmpSnpgMRtrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1)
)
svcTlsPbbIgmpSnpgMRtrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcTlsPbbIgmpSnpgMRtrSvcIdIVpls"),
    (0, "TIMETRA-SERV-MIB", "svcTlsPbbIgmpSnpgMRtrSvcIdBVpls"),
    (1, "TIMETRA-SERV-MIB", "svcTlsPbbIgmpSnpgMRtrMacName"),
)
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrEntry.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrSvcIdIVpls_Type = TmnxServId
_SvcTlsPbbIgmpSnpgMRtrSvcIdIVpls_Object = MibTableColumn
svcTlsPbbIgmpSnpgMRtrSvcIdIVpls = _SvcTlsPbbIgmpSnpgMRtrSvcIdIVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1, 1),
    _SvcTlsPbbIgmpSnpgMRtrSvcIdIVpls_Type()
)
svcTlsPbbIgmpSnpgMRtrSvcIdIVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrSvcIdIVpls.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrSvcIdBVpls_Type = TmnxServId
_SvcTlsPbbIgmpSnpgMRtrSvcIdBVpls_Object = MibTableColumn
svcTlsPbbIgmpSnpgMRtrSvcIdBVpls = _SvcTlsPbbIgmpSnpgMRtrSvcIdBVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1, 2),
    _SvcTlsPbbIgmpSnpgMRtrSvcIdBVpls_Type()
)
svcTlsPbbIgmpSnpgMRtrSvcIdBVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrSvcIdBVpls.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrMacName_Type = TNamedItem
_SvcTlsPbbIgmpSnpgMRtrMacName_Object = MibTableColumn
svcTlsPbbIgmpSnpgMRtrMacName = _SvcTlsPbbIgmpSnpgMRtrMacName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1, 3),
    _SvcTlsPbbIgmpSnpgMRtrMacName_Type()
)
svcTlsPbbIgmpSnpgMRtrMacName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrMacName.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrRowStatus_Type = RowStatus
_SvcTlsPbbIgmpSnpgMRtrRowStatus_Object = MibTableColumn
svcTlsPbbIgmpSnpgMRtrRowStatus = _SvcTlsPbbIgmpSnpgMRtrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1, 4),
    _SvcTlsPbbIgmpSnpgMRtrRowStatus_Type()
)
svcTlsPbbIgmpSnpgMRtrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrRowStatus.setStatus("current")
_SvcTlsPbbIgmpSnpgMRtrLastCh_Type = TimeStamp
_SvcTlsPbbIgmpSnpgMRtrLastCh_Object = MibTableColumn
svcTlsPbbIgmpSnpgMRtrLastCh = _SvcTlsPbbIgmpSnpgMRtrLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 82, 1, 5),
    _SvcTlsPbbIgmpSnpgMRtrLastCh_Type()
)
svcTlsPbbIgmpSnpgMRtrLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsPbbIgmpSnpgMRtrLastCh.setStatus("current")
_SvcL2MhRteTable_Object = MibTable
svcL2MhRteTable = _SvcL2MhRteTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83)
)
if mibBuilder.loadTexts:
    svcL2MhRteTable.setStatus("current")
_SvcL2MhRteEntry_Object = MibTableRow
svcL2MhRteEntry = _SvcL2MhRteEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1)
)
svcL2MhRteEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcL2MhRteSiteId"),
    (0, "TIMETRA-SERV-MIB", "svcL2MhRteRouteDistinguisher"),
    (0, "TIMETRA-SERV-MIB", "svcL2MhRteNextHopType"),
    (0, "TIMETRA-SERV-MIB", "svcL2MhRteNextHop"),
)
if mibBuilder.loadTexts:
    svcL2MhRteEntry.setStatus("current")
_SvcL2MhRteSiteId_Type = TmnxSiteId
_SvcL2MhRteSiteId_Object = MibTableColumn
svcL2MhRteSiteId = _SvcL2MhRteSiteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 1),
    _SvcL2MhRteSiteId_Type()
)
svcL2MhRteSiteId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcL2MhRteSiteId.setStatus("current")
_SvcL2MhRteRouteDistinguisher_Type = TmnxVPNRouteDistinguisher
_SvcL2MhRteRouteDistinguisher_Object = MibTableColumn
svcL2MhRteRouteDistinguisher = _SvcL2MhRteRouteDistinguisher_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 2),
    _SvcL2MhRteRouteDistinguisher_Type()
)
svcL2MhRteRouteDistinguisher.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcL2MhRteRouteDistinguisher.setStatus("current")
_SvcL2MhRteNextHopType_Type = InetAddressType
_SvcL2MhRteNextHopType_Object = MibTableColumn
svcL2MhRteNextHopType = _SvcL2MhRteNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 3),
    _SvcL2MhRteNextHopType_Type()
)
svcL2MhRteNextHopType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcL2MhRteNextHopType.setStatus("current")


class _SvcL2MhRteNextHop_Type(InetAddress):
    """Custom type svcL2MhRteNextHop based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcL2MhRteNextHop_Type.__name__ = "InetAddress"
_SvcL2MhRteNextHop_Object = MibTableColumn
svcL2MhRteNextHop = _SvcL2MhRteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 4),
    _SvcL2MhRteNextHop_Type()
)
svcL2MhRteNextHop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcL2MhRteNextHop.setStatus("current")


class _SvcL2MhRteState_Type(Integer32):
    """Custom type svcL2MhRteState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SvcL2MhRteState_Type.__name__ = "Integer32"
_SvcL2MhRteState_Object = MibTableColumn
svcL2MhRteState = _SvcL2MhRteState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 5),
    _SvcL2MhRteState_Type()
)
svcL2MhRteState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcL2MhRteState.setStatus("current")
_SvcL2MhRteDf_Type = TruthValue
_SvcL2MhRteDf_Object = MibTableColumn
svcL2MhRteDf = _SvcL2MhRteDf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 6),
    _SvcL2MhRteDf_Type()
)
svcL2MhRteDf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcL2MhRteDf.setStatus("current")
_SvcL2MhRteVplsPreference_Type = Integer32
_SvcL2MhRteVplsPreference_Object = MibTableColumn
svcL2MhRteVplsPreference = _SvcL2MhRteVplsPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 83, 1, 7),
    _SvcL2MhRteVplsPreference_Type()
)
svcL2MhRteVplsPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcL2MhRteVplsPreference.setStatus("current")
_SvcTmplTblLastChanged_Type = TimeStamp
_SvcTmplTblLastChanged_Object = MibScalar
svcTmplTblLastChanged = _SvcTmplTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 85),
    _SvcTmplTblLastChanged_Type()
)
svcTmplTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplTblLastChanged.setStatus("current")
_SvcTmplTable_Object = MibTable
svcTmplTable = _SvcTmplTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86)
)
if mibBuilder.loadTexts:
    svcTmplTable.setStatus("current")
_SvcTmplEntry_Object = MibTableRow
svcTmplEntry = _SvcTmplEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1)
)
svcTmplEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcTmplName"),
)
if mibBuilder.loadTexts:
    svcTmplEntry.setStatus("current")
_SvcTmplName_Type = TNamedItem
_SvcTmplName_Object = MibTableColumn
svcTmplName = _SvcTmplName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 1),
    _SvcTmplName_Type()
)
svcTmplName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTmplName.setStatus("current")
_SvcTmplRowStatus_Type = RowStatus
_SvcTmplRowStatus_Object = MibTableColumn
svcTmplRowStatus = _SvcTmplRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 2),
    _SvcTmplRowStatus_Type()
)
svcTmplRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTmplRowStatus.setStatus("current")
_SvcTmplLastChanged_Type = TimeStamp
_SvcTmplLastChanged_Object = MibTableColumn
svcTmplLastChanged = _SvcTmplLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 3),
    _SvcTmplLastChanged_Type()
)
svcTmplLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplLastChanged.setStatus("current")
_SvcTmplSvcCount_Type = Unsigned32
_SvcTmplSvcCount_Object = MibTableColumn
svcTmplSvcCount = _SvcTmplSvcCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 4),
    _SvcTmplSvcCount_Type()
)
svcTmplSvcCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplSvcCount.setStatus("current")
_SvcTmplType_Type = ServType
_SvcTmplType_Object = MibTableColumn
svcTmplType = _SvcTmplType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 5),
    _SvcTmplType_Type()
)
svcTmplType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTmplType.setStatus("current")


class _SvcTmplMtu_Type(Integer32):
    """Custom type svcTmplMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9782),
    )


_SvcTmplMtu_Type.__name__ = "Integer32"
_SvcTmplMtu_Object = MibTableColumn
svcTmplMtu = _SvcTmplMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 6),
    _SvcTmplMtu_Type()
)
svcTmplMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTmplMtu.setStatus("current")


class _SvcTmplCustId_Type(TmnxCustId):
    """Custom type svcTmplCustId based on TmnxCustId"""
    defaultValue = 0


_SvcTmplCustId_Type.__name__ = "TmnxCustId"
_SvcTmplCustId_Object = MibTableColumn
svcTmplCustId = _SvcTmplCustId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 86, 1, 7),
    _SvcTmplCustId_Type()
)
svcTmplCustId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTmplCustId.setStatus("current")
_SvcTlsGroupTblLastChanged_Type = TimeStamp
_SvcTlsGroupTblLastChanged_Object = MibScalar
svcTlsGroupTblLastChanged = _SvcTlsGroupTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 87),
    _SvcTlsGroupTblLastChanged_Type()
)
svcTlsGroupTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsGroupTblLastChanged.setStatus("current")
_SvcTlsGroupTable_Object = MibTable
svcTlsGroupTable = _SvcTlsGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88)
)
if mibBuilder.loadTexts:
    svcTlsGroupTable.setStatus("current")
_SvcTlsGroupEntry_Object = MibTableRow
svcTlsGroupEntry = _SvcTlsGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1)
)
svcTlsGroupEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsGroupId"),
)
if mibBuilder.loadTexts:
    svcTlsGroupEntry.setStatus("current")
_SvcTlsGroupId_Type = TmnxTlsGroupId
_SvcTlsGroupId_Object = MibTableColumn
svcTlsGroupId = _SvcTlsGroupId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 1),
    _SvcTlsGroupId_Type()
)
svcTlsGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsGroupId.setStatus("current")
_SvcTlsGroupRowStatus_Type = RowStatus
_SvcTlsGroupRowStatus_Object = MibTableColumn
svcTlsGroupRowStatus = _SvcTlsGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 2),
    _SvcTlsGroupRowStatus_Type()
)
svcTlsGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupRowStatus.setStatus("current")
_SvcTlsGroupLastChanged_Type = TimeStamp
_SvcTlsGroupLastChanged_Object = MibTableColumn
svcTlsGroupLastChanged = _SvcTlsGroupLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 3),
    _SvcTlsGroupLastChanged_Type()
)
svcTlsGroupLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsGroupLastChanged.setStatus("current")


class _SvcTlsGroupAdminStatus_Type(ServiceAdminStatus):
    """Custom type svcTlsGroupAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SvcTlsGroupAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SvcTlsGroupAdminStatus_Object = MibTableColumn
svcTlsGroupAdminStatus = _SvcTlsGroupAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 4),
    _SvcTlsGroupAdminStatus_Type()
)
svcTlsGroupAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupAdminStatus.setStatus("current")


class _SvcTlsGroupStart_Type(TmnxServId):
    """Custom type svcTlsGroupStart based on TmnxServId"""
    defaultValue = 0


_SvcTlsGroupStart_Type.__name__ = "TmnxServId"
_SvcTlsGroupStart_Object = MibTableColumn
svcTlsGroupStart = _SvcTlsGroupStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 5),
    _SvcTlsGroupStart_Type()
)
svcTlsGroupStart.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupStart.setStatus("current")


class _SvcTlsGroupEnd_Type(TmnxServId):
    """Custom type svcTlsGroupEnd based on TmnxServId"""
    defaultValue = 0


_SvcTlsGroupEnd_Type.__name__ = "TmnxServId"
_SvcTlsGroupEnd_Object = MibTableColumn
svcTlsGroupEnd = _SvcTlsGroupEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 6),
    _SvcTlsGroupEnd_Type()
)
svcTlsGroupEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupEnd.setStatus("current")


class _SvcTlsGroupStartVlanTag_Type(QTagOrZero):
    """Custom type svcTlsGroupStartVlanTag based on QTagOrZero"""
    defaultValue = 0


_SvcTlsGroupStartVlanTag_Type.__name__ = "QTagOrZero"
_SvcTlsGroupStartVlanTag_Object = MibTableColumn
svcTlsGroupStartVlanTag = _SvcTlsGroupStartVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 7),
    _SvcTlsGroupStartVlanTag_Type()
)
svcTlsGroupStartVlanTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupStartVlanTag.setStatus("current")


class _SvcTlsGroupSvcTmplName_Type(TNamedItemOrEmpty):
    """Custom type svcTlsGroupSvcTmplName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsGroupSvcTmplName_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsGroupSvcTmplName_Object = MibTableColumn
svcTlsGroupSvcTmplName = _SvcTlsGroupSvcTmplName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 8),
    _SvcTlsGroupSvcTmplName_Type()
)
svcTlsGroupSvcTmplName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupSvcTmplName.setStatus("current")


class _SvcTlsGroupSapTmplName_Type(TNamedItemOrEmpty):
    """Custom type svcTlsGroupSapTmplName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsGroupSapTmplName_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsGroupSapTmplName_Object = MibTableColumn
svcTlsGroupSapTmplName = _SvcTlsGroupSapTmplName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 9),
    _SvcTlsGroupSapTmplName_Type()
)
svcTlsGroupSapTmplName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupSapTmplName.setStatus("current")


class _SvcTlsGroupMvrpControl_Type(TruthValue):
    """Custom type svcTlsGroupMvrpControl based on TruthValue"""
    defaultValue = 2


_SvcTlsGroupMvrpControl_Type.__name__ = "TruthValue"
_SvcTlsGroupMvrpControl_Object = MibTableColumn
svcTlsGroupMvrpControl = _SvcTlsGroupMvrpControl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 10),
    _SvcTlsGroupMvrpControl_Type()
)
svcTlsGroupMvrpControl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsGroupMvrpControl.setStatus("current")


class _SvcTlsGroupOperStatus_Type(Integer32):
    """Custom type svcTlsGroupOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("inProgress", 3))
    )


_SvcTlsGroupOperStatus_Type.__name__ = "Integer32"
_SvcTlsGroupOperStatus_Object = MibTableColumn
svcTlsGroupOperStatus = _SvcTlsGroupOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 11),
    _SvcTlsGroupOperStatus_Type()
)
svcTlsGroupOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsGroupOperStatus.setStatus("current")
_SvcTlsGroupLastError_Type = DisplayString
_SvcTlsGroupLastError_Object = MibTableColumn
svcTlsGroupLastError = _SvcTlsGroupLastError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 88, 1, 12),
    _SvcTlsGroupLastError_Type()
)
svcTlsGroupLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsGroupLastError.setStatus("current")
_SvcDhcpLeaseTable_Object = MibTable
svcDhcpLeaseTable = _SvcDhcpLeaseTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseTable.setStatus("current")
_SvcDhcpLeaseEntry_Object = MibTableRow
svcDhcpLeaseEntry = _SvcDhcpLeaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1)
)
svcDhcpLeaseEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseEntry.setStatus("current")
_SvcDhcpLeaseCiAddrType_Type = InetAddressType
_SvcDhcpLeaseCiAddrType_Object = MibTableColumn
svcDhcpLeaseCiAddrType = _SvcDhcpLeaseCiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 1),
    _SvcDhcpLeaseCiAddrType_Type()
)
svcDhcpLeaseCiAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseCiAddrType.setStatus("current")


class _SvcDhcpLeaseCiAddr_Type(InetAddress):
    """Custom type svcDhcpLeaseCiAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseCiAddr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseCiAddr_Object = MibTableColumn
svcDhcpLeaseCiAddr = _SvcDhcpLeaseCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 2),
    _SvcDhcpLeaseCiAddr_Type()
)
svcDhcpLeaseCiAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseCiAddr.setStatus("current")
_SvcDhcpLeaseNextHopMacAddr_Type = MacAddress
_SvcDhcpLeaseNextHopMacAddr_Object = MibTableColumn
svcDhcpLeaseNextHopMacAddr = _SvcDhcpLeaseNextHopMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 3),
    _SvcDhcpLeaseNextHopMacAddr_Type()
)
svcDhcpLeaseNextHopMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseNextHopMacAddr.setStatus("current")
_SvcDhcpLeaseChAddr_Type = MacAddress
_SvcDhcpLeaseChAddr_Object = MibTableColumn
svcDhcpLeaseChAddr = _SvcDhcpLeaseChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 4),
    _SvcDhcpLeaseChAddr_Type()
)
svcDhcpLeaseChAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseChAddr.setStatus("current")


class _SvcDhcpLeaseLocale_Type(Integer32):
    """Custom type svcDhcpLeaseLocale based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("sdp", 2))
    )


_SvcDhcpLeaseLocale_Type.__name__ = "Integer32"
_SvcDhcpLeaseLocale_Object = MibTableColumn
svcDhcpLeaseLocale = _SvcDhcpLeaseLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 5),
    _SvcDhcpLeaseLocale_Type()
)
svcDhcpLeaseLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseLocale.setStatus("current")
_SvcDhcpLeasePortId_Type = TmnxPortID
_SvcDhcpLeasePortId_Object = MibTableColumn
svcDhcpLeasePortId = _SvcDhcpLeasePortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 6),
    _SvcDhcpLeasePortId_Type()
)
svcDhcpLeasePortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePortId.setStatus("current")
_SvcDhcpLeaseEncapValue_Type = TmnxEncapVal
_SvcDhcpLeaseEncapValue_Object = MibTableColumn
svcDhcpLeaseEncapValue = _SvcDhcpLeaseEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 7),
    _SvcDhcpLeaseEncapValue_Type()
)
svcDhcpLeaseEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseEncapValue.setStatus("current")
_SvcDhcpLeaseSdpId_Type = SdpId
_SvcDhcpLeaseSdpId_Object = MibTableColumn
svcDhcpLeaseSdpId = _SvcDhcpLeaseSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 8),
    _SvcDhcpLeaseSdpId_Type()
)
svcDhcpLeaseSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSdpId.setStatus("current")
_SvcDhcpLeaseVcId_Type = Unsigned32
_SvcDhcpLeaseVcId_Object = MibTableColumn
svcDhcpLeaseVcId = _SvcDhcpLeaseVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 9),
    _SvcDhcpLeaseVcId_Type()
)
svcDhcpLeaseVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseVcId.setStatus("current")
_SvcDhcpLeaseRemainLseTime_Type = Unsigned32
_SvcDhcpLeaseRemainLseTime_Object = MibTableColumn
svcDhcpLeaseRemainLseTime = _SvcDhcpLeaseRemainLseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 10),
    _SvcDhcpLeaseRemainLseTime_Type()
)
svcDhcpLeaseRemainLseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRemainLseTime.setStatus("current")
if mibBuilder.loadTexts:
    svcDhcpLeaseRemainLseTime.setUnits("seconds")


class _SvcDhcpLeaseOption82_Type(OctetString):
    """Custom type svcDhcpLeaseOption82 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 257),
    )


_SvcDhcpLeaseOption82_Type.__name__ = "OctetString"
_SvcDhcpLeaseOption82_Object = MibTableColumn
svcDhcpLeaseOption82 = _SvcDhcpLeaseOption82_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 11),
    _SvcDhcpLeaseOption82_Type()
)
svcDhcpLeaseOption82.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOption82.setStatus("current")
_SvcDhcpLeasePersistKey_Type = Unsigned32
_SvcDhcpLeasePersistKey_Object = MibTableColumn
svcDhcpLeasePersistKey = _SvcDhcpLeasePersistKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 12),
    _SvcDhcpLeasePersistKey_Type()
)
svcDhcpLeasePersistKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePersistKey.setStatus("current")
_SvcDhcpLeaseSubscrIdent_Type = DisplayString
_SvcDhcpLeaseSubscrIdent_Object = MibTableColumn
svcDhcpLeaseSubscrIdent = _SvcDhcpLeaseSubscrIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 13),
    _SvcDhcpLeaseSubscrIdent_Type()
)
svcDhcpLeaseSubscrIdent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubscrIdent.setStatus("current")
_SvcDhcpLeaseSubProfString_Type = DisplayString
_SvcDhcpLeaseSubProfString_Object = MibTableColumn
svcDhcpLeaseSubProfString = _SvcDhcpLeaseSubProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 14),
    _SvcDhcpLeaseSubProfString_Type()
)
svcDhcpLeaseSubProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubProfString.setStatus("current")
_SvcDhcpLeaseSlaProfString_Type = DisplayString
_SvcDhcpLeaseSlaProfString_Object = MibTableColumn
svcDhcpLeaseSlaProfString = _SvcDhcpLeaseSlaProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 15),
    _SvcDhcpLeaseSlaProfString_Type()
)
svcDhcpLeaseSlaProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSlaProfString.setStatus("current")
_SvcDhcpLeaseShcvOperState_Type = ServShcvOperState
_SvcDhcpLeaseShcvOperState_Object = MibTableColumn
svcDhcpLeaseShcvOperState = _SvcDhcpLeaseShcvOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 16),
    _SvcDhcpLeaseShcvOperState_Type()
)
svcDhcpLeaseShcvOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseShcvOperState.setStatus("current")
_SvcDhcpLeaseShcvChecks_Type = Unsigned32
_SvcDhcpLeaseShcvChecks_Object = MibTableColumn
svcDhcpLeaseShcvChecks = _SvcDhcpLeaseShcvChecks_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 17),
    _SvcDhcpLeaseShcvChecks_Type()
)
svcDhcpLeaseShcvChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseShcvChecks.setStatus("current")
_SvcDhcpLeaseShcvReplies_Type = Unsigned32
_SvcDhcpLeaseShcvReplies_Object = MibTableColumn
svcDhcpLeaseShcvReplies = _SvcDhcpLeaseShcvReplies_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 18),
    _SvcDhcpLeaseShcvReplies_Type()
)
svcDhcpLeaseShcvReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseShcvReplies.setStatus("current")
_SvcDhcpLeaseShcvReplyTime_Type = TimeStamp
_SvcDhcpLeaseShcvReplyTime_Object = MibTableColumn
svcDhcpLeaseShcvReplyTime = _SvcDhcpLeaseShcvReplyTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 19),
    _SvcDhcpLeaseShcvReplyTime_Type()
)
svcDhcpLeaseShcvReplyTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseShcvReplyTime.setStatus("current")


class _SvcDhcpLeaseClientId_Type(OctetString):
    """Custom type svcDhcpLeaseClientId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseClientId_Type.__name__ = "OctetString"
_SvcDhcpLeaseClientId_Object = MibTableColumn
svcDhcpLeaseClientId = _SvcDhcpLeaseClientId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 20),
    _SvcDhcpLeaseClientId_Type()
)
svcDhcpLeaseClientId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseClientId.setStatus("current")
_SvcDhcpLeaseIAID_Type = Unsigned32
_SvcDhcpLeaseIAID_Object = MibTableColumn
svcDhcpLeaseIAID = _SvcDhcpLeaseIAID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 21),
    _SvcDhcpLeaseIAID_Type()
)
svcDhcpLeaseIAID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseIAID.setStatus("current")
_SvcDhcpLeaseIAIDType_Type = IAIDType
_SvcDhcpLeaseIAIDType_Object = MibTableColumn
svcDhcpLeaseIAIDType = _SvcDhcpLeaseIAIDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 22),
    _SvcDhcpLeaseIAIDType_Type()
)
svcDhcpLeaseIAIDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseIAIDType.setStatus("current")


class _SvcDhcpLeaseCiAddrMaskLen_Type(Unsigned32):
    """Custom type svcDhcpLeaseCiAddrMaskLen based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_SvcDhcpLeaseCiAddrMaskLen_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseCiAddrMaskLen_Object = MibTableColumn
svcDhcpLeaseCiAddrMaskLen = _SvcDhcpLeaseCiAddrMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 23),
    _SvcDhcpLeaseCiAddrMaskLen_Type()
)
svcDhcpLeaseCiAddrMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseCiAddrMaskLen.setStatus("current")
_SvcDhcpLeaseRetailerSvcId_Type = TmnxServId
_SvcDhcpLeaseRetailerSvcId_Object = MibTableColumn
svcDhcpLeaseRetailerSvcId = _SvcDhcpLeaseRetailerSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 24),
    _SvcDhcpLeaseRetailerSvcId_Type()
)
svcDhcpLeaseRetailerSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRetailerSvcId.setStatus("current")
_SvcDhcpLeaseRetailerIf_Type = InterfaceIndexOrZero
_SvcDhcpLeaseRetailerIf_Object = MibTableColumn
svcDhcpLeaseRetailerIf = _SvcDhcpLeaseRetailerIf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 25),
    _SvcDhcpLeaseRetailerIf_Type()
)
svcDhcpLeaseRetailerIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRetailerIf.setStatus("current")
_SvcDhcpLeaseAncpString_Type = TmnxAncpStringOrZero
_SvcDhcpLeaseAncpString_Object = MibTableColumn
svcDhcpLeaseAncpString = _SvcDhcpLeaseAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 26),
    _SvcDhcpLeaseAncpString_Type()
)
svcDhcpLeaseAncpString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseAncpString.setStatus("current")
_SvcDhcpLeaseFramedIpNetMaskTp_Type = InetAddressType
_SvcDhcpLeaseFramedIpNetMaskTp_Object = MibTableColumn
svcDhcpLeaseFramedIpNetMaskTp = _SvcDhcpLeaseFramedIpNetMaskTp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 27),
    _SvcDhcpLeaseFramedIpNetMaskTp_Type()
)
svcDhcpLeaseFramedIpNetMaskTp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseFramedIpNetMaskTp.setStatus("current")


class _SvcDhcpLeaseFramedIpNetMask_Type(InetAddress):
    """Custom type svcDhcpLeaseFramedIpNetMask based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseFramedIpNetMask_Type.__name__ = "InetAddress"
_SvcDhcpLeaseFramedIpNetMask_Object = MibTableColumn
svcDhcpLeaseFramedIpNetMask = _SvcDhcpLeaseFramedIpNetMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 28),
    _SvcDhcpLeaseFramedIpNetMask_Type()
)
svcDhcpLeaseFramedIpNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseFramedIpNetMask.setStatus("current")
_SvcDhcpLeaseBCastIpAddrType_Type = InetAddressType
_SvcDhcpLeaseBCastIpAddrType_Object = MibTableColumn
svcDhcpLeaseBCastIpAddrType = _SvcDhcpLeaseBCastIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 29),
    _SvcDhcpLeaseBCastIpAddrType_Type()
)
svcDhcpLeaseBCastIpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBCastIpAddrType.setStatus("current")


class _SvcDhcpLeaseBCastIpAddr_Type(InetAddress):
    """Custom type svcDhcpLeaseBCastIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseBCastIpAddr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseBCastIpAddr_Object = MibTableColumn
svcDhcpLeaseBCastIpAddr = _SvcDhcpLeaseBCastIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 30),
    _SvcDhcpLeaseBCastIpAddr_Type()
)
svcDhcpLeaseBCastIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBCastIpAddr.setStatus("current")
_SvcDhcpLeaseDefaultRouterTp_Type = InetAddressType
_SvcDhcpLeaseDefaultRouterTp_Object = MibTableColumn
svcDhcpLeaseDefaultRouterTp = _SvcDhcpLeaseDefaultRouterTp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 31),
    _SvcDhcpLeaseDefaultRouterTp_Type()
)
svcDhcpLeaseDefaultRouterTp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDefaultRouterTp.setStatus("current")


class _SvcDhcpLeaseDefaultRouter_Type(InetAddress):
    """Custom type svcDhcpLeaseDefaultRouter based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseDefaultRouter_Type.__name__ = "InetAddress"
_SvcDhcpLeaseDefaultRouter_Object = MibTableColumn
svcDhcpLeaseDefaultRouter = _SvcDhcpLeaseDefaultRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 32),
    _SvcDhcpLeaseDefaultRouter_Type()
)
svcDhcpLeaseDefaultRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDefaultRouter.setStatus("current")
_SvcDhcpLeasePrimaryDnsType_Type = InetAddressType
_SvcDhcpLeasePrimaryDnsType_Object = MibTableColumn
svcDhcpLeasePrimaryDnsType = _SvcDhcpLeasePrimaryDnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 33),
    _SvcDhcpLeasePrimaryDnsType_Type()
)
svcDhcpLeasePrimaryDnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePrimaryDnsType.setStatus("current")


class _SvcDhcpLeasePrimaryDns_Type(InetAddress):
    """Custom type svcDhcpLeasePrimaryDns based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeasePrimaryDns_Type.__name__ = "InetAddress"
_SvcDhcpLeasePrimaryDns_Object = MibTableColumn
svcDhcpLeasePrimaryDns = _SvcDhcpLeasePrimaryDns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 34),
    _SvcDhcpLeasePrimaryDns_Type()
)
svcDhcpLeasePrimaryDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePrimaryDns.setStatus("current")
_SvcDhcpLeaseSecondaryDnsType_Type = InetAddressType
_SvcDhcpLeaseSecondaryDnsType_Object = MibTableColumn
svcDhcpLeaseSecondaryDnsType = _SvcDhcpLeaseSecondaryDnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 35),
    _SvcDhcpLeaseSecondaryDnsType_Type()
)
svcDhcpLeaseSecondaryDnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSecondaryDnsType.setStatus("current")


class _SvcDhcpLeaseSecondaryDns_Type(InetAddress):
    """Custom type svcDhcpLeaseSecondaryDns based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseSecondaryDns_Type.__name__ = "InetAddress"
_SvcDhcpLeaseSecondaryDns_Object = MibTableColumn
svcDhcpLeaseSecondaryDns = _SvcDhcpLeaseSecondaryDns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 36),
    _SvcDhcpLeaseSecondaryDns_Type()
)
svcDhcpLeaseSecondaryDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSecondaryDns.setStatus("current")


class _SvcDhcpLeaseSessionTimeout_Type(Unsigned32):
    """Custom type svcDhcpLeaseSessionTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcDhcpLeaseSessionTimeout_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseSessionTimeout_Object = MibTableColumn
svcDhcpLeaseSessionTimeout = _SvcDhcpLeaseSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 37),
    _SvcDhcpLeaseSessionTimeout_Type()
)
svcDhcpLeaseSessionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSessionTimeout.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcDhcpLeaseSessionTimeout.setUnits("seconds")
_SvcDhcpLeaseServerLeaseStart_Type = DateAndTime
_SvcDhcpLeaseServerLeaseStart_Object = MibTableColumn
svcDhcpLeaseServerLeaseStart = _SvcDhcpLeaseServerLeaseStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 38),
    _SvcDhcpLeaseServerLeaseStart_Type()
)
svcDhcpLeaseServerLeaseStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseServerLeaseStart.setStatus("current")
_SvcDhcpLeaseServerLastRenew_Type = DateAndTime
_SvcDhcpLeaseServerLastRenew_Object = MibTableColumn
svcDhcpLeaseServerLastRenew = _SvcDhcpLeaseServerLastRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 39),
    _SvcDhcpLeaseServerLastRenew_Type()
)
svcDhcpLeaseServerLastRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseServerLastRenew.setStatus("current")
_SvcDhcpLeaseServerLeaseEnd_Type = DateAndTime
_SvcDhcpLeaseServerLeaseEnd_Object = MibTableColumn
svcDhcpLeaseServerLeaseEnd = _SvcDhcpLeaseServerLeaseEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 40),
    _SvcDhcpLeaseServerLeaseEnd_Type()
)
svcDhcpLeaseServerLeaseEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseServerLeaseEnd.setStatus("current")
_SvcDhcpLeaseDhcpServerAddrType_Type = InetAddressType
_SvcDhcpLeaseDhcpServerAddrType_Object = MibTableColumn
svcDhcpLeaseDhcpServerAddrType = _SvcDhcpLeaseDhcpServerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 41),
    _SvcDhcpLeaseDhcpServerAddrType_Type()
)
svcDhcpLeaseDhcpServerAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDhcpServerAddrType.setStatus("current")


class _SvcDhcpLeaseDhcpServerAddr_Type(InetAddress):
    """Custom type svcDhcpLeaseDhcpServerAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseDhcpServerAddr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseDhcpServerAddr_Object = MibTableColumn
svcDhcpLeaseDhcpServerAddr = _SvcDhcpLeaseDhcpServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 42),
    _SvcDhcpLeaseDhcpServerAddr_Type()
)
svcDhcpLeaseDhcpServerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDhcpServerAddr.setStatus("current")
_SvcDhcpLeaseOriginSubscrId_Type = DhcpLseStateInfoOrigin
_SvcDhcpLeaseOriginSubscrId_Object = MibTableColumn
svcDhcpLeaseOriginSubscrId = _SvcDhcpLeaseOriginSubscrId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 43),
    _SvcDhcpLeaseOriginSubscrId_Type()
)
svcDhcpLeaseOriginSubscrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOriginSubscrId.setStatus("obsolete")
_SvcDhcpLeaseOriginStrings_Type = DhcpLseStateInfoOrigin
_SvcDhcpLeaseOriginStrings_Object = MibTableColumn
svcDhcpLeaseOriginStrings = _SvcDhcpLeaseOriginStrings_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 44),
    _SvcDhcpLeaseOriginStrings_Type()
)
svcDhcpLeaseOriginStrings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOriginStrings.setStatus("obsolete")
_SvcDhcpLeaseOriginLeaseInfo_Type = DhcpLseStateInfoOrigin
_SvcDhcpLeaseOriginLeaseInfo_Object = MibTableColumn
svcDhcpLeaseOriginLeaseInfo = _SvcDhcpLeaseOriginLeaseInfo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 45),
    _SvcDhcpLeaseOriginLeaseInfo_Type()
)
svcDhcpLeaseOriginLeaseInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOriginLeaseInfo.setStatus("current")
_SvcDhcpLeaseDhcpClientAddrType_Type = InetAddressType
_SvcDhcpLeaseDhcpClientAddrType_Object = MibTableColumn
svcDhcpLeaseDhcpClientAddrType = _SvcDhcpLeaseDhcpClientAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 46),
    _SvcDhcpLeaseDhcpClientAddrType_Type()
)
svcDhcpLeaseDhcpClientAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDhcpClientAddrType.setStatus("current")


class _SvcDhcpLeaseDhcpClientAddr_Type(InetAddress):
    """Custom type svcDhcpLeaseDhcpClientAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseDhcpClientAddr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseDhcpClientAddr_Object = MibTableColumn
svcDhcpLeaseDhcpClientAddr = _SvcDhcpLeaseDhcpClientAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 47),
    _SvcDhcpLeaseDhcpClientAddr_Type()
)
svcDhcpLeaseDhcpClientAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDhcpClientAddr.setStatus("current")
_SvcDhcpLeaseLeaseSplitActive_Type = TruthValue
_SvcDhcpLeaseLeaseSplitActive_Object = MibTableColumn
svcDhcpLeaseLeaseSplitActive = _SvcDhcpLeaseLeaseSplitActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 48),
    _SvcDhcpLeaseLeaseSplitActive_Type()
)
svcDhcpLeaseLeaseSplitActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseLeaseSplitActive.setStatus("current")


class _SvcDhcpLeaseInterDestId_Type(DisplayString):
    """Custom type svcDhcpLeaseInterDestId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLeaseInterDestId_Type.__name__ = "DisplayString"
_SvcDhcpLeaseInterDestId_Object = MibTableColumn
svcDhcpLeaseInterDestId = _SvcDhcpLeaseInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 49),
    _SvcDhcpLeaseInterDestId_Type()
)
svcDhcpLeaseInterDestId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseInterDestId.setStatus("current")
_SvcDhcpLeasePrimaryNbnsType_Type = InetAddressType
_SvcDhcpLeasePrimaryNbnsType_Object = MibTableColumn
svcDhcpLeasePrimaryNbnsType = _SvcDhcpLeasePrimaryNbnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 50),
    _SvcDhcpLeasePrimaryNbnsType_Type()
)
svcDhcpLeasePrimaryNbnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePrimaryNbnsType.setStatus("current")


class _SvcDhcpLeasePrimaryNbns_Type(InetAddress):
    """Custom type svcDhcpLeasePrimaryNbns based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeasePrimaryNbns_Type.__name__ = "InetAddress"
_SvcDhcpLeasePrimaryNbns_Object = MibTableColumn
svcDhcpLeasePrimaryNbns = _SvcDhcpLeasePrimaryNbns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 51),
    _SvcDhcpLeasePrimaryNbns_Type()
)
svcDhcpLeasePrimaryNbns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePrimaryNbns.setStatus("current")
_SvcDhcpLeaseSecondaryNbnsType_Type = InetAddressType
_SvcDhcpLeaseSecondaryNbnsType_Object = MibTableColumn
svcDhcpLeaseSecondaryNbnsType = _SvcDhcpLeaseSecondaryNbnsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 52),
    _SvcDhcpLeaseSecondaryNbnsType_Type()
)
svcDhcpLeaseSecondaryNbnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSecondaryNbnsType.setStatus("current")


class _SvcDhcpLeaseSecondaryNbns_Type(InetAddress):
    """Custom type svcDhcpLeaseSecondaryNbns based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseSecondaryNbns_Type.__name__ = "InetAddress"
_SvcDhcpLeaseSecondaryNbns_Object = MibTableColumn
svcDhcpLeaseSecondaryNbns = _SvcDhcpLeaseSecondaryNbns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 53),
    _SvcDhcpLeaseSecondaryNbns_Type()
)
svcDhcpLeaseSecondaryNbns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSecondaryNbns.setStatus("current")
_SvcDhcpLeaseAppProfString_Type = DisplayString
_SvcDhcpLeaseAppProfString_Object = MibTableColumn
svcDhcpLeaseAppProfString = _SvcDhcpLeaseAppProfString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 54),
    _SvcDhcpLeaseAppProfString_Type()
)
svcDhcpLeaseAppProfString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseAppProfString.setStatus("current")
_SvcDhcpLeaseCategoryMapName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseCategoryMapName_Object = MibTableColumn
svcDhcpLeaseCategoryMapName = _SvcDhcpLeaseCategoryMapName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 55),
    _SvcDhcpLeaseCategoryMapName_Type()
)
svcDhcpLeaseCategoryMapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseCategoryMapName.setStatus("current")
_SvcDhcpLeaseNakNextRenew_Type = TruthValue
_SvcDhcpLeaseNakNextRenew_Object = MibTableColumn
svcDhcpLeaseNakNextRenew = _SvcDhcpLeaseNakNextRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 56),
    _SvcDhcpLeaseNakNextRenew_Type()
)
svcDhcpLeaseNakNextRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseNakNextRenew.setStatus("current")


class _SvcDhcpLeaseRadiusClassAttr_Type(OctetString):
    """Custom type svcDhcpLeaseRadiusClassAttr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_SvcDhcpLeaseRadiusClassAttr_Type.__name__ = "OctetString"
_SvcDhcpLeaseRadiusClassAttr_Object = MibTableColumn
svcDhcpLeaseRadiusClassAttr = _SvcDhcpLeaseRadiusClassAttr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 57),
    _SvcDhcpLeaseRadiusClassAttr_Type()
)
svcDhcpLeaseRadiusClassAttr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadiusClassAttr.setStatus("current")


class _SvcDhcpLeaseRadiusUserName_Type(DisplayString):
    """Custom type svcDhcpLeaseRadiusUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_SvcDhcpLeaseRadiusUserName_Type.__name__ = "DisplayString"
_SvcDhcpLeaseRadiusUserName_Object = MibTableColumn
svcDhcpLeaseRadiusUserName = _SvcDhcpLeaseRadiusUserName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 58),
    _SvcDhcpLeaseRadiusUserName_Type()
)
svcDhcpLeaseRadiusUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadiusUserName.setStatus("current")
_SvcDhcpLeasePoolName_Type = TNamedItem
_SvcDhcpLeasePoolName_Object = MibTableColumn
svcDhcpLeasePoolName = _SvcDhcpLeasePoolName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 59),
    _SvcDhcpLeasePoolName_Type()
)
svcDhcpLeasePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePoolName.setStatus("current")


class _SvcDhcpLeaseServerId_Type(OctetString):
    """Custom type svcDhcpLeaseServerId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseServerId_Type.__name__ = "OctetString"
_SvcDhcpLeaseServerId_Object = MibTableColumn
svcDhcpLeaseServerId = _SvcDhcpLeaseServerId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 60),
    _SvcDhcpLeaseServerId_Type()
)
svcDhcpLeaseServerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseServerId.setStatus("current")


class _SvcDhcpLeaseInterfaceId_Type(OctetString):
    """Custom type svcDhcpLeaseInterfaceId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseInterfaceId_Type.__name__ = "OctetString"
_SvcDhcpLeaseInterfaceId_Object = MibTableColumn
svcDhcpLeaseInterfaceId = _SvcDhcpLeaseInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 61),
    _SvcDhcpLeaseInterfaceId_Type()
)
svcDhcpLeaseInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseInterfaceId.setStatus("current")


class _SvcDhcpLeaseRemoteId_Type(OctetString):
    """Custom type svcDhcpLeaseRemoteId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseRemoteId_Type.__name__ = "OctetString"
_SvcDhcpLeaseRemoteId_Object = MibTableColumn
svcDhcpLeaseRemoteId = _SvcDhcpLeaseRemoteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 62),
    _SvcDhcpLeaseRemoteId_Type()
)
svcDhcpLeaseRemoteId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRemoteId.setStatus("current")


class _SvcDhcpLeaseOption60_Type(OctetString):
    """Custom type svcDhcpLeaseOption60 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseOption60_Type.__name__ = "OctetString"
_SvcDhcpLeaseOption60_Object = MibTableColumn
svcDhcpLeaseOption60 = _SvcDhcpLeaseOption60_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 63),
    _SvcDhcpLeaseOption60_Type()
)
svcDhcpLeaseOption60.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOption60.setStatus("current")


class _SvcDhcpLeaseRadCalledStationId_Type(OctetString):
    """Custom type svcDhcpLeaseRadCalledStationId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SvcDhcpLeaseRadCalledStationId_Type.__name__ = "OctetString"
_SvcDhcpLeaseRadCalledStationId_Object = MibTableColumn
svcDhcpLeaseRadCalledStationId = _SvcDhcpLeaseRadCalledStationId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 64),
    _SvcDhcpLeaseRadCalledStationId_Type()
)
svcDhcpLeaseRadCalledStationId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadCalledStationId.setStatus("current")
_SvcDhcpLeaseLeaseTime_Type = Unsigned32
_SvcDhcpLeaseLeaseTime_Object = MibTableColumn
svcDhcpLeaseLeaseTime = _SvcDhcpLeaseLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 65),
    _SvcDhcpLeaseLeaseTime_Type()
)
svcDhcpLeaseLeaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    svcDhcpLeaseLeaseTime.setUnits("seconds")
_SvcDhcpLeaseSessTimeout_Type = Unsigned32
_SvcDhcpLeaseSessTimeout_Object = MibTableColumn
svcDhcpLeaseSessTimeout = _SvcDhcpLeaseSessTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 66),
    _SvcDhcpLeaseSessTimeout_Type()
)
svcDhcpLeaseSessTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSessTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcDhcpLeaseSessTimeout.setUnits("seconds")
_SvcDhcpLeaseUptime_Type = Unsigned32
_SvcDhcpLeaseUptime_Object = MibTableColumn
svcDhcpLeaseUptime = _SvcDhcpLeaseUptime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 67),
    _SvcDhcpLeaseUptime_Type()
)
svcDhcpLeaseUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseUptime.setStatus("current")
if mibBuilder.loadTexts:
    svcDhcpLeaseUptime.setUnits("seconds")
_SvcDhcpLeaseRemainingSessTime_Type = Unsigned32
_SvcDhcpLeaseRemainingSessTime_Object = MibTableColumn
svcDhcpLeaseRemainingSessTime = _SvcDhcpLeaseRemainingSessTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 68),
    _SvcDhcpLeaseRemainingSessTime_Type()
)
svcDhcpLeaseRemainingSessTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRemainingSessTime.setStatus("current")
if mibBuilder.loadTexts:
    svcDhcpLeaseRemainingSessTime.setUnits("seconds")
_SvcDhcpLeaseMngdRtStatus_Type = TmnxManagedRouteStatus
_SvcDhcpLeaseMngdRtStatus_Object = MibTableColumn
svcDhcpLeaseMngdRtStatus = _SvcDhcpLeaseMngdRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 69),
    _SvcDhcpLeaseMngdRtStatus_Type()
)
svcDhcpLeaseMngdRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseMngdRtStatus.setStatus("current")
_SvcDhcpLeaseTerminationType_Type = TmnxSubTerminationType
_SvcDhcpLeaseTerminationType_Object = MibTableColumn
svcDhcpLeaseTerminationType = _SvcDhcpLeaseTerminationType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 70),
    _SvcDhcpLeaseTerminationType_Type()
)
svcDhcpLeaseTerminationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseTerminationType.setStatus("current")
_SvcDhcpLeaseIpoeSessionHost_Type = TruthValue
_SvcDhcpLeaseIpoeSessionHost_Object = MibTableColumn
svcDhcpLeaseIpoeSessionHost = _SvcDhcpLeaseIpoeSessionHost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 71),
    _SvcDhcpLeaseIpoeSessionHost_Type()
)
svcDhcpLeaseIpoeSessionHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseIpoeSessionHost.setStatus("current")
_SvcDhcpLeasePppSession_Type = TruthValue
_SvcDhcpLeasePppSession_Object = MibTableColumn
svcDhcpLeasePppSession = _SvcDhcpLeasePppSession_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 72),
    _SvcDhcpLeasePppSession_Type()
)
svcDhcpLeasePppSession.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeasePppSession.setStatus("current")
_SvcDhcpLeaseRadSubIfPfxType_Type = InetAddressType
_SvcDhcpLeaseRadSubIfPfxType_Object = MibTableColumn
svcDhcpLeaseRadSubIfPfxType = _SvcDhcpLeaseRadSubIfPfxType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 73),
    _SvcDhcpLeaseRadSubIfPfxType_Type()
)
svcDhcpLeaseRadSubIfPfxType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadSubIfPfxType.setStatus("current")


class _SvcDhcpLeaseRadSubIfPfx_Type(InetAddress):
    """Custom type svcDhcpLeaseRadSubIfPfx based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseRadSubIfPfx_Type.__name__ = "InetAddress"
_SvcDhcpLeaseRadSubIfPfx_Object = MibTableColumn
svcDhcpLeaseRadSubIfPfx = _SvcDhcpLeaseRadSubIfPfx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 74),
    _SvcDhcpLeaseRadSubIfPfx_Type()
)
svcDhcpLeaseRadSubIfPfx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadSubIfPfx.setStatus("current")


class _SvcDhcpLeaseRadSubIfPfxLen_Type(InetAddressPrefixLength):
    """Custom type svcDhcpLeaseRadSubIfPfxLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_SvcDhcpLeaseRadSubIfPfxLen_Type.__name__ = "InetAddressPrefixLength"
_SvcDhcpLeaseRadSubIfPfxLen_Object = MibTableColumn
svcDhcpLeaseRadSubIfPfxLen = _SvcDhcpLeaseRadSubIfPfxLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 75),
    _SvcDhcpLeaseRadSubIfPfxLen_Type()
)
svcDhcpLeaseRadSubIfPfxLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRadSubIfPfxLen.setStatus("current")
_SvcDhcpLeaseRtrAdvPlcy_Type = TNamedItemOrEmpty
_SvcDhcpLeaseRtrAdvPlcy_Object = MibTableColumn
svcDhcpLeaseRtrAdvPlcy = _SvcDhcpLeaseRtrAdvPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 76),
    _SvcDhcpLeaseRtrAdvPlcy_Type()
)
svcDhcpLeaseRtrAdvPlcy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRtrAdvPlcy.setStatus("current")
_SvcDhcpLeaseWlanGwBridgeId_Type = Unsigned32
_SvcDhcpLeaseWlanGwBridgeId_Object = MibTableColumn
svcDhcpLeaseWlanGwBridgeId = _SvcDhcpLeaseWlanGwBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 90, 1, 77),
    _SvcDhcpLeaseWlanGwBridgeId_Type()
)
svcDhcpLeaseWlanGwBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWlanGwBridgeId.setStatus("current")
_SvcDhcpLeaseModifyTable_Object = MibTable
svcDhcpLeaseModifyTable = _SvcDhcpLeaseModifyTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseModifyTable.setStatus("current")
_SvcDhcpLeaseModifyEntry_Object = MibTableRow
svcDhcpLeaseModifyEntry = _SvcDhcpLeaseModifyEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseModifyEntry.setStatus("current")


class _SvcDhcpLeaseModifySubIndent_Type(TmnxSubIdentStringOrEmpty):
    """Custom type svcDhcpLeaseModifySubIndent based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SvcDhcpLeaseModifySubIndent_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SvcDhcpLeaseModifySubIndent_Object = MibTableColumn
svcDhcpLeaseModifySubIndent = _SvcDhcpLeaseModifySubIndent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 1),
    _SvcDhcpLeaseModifySubIndent_Type()
)
svcDhcpLeaseModifySubIndent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModifySubIndent.setStatus("current")


class _SvcDhcpLeaseModifySubProfile_Type(DisplayString):
    """Custom type svcDhcpLeaseModifySubProfile based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLeaseModifySubProfile_Type.__name__ = "DisplayString"
_SvcDhcpLeaseModifySubProfile_Object = MibTableColumn
svcDhcpLeaseModifySubProfile = _SvcDhcpLeaseModifySubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 2),
    _SvcDhcpLeaseModifySubProfile_Type()
)
svcDhcpLeaseModifySubProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModifySubProfile.setStatus("current")


class _SvcDhcpLeaseModifySlaProfile_Type(DisplayString):
    """Custom type svcDhcpLeaseModifySlaProfile based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLeaseModifySlaProfile_Type.__name__ = "DisplayString"
_SvcDhcpLeaseModifySlaProfile_Object = MibTableColumn
svcDhcpLeaseModifySlaProfile = _SvcDhcpLeaseModifySlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 3),
    _SvcDhcpLeaseModifySlaProfile_Type()
)
svcDhcpLeaseModifySlaProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModifySlaProfile.setStatus("current")


class _SvcDhcpLeaseEvaluateState_Type(TruthValue):
    """Custom type svcDhcpLeaseEvaluateState based on TruthValue"""
    defaultValue = 2


_SvcDhcpLeaseEvaluateState_Type.__name__ = "TruthValue"
_SvcDhcpLeaseEvaluateState_Object = MibTableColumn
svcDhcpLeaseEvaluateState = _SvcDhcpLeaseEvaluateState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 4),
    _SvcDhcpLeaseEvaluateState_Type()
)
svcDhcpLeaseEvaluateState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseEvaluateState.setStatus("current")


class _SvcDhcpLeaseModInterDestId_Type(DisplayString):
    """Custom type svcDhcpLeaseModInterDestId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcDhcpLeaseModInterDestId_Type.__name__ = "DisplayString"
_SvcDhcpLeaseModInterDestId_Object = MibTableColumn
svcDhcpLeaseModInterDestId = _SvcDhcpLeaseModInterDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 5),
    _SvcDhcpLeaseModInterDestId_Type()
)
svcDhcpLeaseModInterDestId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModInterDestId.setStatus("current")


class _SvcDhcpLeaseModifyAncpString_Type(TmnxAncpStringOrZero):
    """Custom type svcDhcpLeaseModifyAncpString based on TmnxAncpStringOrZero"""
    defaultHexValue = ""


_SvcDhcpLeaseModifyAncpString_Type.__name__ = "TmnxAncpStringOrZero"
_SvcDhcpLeaseModifyAncpString_Object = MibTableColumn
svcDhcpLeaseModifyAncpString = _SvcDhcpLeaseModifyAncpString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 6),
    _SvcDhcpLeaseModifyAncpString_Type()
)
svcDhcpLeaseModifyAncpString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModifyAncpString.setStatus("current")


class _SvcDhcpLeaseModifyAppProfile_Type(DisplayString):
    """Custom type svcDhcpLeaseModifyAppProfile based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SvcDhcpLeaseModifyAppProfile_Type.__name__ = "DisplayString"
_SvcDhcpLeaseModifyAppProfile_Object = MibTableColumn
svcDhcpLeaseModifyAppProfile = _SvcDhcpLeaseModifyAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 91, 1, 7),
    _SvcDhcpLeaseModifyAppProfile_Type()
)
svcDhcpLeaseModifyAppProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseModifyAppProfile.setStatus("current")
_SvcDhcpLeaseActionTable_Object = MibTable
svcDhcpLeaseActionTable = _SvcDhcpLeaseActionTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 92)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseActionTable.setStatus("current")
_SvcDhcpLeaseActionEntry_Object = MibTableRow
svcDhcpLeaseActionEntry = _SvcDhcpLeaseActionEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 92, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseActionEntry.setStatus("current")


class _SvcDhcpLeaseForceRenew_Type(TruthValue):
    """Custom type svcDhcpLeaseForceRenew based on TruthValue"""
    defaultValue = 2


_SvcDhcpLeaseForceRenew_Type.__name__ = "TruthValue"
_SvcDhcpLeaseForceRenew_Object = MibTableColumn
svcDhcpLeaseForceRenew = _SvcDhcpLeaseForceRenew_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 92, 1, 1),
    _SvcDhcpLeaseForceRenew_Type()
)
svcDhcpLeaseForceRenew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcDhcpLeaseForceRenew.setStatus("current")
_SvcDhcpLeaseBgpTable_Object = MibTable
svcDhcpLeaseBgpTable = _SvcDhcpLeaseBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpTable.setStatus("current")
_SvcDhcpLeaseBgpEntry_Object = MibTableRow
svcDhcpLeaseBgpEntry = _SvcDhcpLeaseBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpEntry.setStatus("current")
_SvcDhcpLeaseBgpPrngPlcyName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseBgpPrngPlcyName_Object = MibTableColumn
svcDhcpLeaseBgpPrngPlcyName = _SvcDhcpLeaseBgpPrngPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 1),
    _SvcDhcpLeaseBgpPrngPlcyName_Type()
)
svcDhcpLeaseBgpPrngPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpPrngPlcyName.setStatus("current")
_SvcDhcpLeaseBgpAuthKeyChain_Type = TNamedItemOrEmpty
_SvcDhcpLeaseBgpAuthKeyChain_Object = MibTableColumn
svcDhcpLeaseBgpAuthKeyChain = _SvcDhcpLeaseBgpAuthKeyChain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 2),
    _SvcDhcpLeaseBgpAuthKeyChain_Type()
)
svcDhcpLeaseBgpAuthKeyChain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpAuthKeyChain.setStatus("current")


class _SvcDhcpLeaseBgpMD5AuthKey_Type(OctetString):
    """Custom type svcDhcpLeaseBgpMD5AuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcDhcpLeaseBgpMD5AuthKey_Type.__name__ = "OctetString"
_SvcDhcpLeaseBgpMD5AuthKey_Object = MibTableColumn
svcDhcpLeaseBgpMD5AuthKey = _SvcDhcpLeaseBgpMD5AuthKey_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 3),
    _SvcDhcpLeaseBgpMD5AuthKey_Type()
)
svcDhcpLeaseBgpMD5AuthKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpMD5AuthKey.setStatus("current")
_SvcDhcpLeaseBgpImportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcDhcpLeaseBgpImportPolicy_Object = MibTableColumn
svcDhcpLeaseBgpImportPolicy = _SvcDhcpLeaseBgpImportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 4),
    _SvcDhcpLeaseBgpImportPolicy_Type()
)
svcDhcpLeaseBgpImportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpImportPolicy.setStatus("current")
_SvcDhcpLeaseBgpExportPolicy_Type = TPolicyStatementNameOrEmpty
_SvcDhcpLeaseBgpExportPolicy_Object = MibTableColumn
svcDhcpLeaseBgpExportPolicy = _SvcDhcpLeaseBgpExportPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 5),
    _SvcDhcpLeaseBgpExportPolicy_Type()
)
svcDhcpLeaseBgpExportPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpExportPolicy.setStatus("current")
_SvcDhcpLeaseBgpPeerAS_Type = InetAutonomousSystemNumber
_SvcDhcpLeaseBgpPeerAS_Object = MibTableColumn
svcDhcpLeaseBgpPeerAS = _SvcDhcpLeaseBgpPeerAS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 6),
    _SvcDhcpLeaseBgpPeerAS_Type()
)
svcDhcpLeaseBgpPeerAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpPeerAS.setStatus("current")
_SvcDhcpLeaseBgpPeeringStatus_Type = BgpPeeringStatus
_SvcDhcpLeaseBgpPeeringStatus_Object = MibTableColumn
svcDhcpLeaseBgpPeeringStatus = _SvcDhcpLeaseBgpPeeringStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 93, 1, 7),
    _SvcDhcpLeaseBgpPeeringStatus_Type()
)
svcDhcpLeaseBgpPeeringStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseBgpPeeringStatus.setStatus("current")
_SvcTmplTlsTblLastChanged_Type = TimeStamp
_SvcTmplTlsTblLastChanged_Object = MibScalar
svcTmplTlsTblLastChanged = _SvcTmplTlsTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 94),
    _SvcTmplTlsTblLastChanged_Type()
)
svcTmplTlsTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplTlsTblLastChanged.setStatus("current")
_SvcTmplTlsTable_Object = MibTable
svcTmplTlsTable = _SvcTmplTlsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95)
)
if mibBuilder.loadTexts:
    svcTmplTlsTable.setStatus("current")
_SvcTmplTlsEntry_Object = MibTableRow
svcTmplTlsEntry = _SvcTmplTlsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1)
)
svcTmplTlsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcTmplName"),
)
if mibBuilder.loadTexts:
    svcTmplTlsEntry.setStatus("current")
_SvcTmplTlsLastChanged_Type = TimeStamp
_SvcTmplTlsLastChanged_Object = MibTableColumn
svcTmplTlsLastChanged = _SvcTmplTlsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 1),
    _SvcTmplTlsLastChanged_Type()
)
svcTmplTlsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplTlsLastChanged.setStatus("current")


class _SvcTmplTlsMacLearning_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsMacLearning based on TmnxEnabledDisabled"""
    defaultValue = 1


_SvcTmplTlsMacLearning_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsMacLearning_Object = MibTableColumn
svcTmplTlsMacLearning = _SvcTmplTlsMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 2),
    _SvcTmplTlsMacLearning_Type()
)
svcTmplTlsMacLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacLearning.setStatus("current")


class _SvcTmplTlsDiscardUnknownDest_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsDiscardUnknownDest based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTmplTlsDiscardUnknownDest_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsDiscardUnknownDest_Object = MibTableColumn
svcTmplTlsDiscardUnknownDest = _SvcTmplTlsDiscardUnknownDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 3),
    _SvcTmplTlsDiscardUnknownDest_Type()
)
svcTmplTlsDiscardUnknownDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsDiscardUnknownDest.setStatus("current")


class _SvcTmplTlsFdbTableSize_Type(Integer32):
    """Custom type svcTmplTlsFdbTableSize based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 511999),
    )


_SvcTmplTlsFdbTableSize_Type.__name__ = "Integer32"
_SvcTmplTlsFdbTableSize_Object = MibTableColumn
svcTmplTlsFdbTableSize = _SvcTmplTlsFdbTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 4),
    _SvcTmplTlsFdbTableSize_Type()
)
svcTmplTlsFdbTableSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsFdbTableSize.setStatus("current")


class _SvcTmplTlsFdbLocalAgeTime_Type(Integer32):
    """Custom type svcTmplTlsFdbLocalAgeTime based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_SvcTmplTlsFdbLocalAgeTime_Type.__name__ = "Integer32"
_SvcTmplTlsFdbLocalAgeTime_Object = MibTableColumn
svcTmplTlsFdbLocalAgeTime = _SvcTmplTlsFdbLocalAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 5),
    _SvcTmplTlsFdbLocalAgeTime_Type()
)
svcTmplTlsFdbLocalAgeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsFdbLocalAgeTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsFdbLocalAgeTime.setUnits("seconds")


class _SvcTmplTlsFdbRemoteAgeTime_Type(Integer32):
    """Custom type svcTmplTlsFdbRemoteAgeTime based on Integer32"""
    defaultValue = 900

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_SvcTmplTlsFdbRemoteAgeTime_Type.__name__ = "Integer32"
_SvcTmplTlsFdbRemoteAgeTime_Object = MibTableColumn
svcTmplTlsFdbRemoteAgeTime = _SvcTmplTlsFdbRemoteAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 6),
    _SvcTmplTlsFdbRemoteAgeTime_Type()
)
svcTmplTlsFdbRemoteAgeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsFdbRemoteAgeTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsFdbRemoteAgeTime.setUnits("seconds")


class _SvcTmplTlsStpAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTmplTlsStpAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTmplTlsStpAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTmplTlsStpAdminStatus_Object = MibTableColumn
svcTmplTlsStpAdminStatus = _SvcTmplTlsStpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 7),
    _SvcTmplTlsStpAdminStatus_Type()
)
svcTmplTlsStpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpAdminStatus.setStatus("current")


class _SvcTmplTlsStpPriority_Type(Integer32):
    """Custom type svcTmplTlsStpPriority based on Integer32"""
    defaultValue = 32768

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcTmplTlsStpPriority_Type.__name__ = "Integer32"
_SvcTmplTlsStpPriority_Object = MibTableColumn
svcTmplTlsStpPriority = _SvcTmplTlsStpPriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 8),
    _SvcTmplTlsStpPriority_Type()
)
svcTmplTlsStpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpPriority.setStatus("current")


class _SvcTmplTlsStpBridgeMaxAge_Type(Integer32):
    """Custom type svcTmplTlsStpBridgeMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 40),
    )


_SvcTmplTlsStpBridgeMaxAge_Type.__name__ = "Integer32"
_SvcTmplTlsStpBridgeMaxAge_Object = MibTableColumn
svcTmplTlsStpBridgeMaxAge = _SvcTmplTlsStpBridgeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 9),
    _SvcTmplTlsStpBridgeMaxAge_Type()
)
svcTmplTlsStpBridgeMaxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeMaxAge.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeMaxAge.setUnits("seconds")


class _SvcTmplTlsStpBridgeHelloTime_Type(Integer32):
    """Custom type svcTmplTlsStpBridgeHelloTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcTmplTlsStpBridgeHelloTime_Type.__name__ = "Integer32"
_SvcTmplTlsStpBridgeHelloTime_Object = MibTableColumn
svcTmplTlsStpBridgeHelloTime = _SvcTmplTlsStpBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 10),
    _SvcTmplTlsStpBridgeHelloTime_Type()
)
svcTmplTlsStpBridgeHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeHelloTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeHelloTime.setUnits("seconds")


class _SvcTmplTlsStpBridgeForwardDelay_Type(Integer32):
    """Custom type svcTmplTlsStpBridgeForwardDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 30),
    )


_SvcTmplTlsStpBridgeForwardDelay_Type.__name__ = "Integer32"
_SvcTmplTlsStpBridgeForwardDelay_Object = MibTableColumn
svcTmplTlsStpBridgeForwardDelay = _SvcTmplTlsStpBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 11),
    _SvcTmplTlsStpBridgeForwardDelay_Type()
)
svcTmplTlsStpBridgeForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeForwardDelay.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsStpBridgeForwardDelay.setUnits("seconds")


class _SvcTmplTlsMacAgeing_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsMacAgeing based on TmnxEnabledDisabled"""
    defaultValue = 1


_SvcTmplTlsMacAgeing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsMacAgeing_Object = MibTableColumn
svcTmplTlsMacAgeing = _SvcTmplTlsMacAgeing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 12),
    _SvcTmplTlsMacAgeing_Type()
)
svcTmplTlsMacAgeing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacAgeing.setStatus("current")


class _SvcTmplTlsFdbTableFullHighWMark_Type(Integer32):
    """Custom type svcTmplTlsFdbTableFullHighWMark based on Integer32"""
    defaultValue = 95

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTmplTlsFdbTableFullHighWMark_Type.__name__ = "Integer32"
_SvcTmplTlsFdbTableFullHighWMark_Object = MibTableColumn
svcTmplTlsFdbTableFullHighWMark = _SvcTmplTlsFdbTableFullHighWMark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 13),
    _SvcTmplTlsFdbTableFullHighWMark_Type()
)
svcTmplTlsFdbTableFullHighWMark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsFdbTableFullHighWMark.setStatus("current")


class _SvcTmplTlsFdbTableFullLowWMark_Type(Integer32):
    """Custom type svcTmplTlsFdbTableFullLowWMark based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTmplTlsFdbTableFullLowWMark_Type.__name__ = "Integer32"
_SvcTmplTlsFdbTableFullLowWMark_Object = MibTableColumn
svcTmplTlsFdbTableFullLowWMark = _SvcTmplTlsFdbTableFullLowWMark_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 14),
    _SvcTmplTlsFdbTableFullLowWMark_Type()
)
svcTmplTlsFdbTableFullLowWMark.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsFdbTableFullLowWMark.setStatus("current")


class _SvcTmplTlsStpVersion_Type(Integer32):
    """Custom type svcTmplTlsStpVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("rstp", 2),
          ("compDot1w", 3),
          ("dot1w", 4),
          ("mstp", 5),
          ("pmstp", 6))
    )


_SvcTmplTlsStpVersion_Type.__name__ = "Integer32"
_SvcTmplTlsStpVersion_Object = MibTableColumn
svcTmplTlsStpVersion = _SvcTmplTlsStpVersion_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 15),
    _SvcTmplTlsStpVersion_Type()
)
svcTmplTlsStpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpVersion.setStatus("current")


class _SvcTmplTlsStpHoldCount_Type(Integer32):
    """Custom type svcTmplTlsStpHoldCount based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_SvcTmplTlsStpHoldCount_Type.__name__ = "Integer32"
_SvcTmplTlsStpHoldCount_Object = MibTableColumn
svcTmplTlsStpHoldCount = _SvcTmplTlsStpHoldCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 16),
    _SvcTmplTlsStpHoldCount_Type()
)
svcTmplTlsStpHoldCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsStpHoldCount.setStatus("current")


class _SvcTmplTlsPerSvcHashing_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsPerSvcHashing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTmplTlsPerSvcHashing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsPerSvcHashing_Object = MibTableColumn
svcTmplTlsPerSvcHashing = _SvcTmplTlsPerSvcHashing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 17),
    _SvcTmplTlsPerSvcHashing_Type()
)
svcTmplTlsPerSvcHashing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsPerSvcHashing.setStatus("current")


class _SvcTmplTlsTempFloodTime_Type(Integer32):
    """Custom type svcTmplTlsTempFloodTime based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(3, 600),
    )


_SvcTmplTlsTempFloodTime_Type.__name__ = "Integer32"
_SvcTmplTlsTempFloodTime_Object = MibTableColumn
svcTmplTlsTempFloodTime = _SvcTmplTlsTempFloodTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 18),
    _SvcTmplTlsTempFloodTime_Type()
)
svcTmplTlsTempFloodTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsTempFloodTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsTempFloodTime.setUnits("seconds")


class _SvcTmplTlsMacMoveMaxRate_Type(Unsigned32):
    """Custom type svcTmplTlsMacMoveMaxRate based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcTmplTlsMacMoveMaxRate_Type.__name__ = "Unsigned32"
_SvcTmplTlsMacMoveMaxRate_Object = MibTableColumn
svcTmplTlsMacMoveMaxRate = _SvcTmplTlsMacMoveMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 19),
    _SvcTmplTlsMacMoveMaxRate_Type()
)
svcTmplTlsMacMoveMaxRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveMaxRate.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveMaxRate.setUnits("per-second")


class _SvcTmplTlsMacMoveRetryTimeout_Type(Unsigned32):
    """Custom type svcTmplTlsMacMoveRetryTimeout based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_SvcTmplTlsMacMoveRetryTimeout_Type.__name__ = "Unsigned32"
_SvcTmplTlsMacMoveRetryTimeout_Object = MibTableColumn
svcTmplTlsMacMoveRetryTimeout = _SvcTmplTlsMacMoveRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 20),
    _SvcTmplTlsMacMoveRetryTimeout_Type()
)
svcTmplTlsMacMoveRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveRetryTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveRetryTimeout.setUnits("seconds")


class _SvcTmplTlsMacMoveAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTmplTlsMacMoveAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTmplTlsMacMoveAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTmplTlsMacMoveAdminStatus_Object = MibTableColumn
svcTmplTlsMacMoveAdminStatus = _SvcTmplTlsMacMoveAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 21),
    _SvcTmplTlsMacMoveAdminStatus_Type()
)
svcTmplTlsMacMoveAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveAdminStatus.setStatus("current")


class _SvcTmplTlsPriPortsCumFactor_Type(Unsigned32):
    """Custom type svcTmplTlsPriPortsCumFactor based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SvcTmplTlsPriPortsCumFactor_Type.__name__ = "Unsigned32"
_SvcTmplTlsPriPortsCumFactor_Object = MibTableColumn
svcTmplTlsPriPortsCumFactor = _SvcTmplTlsPriPortsCumFactor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 22),
    _SvcTmplTlsPriPortsCumFactor_Type()
)
svcTmplTlsPriPortsCumFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsPriPortsCumFactor.setStatus("current")


class _SvcTmplTlsSecPortsCumFactor_Type(Unsigned32):
    """Custom type svcTmplTlsSecPortsCumFactor based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 9),
    )


_SvcTmplTlsSecPortsCumFactor_Type.__name__ = "Unsigned32"
_SvcTmplTlsSecPortsCumFactor_Object = MibTableColumn
svcTmplTlsSecPortsCumFactor = _SvcTmplTlsSecPortsCumFactor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 23),
    _SvcTmplTlsSecPortsCumFactor_Type()
)
svcTmplTlsSecPortsCumFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsSecPortsCumFactor.setStatus("current")


class _SvcTmplTlsMacMoveNumRetries_Type(Unsigned32):
    """Custom type svcTmplTlsMacMoveNumRetries based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcTmplTlsMacMoveNumRetries_Type.__name__ = "Unsigned32"
_SvcTmplTlsMacMoveNumRetries_Object = MibTableColumn
svcTmplTlsMacMoveNumRetries = _SvcTmplTlsMacMoveNumRetries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 24),
    _SvcTmplTlsMacMoveNumRetries_Type()
)
svcTmplTlsMacMoveNumRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsMacMoveNumRetries.setStatus("current")


class _SvcTmplTlsSpiLoadBalancing_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsSpiLoadBalancing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTmplTlsSpiLoadBalancing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsSpiLoadBalancing_Object = MibTableColumn
svcTmplTlsSpiLoadBalancing = _SvcTmplTlsSpiLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 25),
    _SvcTmplTlsSpiLoadBalancing_Type()
)
svcTmplTlsSpiLoadBalancing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsSpiLoadBalancing.setStatus("current")


class _SvcTmplTlsTeidLoadBalancing_Type(TmnxEnabledDisabled):
    """Custom type svcTmplTlsTeidLoadBalancing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTmplTlsTeidLoadBalancing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTmplTlsTeidLoadBalancing_Object = MibTableColumn
svcTmplTlsTeidLoadBalancing = _SvcTmplTlsTeidLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 95, 1, 26),
    _SvcTmplTlsTeidLoadBalancing_Type()
)
svcTmplTlsTeidLoadBalancing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTmplTlsTeidLoadBalancing.setStatus("current")
_SvcTmplUserTable_Object = MibTable
svcTmplUserTable = _SvcTmplUserTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 96)
)
if mibBuilder.loadTexts:
    svcTmplUserTable.setStatus("current")
_SvcTmplUserEntry_Object = MibTableRow
svcTmplUserEntry = _SvcTmplUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 96, 1)
)
svcTmplUserEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcTmplName"),
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTmplUserEntry.setStatus("current")


class _SvcTmplUserCreationOrigin_Type(Integer32):
    """Custom type svcTmplUserCreationOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("mVpls", 1)
    )


_SvcTmplUserCreationOrigin_Type.__name__ = "Integer32"
_SvcTmplUserCreationOrigin_Object = MibTableColumn
svcTmplUserCreationOrigin = _SvcTmplUserCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 96, 1, 1),
    _SvcTmplUserCreationOrigin_Type()
)
svcTmplUserCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplUserCreationOrigin.setStatus("current")
_SvcTmplUserCreatorSvcId_Type = TmnxServId
_SvcTmplUserCreatorSvcId_Object = MibTableColumn
svcTmplUserCreatorSvcId = _SvcTmplUserCreatorSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 96, 1, 2),
    _SvcTmplUserCreatorSvcId_Type()
)
svcTmplUserCreatorSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTmplUserCreatorSvcId.setStatus("current")
_SvcTlsExtTable_Object = MibTable
svcTlsExtTable = _SvcTlsExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97)
)
if mibBuilder.loadTexts:
    svcTlsExtTable.setStatus("current")
_SvcTlsExtEntry_Object = MibTableRow
svcTlsExtEntry = _SvcTlsExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1)
)
if mibBuilder.loadTexts:
    svcTlsExtEntry.setStatus("current")


class _SvcTlsExtMvrpMaxAttributes_Type(Unsigned32):
    """Custom type svcTlsExtMvrpMaxAttributes based on Unsigned32"""
    defaultValue = 4095

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_SvcTlsExtMvrpMaxAttributes_Type.__name__ = "Unsigned32"
_SvcTlsExtMvrpMaxAttributes_Object = MibTableColumn
svcTlsExtMvrpMaxAttributes = _SvcTlsExtMvrpMaxAttributes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 1),
    _SvcTlsExtMvrpMaxAttributes_Type()
)
svcTlsExtMvrpMaxAttributes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMvrpMaxAttributes.setStatus("current")
_SvcTlsExtMvrpRegAttrCnt_Type = Unsigned32
_SvcTlsExtMvrpRegAttrCnt_Object = MibTableColumn
svcTlsExtMvrpRegAttrCnt = _SvcTlsExtMvrpRegAttrCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 2),
    _SvcTlsExtMvrpRegAttrCnt_Type()
)
svcTlsExtMvrpRegAttrCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMvrpRegAttrCnt.setStatus("current")
_SvcTlsExtMvrpDeclaredAttrCnt_Type = Unsigned32
_SvcTlsExtMvrpDeclaredAttrCnt_Object = MibTableColumn
svcTlsExtMvrpDeclaredAttrCnt = _SvcTlsExtMvrpDeclaredAttrCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 3),
    _SvcTlsExtMvrpDeclaredAttrCnt_Type()
)
svcTlsExtMvrpDeclaredAttrCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMvrpDeclaredAttrCnt.setStatus("current")
_SvcTlsExtMvrpFailedRegCnt_Type = Unsigned32
_SvcTlsExtMvrpFailedRegCnt_Object = MibTableColumn
svcTlsExtMvrpFailedRegCnt = _SvcTlsExtMvrpFailedRegCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 4),
    _SvcTlsExtMvrpFailedRegCnt_Type()
)
svcTlsExtMvrpFailedRegCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMvrpFailedRegCnt.setStatus("current")


class _SvcTlsExtMvrpAttrTblHighWM_Type(Integer32):
    """Custom type svcTlsExtMvrpAttrTblHighWM based on Integer32"""
    defaultValue = 95

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsExtMvrpAttrTblHighWM_Type.__name__ = "Integer32"
_SvcTlsExtMvrpAttrTblHighWM_Object = MibTableColumn
svcTlsExtMvrpAttrTblHighWM = _SvcTlsExtMvrpAttrTblHighWM_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 5),
    _SvcTlsExtMvrpAttrTblHighWM_Type()
)
svcTlsExtMvrpAttrTblHighWM.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMvrpAttrTblHighWM.setStatus("current")


class _SvcTlsExtMvrpAttrTblLowWM_Type(Integer32):
    """Custom type svcTlsExtMvrpAttrTblLowWM based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcTlsExtMvrpAttrTblLowWM_Type.__name__ = "Integer32"
_SvcTlsExtMvrpAttrTblLowWM_Object = MibTableColumn
svcTlsExtMvrpAttrTblLowWM = _SvcTlsExtMvrpAttrTblLowWM_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 6),
    _SvcTlsExtMvrpAttrTblLowWM_Type()
)
svcTlsExtMvrpAttrTblLowWM.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMvrpAttrTblLowWM.setStatus("current")


class _SvcTlsExtMvrpHoldTime_Type(Unsigned32):
    """Custom type svcTlsExtMvrpHoldTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_SvcTlsExtMvrpHoldTime_Type.__name__ = "Unsigned32"
_SvcTlsExtMvrpHoldTime_Object = MibTableColumn
svcTlsExtMvrpHoldTime = _SvcTlsExtMvrpHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 7),
    _SvcTlsExtMvrpHoldTime_Type()
)
svcTlsExtMvrpHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMvrpHoldTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsExtMvrpHoldTime.setUnits("minutes")


class _SvcTlsExtMvrpAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type svcTlsExtMvrpAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsExtMvrpAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsExtMvrpAdminStatus_Object = MibTableColumn
svcTlsExtMvrpAdminStatus = _SvcTlsExtMvrpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 8),
    _SvcTlsExtMvrpAdminStatus_Type()
)
svcTlsExtMvrpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMvrpAdminStatus.setStatus("current")


class _SvcTlsExtMvrpOperStatus_Type(Integer32):
    """Custom type svcTlsExtMvrpOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SvcTlsExtMvrpOperStatus_Type.__name__ = "Integer32"
_SvcTlsExtMvrpOperStatus_Object = MibTableColumn
svcTlsExtMvrpOperStatus = _SvcTlsExtMvrpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 9),
    _SvcTlsExtMvrpOperStatus_Type()
)
svcTlsExtMvrpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMvrpOperStatus.setStatus("current")
_SvcTlsExtMmrpAdminStatus_Type = TmnxEnabledDisabled
_SvcTlsExtMmrpAdminStatus_Object = MibTableColumn
svcTlsExtMmrpAdminStatus = _SvcTlsExtMmrpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 10),
    _SvcTlsExtMmrpAdminStatus_Type()
)
svcTlsExtMmrpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMmrpAdminStatus.setStatus("current")


class _SvcTlsExtMmrpOperStatus_Type(Integer32):
    """Custom type svcTlsExtMmrpOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_SvcTlsExtMmrpOperStatus_Type.__name__ = "Integer32"
_SvcTlsExtMmrpOperStatus_Object = MibTableColumn
svcTlsExtMmrpOperStatus = _SvcTlsExtMmrpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 11),
    _SvcTlsExtMmrpOperStatus_Type()
)
svcTlsExtMmrpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMmrpOperStatus.setStatus("current")
_SvcTlsExtMmrpRegAttrCnt_Type = Unsigned32
_SvcTlsExtMmrpRegAttrCnt_Object = MibTableColumn
svcTlsExtMmrpRegAttrCnt = _SvcTlsExtMmrpRegAttrCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 12),
    _SvcTlsExtMmrpRegAttrCnt_Type()
)
svcTlsExtMmrpRegAttrCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMmrpRegAttrCnt.setStatus("current")
_SvcTlsExtMmrpDeclaredAttrCnt_Type = Unsigned32
_SvcTlsExtMmrpDeclaredAttrCnt_Object = MibTableColumn
svcTlsExtMmrpDeclaredAttrCnt = _SvcTlsExtMmrpDeclaredAttrCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 13),
    _SvcTlsExtMmrpDeclaredAttrCnt_Type()
)
svcTlsExtMmrpDeclaredAttrCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMmrpDeclaredAttrCnt.setStatus("current")
_SvcTlsExtMmrpFailedRegCnt_Type = Unsigned32
_SvcTlsExtMmrpFailedRegCnt_Object = MibTableColumn
svcTlsExtMmrpFailedRegCnt = _SvcTlsExtMmrpFailedRegCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 14),
    _SvcTlsExtMmrpFailedRegCnt_Type()
)
svcTlsExtMmrpFailedRegCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMmrpFailedRegCnt.setStatus("current")
_SvcTlsExtMvrpAttributeCount_Type = Unsigned32
_SvcTlsExtMvrpAttributeCount_Object = MibTableColumn
svcTlsExtMvrpAttributeCount = _SvcTlsExtMvrpAttributeCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 15),
    _SvcTlsExtMvrpAttributeCount_Type()
)
svcTlsExtMvrpAttributeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsExtMvrpAttributeCount.setStatus("current")


class _SvcTlsExtMmrpEndStationOnly_Type(TruthValue):
    """Custom type svcTlsExtMmrpEndStationOnly based on TruthValue"""
    defaultValue = 2


_SvcTlsExtMmrpEndStationOnly_Type.__name__ = "TruthValue"
_SvcTlsExtMmrpEndStationOnly_Object = MibTableColumn
svcTlsExtMmrpEndStationOnly = _SvcTlsExtMmrpEndStationOnly_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 16),
    _SvcTlsExtMmrpEndStationOnly_Type()
)
svcTlsExtMmrpEndStationOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMmrpEndStationOnly.setStatus("current")


class _SvcTlsExtMacReNotifInterval_Type(Unsigned32):
    """Custom type svcTlsExtMacReNotifInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(240, 840),
    )


_SvcTlsExtMacReNotifInterval_Type.__name__ = "Unsigned32"
_SvcTlsExtMacReNotifInterval_Object = MibTableColumn
svcTlsExtMacReNotifInterval = _SvcTlsExtMacReNotifInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 17),
    _SvcTlsExtMacReNotifInterval_Type()
)
svcTlsExtMacReNotifInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtMacReNotifInterval.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsExtMacReNotifInterval.setUnits("seconds")


class _SvcTlsExtSpbmCtrlVpls_Type(TmnxServId):
    """Custom type svcTlsExtSpbmCtrlVpls based on TmnxServId"""
    defaultValue = 0


_SvcTlsExtSpbmCtrlVpls_Type.__name__ = "TmnxServId"
_SvcTlsExtSpbmCtrlVpls_Object = MibTableColumn
svcTlsExtSpbmCtrlVpls = _SvcTlsExtSpbmCtrlVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 18),
    _SvcTlsExtSpbmCtrlVpls_Type()
)
svcTlsExtSpbmCtrlVpls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtSpbmCtrlVpls.setStatus("current")


class _SvcTlsExtSpbmFid_Type(TmnxSpbFidOrZero):
    """Custom type svcTlsExtSpbmFid based on TmnxSpbFidOrZero"""
    defaultValue = 0


_SvcTlsExtSpbmFid_Type.__name__ = "TmnxSpbFidOrZero"
_SvcTlsExtSpbmFid_Object = MibTableColumn
svcTlsExtSpbmFid = _SvcTlsExtSpbmFid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 19),
    _SvcTlsExtSpbmFid_Type()
)
svcTlsExtSpbmFid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtSpbmFid.setStatus("current")


class _SvcTlsExtSpiLoadBalancing_Type(TmnxEnabledDisabled):
    """Custom type svcTlsExtSpiLoadBalancing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsExtSpiLoadBalancing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsExtSpiLoadBalancing_Object = MibTableColumn
svcTlsExtSpiLoadBalancing = _SvcTlsExtSpiLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 20),
    _SvcTlsExtSpiLoadBalancing_Type()
)
svcTlsExtSpiLoadBalancing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtSpiLoadBalancing.setStatus("current")


class _SvcTlsExtTeidLoadBalancing_Type(TmnxEnabledDisabled):
    """Custom type svcTlsExtTeidLoadBalancing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsExtTeidLoadBalancing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsExtTeidLoadBalancing_Object = MibTableColumn
svcTlsExtTeidLoadBalancing = _SvcTlsExtTeidLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 21),
    _SvcTlsExtTeidLoadBalancing_Type()
)
svcTlsExtTeidLoadBalancing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtTeidLoadBalancing.setStatus("current")


class _SvcTlsExtVxlanSrcTepIpAddrType_Type(InetAddressType):
    """Custom type svcTlsExtVxlanSrcTepIpAddrType based on InetAddressType"""
    defaultValue = 0


_SvcTlsExtVxlanSrcTepIpAddrType_Type.__name__ = "InetAddressType"
_SvcTlsExtVxlanSrcTepIpAddrType_Object = MibTableColumn
svcTlsExtVxlanSrcTepIpAddrType = _SvcTlsExtVxlanSrcTepIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 22),
    _SvcTlsExtVxlanSrcTepIpAddrType_Type()
)
svcTlsExtVxlanSrcTepIpAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtVxlanSrcTepIpAddrType.setStatus("current")


class _SvcTlsExtVxlanSrcTepIpAddr_Type(InetAddress):
    """Custom type svcTlsExtVxlanSrcTepIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsExtVxlanSrcTepIpAddr_Type.__name__ = "InetAddress"
_SvcTlsExtVxlanSrcTepIpAddr_Object = MibTableColumn
svcTlsExtVxlanSrcTepIpAddr = _SvcTlsExtVxlanSrcTepIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 23),
    _SvcTlsExtVxlanSrcTepIpAddr_Type()
)
svcTlsExtVxlanSrcTepIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtVxlanSrcTepIpAddr.setStatus("current")


class _SvcTlsExtVxlanIpv4TepEcmp_Type(TruthValue):
    """Custom type svcTlsExtVxlanIpv4TepEcmp based on TruthValue"""
    defaultValue = 2


_SvcTlsExtVxlanIpv4TepEcmp_Type.__name__ = "TruthValue"
_SvcTlsExtVxlanIpv4TepEcmp_Object = MibTableColumn
svcTlsExtVxlanIpv4TepEcmp = _SvcTlsExtVxlanIpv4TepEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 24),
    _SvcTlsExtVxlanIpv4TepEcmp_Type()
)
svcTlsExtVxlanIpv4TepEcmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtVxlanIpv4TepEcmp.setStatus("current")


class _SvcTlsExtEvpnMplsRvplsEcmp_Type(TruthValue):
    """Custom type svcTlsExtEvpnMplsRvplsEcmp based on TruthValue"""
    defaultValue = 2


_SvcTlsExtEvpnMplsRvplsEcmp_Type.__name__ = "TruthValue"
_SvcTlsExtEvpnMplsRvplsEcmp_Object = MibTableColumn
svcTlsExtEvpnMplsRvplsEcmp = _SvcTlsExtEvpnMplsRvplsEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 25),
    _SvcTlsExtEvpnMplsRvplsEcmp_Type()
)
svcTlsExtEvpnMplsRvplsEcmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtEvpnMplsRvplsEcmp.setStatus("current")


class _SvcTlsPbbRestProtSrcMac_Type(TruthValue):
    """Custom type svcTlsPbbRestProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcTlsPbbRestProtSrcMac_Type.__name__ = "TruthValue"
_SvcTlsPbbRestProtSrcMac_Object = MibTableColumn
svcTlsPbbRestProtSrcMac = _SvcTlsPbbRestProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 26),
    _SvcTlsPbbRestProtSrcMac_Type()
)
svcTlsPbbRestProtSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPbbRestProtSrcMac.setStatus("current")


class _SvcTlsPbbRestProtSrcMacAction_Type(Integer32):
    """Custom type svcTlsPbbRestProtSrcMacAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("discardFrame", 1)
    )


_SvcTlsPbbRestProtSrcMacAction_Type.__name__ = "Integer32"
_SvcTlsPbbRestProtSrcMacAction_Object = MibTableColumn
svcTlsPbbRestProtSrcMacAction = _SvcTlsPbbRestProtSrcMacAction_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 27),
    _SvcTlsPbbRestProtSrcMacAction_Type()
)
svcTlsPbbRestProtSrcMacAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsPbbRestProtSrcMacAction.setStatus("current")


class _SvcTlsExtIgnoreL2VpnMtuMismatch_Type(TmnxEnabledDisabled):
    """Custom type svcTlsExtIgnoreL2VpnMtuMismatch based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsExtIgnoreL2VpnMtuMismatch_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsExtIgnoreL2VpnMtuMismatch_Object = MibTableColumn
svcTlsExtIgnoreL2VpnMtuMismatch = _SvcTlsExtIgnoreL2VpnMtuMismatch_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 28),
    _SvcTlsExtIgnoreL2VpnMtuMismatch_Type()
)
svcTlsExtIgnoreL2VpnMtuMismatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtIgnoreL2VpnMtuMismatch.setStatus("current")


class _SvcTlsExtLblEthOrIpL4TEID_Type(TruthValue):
    """Custom type svcTlsExtLblEthOrIpL4TEID based on TruthValue"""
    defaultValue = 2


_SvcTlsExtLblEthOrIpL4TEID_Type.__name__ = "TruthValue"
_SvcTlsExtLblEthOrIpL4TEID_Object = MibTableColumn
svcTlsExtLblEthOrIpL4TEID = _SvcTlsExtLblEthOrIpL4TEID_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 97, 1, 29),
    _SvcTlsExtLblEthOrIpL4TEID_Type()
)
svcTlsExtLblEthOrIpL4TEID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsExtLblEthOrIpL4TEID.setStatus("current")
_SvcPwRtLclPrefixTblLastChanged_Type = TimeStamp
_SvcPwRtLclPrefixTblLastChanged_Object = MibScalar
svcPwRtLclPrefixTblLastChanged = _SvcPwRtLclPrefixTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 98),
    _SvcPwRtLclPrefixTblLastChanged_Type()
)
svcPwRtLclPrefixTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtLclPrefixTblLastChanged.setStatus("current")
_SvcPwRtLclPrefixTable_Object = MibTable
svcPwRtLclPrefixTable = _SvcPwRtLclPrefixTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99)
)
if mibBuilder.loadTexts:
    svcPwRtLclPrefixTable.setStatus("current")
_SvcPwRtLclPrefixEntry_Object = MibTableRow
svcPwRtLclPrefixEntry = _SvcPwRtLclPrefixEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99, 1)
)
svcPwRtLclPrefixEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPwRtLclPrefixGlobalId"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtLclPrefix"),
)
if mibBuilder.loadTexts:
    svcPwRtLclPrefixEntry.setStatus("current")
_SvcPwRtLclPrefixGlobalId_Type = TmnxPwGlobalId
_SvcPwRtLclPrefixGlobalId_Object = MibTableColumn
svcPwRtLclPrefixGlobalId = _SvcPwRtLclPrefixGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99, 1, 1),
    _SvcPwRtLclPrefixGlobalId_Type()
)
svcPwRtLclPrefixGlobalId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtLclPrefixGlobalId.setStatus("current")


class _SvcPwRtLclPrefix_Type(Unsigned32):
    """Custom type svcPwRtLclPrefix based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_SvcPwRtLclPrefix_Type.__name__ = "Unsigned32"
_SvcPwRtLclPrefix_Object = MibTableColumn
svcPwRtLclPrefix = _SvcPwRtLclPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99, 1, 2),
    _SvcPwRtLclPrefix_Type()
)
svcPwRtLclPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtLclPrefix.setStatus("current")
_SvcPwRtLclPrefixRowStatus_Type = RowStatus
_SvcPwRtLclPrefixRowStatus_Object = MibTableColumn
svcPwRtLclPrefixRowStatus = _SvcPwRtLclPrefixRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99, 1, 3),
    _SvcPwRtLclPrefixRowStatus_Type()
)
svcPwRtLclPrefixRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtLclPrefixRowStatus.setStatus("current")
_SvcPwRtLclPrefixLastChange_Type = TimeStamp
_SvcPwRtLclPrefixLastChange_Object = MibTableColumn
svcPwRtLclPrefixLastChange = _SvcPwRtLclPrefixLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 99, 1, 4),
    _SvcPwRtLclPrefixLastChange_Type()
)
svcPwRtLclPrefixLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtLclPrefixLastChange.setStatus("current")
_SvcPwRtPathTblLastChanged_Type = TimeStamp
_SvcPwRtPathTblLastChanged_Object = MibScalar
svcPwRtPathTblLastChanged = _SvcPwRtPathTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 100),
    _SvcPwRtPathTblLastChanged_Type()
)
svcPwRtPathTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtPathTblLastChanged.setStatus("current")
_SvcPwRtPathTable_Object = MibTable
svcPwRtPathTable = _SvcPwRtPathTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101)
)
if mibBuilder.loadTexts:
    svcPwRtPathTable.setStatus("current")
_SvcPwRtPathEntry_Object = MibTableRow
svcPwRtPathEntry = _SvcPwRtPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101, 1)
)
svcPwRtPathEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPwRtPathName"),
)
if mibBuilder.loadTexts:
    svcPwRtPathEntry.setStatus("current")
_SvcPwRtPathName_Type = TNamedItem
_SvcPwRtPathName_Object = MibTableColumn
svcPwRtPathName = _SvcPwRtPathName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101, 1, 1),
    _SvcPwRtPathName_Type()
)
svcPwRtPathName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtPathName.setStatus("current")
_SvcPwRtPathRowStatus_Type = RowStatus
_SvcPwRtPathRowStatus_Object = MibTableColumn
svcPwRtPathRowStatus = _SvcPwRtPathRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101, 1, 2),
    _SvcPwRtPathRowStatus_Type()
)
svcPwRtPathRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtPathRowStatus.setStatus("current")
_SvcPwRtPathLastChange_Type = TimeStamp
_SvcPwRtPathLastChange_Object = MibTableColumn
svcPwRtPathLastChange = _SvcPwRtPathLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101, 1, 3),
    _SvcPwRtPathLastChange_Type()
)
svcPwRtPathLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtPathLastChange.setStatus("current")


class _SvcPwRtPathAdminStatus_Type(ServiceAdminStatus):
    """Custom type svcPwRtPathAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SvcPwRtPathAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SvcPwRtPathAdminStatus_Object = MibTableColumn
svcPwRtPathAdminStatus = _SvcPwRtPathAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 101, 1, 4),
    _SvcPwRtPathAdminStatus_Type()
)
svcPwRtPathAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtPathAdminStatus.setStatus("current")
_SvcPwRtPathHopTblLastChgd_Type = TimeStamp
_SvcPwRtPathHopTblLastChgd_Object = MibScalar
svcPwRtPathHopTblLastChgd = _SvcPwRtPathHopTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 102),
    _SvcPwRtPathHopTblLastChgd_Type()
)
svcPwRtPathHopTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtPathHopTblLastChgd.setStatus("current")
_SvcPwRtPathHopTable_Object = MibTable
svcPwRtPathHopTable = _SvcPwRtPathHopTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103)
)
if mibBuilder.loadTexts:
    svcPwRtPathHopTable.setStatus("current")
_SvcPwRtPathHopEntry_Object = MibTableRow
svcPwRtPathHopEntry = _SvcPwRtPathHopEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1)
)
svcPwRtPathHopEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPwRtPathName"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtPathHopIndex"),
)
if mibBuilder.loadTexts:
    svcPwRtPathHopEntry.setStatus("current")
_SvcPwRtPathHopIndex_Type = TmnxPwPathHopId
_SvcPwRtPathHopIndex_Object = MibTableColumn
svcPwRtPathHopIndex = _SvcPwRtPathHopIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1, 1),
    _SvcPwRtPathHopIndex_Type()
)
svcPwRtPathHopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtPathHopIndex.setStatus("current")
_SvcPwRtPathHopRowStatus_Type = RowStatus
_SvcPwRtPathHopRowStatus_Object = MibTableColumn
svcPwRtPathHopRowStatus = _SvcPwRtPathHopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1, 2),
    _SvcPwRtPathHopRowStatus_Type()
)
svcPwRtPathHopRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtPathHopRowStatus.setStatus("current")
_SvcPwRtPathHopLastChange_Type = TimeStamp
_SvcPwRtPathHopLastChange_Object = MibTableColumn
svcPwRtPathHopLastChange = _SvcPwRtPathHopLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1, 3),
    _SvcPwRtPathHopLastChange_Type()
)
svcPwRtPathHopLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtPathHopLastChange.setStatus("current")


class _SvcPwRtPathHopAddrType_Type(InetAddressType):
    """Custom type svcPwRtPathHopAddrType based on InetAddressType"""
    defaultValue = 0


_SvcPwRtPathHopAddrType_Type.__name__ = "InetAddressType"
_SvcPwRtPathHopAddrType_Object = MibTableColumn
svcPwRtPathHopAddrType = _SvcPwRtPathHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1, 4),
    _SvcPwRtPathHopAddrType_Type()
)
svcPwRtPathHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtPathHopAddrType.setStatus("current")


class _SvcPwRtPathHopAddr_Type(InetAddress):
    """Custom type svcPwRtPathHopAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcPwRtPathHopAddr_Type.__name__ = "InetAddress"
_SvcPwRtPathHopAddr_Object = MibTableColumn
svcPwRtPathHopAddr = _SvcPwRtPathHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 103, 1, 5),
    _SvcPwRtPathHopAddr_Type()
)
svcPwRtPathHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtPathHopAddr.setStatus("current")
_SvcPwRtStaticRtTblLastChgd_Type = TimeStamp
_SvcPwRtStaticRtTblLastChgd_Object = MibScalar
svcPwRtStaticRtTblLastChgd = _SvcPwRtStaticRtTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 104),
    _SvcPwRtStaticRtTblLastChgd_Type()
)
svcPwRtStaticRtTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtStaticRtTblLastChgd.setStatus("current")
_SvcPwRtStaticRtTable_Object = MibTable
svcPwRtStaticRtTable = _SvcPwRtStaticRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105)
)
if mibBuilder.loadTexts:
    svcPwRtStaticRtTable.setStatus("current")
_SvcPwRtStaticRtEntry_Object = MibTableRow
svcPwRtStaticRtEntry = _SvcPwRtStaticRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1)
)
svcPwRtStaticRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPwRtStaticRtDstGlobalId"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtStaticRtDstPrefix"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtStaticRtDstAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtStaticRtDstAddr"),
)
if mibBuilder.loadTexts:
    svcPwRtStaticRtEntry.setStatus("current")
_SvcPwRtStaticRtDstGlobalId_Type = TmnxPwGlobalIdOrZero
_SvcPwRtStaticRtDstGlobalId_Object = MibTableColumn
svcPwRtStaticRtDstGlobalId = _SvcPwRtStaticRtDstGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 1),
    _SvcPwRtStaticRtDstGlobalId_Type()
)
svcPwRtStaticRtDstGlobalId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtStaticRtDstGlobalId.setStatus("current")
_SvcPwRtStaticRtDstPrefix_Type = Unsigned32
_SvcPwRtStaticRtDstPrefix_Object = MibTableColumn
svcPwRtStaticRtDstPrefix = _SvcPwRtStaticRtDstPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 2),
    _SvcPwRtStaticRtDstPrefix_Type()
)
svcPwRtStaticRtDstPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtStaticRtDstPrefix.setStatus("current")
_SvcPwRtStaticRtDstAddrType_Type = InetAddressType
_SvcPwRtStaticRtDstAddrType_Object = MibTableColumn
svcPwRtStaticRtDstAddrType = _SvcPwRtStaticRtDstAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 3),
    _SvcPwRtStaticRtDstAddrType_Type()
)
svcPwRtStaticRtDstAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtStaticRtDstAddrType.setStatus("current")


class _SvcPwRtStaticRtDstAddr_Type(InetAddress):
    """Custom type svcPwRtStaticRtDstAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcPwRtStaticRtDstAddr_Type.__name__ = "InetAddress"
_SvcPwRtStaticRtDstAddr_Object = MibTableColumn
svcPwRtStaticRtDstAddr = _SvcPwRtStaticRtDstAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 4),
    _SvcPwRtStaticRtDstAddr_Type()
)
svcPwRtStaticRtDstAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtStaticRtDstAddr.setStatus("current")
_SvcPwRtStaticRtRowStatus_Type = RowStatus
_SvcPwRtStaticRtRowStatus_Object = MibTableColumn
svcPwRtStaticRtRowStatus = _SvcPwRtStaticRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 5),
    _SvcPwRtStaticRtRowStatus_Type()
)
svcPwRtStaticRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtStaticRtRowStatus.setStatus("current")
_SvcPwRtStaticRtLastChange_Type = TimeStamp
_SvcPwRtStaticRtLastChange_Object = MibTableColumn
svcPwRtStaticRtLastChange = _SvcPwRtStaticRtLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 105, 1, 6),
    _SvcPwRtStaticRtLastChange_Type()
)
svcPwRtStaticRtLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtStaticRtLastChange.setStatus("current")
_SvcMSPwPeTblLastChanged_Type = TimeStamp
_SvcMSPwPeTblLastChanged_Object = MibScalar
svcMSPwPeTblLastChanged = _SvcMSPwPeTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 106),
    _SvcMSPwPeTblLastChanged_Type()
)
svcMSPwPeTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeTblLastChanged.setStatus("current")
_SvcMSPwPeTable_Object = MibTable
svcMSPwPeTable = _SvcMSPwPeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107)
)
if mibBuilder.loadTexts:
    svcMSPwPeTable.setStatus("current")
_SvcMSPwPeEntry_Object = MibTableRow
svcMSPwPeEntry = _SvcMSPwPeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1)
)
svcMSPwPeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeId"),
)
if mibBuilder.loadTexts:
    svcMSPwPeEntry.setStatus("current")
_SvcMSPwPeId_Type = TmnxSpokeSdpId
_SvcMSPwPeId_Object = MibTableColumn
svcMSPwPeId = _SvcMSPwPeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 1),
    _SvcMSPwPeId_Type()
)
svcMSPwPeId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMSPwPeId.setStatus("current")
_SvcMSPwPeRowStatus_Type = RowStatus
_SvcMSPwPeRowStatus_Object = MibTableColumn
svcMSPwPeRowStatus = _SvcMSPwPeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 2),
    _SvcMSPwPeRowStatus_Type()
)
svcMSPwPeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeRowStatus.setStatus("current")
_SvcMSPwPeLastChange_Type = TimeStamp
_SvcMSPwPeLastChange_Object = MibTableColumn
svcMSPwPeLastChange = _SvcMSPwPeLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 3),
    _SvcMSPwPeLastChange_Type()
)
svcMSPwPeLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeLastChange.setStatus("current")


class _SvcMSPwPeAdminStatus_Type(ServiceAdminStatus):
    """Custom type svcMSPwPeAdminStatus based on ServiceAdminStatus"""
    defaultValue = 2


_SvcMSPwPeAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SvcMSPwPeAdminStatus_Object = MibTableColumn
svcMSPwPeAdminStatus = _SvcMSPwPeAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 4),
    _SvcMSPwPeAdminStatus_Type()
)
svcMSPwPeAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeAdminStatus.setStatus("current")


class _SvcMSPwPeFecType_Type(TmnxLdpFECType):
    """Custom type svcMSPwPeFecType based on TmnxLdpFECType"""
    defaultValue = 129


_SvcMSPwPeFecType_Type.__name__ = "TmnxLdpFECType"
_SvcMSPwPeFecType_Object = MibTableColumn
svcMSPwPeFecType = _SvcMSPwPeFecType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 5),
    _SvcMSPwPeFecType_Type()
)
svcMSPwPeFecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeFecType.setStatus("current")


class _SvcMSPwPeAiiType_Type(TmnxAiiType):
    """Custom type svcMSPwPeAiiType based on TmnxAiiType"""
    defaultValue = 2


_SvcMSPwPeAiiType_Type.__name__ = "TmnxAiiType"
_SvcMSPwPeAiiType_Object = MibTableColumn
svcMSPwPeAiiType = _SvcMSPwPeAiiType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 6),
    _SvcMSPwPeAiiType_Type()
)
svcMSPwPeAiiType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeAiiType.setStatus("current")


class _SvcMSPwPeSignaling_Type(TmnxMsPwPeSignaling):
    """Custom type svcMSPwPeSignaling based on TmnxMsPwPeSignaling"""
    defaultValue = 1


_SvcMSPwPeSignaling_Type.__name__ = "TmnxMsPwPeSignaling"
_SvcMSPwPeSignaling_Object = MibTableColumn
svcMSPwPeSignaling = _SvcMSPwPeSignaling_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 7),
    _SvcMSPwPeSignaling_Type()
)
svcMSPwPeSignaling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeSignaling.setStatus("current")


class _SvcMSPwPeAutoConfig_Type(TruthValue):
    """Custom type svcMSPwPeAutoConfig based on TruthValue"""
    defaultValue = 2


_SvcMSPwPeAutoConfig_Type.__name__ = "TruthValue"
_SvcMSPwPeAutoConfig_Object = MibTableColumn
svcMSPwPeAutoConfig = _SvcMSPwPeAutoConfig_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 8),
    _SvcMSPwPeAutoConfig_Type()
)
svcMSPwPeAutoConfig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeAutoConfig.setStatus("current")


class _SvcMSPwPeAgi_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcMSPwPeAgi based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcMSPwPeAgi_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcMSPwPeAgi_Object = MibTableColumn
svcMSPwPeAgi = _SvcMSPwPeAgi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 9),
    _SvcMSPwPeAgi_Type()
)
svcMSPwPeAgi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeAgi.setStatus("current")


class _SvcMSPwPePolicyId_Type(PWTemplateId):
    """Custom type svcMSPwPePolicyId based on PWTemplateId"""
    defaultValue = 0


_SvcMSPwPePolicyId_Type.__name__ = "PWTemplateId"
_SvcMSPwPePolicyId_Object = MibTableColumn
svcMSPwPePolicyId = _SvcMSPwPePolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 10),
    _SvcMSPwPePolicyId_Type()
)
svcMSPwPePolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPePolicyId.setStatus("current")


class _SvcMSPwPePrecedence_Type(Unsigned32):
    """Custom type svcMSPwPePrecedence based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_SvcMSPwPePrecedence_Type.__name__ = "Unsigned32"
_SvcMSPwPePrecedence_Object = MibTableColumn
svcMSPwPePrecedence = _SvcMSPwPePrecedence_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 11),
    _SvcMSPwPePrecedence_Type()
)
svcMSPwPePrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPePrecedence.setStatus("current")


class _SvcMSPwPeRetryTimer_Type(Unsigned32):
    """Custom type svcMSPwPeRetryTimer based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 480),
    )


_SvcMSPwPeRetryTimer_Type.__name__ = "Unsigned32"
_SvcMSPwPeRetryTimer_Object = MibTableColumn
svcMSPwPeRetryTimer = _SvcMSPwPeRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 12),
    _SvcMSPwPeRetryTimer_Type()
)
svcMSPwPeRetryTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeRetryTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcMSPwPeRetryTimer.setUnits("seconds")


class _SvcMSPwPeRetryCount_Type(Unsigned32):
    """Custom type svcMSPwPeRetryCount based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 10000),
    )


_SvcMSPwPeRetryCount_Type.__name__ = "Unsigned32"
_SvcMSPwPeRetryCount_Object = MibTableColumn
svcMSPwPeRetryCount = _SvcMSPwPeRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 13),
    _SvcMSPwPeRetryCount_Type()
)
svcMSPwPeRetryCount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeRetryCount.setStatus("current")


class _SvcMSPwPeSaiiGlobalId_Type(TmnxPwGlobalIdOrZero):
    """Custom type svcMSPwPeSaiiGlobalId based on TmnxPwGlobalIdOrZero"""
    defaultValue = 0


_SvcMSPwPeSaiiGlobalId_Type.__name__ = "TmnxPwGlobalIdOrZero"
_SvcMSPwPeSaiiGlobalId_Object = MibTableColumn
svcMSPwPeSaiiGlobalId = _SvcMSPwPeSaiiGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 14),
    _SvcMSPwPeSaiiGlobalId_Type()
)
svcMSPwPeSaiiGlobalId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeSaiiGlobalId.setStatus("current")


class _SvcMSPwPeSaiiPrefix_Type(Unsigned32):
    """Custom type svcMSPwPeSaiiPrefix based on Unsigned32"""
    defaultValue = 0


_SvcMSPwPeSaiiPrefix_Type.__name__ = "Unsigned32"
_SvcMSPwPeSaiiPrefix_Object = MibTableColumn
svcMSPwPeSaiiPrefix = _SvcMSPwPeSaiiPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 15),
    _SvcMSPwPeSaiiPrefix_Type()
)
svcMSPwPeSaiiPrefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeSaiiPrefix.setStatus("current")


class _SvcMSPwPeSaiiAcId_Type(Unsigned32):
    """Custom type svcMSPwPeSaiiAcId based on Unsigned32"""
    defaultValue = 0


_SvcMSPwPeSaiiAcId_Type.__name__ = "Unsigned32"
_SvcMSPwPeSaiiAcId_Object = MibTableColumn
svcMSPwPeSaiiAcId = _SvcMSPwPeSaiiAcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 16),
    _SvcMSPwPeSaiiAcId_Type()
)
svcMSPwPeSaiiAcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeSaiiAcId.setStatus("current")


class _SvcMSPwPeTaiiGlobalId_Type(TmnxPwGlobalIdOrZero):
    """Custom type svcMSPwPeTaiiGlobalId based on TmnxPwGlobalIdOrZero"""
    defaultValue = 0


_SvcMSPwPeTaiiGlobalId_Type.__name__ = "TmnxPwGlobalIdOrZero"
_SvcMSPwPeTaiiGlobalId_Object = MibTableColumn
svcMSPwPeTaiiGlobalId = _SvcMSPwPeTaiiGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 17),
    _SvcMSPwPeTaiiGlobalId_Type()
)
svcMSPwPeTaiiGlobalId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeTaiiGlobalId.setStatus("current")


class _SvcMSPwPeTaiiPrefix_Type(Unsigned32):
    """Custom type svcMSPwPeTaiiPrefix based on Unsigned32"""
    defaultValue = 0


_SvcMSPwPeTaiiPrefix_Type.__name__ = "Unsigned32"
_SvcMSPwPeTaiiPrefix_Object = MibTableColumn
svcMSPwPeTaiiPrefix = _SvcMSPwPeTaiiPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 18),
    _SvcMSPwPeTaiiPrefix_Type()
)
svcMSPwPeTaiiPrefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeTaiiPrefix.setStatus("current")


class _SvcMSPwPeTaiiAcId_Type(Unsigned32):
    """Custom type svcMSPwPeTaiiAcId based on Unsigned32"""
    defaultValue = 0


_SvcMSPwPeTaiiAcId_Type.__name__ = "Unsigned32"
_SvcMSPwPeTaiiAcId_Object = MibTableColumn
svcMSPwPeTaiiAcId = _SvcMSPwPeTaiiAcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 19),
    _SvcMSPwPeTaiiAcId_Type()
)
svcMSPwPeTaiiAcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeTaiiAcId.setStatus("current")


class _SvcMSPwPePathName_Type(TNamedItemOrEmpty):
    """Custom type svcMSPwPePathName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcMSPwPePathName_Type.__name__ = "TNamedItemOrEmpty"
_SvcMSPwPePathName_Object = MibTableColumn
svcMSPwPePathName = _SvcMSPwPePathName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 20),
    _SvcMSPwPePathName_Type()
)
svcMSPwPePathName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPePathName.setStatus("current")


class _SvcMSPwPeEndPoint_Type(TNamedItemOrEmpty):
    """Custom type svcMSPwPeEndPoint based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcMSPwPeEndPoint_Type.__name__ = "TNamedItemOrEmpty"
_SvcMSPwPeEndPoint_Object = MibTableColumn
svcMSPwPeEndPoint = _SvcMSPwPeEndPoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 21),
    _SvcMSPwPeEndPoint_Type()
)
svcMSPwPeEndPoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeEndPoint.setStatus("current")


class _SvcMSPwPeStandbySigSlave_Type(TruthValue):
    """Custom type svcMSPwPeStandbySigSlave based on TruthValue"""
    defaultValue = 2


_SvcMSPwPeStandbySigSlave_Type.__name__ = "TruthValue"
_SvcMSPwPeStandbySigSlave_Object = MibTableColumn
svcMSPwPeStandbySigSlave = _SvcMSPwPeStandbySigSlave_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 22),
    _SvcMSPwPeStandbySigSlave_Type()
)
svcMSPwPeStandbySigSlave.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeStandbySigSlave.setStatus("current")


class _SvcMSPwPeIsICB_Type(TruthValue):
    """Custom type svcMSPwPeIsICB based on TruthValue"""
    defaultValue = 2


_SvcMSPwPeIsICB_Type.__name__ = "TruthValue"
_SvcMSPwPeIsICB_Object = MibTableColumn
svcMSPwPeIsICB = _SvcMSPwPeIsICB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 23),
    _SvcMSPwPeIsICB_Type()
)
svcMSPwPeIsICB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMSPwPeIsICB.setStatus("current")
_SvcMSPwPeTimeRemain_Type = Unsigned32
_SvcMSPwPeTimeRemain_Object = MibTableColumn
svcMSPwPeTimeRemain = _SvcMSPwPeTimeRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 24),
    _SvcMSPwPeTimeRemain_Type()
)
svcMSPwPeTimeRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeTimeRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcMSPwPeTimeRemain.setUnits("seconds")
_SvcMSPwPeRetryRemain_Type = Unsigned32
_SvcMSPwPeRetryRemain_Object = MibTableColumn
svcMSPwPeRetryRemain = _SvcMSPwPeRetryRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 25),
    _SvcMSPwPeRetryRemain_Type()
)
svcMSPwPeRetryRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeRetryRemain.setStatus("current")
_SvcMSPwPeOperSdpBind_Type = SdpBindId
_SvcMSPwPeOperSdpBind_Object = MibTableColumn
svcMSPwPeOperSdpBind = _SvcMSPwPeOperSdpBind_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 26),
    _SvcMSPwPeOperSdpBind_Type()
)
svcMSPwPeOperSdpBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeOperSdpBind.setStatus("current")
_SvcMSPwPeRetryExpired_Type = TruthValue
_SvcMSPwPeRetryExpired_Object = MibTableColumn
svcMSPwPeRetryExpired = _SvcMSPwPeRetryExpired_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 27),
    _SvcMSPwPeRetryExpired_Type()
)
svcMSPwPeRetryExpired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeRetryExpired.setStatus("current")
_SvcMSPwPeLastError_Type = DisplayString
_SvcMSPwPeLastError_Object = MibTableColumn
svcMSPwPeLastError = _SvcMSPwPeLastError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 107, 1, 28),
    _SvcMSPwPeLastError_Type()
)
svcMSPwPeLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMSPwPeLastError.setStatus("current")
_SvcOperGrpTblLastChanged_Type = TimeStamp
_SvcOperGrpTblLastChanged_Object = MibScalar
svcOperGrpTblLastChanged = _SvcOperGrpTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 108),
    _SvcOperGrpTblLastChanged_Type()
)
svcOperGrpTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpTblLastChanged.setStatus("current")
_SvcOperGrpTable_Object = MibTable
svcOperGrpTable = _SvcOperGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109)
)
if mibBuilder.loadTexts:
    svcOperGrpTable.setStatus("current")
_SvcOperGrpEntry_Object = MibTableRow
svcOperGrpEntry = _SvcOperGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1)
)
svcOperGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcOperGrpName"),
)
if mibBuilder.loadTexts:
    svcOperGrpEntry.setStatus("current")
_SvcOperGrpName_Type = TNamedItem
_SvcOperGrpName_Object = MibTableColumn
svcOperGrpName = _SvcOperGrpName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 1),
    _SvcOperGrpName_Type()
)
svcOperGrpName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcOperGrpName.setStatus("current")
_SvcOperGrpRowStatus_Type = RowStatus
_SvcOperGrpRowStatus_Object = MibTableColumn
svcOperGrpRowStatus = _SvcOperGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 2),
    _SvcOperGrpRowStatus_Type()
)
svcOperGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpRowStatus.setStatus("current")
_SvcOperGrpLastChange_Type = TimeStamp
_SvcOperGrpLastChange_Object = MibTableColumn
svcOperGrpLastChange = _SvcOperGrpLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 3),
    _SvcOperGrpLastChange_Type()
)
svcOperGrpLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpLastChange.setStatus("current")
_SvcOperGrpOperStatus_Type = ServiceOperStatus
_SvcOperGrpOperStatus_Object = MibTableColumn
svcOperGrpOperStatus = _SvcOperGrpOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 4),
    _SvcOperGrpOperStatus_Type()
)
svcOperGrpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpOperStatus.setStatus("current")


class _SvcOperGrpHoldDownTime_Type(TmnxOperGrpHoldDownTime):
    """Custom type svcOperGrpHoldDownTime based on TmnxOperGrpHoldDownTime"""
    defaultValue = 0


_SvcOperGrpHoldDownTime_Type.__name__ = "TmnxOperGrpHoldDownTime"
_SvcOperGrpHoldDownTime_Object = MibTableColumn
svcOperGrpHoldDownTime = _SvcOperGrpHoldDownTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 5),
    _SvcOperGrpHoldDownTime_Type()
)
svcOperGrpHoldDownTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpHoldDownTime.setStatus("current")
if mibBuilder.loadTexts:
    svcOperGrpHoldDownTime.setUnits("seconds")
_SvcOperGrpCreationOrigin_Type = TmnxSvcOperGrpCreationOrigin
_SvcOperGrpCreationOrigin_Object = MibTableColumn
svcOperGrpCreationOrigin = _SvcOperGrpCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 6),
    _SvcOperGrpCreationOrigin_Type()
)
svcOperGrpCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpCreationOrigin.setStatus("current")


class _SvcOperGrpHoldUpTime_Type(TmnxOperGrpHoldUpTime):
    """Custom type svcOperGrpHoldUpTime based on TmnxOperGrpHoldUpTime"""
    defaultValue = 4


_SvcOperGrpHoldUpTime_Type.__name__ = "TmnxOperGrpHoldUpTime"
_SvcOperGrpHoldUpTime_Object = MibTableColumn
svcOperGrpHoldUpTime = _SvcOperGrpHoldUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 7),
    _SvcOperGrpHoldUpTime_Type()
)
svcOperGrpHoldUpTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpHoldUpTime.setStatus("current")
if mibBuilder.loadTexts:
    svcOperGrpHoldUpTime.setUnits("seconds")
_SvcOperGrpHoldUpTimeRemain_Type = TmnxOperGrpHoldUpTime
_SvcOperGrpHoldUpTimeRemain_Object = MibTableColumn
svcOperGrpHoldUpTimeRemain = _SvcOperGrpHoldUpTimeRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 8),
    _SvcOperGrpHoldUpTimeRemain_Type()
)
svcOperGrpHoldUpTimeRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpHoldUpTimeRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcOperGrpHoldUpTimeRemain.setUnits("seconds")
_SvcOperGrpHoldDownTimeRemain_Type = TmnxOperGrpHoldDownTime
_SvcOperGrpHoldDownTimeRemain_Object = MibTableColumn
svcOperGrpHoldDownTimeRemain = _SvcOperGrpHoldDownTimeRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 9),
    _SvcOperGrpHoldDownTimeRemain_Type()
)
svcOperGrpHoldDownTimeRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpHoldDownTimeRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcOperGrpHoldDownTimeRemain.setUnits("seconds")
_SvcOperGrpNumMembers_Type = Gauge32
_SvcOperGrpNumMembers_Object = MibTableColumn
svcOperGrpNumMembers = _SvcOperGrpNumMembers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 10),
    _SvcOperGrpNumMembers_Type()
)
svcOperGrpNumMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpNumMembers.setStatus("current")
_SvcOperGrpNumMonitoring_Type = Gauge32
_SvcOperGrpNumMonitoring_Object = MibTableColumn
svcOperGrpNumMonitoring = _SvcOperGrpNumMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 109, 1, 11),
    _SvcOperGrpNumMonitoring_Type()
)
svcOperGrpNumMonitoring.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpNumMonitoring.setStatus("current")
_SvcDhcpLeaseAleTable_Object = MibTable
svcDhcpLeaseAleTable = _SvcDhcpLeaseAleTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 110)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseAleTable.setStatus("current")
_SvcDhcpLeaseAleEntry_Object = MibTableRow
svcDhcpLeaseAleEntry = _SvcDhcpLeaseAleEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 110, 1)
)
svcDhcpLeaseAleEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseAleEntry.setStatus("current")


class _SvcDhcpLeaseAleDatalink_Type(Unsigned32):
    """Custom type svcDhcpLeaseAleDatalink based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcDhcpLeaseAleDatalink_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseAleDatalink_Object = MibTableColumn
svcDhcpLeaseAleDatalink = _SvcDhcpLeaseAleDatalink_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 110, 1, 1),
    _SvcDhcpLeaseAleDatalink_Type()
)
svcDhcpLeaseAleDatalink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseAleDatalink.setStatus("current")


class _SvcDhcpLeaseAleEncaps1_Type(Unsigned32):
    """Custom type svcDhcpLeaseAleEncaps1 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcDhcpLeaseAleEncaps1_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseAleEncaps1_Object = MibTableColumn
svcDhcpLeaseAleEncaps1 = _SvcDhcpLeaseAleEncaps1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 110, 1, 2),
    _SvcDhcpLeaseAleEncaps1_Type()
)
svcDhcpLeaseAleEncaps1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseAleEncaps1.setStatus("current")


class _SvcDhcpLeaseAleEncaps2_Type(Unsigned32):
    """Custom type svcDhcpLeaseAleEncaps2 based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcDhcpLeaseAleEncaps2_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseAleEncaps2_Object = MibTableColumn
svcDhcpLeaseAleEncaps2 = _SvcDhcpLeaseAleEncaps2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 110, 1, 3),
    _SvcDhcpLeaseAleEncaps2_Type()
)
svcDhcpLeaseAleEncaps2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseAleEncaps2.setStatus("current")
_SvcEthCfmTblLastChanged_Type = TimeStamp
_SvcEthCfmTblLastChanged_Object = MibScalar
svcEthCfmTblLastChanged = _SvcEthCfmTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 111),
    _SvcEthCfmTblLastChanged_Type()
)
svcEthCfmTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEthCfmTblLastChanged.setStatus("current")
_SvcEthCfmTable_Object = MibTable
svcEthCfmTable = _SvcEthCfmTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 112)
)
if mibBuilder.loadTexts:
    svcEthCfmTable.setStatus("current")
_SvcEthCfmEntry_Object = MibTableRow
svcEthCfmEntry = _SvcEthCfmEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 112, 1)
)
svcEthCfmEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEthCfmEntry.setStatus("current")


class _SvcEthCfmTunnelFaultNotification_Type(Integer32):
    """Custom type svcEthCfmTunnelFaultNotification based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 1),
          ("ignore", 2))
    )


_SvcEthCfmTunnelFaultNotification_Type.__name__ = "Integer32"
_SvcEthCfmTunnelFaultNotification_Object = MibTableColumn
svcEthCfmTunnelFaultNotification = _SvcEthCfmTunnelFaultNotification_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 112, 1, 1),
    _SvcEthCfmTunnelFaultNotification_Type()
)
svcEthCfmTunnelFaultNotification.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthCfmTunnelFaultNotification.setStatus("current")


class _SvcEthCfmVMepExtensions_Type(TmnxEnabledDisabled):
    """Custom type svcEthCfmVMepExtensions based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcEthCfmVMepExtensions_Type.__name__ = "TmnxEnabledDisabled"
_SvcEthCfmVMepExtensions_Object = MibTableColumn
svcEthCfmVMepExtensions = _SvcEthCfmVMepExtensions_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 112, 1, 2),
    _SvcEthCfmVMepExtensions_Type()
)
svcEthCfmVMepExtensions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthCfmVMepExtensions.setStatus("obsolete")
_TmnxSvcGrpObjs_ObjectIdentity = ObjectIdentity
tmnxSvcGrpObjs = _TmnxSvcGrpObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113)
)
_SvcMacFdbRecords_Type = Unsigned32
_SvcMacFdbRecords_Object = MibScalar
svcMacFdbRecords = _SvcMacFdbRecords_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 1),
    _SvcMacFdbRecords_Type()
)
svcMacFdbRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacFdbRecords.setStatus("obsolete")


class _SvcPwRtSpeAddrGlobalId_Type(TmnxPwGlobalIdOrZero):
    """Custom type svcPwRtSpeAddrGlobalId based on TmnxPwGlobalIdOrZero"""
    defaultValue = 0


_SvcPwRtSpeAddrGlobalId_Type.__name__ = "TmnxPwGlobalIdOrZero"
_SvcPwRtSpeAddrGlobalId_Object = MibScalar
svcPwRtSpeAddrGlobalId = _SvcPwRtSpeAddrGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 2),
    _SvcPwRtSpeAddrGlobalId_Type()
)
svcPwRtSpeAddrGlobalId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPwRtSpeAddrGlobalId.setStatus("current")


class _SvcPwRtSpeAddrPrefix_Type(Unsigned32):
    """Custom type svcPwRtSpeAddrPrefix based on Unsigned32"""
    defaultValue = 0


_SvcPwRtSpeAddrPrefix_Type.__name__ = "Unsigned32"
_SvcPwRtSpeAddrPrefix_Object = MibScalar
svcPwRtSpeAddrPrefix = _SvcPwRtSpeAddrPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 3),
    _SvcPwRtSpeAddrPrefix_Type()
)
svcPwRtSpeAddrPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPwRtSpeAddrPrefix.setStatus("current")


class _SvcPwRtBootTimer_Type(Integer32):
    """Custom type svcPwRtBootTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_SvcPwRtBootTimer_Type.__name__ = "Integer32"
_SvcPwRtBootTimer_Object = MibScalar
svcPwRtBootTimer = _SvcPwRtBootTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 4),
    _SvcPwRtBootTimer_Type()
)
svcPwRtBootTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPwRtBootTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcPwRtBootTimer.setUnits("seconds")


class _SvcPwRtRetryTimer_Type(Unsigned32):
    """Custom type svcPwRtRetryTimer based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 480),
    )


_SvcPwRtRetryTimer_Type.__name__ = "Unsigned32"
_SvcPwRtRetryTimer_Object = MibScalar
svcPwRtRetryTimer = _SvcPwRtRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 5),
    _SvcPwRtRetryTimer_Type()
)
svcPwRtRetryTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPwRtRetryTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcPwRtRetryTimer.setUnits("seconds")


class _SvcPwRtRetryCount_Type(Unsigned32):
    """Custom type svcPwRtRetryCount based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 10000),
    )


_SvcPwRtRetryCount_Type.__name__ = "Unsigned32"
_SvcPwRtRetryCount_Object = MibScalar
svcPwRtRetryCount = _SvcPwRtRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 6),
    _SvcPwRtRetryCount_Type()
)
svcPwRtRetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPwRtRetryCount.setStatus("current")
_SvcPwRtBgpRoutes_Type = Gauge32
_SvcPwRtBgpRoutes_Object = MibScalar
svcPwRtBgpRoutes = _SvcPwRtBgpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 7),
    _SvcPwRtBgpRoutes_Type()
)
svcPwRtBgpRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtBgpRoutes.setStatus("current")
_SvcPwRtStaticRoutes_Type = Gauge32
_SvcPwRtStaticRoutes_Object = MibScalar
svcPwRtStaticRoutes = _SvcPwRtStaticRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 8),
    _SvcPwRtStaticRoutes_Type()
)
svcPwRtStaticRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtStaticRoutes.setStatus("current")
_SvcPwRtLocalRoutes_Type = Gauge32
_SvcPwRtLocalRoutes_Object = MibScalar
svcPwRtLocalRoutes = _SvcPwRtLocalRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 9),
    _SvcPwRtLocalRoutes_Type()
)
svcPwRtLocalRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtLocalRoutes.setStatus("current")
_SvcPwRtHostRoutes_Type = Gauge32
_SvcPwRtHostRoutes_Object = MibScalar
svcPwRtHostRoutes = _SvcPwRtHostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 10),
    _SvcPwRtHostRoutes_Type()
)
svcPwRtHostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtHostRoutes.setStatus("current")


class _SvcPwRtBootTimerRemain_Type(Integer32):
    """Custom type svcPwRtBootTimerRemain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_SvcPwRtBootTimerRemain_Type.__name__ = "Integer32"
_SvcPwRtBootTimerRemain_Object = MibScalar
svcPwRtBootTimerRemain = _SvcPwRtBootTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 113, 11),
    _SvcPwRtBootTimerRemain_Type()
)
svcPwRtBootTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtBootTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcPwRtBootTimerRemain.setUnits("seconds")
_SvcPwRtLclPfxRDTblLastChanged_Type = TimeStamp
_SvcPwRtLclPfxRDTblLastChanged_Object = MibScalar
svcPwRtLclPfxRDTblLastChanged = _SvcPwRtLclPfxRDTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 114),
    _SvcPwRtLclPfxRDTblLastChanged_Type()
)
svcPwRtLclPfxRDTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDTblLastChanged.setStatus("current")
_SvcPwRtLclPfxRDTable_Object = MibTable
svcPwRtLclPfxRDTable = _SvcPwRtLclPfxRDTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115)
)
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDTable.setStatus("current")
_SvcPwRtLclPfxRDEntry_Object = MibTableRow
svcPwRtLclPfxRDEntry = _SvcPwRtLclPfxRDEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115, 1)
)
svcPwRtLclPfxRDEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcPwRtLclPrefixGlobalId"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtLclPrefix"),
    (0, "TIMETRA-SERV-MIB", "svcPwRtLclPfxRD"),
)
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDEntry.setStatus("current")
_SvcPwRtLclPfxRD_Type = TmnxVPNRouteDistinguisher
_SvcPwRtLclPfxRD_Object = MibTableColumn
svcPwRtLclPfxRD = _SvcPwRtLclPfxRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115, 1, 1),
    _SvcPwRtLclPfxRD_Type()
)
svcPwRtLclPfxRD.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPwRtLclPfxRD.setStatus("current")
_SvcPwRtLclPfxRDRowStatus_Type = RowStatus
_SvcPwRtLclPfxRDRowStatus_Object = MibTableColumn
svcPwRtLclPfxRDRowStatus = _SvcPwRtLclPfxRDRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115, 1, 2),
    _SvcPwRtLclPfxRDRowStatus_Type()
)
svcPwRtLclPfxRDRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDRowStatus.setStatus("current")
_SvcPwRtLclPfxRDLastChange_Type = TimeStamp
_SvcPwRtLclPfxRDLastChange_Object = MibTableColumn
svcPwRtLclPfxRDLastChange = _SvcPwRtLclPfxRDLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115, 1, 3),
    _SvcPwRtLclPfxRDLastChange_Type()
)
svcPwRtLclPfxRDLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDLastChange.setStatus("current")


class _SvcPwRtLclPfxRDCommunity_Type(Unsigned32):
    """Custom type svcPwRtLclPfxRDCommunity based on Unsigned32"""
    defaultValue = 0


_SvcPwRtLclPfxRDCommunity_Type.__name__ = "Unsigned32"
_SvcPwRtLclPfxRDCommunity_Object = MibTableColumn
svcPwRtLclPfxRDCommunity = _SvcPwRtLclPfxRDCommunity_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 115, 1, 4),
    _SvcPwRtLclPfxRDCommunity_Type()
)
svcPwRtLclPfxRDCommunity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPwRtLclPfxRDCommunity.setStatus("current")
_SvcPwSpeSaiiTable_Object = MibTable
svcPwSpeSaiiTable = _SvcPwSpeSaiiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116)
)
if mibBuilder.loadTexts:
    svcPwSpeSaiiTable.setStatus("current")
_SvcPwSpeSaiiEntry_Object = MibTableRow
svcPwSpeSaiiEntry = _SvcPwSpeSaiiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1)
)
svcPwSpeSaiiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeSaiiGlobalId"),
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeSaiiPrefix"),
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeSaiiAcId"),
)
if mibBuilder.loadTexts:
    svcPwSpeSaiiEntry.setStatus("current")
_SvcPwSpeSaiiTaiiGlobalId_Type = TmnxPwGlobalIdOrZero
_SvcPwSpeSaiiTaiiGlobalId_Object = MibTableColumn
svcPwSpeSaiiTaiiGlobalId = _SvcPwSpeSaiiTaiiGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 1),
    _SvcPwSpeSaiiTaiiGlobalId_Type()
)
svcPwSpeSaiiTaiiGlobalId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiTaiiGlobalId.setStatus("current")
_SvcPwSpeSaiiTaiiPrefix_Type = Unsigned32
_SvcPwSpeSaiiTaiiPrefix_Object = MibTableColumn
svcPwSpeSaiiTaiiPrefix = _SvcPwSpeSaiiTaiiPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 2),
    _SvcPwSpeSaiiTaiiPrefix_Type()
)
svcPwSpeSaiiTaiiPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiTaiiPrefix.setStatus("current")
_SvcPwSpeSaiiTaiiAcId_Type = Unsigned32
_SvcPwSpeSaiiTaiiAcId_Object = MibTableColumn
svcPwSpeSaiiTaiiAcId = _SvcPwSpeSaiiTaiiAcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 3),
    _SvcPwSpeSaiiTaiiAcId_Type()
)
svcPwSpeSaiiTaiiAcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiTaiiAcId.setStatus("current")
_SvcPwSpeSaiiSvcId_Type = TmnxServId
_SvcPwSpeSaiiSvcId_Object = MibTableColumn
svcPwSpeSaiiSvcId = _SvcPwSpeSaiiSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 4),
    _SvcPwSpeSaiiSvcId_Type()
)
svcPwSpeSaiiSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiSvcId.setStatus("current")
_SvcPwSpeSaiiOperSdpBind1_Type = SdpBindId
_SvcPwSpeSaiiOperSdpBind1_Object = MibTableColumn
svcPwSpeSaiiOperSdpBind1 = _SvcPwSpeSaiiOperSdpBind1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 5),
    _SvcPwSpeSaiiOperSdpBind1_Type()
)
svcPwSpeSaiiOperSdpBind1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiOperSdpBind1.setStatus("current")
_SvcPwSpeSaiiOperSdpBind2_Type = SdpBindId
_SvcPwSpeSaiiOperSdpBind2_Object = MibTableColumn
svcPwSpeSaiiOperSdpBind2 = _SvcPwSpeSaiiOperSdpBind2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 116, 1, 6),
    _SvcPwSpeSaiiOperSdpBind2_Type()
)
svcPwSpeSaiiOperSdpBind2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeSaiiOperSdpBind2.setStatus("current")
_SvcPwSpeTaiiTable_Object = MibTable
svcPwSpeTaiiTable = _SvcPwSpeTaiiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117)
)
if mibBuilder.loadTexts:
    svcPwSpeTaiiTable.setStatus("current")
_SvcPwSpeTaiiEntry_Object = MibTableRow
svcPwSpeTaiiEntry = _SvcPwSpeTaiiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1)
)
svcPwSpeTaiiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeTaiiGlobalId"),
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeTaiiPrefix"),
    (0, "TIMETRA-SERV-MIB", "svcMSPwPeTaiiAcId"),
)
if mibBuilder.loadTexts:
    svcPwSpeTaiiEntry.setStatus("current")
_SvcPwSpeTaiiSaiiGlobalId_Type = TmnxPwGlobalIdOrZero
_SvcPwSpeTaiiSaiiGlobalId_Object = MibTableColumn
svcPwSpeTaiiSaiiGlobalId = _SvcPwSpeTaiiSaiiGlobalId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 1),
    _SvcPwSpeTaiiSaiiGlobalId_Type()
)
svcPwSpeTaiiSaiiGlobalId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiSaiiGlobalId.setStatus("current")
_SvcPwSpeTaiiSaiiPrefix_Type = Unsigned32
_SvcPwSpeTaiiSaiiPrefix_Object = MibTableColumn
svcPwSpeTaiiSaiiPrefix = _SvcPwSpeTaiiSaiiPrefix_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 2),
    _SvcPwSpeTaiiSaiiPrefix_Type()
)
svcPwSpeTaiiSaiiPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiSaiiPrefix.setStatus("current")
_SvcPwSpeTaiiSaiiAcId_Type = Unsigned32
_SvcPwSpeTaiiSaiiAcId_Object = MibTableColumn
svcPwSpeTaiiSaiiAcId = _SvcPwSpeTaiiSaiiAcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 3),
    _SvcPwSpeTaiiSaiiAcId_Type()
)
svcPwSpeTaiiSaiiAcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiSaiiAcId.setStatus("current")
_SvcPwSpeTaiiSvcId_Type = TmnxServId
_SvcPwSpeTaiiSvcId_Object = MibTableColumn
svcPwSpeTaiiSvcId = _SvcPwSpeTaiiSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 4),
    _SvcPwSpeTaiiSvcId_Type()
)
svcPwSpeTaiiSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiSvcId.setStatus("current")
_SvcPwSpeTaiiOperSdpBind1_Type = SdpBindId
_SvcPwSpeTaiiOperSdpBind1_Object = MibTableColumn
svcPwSpeTaiiOperSdpBind1 = _SvcPwSpeTaiiOperSdpBind1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 5),
    _SvcPwSpeTaiiOperSdpBind1_Type()
)
svcPwSpeTaiiOperSdpBind1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiOperSdpBind1.setStatus("current")
_SvcPwSpeTaiiOperSdpBind2_Type = SdpBindId
_SvcPwSpeTaiiOperSdpBind2_Object = MibTableColumn
svcPwSpeTaiiOperSdpBind2 = _SvcPwSpeTaiiOperSdpBind2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 117, 1, 6),
    _SvcPwSpeTaiiOperSdpBind2_Type()
)
svcPwSpeTaiiOperSdpBind2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPwSpeTaiiOperSdpBind2.setStatus("current")
_SvcDhcpLeaseOvrTable_Object = MibTable
svcDhcpLeaseOvrTable = _SvcDhcpLeaseOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrTable.setStatus("current")
_SvcDhcpLeaseOvrEntry_Object = MibTableRow
svcDhcpLeaseOvrEntry = _SvcDhcpLeaseOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1)
)
svcDhcpLeaseOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseOvrDirection"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseOvrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseOvrTypeId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseOvrTypeName"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrEntry.setStatus("current")
_SvcDhcpLeaseOvrDirection_Type = TDirectionIngEgr
_SvcDhcpLeaseOvrDirection_Object = MibTableColumn
svcDhcpLeaseOvrDirection = _SvcDhcpLeaseOvrDirection_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 1),
    _SvcDhcpLeaseOvrDirection_Type()
)
svcDhcpLeaseOvrDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrDirection.setStatus("current")
_SvcDhcpLeaseOvrType_Type = TQosOverrideType
_SvcDhcpLeaseOvrType_Object = MibTableColumn
svcDhcpLeaseOvrType = _SvcDhcpLeaseOvrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 2),
    _SvcDhcpLeaseOvrType_Type()
)
svcDhcpLeaseOvrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrType.setStatus("current")
_SvcDhcpLeaseOvrTypeId_Type = Integer32
_SvcDhcpLeaseOvrTypeId_Object = MibTableColumn
svcDhcpLeaseOvrTypeId = _SvcDhcpLeaseOvrTypeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 3),
    _SvcDhcpLeaseOvrTypeId_Type()
)
svcDhcpLeaseOvrTypeId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrTypeId.setStatus("current")
_SvcDhcpLeaseOvrTypeName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseOvrTypeName_Object = MibTableColumn
svcDhcpLeaseOvrTypeName = _SvcDhcpLeaseOvrTypeName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 4),
    _SvcDhcpLeaseOvrTypeName_Type()
)
svcDhcpLeaseOvrTypeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrTypeName.setStatus("current")
_SvcDhcpLeaseOvrPIR_Type = TQosQueuePIRRateOverride
_SvcDhcpLeaseOvrPIR_Object = MibTableColumn
svcDhcpLeaseOvrPIR = _SvcDhcpLeaseOvrPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 5),
    _SvcDhcpLeaseOvrPIR_Type()
)
svcDhcpLeaseOvrPIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrPIR.setStatus("current")
_SvcDhcpLeaseOvrCIR_Type = TQosQueueCIRRateOverride
_SvcDhcpLeaseOvrCIR_Object = MibTableColumn
svcDhcpLeaseOvrCIR = _SvcDhcpLeaseOvrCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 6),
    _SvcDhcpLeaseOvrCIR_Type()
)
svcDhcpLeaseOvrCIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrCIR.setStatus("current")
_SvcDhcpLeaseOvrCBS_Type = TBurstSizeBytesOvr
_SvcDhcpLeaseOvrCBS_Object = MibTableColumn
svcDhcpLeaseOvrCBS = _SvcDhcpLeaseOvrCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 7),
    _SvcDhcpLeaseOvrCBS_Type()
)
svcDhcpLeaseOvrCBS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrCBS.setStatus("current")
_SvcDhcpLeaseOvrMBS_Type = TBurstSizeBytesOvr
_SvcDhcpLeaseOvrMBS_Object = MibTableColumn
svcDhcpLeaseOvrMBS = _SvcDhcpLeaseOvrMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 8),
    _SvcDhcpLeaseOvrMBS_Type()
)
svcDhcpLeaseOvrMBS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrMBS.setStatus("current")
_SvcDhcpLeaseOvrWrrWeight_Type = THsmdaWrrWeightOverride
_SvcDhcpLeaseOvrWrrWeight_Object = MibTableColumn
svcDhcpLeaseOvrWrrWeight = _SvcDhcpLeaseOvrWrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 9),
    _SvcDhcpLeaseOvrWrrWeight_Type()
)
svcDhcpLeaseOvrWrrWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrWrrWeight.setStatus("current")
_SvcDhcpLeaseOvrSummedCIR_Type = TruthValue
_SvcDhcpLeaseOvrSummedCIR_Object = MibTableColumn
svcDhcpLeaseOvrSummedCIR = _SvcDhcpLeaseOvrSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 10),
    _SvcDhcpLeaseOvrSummedCIR_Type()
)
svcDhcpLeaseOvrSummedCIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrSummedCIR.setStatus("current")
_SvcDhcpLeaseOvrClassWeight_Type = THsClassWeightOverride
_SvcDhcpLeaseOvrClassWeight_Object = MibTableColumn
svcDhcpLeaseOvrClassWeight = _SvcDhcpLeaseOvrClassWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 118, 1, 11),
    _SvcDhcpLeaseOvrClassWeight_Type()
)
svcDhcpLeaseOvrClassWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseOvrClassWeight.setStatus("current")
_SvcTlsSpbTableLastChanged_Type = TimeStamp
_SvcTlsSpbTableLastChanged_Object = MibScalar
svcTlsSpbTableLastChanged = _SvcTlsSpbTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 119),
    _SvcTlsSpbTableLastChanged_Type()
)
svcTlsSpbTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbTableLastChanged.setStatus("current")
_SvcTlsSpbTable_Object = MibTable
svcTlsSpbTable = _SvcTlsSpbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120)
)
if mibBuilder.loadTexts:
    svcTlsSpbTable.setStatus("current")
_SvcTlsSpbEntry_Object = MibTableRow
svcTlsSpbEntry = _SvcTlsSpbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1)
)
svcTlsSpbEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsSpbEntry.setStatus("current")
_SvcTlsSpbRowStatus_Type = RowStatus
_SvcTlsSpbRowStatus_Object = MibTableColumn
svcTlsSpbRowStatus = _SvcTlsSpbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 1),
    _SvcTlsSpbRowStatus_Type()
)
svcTlsSpbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbRowStatus.setStatus("current")
_SvcTlsSpbLastChanged_Type = TimeStamp
_SvcTlsSpbLastChanged_Object = MibTableColumn
svcTlsSpbLastChanged = _SvcTlsSpbLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 2),
    _SvcTlsSpbLastChanged_Type()
)
svcTlsSpbLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbLastChanged.setStatus("current")


class _SvcTlsSpbIsisInstance_Type(Integer32):
    """Custom type svcTlsSpbIsisInstance based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1024, 2047),
    )


_SvcTlsSpbIsisInstance_Type.__name__ = "Integer32"
_SvcTlsSpbIsisInstance_Object = MibTableColumn
svcTlsSpbIsisInstance = _SvcTlsSpbIsisInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 3),
    _SvcTlsSpbIsisInstance_Type()
)
svcTlsSpbIsisInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbIsisInstance.setStatus("current")


class _SvcTlsSpbFid_Type(TmnxSpbFid):
    """Custom type svcTlsSpbFid based on TmnxSpbFid"""
    defaultValue = 1


_SvcTlsSpbFid_Type.__name__ = "TmnxSpbFid"
_SvcTlsSpbFid_Object = MibTableColumn
svcTlsSpbFid = _SvcTlsSpbFid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 4),
    _SvcTlsSpbFid_Type()
)
svcTlsSpbFid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbFid.setStatus("current")


class _SvcTlsSpbL1BridgePriority_Type(TmnxSpbBridgePriority):
    """Custom type svcTlsSpbL1BridgePriority based on TmnxSpbBridgePriority"""
    defaultValue = 8


_SvcTlsSpbL1BridgePriority_Type.__name__ = "TmnxSpbBridgePriority"
_SvcTlsSpbL1BridgePriority_Object = MibTableColumn
svcTlsSpbL1BridgePriority = _SvcTlsSpbL1BridgePriority_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 5),
    _SvcTlsSpbL1BridgePriority_Type()
)
svcTlsSpbL1BridgePriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbL1BridgePriority.setStatus("current")


class _SvcTlsSpbL1FwdTreeTopoUcast_Type(Integer32):
    """Custom type svcTlsSpbL1FwdTreeTopoUcast based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("spf", 0),
          ("st", 1))
    )


_SvcTlsSpbL1FwdTreeTopoUcast_Type.__name__ = "Integer32"
_SvcTlsSpbL1FwdTreeTopoUcast_Object = MibTableColumn
svcTlsSpbL1FwdTreeTopoUcast = _SvcTlsSpbL1FwdTreeTopoUcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 6),
    _SvcTlsSpbL1FwdTreeTopoUcast_Type()
)
svcTlsSpbL1FwdTreeTopoUcast.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbL1FwdTreeTopoUcast.setStatus("current")


class _SvcTlsSpbAdminState_Type(TmnxAdminState):
    """Custom type svcTlsSpbAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcTlsSpbAdminState_Type.__name__ = "TmnxAdminState"
_SvcTlsSpbAdminState_Object = MibTableColumn
svcTlsSpbAdminState = _SvcTlsSpbAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 7),
    _SvcTlsSpbAdminState_Type()
)
svcTlsSpbAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsSpbAdminState.setStatus("current")


class _SvcTlsSpbL1FwdTreeTopoMcast_Type(Integer32):
    """Custom type svcTlsSpbL1FwdTreeTopoMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("spf", 0),
          ("st", 1))
    )


_SvcTlsSpbL1FwdTreeTopoMcast_Type.__name__ = "Integer32"
_SvcTlsSpbL1FwdTreeTopoMcast_Object = MibTableColumn
svcTlsSpbL1FwdTreeTopoMcast = _SvcTlsSpbL1FwdTreeTopoMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 8),
    _SvcTlsSpbL1FwdTreeTopoMcast_Type()
)
svcTlsSpbL1FwdTreeTopoMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbL1FwdTreeTopoMcast.setStatus("current")
_SvcTlsSpbL1BridgeId_Type = BridgeId
_SvcTlsSpbL1BridgeId_Object = MibTableColumn
svcTlsSpbL1BridgeId = _SvcTlsSpbL1BridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 9),
    _SvcTlsSpbL1BridgeId_Type()
)
svcTlsSpbL1BridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbL1BridgeId.setStatus("current")
_SvcTlsSpbL1McastDesigBridgeId_Type = BridgeId
_SvcTlsSpbL1McastDesigBridgeId_Object = MibTableColumn
svcTlsSpbL1McastDesigBridgeId = _SvcTlsSpbL1McastDesigBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 120, 1, 10),
    _SvcTlsSpbL1McastDesigBridgeId_Type()
)
svcTlsSpbL1McastDesigBridgeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbL1McastDesigBridgeId.setStatus("current")
_SvcVllBgpTableLastChanged_Type = TimeStamp
_SvcVllBgpTableLastChanged_Object = MibScalar
svcVllBgpTableLastChanged = _SvcVllBgpTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 121),
    _SvcVllBgpTableLastChanged_Type()
)
svcVllBgpTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpTableLastChanged.setStatus("current")
_SvcVllBgpTable_Object = MibTable
svcVllBgpTable = _SvcVllBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122)
)
if mibBuilder.loadTexts:
    svcVllBgpTable.setStatus("current")
_SvcVllBgpEntry_Object = MibTableRow
svcVllBgpEntry = _SvcVllBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1)
)
svcVllBgpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVllBgpEntry.setStatus("current")
_SvcVllBgpRowStatus_Type = RowStatus
_SvcVllBgpRowStatus_Object = MibTableColumn
svcVllBgpRowStatus = _SvcVllBgpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 1),
    _SvcVllBgpRowStatus_Type()
)
svcVllBgpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpRowStatus.setStatus("current")
_SvcVllBgpLastChanged_Type = TimeStamp
_SvcVllBgpLastChanged_Object = MibTableColumn
svcVllBgpLastChanged = _SvcVllBgpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 2),
    _SvcVllBgpLastChanged_Type()
)
svcVllBgpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpLastChanged.setStatus("current")


class _SvcVllBgpVsiRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcVllBgpVsiRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcVllBgpVsiRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcVllBgpVsiRD_Object = MibTableColumn
svcVllBgpVsiRD = _SvcVllBgpVsiRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 3),
    _SvcVllBgpVsiRD_Type()
)
svcVllBgpVsiRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiRD.setStatus("current")


class _SvcVllBgpExportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcVllBgpExportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcVllBgpExportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcVllBgpExportRteTarget_Object = MibTableColumn
svcVllBgpExportRteTarget = _SvcVllBgpExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 4),
    _SvcVllBgpExportRteTarget_Type()
)
svcVllBgpExportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpExportRteTarget.setStatus("current")


class _SvcVllBgpImportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcVllBgpImportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcVllBgpImportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcVllBgpImportRteTarget_Object = MibTableColumn
svcVllBgpImportRteTarget = _SvcVllBgpImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 5),
    _SvcVllBgpImportRteTarget_Type()
)
svcVllBgpImportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpImportRteTarget.setStatus("current")


class _SvcVllBgpAutoRD_Type(TruthValue):
    """Custom type svcVllBgpAutoRD based on TruthValue"""
    defaultValue = 2


_SvcVllBgpAutoRD_Type.__name__ = "TruthValue"
_SvcVllBgpAutoRD_Object = MibTableColumn
svcVllBgpAutoRD = _SvcVllBgpAutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 6),
    _SvcVllBgpAutoRD_Type()
)
svcVllBgpAutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpAutoRD.setStatus("current")
_SvcVllBgpOperRD_Type = TmnxVPNRouteDistinguisher
_SvcVllBgpOperRD_Object = MibTableColumn
svcVllBgpOperRD = _SvcVllBgpOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 7),
    _SvcVllBgpOperRD_Type()
)
svcVllBgpOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperRD.setStatus("current")
_SvcVllBgpOperRDType_Type = TmnxRouteDistType
_SvcVllBgpOperRDType_Object = MibTableColumn
svcVllBgpOperRDType = _SvcVllBgpOperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 8),
    _SvcVllBgpOperRDType_Type()
)
svcVllBgpOperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperRDType.setStatus("current")
_SvcVllBgpOperImportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcVllBgpOperImportRteTgtOrigin_Object = MibTableColumn
svcVllBgpOperImportRteTgtOrigin = _SvcVllBgpOperImportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 9),
    _SvcVllBgpOperImportRteTgtOrigin_Type()
)
svcVllBgpOperImportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperImportRteTgtOrigin.setStatus("current")
_SvcVllBgpOperImportRteTarget_Type = TNamedItemOrEmpty
_SvcVllBgpOperImportRteTarget_Object = MibTableColumn
svcVllBgpOperImportRteTarget = _SvcVllBgpOperImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 10),
    _SvcVllBgpOperImportRteTarget_Type()
)
svcVllBgpOperImportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperImportRteTarget.setStatus("current")
_SvcVllBgpOperExportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcVllBgpOperExportRteTgtOrigin_Object = MibTableColumn
svcVllBgpOperExportRteTgtOrigin = _SvcVllBgpOperExportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 11),
    _SvcVllBgpOperExportRteTgtOrigin_Type()
)
svcVllBgpOperExportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperExportRteTgtOrigin.setStatus("current")
_SvcVllBgpOperExportRteTarget_Type = TNamedItemOrEmpty
_SvcVllBgpOperExportRteTarget_Object = MibTableColumn
svcVllBgpOperExportRteTarget = _SvcVllBgpOperExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 12),
    _SvcVllBgpOperExportRteTarget_Type()
)
svcVllBgpOperExportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpOperExportRteTarget.setStatus("current")


class _SvcVllBgpVsiExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiExportPolicy1_Object = MibTableColumn
svcVllBgpVsiExportPolicy1 = _SvcVllBgpVsiExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 13),
    _SvcVllBgpVsiExportPolicy1_Type()
)
svcVllBgpVsiExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiExportPolicy1.setStatus("current")


class _SvcVllBgpVsiExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiExportPolicy2_Object = MibTableColumn
svcVllBgpVsiExportPolicy2 = _SvcVllBgpVsiExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 14),
    _SvcVllBgpVsiExportPolicy2_Type()
)
svcVllBgpVsiExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiExportPolicy2.setStatus("current")


class _SvcVllBgpVsiExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiExportPolicy3_Object = MibTableColumn
svcVllBgpVsiExportPolicy3 = _SvcVllBgpVsiExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 15),
    _SvcVllBgpVsiExportPolicy3_Type()
)
svcVllBgpVsiExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiExportPolicy3.setStatus("current")


class _SvcVllBgpVsiExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiExportPolicy4_Object = MibTableColumn
svcVllBgpVsiExportPolicy4 = _SvcVllBgpVsiExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 16),
    _SvcVllBgpVsiExportPolicy4_Type()
)
svcVllBgpVsiExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiExportPolicy4.setStatus("current")


class _SvcVllBgpVsiExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiExportPolicy5_Object = MibTableColumn
svcVllBgpVsiExportPolicy5 = _SvcVllBgpVsiExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 17),
    _SvcVllBgpVsiExportPolicy5_Type()
)
svcVllBgpVsiExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiExportPolicy5.setStatus("current")


class _SvcVllBgpVsiImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiImportPolicy1_Object = MibTableColumn
svcVllBgpVsiImportPolicy1 = _SvcVllBgpVsiImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 18),
    _SvcVllBgpVsiImportPolicy1_Type()
)
svcVllBgpVsiImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiImportPolicy1.setStatus("current")


class _SvcVllBgpVsiImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiImportPolicy2_Object = MibTableColumn
svcVllBgpVsiImportPolicy2 = _SvcVllBgpVsiImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 19),
    _SvcVllBgpVsiImportPolicy2_Type()
)
svcVllBgpVsiImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiImportPolicy2.setStatus("current")


class _SvcVllBgpVsiImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiImportPolicy3_Object = MibTableColumn
svcVllBgpVsiImportPolicy3 = _SvcVllBgpVsiImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 20),
    _SvcVllBgpVsiImportPolicy3_Type()
)
svcVllBgpVsiImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiImportPolicy3.setStatus("current")


class _SvcVllBgpVsiImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiImportPolicy4_Object = MibTableColumn
svcVllBgpVsiImportPolicy4 = _SvcVllBgpVsiImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 21),
    _SvcVllBgpVsiImportPolicy4_Type()
)
svcVllBgpVsiImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiImportPolicy4.setStatus("current")


class _SvcVllBgpVsiImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVllBgpVsiImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVllBgpVsiImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVllBgpVsiImportPolicy5_Object = MibTableColumn
svcVllBgpVsiImportPolicy5 = _SvcVllBgpVsiImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 22),
    _SvcVllBgpVsiImportPolicy5_Type()
)
svcVllBgpVsiImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpVsiImportPolicy5.setStatus("current")


class _SvcVllBgpAdvServiceMtu_Type(Integer32):
    """Custom type svcVllBgpAdvServiceMtu based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 9782),
    )


_SvcVllBgpAdvServiceMtu_Type.__name__ = "Integer32"
_SvcVllBgpAdvServiceMtu_Object = MibTableColumn
svcVllBgpAdvServiceMtu = _SvcVllBgpAdvServiceMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 122, 1, 23),
    _SvcVllBgpAdvServiceMtu_Type()
)
svcVllBgpAdvServiceMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllBgpAdvServiceMtu.setStatus("current")
_SvcVllSiteIdTblLastChanged_Type = TimeStamp
_SvcVllSiteIdTblLastChanged_Object = MibScalar
svcVllSiteIdTblLastChanged = _SvcVllSiteIdTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 123),
    _SvcVllSiteIdTblLastChanged_Type()
)
svcVllSiteIdTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdTblLastChanged.setStatus("current")
_SvcVllSiteIdTable_Object = MibTable
svcVllSiteIdTable = _SvcVllSiteIdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124)
)
if mibBuilder.loadTexts:
    svcVllSiteIdTable.setStatus("current")
_SvcVllSiteIdEntry_Object = MibTableRow
svcVllSiteIdEntry = _SvcVllSiteIdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1)
)
svcVllSiteIdEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVllSiteIdName"),
)
if mibBuilder.loadTexts:
    svcVllSiteIdEntry.setStatus("current")
_SvcVllSiteIdName_Type = TNamedItem
_SvcVllSiteIdName_Object = MibTableColumn
svcVllSiteIdName = _SvcVllSiteIdName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 1),
    _SvcVllSiteIdName_Type()
)
svcVllSiteIdName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVllSiteIdName.setStatus("current")
_SvcVllSiteIdRowStatus_Type = RowStatus
_SvcVllSiteIdRowStatus_Object = MibTableColumn
svcVllSiteIdRowStatus = _SvcVllSiteIdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 2),
    _SvcVllSiteIdRowStatus_Type()
)
svcVllSiteIdRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdRowStatus.setStatus("current")
_SvcVllSiteIdLastChanged_Type = TimeStamp
_SvcVllSiteIdLastChanged_Object = MibTableColumn
svcVllSiteIdLastChanged = _SvcVllSiteIdLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 3),
    _SvcVllSiteIdLastChanged_Type()
)
svcVllSiteIdLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdLastChanged.setStatus("current")


class _SvcVllSiteIdAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcVllSiteIdAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcVllSiteIdAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcVllSiteIdAdminStatus_Object = MibTableColumn
svcVllSiteIdAdminStatus = _SvcVllSiteIdAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 4),
    _SvcVllSiteIdAdminStatus_Type()
)
svcVllSiteIdAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdAdminStatus.setStatus("current")


class _SvcVllSiteIdSiteId_Type(TmnxSiteIdOrEmpty):
    """Custom type svcVllSiteIdSiteId based on TmnxSiteIdOrEmpty"""
    defaultValue = -1


_SvcVllSiteIdSiteId_Type.__name__ = "TmnxSiteIdOrEmpty"
_SvcVllSiteIdSiteId_Object = MibTableColumn
svcVllSiteIdSiteId = _SvcVllSiteIdSiteId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 5),
    _SvcVllSiteIdSiteId_Type()
)
svcVllSiteIdSiteId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdSiteId.setStatus("current")


class _SvcVllSiteIdPortId_Type(TmnxPortID):
    """Custom type svcVllSiteIdPortId based on TmnxPortID"""
    defaultValue = 503316480


_SvcVllSiteIdPortId_Type.__name__ = "TmnxPortID"
_SvcVllSiteIdPortId_Object = MibTableColumn
svcVllSiteIdPortId = _SvcVllSiteIdPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 6),
    _SvcVllSiteIdPortId_Type()
)
svcVllSiteIdPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdPortId.setStatus("current")


class _SvcVllSiteIdEncapValue_Type(TmnxEncapVal):
    """Custom type svcVllSiteIdEncapValue based on TmnxEncapVal"""
    defaultValue = 0


_SvcVllSiteIdEncapValue_Type.__name__ = "TmnxEncapVal"
_SvcVllSiteIdEncapValue_Object = MibTableColumn
svcVllSiteIdEncapValue = _SvcVllSiteIdEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 7),
    _SvcVllSiteIdEncapValue_Type()
)
svcVllSiteIdEncapValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdEncapValue.setStatus("current")
_SvcVllSiteIdOperStatus_Type = TSiteOperStatus
_SvcVllSiteIdOperStatus_Object = MibTableColumn
svcVllSiteIdOperStatus = _SvcVllSiteIdOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 8),
    _SvcVllSiteIdOperStatus_Type()
)
svcVllSiteIdOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdOperStatus.setStatus("current")
_SvcVllSiteIdDesignatedFwdr_Type = TruthValue
_SvcVllSiteIdDesignatedFwdr_Object = MibTableColumn
svcVllSiteIdDesignatedFwdr = _SvcVllSiteIdDesignatedFwdr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 9),
    _SvcVllSiteIdDesignatedFwdr_Type()
)
svcVllSiteIdDesignatedFwdr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdDesignatedFwdr.setStatus("current")


class _SvcVllSiteIdBootTimer_Type(Integer32):
    """Custom type svcVllSiteIdBootTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 600),
    )


_SvcVllSiteIdBootTimer_Type.__name__ = "Integer32"
_SvcVllSiteIdBootTimer_Object = MibTableColumn
svcVllSiteIdBootTimer = _SvcVllSiteIdBootTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 10),
    _SvcVllSiteIdBootTimer_Type()
)
svcVllSiteIdBootTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdBootTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdBootTimer.setUnits("seconds")


class _SvcVllSiteIdSiteActTimer_Type(Integer32):
    """Custom type svcVllSiteIdSiteActTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_SvcVllSiteIdSiteActTimer_Type.__name__ = "Integer32"
_SvcVllSiteIdSiteActTimer_Object = MibTableColumn
svcVllSiteIdSiteActTimer = _SvcVllSiteIdSiteActTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 11),
    _SvcVllSiteIdSiteActTimer_Type()
)
svcVllSiteIdSiteActTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdSiteActTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdSiteActTimer.setUnits("seconds")
_SvcVllSiteIdDfUpTime_Type = Unsigned32
_SvcVllSiteIdDfUpTime_Object = MibTableColumn
svcVllSiteIdDfUpTime = _SvcVllSiteIdDfUpTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 12),
    _SvcVllSiteIdDfUpTime_Type()
)
svcVllSiteIdDfUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdDfUpTime.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdDfUpTime.setUnits("seconds")
_SvcVllSiteIdDfChgCnt_Type = Unsigned32
_SvcVllSiteIdDfChgCnt_Object = MibTableColumn
svcVllSiteIdDfChgCnt = _SvcVllSiteIdDfChgCnt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 13),
    _SvcVllSiteIdDfChgCnt_Type()
)
svcVllSiteIdDfChgCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdDfChgCnt.setStatus("current")
_SvcVllSiteIdTimerRemain_Type = Unsigned32
_SvcVllSiteIdTimerRemain_Object = MibTableColumn
svcVllSiteIdTimerRemain = _SvcVllSiteIdTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 14),
    _SvcVllSiteIdTimerRemain_Type()
)
svcVllSiteIdTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdTimerRemain.setUnits("seconds")


class _SvcVllSiteIdPreference_Type(Unsigned32):
    """Custom type svcVllSiteIdPreference based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcVllSiteIdPreference_Type.__name__ = "Unsigned32"
_SvcVllSiteIdPreference_Object = MibTableColumn
svcVllSiteIdPreference = _SvcVllSiteIdPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 15),
    _SvcVllSiteIdPreference_Type()
)
svcVllSiteIdPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdPreference.setStatus("current")
_SvcVllSiteIdActTimerRemain_Type = Unsigned32
_SvcVllSiteIdActTimerRemain_Object = MibTableColumn
svcVllSiteIdActTimerRemain = _SvcVllSiteIdActTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 16),
    _SvcVllSiteIdActTimerRemain_Type()
)
svcVllSiteIdActTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdActTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdActTimerRemain.setUnits("seconds")


class _SvcVllSiteIdMinDnTimer_Type(Integer32):
    """Custom type svcVllSiteIdMinDnTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_SvcVllSiteIdMinDnTimer_Type.__name__ = "Integer32"
_SvcVllSiteIdMinDnTimer_Object = MibTableColumn
svcVllSiteIdMinDnTimer = _SvcVllSiteIdMinDnTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 21),
    _SvcVllSiteIdMinDnTimer_Type()
)
svcVllSiteIdMinDnTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVllSiteIdMinDnTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdMinDnTimer.setUnits("seconds")
_SvcVllSiteIdMinDnTimerRemain_Type = Unsigned32
_SvcVllSiteIdMinDnTimerRemain_Object = MibTableColumn
svcVllSiteIdMinDnTimerRemain = _SvcVllSiteIdMinDnTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 124, 1, 22),
    _SvcVllSiteIdMinDnTimerRemain_Type()
)
svcVllSiteIdMinDnTimerRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllSiteIdMinDnTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcVllSiteIdMinDnTimerRemain.setUnits("seconds")
_SvcTlsPmsiTableLastChanged_Type = TimeStamp
_SvcTlsPmsiTableLastChanged_Object = MibScalar
svcTlsPmsiTableLastChanged = _SvcTlsPmsiTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 125),
    _SvcTlsPmsiTableLastChanged_Type()
)
svcTlsPmsiTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsPmsiTableLastChanged.setStatus("current")
_SvcTlsPmsiTable_Object = MibTable
svcTlsPmsiTable = _SvcTlsPmsiTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126)
)
if mibBuilder.loadTexts:
    svcTlsPmsiTable.setStatus("current")
_SvcTlsPmsiEntry_Object = MibTableRow
svcTlsPmsiEntry = _SvcTlsPmsiEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1)
)
svcTlsPmsiEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsPmsiEntry.setStatus("current")
_SvcTlsPmsiRowStatus_Type = RowStatus
_SvcTlsPmsiRowStatus_Object = MibTableColumn
svcTlsPmsiRowStatus = _SvcTlsPmsiRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 1),
    _SvcTlsPmsiRowStatus_Type()
)
svcTlsPmsiRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsPmsiRowStatus.setStatus("current")
_SvcTlsPmsiLastChanged_Type = TimeStamp
_SvcTlsPmsiLastChanged_Object = MibTableColumn
svcTlsPmsiLastChanged = _SvcTlsPmsiLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 2),
    _SvcTlsPmsiLastChanged_Type()
)
svcTlsPmsiLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsPmsiLastChanged.setStatus("current")


class _SvcTlsIPmsiAdminState_Type(TmnxAdminState):
    """Custom type svcTlsIPmsiAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcTlsIPmsiAdminState_Type.__name__ = "TmnxAdminState"
_SvcTlsIPmsiAdminState_Object = MibTableColumn
svcTlsIPmsiAdminState = _SvcTlsIPmsiAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 3),
    _SvcTlsIPmsiAdminState_Type()
)
svcTlsIPmsiAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiAdminState.setStatus("current")


class _SvcTlsIPmsiDataDelayIntvl_Type(Integer32):
    """Custom type svcTlsIPmsiDataDelayIntvl based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 180),
    )


_SvcTlsIPmsiDataDelayIntvl_Type.__name__ = "Integer32"
_SvcTlsIPmsiDataDelayIntvl_Object = MibTableColumn
svcTlsIPmsiDataDelayIntvl = _SvcTlsIPmsiDataDelayIntvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 4),
    _SvcTlsIPmsiDataDelayIntvl_Type()
)
svcTlsIPmsiDataDelayIntvl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiDataDelayIntvl.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsIPmsiDataDelayIntvl.setUnits("seconds")


class _SvcTlsIPmsiType_Type(Integer32):
    """Custom type svcTlsIPmsiType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rsvp", 1),
          ("ldp", 2))
    )


_SvcTlsIPmsiType_Type.__name__ = "Integer32"
_SvcTlsIPmsiType_Object = MibTableColumn
svcTlsIPmsiType = _SvcTlsIPmsiType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 5),
    _SvcTlsIPmsiType_Type()
)
svcTlsIPmsiType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiType.setStatus("current")


class _SvcTlsIPmsiLspTmpl_Type(TNamedItemOrEmpty):
    """Custom type svcTlsIPmsiLspTmpl based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsIPmsiLspTmpl_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsIPmsiLspTmpl_Object = MibTableColumn
svcTlsIPmsiLspTmpl = _SvcTlsIPmsiLspTmpl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 6),
    _SvcTlsIPmsiLspTmpl_Type()
)
svcTlsIPmsiLspTmpl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiLspTmpl.setStatus("current")


class _SvcTlsIPmsiRootAndLeaf_Type(TruthValue):
    """Custom type svcTlsIPmsiRootAndLeaf based on TruthValue"""
    defaultValue = 2


_SvcTlsIPmsiRootAndLeaf_Type.__name__ = "TruthValue"
_SvcTlsIPmsiRootAndLeaf_Object = MibTableColumn
svcTlsIPmsiRootAndLeaf = _SvcTlsIPmsiRootAndLeaf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 7),
    _SvcTlsIPmsiRootAndLeaf_Type()
)
svcTlsIPmsiRootAndLeaf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiRootAndLeaf.setStatus("current")
_SvcTlsIPmsiRemainDataDelayIntvl_Type = Integer32
_SvcTlsIPmsiRemainDataDelayIntvl_Object = MibTableColumn
svcTlsIPmsiRemainDataDelayIntvl = _SvcTlsIPmsiRemainDataDelayIntvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 8),
    _SvcTlsIPmsiRemainDataDelayIntvl_Type()
)
svcTlsIPmsiRemainDataDelayIntvl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsIPmsiRemainDataDelayIntvl.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsIPmsiRemainDataDelayIntvl.setUnits("seconds")
_SvcTlsIPmsiLspName_Type = TLNamedItemOrEmpty
_SvcTlsIPmsiLspName_Object = MibTableColumn
svcTlsIPmsiLspName = _SvcTlsIPmsiLspName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 9),
    _SvcTlsIPmsiLspName_Type()
)
svcTlsIPmsiLspName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsIPmsiLspName.setStatus("current")


class _SvcTlsIPmsiOwner_Type(Integer32):
    """Custom type svcTlsIPmsiOwner based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("bgpAd", 1),
          ("bgpVpls", 2),
          ("bgpEvpnMpls", 3))
    )


_SvcTlsIPmsiOwner_Type.__name__ = "Integer32"
_SvcTlsIPmsiOwner_Object = MibTableColumn
svcTlsIPmsiOwner = _SvcTlsIPmsiOwner_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 10),
    _SvcTlsIPmsiOwner_Type()
)
svcTlsIPmsiOwner.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIPmsiOwner.setStatus("current")
_SvcTlsIPmsiOperState_Type = ServiceOperStatus
_SvcTlsIPmsiOperState_Object = MibTableColumn
svcTlsIPmsiOperState = _SvcTlsIPmsiOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 126, 1, 11),
    _SvcTlsIPmsiOperState_Type()
)
svcTlsIPmsiOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsIPmsiOperState.setStatus("current")
_SvcDhcpLeaseWppTable_Object = MibTable
svcDhcpLeaseWppTable = _SvcDhcpLeaseWppTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseWppTable.setStatus("current")
_SvcDhcpLeaseWppEntry_Object = MibTableRow
svcDhcpLeaseWppEntry = _SvcDhcpLeaseWppEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1)
)
svcDhcpLeaseWppEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseWppEntry.setStatus("current")


class _SvcDhcpLeaseWppState_Type(Integer32):
    """Custom type svcDhcpLeaseWppState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("initial", 1),
          ("registering", 2),
          ("registered", 3),
          ("authenticating", 4),
          ("authenticated", 5))
    )


_SvcDhcpLeaseWppState_Type.__name__ = "Integer32"
_SvcDhcpLeaseWppState_Object = MibTableColumn
svcDhcpLeaseWppState = _SvcDhcpLeaseWppState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 1),
    _SvcDhcpLeaseWppState_Type()
)
svcDhcpLeaseWppState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppState.setStatus("current")
_SvcDhcpLeaseWppPortalRouter_Type = TmnxVRtrIDOrZero
_SvcDhcpLeaseWppPortalRouter_Object = MibTableColumn
svcDhcpLeaseWppPortalRouter = _SvcDhcpLeaseWppPortalRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 2),
    _SvcDhcpLeaseWppPortalRouter_Type()
)
svcDhcpLeaseWppPortalRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppPortalRouter.setStatus("current")
_SvcDhcpLeaseWppPortalName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppPortalName_Object = MibTableColumn
svcDhcpLeaseWppPortalName = _SvcDhcpLeaseWppPortalName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 3),
    _SvcDhcpLeaseWppPortalName_Type()
)
svcDhcpLeaseWppPortalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppPortalName.setStatus("current")
_SvcDhcpLeaseWppRestoreOnDiscon_Type = TruthValue
_SvcDhcpLeaseWppRestoreOnDiscon_Object = MibTableColumn
svcDhcpLeaseWppRestoreOnDiscon = _SvcDhcpLeaseWppRestoreOnDiscon_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 4),
    _SvcDhcpLeaseWppRestoreOnDiscon_Type()
)
svcDhcpLeaseWppRestoreOnDiscon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppRestoreOnDiscon.setStatus("current")
_SvcDhcpLeaseWppIsTriggered_Type = TruthValue
_SvcDhcpLeaseWppIsTriggered_Object = MibTableColumn
svcDhcpLeaseWppIsTriggered = _SvcDhcpLeaseWppIsTriggered_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 5),
    _SvcDhcpLeaseWppIsTriggered_Type()
)
svcDhcpLeaseWppIsTriggered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppIsTriggered.setStatus("current")
_SvcDhcpLeaseWppInitialSubProfile_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppInitialSubProfile_Object = MibTableColumn
svcDhcpLeaseWppInitialSubProfile = _SvcDhcpLeaseWppInitialSubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 6),
    _SvcDhcpLeaseWppInitialSubProfile_Type()
)
svcDhcpLeaseWppInitialSubProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppInitialSubProfile.setStatus("current")
_SvcDhcpLeaseWppInitialSLAProfile_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppInitialSLAProfile_Object = MibTableColumn
svcDhcpLeaseWppInitialSLAProfile = _SvcDhcpLeaseWppInitialSLAProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 7),
    _SvcDhcpLeaseWppInitialSLAProfile_Type()
)
svcDhcpLeaseWppInitialSLAProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppInitialSLAProfile.setStatus("current")
_SvcDhcpLeaseWppInitialAppProfile_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppInitialAppProfile_Object = MibTableColumn
svcDhcpLeaseWppInitialAppProfile = _SvcDhcpLeaseWppInitialAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 8),
    _SvcDhcpLeaseWppInitialAppProfile_Type()
)
svcDhcpLeaseWppInitialAppProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppInitialAppProfile.setStatus("current")
_SvcDhcpLeaseWppLocalUserDb_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppLocalUserDb_Object = MibTableColumn
svcDhcpLeaseWppLocalUserDb = _SvcDhcpLeaseWppLocalUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 9),
    _SvcDhcpLeaseWppLocalUserDb_Type()
)
svcDhcpLeaseWppLocalUserDb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppLocalUserDb.setStatus("current")
_SvcDhcpLeaseWppAuthPolicy_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppAuthPolicy_Object = MibTableColumn
svcDhcpLeaseWppAuthPolicy = _SvcDhcpLeaseWppAuthPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 10),
    _SvcDhcpLeaseWppAuthPolicy_Type()
)
svcDhcpLeaseWppAuthPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppAuthPolicy.setStatus("current")
_SvcDhcpLeaseWppPortalGroupName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseWppPortalGroupName_Object = MibTableColumn
svcDhcpLeaseWppPortalGroupName = _SvcDhcpLeaseWppPortalGroupName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 127, 1, 11),
    _SvcDhcpLeaseWppPortalGroupName_Type()
)
svcDhcpLeaseWppPortalGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseWppPortalGroupName.setStatus("current")
_SvcIfSapCfgTableLastChanged_Type = TimeStamp
_SvcIfSapCfgTableLastChanged_Object = MibScalar
svcIfSapCfgTableLastChanged = _SvcIfSapCfgTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 128),
    _SvcIfSapCfgTableLastChanged_Type()
)
svcIfSapCfgTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSapCfgTableLastChanged.setStatus("current")
_SvcIfSapCfgTable_Object = MibTable
svcIfSapCfgTable = _SvcIfSapCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129)
)
if mibBuilder.loadTexts:
    svcIfSapCfgTable.setStatus("current")
_SvcIfSapCfgEntry_Object = MibTableRow
svcIfSapCfgEntry = _SvcIfSapCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1)
)
svcIfSapCfgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    svcIfSapCfgEntry.setStatus("current")
_SvcIfSapCfgLastMgmtChange_Type = TimeStamp
_SvcIfSapCfgLastMgmtChange_Object = MibTableColumn
svcIfSapCfgLastMgmtChange = _SvcIfSapCfgLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 1),
    _SvcIfSapCfgLastMgmtChange_Type()
)
svcIfSapCfgLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSapCfgLastMgmtChange.setStatus("current")


class _SvcIfSapCfgDescription_Type(TItemDescription):
    """Custom type svcIfSapCfgDescription based on TItemDescription"""
    defaultValue = OctetString("")


_SvcIfSapCfgDescription_Type.__name__ = "TItemDescription"
_SvcIfSapCfgDescription_Object = MibTableColumn
svcIfSapCfgDescription = _SvcIfSapCfgDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 2),
    _SvcIfSapCfgDescription_Type()
)
svcIfSapCfgDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDescription.setStatus("current")


class _SvcIfSapCfgDefSubProfile_Type(TNamedItemOrEmpty):
    """Custom type svcIfSapCfgDefSubProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgDefSubProfile_Type.__name__ = "TNamedItemOrEmpty"
_SvcIfSapCfgDefSubProfile_Object = MibTableColumn
svcIfSapCfgDefSubProfile = _SvcIfSapCfgDefSubProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 3),
    _SvcIfSapCfgDefSubProfile_Type()
)
svcIfSapCfgDefSubProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefSubProfile.setStatus("current")


class _SvcIfSapCfgDefSlaProfile_Type(TNamedItemOrEmpty):
    """Custom type svcIfSapCfgDefSlaProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgDefSlaProfile_Type.__name__ = "TNamedItemOrEmpty"
_SvcIfSapCfgDefSlaProfile_Object = MibTableColumn
svcIfSapCfgDefSlaProfile = _SvcIfSapCfgDefSlaProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 4),
    _SvcIfSapCfgDefSlaProfile_Type()
)
svcIfSapCfgDefSlaProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefSlaProfile.setStatus("current")


class _SvcIfSapCfgDefAppProfile_Type(TNamedItemOrEmpty):
    """Custom type svcIfSapCfgDefAppProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgDefAppProfile_Type.__name__ = "TNamedItemOrEmpty"
_SvcIfSapCfgDefAppProfile_Object = MibTableColumn
svcIfSapCfgDefAppProfile = _SvcIfSapCfgDefAppProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 5),
    _SvcIfSapCfgDefAppProfile_Type()
)
svcIfSapCfgDefAppProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefAppProfile.setStatus("current")


class _SvcIfSapCfgSubIdentPolicy_Type(TNamedItemOrEmpty):
    """Custom type svcIfSapCfgSubIdentPolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgSubIdentPolicy_Type.__name__ = "TNamedItemOrEmpty"
_SvcIfSapCfgSubIdentPolicy_Object = MibTableColumn
svcIfSapCfgSubIdentPolicy = _SvcIfSapCfgSubIdentPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 6),
    _SvcIfSapCfgSubIdentPolicy_Type()
)
svcIfSapCfgSubIdentPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgSubIdentPolicy.setStatus("current")


class _SvcIfSapCfgDefSubIdent_Type(TmnxDefSubIdSource):
    """Custom type svcIfSapCfgDefSubIdent based on TmnxDefSubIdSource"""
    defaultValue = 2


_SvcIfSapCfgDefSubIdent_Type.__name__ = "TmnxDefSubIdSource"
_SvcIfSapCfgDefSubIdent_Object = MibTableColumn
svcIfSapCfgDefSubIdent = _SvcIfSapCfgDefSubIdent_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 7),
    _SvcIfSapCfgDefSubIdent_Type()
)
svcIfSapCfgDefSubIdent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefSubIdent.setStatus("current")


class _SvcIfSapCfgDefSubIdentString_Type(TmnxSubIdentStringOrEmpty):
    """Custom type svcIfSapCfgDefSubIdentString based on TmnxSubIdentStringOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgDefSubIdentString_Type.__name__ = "TmnxSubIdentStringOrEmpty"
_SvcIfSapCfgDefSubIdentString_Object = MibTableColumn
svcIfSapCfgDefSubIdentString = _SvcIfSapCfgDefSubIdentString_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 8),
    _SvcIfSapCfgDefSubIdentString_Type()
)
svcIfSapCfgDefSubIdentString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefSubIdentString.setStatus("current")


class _SvcIfSapCfgDefFilterProfile_Type(TNamedItemOrEmpty):
    """Custom type svcIfSapCfgDefFilterProfile based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcIfSapCfgDefFilterProfile_Type.__name__ = "TNamedItemOrEmpty"
_SvcIfSapCfgDefFilterProfile_Object = MibTableColumn
svcIfSapCfgDefFilterProfile = _SvcIfSapCfgDefFilterProfile_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 9),
    _SvcIfSapCfgDefFilterProfile_Type()
)
svcIfSapCfgDefFilterProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgDefFilterProfile.setStatus("obsolete")


class _SvcIfSapCfgAntiSpoof_Type(Integer32):
    """Custom type svcIfSapCfgAntiSpoof based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ipMac", 3),
          ("nhMac", 4))
    )


_SvcIfSapCfgAntiSpoof_Type.__name__ = "Integer32"
_SvcIfSapCfgAntiSpoof_Object = MibTableColumn
svcIfSapCfgAntiSpoof = _SvcIfSapCfgAntiSpoof_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 129, 1, 10),
    _SvcIfSapCfgAntiSpoof_Type()
)
svcIfSapCfgAntiSpoof.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcIfSapCfgAntiSpoof.setStatus("current")
_SvcTlsSpbUserSvcTable_Object = MibTable
svcTlsSpbUserSvcTable = _SvcTlsSpbUserSvcTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 130)
)
if mibBuilder.loadTexts:
    svcTlsSpbUserSvcTable.setStatus("current")
_SvcTlsSpbUserSvcEntry_Object = MibTableRow
svcTlsSpbUserSvcEntry = _SvcTlsSpbUserSvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 130, 1)
)
svcTlsSpbUserSvcEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsSpbFid"),
    (0, "TIMETRA-SERV-MIB", "svcTlsSpbUserSvcId"),
)
if mibBuilder.loadTexts:
    svcTlsSpbUserSvcEntry.setStatus("current")
_SvcTlsSpbUserSvcId_Type = TmnxServId
_SvcTlsSpbUserSvcId_Object = MibTableColumn
svcTlsSpbUserSvcId = _SvcTlsSpbUserSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 130, 1, 1),
    _SvcTlsSpbUserSvcId_Type()
)
svcTlsSpbUserSvcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsSpbUserSvcId.setStatus("current")
_SvcTlsSpbUserSvcLastUpdate_Type = TimeStamp
_SvcTlsSpbUserSvcLastUpdate_Object = MibTableColumn
svcTlsSpbUserSvcLastUpdate = _SvcTlsSpbUserSvcLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 130, 1, 2),
    _SvcTlsSpbUserSvcLastUpdate_Type()
)
svcTlsSpbUserSvcLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsSpbUserSvcLastUpdate.setStatus("current")
_TlsSpbFdbTable_Object = MibTable
tlsSpbFdbTable = _TlsSpbFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131)
)
if mibBuilder.loadTexts:
    tlsSpbFdbTable.setStatus("current")
_TlsSpbFdbEntry_Object = MibTableRow
tlsSpbFdbEntry = _TlsSpbFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1)
)
tlsSpbFdbEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFdbMacAddr"),
)
if mibBuilder.loadTexts:
    tlsSpbFdbEntry.setStatus("current")
_TlsSpbFdbMacAddr_Type = MacAddress
_TlsSpbFdbMacAddr_Object = MibTableColumn
tlsSpbFdbMacAddr = _TlsSpbFdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 1),
    _TlsSpbFdbMacAddr_Type()
)
tlsSpbFdbMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFdbMacAddr.setStatus("current")
_TlsSpbFdbLocale_Type = TmnxSpbFdbLocale
_TlsSpbFdbLocale_Object = MibTableColumn
tlsSpbFdbLocale = _TlsSpbFdbLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 4),
    _TlsSpbFdbLocale_Type()
)
tlsSpbFdbLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbLocale.setStatus("current")
_TlsSpbFdbPortId_Type = TmnxPortID
_TlsSpbFdbPortId_Object = MibTableColumn
tlsSpbFdbPortId = _TlsSpbFdbPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 5),
    _TlsSpbFdbPortId_Type()
)
tlsSpbFdbPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbPortId.setStatus("current")
_TlsSpbFdbEncapValue_Type = TmnxEncapVal
_TlsSpbFdbEncapValue_Object = MibTableColumn
tlsSpbFdbEncapValue = _TlsSpbFdbEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 6),
    _TlsSpbFdbEncapValue_Type()
)
tlsSpbFdbEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbEncapValue.setStatus("current")
_TlsSpbFdbSdpId_Type = SdpId
_TlsSpbFdbSdpId_Object = MibTableColumn
tlsSpbFdbSdpId = _TlsSpbFdbSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 7),
    _TlsSpbFdbSdpId_Type()
)
tlsSpbFdbSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbSdpId.setStatus("current")
_TlsSpbFdbVcId_Type = Unsigned32
_TlsSpbFdbVcId_Object = MibTableColumn
tlsSpbFdbVcId = _TlsSpbFdbVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 8),
    _TlsSpbFdbVcId_Type()
)
tlsSpbFdbVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbVcId.setStatus("current")
_TlsSpbFdbState_Type = TmnxSpbFdbState
_TlsSpbFdbState_Object = MibTableColumn
tlsSpbFdbState = _TlsSpbFdbState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 9),
    _TlsSpbFdbState_Type()
)
tlsSpbFdbState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbState.setStatus("current")
_TlsSpbFdbMLocale_Type = TmnxSpbFdbLocale
_TlsSpbFdbMLocale_Object = MibTableColumn
tlsSpbFdbMLocale = _TlsSpbFdbMLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 10),
    _TlsSpbFdbMLocale_Type()
)
tlsSpbFdbMLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMLocale.setStatus("current")
_TlsSpbFdbMPortId_Type = TmnxPortID
_TlsSpbFdbMPortId_Object = MibTableColumn
tlsSpbFdbMPortId = _TlsSpbFdbMPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 11),
    _TlsSpbFdbMPortId_Type()
)
tlsSpbFdbMPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMPortId.setStatus("current")
_TlsSpbFdbMEncapValue_Type = TmnxEncapVal
_TlsSpbFdbMEncapValue_Object = MibTableColumn
tlsSpbFdbMEncapValue = _TlsSpbFdbMEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 12),
    _TlsSpbFdbMEncapValue_Type()
)
tlsSpbFdbMEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMEncapValue.setStatus("current")
_TlsSpbFdbMSdpId_Type = SdpId
_TlsSpbFdbMSdpId_Object = MibTableColumn
tlsSpbFdbMSdpId = _TlsSpbFdbMSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 13),
    _TlsSpbFdbMSdpId_Type()
)
tlsSpbFdbMSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMSdpId.setStatus("current")
_TlsSpbFdbMVcId_Type = Unsigned32
_TlsSpbFdbMVcId_Object = MibTableColumn
tlsSpbFdbMVcId = _TlsSpbFdbMVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 14),
    _TlsSpbFdbMVcId_Type()
)
tlsSpbFdbMVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMVcId.setStatus("current")
_TlsSpbFdbMState_Type = TmnxSpbFdbState
_TlsSpbFdbMState_Object = MibTableColumn
tlsSpbFdbMState = _TlsSpbFdbMState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 131, 1, 15),
    _TlsSpbFdbMState_Type()
)
tlsSpbFdbMState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFdbMState.setStatus("current")
_TlsSpbFidFdbTable_Object = MibTable
tlsSpbFidFdbTable = _TlsSpbFidFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132)
)
if mibBuilder.loadTexts:
    tlsSpbFidFdbTable.setStatus("current")
_TlsSpbFidFdbEntry_Object = MibTableRow
tlsSpbFidFdbEntry = _TlsSpbFidFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1)
)
tlsSpbFidFdbEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsSpbFid"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidFdbMacAddr"),
)
if mibBuilder.loadTexts:
    tlsSpbFidFdbEntry.setStatus("current")
_TlsSpbFidFdbMacAddr_Type = MacAddress
_TlsSpbFidFdbMacAddr_Object = MibTableColumn
tlsSpbFidFdbMacAddr = _TlsSpbFidFdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 1),
    _TlsSpbFidFdbMacAddr_Type()
)
tlsSpbFidFdbMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMacAddr.setStatus("current")
_TlsSpbFidFdbLocale_Type = TmnxSpbFdbLocale
_TlsSpbFidFdbLocale_Object = MibTableColumn
tlsSpbFidFdbLocale = _TlsSpbFidFdbLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 4),
    _TlsSpbFidFdbLocale_Type()
)
tlsSpbFidFdbLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbLocale.setStatus("current")
_TlsSpbFidFdbPortId_Type = TmnxPortID
_TlsSpbFidFdbPortId_Object = MibTableColumn
tlsSpbFidFdbPortId = _TlsSpbFidFdbPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 5),
    _TlsSpbFidFdbPortId_Type()
)
tlsSpbFidFdbPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbPortId.setStatus("current")
_TlsSpbFidFdbEncapValue_Type = TmnxEncapVal
_TlsSpbFidFdbEncapValue_Object = MibTableColumn
tlsSpbFidFdbEncapValue = _TlsSpbFidFdbEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 6),
    _TlsSpbFidFdbEncapValue_Type()
)
tlsSpbFidFdbEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbEncapValue.setStatus("current")
_TlsSpbFidFdbSdpId_Type = SdpId
_TlsSpbFidFdbSdpId_Object = MibTableColumn
tlsSpbFidFdbSdpId = _TlsSpbFidFdbSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 7),
    _TlsSpbFidFdbSdpId_Type()
)
tlsSpbFidFdbSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbSdpId.setStatus("current")
_TlsSpbFidFdbVcId_Type = Unsigned32
_TlsSpbFidFdbVcId_Object = MibTableColumn
tlsSpbFidFdbVcId = _TlsSpbFidFdbVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 8),
    _TlsSpbFidFdbVcId_Type()
)
tlsSpbFidFdbVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbVcId.setStatus("current")
_TlsSpbFidFdbMLocale_Type = TmnxSpbFdbLocale
_TlsSpbFidFdbMLocale_Object = MibTableColumn
tlsSpbFidFdbMLocale = _TlsSpbFidFdbMLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 9),
    _TlsSpbFidFdbMLocale_Type()
)
tlsSpbFidFdbMLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMLocale.setStatus("current")
_TlsSpbFidFdbMPortId_Type = TmnxPortID
_TlsSpbFidFdbMPortId_Object = MibTableColumn
tlsSpbFidFdbMPortId = _TlsSpbFidFdbMPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 10),
    _TlsSpbFidFdbMPortId_Type()
)
tlsSpbFidFdbMPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMPortId.setStatus("current")
_TlsSpbFidFdbMEncapValue_Type = TmnxEncapVal
_TlsSpbFidFdbMEncapValue_Object = MibTableColumn
tlsSpbFidFdbMEncapValue = _TlsSpbFidFdbMEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 11),
    _TlsSpbFidFdbMEncapValue_Type()
)
tlsSpbFidFdbMEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMEncapValue.setStatus("current")
_TlsSpbFidFdbMSdpId_Type = SdpId
_TlsSpbFidFdbMSdpId_Object = MibTableColumn
tlsSpbFidFdbMSdpId = _TlsSpbFidFdbMSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 12),
    _TlsSpbFidFdbMSdpId_Type()
)
tlsSpbFidFdbMSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMSdpId.setStatus("current")
_TlsSpbFidFdbMVcId_Type = Unsigned32
_TlsSpbFidFdbMVcId_Object = MibTableColumn
tlsSpbFidFdbMVcId = _TlsSpbFidFdbMVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 13),
    _TlsSpbFidFdbMVcId_Type()
)
tlsSpbFidFdbMVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMVcId.setStatus("current")
_TlsSpbFidFdbLastUpdate_Type = TimeStamp
_TlsSpbFidFdbLastUpdate_Object = MibTableColumn
tlsSpbFidFdbLastUpdate = _TlsSpbFidFdbLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 14),
    _TlsSpbFidFdbLastUpdate_Type()
)
tlsSpbFidFdbLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbLastUpdate.setStatus("current")
_TlsSpbFidFdbMLastUpdate_Type = TimeStamp
_TlsSpbFidFdbMLastUpdate_Object = MibTableColumn
tlsSpbFidFdbMLastUpdate = _TlsSpbFidFdbMLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 132, 1, 15),
    _TlsSpbFidFdbMLastUpdate_Type()
)
tlsSpbFidFdbMLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidFdbMLastUpdate.setStatus("current")
_TlsSpbMFibTable_Object = MibTable
tlsSpbMFibTable = _TlsSpbMFibTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 133)
)
if mibBuilder.loadTexts:
    tlsSpbMFibTable.setStatus("current")
_TlsSpbMFibEntry_Object = MibTableRow
tlsSpbMFibEntry = _TlsSpbMFibEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 133, 1)
)
tlsSpbMFibEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbMFibMacAddr"),
)
if mibBuilder.loadTexts:
    tlsSpbMFibEntry.setStatus("current")
_TlsSpbMFibMacAddr_Type = MacAddress
_TlsSpbMFibMacAddr_Object = MibTableColumn
tlsSpbMFibMacAddr = _TlsSpbMFibMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 133, 1, 1),
    _TlsSpbMFibMacAddr_Type()
)
tlsSpbMFibMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbMFibMacAddr.setStatus("current")
_TlsSpbMFibIsid_Type = Unsigned32
_TlsSpbMFibIsid_Object = MibTableColumn
tlsSpbMFibIsid = _TlsSpbMFibIsid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 133, 1, 2),
    _TlsSpbMFibIsid_Type()
)
tlsSpbMFibIsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbMFibIsid.setStatus("current")


class _TlsSpbMFibState_Type(Bits):
    """Custom type tlsSpbMFibState based on Bits"""
    namedValues = NamedValues(
        *(("ok", 0),
          ("addModPending", 1),
          ("delPending", 2),
          ("sysMFibLimit", 3),
          ("noFateShared", 4),
          ("spbMFibLimit", 5),
          ("useDefMCTree", 6))
    )

_TlsSpbMFibState_Type.__name__ = "Bits"
_TlsSpbMFibState_Object = MibTableColumn
tlsSpbMFibState = _TlsSpbMFibState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 133, 1, 3),
    _TlsSpbMFibState_Type()
)
tlsSpbMFibState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbMFibState.setStatus("current")
_TlsSpbFidMFibTable_Object = MibTable
tlsSpbFidMFibTable = _TlsSpbFidMFibTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134)
)
if mibBuilder.loadTexts:
    tlsSpbFidMFibTable.setStatus("current")
_TlsSpbFidMFibEntry_Object = MibTableRow
tlsSpbFidMFibEntry = _TlsSpbFidMFibEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1)
)
tlsSpbFidMFibEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsSpbFid"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibLocale"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibPortId"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibEncapValue"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibSdpId"),
    (0, "TIMETRA-SERV-MIB", "tlsSpbFidMFibVcId"),
)
if mibBuilder.loadTexts:
    tlsSpbFidMFibEntry.setStatus("current")
_TlsSpbFidMFibMacAddr_Type = MacAddress
_TlsSpbFidMFibMacAddr_Object = MibTableColumn
tlsSpbFidMFibMacAddr = _TlsSpbFidMFibMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 1),
    _TlsSpbFidMFibMacAddr_Type()
)
tlsSpbFidMFibMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibMacAddr.setStatus("current")
_TlsSpbFidMFibLocale_Type = TmnxSpbFdbLocale
_TlsSpbFidMFibLocale_Object = MibTableColumn
tlsSpbFidMFibLocale = _TlsSpbFidMFibLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 2),
    _TlsSpbFidMFibLocale_Type()
)
tlsSpbFidMFibLocale.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibLocale.setStatus("current")
_TlsSpbFidMFibPortId_Type = TmnxPortID
_TlsSpbFidMFibPortId_Object = MibTableColumn
tlsSpbFidMFibPortId = _TlsSpbFidMFibPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 3),
    _TlsSpbFidMFibPortId_Type()
)
tlsSpbFidMFibPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibPortId.setStatus("current")
_TlsSpbFidMFibEncapValue_Type = TmnxEncapVal
_TlsSpbFidMFibEncapValue_Object = MibTableColumn
tlsSpbFidMFibEncapValue = _TlsSpbFidMFibEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 4),
    _TlsSpbFidMFibEncapValue_Type()
)
tlsSpbFidMFibEncapValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibEncapValue.setStatus("current")
_TlsSpbFidMFibSdpId_Type = SdpId
_TlsSpbFidMFibSdpId_Object = MibTableColumn
tlsSpbFidMFibSdpId = _TlsSpbFidMFibSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 5),
    _TlsSpbFidMFibSdpId_Type()
)
tlsSpbFidMFibSdpId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibSdpId.setStatus("current")
_TlsSpbFidMFibVcId_Type = Unsigned32
_TlsSpbFidMFibVcId_Object = MibTableColumn
tlsSpbFidMFibVcId = _TlsSpbFidMFibVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 6),
    _TlsSpbFidMFibVcId_Type()
)
tlsSpbFidMFibVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsSpbFidMFibVcId.setStatus("current")
_TlsSpbFidMFibIsid_Type = Unsigned32
_TlsSpbFidMFibIsid_Object = MibTableColumn
tlsSpbFidMFibIsid = _TlsSpbFidMFibIsid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 7),
    _TlsSpbFidMFibIsid_Type()
)
tlsSpbFidMFibIsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidMFibIsid.setStatus("current")
_TlsSpbFidMFibLastUpdate_Type = TimeStamp
_TlsSpbFidMFibLastUpdate_Object = MibTableColumn
tlsSpbFidMFibLastUpdate = _TlsSpbFidMFibLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 134, 1, 8),
    _TlsSpbFidMFibLastUpdate_Type()
)
tlsSpbFidMFibLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsSpbFidMFibLastUpdate.setStatus("current")
_SvcSpbIfTable_Object = MibTable
svcSpbIfTable = _SvcSpbIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135)
)
if mibBuilder.loadTexts:
    svcSpbIfTable.setStatus("current")
_SvcSpbIfEntry_Object = MibTableRow
svcSpbIfEntry = _SvcSpbIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1)
)
svcSpbIfEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcSpbIfIndex"),
)
if mibBuilder.loadTexts:
    svcSpbIfEntry.setStatus("current")
_SvcSpbIfIndex_Type = InterfaceIndex
_SvcSpbIfIndex_Object = MibTableColumn
svcSpbIfIndex = _SvcSpbIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 1),
    _SvcSpbIfIndex_Type()
)
svcSpbIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSpbIfIndex.setStatus("current")
_SvcSpbIfLocale_Type = TmnxSpbFdbLocale
_SvcSpbIfLocale_Object = MibTableColumn
svcSpbIfLocale = _SvcSpbIfLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 4),
    _SvcSpbIfLocale_Type()
)
svcSpbIfLocale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfLocale.setStatus("current")
_SvcSpbIfPortId_Type = TmnxPortID
_SvcSpbIfPortId_Object = MibTableColumn
svcSpbIfPortId = _SvcSpbIfPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 5),
    _SvcSpbIfPortId_Type()
)
svcSpbIfPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfPortId.setStatus("current")
_SvcSpbIfEncapValue_Type = TmnxEncapVal
_SvcSpbIfEncapValue_Object = MibTableColumn
svcSpbIfEncapValue = _SvcSpbIfEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 6),
    _SvcSpbIfEncapValue_Type()
)
svcSpbIfEncapValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfEncapValue.setStatus("current")
_SvcSpbIfSdpId_Type = SdpId
_SvcSpbIfSdpId_Object = MibTableColumn
svcSpbIfSdpId = _SvcSpbIfSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 7),
    _SvcSpbIfSdpId_Type()
)
svcSpbIfSdpId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfSdpId.setStatus("current")
_SvcSpbIfVcId_Type = Unsigned32
_SvcSpbIfVcId_Object = MibTableColumn
svcSpbIfVcId = _SvcSpbIfVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 8),
    _SvcSpbIfVcId_Type()
)
svcSpbIfVcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfVcId.setStatus("current")
_SvcSpbIfSvcId_Type = TmnxServId
_SvcSpbIfSvcId_Object = MibTableColumn
svcSpbIfSvcId = _SvcSpbIfSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 9),
    _SvcSpbIfSvcId_Type()
)
svcSpbIfSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfSvcId.setStatus("current")
_SvcSpbIfIsisInstance_Type = Integer32
_SvcSpbIfIsisInstance_Object = MibTableColumn
svcSpbIfIsisInstance = _SvcSpbIfIsisInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 135, 1, 10),
    _SvcSpbIfIsisInstance_Type()
)
svcSpbIfIsisInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSpbIfIsisInstance.setStatus("current")
_SvcArpHostOvrTable_Object = MibTable
svcArpHostOvrTable = _SvcArpHostOvrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136)
)
if mibBuilder.loadTexts:
    svcArpHostOvrTable.setStatus("current")
_SvcArpHostOvrEntry_Object = MibTableRow
svcArpHostOvrEntry = _SvcArpHostOvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1)
)
svcArpHostOvrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddr"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostOvrDirection"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostOvrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostOvrTypeId"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostOvrTypeName"),
)
if mibBuilder.loadTexts:
    svcArpHostOvrEntry.setStatus("current")
_SvcArpHostOvrDirection_Type = TDirectionIngEgr
_SvcArpHostOvrDirection_Object = MibTableColumn
svcArpHostOvrDirection = _SvcArpHostOvrDirection_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 1),
    _SvcArpHostOvrDirection_Type()
)
svcArpHostOvrDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostOvrDirection.setStatus("current")
_SvcArpHostOvrType_Type = TQosOverrideType
_SvcArpHostOvrType_Object = MibTableColumn
svcArpHostOvrType = _SvcArpHostOvrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 2),
    _SvcArpHostOvrType_Type()
)
svcArpHostOvrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostOvrType.setStatus("current")
_SvcArpHostOvrTypeId_Type = Integer32
_SvcArpHostOvrTypeId_Object = MibTableColumn
svcArpHostOvrTypeId = _SvcArpHostOvrTypeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 3),
    _SvcArpHostOvrTypeId_Type()
)
svcArpHostOvrTypeId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostOvrTypeId.setStatus("current")
_SvcArpHostOvrTypeName_Type = TNamedItemOrEmpty
_SvcArpHostOvrTypeName_Object = MibTableColumn
svcArpHostOvrTypeName = _SvcArpHostOvrTypeName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 4),
    _SvcArpHostOvrTypeName_Type()
)
svcArpHostOvrTypeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcArpHostOvrTypeName.setStatus("current")
_SvcArpHostOvrPIR_Type = TQosQueuePIRRateOverride
_SvcArpHostOvrPIR_Object = MibTableColumn
svcArpHostOvrPIR = _SvcArpHostOvrPIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 5),
    _SvcArpHostOvrPIR_Type()
)
svcArpHostOvrPIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrPIR.setStatus("current")
_SvcArpHostOvrCIR_Type = TQosQueueCIRRateOverride
_SvcArpHostOvrCIR_Object = MibTableColumn
svcArpHostOvrCIR = _SvcArpHostOvrCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 6),
    _SvcArpHostOvrCIR_Type()
)
svcArpHostOvrCIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrCIR.setStatus("current")
_SvcArpHostOvrCBS_Type = TBurstSizeBytesOvr
_SvcArpHostOvrCBS_Object = MibTableColumn
svcArpHostOvrCBS = _SvcArpHostOvrCBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 7),
    _SvcArpHostOvrCBS_Type()
)
svcArpHostOvrCBS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrCBS.setStatus("current")
_SvcArpHostOvrMBS_Type = TBurstSizeBytesOvr
_SvcArpHostOvrMBS_Object = MibTableColumn
svcArpHostOvrMBS = _SvcArpHostOvrMBS_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 8),
    _SvcArpHostOvrMBS_Type()
)
svcArpHostOvrMBS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrMBS.setStatus("current")
_SvcArpHostOvrWrrWeight_Type = THsmdaWrrWeightOverride
_SvcArpHostOvrWrrWeight_Object = MibTableColumn
svcArpHostOvrWrrWeight = _SvcArpHostOvrWrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 9),
    _SvcArpHostOvrWrrWeight_Type()
)
svcArpHostOvrWrrWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrWrrWeight.setStatus("current")
_SvcArpHostOvrSummedCIR_Type = TruthValue
_SvcArpHostOvrSummedCIR_Object = MibTableColumn
svcArpHostOvrSummedCIR = _SvcArpHostOvrSummedCIR_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 10),
    _SvcArpHostOvrSummedCIR_Type()
)
svcArpHostOvrSummedCIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrSummedCIR.setStatus("current")
_SvcArpHostOvrClassWeight_Type = THsClassWeightOverride
_SvcArpHostOvrClassWeight_Object = MibTableColumn
svcArpHostOvrClassWeight = _SvcArpHostOvrClassWeight_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 136, 1, 11),
    _SvcArpHostOvrClassWeight_Type()
)
svcArpHostOvrClassWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostOvrClassWeight.setStatus("current")
_IesIfIsaTnlNHTableLastChanged_Type = TimeStamp
_IesIfIsaTnlNHTableLastChanged_Object = MibScalar
iesIfIsaTnlNHTableLastChanged = _IesIfIsaTnlNHTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 137),
    _IesIfIsaTnlNHTableLastChanged_Type()
)
iesIfIsaTnlNHTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHTableLastChanged.setStatus("current")
_IesIfIsaTnlNHTable_Object = MibTable
iesIfIsaTnlNHTable = _IesIfIsaTnlNHTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138)
)
if mibBuilder.loadTexts:
    iesIfIsaTnlNHTable.setStatus("current")
_IesIfIsaTnlNHEntry_Object = MibTableRow
iesIfIsaTnlNHEntry = _IesIfIsaTnlNHEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1)
)
iesIfIsaTnlNHEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    iesIfIsaTnlNHEntry.setStatus("current")
_IesIfIsaTnlNHLastChanged_Type = TimeStamp
_IesIfIsaTnlNHLastChanged_Object = MibTableColumn
iesIfIsaTnlNHLastChanged = _IesIfIsaTnlNHLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1, 1),
    _IesIfIsaTnlNHLastChanged_Type()
)
iesIfIsaTnlNHLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHLastChanged.setStatus("current")


class _IesIfIsaTnlNHStaticAddrType_Type(InetAddressType):
    """Custom type iesIfIsaTnlNHStaticAddrType based on InetAddressType"""
    defaultValue = 1


_IesIfIsaTnlNHStaticAddrType_Type.__name__ = "InetAddressType"
_IesIfIsaTnlNHStaticAddrType_Object = MibTableColumn
iesIfIsaTnlNHStaticAddrType = _IesIfIsaTnlNHStaticAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1, 2),
    _IesIfIsaTnlNHStaticAddrType_Type()
)
iesIfIsaTnlNHStaticAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHStaticAddrType.setStatus("current")


class _IesIfIsaTnlNHStaticAddr_Type(InetAddress):
    """Custom type iesIfIsaTnlNHStaticAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_IesIfIsaTnlNHStaticAddr_Type.__name__ = "InetAddress"
_IesIfIsaTnlNHStaticAddr_Object = MibTableColumn
iesIfIsaTnlNHStaticAddr = _IesIfIsaTnlNHStaticAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1, 3),
    _IesIfIsaTnlNHStaticAddr_Type()
)
iesIfIsaTnlNHStaticAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHStaticAddr.setStatus("current")


class _IesIfIsaTnlNHDynAddrType_Type(InetAddressType):
    """Custom type iesIfIsaTnlNHDynAddrType based on InetAddressType"""
    defaultValue = 1


_IesIfIsaTnlNHDynAddrType_Type.__name__ = "InetAddressType"
_IesIfIsaTnlNHDynAddrType_Object = MibTableColumn
iesIfIsaTnlNHDynAddrType = _IesIfIsaTnlNHDynAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1, 4),
    _IesIfIsaTnlNHDynAddrType_Type()
)
iesIfIsaTnlNHDynAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHDynAddrType.setStatus("current")


class _IesIfIsaTnlNHDynAddr_Type(InetAddress):
    """Custom type iesIfIsaTnlNHDynAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_IesIfIsaTnlNHDynAddr_Type.__name__ = "InetAddress"
_IesIfIsaTnlNHDynAddr_Object = MibTableColumn
iesIfIsaTnlNHDynAddr = _IesIfIsaTnlNHDynAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 138, 1, 5),
    _IesIfIsaTnlNHDynAddr_Type()
)
iesIfIsaTnlNHDynAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfIsaTnlNHDynAddr.setStatus("current")
_SvcBgpVpwsTblLastChanged_Type = TimeStamp
_SvcBgpVpwsTblLastChanged_Object = MibScalar
svcBgpVpwsTblLastChanged = _SvcBgpVpwsTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 139),
    _SvcBgpVpwsTblLastChanged_Type()
)
svcBgpVpwsTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVpwsTblLastChanged.setStatus("current")
_SvcBgpVpwsTable_Object = MibTable
svcBgpVpwsTable = _SvcBgpVpwsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140)
)
if mibBuilder.loadTexts:
    svcBgpVpwsTable.setStatus("current")
_SvcBgpVpwsEntry_Object = MibTableRow
svcBgpVpwsEntry = _SvcBgpVpwsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1)
)
svcBgpVpwsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBgpVpwsEntry.setStatus("current")
_SvcBgpVpwsRowStatus_Type = RowStatus
_SvcBgpVpwsRowStatus_Object = MibTableColumn
svcBgpVpwsRowStatus = _SvcBgpVpwsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 1),
    _SvcBgpVpwsRowStatus_Type()
)
svcBgpVpwsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsRowStatus.setStatus("current")
_SvcBgpVpwsLastChanged_Type = TimeStamp
_SvcBgpVpwsLastChanged_Object = MibTableColumn
svcBgpVpwsLastChanged = _SvcBgpVpwsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 2),
    _SvcBgpVpwsLastChanged_Type()
)
svcBgpVpwsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVpwsLastChanged.setStatus("current")


class _SvcBgpVpwsAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcBgpVpwsAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcBgpVpwsAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcBgpVpwsAdminStatus_Object = MibTableColumn
svcBgpVpwsAdminStatus = _SvcBgpVpwsAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 3),
    _SvcBgpVpwsAdminStatus_Type()
)
svcBgpVpwsAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsAdminStatus.setStatus("current")


class _SvcBgpVpwsVeName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpVpwsVeName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpVpwsVeName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpVpwsVeName_Object = MibTableColumn
svcBgpVpwsVeName = _SvcBgpVpwsVeName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 4),
    _SvcBgpVpwsVeName_Type()
)
svcBgpVpwsVeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsVeName.setStatus("current")


class _SvcBgpVpwsVeId_Type(TmnxSiteIdOrEmpty):
    """Custom type svcBgpVpwsVeId based on TmnxSiteIdOrEmpty"""
    defaultValue = -1


_SvcBgpVpwsVeId_Type.__name__ = "TmnxSiteIdOrEmpty"
_SvcBgpVpwsVeId_Object = MibTableColumn
svcBgpVpwsVeId = _SvcBgpVpwsVeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 5),
    _SvcBgpVpwsVeId_Type()
)
svcBgpVpwsVeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsVeId.setStatus("current")
_SvcBgpVpwsPwTemplateId_Type = PWTemplateId
_SvcBgpVpwsPwTemplateId_Object = MibTableColumn
svcBgpVpwsPwTemplateId = _SvcBgpVpwsPwTemplateId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 140, 1, 6),
    _SvcBgpVpwsPwTemplateId_Type()
)
svcBgpVpwsPwTemplateId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVpwsPwTemplateId.setStatus("current")
_SvcBgpVpwsRemoteVeTblLastChanged_Type = TimeStamp
_SvcBgpVpwsRemoteVeTblLastChanged_Object = MibScalar
svcBgpVpwsRemoteVeTblLastChanged = _SvcBgpVpwsRemoteVeTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 141),
    _SvcBgpVpwsRemoteVeTblLastChanged_Type()
)
svcBgpVpwsRemoteVeTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeTblLastChanged.setStatus("current")
_SvcBgpVpwsRemoteVeTable_Object = MibTable
svcBgpVpwsRemoteVeTable = _SvcBgpVpwsRemoteVeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142)
)
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeTable.setStatus("current")
_SvcBgpVpwsRemoteVeEntry_Object = MibTableRow
svcBgpVpwsRemoteVeEntry = _SvcBgpVpwsRemoteVeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142, 1)
)
svcBgpVpwsRemoteVeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpVpwsRemoteVeName"),
)
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeEntry.setStatus("current")
_SvcBgpVpwsRemoteVeName_Type = TNamedItem
_SvcBgpVpwsRemoteVeName_Object = MibTableColumn
svcBgpVpwsRemoteVeName = _SvcBgpVpwsRemoteVeName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142, 1, 1),
    _SvcBgpVpwsRemoteVeName_Type()
)
svcBgpVpwsRemoteVeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeName.setStatus("current")
_SvcBgpVpwsRemoteVeRowStatus_Type = RowStatus
_SvcBgpVpwsRemoteVeRowStatus_Object = MibTableColumn
svcBgpVpwsRemoteVeRowStatus = _SvcBgpVpwsRemoteVeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142, 1, 2),
    _SvcBgpVpwsRemoteVeRowStatus_Type()
)
svcBgpVpwsRemoteVeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeRowStatus.setStatus("current")
_SvcBgpVpwsRemoteVeLastChanged_Type = TimeStamp
_SvcBgpVpwsRemoteVeLastChanged_Object = MibTableColumn
svcBgpVpwsRemoteVeLastChanged = _SvcBgpVpwsRemoteVeLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142, 1, 3),
    _SvcBgpVpwsRemoteVeLastChanged_Type()
)
svcBgpVpwsRemoteVeLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeLastChanged.setStatus("current")


class _SvcBgpVpwsRemoteVeId_Type(TmnxSiteIdOrEmpty):
    """Custom type svcBgpVpwsRemoteVeId based on TmnxSiteIdOrEmpty"""
    defaultValue = -1


_SvcBgpVpwsRemoteVeId_Type.__name__ = "TmnxSiteIdOrEmpty"
_SvcBgpVpwsRemoteVeId_Object = MibTableColumn
svcBgpVpwsRemoteVeId = _SvcBgpVpwsRemoteVeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 142, 1, 4),
    _SvcBgpVpwsRemoteVeId_Type()
)
svcBgpVpwsRemoteVeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpVpwsRemoteVeId.setStatus("current")
_SvcTlsIsidPlcyRangeTable_Object = MibTable
svcTlsIsidPlcyRangeTable = _SvcTlsIsidPlcyRangeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148)
)
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeTable.setStatus("current")
_SvcTlsIsidPlcyRangeEntry_Object = MibTableRow
svcTlsIsidPlcyRangeEntry = _SvcTlsIsidPlcyRangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1)
)
svcTlsIsidPlcyRangeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeId"),
)
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeEntry.setStatus("current")


class _SvcTlsIsidPlcyRangeId_Type(Unsigned32):
    """Custom type svcTlsIsidPlcyRangeId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SvcTlsIsidPlcyRangeId_Type.__name__ = "Unsigned32"
_SvcTlsIsidPlcyRangeId_Object = MibTableColumn
svcTlsIsidPlcyRangeId = _SvcTlsIsidPlcyRangeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 1),
    _SvcTlsIsidPlcyRangeId_Type()
)
svcTlsIsidPlcyRangeId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeId.setStatus("current")
_SvcTlsIsidPlcyRangeRowStatus_Type = RowStatus
_SvcTlsIsidPlcyRangeRowStatus_Object = MibTableColumn
svcTlsIsidPlcyRangeRowStatus = _SvcTlsIsidPlcyRangeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 2),
    _SvcTlsIsidPlcyRangeRowStatus_Type()
)
svcTlsIsidPlcyRangeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeRowStatus.setStatus("current")
_SvcTlsIsidPlcyRangeLastChanged_Type = TimeStamp
_SvcTlsIsidPlcyRangeLastChanged_Object = MibTableColumn
svcTlsIsidPlcyRangeLastChanged = _SvcTlsIsidPlcyRangeLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 3),
    _SvcTlsIsidPlcyRangeLastChanged_Type()
)
svcTlsIsidPlcyRangeLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeLastChanged.setStatus("current")


class _SvcTlsIsidPlcyRangeLow_Type(TmnxISID):
    """Custom type svcTlsIsidPlcyRangeLow based on TmnxISID"""
    defaultValue = 0


_SvcTlsIsidPlcyRangeLow_Type.__name__ = "TmnxISID"
_SvcTlsIsidPlcyRangeLow_Object = MibTableColumn
svcTlsIsidPlcyRangeLow = _SvcTlsIsidPlcyRangeLow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 4),
    _SvcTlsIsidPlcyRangeLow_Type()
)
svcTlsIsidPlcyRangeLow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeLow.setStatus("current")


class _SvcTlsIsidPlcyRangeHigh_Type(TmnxISID):
    """Custom type svcTlsIsidPlcyRangeHigh based on TmnxISID"""
    defaultValue = 0


_SvcTlsIsidPlcyRangeHigh_Type.__name__ = "TmnxISID"
_SvcTlsIsidPlcyRangeHigh_Object = MibTableColumn
svcTlsIsidPlcyRangeHigh = _SvcTlsIsidPlcyRangeHigh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 5),
    _SvcTlsIsidPlcyRangeHigh_Type()
)
svcTlsIsidPlcyRangeHigh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeHigh.setStatus("current")


class _SvcTlsIsidPlcyRangeUseDefMCTree_Type(TruthValue):
    """Custom type svcTlsIsidPlcyRangeUseDefMCTree based on TruthValue"""
    defaultValue = 2


_SvcTlsIsidPlcyRangeUseDefMCTree_Type.__name__ = "TruthValue"
_SvcTlsIsidPlcyRangeUseDefMCTree_Object = MibTableColumn
svcTlsIsidPlcyRangeUseDefMCTree = _SvcTlsIsidPlcyRangeUseDefMCTree_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 6),
    _SvcTlsIsidPlcyRangeUseDefMCTree_Type()
)
svcTlsIsidPlcyRangeUseDefMCTree.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeUseDefMCTree.setStatus("current")


class _SvcTlsIsidPlcyRangeAdvLocal_Type(TruthValue):
    """Custom type svcTlsIsidPlcyRangeAdvLocal based on TruthValue"""
    defaultValue = 1


_SvcTlsIsidPlcyRangeAdvLocal_Type.__name__ = "TruthValue"
_SvcTlsIsidPlcyRangeAdvLocal_Object = MibTableColumn
svcTlsIsidPlcyRangeAdvLocal = _SvcTlsIsidPlcyRangeAdvLocal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 148, 1, 7),
    _SvcTlsIsidPlcyRangeAdvLocal_Type()
)
svcTlsIsidPlcyRangeAdvLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsIsidPlcyRangeAdvLocal.setStatus("current")
_TlsCondStaticMacTable_Object = MibTable
tlsCondStaticMacTable = _TlsCondStaticMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149)
)
if mibBuilder.loadTexts:
    tlsCondStaticMacTable.setStatus("current")
_TlsCondStaticMacEntry_Object = MibTableRow
tlsCondStaticMacEntry = _TlsCondStaticMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1)
)
tlsCondStaticMacEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsCondStaticMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsCondStaticMacPreference"),
)
if mibBuilder.loadTexts:
    tlsCondStaticMacEntry.setStatus("current")
_TlsCondStaticMacAddr_Type = MacAddress
_TlsCondStaticMacAddr_Object = MibTableColumn
tlsCondStaticMacAddr = _TlsCondStaticMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 1),
    _TlsCondStaticMacAddr_Type()
)
tlsCondStaticMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsCondStaticMacAddr.setStatus("current")


class _TlsCondStaticMacPreference_Type(Unsigned32):
    """Custom type tlsCondStaticMacPreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_TlsCondStaticMacPreference_Type.__name__ = "Unsigned32"
_TlsCondStaticMacPreference_Object = MibTableColumn
tlsCondStaticMacPreference = _TlsCondStaticMacPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 2),
    _TlsCondStaticMacPreference_Type()
)
tlsCondStaticMacPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsCondStaticMacPreference.setStatus("current")
_TlsCondStaticMacRowStatus_Type = RowStatus
_TlsCondStaticMacRowStatus_Object = MibTableColumn
tlsCondStaticMacRowStatus = _TlsCondStaticMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 3),
    _TlsCondStaticMacRowStatus_Type()
)
tlsCondStaticMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacRowStatus.setStatus("current")
_TlsCondStaticMacLastChanged_Type = TimeStamp
_TlsCondStaticMacLastChanged_Object = MibTableColumn
tlsCondStaticMacLastChanged = _TlsCondStaticMacLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 4),
    _TlsCondStaticMacLastChanged_Type()
)
tlsCondStaticMacLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsCondStaticMacLastChanged.setStatus("current")


class _TlsCondStaticMacLocale_Type(Integer32):
    """Custom type tlsCondStaticMacLocale based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("sap", 1),
          ("sdp", 2),
          ("blackhole", 3))
    )


_TlsCondStaticMacLocale_Type.__name__ = "Integer32"
_TlsCondStaticMacLocale_Object = MibTableColumn
tlsCondStaticMacLocale = _TlsCondStaticMacLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 5),
    _TlsCondStaticMacLocale_Type()
)
tlsCondStaticMacLocale.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacLocale.setStatus("current")


class _TlsCondStaticMacPortId_Type(TmnxPortID):
    """Custom type tlsCondStaticMacPortId based on TmnxPortID"""
    defaultValue = 0


_TlsCondStaticMacPortId_Type.__name__ = "TmnxPortID"
_TlsCondStaticMacPortId_Object = MibTableColumn
tlsCondStaticMacPortId = _TlsCondStaticMacPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 6),
    _TlsCondStaticMacPortId_Type()
)
tlsCondStaticMacPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacPortId.setStatus("current")


class _TlsCondStaticMacEncapValue_Type(TmnxEncapVal):
    """Custom type tlsCondStaticMacEncapValue based on TmnxEncapVal"""
    defaultValue = 0


_TlsCondStaticMacEncapValue_Type.__name__ = "TmnxEncapVal"
_TlsCondStaticMacEncapValue_Object = MibTableColumn
tlsCondStaticMacEncapValue = _TlsCondStaticMacEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 7),
    _TlsCondStaticMacEncapValue_Type()
)
tlsCondStaticMacEncapValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacEncapValue.setStatus("current")


class _TlsCondStaticMacSdpId_Type(SdpId):
    """Custom type tlsCondStaticMacSdpId based on SdpId"""
    defaultValue = 0


_TlsCondStaticMacSdpId_Type.__name__ = "SdpId"
_TlsCondStaticMacSdpId_Object = MibTableColumn
tlsCondStaticMacSdpId = _TlsCondStaticMacSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 8),
    _TlsCondStaticMacSdpId_Type()
)
tlsCondStaticMacSdpId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacSdpId.setStatus("current")


class _TlsCondStaticMacVcId_Type(Unsigned32):
    """Custom type tlsCondStaticMacVcId based on Unsigned32"""
    defaultValue = 0


_TlsCondStaticMacVcId_Type.__name__ = "Unsigned32"
_TlsCondStaticMacVcId_Object = MibTableColumn
tlsCondStaticMacVcId = _TlsCondStaticMacVcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 9),
    _TlsCondStaticMacVcId_Type()
)
tlsCondStaticMacVcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacVcId.setStatus("current")


class _TlsCondStaticMacMonitor_Type(Integer32):
    """Custom type tlsCondStaticMacMonitor based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("fwdStatus", 1))
    )


_TlsCondStaticMacMonitor_Type.__name__ = "Integer32"
_TlsCondStaticMacMonitor_Object = MibTableColumn
tlsCondStaticMacMonitor = _TlsCondStaticMacMonitor_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 149, 1, 10),
    _TlsCondStaticMacMonitor_Type()
)
tlsCondStaticMacMonitor.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tlsCondStaticMacMonitor.setStatus("current")
_SvcTlsFdbMacStatsTable_Object = MibTable
svcTlsFdbMacStatsTable = _SvcTlsFdbMacStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 150)
)
if mibBuilder.loadTexts:
    svcTlsFdbMacStatsTable.setStatus("current")
_SvcTlsFdbMacStatsEntry_Object = MibTableRow
svcTlsFdbMacStatsEntry = _SvcTlsFdbMacStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 150, 1)
)
svcTlsFdbMacStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsFdbType"),
)
if mibBuilder.loadTexts:
    svcTlsFdbMacStatsEntry.setStatus("current")
_SvcTlsFdbMacStatsNumEntries_Type = Unsigned32
_SvcTlsFdbMacStatsNumEntries_Object = MibTableColumn
svcTlsFdbMacStatsNumEntries = _SvcTlsFdbMacStatsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 150, 1, 1),
    _SvcTlsFdbMacStatsNumEntries_Type()
)
svcTlsFdbMacStatsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsFdbMacStatsNumEntries.setStatus("current")
_SvcOperGrpBfdTable_Object = MibTable
svcOperGrpBfdTable = _SvcOperGrpBfdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151)
)
if mibBuilder.loadTexts:
    svcOperGrpBfdTable.setStatus("current")
_SvcOperGrpBfdEntry_Object = MibTableRow
svcOperGrpBfdEntry = _SvcOperGrpBfdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1)
)
svcOperGrpBfdEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcOperGrpName"),
)
if mibBuilder.loadTexts:
    svcOperGrpBfdEntry.setStatus("current")
_SvcOperGrpBfdRowStatus_Type = RowStatus
_SvcOperGrpBfdRowStatus_Object = MibTableColumn
svcOperGrpBfdRowStatus = _SvcOperGrpBfdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 1),
    _SvcOperGrpBfdRowStatus_Type()
)
svcOperGrpBfdRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpBfdRowStatus.setStatus("current")
_SvcOperGrpBfdLastChgd_Type = TimeStamp
_SvcOperGrpBfdLastChgd_Object = MibTableColumn
svcOperGrpBfdLastChgd = _SvcOperGrpBfdLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 2),
    _SvcOperGrpBfdLastChgd_Type()
)
svcOperGrpBfdLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpBfdLastChgd.setStatus("current")


class _SvcOperGrpBfdSvcId_Type(TmnxServId):
    """Custom type svcOperGrpBfdSvcId based on TmnxServId"""
    defaultValue = 0


_SvcOperGrpBfdSvcId_Type.__name__ = "TmnxServId"
_SvcOperGrpBfdSvcId_Object = MibTableColumn
svcOperGrpBfdSvcId = _SvcOperGrpBfdSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 3),
    _SvcOperGrpBfdSvcId_Type()
)
svcOperGrpBfdSvcId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpBfdSvcId.setStatus("current")


class _SvcOperGrpBfdIfName_Type(TNamedItemOrEmpty):
    """Custom type svcOperGrpBfdIfName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcOperGrpBfdIfName_Type.__name__ = "TNamedItemOrEmpty"
_SvcOperGrpBfdIfName_Object = MibTableColumn
svcOperGrpBfdIfName = _SvcOperGrpBfdIfName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 4),
    _SvcOperGrpBfdIfName_Type()
)
svcOperGrpBfdIfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpBfdIfName.setStatus("current")


class _SvcOperGrpBfdDestIpType_Type(InetAddressType):
    """Custom type svcOperGrpBfdDestIpType based on InetAddressType"""
    defaultValue = 0


_SvcOperGrpBfdDestIpType_Type.__name__ = "InetAddressType"
_SvcOperGrpBfdDestIpType_Object = MibTableColumn
svcOperGrpBfdDestIpType = _SvcOperGrpBfdDestIpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 5),
    _SvcOperGrpBfdDestIpType_Type()
)
svcOperGrpBfdDestIpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpBfdDestIpType.setStatus("current")


class _SvcOperGrpBfdDestIp_Type(InetAddress):
    """Custom type svcOperGrpBfdDestIp based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcOperGrpBfdDestIp_Type.__name__ = "InetAddress"
_SvcOperGrpBfdDestIp_Object = MibTableColumn
svcOperGrpBfdDestIp = _SvcOperGrpBfdDestIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 6),
    _SvcOperGrpBfdDestIp_Type()
)
svcOperGrpBfdDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGrpBfdDestIp.setStatus("current")
_SvcOperGrpBfdSrcIpType_Type = InetAddressType
_SvcOperGrpBfdSrcIpType_Object = MibTableColumn
svcOperGrpBfdSrcIpType = _SvcOperGrpBfdSrcIpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 7),
    _SvcOperGrpBfdSrcIpType_Type()
)
svcOperGrpBfdSrcIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpBfdSrcIpType.setStatus("current")


class _SvcOperGrpBfdSrcIp_Type(InetAddress):
    """Custom type svcOperGrpBfdSrcIp based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcOperGrpBfdSrcIp_Type.__name__ = "InetAddress"
_SvcOperGrpBfdSrcIp_Object = MibTableColumn
svcOperGrpBfdSrcIp = _SvcOperGrpBfdSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 8),
    _SvcOperGrpBfdSrcIp_Type()
)
svcOperGrpBfdSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpBfdSrcIp.setStatus("current")
_SvcOperGrpBfdSessOperState_Type = TmnxBfdIntfSessOperState
_SvcOperGrpBfdSessOperState_Object = MibTableColumn
svcOperGrpBfdSessOperState = _SvcOperGrpBfdSessOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 151, 1, 9),
    _SvcOperGrpBfdSessOperState_Type()
)
svcOperGrpBfdSessOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpBfdSessOperState.setStatus("current")
_SvcTlsVxlanTable_Object = MibTable
svcTlsVxlanTable = _SvcTlsVxlanTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152)
)
if mibBuilder.loadTexts:
    svcTlsVxlanTable.setStatus("obsolete")
_SvcTlsVxlanEntry_Object = MibTableRow
svcTlsVxlanEntry = _SvcTlsVxlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1)
)
svcTlsVxlanEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxlanVni"),
)
if mibBuilder.loadTexts:
    svcTlsVxlanEntry.setStatus("obsolete")


class _SvcTlsVxlanVni_Type(Unsigned32):
    """Custom type svcTlsVxlanVni based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_SvcTlsVxlanVni_Type.__name__ = "Unsigned32"
_SvcTlsVxlanVni_Object = MibTableColumn
svcTlsVxlanVni = _SvcTlsVxlanVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 1),
    _SvcTlsVxlanVni_Type()
)
svcTlsVxlanVni.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsVxlanVni.setStatus("obsolete")
_SvcTlsVxlanRowStatus_Type = RowStatus
_SvcTlsVxlanRowStatus_Object = MibTableColumn
svcTlsVxlanRowStatus = _SvcTlsVxlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 2),
    _SvcTlsVxlanRowStatus_Type()
)
svcTlsVxlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanRowStatus.setStatus("obsolete")
_SvcTlsVxlanLastChgd_Type = TimeStamp
_SvcTlsVxlanLastChgd_Object = MibTableColumn
svcTlsVxlanLastChgd = _SvcTlsVxlanLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 3),
    _SvcTlsVxlanLastChgd_Type()
)
svcTlsVxlanLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanLastChgd.setStatus("obsolete")


class _SvcTlsVxlanCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcTlsVxlanCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcTlsVxlanCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcTlsVxlanCreationOrigin_Object = MibTableColumn
svcTlsVxlanCreationOrigin = _SvcTlsVxlanCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 4),
    _SvcTlsVxlanCreationOrigin_Type()
)
svcTlsVxlanCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanCreationOrigin.setStatus("obsolete")


class _SvcTlsVxlanNetIngQosPolicyId_Type(TPolicyID):
    """Custom type svcTlsVxlanNetIngQosPolicyId based on TPolicyID"""
    defaultValue = 0


_SvcTlsVxlanNetIngQosPolicyId_Type.__name__ = "TPolicyID"
_SvcTlsVxlanNetIngQosPolicyId_Object = MibTableColumn
svcTlsVxlanNetIngQosPolicyId = _SvcTlsVxlanNetIngQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 5),
    _SvcTlsVxlanNetIngQosPolicyId_Type()
)
svcTlsVxlanNetIngQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanNetIngQosPolicyId.setStatus("obsolete")


class _SvcTlsVxlanNetIngQosFPQGrp_Type(TNamedItemOrEmpty):
    """Custom type svcTlsVxlanNetIngQosFPQGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsVxlanNetIngQosFPQGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsVxlanNetIngQosFPQGrp_Object = MibTableColumn
svcTlsVxlanNetIngQosFPQGrp = _SvcTlsVxlanNetIngQosFPQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 6),
    _SvcTlsVxlanNetIngQosFPQGrp_Type()
)
svcTlsVxlanNetIngQosFPQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanNetIngQosFPQGrp.setStatus("obsolete")


class _SvcTlsVxlanNetIngQosFPQGrpInstId_Type(TQosQGrpInstanceIDorZero):
    """Custom type svcTlsVxlanNetIngQosFPQGrpInstId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_SvcTlsVxlanNetIngQosFPQGrpInstId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_SvcTlsVxlanNetIngQosFPQGrpInstId_Object = MibTableColumn
svcTlsVxlanNetIngQosFPQGrpInstId = _SvcTlsVxlanNetIngQosFPQGrpInstId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 7),
    _SvcTlsVxlanNetIngQosFPQGrpInstId_Type()
)
svcTlsVxlanNetIngQosFPQGrpInstId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanNetIngQosFPQGrpInstId.setStatus("obsolete")


class _SvcTlsVxlanAsstdRepl_Type(Integer32):
    """Custom type svcTlsVxlanAsstdRepl based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("replicator", 1),
          ("leaf", 2))
    )


_SvcTlsVxlanAsstdRepl_Type.__name__ = "Integer32"
_SvcTlsVxlanAsstdRepl_Object = MibTableColumn
svcTlsVxlanAsstdRepl = _SvcTlsVxlanAsstdRepl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 8),
    _SvcTlsVxlanAsstdRepl_Type()
)
svcTlsVxlanAsstdRepl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanAsstdRepl.setStatus("obsolete")


class _SvcTlsVxlanARActTime_Type(Unsigned32):
    """Custom type svcTlsVxlanARActTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcTlsVxlanARActTime_Type.__name__ = "Unsigned32"
_SvcTlsVxlanARActTime_Object = MibTableColumn
svcTlsVxlanARActTime = _SvcTlsVxlanARActTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 9),
    _SvcTlsVxlanARActTime_Type()
)
svcTlsVxlanARActTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanARActTime.setStatus("obsolete")
if mibBuilder.loadTexts:
    svcTlsVxlanARActTime.setUnits("seconds")


class _SvcTlsVxlanResProtSrcMac_Type(TruthValue):
    """Custom type svcTlsVxlanResProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcTlsVxlanResProtSrcMac_Type.__name__ = "TruthValue"
_SvcTlsVxlanResProtSrcMac_Object = MibTableColumn
svcTlsVxlanResProtSrcMac = _SvcTlsVxlanResProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 10),
    _SvcTlsVxlanResProtSrcMac_Type()
)
svcTlsVxlanResProtSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanResProtSrcMac.setStatus("obsolete")


class _SvcTlsVxlanResProtSrcMacAct_Type(Integer32):
    """Custom type svcTlsVxlanResProtSrcMacAct based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("discardFrame", 1)
    )


_SvcTlsVxlanResProtSrcMacAct_Type.__name__ = "Integer32"
_SvcTlsVxlanResProtSrcMacAct_Object = MibTableColumn
svcTlsVxlanResProtSrcMacAct = _SvcTlsVxlanResProtSrcMacAct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 11),
    _SvcTlsVxlanResProtSrcMacAct_Type()
)
svcTlsVxlanResProtSrcMacAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanResProtSrcMacAct.setStatus("obsolete")


class _SvcTlsVxlanInstanceId_Type(TmnxVxlanInstance):
    """Custom type svcTlsVxlanInstanceId based on TmnxVxlanInstance"""
    defaultValue = 1


_SvcTlsVxlanInstanceId_Type.__name__ = "TmnxVxlanInstance"
_SvcTlsVxlanInstanceId_Object = MibTableColumn
svcTlsVxlanInstanceId = _SvcTlsVxlanInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 152, 1, 12),
    _SvcTlsVxlanInstanceId_Type()
)
svcTlsVxlanInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanInstanceId.setStatus("obsolete")
_SvcBgpEvpnTable_Object = MibTable
svcBgpEvpnTable = _SvcBgpEvpnTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153)
)
if mibBuilder.loadTexts:
    svcBgpEvpnTable.setStatus("current")
_SvcBgpEvpnEntry_Object = MibTableRow
svcBgpEvpnEntry = _SvcBgpEvpnEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1)
)
svcBgpEvpnEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnEntry.setStatus("current")
_SvcBgpEvpnRowStatus_Type = RowStatus
_SvcBgpEvpnRowStatus_Object = MibTableColumn
svcBgpEvpnRowStatus = _SvcBgpEvpnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 1),
    _SvcBgpEvpnRowStatus_Type()
)
svcBgpEvpnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnRowStatus.setStatus("current")
_SvcBgpEvpnLastChanged_Type = TimeStamp
_SvcBgpEvpnLastChanged_Object = MibTableColumn
svcBgpEvpnLastChanged = _SvcBgpEvpnLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 2),
    _SvcBgpEvpnLastChanged_Type()
)
svcBgpEvpnLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnLastChanged.setStatus("current")


class _SvcBgpEvpnMacAdvertisement_Type(TruthValue):
    """Custom type svcBgpEvpnMacAdvertisement based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnMacAdvertisement_Type.__name__ = "TruthValue"
_SvcBgpEvpnMacAdvertisement_Object = MibTableColumn
svcBgpEvpnMacAdvertisement = _SvcBgpEvpnMacAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 3),
    _SvcBgpEvpnMacAdvertisement_Type()
)
svcBgpEvpnMacAdvertisement.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacAdvertisement.setStatus("current")


class _SvcBgpEvpnMacAdvDefaultRoute_Type(TruthValue):
    """Custom type svcBgpEvpnMacAdvDefaultRoute based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMacAdvDefaultRoute_Type.__name__ = "TruthValue"
_SvcBgpEvpnMacAdvDefaultRoute_Object = MibTableColumn
svcBgpEvpnMacAdvDefaultRoute = _SvcBgpEvpnMacAdvDefaultRoute_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 4),
    _SvcBgpEvpnMacAdvDefaultRoute_Type()
)
svcBgpEvpnMacAdvDefaultRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacAdvDefaultRoute.setStatus("current")


class _SvcBgpEvpnVxlanAdminStatus_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcBgpEvpnVxlanAdminStatus based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcBgpEvpnVxlanAdminStatus_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcBgpEvpnVxlanAdminStatus_Object = MibTableColumn
svcBgpEvpnVxlanAdminStatus = _SvcBgpEvpnVxlanAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 5),
    _SvcBgpEvpnVxlanAdminStatus_Type()
)
svcBgpEvpnVxlanAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanAdminStatus.setStatus("obsolete")


class _SvcBgpEvpnCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcBgpEvpnCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcBgpEvpnCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcBgpEvpnCreationOrigin_Object = MibTableColumn
svcBgpEvpnCreationOrigin = _SvcBgpEvpnCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 6),
    _SvcBgpEvpnCreationOrigin_Type()
)
svcBgpEvpnCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnCreationOrigin.setStatus("current")


class _SvcBgpEvpnMacDupDetNumMoves_Type(Unsigned32):
    """Custom type svcBgpEvpnMacDupDetNumMoves based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SvcBgpEvpnMacDupDetNumMoves_Type.__name__ = "Unsigned32"
_SvcBgpEvpnMacDupDetNumMoves_Object = MibTableColumn
svcBgpEvpnMacDupDetNumMoves = _SvcBgpEvpnMacDupDetNumMoves_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 7),
    _SvcBgpEvpnMacDupDetNumMoves_Type()
)
svcBgpEvpnMacDupDetNumMoves.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetNumMoves.setStatus("current")


class _SvcBgpEvpnMacDupDetWindow_Type(Unsigned32):
    """Custom type svcBgpEvpnMacDupDetWindow based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_SvcBgpEvpnMacDupDetWindow_Type.__name__ = "Unsigned32"
_SvcBgpEvpnMacDupDetWindow_Object = MibTableColumn
svcBgpEvpnMacDupDetWindow = _SvcBgpEvpnMacDupDetWindow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 8),
    _SvcBgpEvpnMacDupDetWindow_Type()
)
svcBgpEvpnMacDupDetWindow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetWindow.setStatus("current")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetWindow.setUnits("minutes")


class _SvcBgpEvpnMacDupDetRetry_Type(Unsigned32):
    """Custom type svcBgpEvpnMacDupDetRetry based on Unsigned32"""
    defaultValue = 9

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(2, 60),
    )


_SvcBgpEvpnMacDupDetRetry_Type.__name__ = "Unsigned32"
_SvcBgpEvpnMacDupDetRetry_Object = MibTableColumn
svcBgpEvpnMacDupDetRetry = _SvcBgpEvpnMacDupDetRetry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 9),
    _SvcBgpEvpnMacDupDetRetry_Type()
)
svcBgpEvpnMacDupDetRetry.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetRetry.setStatus("current")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetRetry.setUnits("minutes")
_SvcBgpEvpnMacDupDetNumDups_Type = Unsigned32
_SvcBgpEvpnMacDupDetNumDups_Object = MibTableColumn
svcBgpEvpnMacDupDetNumDups = _SvcBgpEvpnMacDupDetNumDups_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 10),
    _SvcBgpEvpnMacDupDetNumDups_Type()
)
svcBgpEvpnMacDupDetNumDups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetNumDups.setStatus("current")


class _SvcBgpEvpnIpRouteAdvertisement_Type(TruthValue):
    """Custom type svcBgpEvpnIpRouteAdvertisement based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnIpRouteAdvertisement_Type.__name__ = "TruthValue"
_SvcBgpEvpnIpRouteAdvertisement_Object = MibTableColumn
svcBgpEvpnIpRouteAdvertisement = _SvcBgpEvpnIpRouteAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 11),
    _SvcBgpEvpnIpRouteAdvertisement_Type()
)
svcBgpEvpnIpRouteAdvertisement.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIpRouteAdvertisement.setStatus("current")


class _SvcBgpEvpnIpRouteAdverInclHost_Type(TruthValue):
    """Custom type svcBgpEvpnIpRouteAdverInclHost based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnIpRouteAdverInclHost_Type.__name__ = "TruthValue"
_SvcBgpEvpnIpRouteAdverInclHost_Object = MibTableColumn
svcBgpEvpnIpRouteAdverInclHost = _SvcBgpEvpnIpRouteAdverInclHost_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 12),
    _SvcBgpEvpnIpRouteAdverInclHost_Type()
)
svcBgpEvpnIpRouteAdverInclHost.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIpRouteAdverInclHost.setStatus("current")


class _SvcBgpEvpnEvi_Type(Unsigned32):
    """Custom type svcBgpEvpnEvi based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_SvcBgpEvpnEvi_Type.__name__ = "Unsigned32"
_SvcBgpEvpnEvi_Object = MibTableColumn
svcBgpEvpnEvi = _SvcBgpEvpnEvi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 13),
    _SvcBgpEvpnEvi_Type()
)
svcBgpEvpnEvi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnEvi.setStatus("current")


class _SvcBgpEvpnCfmMacAdvertisement_Type(TruthValue):
    """Custom type svcBgpEvpnCfmMacAdvertisement based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnCfmMacAdvertisement_Type.__name__ = "TruthValue"
_SvcBgpEvpnCfmMacAdvertisement_Object = MibTableColumn
svcBgpEvpnCfmMacAdvertisement = _SvcBgpEvpnCfmMacAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 14),
    _SvcBgpEvpnCfmMacAdvertisement_Type()
)
svcBgpEvpnCfmMacAdvertisement.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnCfmMacAdvertisement.setStatus("current")


class _SvcBgpEvpnIngressRepIncMcastAdv_Type(TruthValue):
    """Custom type svcBgpEvpnIngressRepIncMcastAdv based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnIngressRepIncMcastAdv_Type.__name__ = "TruthValue"
_SvcBgpEvpnIngressRepIncMcastAdv_Object = MibTableColumn
svcBgpEvpnIngressRepIncMcastAdv = _SvcBgpEvpnIngressRepIncMcastAdv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 15),
    _SvcBgpEvpnIngressRepIncMcastAdv_Type()
)
svcBgpEvpnIngressRepIncMcastAdv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIngressRepIncMcastAdv.setStatus("current")


class _SvcBgpEvpnVxlanBgpInstance_Type(Integer32):
    """Custom type svcBgpEvpnVxlanBgpInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_SvcBgpEvpnVxlanBgpInstance_Type.__name__ = "Integer32"
_SvcBgpEvpnVxlanBgpInstance_Object = MibTableColumn
svcBgpEvpnVxlanBgpInstance = _SvcBgpEvpnVxlanBgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 16),
    _SvcBgpEvpnVxlanBgpInstance_Type()
)
svcBgpEvpnVxlanBgpInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanBgpInstance.setStatus("current")


class _SvcBgpEvpnIncMcastOrigAddrType_Type(InetAddressType):
    """Custom type svcBgpEvpnIncMcastOrigAddrType based on InetAddressType"""
    defaultValue = 0


_SvcBgpEvpnIncMcastOrigAddrType_Type.__name__ = "InetAddressType"
_SvcBgpEvpnIncMcastOrigAddrType_Object = MibTableColumn
svcBgpEvpnIncMcastOrigAddrType = _SvcBgpEvpnIncMcastOrigAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 17),
    _SvcBgpEvpnIncMcastOrigAddrType_Type()
)
svcBgpEvpnIncMcastOrigAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIncMcastOrigAddrType.setStatus("current")


class _SvcBgpEvpnIncMcastOrigAddr_Type(InetAddress):
    """Custom type svcBgpEvpnIncMcastOrigAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcBgpEvpnIncMcastOrigAddr_Type.__name__ = "InetAddress"
_SvcBgpEvpnIncMcastOrigAddr_Object = MibTableColumn
svcBgpEvpnIncMcastOrigAddr = _SvcBgpEvpnIncMcastOrigAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 18),
    _SvcBgpEvpnIncMcastOrigAddr_Type()
)
svcBgpEvpnIncMcastOrigAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIncMcastOrigAddr.setStatus("current")


class _SvcBgpEvpnAcceptIvplsEvpnFlush_Type(TruthValue):
    """Custom type svcBgpEvpnAcceptIvplsEvpnFlush based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnAcceptIvplsEvpnFlush_Type.__name__ = "TruthValue"
_SvcBgpEvpnAcceptIvplsEvpnFlush_Object = MibTableColumn
svcBgpEvpnAcceptIvplsEvpnFlush = _SvcBgpEvpnAcceptIvplsEvpnFlush_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 19),
    _SvcBgpEvpnAcceptIvplsEvpnFlush_Type()
)
svcBgpEvpnAcceptIvplsEvpnFlush.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnAcceptIvplsEvpnFlush.setStatus("current")


class _SvcBgpEvpnMacDupBlkHoleDupMac_Type(TruthValue):
    """Custom type svcBgpEvpnMacDupBlkHoleDupMac based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMacDupBlkHoleDupMac_Type.__name__ = "TruthValue"
_SvcBgpEvpnMacDupBlkHoleDupMac_Object = MibTableColumn
svcBgpEvpnMacDupBlkHoleDupMac = _SvcBgpEvpnMacDupBlkHoleDupMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 20),
    _SvcBgpEvpnMacDupBlkHoleDupMac_Type()
)
svcBgpEvpnMacDupBlkHoleDupMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupBlkHoleDupMac.setStatus("current")


class _SvcBgpEvpnVxlanSendEvpnEncap_Type(TruthValue):
    """Custom type svcBgpEvpnVxlanSendEvpnEncap based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnVxlanSendEvpnEncap_Type.__name__ = "TruthValue"
_SvcBgpEvpnVxlanSendEvpnEncap_Object = MibTableColumn
svcBgpEvpnVxlanSendEvpnEncap = _SvcBgpEvpnVxlanSendEvpnEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 21),
    _SvcBgpEvpnVxlanSendEvpnEncap_Type()
)
svcBgpEvpnVxlanSendEvpnEncap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanSendEvpnEncap.setStatus("obsolete")


class _SvcBgpEvpnVxlanSendImetIrOnNdf_Type(TruthValue):
    """Custom type svcBgpEvpnVxlanSendImetIrOnNdf based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnVxlanSendImetIrOnNdf_Type.__name__ = "TruthValue"
_SvcBgpEvpnVxlanSendImetIrOnNdf_Object = MibTableColumn
svcBgpEvpnVxlanSendImetIrOnNdf = _SvcBgpEvpnVxlanSendImetIrOnNdf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 23),
    _SvcBgpEvpnVxlanSendImetIrOnNdf_Type()
)
svcBgpEvpnVxlanSendImetIrOnNdf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanSendImetIrOnNdf.setStatus("obsolete")


class _SvcBgpEvpnVxlanMaxEcmpRoutes_Type(Integer32):
    """Custom type svcBgpEvpnVxlanMaxEcmpRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcBgpEvpnVxlanMaxEcmpRoutes_Type.__name__ = "Integer32"
_SvcBgpEvpnVxlanMaxEcmpRoutes_Object = MibTableColumn
svcBgpEvpnVxlanMaxEcmpRoutes = _SvcBgpEvpnVxlanMaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 24),
    _SvcBgpEvpnVxlanMaxEcmpRoutes_Type()
)
svcBgpEvpnVxlanMaxEcmpRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanMaxEcmpRoutes.setStatus("obsolete")


class _SvcBgpEvpnSelMcastAdvertise_Type(TruthValue):
    """Custom type svcBgpEvpnSelMcastAdvertise based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnSelMcastAdvertise_Type.__name__ = "TruthValue"
_SvcBgpEvpnSelMcastAdvertise_Object = MibTableColumn
svcBgpEvpnSelMcastAdvertise = _SvcBgpEvpnSelMcastAdvertise_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 25),
    _SvcBgpEvpnSelMcastAdvertise_Type()
)
svcBgpEvpnSelMcastAdvertise.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnSelMcastAdvertise.setStatus("current")


class _SvcBgpEvpnIpRouteAdvDomainId_Type(TmnxDPathDomainId):
    """Custom type svcBgpEvpnIpRouteAdvDomainId based on TmnxDPathDomainId"""
    defaultHexValue = "000000000000"


_SvcBgpEvpnIpRouteAdvDomainId_Type.__name__ = "TmnxDPathDomainId"
_SvcBgpEvpnIpRouteAdvDomainId_Object = MibTableColumn
svcBgpEvpnIpRouteAdvDomainId = _SvcBgpEvpnIpRouteAdvDomainId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 153, 1, 26),
    _SvcBgpEvpnIpRouteAdvDomainId_Type()
)
svcBgpEvpnIpRouteAdvDomainId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnIpRouteAdvDomainId.setStatus("current")
_TmnxIesIfRtrSolicitTable_Object = MibTable
tmnxIesIfRtrSolicitTable = _TmnxIesIfRtrSolicitTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154)
)
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolicitTable.setStatus("current")
_TmnxIesIfRtrSolicitEntry_Object = MibTableRow
tmnxIesIfRtrSolicitEntry = _TmnxIesIfRtrSolicitEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1)
)
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolicitEntry.setStatus("current")
_TmnxIesIfRtrSolLastMgmtChange_Type = TimeStamp
_TmnxIesIfRtrSolLastMgmtChange_Object = MibTableColumn
tmnxIesIfRtrSolLastMgmtChange = _TmnxIesIfRtrSolLastMgmtChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1, 1),
    _TmnxIesIfRtrSolLastMgmtChange_Type()
)
tmnxIesIfRtrSolLastMgmtChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolLastMgmtChange.setStatus("current")


class _TmnxIesIfRtrSolAdminStatus_Type(TmnxEnabledDisabled):
    """Custom type tmnxIesIfRtrSolAdminStatus based on TmnxEnabledDisabled"""
    defaultValue = 2


_TmnxIesIfRtrSolAdminStatus_Type.__name__ = "TmnxEnabledDisabled"
_TmnxIesIfRtrSolAdminStatus_Object = MibTableColumn
tmnxIesIfRtrSolAdminStatus = _TmnxIesIfRtrSolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1, 2),
    _TmnxIesIfRtrSolAdminStatus_Type()
)
tmnxIesIfRtrSolAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolAdminStatus.setStatus("current")


class _TmnxIesIfRtrSolUserDb_Type(TNamedItemOrEmpty):
    """Custom type tmnxIesIfRtrSolUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxIesIfRtrSolUserDb_Type.__name__ = "TNamedItemOrEmpty"
_TmnxIesIfRtrSolUserDb_Object = MibTableColumn
tmnxIesIfRtrSolUserDb = _TmnxIesIfRtrSolUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1, 3),
    _TmnxIesIfRtrSolUserDb_Type()
)
tmnxIesIfRtrSolUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolUserDb.setStatus("current")


class _TmnxIesIfRtrSolMinAuthInterval_Type(Unsigned32):
    """Custom type tmnxIesIfRtrSolMinAuthInterval based on Unsigned32"""
    defaultValue = 300

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 360000),
    )


_TmnxIesIfRtrSolMinAuthInterval_Type.__name__ = "Unsigned32"
_TmnxIesIfRtrSolMinAuthInterval_Object = MibTableColumn
tmnxIesIfRtrSolMinAuthInterval = _TmnxIesIfRtrSolMinAuthInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1, 4),
    _TmnxIesIfRtrSolMinAuthInterval_Type()
)
tmnxIesIfRtrSolMinAuthInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolMinAuthInterval.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolMinAuthInterval.setUnits("seconds")


class _TmnxIesIfRtrSolInactivityTimer_Type(Unsigned32):
    """Custom type tmnxIesIfRtrSolInactivityTimer based on Unsigned32"""
    defaultValue = 300

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31536000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TmnxIesIfRtrSolInactivityTimer_Type.__name__ = "Unsigned32"
_TmnxIesIfRtrSolInactivityTimer_Object = MibTableColumn
tmnxIesIfRtrSolInactivityTimer = _TmnxIesIfRtrSolInactivityTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 154, 1, 5),
    _TmnxIesIfRtrSolInactivityTimer_Type()
)
tmnxIesIfRtrSolInactivityTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolInactivityTimer.setStatus("current")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolInactivityTimer.setUnits("seconds")
_SvcVsdDomainTable_Object = MibTable
svcVsdDomainTable = _SvcVsdDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155)
)
if mibBuilder.loadTexts:
    svcVsdDomainTable.setStatus("current")
_SvcVsdDomainEntry_Object = MibTableRow
svcVsdDomainEntry = _SvcVsdDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1)
)
svcVsdDomainEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcVsdDomainName"),
)
if mibBuilder.loadTexts:
    svcVsdDomainEntry.setStatus("current")
_SvcVsdDomainRowStatus_Type = RowStatus
_SvcVsdDomainRowStatus_Object = MibTableColumn
svcVsdDomainRowStatus = _SvcVsdDomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 1),
    _SvcVsdDomainRowStatus_Type()
)
svcVsdDomainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVsdDomainRowStatus.setStatus("current")


class _SvcVsdDomainDescription_Type(TItemDescription):
    """Custom type svcVsdDomainDescription based on TItemDescription"""
    defaultValue = OctetString("")


_SvcVsdDomainDescription_Type.__name__ = "TItemDescription"
_SvcVsdDomainDescription_Object = MibTableColumn
svcVsdDomainDescription = _SvcVsdDomainDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 2),
    _SvcVsdDomainDescription_Type()
)
svcVsdDomainDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVsdDomainDescription.setStatus("current")


class _SvcVsdDomainType_Type(Integer32):
    """Custom type svcVsdDomainType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("l2Domain", 1),
          ("vrfGre", 2),
          ("vrfVxlan", 3),
          ("l2DomainIrb", 4))
    )


_SvcVsdDomainType_Type.__name__ = "Integer32"
_SvcVsdDomainType_Object = MibTableColumn
svcVsdDomainType = _SvcVsdDomainType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 3),
    _SvcVsdDomainType_Type()
)
svcVsdDomainType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVsdDomainType.setStatus("current")


class _SvcVsdDomainAdminState_Type(TmnxAdminState):
    """Custom type svcVsdDomainAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcVsdDomainAdminState_Type.__name__ = "TmnxAdminState"
_SvcVsdDomainAdminState_Object = MibTableColumn
svcVsdDomainAdminState = _SvcVsdDomainAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 4),
    _SvcVsdDomainAdminState_Type()
)
svcVsdDomainAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVsdDomainAdminState.setStatus("current")


class _SvcVsdDomainCreationOrigin_Type(Integer32):
    """Custom type svcVsdDomainCreationOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("vsd", 1))
    )


_SvcVsdDomainCreationOrigin_Type.__name__ = "Integer32"
_SvcVsdDomainCreationOrigin_Object = MibTableColumn
svcVsdDomainCreationOrigin = _SvcVsdDomainCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 5),
    _SvcVsdDomainCreationOrigin_Type()
)
svcVsdDomainCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainCreationOrigin.setStatus("current")


class _SvcVsdDomainLastErrStr_Type(TLDisplayString):
    """Custom type svcVsdDomainLastErrStr based on TLDisplayString"""
    subtypeSpec = TLDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 320),
    )


_SvcVsdDomainLastErrStr_Type.__name__ = "TLDisplayString"
_SvcVsdDomainLastErrStr_Object = MibTableColumn
svcVsdDomainLastErrStr = _SvcVsdDomainLastErrStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 6),
    _SvcVsdDomainLastErrStr_Type()
)
svcVsdDomainLastErrStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainLastErrStr.setStatus("current")


class _SvcVsdDomainVsdLastErrStr_Type(TLDisplayString):
    """Custom type svcVsdDomainVsdLastErrStr based on TLDisplayString"""
    subtypeSpec = TLDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 320),
    )


_SvcVsdDomainVsdLastErrStr_Type.__name__ = "TLDisplayString"
_SvcVsdDomainVsdLastErrStr_Object = MibTableColumn
svcVsdDomainVsdLastErrStr = _SvcVsdDomainVsdLastErrStr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 7),
    _SvcVsdDomainVsdLastErrStr_Type()
)
svcVsdDomainVsdLastErrStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainVsdLastErrStr.setStatus("current")


class _SvcVsdDomainRecParams_Type(OctetString):
    """Custom type svcVsdDomainRecParams based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_SvcVsdDomainRecParams_Type.__name__ = "OctetString"
_SvcVsdDomainRecParams_Object = MibTableColumn
svcVsdDomainRecParams = _SvcVsdDomainRecParams_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 8),
    _SvcVsdDomainRecParams_Type()
)
svcVsdDomainRecParams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainRecParams.setStatus("current")


class _SvcVsdDomainExecParams_Type(OctetString):
    """Custom type svcVsdDomainExecParams based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_SvcVsdDomainExecParams_Type.__name__ = "OctetString"
_SvcVsdDomainExecParams_Object = MibTableColumn
svcVsdDomainExecParams = _SvcVsdDomainExecParams_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 155, 1, 9),
    _SvcVsdDomainExecParams_Type()
)
svcVsdDomainExecParams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainExecParams.setStatus("current")
_SvcTlsProxyArpTable_Object = MibTable
svcTlsProxyArpTable = _SvcTlsProxyArpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpTable.setStatus("current")
_SvcTlsProxyArpEntry_Object = MibTableRow
svcTlsProxyArpEntry = _SvcTlsProxyArpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1)
)
svcTlsProxyArpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpIpAddr"),
)
if mibBuilder.loadTexts:
    svcTlsProxyArpEntry.setStatus("current")
_SvcTlsProxyArpIpAddrType_Type = InetAddressType
_SvcTlsProxyArpIpAddrType_Object = MibTableColumn
svcTlsProxyArpIpAddrType = _SvcTlsProxyArpIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 1),
    _SvcTlsProxyArpIpAddrType_Type()
)
svcTlsProxyArpIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpIpAddrType.setStatus("current")


class _SvcTlsProxyArpIpAddr_Type(InetAddress):
    """Custom type svcTlsProxyArpIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcTlsProxyArpIpAddr_Type.__name__ = "InetAddress"
_SvcTlsProxyArpIpAddr_Object = MibTableColumn
svcTlsProxyArpIpAddr = _SvcTlsProxyArpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 2),
    _SvcTlsProxyArpIpAddr_Type()
)
svcTlsProxyArpIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpIpAddr.setStatus("current")
_SvcTlsProxyArpMacAddr_Type = MacAddress
_SvcTlsProxyArpMacAddr_Object = MibTableColumn
svcTlsProxyArpMacAddr = _SvcTlsProxyArpMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 3),
    _SvcTlsProxyArpMacAddr_Type()
)
svcTlsProxyArpMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpMacAddr.setStatus("current")
_SvcTlsProxyArpType_Type = TmnxProxyEntryType
_SvcTlsProxyArpType_Object = MibTableColumn
svcTlsProxyArpType = _SvcTlsProxyArpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 4),
    _SvcTlsProxyArpType_Type()
)
svcTlsProxyArpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpType.setStatus("current")
_SvcTlsProxyArpLastChgd_Type = TimeStamp
_SvcTlsProxyArpLastChgd_Object = MibTableColumn
svcTlsProxyArpLastChgd = _SvcTlsProxyArpLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 5),
    _SvcTlsProxyArpLastChgd_Type()
)
svcTlsProxyArpLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpLastChgd.setStatus("current")


class _SvcTlsProxyArpStatus_Type(Integer32):
    """Custom type svcTlsProxyArpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inActv", 2),
          ("pendng", 3))
    )


_SvcTlsProxyArpStatus_Type.__name__ = "Integer32"
_SvcTlsProxyArpStatus_Object = MibTableColumn
svcTlsProxyArpStatus = _SvcTlsProxyArpStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 156, 1, 6),
    _SvcTlsProxyArpStatus_Type()
)
svcTlsProxyArpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpStatus.setStatus("current")
_SvcVsdDomainToSvcTable_Object = MibTable
svcVsdDomainToSvcTable = _SvcVsdDomainToSvcTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 157)
)
if mibBuilder.loadTexts:
    svcVsdDomainToSvcTable.setStatus("current")
_SvcVsdDomainToSvcEntry_Object = MibTableRow
svcVsdDomainToSvcEntry = _SvcVsdDomainToSvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 157, 1)
)
svcVsdDomainToSvcEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcVsdDomainName"),
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVsdDomainToSvcEntry.setStatus("current")
_SvcVsdDomainToSvcRowStatus_Type = RowStatus
_SvcVsdDomainToSvcRowStatus_Object = MibTableColumn
svcVsdDomainToSvcRowStatus = _SvcVsdDomainToSvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 157, 1, 1),
    _SvcVsdDomainToSvcRowStatus_Type()
)
svcVsdDomainToSvcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVsdDomainToSvcRowStatus.setStatus("current")


class _SvcVsdDomainToSvcCreationOrigin_Type(Integer32):
    """Custom type svcVsdDomainToSvcCreationOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("manual", 0),
          ("vsd", 1))
    )


_SvcVsdDomainToSvcCreationOrigin_Type.__name__ = "Integer32"
_SvcVsdDomainToSvcCreationOrigin_Object = MibTableColumn
svcVsdDomainToSvcCreationOrigin = _SvcVsdDomainToSvcCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 157, 1, 2),
    _SvcVsdDomainToSvcCreationOrigin_Type()
)
svcVsdDomainToSvcCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainToSvcCreationOrigin.setStatus("current")
_SvcBgpEvpnDetDupMacTable_Object = MibTable
svcBgpEvpnDetDupMacTable = _SvcBgpEvpnDetDupMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 158)
)
if mibBuilder.loadTexts:
    svcBgpEvpnDetDupMacTable.setStatus("current")
_SvcBgpEvpnDetDupMacEntry_Object = MibTableRow
svcBgpEvpnDetDupMacEntry = _SvcBgpEvpnDetDupMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 158, 1)
)
svcBgpEvpnDetDupMacEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacAddress"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnDetDupMacEntry.setStatus("current")
_SvcBgpEvpnDetDupMacAddress_Type = MacAddress
_SvcBgpEvpnDetDupMacAddress_Object = MibTableColumn
svcBgpEvpnDetDupMacAddress = _SvcBgpEvpnDetDupMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 158, 1, 1),
    _SvcBgpEvpnDetDupMacAddress_Type()
)
svcBgpEvpnDetDupMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnDetDupMacAddress.setStatus("current")
_SvcBgpEvpnDetDupMacTime_Type = TimeStamp
_SvcBgpEvpnDetDupMacTime_Object = MibTableColumn
svcBgpEvpnDetDupMacTime = _SvcBgpEvpnDetDupMacTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 158, 1, 2),
    _SvcBgpEvpnDetDupMacTime_Type()
)
svcBgpEvpnDetDupMacTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnDetDupMacTime.setStatus("current")
_SvcVTEPTable_Object = MibTable
svcVTEPTable = _SvcVTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159)
)
if mibBuilder.loadTexts:
    svcVTEPTable.setStatus("current")
_SvcVTEPEntry_Object = MibTableRow
svcVTEPEntry = _SvcVTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1)
)
svcVTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcVTEPAddress"),
)
if mibBuilder.loadTexts:
    svcVTEPEntry.setStatus("current")
_SvcVTEPAddrType_Type = InetAddressType
_SvcVTEPAddrType_Object = MibTableColumn
svcVTEPAddrType = _SvcVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 1),
    _SvcVTEPAddrType_Type()
)
svcVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPAddrType.setStatus("current")


class _SvcVTEPAddress_Type(InetAddress):
    """Custom type svcVTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVTEPAddress_Type.__name__ = "InetAddress"
_SvcVTEPAddress_Object = MibTableColumn
svcVTEPAddress = _SvcVTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 2),
    _SvcVTEPAddress_Type()
)
svcVTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPAddress.setStatus("current")
_SvcVTEPNumEgrVNIs_Type = Unsigned32
_SvcVTEPNumEgrVNIs_Object = MibTableColumn
svcVTEPNumEgrVNIs = _SvcVTEPNumEgrVNIs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 3),
    _SvcVTEPNumEgrVNIs_Type()
)
svcVTEPNumEgrVNIs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPNumEgrVNIs.setStatus("obsolete")
_SvcVTEPOperState_Type = ServiceOperStatus
_SvcVTEPOperState_Object = MibTableColumn
svcVTEPOperState = _SvcVTEPOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 4),
    _SvcVTEPOperState_Type()
)
svcVTEPOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPOperState.setStatus("current")
_SvcVTEPNumVxlanESDest_Type = Unsigned32
_SvcVTEPNumVxlanESDest_Object = MibTableColumn
svcVTEPNumVxlanESDest = _SvcVTEPNumVxlanESDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 5),
    _SvcVTEPNumVxlanESDest_Type()
)
svcVTEPNumVxlanESDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPNumVxlanESDest.setStatus("current")
_SvcVTEPNumVxlanNonESDest_Type = Unsigned32
_SvcVTEPNumVxlanNonESDest_Object = MibTableColumn
svcVTEPNumVxlanNonESDest = _SvcVTEPNumVxlanNonESDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 159, 1, 6),
    _SvcVTEPNumVxlanNonESDest_Type()
)
svcVTEPNumVxlanNonESDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPNumVxlanNonESDest.setStatus("current")
_SvcTlsVTEPEgrVNITable_Object = MibTable
svcTlsVTEPEgrVNITable = _SvcTlsVTEPEgrVNITable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160)
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNITable.setStatus("obsolete")
_SvcTlsVTEPEgrVNIEntry_Object = MibTableRow
svcTlsVTEPEgrVNIEntry = _SvcTlsVTEPEgrVNIEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1)
)
svcTlsVTEPEgrVNIEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIEntry.setStatus("obsolete")
_SvcTlsVTEPEgrVNIVTEPAddrType_Type = InetAddressType
_SvcTlsVTEPEgrVNIVTEPAddrType_Object = MibTableColumn
svcTlsVTEPEgrVNIVTEPAddrType = _SvcTlsVTEPEgrVNIVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 1),
    _SvcTlsVTEPEgrVNIVTEPAddrType_Type()
)
svcTlsVTEPEgrVNIVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIVTEPAddrType.setStatus("obsolete")


class _SvcTlsVTEPEgrVNIVTEPAddress_Type(InetAddress):
    """Custom type svcTlsVTEPEgrVNIVTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsVTEPEgrVNIVTEPAddress_Type.__name__ = "InetAddress"
_SvcTlsVTEPEgrVNIVTEPAddress_Object = MibTableColumn
svcTlsVTEPEgrVNIVTEPAddress = _SvcTlsVTEPEgrVNIVTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 2),
    _SvcTlsVTEPEgrVNIVTEPAddress_Type()
)
svcTlsVTEPEgrVNIVTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIVTEPAddress.setStatus("obsolete")


class _SvcTlsVTEPEgrVNIEgrVNI_Type(Unsigned32):
    """Custom type svcTlsVTEPEgrVNIEgrVNI based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_SvcTlsVTEPEgrVNIEgrVNI_Type.__name__ = "Unsigned32"
_SvcTlsVTEPEgrVNIEgrVNI_Object = MibTableColumn
svcTlsVTEPEgrVNIEgrVNI = _SvcTlsVTEPEgrVNIEgrVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 3),
    _SvcTlsVTEPEgrVNIEgrVNI_Type()
)
svcTlsVTEPEgrVNIEgrVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIEgrVNI.setStatus("obsolete")
_SvcTlsVTEPEgrVNINumMACs_Type = Unsigned32
_SvcTlsVTEPEgrVNINumMACs_Object = MibTableColumn
svcTlsVTEPEgrVNINumMACs = _SvcTlsVTEPEgrVNINumMACs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 4),
    _SvcTlsVTEPEgrVNINumMACs_Type()
)
svcTlsVTEPEgrVNINumMACs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNINumMACs.setStatus("obsolete")
_SvcTlsVTEPEgrVNIInMcastList_Type = TruthValue
_SvcTlsVTEPEgrVNIInMcastList_Object = MibTableColumn
svcTlsVTEPEgrVNIInMcastList = _SvcTlsVTEPEgrVNIInMcastList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 5),
    _SvcTlsVTEPEgrVNIInMcastList_Type()
)
svcTlsVTEPEgrVNIInMcastList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIInMcastList.setStatus("obsolete")
_SvcTlsVTEPEgrVNIOperState_Type = ServiceOperStatus
_SvcTlsVTEPEgrVNIOperState_Object = MibTableColumn
svcTlsVTEPEgrVNIOperState = _SvcTlsVTEPEgrVNIOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 6),
    _SvcTlsVTEPEgrVNIOperState_Type()
)
svcTlsVTEPEgrVNIOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIOperState.setStatus("obsolete")
_SvcTlsVTEPEgrVNIL2EsPbr_Type = TruthValue
_SvcTlsVTEPEgrVNIL2EsPbr_Object = MibTableColumn
svcTlsVTEPEgrVNIL2EsPbr = _SvcTlsVTEPEgrVNIL2EsPbr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 7),
    _SvcTlsVTEPEgrVNIL2EsPbr_Type()
)
svcTlsVTEPEgrVNIL2EsPbr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIL2EsPbr.setStatus("obsolete")


class _SvcTlsVTEPEgrVNIMcast_Type(Integer32):
    """Custom type svcTlsVTEPEgrVNIMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("u", 1),
          ("bm", 2),
          ("bum", 3))
    )


_SvcTlsVTEPEgrVNIMcast_Type.__name__ = "Integer32"
_SvcTlsVTEPEgrVNIMcast_Object = MibTableColumn
svcTlsVTEPEgrVNIMcast = _SvcTlsVTEPEgrVNIMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 160, 1, 8),
    _SvcTlsVTEPEgrVNIMcast_Type()
)
svcTlsVTEPEgrVNIMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVNIMcast.setStatus("obsolete")
_SvcVTEPEgrVNITable_Object = MibTable
svcVTEPEgrVNITable = _SvcVTEPEgrVNITable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161)
)
if mibBuilder.loadTexts:
    svcVTEPEgrVNITable.setStatus("obsolete")
_SvcVTEPEgrVNIEntry_Object = MibTableRow
svcVTEPEgrVNIEntry = _SvcVTEPEgrVNIEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161, 1)
)
svcVTEPEgrVNIEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"),
)
if mibBuilder.loadTexts:
    svcVTEPEgrVNIEntry.setStatus("current")
_SvcVTEPEgrVNIVTEPAddrType_Type = InetAddressType
_SvcVTEPEgrVNIVTEPAddrType_Object = MibTableColumn
svcVTEPEgrVNIVTEPAddrType = _SvcVTEPEgrVNIVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161, 1, 1),
    _SvcVTEPEgrVNIVTEPAddrType_Type()
)
svcVTEPEgrVNIVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPEgrVNIVTEPAddrType.setStatus("obsolete")


class _SvcVTEPEgrVNIVTEPAddress_Type(InetAddress):
    """Custom type svcVTEPEgrVNIVTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVTEPEgrVNIVTEPAddress_Type.__name__ = "InetAddress"
_SvcVTEPEgrVNIVTEPAddress_Object = MibTableColumn
svcVTEPEgrVNIVTEPAddress = _SvcVTEPEgrVNIVTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161, 1, 2),
    _SvcVTEPEgrVNIVTEPAddress_Type()
)
svcVTEPEgrVNIVTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPEgrVNIVTEPAddress.setStatus("obsolete")
_SvcVTEPEgrVNIEgrVNI_Type = Unsigned32
_SvcVTEPEgrVNIEgrVNI_Object = MibTableColumn
svcVTEPEgrVNIEgrVNI = _SvcVTEPEgrVNIEgrVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161, 1, 3),
    _SvcVTEPEgrVNIEgrVNI_Type()
)
svcVTEPEgrVNIEgrVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPEgrVNIEgrVNI.setStatus("obsolete")
_SvcVTEPEgrVNISvcId_Type = TmnxServId
_SvcVTEPEgrVNISvcId_Object = MibTableColumn
svcVTEPEgrVNISvcId = _SvcVTEPEgrVNISvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 161, 1, 4),
    _SvcVTEPEgrVNISvcId_Type()
)
svcVTEPEgrVNISvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVTEPEgrVNISvcId.setStatus("obsolete")
_SvcTlsPbbMldSnpgMRtrTable_Object = MibTable
svcTlsPbbMldSnpgMRtrTable = _SvcTlsPbbMldSnpgMRtrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162)
)
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrTable.setStatus("current")
_SvcTlsPbbMldSnpgMRtrEntry_Object = MibTableRow
svcTlsPbbMldSnpgMRtrEntry = _SvcTlsPbbMldSnpgMRtrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1)
)
svcTlsPbbMldSnpgMRtrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcTlsPbbMldSnpgMRtrSvcIdIVpls"),
    (0, "TIMETRA-SERV-MIB", "svcTlsPbbMldSnpgMRtrSvcIdBVpls"),
    (1, "TIMETRA-SERV-MIB", "svcTlsPbbMldSnpgMRtrMacName"),
)
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrEntry.setStatus("current")
_SvcTlsPbbMldSnpgMRtrSvcIdIVpls_Type = TmnxServId
_SvcTlsPbbMldSnpgMRtrSvcIdIVpls_Object = MibTableColumn
svcTlsPbbMldSnpgMRtrSvcIdIVpls = _SvcTlsPbbMldSnpgMRtrSvcIdIVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1, 1),
    _SvcTlsPbbMldSnpgMRtrSvcIdIVpls_Type()
)
svcTlsPbbMldSnpgMRtrSvcIdIVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrSvcIdIVpls.setStatus("current")
_SvcTlsPbbMldSnpgMRtrSvcIdBVpls_Type = TmnxServId
_SvcTlsPbbMldSnpgMRtrSvcIdBVpls_Object = MibTableColumn
svcTlsPbbMldSnpgMRtrSvcIdBVpls = _SvcTlsPbbMldSnpgMRtrSvcIdBVpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1, 2),
    _SvcTlsPbbMldSnpgMRtrSvcIdBVpls_Type()
)
svcTlsPbbMldSnpgMRtrSvcIdBVpls.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrSvcIdBVpls.setStatus("current")
_SvcTlsPbbMldSnpgMRtrMacName_Type = TNamedItem
_SvcTlsPbbMldSnpgMRtrMacName_Object = MibTableColumn
svcTlsPbbMldSnpgMRtrMacName = _SvcTlsPbbMldSnpgMRtrMacName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1, 3),
    _SvcTlsPbbMldSnpgMRtrMacName_Type()
)
svcTlsPbbMldSnpgMRtrMacName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrMacName.setStatus("current")
_SvcTlsPbbMldSnpgMRtrRowStatus_Type = RowStatus
_SvcTlsPbbMldSnpgMRtrRowStatus_Object = MibTableColumn
svcTlsPbbMldSnpgMRtrRowStatus = _SvcTlsPbbMldSnpgMRtrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1, 4),
    _SvcTlsPbbMldSnpgMRtrRowStatus_Type()
)
svcTlsPbbMldSnpgMRtrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrRowStatus.setStatus("current")
_SvcTlsPbbMldSnpgMRtrLastCh_Type = TimeStamp
_SvcTlsPbbMldSnpgMRtrLastCh_Object = MibTableColumn
svcTlsPbbMldSnpgMRtrLastCh = _SvcTlsPbbMldSnpgMRtrLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 162, 1, 5),
    _SvcTlsPbbMldSnpgMRtrLastCh_Type()
)
svcTlsPbbMldSnpgMRtrLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsPbbMldSnpgMRtrLastCh.setStatus("current")
_TmnxSvcIesIfIpoeTable_Object = MibTable
tmnxSvcIesIfIpoeTable = _TmnxSvcIesIfIpoeTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163)
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeTable.setStatus("current")
_TmnxSvcIesIfIpoeEntry_Object = MibTableRow
tmnxSvcIesIfIpoeEntry = _TmnxSvcIesIfIpoeEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1)
)
tmnxSvcIesIfIpoeEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeEntry.setStatus("current")
_TmnxSvcIesIfIpoeLastChange_Type = TimeStamp
_TmnxSvcIesIfIpoeLastChange_Object = MibTableColumn
tmnxSvcIesIfIpoeLastChange = _TmnxSvcIesIfIpoeLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 1),
    _TmnxSvcIesIfIpoeLastChange_Type()
)
tmnxSvcIesIfIpoeLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeLastChange.setStatus("current")


class _TmnxSvcIesIfIpoeAdminState_Type(TmnxEnabledDisabledAdminState):
    """Custom type tmnxSvcIesIfIpoeAdminState based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_TmnxSvcIesIfIpoeAdminState_Type.__name__ = "TmnxEnabledDisabledAdminState"
_TmnxSvcIesIfIpoeAdminState_Object = MibTableColumn
tmnxSvcIesIfIpoeAdminState = _TmnxSvcIesIfIpoeAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 2),
    _TmnxSvcIesIfIpoeAdminState_Type()
)
tmnxSvcIesIfIpoeAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeAdminState.setStatus("current")


class _TmnxSvcIesIfIpoeDescription_Type(TItemDescription):
    """Custom type tmnxSvcIesIfIpoeDescription based on TItemDescription"""
    defaultValue = OctetString("")


_TmnxSvcIesIfIpoeDescription_Type.__name__ = "TItemDescription"
_TmnxSvcIesIfIpoeDescription_Object = MibTableColumn
tmnxSvcIesIfIpoeDescription = _TmnxSvcIesIfIpoeDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 3),
    _TmnxSvcIesIfIpoeDescription_Type()
)
tmnxSvcIesIfIpoeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeDescription.setStatus("current")


class _TmnxSvcIesIfIpoePolicy_Type(TNamedItemOrEmpty):
    """Custom type tmnxSvcIesIfIpoePolicy based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSvcIesIfIpoePolicy_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSvcIesIfIpoePolicy_Object = MibTableColumn
tmnxSvcIesIfIpoePolicy = _TmnxSvcIesIfIpoePolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 4),
    _TmnxSvcIesIfIpoePolicy_Type()
)
tmnxSvcIesIfIpoePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoePolicy.setStatus("current")


class _TmnxSvcIesIfIpoeUserDb_Type(TNamedItemOrEmpty):
    """Custom type tmnxSvcIesIfIpoeUserDb based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSvcIesIfIpoeUserDb_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSvcIesIfIpoeUserDb_Object = MibTableColumn
tmnxSvcIesIfIpoeUserDb = _TmnxSvcIesIfIpoeUserDb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 5),
    _TmnxSvcIesIfIpoeUserDb_Type()
)
tmnxSvcIesIfIpoeUserDb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeUserDb.setStatus("current")


class _TmnxSvcIesIfIpoeSessionLimit_Type(Unsigned32):
    """Custom type tmnxSvcIesIfIpoeSessionLimit based on Unsigned32"""
    defaultValue = 4294967295

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 500000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TmnxSvcIesIfIpoeSessionLimit_Type.__name__ = "Unsigned32"
_TmnxSvcIesIfIpoeSessionLimit_Object = MibTableColumn
tmnxSvcIesIfIpoeSessionLimit = _TmnxSvcIesIfIpoeSessionLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 6),
    _TmnxSvcIesIfIpoeSessionLimit_Type()
)
tmnxSvcIesIfIpoeSessionLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeSessionLimit.setStatus("current")


class _TmnxSvcIesIfIpoeSapSessionLimit_Type(Unsigned32):
    """Custom type tmnxSvcIesIfIpoeSapSessionLimit based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_TmnxSvcIesIfIpoeSapSessionLimit_Type.__name__ = "Unsigned32"
_TmnxSvcIesIfIpoeSapSessionLimit_Object = MibTableColumn
tmnxSvcIesIfIpoeSapSessionLimit = _TmnxSvcIesIfIpoeSapSessionLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 7),
    _TmnxSvcIesIfIpoeSapSessionLimit_Type()
)
tmnxSvcIesIfIpoeSapSessionLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeSapSessionLimit.setStatus("current")


class _TmnxSvcIesIfIpoeMinAuthInterval_Type(Unsigned32):
    """Custom type tmnxSvcIesIfIpoeMinAuthInterval based on Unsigned32"""
    defaultValue = 4294967295

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32000000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TmnxSvcIesIfIpoeMinAuthInterval_Type.__name__ = "Unsigned32"
_TmnxSvcIesIfIpoeMinAuthInterval_Object = MibTableColumn
tmnxSvcIesIfIpoeMinAuthInterval = _TmnxSvcIesIfIpoeMinAuthInterval_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 8),
    _TmnxSvcIesIfIpoeMinAuthInterval_Type()
)
tmnxSvcIesIfIpoeMinAuthInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeMinAuthInterval.setStatus("current")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeMinAuthInterval.setUnits("seconds")


class _TmnxSvcIesIfIpoeForceAuth_Type(Bits):
    """Custom type tmnxSvcIesIfIpoeForceAuth based on Bits"""
    defaultBinValue = "011"

    namedValues = NamedValues(
        *(("disabled", 0),
          ("cidChange", 1),
          ("ridChange", 2))
    )

_TmnxSvcIesIfIpoeForceAuth_Type.__name__ = "Bits"
_TmnxSvcIesIfIpoeForceAuth_Object = MibTableColumn
tmnxSvcIesIfIpoeForceAuth = _TmnxSvcIesIfIpoeForceAuth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 9),
    _TmnxSvcIesIfIpoeForceAuth_Type()
)
tmnxSvcIesIfIpoeForceAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeForceAuth.setStatus("current")


class _TmnxSvcIesIfIpoeRadSessTimeout_Type(Integer32):
    """Custom type tmnxSvcIesIfIpoeRadSessTimeout based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("absolute", 1),
          ("ignore", 2),
          ("backwardsCompatible", 3))
    )


_TmnxSvcIesIfIpoeRadSessTimeout_Type.__name__ = "Integer32"
_TmnxSvcIesIfIpoeRadSessTimeout_Object = MibTableColumn
tmnxSvcIesIfIpoeRadSessTimeout = _TmnxSvcIesIfIpoeRadSessTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 10),
    _TmnxSvcIesIfIpoeRadSessTimeout_Type()
)
tmnxSvcIesIfIpoeRadSessTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeRadSessTimeout.setStatus("current")


class _TmnxSvcIesIfIpoeStatelessRed_Type(TmnxEnabledDisabled):
    """Custom type tmnxSvcIesIfIpoeStatelessRed based on TmnxEnabledDisabled"""
    defaultValue = 2


_TmnxSvcIesIfIpoeStatelessRed_Type.__name__ = "TmnxEnabledDisabled"
_TmnxSvcIesIfIpoeStatelessRed_Object = MibTableColumn
tmnxSvcIesIfIpoeStatelessRed = _TmnxSvcIesIfIpoeStatelessRed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 163, 1, 11),
    _TmnxSvcIesIfIpoeStatelessRed_Type()
)
tmnxSvcIesIfIpoeStatelessRed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeStatelessRed.setStatus("current")
_SvcVsdDomainStatTable_Object = MibTable
svcVsdDomainStatTable = _SvcVsdDomainStatTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165)
)
if mibBuilder.loadTexts:
    svcVsdDomainStatTable.setStatus("current")
_SvcVsdDomainStatEntry_Object = MibTableRow
svcVsdDomainStatEntry = _SvcVsdDomainStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1)
)
svcVsdDomainStatEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcVsdDomainName"),
)
if mibBuilder.loadTexts:
    svcVsdDomainStatEntry.setStatus("current")
_SvcVsdDomainStatCfgChgEvtRcvd_Type = Unsigned32
_SvcVsdDomainStatCfgChgEvtRcvd_Object = MibTableColumn
svcVsdDomainStatCfgChgEvtRcvd = _SvcVsdDomainStatCfgChgEvtRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 1),
    _SvcVsdDomainStatCfgChgEvtRcvd_Type()
)
svcVsdDomainStatCfgChgEvtRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatCfgChgEvtRcvd.setStatus("current")
_SvcVsdDomainStatLastCfgChgEvt_Type = TimeStamp
_SvcVsdDomainStatLastCfgChgEvt_Object = MibTableColumn
svcVsdDomainStatLastCfgChgEvt = _SvcVsdDomainStatLastCfgChgEvt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 2),
    _SvcVsdDomainStatLastCfgChgEvt_Type()
)
svcVsdDomainStatLastCfgChgEvt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatLastCfgChgEvt.setStatus("current")
_SvcVsdDomainStatCfgUpdRcvd_Type = Unsigned32
_SvcVsdDomainStatCfgUpdRcvd_Object = MibTableColumn
svcVsdDomainStatCfgUpdRcvd = _SvcVsdDomainStatCfgUpdRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 3),
    _SvcVsdDomainStatCfgUpdRcvd_Type()
)
svcVsdDomainStatCfgUpdRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatCfgUpdRcvd.setStatus("current")
_SvcVsdDomainStatLastCfgUpdRcvd_Type = TimeStamp
_SvcVsdDomainStatLastCfgUpdRcvd_Object = MibTableColumn
svcVsdDomainStatLastCfgUpdRcvd = _SvcVsdDomainStatLastCfgUpdRcvd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 4),
    _SvcVsdDomainStatLastCfgUpdRcvd_Type()
)
svcVsdDomainStatLastCfgUpdRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatLastCfgUpdRcvd.setStatus("current")
_SvcVsdDomainStatLastCfgUpdDone_Type = TimeStamp
_SvcVsdDomainStatLastCfgUpdDone_Object = MibTableColumn
svcVsdDomainStatLastCfgUpdDone = _SvcVsdDomainStatLastCfgUpdDone_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 5),
    _SvcVsdDomainStatLastCfgUpdDone_Type()
)
svcVsdDomainStatLastCfgUpdDone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatLastCfgUpdDone.setStatus("current")
_SvcVsdDomainStatCfgSuccess_Type = Unsigned32
_SvcVsdDomainStatCfgSuccess_Object = MibTableColumn
svcVsdDomainStatCfgSuccess = _SvcVsdDomainStatCfgSuccess_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 6),
    _SvcVsdDomainStatCfgSuccess_Type()
)
svcVsdDomainStatCfgSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatCfgSuccess.setStatus("current")
_SvcVsdDomainStatCfgFailed_Type = Unsigned32
_SvcVsdDomainStatCfgFailed_Object = MibTableColumn
svcVsdDomainStatCfgFailed = _SvcVsdDomainStatCfgFailed_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 165, 1, 7),
    _SvcVsdDomainStatCfgFailed_Type()
)
svcVsdDomainStatCfgFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainStatCfgFailed.setStatus("current")
_SvcTlsProxyArpCfgTable_Object = MibTable
svcTlsProxyArpCfgTable = _SvcTlsProxyArpCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgTable.setStatus("current")
_SvcTlsProxyArpCfgEntry_Object = MibTableRow
svcTlsProxyArpCfgEntry = _SvcTlsProxyArpCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1)
)
svcTlsProxyArpCfgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgEntry.setStatus("current")
_SvcTlsProxyArpCfgRowStatus_Type = RowStatus
_SvcTlsProxyArpCfgRowStatus_Object = MibTableColumn
svcTlsProxyArpCfgRowStatus = _SvcTlsProxyArpCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 1),
    _SvcTlsProxyArpCfgRowStatus_Type()
)
svcTlsProxyArpCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgRowStatus.setStatus("current")
_SvcTlsProxyArpCfgLastChgd_Type = TimeStamp
_SvcTlsProxyArpCfgLastChgd_Object = MibTableColumn
svcTlsProxyArpCfgLastChgd = _SvcTlsProxyArpCfgLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 2),
    _SvcTlsProxyArpCfgLastChgd_Type()
)
svcTlsProxyArpCfgLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgLastChgd.setStatus("current")


class _SvcTlsProxyArpCfgAdminState_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsProxyArpCfgAdminState based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsProxyArpCfgAdminState_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsProxyArpCfgAdminState_Object = MibTableColumn
svcTlsProxyArpCfgAdminState = _SvcTlsProxyArpCfgAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 3),
    _SvcTlsProxyArpCfgAdminState_Type()
)
svcTlsProxyArpCfgAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgAdminState.setStatus("current")


class _SvcTlsProxyArpDynPopulate_Type(TruthValue):
    """Custom type svcTlsProxyArpDynPopulate based on TruthValue"""
    defaultValue = 2


_SvcTlsProxyArpDynPopulate_Type.__name__ = "TruthValue"
_SvcTlsProxyArpDynPopulate_Object = MibTableColumn
svcTlsProxyArpDynPopulate = _SvcTlsProxyArpDynPopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 4),
    _SvcTlsProxyArpDynPopulate_Type()
)
svcTlsProxyArpDynPopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynPopulate.setStatus("current")


class _SvcTlsProxyArpAgeTime_Type(Integer32):
    """Custom type svcTlsProxyArpAgeTime based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 86400),
    )


_SvcTlsProxyArpAgeTime_Type.__name__ = "Integer32"
_SvcTlsProxyArpAgeTime_Object = MibTableColumn
svcTlsProxyArpAgeTime = _SvcTlsProxyArpAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 5),
    _SvcTlsProxyArpAgeTime_Type()
)
svcTlsProxyArpAgeTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpAgeTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyArpAgeTime.setUnits("seconds")


class _SvcTlsProxyArpSendRefresh_Type(Integer32):
    """Custom type svcTlsProxyArpSendRefresh based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(120, 86400),
    )


_SvcTlsProxyArpSendRefresh_Type.__name__ = "Integer32"
_SvcTlsProxyArpSendRefresh_Object = MibTableColumn
svcTlsProxyArpSendRefresh = _SvcTlsProxyArpSendRefresh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 6),
    _SvcTlsProxyArpSendRefresh_Type()
)
svcTlsProxyArpSendRefresh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpSendRefresh.setStatus("current")


class _SvcTlsProxyArpAntiSpoofingMac_Type(MacAddress):
    """Custom type svcTlsProxyArpAntiSpoofingMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcTlsProxyArpAntiSpoofingMac_Type.__name__ = "MacAddress"
_SvcTlsProxyArpAntiSpoofingMac_Object = MibTableColumn
svcTlsProxyArpAntiSpoofingMac = _SvcTlsProxyArpAntiSpoofingMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 7),
    _SvcTlsProxyArpAntiSpoofingMac_Type()
)
svcTlsProxyArpAntiSpoofingMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpAntiSpoofingMac.setStatus("current")


class _SvcTlsProxyArpDupDetectWindow_Type(Integer32):
    """Custom type svcTlsProxyArpDupDetectWindow based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_SvcTlsProxyArpDupDetectWindow_Type.__name__ = "Integer32"
_SvcTlsProxyArpDupDetectWindow_Object = MibTableColumn
svcTlsProxyArpDupDetectWindow = _SvcTlsProxyArpDupDetectWindow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 8),
    _SvcTlsProxyArpDupDetectWindow_Type()
)
svcTlsProxyArpDupDetectWindow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpDupDetectWindow.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyArpDupDetectWindow.setUnits("minutes")


class _SvcTlsProxyArpAntiSpoofNumMoves_Type(Integer32):
    """Custom type svcTlsProxyArpAntiSpoofNumMoves based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SvcTlsProxyArpAntiSpoofNumMoves_Type.__name__ = "Integer32"
_SvcTlsProxyArpAntiSpoofNumMoves_Object = MibTableColumn
svcTlsProxyArpAntiSpoofNumMoves = _SvcTlsProxyArpAntiSpoofNumMoves_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 9),
    _SvcTlsProxyArpAntiSpoofNumMoves_Type()
)
svcTlsProxyArpAntiSpoofNumMoves.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpAntiSpoofNumMoves.setStatus("current")


class _SvcTlsProxyArpAntiSpoofHoldDown_Type(Integer32):
    """Custom type svcTlsProxyArpAntiSpoofHoldDown based on Integer32"""
    defaultValue = 9

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(2, 60),
    )


_SvcTlsProxyArpAntiSpoofHoldDown_Type.__name__ = "Integer32"
_SvcTlsProxyArpAntiSpoofHoldDown_Object = MibTableColumn
svcTlsProxyArpAntiSpoofHoldDown = _SvcTlsProxyArpAntiSpoofHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 10),
    _SvcTlsProxyArpAntiSpoofHoldDown_Type()
)
svcTlsProxyArpAntiSpoofHoldDown.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpAntiSpoofHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyArpAntiSpoofHoldDown.setUnits("minutes")


class _SvcTlsProxyArpUnknReqFloodEvpn_Type(TruthValue):
    """Custom type svcTlsProxyArpUnknReqFloodEvpn based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyArpUnknReqFloodEvpn_Type.__name__ = "TruthValue"
_SvcTlsProxyArpUnknReqFloodEvpn_Object = MibTableColumn
svcTlsProxyArpUnknReqFloodEvpn = _SvcTlsProxyArpUnknReqFloodEvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 11),
    _SvcTlsProxyArpUnknReqFloodEvpn_Type()
)
svcTlsProxyArpUnknReqFloodEvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpUnknReqFloodEvpn.setStatus("current")


class _SvcTlsProxyArpTableSize_Type(Integer32):
    """Custom type svcTlsProxyArpTableSize based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16383),
    )


_SvcTlsProxyArpTableSize_Type.__name__ = "Integer32"
_SvcTlsProxyArpTableSize_Object = MibTableColumn
svcTlsProxyArpTableSize = _SvcTlsProxyArpTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 12),
    _SvcTlsProxyArpTableSize_Type()
)
svcTlsProxyArpTableSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpTableSize.setStatus("current")


class _SvcTlsProxyArpGarpFloodEvpn_Type(TruthValue):
    """Custom type svcTlsProxyArpGarpFloodEvpn based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyArpGarpFloodEvpn_Type.__name__ = "TruthValue"
_SvcTlsProxyArpGarpFloodEvpn_Object = MibTableColumn
svcTlsProxyArpGarpFloodEvpn = _SvcTlsProxyArpGarpFloodEvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 13),
    _SvcTlsProxyArpGarpFloodEvpn_Type()
)
svcTlsProxyArpGarpFloodEvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpGarpFloodEvpn.setStatus("current")


class _SvcTlsProxyArpCfgStaticBH_Type(TruthValue):
    """Custom type svcTlsProxyArpCfgStaticBH based on TruthValue"""
    defaultValue = 2


_SvcTlsProxyArpCfgStaticBH_Type.__name__ = "TruthValue"
_SvcTlsProxyArpCfgStaticBH_Object = MibTableColumn
svcTlsProxyArpCfgStaticBH = _SvcTlsProxyArpCfgStaticBH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 14),
    _SvcTlsProxyArpCfgStaticBH_Type()
)
svcTlsProxyArpCfgStaticBH.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgStaticBH.setStatus("current")


class _SvcTlsProxyArpCfgRouteTag_Type(Unsigned32):
    """Custom type svcTlsProxyArpCfgRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_SvcTlsProxyArpCfgRouteTag_Type.__name__ = "Unsigned32"
_SvcTlsProxyArpCfgRouteTag_Object = MibTableColumn
svcTlsProxyArpCfgRouteTag = _SvcTlsProxyArpCfgRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 166, 1, 15),
    _SvcTlsProxyArpCfgRouteTag_Type()
)
svcTlsProxyArpCfgRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgRouteTag.setStatus("current")
_SvcVprnInfoTable_Object = MibTable
svcVprnInfoTable = _SvcVprnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167)
)
if mibBuilder.loadTexts:
    svcVprnInfoTable.setStatus("current")
_SvcVprnInfoEntry_Object = MibTableRow
svcVprnInfoEntry = _SvcVprnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1)
)
svcVprnInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnInfoEntry.setStatus("current")
_SvcVprnInfoEntryLastChanged_Type = TimeStamp
_SvcVprnInfoEntryLastChanged_Object = MibTableColumn
svcVprnInfoEntryLastChanged = _SvcVprnInfoEntryLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 1),
    _SvcVprnInfoEntryLastChanged_Type()
)
svcVprnInfoEntryLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnInfoEntryLastChanged.setStatus("current")


class _SvcNetIngQosPolicyId_Type(TPolicyID):
    """Custom type svcNetIngQosPolicyId based on TPolicyID"""
    defaultValue = 0

    subtypeSpec = TPolicyID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcNetIngQosPolicyId_Type.__name__ = "TPolicyID"
_SvcNetIngQosPolicyId_Object = MibTableColumn
svcNetIngQosPolicyId = _SvcNetIngQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 2),
    _SvcNetIngQosPolicyId_Type()
)
svcNetIngQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngQosPolicyId.setStatus("current")


class _SvcNetIngQosFPQGrp_Type(TNamedItemOrEmpty):
    """Custom type svcNetIngQosFPQGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcNetIngQosFPQGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcNetIngQosFPQGrp_Object = MibTableColumn
svcNetIngQosFPQGrp = _SvcNetIngQosFPQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 3),
    _SvcNetIngQosFPQGrp_Type()
)
svcNetIngQosFPQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngQosFPQGrp.setStatus("current")


class _SvcNetIngQosFPQGrpInstanceId_Type(TQosQGrpInstanceIDorZero):
    """Custom type svcNetIngQosFPQGrpInstanceId based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_SvcNetIngQosFPQGrpInstanceId_Type.__name__ = "TQosQGrpInstanceIDorZero"
_SvcNetIngQosFPQGrpInstanceId_Object = MibTableColumn
svcNetIngQosFPQGrpInstanceId = _SvcNetIngQosFPQGrpInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 4),
    _SvcNetIngQosFPQGrpInstanceId_Type()
)
svcNetIngQosFPQGrpInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngQosFPQGrpInstanceId.setStatus("current")


class _SvcNetIngIPFilterId_Type(TConfigOrVsdFilterID):
    """Custom type svcNetIngIPFilterId based on TConfigOrVsdFilterID"""
    defaultValue = 0


_SvcNetIngIPFilterId_Type.__name__ = "TConfigOrVsdFilterID"
_SvcNetIngIPFilterId_Object = MibTableColumn
svcNetIngIPFilterId = _SvcNetIngIPFilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 5),
    _SvcNetIngIPFilterId_Type()
)
svcNetIngIPFilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngIPFilterId.setStatus("current")


class _SvcNetIngIPv6FilterId_Type(TConfigOrVsdFilterID):
    """Custom type svcNetIngIPv6FilterId based on TConfigOrVsdFilterID"""
    defaultValue = 0


_SvcNetIngIPv6FilterId_Type.__name__ = "TConfigOrVsdFilterID"
_SvcNetIngIPv6FilterId_Object = MibTableColumn
svcNetIngIPv6FilterId = _SvcNetIngIPv6FilterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 6),
    _SvcNetIngIPv6FilterId_Type()
)
svcNetIngIPv6FilterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngIPv6FilterId.setStatus("current")


class _SvcNetIngUrpfCheckState_Type(TmnxEnabledDisabled):
    """Custom type svcNetIngUrpfCheckState based on TmnxEnabledDisabled"""
    defaultValue = 1


_SvcNetIngUrpfCheckState_Type.__name__ = "TmnxEnabledDisabled"
_SvcNetIngUrpfCheckState_Object = MibTableColumn
svcNetIngUrpfCheckState = _SvcNetIngUrpfCheckState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 7),
    _SvcNetIngUrpfCheckState_Type()
)
svcNetIngUrpfCheckState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngUrpfCheckState.setStatus("current")


class _SvcNetIngIngressClassPlcy_Type(TLNamedItemOrEmpty):
    """Custom type svcNetIngIngressClassPlcy based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcNetIngIngressClassPlcy_Type.__name__ = "TLNamedItemOrEmpty"
_SvcNetIngIngressClassPlcy_Object = MibTableColumn
svcNetIngIngressClassPlcy = _SvcNetIngIngressClassPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 167, 1, 8),
    _SvcNetIngIngressClassPlcy_Type()
)
svcNetIngIngressClassPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcNetIngIngressClassPlcy.setStatus("current")
_SvcTlsProxyArpStaticTable_Object = MibTable
svcTlsProxyArpStaticTable = _SvcTlsProxyArpStaticTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticTable.setStatus("current")
_SvcTlsProxyArpStaticEntry_Object = MibTableRow
svcTlsProxyArpStaticEntry = _SvcTlsProxyArpStaticEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1)
)
svcTlsProxyArpStaticEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpStaticInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpStaticInetAddress"),
)
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticEntry.setStatus("current")
_SvcTlsProxyArpStaticInetAddrType_Type = InetAddressType
_SvcTlsProxyArpStaticInetAddrType_Object = MibTableColumn
svcTlsProxyArpStaticInetAddrType = _SvcTlsProxyArpStaticInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1, 1),
    _SvcTlsProxyArpStaticInetAddrType_Type()
)
svcTlsProxyArpStaticInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticInetAddrType.setStatus("current")


class _SvcTlsProxyArpStaticInetAddress_Type(InetAddress):
    """Custom type svcTlsProxyArpStaticInetAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_SvcTlsProxyArpStaticInetAddress_Type.__name__ = "InetAddress"
_SvcTlsProxyArpStaticInetAddress_Object = MibTableColumn
svcTlsProxyArpStaticInetAddress = _SvcTlsProxyArpStaticInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1, 2),
    _SvcTlsProxyArpStaticInetAddress_Type()
)
svcTlsProxyArpStaticInetAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticInetAddress.setStatus("current")
_SvcTlsProxyArpStaticRowStatus_Type = RowStatus
_SvcTlsProxyArpStaticRowStatus_Object = MibTableColumn
svcTlsProxyArpStaticRowStatus = _SvcTlsProxyArpStaticRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1, 3),
    _SvcTlsProxyArpStaticRowStatus_Type()
)
svcTlsProxyArpStaticRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticRowStatus.setStatus("current")
_SvcTlsProxyArpStaticLastChgd_Type = TimeStamp
_SvcTlsProxyArpStaticLastChgd_Object = MibTableColumn
svcTlsProxyArpStaticLastChgd = _SvcTlsProxyArpStaticLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1, 4),
    _SvcTlsProxyArpStaticLastChgd_Type()
)
svcTlsProxyArpStaticLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticLastChgd.setStatus("current")


class _SvcTlsProxyArpStaticMac_Type(MacAddress):
    """Custom type svcTlsProxyArpStaticMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcTlsProxyArpStaticMac_Type.__name__ = "MacAddress"
_SvcTlsProxyArpStaticMac_Object = MibTableColumn
svcTlsProxyArpStaticMac = _SvcTlsProxyArpStaticMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 168, 1, 5),
    _SvcTlsProxyArpStaticMac_Type()
)
svcTlsProxyArpStaticMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticMac.setStatus("current")
_SvcTlsProxyNdCfgTable_Object = MibTable
svcTlsProxyNdCfgTable = _SvcTlsProxyNdCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgTable.setStatus("current")
_SvcTlsProxyNdCfgEntry_Object = MibTableRow
svcTlsProxyNdCfgEntry = _SvcTlsProxyNdCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1)
)
svcTlsProxyNdCfgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgEntry.setStatus("current")
_SvcTlsProxyNdCfgRowStatus_Type = RowStatus
_SvcTlsProxyNdCfgRowStatus_Object = MibTableColumn
svcTlsProxyNdCfgRowStatus = _SvcTlsProxyNdCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 1),
    _SvcTlsProxyNdCfgRowStatus_Type()
)
svcTlsProxyNdCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgRowStatus.setStatus("current")
_SvcTlsProxyNdCfgLastChgd_Type = TimeStamp
_SvcTlsProxyNdCfgLastChgd_Object = MibTableColumn
svcTlsProxyNdCfgLastChgd = _SvcTlsProxyNdCfgLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 2),
    _SvcTlsProxyNdCfgLastChgd_Type()
)
svcTlsProxyNdCfgLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgLastChgd.setStatus("current")


class _SvcTlsProxyNdCfgAdminState_Type(TmnxEnabledDisabledAdminState):
    """Custom type svcTlsProxyNdCfgAdminState based on TmnxEnabledDisabledAdminState"""
    defaultValue = 2


_SvcTlsProxyNdCfgAdminState_Type.__name__ = "TmnxEnabledDisabledAdminState"
_SvcTlsProxyNdCfgAdminState_Object = MibTableColumn
svcTlsProxyNdCfgAdminState = _SvcTlsProxyNdCfgAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 3),
    _SvcTlsProxyNdCfgAdminState_Type()
)
svcTlsProxyNdCfgAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgAdminState.setStatus("current")


class _SvcTlsProxyNdDynPopulate_Type(TruthValue):
    """Custom type svcTlsProxyNdDynPopulate based on TruthValue"""
    defaultValue = 2


_SvcTlsProxyNdDynPopulate_Type.__name__ = "TruthValue"
_SvcTlsProxyNdDynPopulate_Object = MibTableColumn
svcTlsProxyNdDynPopulate = _SvcTlsProxyNdDynPopulate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 4),
    _SvcTlsProxyNdDynPopulate_Type()
)
svcTlsProxyNdDynPopulate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynPopulate.setStatus("current")


class _SvcTlsProxyNdAgeTime_Type(Integer32):
    """Custom type svcTlsProxyNdAgeTime based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 86400),
    )


_SvcTlsProxyNdAgeTime_Type.__name__ = "Integer32"
_SvcTlsProxyNdAgeTime_Object = MibTableColumn
svcTlsProxyNdAgeTime = _SvcTlsProxyNdAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 5),
    _SvcTlsProxyNdAgeTime_Type()
)
svcTlsProxyNdAgeTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdAgeTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyNdAgeTime.setUnits("seconds")


class _SvcTlsProxyNdSendRefresh_Type(Integer32):
    """Custom type svcTlsProxyNdSendRefresh based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(120, 86400),
    )


_SvcTlsProxyNdSendRefresh_Type.__name__ = "Integer32"
_SvcTlsProxyNdSendRefresh_Object = MibTableColumn
svcTlsProxyNdSendRefresh = _SvcTlsProxyNdSendRefresh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 6),
    _SvcTlsProxyNdSendRefresh_Type()
)
svcTlsProxyNdSendRefresh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdSendRefresh.setStatus("current")


class _SvcTlsProxyNdAntiSpoofingMac_Type(MacAddress):
    """Custom type svcTlsProxyNdAntiSpoofingMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcTlsProxyNdAntiSpoofingMac_Type.__name__ = "MacAddress"
_SvcTlsProxyNdAntiSpoofingMac_Object = MibTableColumn
svcTlsProxyNdAntiSpoofingMac = _SvcTlsProxyNdAntiSpoofingMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 7),
    _SvcTlsProxyNdAntiSpoofingMac_Type()
)
svcTlsProxyNdAntiSpoofingMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdAntiSpoofingMac.setStatus("current")


class _SvcTlsProxyNdDupDetectWindow_Type(Integer32):
    """Custom type svcTlsProxyNdDupDetectWindow based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_SvcTlsProxyNdDupDetectWindow_Type.__name__ = "Integer32"
_SvcTlsProxyNdDupDetectWindow_Object = MibTableColumn
svcTlsProxyNdDupDetectWindow = _SvcTlsProxyNdDupDetectWindow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 8),
    _SvcTlsProxyNdDupDetectWindow_Type()
)
svcTlsProxyNdDupDetectWindow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdDupDetectWindow.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyNdDupDetectWindow.setUnits("minutes")


class _SvcTlsProxyNdAntiSpoofNumMoves_Type(Integer32):
    """Custom type svcTlsProxyNdAntiSpoofNumMoves based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SvcTlsProxyNdAntiSpoofNumMoves_Type.__name__ = "Integer32"
_SvcTlsProxyNdAntiSpoofNumMoves_Object = MibTableColumn
svcTlsProxyNdAntiSpoofNumMoves = _SvcTlsProxyNdAntiSpoofNumMoves_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 9),
    _SvcTlsProxyNdAntiSpoofNumMoves_Type()
)
svcTlsProxyNdAntiSpoofNumMoves.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdAntiSpoofNumMoves.setStatus("current")


class _SvcTlsProxyNdAntiSpoofHoldDown_Type(Integer32):
    """Custom type svcTlsProxyNdAntiSpoofHoldDown based on Integer32"""
    defaultValue = 9

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(2, 60),
    )


_SvcTlsProxyNdAntiSpoofHoldDown_Type.__name__ = "Integer32"
_SvcTlsProxyNdAntiSpoofHoldDown_Object = MibTableColumn
svcTlsProxyNdAntiSpoofHoldDown = _SvcTlsProxyNdAntiSpoofHoldDown_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 10),
    _SvcTlsProxyNdAntiSpoofHoldDown_Type()
)
svcTlsProxyNdAntiSpoofHoldDown.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdAntiSpoofHoldDown.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyNdAntiSpoofHoldDown.setUnits("minutes")


class _SvcTlsProxyNdUnknSolFloodEvpn_Type(TruthValue):
    """Custom type svcTlsProxyNdUnknSolFloodEvpn based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyNdUnknSolFloodEvpn_Type.__name__ = "TruthValue"
_SvcTlsProxyNdUnknSolFloodEvpn_Object = MibTableColumn
svcTlsProxyNdUnknSolFloodEvpn = _SvcTlsProxyNdUnknSolFloodEvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 11),
    _SvcTlsProxyNdUnknSolFloodEvpn_Type()
)
svcTlsProxyNdUnknSolFloodEvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdUnknSolFloodEvpn.setStatus("current")


class _SvcTlsProxyNdTableSize_Type(Integer32):
    """Custom type svcTlsProxyNdTableSize based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16383),
    )


_SvcTlsProxyNdTableSize_Type.__name__ = "Integer32"
_SvcTlsProxyNdTableSize_Object = MibTableColumn
svcTlsProxyNdTableSize = _SvcTlsProxyNdTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 12),
    _SvcTlsProxyNdTableSize_Type()
)
svcTlsProxyNdTableSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdTableSize.setStatus("current")


class _SvcTlsProxyNdRtrUnSolNAFloodEvpn_Type(TruthValue):
    """Custom type svcTlsProxyNdRtrUnSolNAFloodEvpn based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyNdRtrUnSolNAFloodEvpn_Type.__name__ = "TruthValue"
_SvcTlsProxyNdRtrUnSolNAFloodEvpn_Object = MibTableColumn
svcTlsProxyNdRtrUnSolNAFloodEvpn = _SvcTlsProxyNdRtrUnSolNAFloodEvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 13),
    _SvcTlsProxyNdRtrUnSolNAFloodEvpn_Type()
)
svcTlsProxyNdRtrUnSolNAFloodEvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdRtrUnSolNAFloodEvpn.setStatus("current")


class _SvcTlsProxyNdHstUnSolNAFloodEvpn_Type(TruthValue):
    """Custom type svcTlsProxyNdHstUnSolNAFloodEvpn based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyNdHstUnSolNAFloodEvpn_Type.__name__ = "TruthValue"
_SvcTlsProxyNdHstUnSolNAFloodEvpn_Object = MibTableColumn
svcTlsProxyNdHstUnSolNAFloodEvpn = _SvcTlsProxyNdHstUnSolNAFloodEvpn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 14),
    _SvcTlsProxyNdHstUnSolNAFloodEvpn_Type()
)
svcTlsProxyNdHstUnSolNAFloodEvpn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdHstUnSolNAFloodEvpn.setStatus("current")


class _SvcTlsProxyNdEvpnNdAdvRouter_Type(TruthValue):
    """Custom type svcTlsProxyNdEvpnNdAdvRouter based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyNdEvpnNdAdvRouter_Type.__name__ = "TruthValue"
_SvcTlsProxyNdEvpnNdAdvRouter_Object = MibTableColumn
svcTlsProxyNdEvpnNdAdvRouter = _SvcTlsProxyNdEvpnNdAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 15),
    _SvcTlsProxyNdEvpnNdAdvRouter_Type()
)
svcTlsProxyNdEvpnNdAdvRouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdEvpnNdAdvRouter.setStatus("current")


class _SvcTlsProxyNdCfgStaticBH_Type(TruthValue):
    """Custom type svcTlsProxyNdCfgStaticBH based on TruthValue"""
    defaultValue = 2


_SvcTlsProxyNdCfgStaticBH_Type.__name__ = "TruthValue"
_SvcTlsProxyNdCfgStaticBH_Object = MibTableColumn
svcTlsProxyNdCfgStaticBH = _SvcTlsProxyNdCfgStaticBH_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 16),
    _SvcTlsProxyNdCfgStaticBH_Type()
)
svcTlsProxyNdCfgStaticBH.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgStaticBH.setStatus("current")


class _SvcTlsProxyNdCfgRouteTag_Type(Unsigned32):
    """Custom type svcTlsProxyNdCfgRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_SvcTlsProxyNdCfgRouteTag_Type.__name__ = "Unsigned32"
_SvcTlsProxyNdCfgRouteTag_Object = MibTableColumn
svcTlsProxyNdCfgRouteTag = _SvcTlsProxyNdCfgRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 169, 1, 17),
    _SvcTlsProxyNdCfgRouteTag_Type()
)
svcTlsProxyNdCfgRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgRouteTag.setStatus("current")
_SvcTlsProxyNdStaticTable_Object = MibTable
svcTlsProxyNdStaticTable = _SvcTlsProxyNdStaticTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticTable.setStatus("current")
_SvcTlsProxyNdStaticEntry_Object = MibTableRow
svcTlsProxyNdStaticEntry = _SvcTlsProxyNdStaticEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1)
)
svcTlsProxyNdStaticEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdStaticInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdStaticInetAddress"),
)
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticEntry.setStatus("current")
_SvcTlsProxyNdStaticInetAddrType_Type = InetAddressType
_SvcTlsProxyNdStaticInetAddrType_Object = MibTableColumn
svcTlsProxyNdStaticInetAddrType = _SvcTlsProxyNdStaticInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 1),
    _SvcTlsProxyNdStaticInetAddrType_Type()
)
svcTlsProxyNdStaticInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticInetAddrType.setStatus("current")


class _SvcTlsProxyNdStaticInetAddress_Type(InetAddress):
    """Custom type svcTlsProxyNdStaticInetAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_SvcTlsProxyNdStaticInetAddress_Type.__name__ = "InetAddress"
_SvcTlsProxyNdStaticInetAddress_Object = MibTableColumn
svcTlsProxyNdStaticInetAddress = _SvcTlsProxyNdStaticInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 2),
    _SvcTlsProxyNdStaticInetAddress_Type()
)
svcTlsProxyNdStaticInetAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticInetAddress.setStatus("current")
_SvcTlsProxyNdStaticRowStatus_Type = RowStatus
_SvcTlsProxyNdStaticRowStatus_Object = MibTableColumn
svcTlsProxyNdStaticRowStatus = _SvcTlsProxyNdStaticRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 3),
    _SvcTlsProxyNdStaticRowStatus_Type()
)
svcTlsProxyNdStaticRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticRowStatus.setStatus("current")
_SvcTlsProxyNdStaticLastChgd_Type = TimeStamp
_SvcTlsProxyNdStaticLastChgd_Object = MibTableColumn
svcTlsProxyNdStaticLastChgd = _SvcTlsProxyNdStaticLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 4),
    _SvcTlsProxyNdStaticLastChgd_Type()
)
svcTlsProxyNdStaticLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticLastChgd.setStatus("current")


class _SvcTlsProxyNdStaticMac_Type(MacAddress):
    """Custom type svcTlsProxyNdStaticMac based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcTlsProxyNdStaticMac_Type.__name__ = "MacAddress"
_SvcTlsProxyNdStaticMac_Object = MibTableColumn
svcTlsProxyNdStaticMac = _SvcTlsProxyNdStaticMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 5),
    _SvcTlsProxyNdStaticMac_Type()
)
svcTlsProxyNdStaticMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticMac.setStatus("current")


class _SvcTlsProxyNdStaticIsRouter_Type(TruthValue):
    """Custom type svcTlsProxyNdStaticIsRouter based on TruthValue"""
    defaultValue = 1


_SvcTlsProxyNdStaticIsRouter_Type.__name__ = "TruthValue"
_SvcTlsProxyNdStaticIsRouter_Object = MibTableColumn
svcTlsProxyNdStaticIsRouter = _SvcTlsProxyNdStaticIsRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 170, 1, 6),
    _SvcTlsProxyNdStaticIsRouter_Type()
)
svcTlsProxyNdStaticIsRouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticIsRouter.setStatus("current")
_SvcTlsProxyNdTable_Object = MibTable
svcTlsProxyNdTable = _SvcTlsProxyNdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdTable.setStatus("current")
_SvcTlsProxyNdEntry_Object = MibTableRow
svcTlsProxyNdEntry = _SvcTlsProxyNdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1)
)
svcTlsProxyNdEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdIpAddr"),
)
if mibBuilder.loadTexts:
    svcTlsProxyNdEntry.setStatus("current")
_SvcTlsProxyNdIpAddrType_Type = InetAddressType
_SvcTlsProxyNdIpAddrType_Object = MibTableColumn
svcTlsProxyNdIpAddrType = _SvcTlsProxyNdIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 1),
    _SvcTlsProxyNdIpAddrType_Type()
)
svcTlsProxyNdIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdIpAddrType.setStatus("current")


class _SvcTlsProxyNdIpAddr_Type(InetAddress):
    """Custom type svcTlsProxyNdIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsProxyNdIpAddr_Type.__name__ = "InetAddress"
_SvcTlsProxyNdIpAddr_Object = MibTableColumn
svcTlsProxyNdIpAddr = _SvcTlsProxyNdIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 2),
    _SvcTlsProxyNdIpAddr_Type()
)
svcTlsProxyNdIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdIpAddr.setStatus("current")
_SvcTlsProxyNdMacAddr_Type = MacAddress
_SvcTlsProxyNdMacAddr_Object = MibTableColumn
svcTlsProxyNdMacAddr = _SvcTlsProxyNdMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 3),
    _SvcTlsProxyNdMacAddr_Type()
)
svcTlsProxyNdMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdMacAddr.setStatus("current")
_SvcTlsProxyNdType_Type = TmnxProxyEntryType
_SvcTlsProxyNdType_Object = MibTableColumn
svcTlsProxyNdType = _SvcTlsProxyNdType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 4),
    _SvcTlsProxyNdType_Type()
)
svcTlsProxyNdType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdType.setStatus("current")
_SvcTlsProxyNdLastChgd_Type = TimeStamp
_SvcTlsProxyNdLastChgd_Object = MibTableColumn
svcTlsProxyNdLastChgd = _SvcTlsProxyNdLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 5),
    _SvcTlsProxyNdLastChgd_Type()
)
svcTlsProxyNdLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdLastChgd.setStatus("current")


class _SvcTlsProxyNdStatus_Type(Integer32):
    """Custom type svcTlsProxyNdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inActv", 2),
          ("pendng", 3))
    )


_SvcTlsProxyNdStatus_Type.__name__ = "Integer32"
_SvcTlsProxyNdStatus_Object = MibTableColumn
svcTlsProxyNdStatus = _SvcTlsProxyNdStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 6),
    _SvcTlsProxyNdStatus_Type()
)
svcTlsProxyNdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdStatus.setStatus("current")
_SvcTlsProxyNdIsRouter_Type = TruthValue
_SvcTlsProxyNdIsRouter_Object = MibTableColumn
svcTlsProxyNdIsRouter = _SvcTlsProxyNdIsRouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 171, 1, 7),
    _SvcTlsProxyNdIsRouter_Type()
)
svcTlsProxyNdIsRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdIsRouter.setStatus("current")
_SvcVsdGlobalObjs_ObjectIdentity = ObjectIdentity
svcVsdGlobalObjs = _SvcVsdGlobalObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 172)
)


class _SvcVsdServiceRangeStart_Type(TmnxExtServId):
    """Custom type svcVsdServiceRangeStart based on TmnxExtServId"""
    defaultValue = 0


_SvcVsdServiceRangeStart_Type.__name__ = "TmnxExtServId"
_SvcVsdServiceRangeStart_Object = MibScalar
svcVsdServiceRangeStart = _SvcVsdServiceRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 172, 1),
    _SvcVsdServiceRangeStart_Type()
)
svcVsdServiceRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVsdServiceRangeStart.setStatus("current")


class _SvcVsdServiceRangeEnd_Type(TmnxExtServId):
    """Custom type svcVsdServiceRangeEnd based on TmnxExtServId"""
    defaultValue = 0


_SvcVsdServiceRangeEnd_Type.__name__ = "TmnxExtServId"
_SvcVsdServiceRangeEnd_Object = MibScalar
svcVsdServiceRangeEnd = _SvcVsdServiceRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 172, 2),
    _SvcVsdServiceRangeEnd_Type()
)
svcVsdServiceRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVsdServiceRangeEnd.setStatus("current")
_SvcBgpEvpnMplsTable_Object = MibTable
svcBgpEvpnMplsTable = _SvcBgpEvpnMplsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173)
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsTable.setStatus("obsolete")
_SvcBgpEvpnMplsEntry_Object = MibTableRow
svcBgpEvpnMplsEntry = _SvcBgpEvpnMplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1)
)
svcBgpEvpnMplsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsEntry.setStatus("obsolete")
_SvcBgpEvpnMplsLastChanged_Type = TimeStamp
_SvcBgpEvpnMplsLastChanged_Object = MibTableColumn
svcBgpEvpnMplsLastChanged = _SvcBgpEvpnMplsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 1),
    _SvcBgpEvpnMplsLastChanged_Type()
)
svcBgpEvpnMplsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsLastChanged.setStatus("obsolete")


class _SvcBgpEvpnMplsForceVlanVcFwding_Type(TruthValue):
    """Custom type svcBgpEvpnMplsForceVlanVcFwding based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsForceVlanVcFwding_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsForceVlanVcFwding_Object = MibTableColumn
svcBgpEvpnMplsForceVlanVcFwding = _SvcBgpEvpnMplsForceVlanVcFwding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 2),
    _SvcBgpEvpnMplsForceVlanVcFwding_Type()
)
svcBgpEvpnMplsForceVlanVcFwding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsForceVlanVcFwding.setStatus("obsolete")


class _SvcBgpEvpnMplsControlWord_Type(TruthValue):
    """Custom type svcBgpEvpnMplsControlWord based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsControlWord_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsControlWord_Object = MibTableColumn
svcBgpEvpnMplsControlWord = _SvcBgpEvpnMplsControlWord_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 3),
    _SvcBgpEvpnMplsControlWord_Type()
)
svcBgpEvpnMplsControlWord.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsControlWord.setStatus("obsolete")


class _SvcBgpEvpnMplsShgName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnMplsShgName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpEvpnMplsShgName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnMplsShgName_Object = MibTableColumn
svcBgpEvpnMplsShgName = _SvcBgpEvpnMplsShgName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 4),
    _SvcBgpEvpnMplsShgName_Type()
)
svcBgpEvpnMplsShgName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsShgName.setStatus("obsolete")


class _SvcBgpEvpnMplsIngressRepBumLabel_Type(TruthValue):
    """Custom type svcBgpEvpnMplsIngressRepBumLabel based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsIngressRepBumLabel_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsIngressRepBumLabel_Object = MibTableColumn
svcBgpEvpnMplsIngressRepBumLabel = _SvcBgpEvpnMplsIngressRepBumLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 5),
    _SvcBgpEvpnMplsIngressRepBumLabel_Type()
)
svcBgpEvpnMplsIngressRepBumLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsIngressRepBumLabel.setStatus("obsolete")


class _SvcBgpEvpnMplsMaxEcmpRoutes_Type(Integer32):
    """Custom type svcBgpEvpnMplsMaxEcmpRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcBgpEvpnMplsMaxEcmpRoutes_Type.__name__ = "Integer32"
_SvcBgpEvpnMplsMaxEcmpRoutes_Object = MibTableColumn
svcBgpEvpnMplsMaxEcmpRoutes = _SvcBgpEvpnMplsMaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 6),
    _SvcBgpEvpnMplsMaxEcmpRoutes_Type()
)
svcBgpEvpnMplsMaxEcmpRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMaxEcmpRoutes.setStatus("obsolete")
_SvcBgpEvpnMplsIngressLabel_Type = Integer32
_SvcBgpEvpnMplsIngressLabel_Object = MibTableColumn
svcBgpEvpnMplsIngressLabel = _SvcBgpEvpnMplsIngressLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 7),
    _SvcBgpEvpnMplsIngressLabel_Type()
)
svcBgpEvpnMplsIngressLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsIngressLabel.setStatus("obsolete")
_SvcBgpEvpnMplsIngressBumLabel_Type = Integer32
_SvcBgpEvpnMplsIngressBumLabel_Object = MibTableColumn
svcBgpEvpnMplsIngressBumLabel = _SvcBgpEvpnMplsIngressBumLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 8),
    _SvcBgpEvpnMplsIngressBumLabel_Type()
)
svcBgpEvpnMplsIngressBumLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsIngressBumLabel.setStatus("obsolete")


class _SvcBgpEvpnMplsAdminState_Type(TmnxEnabledDisabled):
    """Custom type svcBgpEvpnMplsAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcBgpEvpnMplsAdminState_Type.__name__ = "TmnxEnabledDisabled"
_SvcBgpEvpnMplsAdminState_Object = MibTableColumn
svcBgpEvpnMplsAdminState = _SvcBgpEvpnMplsAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 9),
    _SvcBgpEvpnMplsAdminState_Type()
)
svcBgpEvpnMplsAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsAdminState.setStatus("obsolete")


class _SvcBgpEvpnMplsEntropyLabel_Type(TruthValue):
    """Custom type svcBgpEvpnMplsEntropyLabel based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsEntropyLabel_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsEntropyLabel_Object = MibTableColumn
svcBgpEvpnMplsEntropyLabel = _SvcBgpEvpnMplsEntropyLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 10),
    _SvcBgpEvpnMplsEntropyLabel_Type()
)
svcBgpEvpnMplsEntropyLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsEntropyLabel.setStatus("obsolete")


class _SvcBgpEvpnMplsResProtSrcMac_Type(TruthValue):
    """Custom type svcBgpEvpnMplsResProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsResProtSrcMac_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsResProtSrcMac_Object = MibTableColumn
svcBgpEvpnMplsResProtSrcMac = _SvcBgpEvpnMplsResProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 11),
    _SvcBgpEvpnMplsResProtSrcMac_Type()
)
svcBgpEvpnMplsResProtSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsResProtSrcMac.setStatus("obsolete")


class _SvcBgpEvpnMplsResProtSrcMacAct_Type(Integer32):
    """Custom type svcBgpEvpnMplsResProtSrcMacAct based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("discardFrame", 1)
    )


_SvcBgpEvpnMplsResProtSrcMacAct_Type.__name__ = "Integer32"
_SvcBgpEvpnMplsResProtSrcMacAct_Object = MibTableColumn
svcBgpEvpnMplsResProtSrcMacAct = _SvcBgpEvpnMplsResProtSrcMacAct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 12),
    _SvcBgpEvpnMplsResProtSrcMacAct_Type()
)
svcBgpEvpnMplsResProtSrcMacAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsResProtSrcMacAct.setStatus("obsolete")


class _SvcBgpEvpnMplsBgpInstance_Type(Integer32):
    """Custom type svcBgpEvpnMplsBgpInstance based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcBgpEvpnMplsBgpInstance_Type.__name__ = "Integer32"
_SvcBgpEvpnMplsBgpInstance_Object = MibTableColumn
svcBgpEvpnMplsBgpInstance = _SvcBgpEvpnMplsBgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 13),
    _SvcBgpEvpnMplsBgpInstance_Type()
)
svcBgpEvpnMplsBgpInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsBgpInstance.setStatus("obsolete")


class _SvcBgpEvpnMplsEvpnEncapMpls_Type(TruthValue):
    """Custom type svcBgpEvpnMplsEvpnEncapMpls based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnMplsEvpnEncapMpls_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsEvpnEncapMpls_Object = MibTableColumn
svcBgpEvpnMplsEvpnEncapMpls = _SvcBgpEvpnMplsEvpnEncapMpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 14),
    _SvcBgpEvpnMplsEvpnEncapMpls_Type()
)
svcBgpEvpnMplsEvpnEncapMpls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsEvpnEncapMpls.setStatus("obsolete")


class _SvcBgpEvpnMplsEvpnEncapMplsoUdp_Type(TruthValue):
    """Custom type svcBgpEvpnMplsEvpnEncapMplsoUdp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnMplsEvpnEncapMplsoUdp_Type.__name__ = "TruthValue"
_SvcBgpEvpnMplsEvpnEncapMplsoUdp_Object = MibTableColumn
svcBgpEvpnMplsEvpnEncapMplsoUdp = _SvcBgpEvpnMplsEvpnEncapMplsoUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 15),
    _SvcBgpEvpnMplsEvpnEncapMplsoUdp_Type()
)
svcBgpEvpnMplsEvpnEncapMplsoUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsEvpnEncapMplsoUdp.setStatus("obsolete")


class _SvcBgpEvpnMplsForceQinqVcFwding_Type(Integer32):
    """Custom type svcBgpEvpnMplsForceQinqVcFwding based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ctagctag", 1),
          ("stagctag", 2))
    )


_SvcBgpEvpnMplsForceQinqVcFwding_Type.__name__ = "Integer32"
_SvcBgpEvpnMplsForceQinqVcFwding_Object = MibTableColumn
svcBgpEvpnMplsForceQinqVcFwding = _SvcBgpEvpnMplsForceQinqVcFwding_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 173, 1, 16),
    _SvcBgpEvpnMplsForceQinqVcFwding_Type()
)
svcBgpEvpnMplsForceQinqVcFwding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsForceQinqVcFwding.setStatus("obsolete")
_SvcEvpnMplsTEPTable_Object = MibTable
svcEvpnMplsTEPTable = _SvcEvpnMplsTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPTable.setStatus("current")
_SvcEvpnMplsTEPEntry_Object = MibTableRow
svcEvpnMplsTEPEntry = _SvcEvpnMplsTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1)
)
svcEvpnMplsTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEntry.setStatus("current")
_SvcEvpnMplsTEPAddrType_Type = InetAddressType
_SvcEvpnMplsTEPAddrType_Object = MibTableColumn
svcEvpnMplsTEPAddrType = _SvcEvpnMplsTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1, 1),
    _SvcEvpnMplsTEPAddrType_Type()
)
svcEvpnMplsTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPAddrType.setStatus("current")


class _SvcEvpnMplsTEPAddress_Type(InetAddress):
    """Custom type svcEvpnMplsTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMplsTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnMplsTEPAddress_Object = MibTableColumn
svcEvpnMplsTEPAddress = _SvcEvpnMplsTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1, 2),
    _SvcEvpnMplsTEPAddress_Type()
)
svcEvpnMplsTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPAddress.setStatus("current")
_SvcEvpnMplsTEPNumEvpnMplsDest_Type = Unsigned32
_SvcEvpnMplsTEPNumEvpnMplsDest_Object = MibTableColumn
svcEvpnMplsTEPNumEvpnMplsDest = _SvcEvpnMplsTEPNumEvpnMplsDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1, 3),
    _SvcEvpnMplsTEPNumEvpnMplsDest_Type()
)
svcEvpnMplsTEPNumEvpnMplsDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPNumEvpnMplsDest.setStatus("current")
_SvcEvpnMplsTEPNumESDest_Type = Unsigned32
_SvcEvpnMplsTEPNumESDest_Object = MibTableColumn
svcEvpnMplsTEPNumESDest = _SvcEvpnMplsTEPNumESDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1, 4),
    _SvcEvpnMplsTEPNumESDest_Type()
)
svcEvpnMplsTEPNumESDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPNumESDest.setStatus("current")
_SvcEvpnMplsTEPNumESBMacDest_Type = Unsigned32
_SvcEvpnMplsTEPNumESBMacDest_Object = MibTableColumn
svcEvpnMplsTEPNumESBMacDest = _SvcEvpnMplsTEPNumESBMacDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 174, 1, 5),
    _SvcEvpnMplsTEPNumESBMacDest_Type()
)
svcEvpnMplsTEPNumESBMacDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPNumESBMacDest.setStatus("current")
_SvcTlsBgpEvpnAutoBindTnlTable_Object = MibTable
svcTlsBgpEvpnAutoBindTnlTable = _SvcTlsBgpEvpnAutoBindTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175)
)
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlTable.setStatus("obsolete")
_SvcTlsBgpEvpnAutoBindTnlEntry_Object = MibTableRow
svcTlsBgpEvpnAutoBindTnlEntry = _SvcTlsBgpEvpnAutoBindTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1)
)
svcTlsBgpEvpnAutoBindTnlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlEntry.setStatus("obsolete")
_SvcTlsBgpEvpnAutoBindTnlLastChg_Type = TimeStamp
_SvcTlsBgpEvpnAutoBindTnlLastChg_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlLastChg = _SvcTlsBgpEvpnAutoBindTnlLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 1),
    _SvcTlsBgpEvpnAutoBindTnlLastChg_Type()
)
svcTlsBgpEvpnAutoBindTnlLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlLastChg.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlLdp_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlLdp based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlLdp_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlLdp_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlLdp = _SvcTlsBgpEvpnAutoBindTnlLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 2),
    _SvcTlsBgpEvpnAutoBindTnlLdp_Type()
)
svcTlsBgpEvpnAutoBindTnlLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlLdp.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlRsvpTe_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlRsvpTe based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlRsvpTe_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlRsvpTe_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlRsvpTe = _SvcTlsBgpEvpnAutoBindTnlRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 3),
    _SvcTlsBgpEvpnAutoBindTnlRsvpTe_Type()
)
svcTlsBgpEvpnAutoBindTnlRsvpTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlRsvpTe.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlSrIsis_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlSrIsis based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlSrIsis_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlSrIsis_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlSrIsis = _SvcTlsBgpEvpnAutoBindTnlSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 4),
    _SvcTlsBgpEvpnAutoBindTnlSrIsis_Type()
)
svcTlsBgpEvpnAutoBindTnlSrIsis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlSrIsis.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlSrOspf_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlSrOspf based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlSrOspf_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlSrOspf_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlSrOspf = _SvcTlsBgpEvpnAutoBindTnlSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 5),
    _SvcTlsBgpEvpnAutoBindTnlSrOspf_Type()
)
svcTlsBgpEvpnAutoBindTnlSrOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlSrOspf.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBndTnlStatus_Type(TResolveStatus):
    """Custom type svcTlsBgpEvpnAutoBndTnlStatus based on TResolveStatus"""
    defaultValue = 0


_SvcTlsBgpEvpnAutoBndTnlStatus_Type.__name__ = "TResolveStatus"
_SvcTlsBgpEvpnAutoBndTnlStatus_Object = MibTableColumn
svcTlsBgpEvpnAutoBndTnlStatus = _SvcTlsBgpEvpnAutoBndTnlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 6),
    _SvcTlsBgpEvpnAutoBndTnlStatus_Type()
)
svcTlsBgpEvpnAutoBndTnlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBndTnlStatus.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlBgp_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlBgp based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlBgp_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlBgp_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlBgp = _SvcTlsBgpEvpnAutoBindTnlBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 7),
    _SvcTlsBgpEvpnAutoBindTnlBgp_Type()
)
svcTlsBgpEvpnAutoBindTnlBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlBgp.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlSrTe_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlSrTe based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlSrTe_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlSrTe_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlSrTe = _SvcTlsBgpEvpnAutoBindTnlSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 8),
    _SvcTlsBgpEvpnAutoBindTnlSrTe_Type()
)
svcTlsBgpEvpnAutoBindTnlSrTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlSrTe.setStatus("obsolete")


class _SvcTlsBgpEvpnAutoBindTnlUdp_Type(TruthValue):
    """Custom type svcTlsBgpEvpnAutoBindTnlUdp based on TruthValue"""
    defaultValue = 2


_SvcTlsBgpEvpnAutoBindTnlUdp_Type.__name__ = "TruthValue"
_SvcTlsBgpEvpnAutoBindTnlUdp_Object = MibTableColumn
svcTlsBgpEvpnAutoBindTnlUdp = _SvcTlsBgpEvpnAutoBindTnlUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 175, 1, 9),
    _SvcTlsBgpEvpnAutoBindTnlUdp_Type()
)
svcTlsBgpEvpnAutoBindTnlUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnAutoBindTnlUdp.setStatus("obsolete")
_SvcVprnBgpAutoBindTable_Object = MibTable
svcVprnBgpAutoBindTable = _SvcVprnBgpAutoBindTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176)
)
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindTable.setStatus("current")
_SvcVprnBgpAutoBindEntry_Object = MibTableRow
svcVprnBgpAutoBindEntry = _SvcVprnBgpAutoBindEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1)
)
svcVprnBgpAutoBindEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindEntry.setStatus("current")
_SvcVprnBgpAutoBindLastChg_Type = TimeStamp
_SvcVprnBgpAutoBindLastChg_Object = MibTableColumn
svcVprnBgpAutoBindLastChg = _SvcVprnBgpAutoBindLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 1),
    _SvcVprnBgpAutoBindLastChg_Type()
)
svcVprnBgpAutoBindLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindLastChg.setStatus("current")


class _SvcVprnBgpAutoBindLdp_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindLdp based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindLdp_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindLdp_Object = MibTableColumn
svcVprnBgpAutoBindLdp = _SvcVprnBgpAutoBindLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 2),
    _SvcVprnBgpAutoBindLdp_Type()
)
svcVprnBgpAutoBindLdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindLdp.setStatus("current")


class _SvcVprnBgpAutoBindRsvpTe_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindRsvpTe based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindRsvpTe_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindRsvpTe_Object = MibTableColumn
svcVprnBgpAutoBindRsvpTe = _SvcVprnBgpAutoBindRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 3),
    _SvcVprnBgpAutoBindRsvpTe_Type()
)
svcVprnBgpAutoBindRsvpTe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindRsvpTe.setStatus("current")


class _SvcVprnBgpAutoBindSrIsis_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindSrIsis based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindSrIsis_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindSrIsis_Object = MibTableColumn
svcVprnBgpAutoBindSrIsis = _SvcVprnBgpAutoBindSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 4),
    _SvcVprnBgpAutoBindSrIsis_Type()
)
svcVprnBgpAutoBindSrIsis.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindSrIsis.setStatus("current")


class _SvcVprnBgpAutoBindSrOspf_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindSrOspf based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindSrOspf_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindSrOspf_Object = MibTableColumn
svcVprnBgpAutoBindSrOspf = _SvcVprnBgpAutoBindSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 5),
    _SvcVprnBgpAutoBindSrOspf_Type()
)
svcVprnBgpAutoBindSrOspf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindSrOspf.setStatus("current")


class _SvcVprnBgpAutoBindGre_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindGre based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindGre_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindGre_Object = MibTableColumn
svcVprnBgpAutoBindGre = _SvcVprnBgpAutoBindGre_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 6),
    _SvcVprnBgpAutoBindGre_Type()
)
svcVprnBgpAutoBindGre.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindGre.setStatus("current")


class _SvcVprnBgpAutoBindTnlStatus_Type(TResolveStatus):
    """Custom type svcVprnBgpAutoBindTnlStatus based on TResolveStatus"""
    defaultValue = 0


_SvcVprnBgpAutoBindTnlStatus_Type.__name__ = "TResolveStatus"
_SvcVprnBgpAutoBindTnlStatus_Object = MibTableColumn
svcVprnBgpAutoBindTnlStatus = _SvcVprnBgpAutoBindTnlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 7),
    _SvcVprnBgpAutoBindTnlStatus_Type()
)
svcVprnBgpAutoBindTnlStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindTnlStatus.setStatus("current")


class _SvcVprnBgpAutoBindSrTe_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindSrTe based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindSrTe_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindSrTe_Object = MibTableColumn
svcVprnBgpAutoBindSrTe = _SvcVprnBgpAutoBindSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 8),
    _SvcVprnBgpAutoBindSrTe_Type()
)
svcVprnBgpAutoBindSrTe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindSrTe.setStatus("current")


class _SvcVprnBgpAutoBindBgp_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindBgp based on TruthValue"""
    defaultValue = 1


_SvcVprnBgpAutoBindBgp_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindBgp_Object = MibTableColumn
svcVprnBgpAutoBindBgp = _SvcVprnBgpAutoBindBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 9),
    _SvcVprnBgpAutoBindBgp_Type()
)
svcVprnBgpAutoBindBgp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindBgp.setStatus("current")


class _SvcVprnBgpAutoBindUdp_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindUdp based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindUdp_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindUdp_Object = MibTableColumn
svcVprnBgpAutoBindUdp = _SvcVprnBgpAutoBindUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 10),
    _SvcVprnBgpAutoBindUdp_Type()
)
svcVprnBgpAutoBindUdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindUdp.setStatus("current")


class _SvcVprnBgpAutoBindWeightedEcmp_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindWeightedEcmp based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindWeightedEcmp_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindWeightedEcmp_Object = MibTableColumn
svcVprnBgpAutoBindWeightedEcmp = _SvcVprnBgpAutoBindWeightedEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 11),
    _SvcVprnBgpAutoBindWeightedEcmp_Type()
)
svcVprnBgpAutoBindWeightedEcmp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindWeightedEcmp.setStatus("current")


class _SvcVprnBgpAutoBindMaxEcmpRoutes_Type(Unsigned32):
    """Custom type svcVprnBgpAutoBindMaxEcmpRoutes based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcVprnBgpAutoBindMaxEcmpRoutes_Type.__name__ = "Unsigned32"
_SvcVprnBgpAutoBindMaxEcmpRoutes_Object = MibTableColumn
svcVprnBgpAutoBindMaxEcmpRoutes = _SvcVprnBgpAutoBindMaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 12),
    _SvcVprnBgpAutoBindMaxEcmpRoutes_Type()
)
svcVprnBgpAutoBindMaxEcmpRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindMaxEcmpRoutes.setStatus("current")


class _SvcVprnBgpAutoBindAdminTags_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindAdminTags based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindAdminTags_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindAdminTags_Object = MibTableColumn
svcVprnBgpAutoBindAdminTags = _SvcVprnBgpAutoBindAdminTags_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 13),
    _SvcVprnBgpAutoBindAdminTags_Type()
)
svcVprnBgpAutoBindAdminTags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindAdminTags.setStatus("current")


class _SvcVprnBgpAutoBindRibApi_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindRibApi based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindRibApi_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindRibApi_Object = MibTableColumn
svcVprnBgpAutoBindRibApi = _SvcVprnBgpAutoBindRibApi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 14),
    _SvcVprnBgpAutoBindRibApi_Type()
)
svcVprnBgpAutoBindRibApi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindRibApi.setStatus("current")


class _SvcVprnBgpAutoBindMplsFwdPlcy_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindMplsFwdPlcy based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindMplsFwdPlcy_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindMplsFwdPlcy_Object = MibTableColumn
svcVprnBgpAutoBindMplsFwdPlcy = _SvcVprnBgpAutoBindMplsFwdPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 15),
    _SvcVprnBgpAutoBindMplsFwdPlcy_Type()
)
svcVprnBgpAutoBindMplsFwdPlcy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindMplsFwdPlcy.setStatus("current")


class _SvcVprnBgpAutoBindSrPolicy_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindSrPolicy based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindSrPolicy_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindSrPolicy_Object = MibTableColumn
svcVprnBgpAutoBindSrPolicy = _SvcVprnBgpAutoBindSrPolicy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 16),
    _SvcVprnBgpAutoBindSrPolicy_Type()
)
svcVprnBgpAutoBindSrPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindSrPolicy.setStatus("current")


class _SvcVprnBgpAutoBindSrOspf3_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindSrOspf3 based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindSrOspf3_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindSrOspf3_Object = MibTableColumn
svcVprnBgpAutoBindSrOspf3 = _SvcVprnBgpAutoBindSrOspf3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 17),
    _SvcVprnBgpAutoBindSrOspf3_Type()
)
svcVprnBgpAutoBindSrOspf3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindSrOspf3.setStatus("current")


class _SvcVprnBgpAutoBindFlexAlgoFb_Type(TruthValue):
    """Custom type svcVprnBgpAutoBindFlexAlgoFb based on TruthValue"""
    defaultValue = 2


_SvcVprnBgpAutoBindFlexAlgoFb_Type.__name__ = "TruthValue"
_SvcVprnBgpAutoBindFlexAlgoFb_Object = MibTableColumn
svcVprnBgpAutoBindFlexAlgoFb = _SvcVprnBgpAutoBindFlexAlgoFb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 176, 1, 18),
    _SvcVprnBgpAutoBindFlexAlgoFb_Type()
)
svcVprnBgpAutoBindFlexAlgoFb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindFlexAlgoFb.setStatus("current")
_TlsMFibNgTable_Object = MibTable
tlsMFibNgTable = _TlsMFibNgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177)
)
if mibBuilder.loadTexts:
    tlsMFibNgTable.setStatus("current")
_TlsMFibNgEntry_Object = MibTableRow
tlsMFibNgEntry = _TlsMFibNgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1)
)
tlsMFibNgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgEntryType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgGrpMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgGrpInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgGrpInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgSrcInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgSrcInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgLocale"),
    (0, "TIMETRA-SERV-MIB", "tlsMFibNgLocaleId"),
)
if mibBuilder.loadTexts:
    tlsMFibNgEntry.setStatus("current")


class _TlsMFibNgEntryType_Type(Integer32):
    """Custom type tlsMFibNgEntryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipBased", 1),
          ("macBased", 2))
    )


_TlsMFibNgEntryType_Type.__name__ = "Integer32"
_TlsMFibNgEntryType_Object = MibTableColumn
tlsMFibNgEntryType = _TlsMFibNgEntryType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 1),
    _TlsMFibNgEntryType_Type()
)
tlsMFibNgEntryType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgEntryType.setStatus("current")
_TlsMFibNgGrpMacAddr_Type = MacAddress
_TlsMFibNgGrpMacAddr_Object = MibTableColumn
tlsMFibNgGrpMacAddr = _TlsMFibNgGrpMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 2),
    _TlsMFibNgGrpMacAddr_Type()
)
tlsMFibNgGrpMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgGrpMacAddr.setStatus("current")
_TlsMFibNgGrpInetAddrType_Type = InetAddressType
_TlsMFibNgGrpInetAddrType_Object = MibTableColumn
tlsMFibNgGrpInetAddrType = _TlsMFibNgGrpInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 3),
    _TlsMFibNgGrpInetAddrType_Type()
)
tlsMFibNgGrpInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgGrpInetAddrType.setStatus("current")


class _TlsMFibNgGrpInetAddr_Type(InetAddress):
    """Custom type tlsMFibNgGrpInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibNgGrpInetAddr_Type.__name__ = "InetAddress"
_TlsMFibNgGrpInetAddr_Object = MibTableColumn
tlsMFibNgGrpInetAddr = _TlsMFibNgGrpInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 4),
    _TlsMFibNgGrpInetAddr_Type()
)
tlsMFibNgGrpInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgGrpInetAddr.setStatus("current")
_TlsMFibNgSrcInetAddrType_Type = InetAddressType
_TlsMFibNgSrcInetAddrType_Object = MibTableColumn
tlsMFibNgSrcInetAddrType = _TlsMFibNgSrcInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 5),
    _TlsMFibNgSrcInetAddrType_Type()
)
tlsMFibNgSrcInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgSrcInetAddrType.setStatus("current")


class _TlsMFibNgSrcInetAddr_Type(InetAddress):
    """Custom type tlsMFibNgSrcInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TlsMFibNgSrcInetAddr_Type.__name__ = "InetAddress"
_TlsMFibNgSrcInetAddr_Object = MibTableColumn
tlsMFibNgSrcInetAddr = _TlsMFibNgSrcInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 6),
    _TlsMFibNgSrcInetAddr_Type()
)
tlsMFibNgSrcInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgSrcInetAddr.setStatus("current")
_TlsMFibNgLocale_Type = MfibLocation
_TlsMFibNgLocale_Object = MibTableColumn
tlsMFibNgLocale = _TlsMFibNgLocale_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 7),
    _TlsMFibNgLocale_Type()
)
tlsMFibNgLocale.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgLocale.setStatus("current")


class _TlsMFibNgLocaleId_Type(OctetString):
    """Custom type tlsMFibNgLocaleId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_TlsMFibNgLocaleId_Type.__name__ = "OctetString"
_TlsMFibNgLocaleId_Object = MibTableColumn
tlsMFibNgLocaleId = _TlsMFibNgLocaleId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 8),
    _TlsMFibNgLocaleId_Type()
)
tlsMFibNgLocaleId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tlsMFibNgLocaleId.setStatus("current")
_TlsMFibNgFwdOrBlk_Type = MfibGrpSrcFwdOrBlk
_TlsMFibNgFwdOrBlk_Object = MibTableColumn
tlsMFibNgFwdOrBlk = _TlsMFibNgFwdOrBlk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 9),
    _TlsMFibNgFwdOrBlk_Type()
)
tlsMFibNgFwdOrBlk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibNgFwdOrBlk.setStatus("current")
_TlsMFibNgSvcId_Type = TmnxServId
_TlsMFibNgSvcId_Object = MibTableColumn
tlsMFibNgSvcId = _TlsMFibNgSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 177, 1, 10),
    _TlsMFibNgSvcId_Type()
)
tlsMFibNgSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsMFibNgSvcId.setStatus("current")
_SvcBgpAutoRDType1Group_ObjectIdentity = ObjectIdentity
svcBgpAutoRDType1Group = _SvcBgpAutoRDType1Group_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 178)
)


class _SvcBgpAutoRDType1IpAddr_Type(IpAddress):
    """Custom type svcBgpAutoRDType1IpAddr based on IpAddress"""
    defaultHexValue = "00000000"


_SvcBgpAutoRDType1IpAddr_Type.__name__ = "IpAddress"
_SvcBgpAutoRDType1IpAddr_Object = MibScalar
svcBgpAutoRDType1IpAddr = _SvcBgpAutoRDType1IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 178, 1),
    _SvcBgpAutoRDType1IpAddr_Type()
)
svcBgpAutoRDType1IpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpAutoRDType1IpAddr.setStatus("current")


class _SvcBgpAutoRDType1CommValStart_Type(Integer32):
    """Custom type svcBgpAutoRDType1CommValStart based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcBgpAutoRDType1CommValStart_Type.__name__ = "Integer32"
_SvcBgpAutoRDType1CommValStart_Object = MibScalar
svcBgpAutoRDType1CommValStart = _SvcBgpAutoRDType1CommValStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 178, 2),
    _SvcBgpAutoRDType1CommValStart_Type()
)
svcBgpAutoRDType1CommValStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpAutoRDType1CommValStart.setStatus("current")


class _SvcBgpAutoRDType1CommValEnd_Type(Integer32):
    """Custom type svcBgpAutoRDType1CommValEnd based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcBgpAutoRDType1CommValEnd_Type.__name__ = "Integer32"
_SvcBgpAutoRDType1CommValEnd_Object = MibScalar
svcBgpAutoRDType1CommValEnd = _SvcBgpAutoRDType1CommValEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 178, 3),
    _SvcBgpAutoRDType1CommValEnd_Type()
)
svcBgpAutoRDType1CommValEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpAutoRDType1CommValEnd.setStatus("current")
_SvcBgpAutoRDType1InUse_Type = Gauge32
_SvcBgpAutoRDType1InUse_Object = MibScalar
svcBgpAutoRDType1InUse = _SvcBgpAutoRDType1InUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 178, 4),
    _SvcBgpAutoRDType1InUse_Type()
)
svcBgpAutoRDType1InUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpAutoRDType1InUse.setStatus("current")
_SvcDhcpLeaseRipTable_Object = MibTable
svcDhcpLeaseRipTable = _SvcDhcpLeaseRipTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 179)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseRipTable.setStatus("current")
_SvcDhcpLeaseRipEntry_Object = MibTableRow
svcDhcpLeaseRipEntry = _SvcDhcpLeaseRipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 179, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseRipEntry.setStatus("current")
_SvcDhcpLeaseRipPlcyName_Type = TNamedItemOrEmpty
_SvcDhcpLeaseRipPlcyName_Object = MibTableColumn
svcDhcpLeaseRipPlcyName = _SvcDhcpLeaseRipPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 179, 1, 1),
    _SvcDhcpLeaseRipPlcyName_Type()
)
svcDhcpLeaseRipPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRipPlcyName.setStatus("current")
_SvcDhcpLeaseRipListenerStatus_Type = TmnxRipListenerStatus
_SvcDhcpLeaseRipListenerStatus_Object = MibTableColumn
svcDhcpLeaseRipListenerStatus = _SvcDhcpLeaseRipListenerStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 179, 1, 2),
    _SvcDhcpLeaseRipListenerStatus_Type()
)
svcDhcpLeaseRipListenerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseRipListenerStatus.setStatus("current")
_SvcArpHostRipTable_Object = MibTable
svcArpHostRipTable = _SvcArpHostRipTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 180)
)
if mibBuilder.loadTexts:
    svcArpHostRipTable.setStatus("current")
_SvcArpHostRipEntry_Object = MibTableRow
svcArpHostRipEntry = _SvcArpHostRipEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 180, 1)
)
if mibBuilder.loadTexts:
    svcArpHostRipEntry.setStatus("current")
_SvcArpHostRipPlcyName_Type = TNamedItemOrEmpty
_SvcArpHostRipPlcyName_Object = MibTableColumn
svcArpHostRipPlcyName = _SvcArpHostRipPlcyName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 180, 1, 1),
    _SvcArpHostRipPlcyName_Type()
)
svcArpHostRipPlcyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRipPlcyName.setStatus("current")
_SvcArpHostRipListenerStatus_Type = TmnxRipListenerStatus
_SvcArpHostRipListenerStatus_Object = MibTableColumn
svcArpHostRipListenerStatus = _SvcArpHostRipListenerStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 180, 1, 2),
    _SvcArpHostRipListenerStatus_Type()
)
svcArpHostRipListenerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostRipListenerStatus.setStatus("current")
_SvcEvpnMplsTEPEgrLblTable_Object = MibTable
svcEvpnMplsTEPEgrLblTable = _SvcEvpnMplsTEPEgrLblTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTable.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblEntry_Object = MibTableRow
svcEvpnMplsTEPEgrLblEntry = _SvcEvpnMplsTEPEgrLblEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1)
)
svcEvpnMplsTEPEgrLblEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblEntry.setStatus("current")
_SvcEvpnMplsTEPEgrLblTEPAddrType_Type = InetAddressType
_SvcEvpnMplsTEPEgrLblTEPAddrType_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTEPAddrType = _SvcEvpnMplsTEPEgrLblTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 1),
    _SvcEvpnMplsTEPEgrLblTEPAddrType_Type()
)
svcEvpnMplsTEPEgrLblTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTEPAddrType.setStatus("obsolete")


class _SvcEvpnMplsTEPEgrLblTEPAddress_Type(InetAddress):
    """Custom type svcEvpnMplsTEPEgrLblTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMplsTEPEgrLblTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnMplsTEPEgrLblTEPAddress_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTEPAddress = _SvcEvpnMplsTEPEgrLblTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 2),
    _SvcEvpnMplsTEPEgrLblTEPAddress_Type()
)
svcEvpnMplsTEPEgrLblTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTEPAddress.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTEPLabel_Type = Unsigned32
_SvcEvpnMplsTEPEgrLblTEPLabel_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTEPLabel = _SvcEvpnMplsTEPEgrLblTEPLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 3),
    _SvcEvpnMplsTEPEgrLblTEPLabel_Type()
)
svcEvpnMplsTEPEgrLblTEPLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTEPLabel.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblNumMACs_Type = Unsigned32
_SvcEvpnMplsTEPEgrLblNumMACs_Object = MibTableColumn
svcEvpnMplsTEPEgrLblNumMACs = _SvcEvpnMplsTEPEgrLblNumMACs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 4),
    _SvcEvpnMplsTEPEgrLblNumMACs_Type()
)
svcEvpnMplsTEPEgrLblNumMACs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblNumMACs.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblInMcastList_Type = TruthValue
_SvcEvpnMplsTEPEgrLblInMcastList_Object = MibTableColumn
svcEvpnMplsTEPEgrLblInMcastList = _SvcEvpnMplsTEPEgrLblInMcastList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 5),
    _SvcEvpnMplsTEPEgrLblInMcastList_Type()
)
svcEvpnMplsTEPEgrLblInMcastList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblInMcastList.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblLastChanged_Type = TimeStamp
_SvcEvpnMplsTEPEgrLblLastChanged_Object = MibTableColumn
svcEvpnMplsTEPEgrLblLastChanged = _SvcEvpnMplsTEPEgrLblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 6),
    _SvcEvpnMplsTEPEgrLblLastChanged_Type()
)
svcEvpnMplsTEPEgrLblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblLastChanged.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTunnelType_Type = TmnxTunnelTypeExt
_SvcEvpnMplsTEPEgrLblTunnelType_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTunnelType = _SvcEvpnMplsTEPEgrLblTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 7),
    _SvcEvpnMplsTEPEgrLblTunnelType_Type()
)
svcEvpnMplsTEPEgrLblTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTunnelType.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblResType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnMplsTEPEgrLblResType_Object = MibTableColumn
svcEvpnMplsTEPEgrLblResType = _SvcEvpnMplsTEPEgrLblResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 181, 1, 8),
    _SvcEvpnMplsTEPEgrLblResType_Type()
)
svcEvpnMplsTEPEgrLblResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblResType.setStatus("obsolete")
_TmnxSvcGrpIfTable_Object = MibTable
tmnxSvcGrpIfTable = _TmnxSvcGrpIfTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 182)
)
if mibBuilder.loadTexts:
    tmnxSvcGrpIfTable.setStatus("current")
_TmnxSvcGrpIfEntry_Object = MibTableRow
tmnxSvcGrpIfEntry = _TmnxSvcGrpIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 182, 1)
)
tmnxSvcGrpIfEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcGrpIfParentIfIndex"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcGrpIfIndex"),
)
if mibBuilder.loadTexts:
    tmnxSvcGrpIfEntry.setStatus("current")
_TmnxSvcGrpIfParentIfIndex_Type = InterfaceIndex
_TmnxSvcGrpIfParentIfIndex_Object = MibTableColumn
tmnxSvcGrpIfParentIfIndex = _TmnxSvcGrpIfParentIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 182, 1, 1),
    _TmnxSvcGrpIfParentIfIndex_Type()
)
tmnxSvcGrpIfParentIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcGrpIfParentIfIndex.setStatus("current")
_TmnxSvcGrpIfIndex_Type = InterfaceIndex
_TmnxSvcGrpIfIndex_Object = MibTableColumn
tmnxSvcGrpIfIndex = _TmnxSvcGrpIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 182, 1, 2),
    _TmnxSvcGrpIfIndex_Type()
)
tmnxSvcGrpIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcGrpIfIndex.setStatus("current")
_TmnxSvcGrpIfVRouterId_Type = TmnxVRtrID
_TmnxSvcGrpIfVRouterId_Object = MibTableColumn
tmnxSvcGrpIfVRouterId = _TmnxSvcGrpIfVRouterId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 182, 1, 3),
    _TmnxSvcGrpIfVRouterId_Type()
)
tmnxSvcGrpIfVRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcGrpIfVRouterId.setStatus("current")
_TmnxSvcSysBgpEvpnObjs_ObjectIdentity = ObjectIdentity
tmnxSvcSysBgpEvpnObjs = _TmnxSvcSysBgpEvpnObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183)
)


class _TmnxSvcSysBgpEvpnRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type tmnxSvcSysBgpEvpnRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_TmnxSvcSysBgpEvpnRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_TmnxSvcSysBgpEvpnRD_Object = MibScalar
tmnxSvcSysBgpEvpnRD = _TmnxSvcSysBgpEvpnRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 1),
    _TmnxSvcSysBgpEvpnRD_Type()
)
tmnxSvcSysBgpEvpnRD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnRD.setStatus("current")
_TmnxSvcSysBgpEvpnOperRD_Type = TmnxVPNRouteDistinguisher
_TmnxSvcSysBgpEvpnOperRD_Object = MibScalar
tmnxSvcSysBgpEvpnOperRD = _TmnxSvcSysBgpEvpnOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 2),
    _TmnxSvcSysBgpEvpnOperRD_Type()
)
tmnxSvcSysBgpEvpnOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnOperRD.setStatus("current")
_TmnxSvcSysBgpEvpnRDType_Type = TmnxRouteDistType
_TmnxSvcSysBgpEvpnRDType_Object = MibScalar
tmnxSvcSysBgpEvpnRDType = _TmnxSvcSysBgpEvpnRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 3),
    _TmnxSvcSysBgpEvpnRDType_Type()
)
tmnxSvcSysBgpEvpnRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnRDType.setStatus("current")


class _TmnxSvcSysBgpEvpnAdEsRtTgtType_Type(Integer32):
    """Custom type tmnxSvcSysBgpEvpnAdEsRtTgtType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("eviRtTgt", 1),
          ("eviRtTgtSet", 2))
    )


_TmnxSvcSysBgpEvpnAdEsRtTgtType_Type.__name__ = "Integer32"
_TmnxSvcSysBgpEvpnAdEsRtTgtType_Object = MibScalar
tmnxSvcSysBgpEvpnAdEsRtTgtType = _TmnxSvcSysBgpEvpnAdEsRtTgtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 4),
    _TmnxSvcSysBgpEvpnAdEsRtTgtType_Type()
)
tmnxSvcSysBgpEvpnAdEsRtTgtType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnAdEsRtTgtType.setStatus("current")


class _TmnxSvcSysBgpEvpnADESRDAddrType_Type(InetAddressType):
    """Custom type tmnxSvcSysBgpEvpnADESRDAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxSvcSysBgpEvpnADESRDAddrType_Type.__name__ = "InetAddressType"
_TmnxSvcSysBgpEvpnADESRDAddrType_Object = MibScalar
tmnxSvcSysBgpEvpnADESRDAddrType = _TmnxSvcSysBgpEvpnADESRDAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 5),
    _TmnxSvcSysBgpEvpnADESRDAddrType_Type()
)
tmnxSvcSysBgpEvpnADESRDAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnADESRDAddrType.setStatus("current")


class _TmnxSvcSysBgpEvpnADPerESRDIpAddr_Type(InetAddress):
    """Custom type tmnxSvcSysBgpEvpnADPerESRDIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_TmnxSvcSysBgpEvpnADPerESRDIpAddr_Type.__name__ = "InetAddress"
_TmnxSvcSysBgpEvpnADPerESRDIpAddr_Object = MibScalar
tmnxSvcSysBgpEvpnADPerESRDIpAddr = _TmnxSvcSysBgpEvpnADPerESRDIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 6),
    _TmnxSvcSysBgpEvpnADPerESRDIpAddr_Type()
)
tmnxSvcSysBgpEvpnADPerESRDIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnADPerESRDIpAddr.setStatus("current")
_TmnxSvcSysBgpEvpnEtreeLeafLabel_Type = Unsigned32
_TmnxSvcSysBgpEvpnEtreeLeafLabel_Object = MibScalar
tmnxSvcSysBgpEvpnEtreeLeafLabel = _TmnxSvcSysBgpEvpnEtreeLeafLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 7),
    _TmnxSvcSysBgpEvpnEtreeLeafLabel_Type()
)
tmnxSvcSysBgpEvpnEtreeLeafLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnEtreeLeafLabel.setStatus("current")


class _TmnxSvcSysBgpEvpnAllocLeafLabel_Type(TruthValue):
    """Custom type tmnxSvcSysBgpEvpnAllocLeafLabel based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysBgpEvpnAllocLeafLabel_Type.__name__ = "TruthValue"
_TmnxSvcSysBgpEvpnAllocLeafLabel_Object = MibScalar
tmnxSvcSysBgpEvpnAllocLeafLabel = _TmnxSvcSysBgpEvpnAllocLeafLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 8),
    _TmnxSvcSysBgpEvpnAllocLeafLabel_Type()
)
tmnxSvcSysBgpEvpnAllocLeafLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnAllocLeafLabel.setStatus("current")


class _TmnxSvcSysBgpEvpnMcastLblBlk_Type(TLNamedItemOrEmpty):
    """Custom type tmnxSvcSysBgpEvpnMcastLblBlk based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSvcSysBgpEvpnMcastLblBlk_Type.__name__ = "TLNamedItemOrEmpty"
_TmnxSvcSysBgpEvpnMcastLblBlk_Object = MibScalar
tmnxSvcSysBgpEvpnMcastLblBlk = _TmnxSvcSysBgpEvpnMcastLblBlk_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 9),
    _TmnxSvcSysBgpEvpnMcastLblBlk_Type()
)
tmnxSvcSysBgpEvpnMcastLblBlk.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnMcastLblBlk.setStatus("current")


class _TmnxSvcSysBgpEvpnMcLeaveSyncProp_Type(Integer32):
    """Custom type tmnxSvcSysBgpEvpnMcLeaveSyncProp based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_TmnxSvcSysBgpEvpnMcLeaveSyncProp_Type.__name__ = "Integer32"
_TmnxSvcSysBgpEvpnMcLeaveSyncProp_Object = MibScalar
tmnxSvcSysBgpEvpnMcLeaveSyncProp = _TmnxSvcSysBgpEvpnMcLeaveSyncProp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 10),
    _TmnxSvcSysBgpEvpnMcLeaveSyncProp_Type()
)
tmnxSvcSysBgpEvpnMcLeaveSyncProp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnMcLeaveSyncProp.setStatus("current")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnMcLeaveSyncProp.setUnits("seconds")


class _TmnxSvcSysBgpEvpnIffAttrUnfmProp_Type(TruthValue):
    """Custom type tmnxSvcSysBgpEvpnIffAttrUnfmProp based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysBgpEvpnIffAttrUnfmProp_Type.__name__ = "TruthValue"
_TmnxSvcSysBgpEvpnIffAttrUnfmProp_Object = MibScalar
tmnxSvcSysBgpEvpnIffAttrUnfmProp = _TmnxSvcSysBgpEvpnIffAttrUnfmProp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 11),
    _TmnxSvcSysBgpEvpnIffAttrUnfmProp_Type()
)
tmnxSvcSysBgpEvpnIffAttrUnfmProp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnIffAttrUnfmProp.setStatus("current")


class _TmnxSvcSysBgpEvpnIffPthSelection_Type(TruthValue):
    """Custom type tmnxSvcSysBgpEvpnIffPthSelection based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysBgpEvpnIffPthSelection_Type.__name__ = "TruthValue"
_TmnxSvcSysBgpEvpnIffPthSelection_Object = MibScalar
tmnxSvcSysBgpEvpnIffPthSelection = _TmnxSvcSysBgpEvpnIffPthSelection_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 12),
    _TmnxSvcSysBgpEvpnIffPthSelection_Type()
)
tmnxSvcSysBgpEvpnIffPthSelection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnIffPthSelection.setStatus("current")


class _TmnxSvcSysBgpEvpnLeafLabelValue_Type(Integer32):
    """Custom type tmnxSvcSysBgpEvpnLeafLabelValue based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(32, 524256),
    )


_TmnxSvcSysBgpEvpnLeafLabelValue_Type.__name__ = "Integer32"
_TmnxSvcSysBgpEvpnLeafLabelValue_Object = MibScalar
tmnxSvcSysBgpEvpnLeafLabelValue = _TmnxSvcSysBgpEvpnLeafLabelValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 13),
    _TmnxSvcSysBgpEvpnLeafLabelValue_Type()
)
tmnxSvcSysBgpEvpnLeafLabelValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnLeafLabelValue.setStatus("current")


class _TmnxSvcSysBgpEvpnDpathLgthIgnr_Type(TruthValue):
    """Custom type tmnxSvcSysBgpEvpnDpathLgthIgnr based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysBgpEvpnDpathLgthIgnr_Type.__name__ = "TruthValue"
_TmnxSvcSysBgpEvpnDpathLgthIgnr_Object = MibScalar
tmnxSvcSysBgpEvpnDpathLgthIgnr = _TmnxSvcSysBgpEvpnDpathLgthIgnr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 14),
    _TmnxSvcSysBgpEvpnDpathLgthIgnr_Type()
)
tmnxSvcSysBgpEvpnDpathLgthIgnr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnDpathLgthIgnr.setStatus("current")


class _TmnxSvcSysBgpEvpnAdEsRtTgtExtEvi_Type(TruthValue):
    """Custom type tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysBgpEvpnAdEsRtTgtExtEvi_Type.__name__ = "TruthValue"
_TmnxSvcSysBgpEvpnAdEsRtTgtExtEvi_Object = MibScalar
tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi = _TmnxSvcSysBgpEvpnAdEsRtTgtExtEvi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 183, 15),
    _TmnxSvcSysBgpEvpnAdEsRtTgtExtEvi_Type()
)
tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi.setStatus("current")
_TmnxSvcSysEthSegTable_Object = MibTable
tmnxSvcSysEthSegTable = _TmnxSvcSysEthSegTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184)
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegTable.setStatus("current")
_TmnxSvcSysEthSegEntry_Object = MibTableRow
tmnxSvcSysEthSegEntry = _TmnxSvcSysEthSegEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1)
)
tmnxSvcSysEthSegEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegEntry.setStatus("current")


class _TmnxSvcSysEthSegName_Type(TNamedItem):
    """Custom type tmnxSvcSysEthSegName based on TNamedItem"""
    subtypeSpec = TNamedItem.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TmnxSvcSysEthSegName_Type.__name__ = "TNamedItem"
_TmnxSvcSysEthSegName_Object = MibTableColumn
tmnxSvcSysEthSegName = _TmnxSvcSysEthSegName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 1),
    _TmnxSvcSysEthSegName_Type()
)
tmnxSvcSysEthSegName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegName.setStatus("current")
_TmnxSvcSysEthSegRowStatus_Type = RowStatus
_TmnxSvcSysEthSegRowStatus_Object = MibTableColumn
tmnxSvcSysEthSegRowStatus = _TmnxSvcSysEthSegRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 2),
    _TmnxSvcSysEthSegRowStatus_Type()
)
tmnxSvcSysEthSegRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegRowStatus.setStatus("current")
_TmnxSvcSysEthSegLastChg_Type = TimeStamp
_TmnxSvcSysEthSegLastChg_Object = MibTableColumn
tmnxSvcSysEthSegLastChg = _TmnxSvcSysEthSegLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 3),
    _TmnxSvcSysEthSegLastChg_Type()
)
tmnxSvcSysEthSegLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegLastChg.setStatus("current")


class _TmnxSvcSysEthSegAdminState_Type(TmnxEnabledDisabled):
    """Custom type tmnxSvcSysEthSegAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_TmnxSvcSysEthSegAdminState_Type.__name__ = "TmnxEnabledDisabled"
_TmnxSvcSysEthSegAdminState_Object = MibTableColumn
tmnxSvcSysEthSegAdminState = _TmnxSvcSysEthSegAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 4),
    _TmnxSvcSysEthSegAdminState_Type()
)
tmnxSvcSysEthSegAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegAdminState.setStatus("current")


class _TmnxSvcSysEthSegEsi_Type(OctetString):
    """Custom type tmnxSvcSysEthSegEsi based on OctetString"""
    defaultHexValue = "00000000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )
    fixed_length = 10


_TmnxSvcSysEthSegEsi_Type.__name__ = "OctetString"
_TmnxSvcSysEthSegEsi_Object = MibTableColumn
tmnxSvcSysEthSegEsi = _TmnxSvcSysEthSegEsi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 5),
    _TmnxSvcSysEthSegEsi_Type()
)
tmnxSvcSysEthSegEsi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegEsi.setStatus("current")


class _TmnxSvcSysEthSegMultiHoming_Type(TmnxEvpnMultiHomingState):
    """Custom type tmnxSvcSysEthSegMultiHoming based on TmnxEvpnMultiHomingState"""
    defaultValue = 0


_TmnxSvcSysEthSegMultiHoming_Type.__name__ = "TmnxEvpnMultiHomingState"
_TmnxSvcSysEthSegMultiHoming_Object = MibTableColumn
tmnxSvcSysEthSegMultiHoming = _TmnxSvcSysEthSegMultiHoming_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 6),
    _TmnxSvcSysEthSegMultiHoming_Type()
)
tmnxSvcSysEthSegMultiHoming.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegMultiHoming.setStatus("current")


class _TmnxSvcSysEthSegSvcCarving_Type(Integer32):
    """Custom type tmnxSvcSysEthSegSvcCarving based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("manual", 2),
          ("off", 3))
    )


_TmnxSvcSysEthSegSvcCarving_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegSvcCarving_Object = MibTableColumn
tmnxSvcSysEthSegSvcCarving = _TmnxSvcSysEthSegSvcCarving_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 7),
    _TmnxSvcSysEthSegSvcCarving_Type()
)
tmnxSvcSysEthSegSvcCarving.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegSvcCarving.setStatus("current")


class _TmnxSvcSysEthSegLagId_Type(LAGInterfaceNumberOrZero):
    """Custom type tmnxSvcSysEthSegLagId based on LAGInterfaceNumberOrZero"""
    defaultValue = 0


_TmnxSvcSysEthSegLagId_Type.__name__ = "LAGInterfaceNumberOrZero"
_TmnxSvcSysEthSegLagId_Object = MibTableColumn
tmnxSvcSysEthSegLagId = _TmnxSvcSysEthSegLagId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 8),
    _TmnxSvcSysEthSegLagId_Type()
)
tmnxSvcSysEthSegLagId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegLagId.setStatus("current")


class _TmnxSvcSysEthSegPortId_Type(TmnxPortID):
    """Custom type tmnxSvcSysEthSegPortId based on TmnxPortID"""
    defaultValue = 503316480


_TmnxSvcSysEthSegPortId_Type.__name__ = "TmnxPortID"
_TmnxSvcSysEthSegPortId_Object = MibTableColumn
tmnxSvcSysEthSegPortId = _TmnxSvcSysEthSegPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 9),
    _TmnxSvcSysEthSegPortId_Type()
)
tmnxSvcSysEthSegPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegPortId.setStatus("current")


class _TmnxSvcSysEthSegSdpId_Type(SdpId):
    """Custom type tmnxSvcSysEthSegSdpId based on SdpId"""
    defaultValue = 0


_TmnxSvcSysEthSegSdpId_Type.__name__ = "SdpId"
_TmnxSvcSysEthSegSdpId_Object = MibTableColumn
tmnxSvcSysEthSegSdpId = _TmnxSvcSysEthSegSdpId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 10),
    _TmnxSvcSysEthSegSdpId_Type()
)
tmnxSvcSysEthSegSdpId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegSdpId.setStatus("current")


class _TmnxSvcSysEthSegEsActTimer_Type(Integer32):
    """Custom type tmnxSvcSysEthSegEsActTimer based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_TmnxSvcSysEthSegEsActTimer_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegEsActTimer_Object = MibTableColumn
tmnxSvcSysEthSegEsActTimer = _TmnxSvcSysEthSegEsActTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 11),
    _TmnxSvcSysEthSegEsActTimer_Type()
)
tmnxSvcSysEthSegEsActTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegEsActTimer.setStatus("current")


class _TmnxSvcSysEthSegSourceBMacLSB_Type(Integer32):
    """Custom type tmnxSvcSysEthSegSourceBMacLSB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TmnxSvcSysEthSegSourceBMacLSB_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegSourceBMacLSB_Object = MibTableColumn
tmnxSvcSysEthSegSourceBMacLSB = _TmnxSvcSysEthSegSourceBMacLSB_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 12),
    _TmnxSvcSysEthSegSourceBMacLSB_Type()
)
tmnxSvcSysEthSegSourceBMacLSB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegSourceBMacLSB.setStatus("current")


class _TmnxSvcSysEthSegBMacTblSize_Type(Integer32):
    """Custom type tmnxSvcSysEthSegBMacTblSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 511999),
    )


_TmnxSvcSysEthSegBMacTblSize_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegBMacTblSize_Object = MibTableColumn
tmnxSvcSysEthSegBMacTblSize = _TmnxSvcSysEthSegBMacTblSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 13),
    _TmnxSvcSysEthSegBMacTblSize_Type()
)
tmnxSvcSysEthSegBMacTblSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegBMacTblSize.setStatus("current")
_TmnxSvcSysEthSegBMacTblEntries_Type = Integer32
_TmnxSvcSysEthSegBMacTblEntries_Object = MibTableColumn
tmnxSvcSysEthSegBMacTblEntries = _TmnxSvcSysEthSegBMacTblEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 14),
    _TmnxSvcSysEthSegBMacTblEntries_Type()
)
tmnxSvcSysEthSegBMacTblEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegBMacTblEntries.setStatus("current")
_TmnxSvcSysEthSegOperMultiHoming_Type = TmnxEvpnMultiHomingState
_TmnxSvcSysEthSegOperMultiHoming_Object = MibTableColumn
tmnxSvcSysEthSegOperMultiHoming = _TmnxSvcSysEthSegOperMultiHoming_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 15),
    _TmnxSvcSysEthSegOperMultiHoming_Type()
)
tmnxSvcSysEthSegOperMultiHoming.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegOperMultiHoming.setStatus("current")
_TmnxSvcSysEthSegOperState_Type = ServiceOperStatus
_TmnxSvcSysEthSegOperState_Object = MibTableColumn
tmnxSvcSysEthSegOperState = _TmnxSvcSysEthSegOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 16),
    _TmnxSvcSysEthSegOperState_Type()
)
tmnxSvcSysEthSegOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegOperState.setStatus("current")
_TmnxSvcSysEthSegSHGLabel_Type = Integer32
_TmnxSvcSysEthSegSHGLabel_Object = MibTableColumn
tmnxSvcSysEthSegSHGLabel = _TmnxSvcSysEthSegSHGLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 17),
    _TmnxSvcSysEthSegSHGLabel_Type()
)
tmnxSvcSysEthSegSHGLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegSHGLabel.setStatus("current")


class _TmnxSvcSysEthSegType_Type(Integer32):
    """Custom type tmnxSvcSysEthSegType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("virtual", 2))
    )


_TmnxSvcSysEthSegType_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegType_Object = MibTableColumn
tmnxSvcSysEthSegType = _TmnxSvcSysEthSegType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 18),
    _TmnxSvcSysEthSegType_Type()
)
tmnxSvcSysEthSegType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegType.setStatus("current")


class _TmnxSvcSysESOperServCarvMode_Type(Integer32):
    """Custom type tmnxSvcSysESOperServCarvMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("manual", 2),
          ("off", 3))
    )


_TmnxSvcSysESOperServCarvMode_Type.__name__ = "Integer32"
_TmnxSvcSysESOperServCarvMode_Object = MibTableColumn
tmnxSvcSysESOperServCarvMode = _TmnxSvcSysESOperServCarvMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 19),
    _TmnxSvcSysESOperServCarvMode_Type()
)
tmnxSvcSysESOperServCarvMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysESOperServCarvMode.setStatus("current")


class _TmnxSvcSysESEviIsidCfgRngsType_Type(Integer32):
    """Custom type tmnxSvcSysESEviIsidCfgRngsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("lowest-pref", 2))
    )


_TmnxSvcSysESEviIsidCfgRngsType_Type.__name__ = "Integer32"
_TmnxSvcSysESEviIsidCfgRngsType_Object = MibTableColumn
tmnxSvcSysESEviIsidCfgRngsType = _TmnxSvcSysESEviIsidCfgRngsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 20),
    _TmnxSvcSysESEviIsidCfgRngsType_Type()
)
tmnxSvcSysESEviIsidCfgRngsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysESEviIsidCfgRngsType.setStatus("current")


class _TmnxSvcSysEthSegVxlanInstanceId_Type(Unsigned32):
    """Custom type tmnxSvcSysEthSegVxlanInstanceId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_TmnxSvcSysEthSegVxlanInstanceId_Type.__name__ = "Unsigned32"
_TmnxSvcSysEthSegVxlanInstanceId_Object = MibTableColumn
tmnxSvcSysEthSegVxlanInstanceId = _TmnxSvcSysEthSegVxlanInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 21),
    _TmnxSvcSysEthSegVxlanInstanceId_Type()
)
tmnxSvcSysEthSegVxlanInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVxlanInstanceId.setStatus("current")


class _TmnxSvcSysEthSegPwPortId_Type(PwPortIdOrZero):
    """Custom type tmnxSvcSysEthSegPwPortId based on PwPortIdOrZero"""
    defaultValue = 0


_TmnxSvcSysEthSegPwPortId_Type.__name__ = "PwPortIdOrZero"
_TmnxSvcSysEthSegPwPortId_Object = MibTableColumn
tmnxSvcSysEthSegPwPortId = _TmnxSvcSysEthSegPwPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 22),
    _TmnxSvcSysEthSegPwPortId_Type()
)
tmnxSvcSysEthSegPwPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegPwPortId.setStatus("current")


class _TmnxSvcSysEthSegEsOrigIpAddrType_Type(InetAddressType):
    """Custom type tmnxSvcSysEthSegEsOrigIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxSvcSysEthSegEsOrigIpAddrType_Type.__name__ = "InetAddressType"
_TmnxSvcSysEthSegEsOrigIpAddrType_Object = MibTableColumn
tmnxSvcSysEthSegEsOrigIpAddrType = _TmnxSvcSysEthSegEsOrigIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 23),
    _TmnxSvcSysEthSegEsOrigIpAddrType_Type()
)
tmnxSvcSysEthSegEsOrigIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegEsOrigIpAddrType.setStatus("current")


class _TmnxSvcSysEthSegEsOrigIpAddr_Type(InetAddress):
    """Custom type tmnxSvcSysEthSegEsOrigIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TmnxSvcSysEthSegEsOrigIpAddr_Type.__name__ = "InetAddress"
_TmnxSvcSysEthSegEsOrigIpAddr_Object = MibTableColumn
tmnxSvcSysEthSegEsOrigIpAddr = _TmnxSvcSysEthSegEsOrigIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 24),
    _TmnxSvcSysEthSegEsOrigIpAddr_Type()
)
tmnxSvcSysEthSegEsOrigIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegEsOrigIpAddr.setStatus("current")


class _TmnxSvcSysEthSegRouteNxtHopType_Type(InetAddressType):
    """Custom type tmnxSvcSysEthSegRouteNxtHopType based on InetAddressType"""
    defaultValue = 0


_TmnxSvcSysEthSegRouteNxtHopType_Type.__name__ = "InetAddressType"
_TmnxSvcSysEthSegRouteNxtHopType_Object = MibTableColumn
tmnxSvcSysEthSegRouteNxtHopType = _TmnxSvcSysEthSegRouteNxtHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 25),
    _TmnxSvcSysEthSegRouteNxtHopType_Type()
)
tmnxSvcSysEthSegRouteNxtHopType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegRouteNxtHopType.setStatus("current")


class _TmnxSvcSysEthSegRouteNxtHopAddr_Type(InetAddress):
    """Custom type tmnxSvcSysEthSegRouteNxtHopAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TmnxSvcSysEthSegRouteNxtHopAddr_Type.__name__ = "InetAddress"
_TmnxSvcSysEthSegRouteNxtHopAddr_Object = MibTableColumn
tmnxSvcSysEthSegRouteNxtHopAddr = _TmnxSvcSysEthSegRouteNxtHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 26),
    _TmnxSvcSysEthSegRouteNxtHopAddr_Type()
)
tmnxSvcSysEthSegRouteNxtHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegRouteNxtHopAddr.setStatus("current")


class _TmnxSvcSysEthSegOperGrp_Type(TNamedItemOrEmpty):
    """Custom type tmnxSvcSysEthSegOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_TmnxSvcSysEthSegOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_TmnxSvcSysEthSegOperGrp_Object = MibTableColumn
tmnxSvcSysEthSegOperGrp = _TmnxSvcSysEthSegOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 27),
    _TmnxSvcSysEthSegOperGrp_Type()
)
tmnxSvcSysEthSegOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegOperGrp.setStatus("current")


class _TmnxSvcSysEthSegAutoEsi_Type(Integer32):
    """Custom type tmnxSvcSysEthSegAutoEsi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("type-1", 1))
    )


_TmnxSvcSysEthSegAutoEsi_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegAutoEsi_Object = MibTableColumn
tmnxSvcSysEthSegAutoEsi = _TmnxSvcSysEthSegAutoEsi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 28),
    _TmnxSvcSysEthSegAutoEsi_Type()
)
tmnxSvcSysEthSegAutoEsi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegAutoEsi.setStatus("current")


class _TmnxSvcSysEthSegOperEsi_Type(OctetString):
    """Custom type tmnxSvcSysEthSegOperEsi based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )
    fixed_length = 10


_TmnxSvcSysEthSegOperEsi_Type.__name__ = "OctetString"
_TmnxSvcSysEthSegOperEsi_Object = MibTableColumn
tmnxSvcSysEthSegOperEsi = _TmnxSvcSysEthSegOperEsi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 29),
    _TmnxSvcSysEthSegOperEsi_Type()
)
tmnxSvcSysEthSegOperEsi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegOperEsi.setStatus("current")


class _TmnxSvcSysEthSegAcDfCap_Type(Integer32):
    """Custom type tmnxSvcSysEthSegAcDfCap based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("include", 0),
          ("exclude", 1))
    )


_TmnxSvcSysEthSegAcDfCap_Type.__name__ = "Integer32"
_TmnxSvcSysEthSegAcDfCap_Object = MibTableColumn
tmnxSvcSysEthSegAcDfCap = _TmnxSvcSysEthSegAcDfCap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 30),
    _TmnxSvcSysEthSegAcDfCap_Type()
)
tmnxSvcSysEthSegAcDfCap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegAcDfCap.setStatus("current")


class _TmnxSvcSysEthSegPwPortHeadEnd_Type(TruthValue):
    """Custom type tmnxSvcSysEthSegPwPortHeadEnd based on TruthValue"""
    defaultValue = 2


_TmnxSvcSysEthSegPwPortHeadEnd_Type.__name__ = "TruthValue"
_TmnxSvcSysEthSegPwPortHeadEnd_Object = MibTableColumn
tmnxSvcSysEthSegPwPortHeadEnd = _TmnxSvcSysEthSegPwPortHeadEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 184, 1, 31),
    _TmnxSvcSysEthSegPwPortHeadEnd_Type()
)
tmnxSvcSysEthSegPwPortHeadEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegPwPortHeadEnd.setStatus("current")
_TmnxIesIfIpv6HostInfoTable_Object = MibTable
tmnxIesIfIpv6HostInfoTable = _TmnxIesIfIpv6HostInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185)
)
if mibBuilder.loadTexts:
    tmnxIesIfIpv6HostInfoTable.setStatus("current")
_TmnxIesIfIpv6HostInfoEntry_Object = MibTableRow
tmnxIesIfIpv6HostInfoEntry = _TmnxIesIfIpv6HostInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1)
)
tmnxIesIfIpv6HostInfoEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    tmnxIesIfIpv6HostInfoEntry.setStatus("current")
_TmnxIesIfIpv6IpoeDhcp6Hosts_Type = Unsigned32
_TmnxIesIfIpv6IpoeDhcp6Hosts_Object = MibTableColumn
tmnxIesIfIpv6IpoeDhcp6Hosts = _TmnxIesIfIpv6IpoeDhcp6Hosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1, 1),
    _TmnxIesIfIpv6IpoeDhcp6Hosts_Type()
)
tmnxIesIfIpv6IpoeDhcp6Hosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfIpv6IpoeDhcp6Hosts.setStatus("current")
_TmnxIesIfIpv6PppDhcp6Hosts_Type = Unsigned32
_TmnxIesIfIpv6PppDhcp6Hosts_Object = MibTableColumn
tmnxIesIfIpv6PppDhcp6Hosts = _TmnxIesIfIpv6PppDhcp6Hosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1, 2),
    _TmnxIesIfIpv6PppDhcp6Hosts_Type()
)
tmnxIesIfIpv6PppDhcp6Hosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfIpv6PppDhcp6Hosts.setStatus("current")
_TmnxIesIfIpv6PppSLAACHosts_Type = Unsigned32
_TmnxIesIfIpv6PppSLAACHosts_Object = MibTableColumn
tmnxIesIfIpv6PppSLAACHosts = _TmnxIesIfIpv6PppSLAACHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1, 3),
    _TmnxIesIfIpv6PppSLAACHosts_Type()
)
tmnxIesIfIpv6PppSLAACHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfIpv6PppSLAACHosts.setStatus("current")
_TmnxIesIfIpv6IpoeSLAACHosts_Type = Unsigned32
_TmnxIesIfIpv6IpoeSLAACHosts_Object = MibTableColumn
tmnxIesIfIpv6IpoeSLAACHosts = _TmnxIesIfIpv6IpoeSLAACHosts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1, 4),
    _TmnxIesIfIpv6IpoeSLAACHosts_Type()
)
tmnxIesIfIpv6IpoeSLAACHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfIpv6IpoeSLAACHosts.setStatus("current")
_TmnxIesIfIpv6StaticHostsUp_Type = Unsigned32
_TmnxIesIfIpv6StaticHostsUp_Object = MibTableColumn
tmnxIesIfIpv6StaticHostsUp = _TmnxIesIfIpv6StaticHostsUp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 185, 1, 5),
    _TmnxIesIfIpv6StaticHostsUp_Type()
)
tmnxIesIfIpv6StaticHostsUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfIpv6StaticHostsUp.setStatus("current")
_SvcEthSegCarvEviRngTable_Object = MibTable
svcEthSegCarvEviRngTable = _SvcEthSegCarvEviRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186)
)
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngTable.setStatus("current")
_SvcEthSegCarvEviRngEntry_Object = MibTableRow
svcEthSegCarvEviRngEntry = _SvcEthSegCarvEviRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186, 1)
)
svcEthSegCarvEviRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEthSegCarvEviRngFrom"),
)
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngEntry.setStatus("current")
_SvcEthSegCarvEviRngFrom_Type = TmnxSvcEvi
_SvcEthSegCarvEviRngFrom_Object = MibTableColumn
svcEthSegCarvEviRngFrom = _SvcEthSegCarvEviRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186, 1, 1),
    _SvcEthSegCarvEviRngFrom_Type()
)
svcEthSegCarvEviRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngFrom.setStatus("current")
_SvcEthSegCarvEviRngRowStatus_Type = RowStatus
_SvcEthSegCarvEviRngRowStatus_Object = MibTableColumn
svcEthSegCarvEviRngRowStatus = _SvcEthSegCarvEviRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186, 1, 2),
    _SvcEthSegCarvEviRngRowStatus_Type()
)
svcEthSegCarvEviRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngRowStatus.setStatus("current")
_SvcEthSegCarvEviRngLastChg_Type = TimeStamp
_SvcEthSegCarvEviRngLastChg_Object = MibTableColumn
svcEthSegCarvEviRngLastChg = _SvcEthSegCarvEviRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186, 1, 3),
    _SvcEthSegCarvEviRngLastChg_Type()
)
svcEthSegCarvEviRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngLastChg.setStatus("current")


class _SvcEthSegCarvEviRngTo_Type(TmnxSvcEviOrZero):
    """Custom type svcEthSegCarvEviRngTo based on TmnxSvcEviOrZero"""
    defaultValue = 0


_SvcEthSegCarvEviRngTo_Type.__name__ = "TmnxSvcEviOrZero"
_SvcEthSegCarvEviRngTo_Object = MibTableColumn
svcEthSegCarvEviRngTo = _SvcEthSegCarvEviRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 186, 1, 4),
    _SvcEthSegCarvEviRngTo_Type()
)
svcEthSegCarvEviRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngTo.setStatus("current")
_SvcEthSegCarvIsidRngTable_Object = MibTable
svcEthSegCarvIsidRngTable = _SvcEthSegCarvIsidRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187)
)
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngTable.setStatus("current")
_SvcEthSegCarvIsidRngEntry_Object = MibTableRow
svcEthSegCarvIsidRngEntry = _SvcEthSegCarvIsidRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187, 1)
)
svcEthSegCarvIsidRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngFrom"),
)
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngEntry.setStatus("current")
_SvcEthSegCarvIsidRngFrom_Type = TmnxISIDNoZero
_SvcEthSegCarvIsidRngFrom_Object = MibTableColumn
svcEthSegCarvIsidRngFrom = _SvcEthSegCarvIsidRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187, 1, 1),
    _SvcEthSegCarvIsidRngFrom_Type()
)
svcEthSegCarvIsidRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngFrom.setStatus("current")
_SvcEthSegCarvIsidRngRowStatus_Type = RowStatus
_SvcEthSegCarvIsidRngRowStatus_Object = MibTableColumn
svcEthSegCarvIsidRngRowStatus = _SvcEthSegCarvIsidRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187, 1, 2),
    _SvcEthSegCarvIsidRngRowStatus_Type()
)
svcEthSegCarvIsidRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngRowStatus.setStatus("current")
_SvcEthSegCarvIsidRngLastChg_Type = TimeStamp
_SvcEthSegCarvIsidRngLastChg_Object = MibTableColumn
svcEthSegCarvIsidRngLastChg = _SvcEthSegCarvIsidRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187, 1, 3),
    _SvcEthSegCarvIsidRngLastChg_Type()
)
svcEthSegCarvIsidRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngLastChg.setStatus("current")


class _SvcEthSegCarvIsidRngTo_Type(TmnxISID):
    """Custom type svcEthSegCarvIsidRngTo based on TmnxISID"""
    defaultValue = 0


_SvcEthSegCarvIsidRngTo_Type.__name__ = "TmnxISID"
_SvcEthSegCarvIsidRngTo_Object = MibTableColumn
svcEthSegCarvIsidRngTo = _SvcEthSegCarvIsidRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 187, 1, 4),
    _SvcEthSegCarvIsidRngTo_Type()
)
svcEthSegCarvIsidRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngTo.setStatus("current")
_SvcEvpnMHEthSegEviTable_Object = MibTable
svcEvpnMHEthSegEviTable = _SvcEvpnMHEthSegEviTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188)
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviTable.setStatus("current")
_SvcEvpnMHEthSegEviEntry_Object = MibTableRow
svcEvpnMHEthSegEviEntry = _SvcEvpnMHEthSegEviEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1)
)
svcEvpnMHEthSegEviEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegEvi"),
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviEntry.setStatus("current")
_SvcEvpnMHEthSegEvi_Type = TmnxSvcEvi
_SvcEvpnMHEthSegEvi_Object = MibTableColumn
svcEvpnMHEthSegEvi = _SvcEvpnMHEthSegEvi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 1),
    _SvcEvpnMHEthSegEvi_Type()
)
svcEvpnMHEthSegEvi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEvi.setStatus("current")
_SvcEvpnMHEthSegEviIsDF_Type = TruthValue
_SvcEvpnMHEthSegEviIsDF_Object = MibTableColumn
svcEvpnMHEthSegEviIsDF = _SvcEvpnMHEthSegEviIsDF_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 2),
    _SvcEvpnMHEthSegEviIsDF_Type()
)
svcEvpnMHEthSegEviIsDF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviIsDF.setStatus("current")
_SvcEvpnMHEthSegEviActTimRem_Type = Integer32
_SvcEvpnMHEthSegEviActTimRem_Object = MibTableColumn
svcEvpnMHEthSegEviActTimRem = _SvcEvpnMHEthSegEviActTimRem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 3),
    _SvcEvpnMHEthSegEviActTimRem_Type()
)
svcEvpnMHEthSegEviActTimRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviActTimRem.setStatus("current")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviActTimRem.setUnits("seconds")
_SvcEvpnMHEthSegEviSvcId_Type = TmnxServId
_SvcEvpnMHEthSegEviSvcId_Object = MibTableColumn
svcEvpnMHEthSegEviSvcId = _SvcEvpnMHEthSegEviSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 4),
    _SvcEvpnMHEthSegEviSvcId_Type()
)
svcEvpnMHEthSegEviSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviSvcId.setStatus("current")
_SvcEvpnMHEthSegEviDFLastChanged_Type = TimeStamp
_SvcEvpnMHEthSegEviDFLastChanged_Object = MibTableColumn
svcEvpnMHEthSegEviDFLastChanged = _SvcEvpnMHEthSegEviDFLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 5),
    _SvcEvpnMHEthSegEviDFLastChanged_Type()
)
svcEvpnMHEthSegEviDFLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFLastChanged.setStatus("current")
_SvcEvpnMHEthSegEviOperRD_Type = TmnxVPNRouteDistinguisher
_SvcEvpnMHEthSegEviOperRD_Object = MibTableColumn
svcEvpnMHEthSegEviOperRD = _SvcEvpnMHEthSegEviOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 188, 1, 6),
    _SvcEvpnMHEthSegEviOperRD_Type()
)
svcEvpnMHEthSegEviOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviOperRD.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtTable_Object = MibTable
svcEvpnMHEthSegEviDFCndtTable = _SvcEvpnMHEthSegEviDFCndtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189)
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtTable.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtEntry_Object = MibTableRow
svcEvpnMHEthSegEviDFCndtEntry = _SvcEvpnMHEthSegEviDFCndtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1)
)
svcEvpnMHEthSegEviDFCndtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegEvi"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAddress"),
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtEntry.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtAddrType_Type = InetAddressType
_SvcEvpnMHEthSegEviDFCndtAddrType_Object = MibTableColumn
svcEvpnMHEthSegEviDFCndtAddrType = _SvcEvpnMHEthSegEviDFCndtAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1, 1),
    _SvcEvpnMHEthSegEviDFCndtAddrType_Type()
)
svcEvpnMHEthSegEviDFCndtAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtAddrType.setStatus("current")


class _SvcEvpnMHEthSegEviDFCndtAddress_Type(InetAddress):
    """Custom type svcEvpnMHEthSegEviDFCndtAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMHEthSegEviDFCndtAddress_Type.__name__ = "InetAddress"
_SvcEvpnMHEthSegEviDFCndtAddress_Object = MibTableColumn
svcEvpnMHEthSegEviDFCndtAddress = _SvcEvpnMHEthSegEviDFCndtAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1, 2),
    _SvcEvpnMHEthSegEviDFCndtAddress_Type()
)
svcEvpnMHEthSegEviDFCndtAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtAddress.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtAdded_Type = TimeStamp
_SvcEvpnMHEthSegEviDFCndtAdded_Object = MibTableColumn
svcEvpnMHEthSegEviDFCndtAdded = _SvcEvpnMHEthSegEviDFCndtAdded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1, 3),
    _SvcEvpnMHEthSegEviDFCndtAdded_Type()
)
svcEvpnMHEthSegEviDFCndtAdded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtAdded.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtPEOprVal_Type = Unsigned32
_SvcEvpnMHEthSegEviDFCndtPEOprVal_Object = MibTableColumn
svcEvpnMHEthSegEviDFCndtPEOprVal = _SvcEvpnMHEthSegEviDFCndtPEOprVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1, 4),
    _SvcEvpnMHEthSegEviDFCndtPEOprVal_Type()
)
svcEvpnMHEthSegEviDFCndtPEOprVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtPEOprVal.setStatus("current")
_SvcEvpnMHEthSegEviDFCndtPEDntPmt_Type = TruthValue
_SvcEvpnMHEthSegEviDFCndtPEDntPmt_Object = MibTableColumn
svcEvpnMHEthSegEviDFCndtPEDntPmt = _SvcEvpnMHEthSegEviDFCndtPEDntPmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 189, 1, 5),
    _SvcEvpnMHEthSegEviDFCndtPEDntPmt_Type()
)
svcEvpnMHEthSegEviDFCndtPEDntPmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegEviDFCndtPEDntPmt.setStatus("current")
_SvcTlsProxyArpCountTable_Object = MibTable
svcTlsProxyArpCountTable = _SvcTlsProxyArpCountTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 190)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpCountTable.setStatus("current")
_SvcTlsProxyArpCountEntry_Object = MibTableRow
svcTlsProxyArpCountEntry = _SvcTlsProxyArpCountEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 190, 1)
)
svcTlsProxyArpCountEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpType"),
)
if mibBuilder.loadTexts:
    svcTlsProxyArpCountEntry.setStatus("current")
_SvcTlsProxyArpCount_Type = Counter32
_SvcTlsProxyArpCount_Object = MibTableColumn
svcTlsProxyArpCount = _SvcTlsProxyArpCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 190, 1, 1),
    _SvcTlsProxyArpCount_Type()
)
svcTlsProxyArpCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpCount.setStatus("current")
_SvcTlsProxyNdCountTable_Object = MibTable
svcTlsProxyNdCountTable = _SvcTlsProxyNdCountTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 191)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdCountTable.setStatus("current")
_SvcTlsProxyNdCountEntry_Object = MibTableRow
svcTlsProxyNdCountEntry = _SvcTlsProxyNdCountEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 191, 1)
)
svcTlsProxyNdCountEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdType"),
)
if mibBuilder.loadTexts:
    svcTlsProxyNdCountEntry.setStatus("current")
_SvcTlsProxyNdCount_Type = Counter32
_SvcTlsProxyNdCount_Object = MibTableColumn
svcTlsProxyNdCount = _SvcTlsProxyNdCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 191, 1, 1),
    _SvcTlsProxyNdCount_Type()
)
svcTlsProxyNdCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdCount.setStatus("current")
_TmnxSvcDhcpMRtTable_Object = MibTable
tmnxSvcDhcpMRtTable = _TmnxSvcDhcpMRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192)
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtTable.setStatus("current")
_TmnxSvcDhcpMRtEntry_Object = MibTableRow
tmnxSvcDhcpMRtEntry = _TmnxSvcDhcpMRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1)
)
tmnxSvcDhcpMRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtInetAddrType"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtInetAddr"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtPrefixLen"),
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtEntry.setStatus("current")
_TmnxSvcDhcpMRtInetAddrType_Type = InetAddressType
_TmnxSvcDhcpMRtInetAddrType_Object = MibTableColumn
tmnxSvcDhcpMRtInetAddrType = _TmnxSvcDhcpMRtInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 1),
    _TmnxSvcDhcpMRtInetAddrType_Type()
)
tmnxSvcDhcpMRtInetAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtInetAddrType.setStatus("current")


class _TmnxSvcDhcpMRtInetAddr_Type(InetAddress):
    """Custom type tmnxSvcDhcpMRtInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TmnxSvcDhcpMRtInetAddr_Type.__name__ = "InetAddress"
_TmnxSvcDhcpMRtInetAddr_Object = MibTableColumn
tmnxSvcDhcpMRtInetAddr = _TmnxSvcDhcpMRtInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 2),
    _TmnxSvcDhcpMRtInetAddr_Type()
)
tmnxSvcDhcpMRtInetAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtInetAddr.setStatus("current")


class _TmnxSvcDhcpMRtPrefixLen_Type(InetAddressPrefixLength):
    """Custom type tmnxSvcDhcpMRtPrefixLen based on InetAddressPrefixLength"""
    subtypeSpec = InetAddressPrefixLength.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_TmnxSvcDhcpMRtPrefixLen_Type.__name__ = "InetAddressPrefixLength"
_TmnxSvcDhcpMRtPrefixLen_Object = MibTableColumn
tmnxSvcDhcpMRtPrefixLen = _TmnxSvcDhcpMRtPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 3),
    _TmnxSvcDhcpMRtPrefixLen_Type()
)
tmnxSvcDhcpMRtPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtPrefixLen.setStatus("current")
_TmnxSvcDhcpMRtStatus_Type = TmnxManagedRouteStatus
_TmnxSvcDhcpMRtStatus_Object = MibTableColumn
tmnxSvcDhcpMRtStatus = _TmnxSvcDhcpMRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 4),
    _TmnxSvcDhcpMRtStatus_Type()
)
tmnxSvcDhcpMRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtStatus.setStatus("current")
_TmnxSvcDhcpMRtMetric_Type = TmnxRadiusFramedRouteMetric
_TmnxSvcDhcpMRtMetric_Object = MibTableColumn
tmnxSvcDhcpMRtMetric = _TmnxSvcDhcpMRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 5),
    _TmnxSvcDhcpMRtMetric_Type()
)
tmnxSvcDhcpMRtMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtMetric.setStatus("current")
_TmnxSvcDhcpMRtPreference_Type = TmnxRadiusFramedRoutePreference
_TmnxSvcDhcpMRtPreference_Object = MibTableColumn
tmnxSvcDhcpMRtPreference = _TmnxSvcDhcpMRtPreference_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 6),
    _TmnxSvcDhcpMRtPreference_Type()
)
tmnxSvcDhcpMRtPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtPreference.setStatus("current")
_TmnxSvcDhcpMRtTag_Type = TmnxRadiusFramedRouteTag
_TmnxSvcDhcpMRtTag_Object = MibTableColumn
tmnxSvcDhcpMRtTag = _TmnxSvcDhcpMRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 192, 1, 7),
    _TmnxSvcDhcpMRtTag_Type()
)
tmnxSvcDhcpMRtTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtTag.setStatus("current")
_SvcVsdDynamicSvcObjs_ObjectIdentity = ObjectIdentity
svcVsdDynamicSvcObjs = _SvcVsdDynamicSvcObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193)
)
_TmnxVsdRootObjTable_Object = MibTable
tmnxVsdRootObjTable = _TmnxVsdRootObjTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1)
)
if mibBuilder.loadTexts:
    tmnxVsdRootObjTable.setStatus("current")
_TmnxVsdRootObjEntry_Object = MibTableRow
tmnxVsdRootObjEntry = _TmnxVsdRootObjEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1)
)
tmnxVsdRootObjEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdRootObjIndex"),
)
if mibBuilder.loadTexts:
    tmnxVsdRootObjEntry.setStatus("current")
_TmnxVsdRootObjIndex_Type = Unsigned32
_TmnxVsdRootObjIndex_Object = MibTableColumn
tmnxVsdRootObjIndex = _TmnxVsdRootObjIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1, 1),
    _TmnxVsdRootObjIndex_Type()
)
tmnxVsdRootObjIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdRootObjIndex.setStatus("current")
_TmnxVsdRootObjInstance_Type = RowPointer
_TmnxVsdRootObjInstance_Object = MibTableColumn
tmnxVsdRootObjInstance = _TmnxVsdRootObjInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1, 2),
    _TmnxVsdRootObjInstance_Type()
)
tmnxVsdRootObjInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdRootObjInstance.setStatus("current")
_TmnxVsdRootObjOrphanTime_Type = TimeStamp
_TmnxVsdRootObjOrphanTime_Object = MibTableColumn
tmnxVsdRootObjOrphanTime = _TmnxVsdRootObjOrphanTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1, 3),
    _TmnxVsdRootObjOrphanTime_Type()
)
tmnxVsdRootObjOrphanTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdRootObjOrphanTime.setStatus("current")
_TmnxVsdRootObjSnippetName_Type = DisplayString
_TmnxVsdRootObjSnippetName_Object = MibTableColumn
tmnxVsdRootObjSnippetName = _TmnxVsdRootObjSnippetName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1, 4),
    _TmnxVsdRootObjSnippetName_Type()
)
tmnxVsdRootObjSnippetName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdRootObjSnippetName.setStatus("current")
_TmnxVsdRootObjSnippetInstance_Type = DisplayString
_TmnxVsdRootObjSnippetInstance_Object = MibTableColumn
tmnxVsdRootObjSnippetInstance = _TmnxVsdRootObjSnippetInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 1, 1, 5),
    _TmnxVsdRootObjSnippetInstance_Type()
)
tmnxVsdRootObjSnippetInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdRootObjSnippetInstance.setStatus("current")
_TmnxVsdScriptStatsTable_Object = MibTable
tmnxVsdScriptStatsTable = _TmnxVsdScriptStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 2)
)
if mibBuilder.loadTexts:
    tmnxVsdScriptStatsTable.setStatus("current")
_TmnxVsdScriptStatsEntry_Object = MibTableRow
tmnxVsdScriptStatsEntry = _TmnxVsdScriptStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 2, 1)
)
tmnxVsdScriptStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptStatsId"),
)
if mibBuilder.loadTexts:
    tmnxVsdScriptStatsEntry.setStatus("current")
_TmnxVsdScriptStatsId_Type = Unsigned32
_TmnxVsdScriptStatsId_Object = MibTableColumn
tmnxVsdScriptStatsId = _TmnxVsdScriptStatsId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 2, 1, 1),
    _TmnxVsdScriptStatsId_Type()
)
tmnxVsdScriptStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptStatsId.setStatus("current")
_TmnxVsdScriptStatsDescr_Type = TItemDescription
_TmnxVsdScriptStatsDescr_Object = MibTableColumn
tmnxVsdScriptStatsDescr = _TmnxVsdScriptStatsDescr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 2, 1, 2),
    _TmnxVsdScriptStatsDescr_Type()
)
tmnxVsdScriptStatsDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptStatsDescr.setStatus("current")
_TmnxVsdScriptStatsVal_Type = Counter32
_TmnxVsdScriptStatsVal_Object = MibTableColumn
tmnxVsdScriptStatsVal = _TmnxVsdScriptStatsVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 2, 1, 3),
    _TmnxVsdScriptStatsVal_Type()
)
tmnxVsdScriptStatsVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptStatsVal.setStatus("current")
_TmnxVsdScriptSnippetTable_Object = MibTable
tmnxVsdScriptSnippetTable = _TmnxVsdScriptSnippetTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3)
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetTable.setStatus("current")
_TmnxVsdScriptSnippetEntry_Object = MibTableRow
tmnxVsdScriptSnippetEntry = _TmnxVsdScriptSnippetEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3, 1)
)
tmnxVsdScriptSnippetEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetName"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetInstance"),
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetEntry.setStatus("current")


class _TmnxVsdScriptSnippetName_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_TmnxVsdScriptSnippetName_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetName_Object = MibTableColumn
tmnxVsdScriptSnippetName = _TmnxVsdScriptSnippetName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3, 1, 1),
    _TmnxVsdScriptSnippetName_Type()
)
tmnxVsdScriptSnippetName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetName.setStatus("current")


class _TmnxVsdScriptSnippetInstance_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetInstance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_TmnxVsdScriptSnippetInstance_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetInstance_Object = MibTableColumn
tmnxVsdScriptSnippetInstance = _TmnxVsdScriptSnippetInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3, 1, 2),
    _TmnxVsdScriptSnippetInstance_Type()
)
tmnxVsdScriptSnippetInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetInstance.setStatus("current")
_TmnxVsdScriptSnippetRefCount_Type = Counter32
_TmnxVsdScriptSnippetRefCount_Object = MibTableColumn
tmnxVsdScriptSnippetRefCount = _TmnxVsdScriptSnippetRefCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3, 1, 3),
    _TmnxVsdScriptSnippetRefCount_Type()
)
tmnxVsdScriptSnippetRefCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefCount.setStatus("current")
_TmnxVsdScriptSnippetDictLength_Type = Unsigned32
_TmnxVsdScriptSnippetDictLength_Object = MibTableColumn
tmnxVsdScriptSnippetDictLength = _TmnxVsdScriptSnippetDictLength_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 3, 1, 4),
    _TmnxVsdScriptSnippetDictLength_Type()
)
tmnxVsdScriptSnippetDictLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetDictLength.setStatus("current")
_TmnxVsdScriptSnippetRootObjTable_Object = MibTable
tmnxVsdScriptSnippetRootObjTable = _TmnxVsdScriptSnippetRootObjTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 4)
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRootObjTable.setStatus("current")
_TmnxVsdScriptSnippetRootObjEntry_Object = MibTableRow
tmnxVsdScriptSnippetRootObjEntry = _TmnxVsdScriptSnippetRootObjEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 4, 1)
)
tmnxVsdScriptSnippetRootObjEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetName"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetInstance"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRootObjIdx"),
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRootObjEntry.setStatus("current")
_TmnxVsdScriptSnippetRootObjIdx_Type = Unsigned32
_TmnxVsdScriptSnippetRootObjIdx_Object = MibTableColumn
tmnxVsdScriptSnippetRootObjIdx = _TmnxVsdScriptSnippetRootObjIdx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 4, 1, 1),
    _TmnxVsdScriptSnippetRootObjIdx_Type()
)
tmnxVsdScriptSnippetRootObjIdx.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRootObjIdx.setStatus("current")
_TmnxVsdScriptSnippetRootObjOid_Type = RowPointer
_TmnxVsdScriptSnippetRootObjOid_Object = MibTableColumn
tmnxVsdScriptSnippetRootObjOid = _TmnxVsdScriptSnippetRootObjOid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 4, 1, 2),
    _TmnxVsdScriptSnippetRootObjOid_Type()
)
tmnxVsdScriptSnippetRootObjOid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRootObjOid.setStatus("current")
_TmnxVsdScriptSnippetRefTable_Object = MibTable
tmnxVsdScriptSnippetRefTable = _TmnxVsdScriptSnippetRefTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 5)
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefTable.setStatus("current")
_TmnxVsdScriptSnippetRefEntry_Object = MibTableRow
tmnxVsdScriptSnippetRefEntry = _TmnxVsdScriptSnippetRefEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 5, 1)
)
tmnxVsdScriptSnippetRefEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetName"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetInstance"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRefIdx"),
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefEntry.setStatus("current")
_TmnxVsdScriptSnippetRefIdx_Type = Unsigned32
_TmnxVsdScriptSnippetRefIdx_Object = MibTableColumn
tmnxVsdScriptSnippetRefIdx = _TmnxVsdScriptSnippetRefIdx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 5, 1, 1),
    _TmnxVsdScriptSnippetRefIdx_Type()
)
tmnxVsdScriptSnippetRefIdx.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefIdx.setStatus("current")


class _TmnxVsdScriptSnippetRefSnipName_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetRefSnipName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_TmnxVsdScriptSnippetRefSnipName_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetRefSnipName_Object = MibTableColumn
tmnxVsdScriptSnippetRefSnipName = _TmnxVsdScriptSnippetRefSnipName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 5, 1, 2),
    _TmnxVsdScriptSnippetRefSnipName_Type()
)
tmnxVsdScriptSnippetRefSnipName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefSnipName.setStatus("current")


class _TmnxVsdScriptSnippetRefSnipInst_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetRefSnipInst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_TmnxVsdScriptSnippetRefSnipInst_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetRefSnipInst_Object = MibTableColumn
tmnxVsdScriptSnippetRefSnipInst = _TmnxVsdScriptSnippetRefSnipInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 5, 1, 3),
    _TmnxVsdScriptSnippetRefSnipInst_Type()
)
tmnxVsdScriptSnippetRefSnipInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetRefSnipInst.setStatus("current")
_TmnxVsdScriptSnippetResIdTable_Object = MibTable
tmnxVsdScriptSnippetResIdTable = _TmnxVsdScriptSnippetResIdTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 6)
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetResIdTable.setStatus("current")
_TmnxVsdScriptSnippetResIdEntry_Object = MibTableRow
tmnxVsdScriptSnippetResIdEntry = _TmnxVsdScriptSnippetResIdEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 6, 1)
)
tmnxVsdScriptSnippetResIdEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetName"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetInstance"),
    (0, "TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetResIdIdx"),
)
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetResIdEntry.setStatus("current")
_TmnxVsdScriptSnippetResIdIdx_Type = Unsigned32
_TmnxVsdScriptSnippetResIdIdx_Object = MibTableColumn
tmnxVsdScriptSnippetResIdIdx = _TmnxVsdScriptSnippetResIdIdx_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 6, 1, 1),
    _TmnxVsdScriptSnippetResIdIdx_Type()
)
tmnxVsdScriptSnippetResIdIdx.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetResIdIdx.setStatus("current")


class _TmnxVsdScriptSnippetResIdType_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetResIdType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_TmnxVsdScriptSnippetResIdType_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetResIdType_Object = MibTableColumn
tmnxVsdScriptSnippetResIdType = _TmnxVsdScriptSnippetResIdType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 6, 1, 2),
    _TmnxVsdScriptSnippetResIdType_Type()
)
tmnxVsdScriptSnippetResIdType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetResIdType.setStatus("current")


class _TmnxVsdScriptSnippetResIdValue_Type(DisplayString):
    """Custom type tmnxVsdScriptSnippetResIdValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_TmnxVsdScriptSnippetResIdValue_Type.__name__ = "DisplayString"
_TmnxVsdScriptSnippetResIdValue_Object = MibTableColumn
tmnxVsdScriptSnippetResIdValue = _TmnxVsdScriptSnippetResIdValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 6, 1, 3),
    _TmnxVsdScriptSnippetResIdValue_Type()
)
tmnxVsdScriptSnippetResIdValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdScriptSnippetResIdValue.setStatus("current")
_TmnxVsdRootObjTableLastCh_Type = TimeStamp
_TmnxVsdRootObjTableLastCh_Object = MibScalar
tmnxVsdRootObjTableLastCh = _TmnxVsdRootObjTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 7),
    _TmnxVsdRootObjTableLastCh_Type()
)
tmnxVsdRootObjTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdRootObjTableLastCh.setStatus("current")
_TmnxVsdNonStoredRootObjCount_Type = Counter32
_TmnxVsdNonStoredRootObjCount_Object = MibScalar
tmnxVsdNonStoredRootObjCount = _TmnxVsdNonStoredRootObjCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 8),
    _TmnxVsdNonStoredRootObjCount_Type()
)
tmnxVsdNonStoredRootObjCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdNonStoredRootObjCount.setStatus("current")
_TmnxVsdSnippetTableLastCh_Type = TimeStamp
_TmnxVsdSnippetTableLastCh_Object = MibScalar
tmnxVsdSnippetTableLastCh = _TmnxVsdSnippetTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 9),
    _TmnxVsdSnippetTableLastCh_Type()
)
tmnxVsdSnippetTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdSnippetTableLastCh.setStatus("current")
_TmnxVsdSnipRootObjTblLastCh_Type = TimeStamp
_TmnxVsdSnipRootObjTblLastCh_Object = MibScalar
tmnxVsdSnipRootObjTblLastCh = _TmnxVsdSnipRootObjTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 10),
    _TmnxVsdSnipRootObjTblLastCh_Type()
)
tmnxVsdSnipRootObjTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdSnipRootObjTblLastCh.setStatus("current")
_TmnxVsdSnippetRefTableLastCh_Type = TimeStamp
_TmnxVsdSnippetRefTableLastCh_Object = MibScalar
tmnxVsdSnippetRefTableLastCh = _TmnxVsdSnippetRefTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 11),
    _TmnxVsdSnippetRefTableLastCh_Type()
)
tmnxVsdSnippetRefTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdSnippetRefTableLastCh.setStatus("current")
_TmnxVsdSnippetResIdTblLastCh_Type = TimeStamp
_TmnxVsdSnippetResIdTblLastCh_Object = MibScalar
tmnxVsdSnippetResIdTblLastCh = _TmnxVsdSnippetResIdTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 12),
    _TmnxVsdSnippetResIdTblLastCh_Type()
)
tmnxVsdSnippetResIdTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdSnippetResIdTblLastCh.setStatus("current")
_TmnxVsdStatsLastClearedTime_Type = TimeStamp
_TmnxVsdStatsLastClearedTime_Object = MibScalar
tmnxVsdStatsLastClearedTime = _TmnxVsdStatsLastClearedTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 193, 13),
    _TmnxVsdStatsLastClearedTime_Type()
)
tmnxVsdStatsLastClearedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxVsdStatsLastClearedTime.setStatus("current")
_SvcEvpnMplsESDestTEPTable_Object = MibTable
svcEvpnMplsESDestTEPTable = _SvcEvpnMplsESDestTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194)
)
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPTable.setStatus("obsolete")
_SvcEvpnMplsESDestTEPEntry_Object = MibTableRow
svcEvpnMplsESDestTEPEntry = _SvcEvpnMplsESDestTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1)
)
svcEvpnMplsESDestTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPLabel"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPEntry.setStatus("current")
_SvcEvpnMplsESDestTEPAddrType_Type = InetAddressType
_SvcEvpnMplsESDestTEPAddrType_Object = MibTableColumn
svcEvpnMplsESDestTEPAddrType = _SvcEvpnMplsESDestTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 1),
    _SvcEvpnMplsESDestTEPAddrType_Type()
)
svcEvpnMplsESDestTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPAddrType.setStatus("obsolete")


class _SvcEvpnMplsESDestTEPAddress_Type(InetAddress):
    """Custom type svcEvpnMplsESDestTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMplsESDestTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnMplsESDestTEPAddress_Object = MibTableColumn
svcEvpnMplsESDestTEPAddress = _SvcEvpnMplsESDestTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 2),
    _SvcEvpnMplsESDestTEPAddress_Type()
)
svcEvpnMplsESDestTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPAddress.setStatus("obsolete")
_SvcEvpnMplsESDestTEPLabel_Type = Unsigned32
_SvcEvpnMplsESDestTEPLabel_Object = MibTableColumn
svcEvpnMplsESDestTEPLabel = _SvcEvpnMplsESDestTEPLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 3),
    _SvcEvpnMplsESDestTEPLabel_Type()
)
svcEvpnMplsESDestTEPLabel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPLabel.setStatus("obsolete")
_SvcEvpnMplsESDestTEPLastChanged_Type = TimeStamp
_SvcEvpnMplsESDestTEPLastChanged_Object = MibTableColumn
svcEvpnMplsESDestTEPLastChanged = _SvcEvpnMplsESDestTEPLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 4),
    _SvcEvpnMplsESDestTEPLastChanged_Type()
)
svcEvpnMplsESDestTEPLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPLastChanged.setStatus("obsolete")
_SvcEvpnMplsESDestTEPTunnelType_Type = TmnxTunnelTypeExt
_SvcEvpnMplsESDestTEPTunnelType_Object = MibTableColumn
svcEvpnMplsESDestTEPTunnelType = _SvcEvpnMplsESDestTEPTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 5),
    _SvcEvpnMplsESDestTEPTunnelType_Type()
)
svcEvpnMplsESDestTEPTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPTunnelType.setStatus("obsolete")
_SvcEvpnMplsESDestTEPResType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnMplsESDestTEPResType_Object = MibTableColumn
svcEvpnMplsESDestTEPResType = _SvcEvpnMplsESDestTEPResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 6),
    _SvcEvpnMplsESDestTEPResType_Type()
)
svcEvpnMplsESDestTEPResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPResType.setStatus("obsolete")
_SvcEvpnMplsESDestTEPTnlId_Type = Unsigned32
_SvcEvpnMplsESDestTEPTnlId_Object = MibTableColumn
svcEvpnMplsESDestTEPTnlId = _SvcEvpnMplsESDestTEPTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 194, 1, 7),
    _SvcEvpnMplsESDestTEPTnlId_Type()
)
svcEvpnMplsESDestTEPTnlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTEPTnlId.setStatus("obsolete")
_SvcEvpnMHEthSegIsidTable_Object = MibTable
svcEvpnMHEthSegIsidTable = _SvcEvpnMHEthSegIsidTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195)
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidTable.setStatus("current")
_SvcEvpnMHEthSegIsidEntry_Object = MibTableRow
svcEvpnMHEthSegIsidEntry = _SvcEvpnMHEthSegIsidEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1)
)
svcEvpnMHEthSegIsidEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsid"),
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidEntry.setStatus("current")
_SvcEvpnMHEthSegIsid_Type = TmnxISIDNoZero
_SvcEvpnMHEthSegIsid_Object = MibTableColumn
svcEvpnMHEthSegIsid = _SvcEvpnMHEthSegIsid_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1, 1),
    _SvcEvpnMHEthSegIsid_Type()
)
svcEvpnMHEthSegIsid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsid.setStatus("current")
_SvcEvpnMHEthSegIsidIsDF_Type = TruthValue
_SvcEvpnMHEthSegIsidIsDF_Object = MibTableColumn
svcEvpnMHEthSegIsidIsDF = _SvcEvpnMHEthSegIsidIsDF_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1, 2),
    _SvcEvpnMHEthSegIsidIsDF_Type()
)
svcEvpnMHEthSegIsidIsDF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidIsDF.setStatus("current")
_SvcEvpnMHEthSegIsidActTimRem_Type = Integer32
_SvcEvpnMHEthSegIsidActTimRem_Object = MibTableColumn
svcEvpnMHEthSegIsidActTimRem = _SvcEvpnMHEthSegIsidActTimRem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1, 3),
    _SvcEvpnMHEthSegIsidActTimRem_Type()
)
svcEvpnMHEthSegIsidActTimRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidActTimRem.setStatus("current")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidActTimRem.setUnits("seconds")
_SvcEvpnMHEthSegIsidSvcId_Type = TmnxServId
_SvcEvpnMHEthSegIsidSvcId_Object = MibTableColumn
svcEvpnMHEthSegIsidSvcId = _SvcEvpnMHEthSegIsidSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1, 4),
    _SvcEvpnMHEthSegIsidSvcId_Type()
)
svcEvpnMHEthSegIsidSvcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidSvcId.setStatus("current")
_SvcEvpnMHEthSegIsidDFLastChanged_Type = TimeStamp
_SvcEvpnMHEthSegIsidDFLastChanged_Object = MibTableColumn
svcEvpnMHEthSegIsidDFLastChanged = _SvcEvpnMHEthSegIsidDFLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 195, 1, 5),
    _SvcEvpnMHEthSegIsidDFLastChanged_Type()
)
svcEvpnMHEthSegIsidDFLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFLastChanged.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtTable_Object = MibTable
svcEvpnMHEthSegIsidDFCndtTable = _SvcEvpnMHEthSegIsidDFCndtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196)
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtTable.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtEntry_Object = MibTableRow
svcEvpnMHEthSegIsidDFCndtEntry = _SvcEvpnMHEthSegIsidDFCndtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1)
)
svcEvpnMHEthSegIsidDFCndtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsid"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAdType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAddress"),
)
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtEntry.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtAdType_Type = InetAddressType
_SvcEvpnMHEthSegIsidDFCndtAdType_Object = MibTableColumn
svcEvpnMHEthSegIsidDFCndtAdType = _SvcEvpnMHEthSegIsidDFCndtAdType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1, 1),
    _SvcEvpnMHEthSegIsidDFCndtAdType_Type()
)
svcEvpnMHEthSegIsidDFCndtAdType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtAdType.setStatus("current")


class _SvcEvpnMHEthSegIsidDFCndtAddress_Type(InetAddress):
    """Custom type svcEvpnMHEthSegIsidDFCndtAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMHEthSegIsidDFCndtAddress_Type.__name__ = "InetAddress"
_SvcEvpnMHEthSegIsidDFCndtAddress_Object = MibTableColumn
svcEvpnMHEthSegIsidDFCndtAddress = _SvcEvpnMHEthSegIsidDFCndtAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1, 2),
    _SvcEvpnMHEthSegIsidDFCndtAddress_Type()
)
svcEvpnMHEthSegIsidDFCndtAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtAddress.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtAdded_Type = TimeStamp
_SvcEvpnMHEthSegIsidDFCndtAdded_Object = MibTableColumn
svcEvpnMHEthSegIsidDFCndtAdded = _SvcEvpnMHEthSegIsidDFCndtAdded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1, 3),
    _SvcEvpnMHEthSegIsidDFCndtAdded_Type()
)
svcEvpnMHEthSegIsidDFCndtAdded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtAdded.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtPEOprVl_Type = Unsigned32
_SvcEvpnMHEthSegIsidDFCndtPEOprVl_Object = MibTableColumn
svcEvpnMHEthSegIsidDFCndtPEOprVl = _SvcEvpnMHEthSegIsidDFCndtPEOprVl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1, 4),
    _SvcEvpnMHEthSegIsidDFCndtPEOprVl_Type()
)
svcEvpnMHEthSegIsidDFCndtPEOprVl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtPEOprVl.setStatus("current")
_SvcEvpnMHEthSegIsidDFCndtPEDtPmt_Type = TruthValue
_SvcEvpnMHEthSegIsidDFCndtPEDtPmt_Object = MibTableColumn
svcEvpnMHEthSegIsidDFCndtPEDtPmt = _SvcEvpnMHEthSegIsidDFCndtPEDtPmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 196, 1, 5),
    _SvcEvpnMHEthSegIsidDFCndtPEDtPmt_Type()
)
svcEvpnMHEthSegIsidDFCndtPEDtPmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMHEthSegIsidDFCndtPEDtPmt.setStatus("current")
_SvcTlsEsPbrL2Table_Object = MibTable
svcTlsEsPbrL2Table = _SvcTlsEsPbrL2Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197)
)
if mibBuilder.loadTexts:
    svcTlsEsPbrL2Table.setStatus("current")
_SvcTlsEsPbrL2Entry_Object = MibTableRow
svcTlsEsPbrL2Entry = _SvcTlsEsPbrL2Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1)
)
svcTlsEsPbrL2Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsEsPbrL2Esi"),
)
if mibBuilder.loadTexts:
    svcTlsEsPbrL2Entry.setStatus("current")


class _SvcTlsEsPbrL2Esi_Type(OctetString):
    """Custom type svcTlsEsPbrL2Esi based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )
    fixed_length = 10


_SvcTlsEsPbrL2Esi_Type.__name__ = "OctetString"
_SvcTlsEsPbrL2Esi_Object = MibTableColumn
svcTlsEsPbrL2Esi = _SvcTlsEsPbrL2Esi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 1),
    _SvcTlsEsPbrL2Esi_Type()
)
svcTlsEsPbrL2Esi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2Esi.setStatus("current")


class _SvcTlsEsPbrL2Status_Type(Integer32):
    """Custom type svcTlsEsPbrL2Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_SvcTlsEsPbrL2Status_Type.__name__ = "Integer32"
_SvcTlsEsPbrL2Status_Object = MibTableColumn
svcTlsEsPbrL2Status = _SvcTlsEsPbrL2Status_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 2),
    _SvcTlsEsPbrL2Status_Type()
)
svcTlsEsPbrL2Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2Status.setStatus("current")
_SvcTlsEsPbrL2NumUsers_Type = Unsigned32
_SvcTlsEsPbrL2NumUsers_Object = MibTableColumn
svcTlsEsPbrL2NumUsers = _SvcTlsEsPbrL2NumUsers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 3),
    _SvcTlsEsPbrL2NumUsers_Type()
)
svcTlsEsPbrL2NumUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2NumUsers.setStatus("current")
_SvcTlsEsPbrL2VTEPAddrType_Type = InetAddressType
_SvcTlsEsPbrL2VTEPAddrType_Object = MibTableColumn
svcTlsEsPbrL2VTEPAddrType = _SvcTlsEsPbrL2VTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 4),
    _SvcTlsEsPbrL2VTEPAddrType_Type()
)
svcTlsEsPbrL2VTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2VTEPAddrType.setStatus("current")


class _SvcTlsEsPbrL2VTEPAddress_Type(InetAddress):
    """Custom type svcTlsEsPbrL2VTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsEsPbrL2VTEPAddress_Type.__name__ = "InetAddress"
_SvcTlsEsPbrL2VTEPAddress_Object = MibTableColumn
svcTlsEsPbrL2VTEPAddress = _SvcTlsEsPbrL2VTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 5),
    _SvcTlsEsPbrL2VTEPAddress_Type()
)
svcTlsEsPbrL2VTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2VTEPAddress.setStatus("current")
_SvcTlsEsPbrL2EgrVNI_Type = Unsigned32
_SvcTlsEsPbrL2EgrVNI_Object = MibTableColumn
svcTlsEsPbrL2EgrVNI = _SvcTlsEsPbrL2EgrVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 197, 1, 6),
    _SvcTlsEsPbrL2EgrVNI_Type()
)
svcTlsEsPbrL2EgrVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsEsPbrL2EgrVNI.setStatus("current")
_SvcEvpnMplsPbbESDestTEPTable_Object = MibTable
svcEvpnMplsPbbESDestTEPTable = _SvcEvpnMplsPbbESDestTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198)
)
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPTable.setStatus("current")
_SvcEvpnMplsPbbESDestTEPEntry_Object = MibTableRow
svcEvpnMplsPbbESDestTEPEntry = _SvcEvpnMplsPbbESDestTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1)
)
svcEvpnMplsPbbESDestTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPBMac"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPLabel"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPEntry.setStatus("current")
_SvcEvpnMplsPbbESDestTEPBMac_Type = MacAddress
_SvcEvpnMplsPbbESDestTEPBMac_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPBMac = _SvcEvpnMplsPbbESDestTEPBMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 1),
    _SvcEvpnMplsPbbESDestTEPBMac_Type()
)
svcEvpnMplsPbbESDestTEPBMac.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPBMac.setStatus("current")
_SvcEvpnMplsPbbESDestTEPAddrType_Type = InetAddressType
_SvcEvpnMplsPbbESDestTEPAddrType_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPAddrType = _SvcEvpnMplsPbbESDestTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 2),
    _SvcEvpnMplsPbbESDestTEPAddrType_Type()
)
svcEvpnMplsPbbESDestTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPAddrType.setStatus("current")


class _SvcEvpnMplsPbbESDestTEPAddress_Type(InetAddress):
    """Custom type svcEvpnMplsPbbESDestTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnMplsPbbESDestTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnMplsPbbESDestTEPAddress_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPAddress = _SvcEvpnMplsPbbESDestTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 3),
    _SvcEvpnMplsPbbESDestTEPAddress_Type()
)
svcEvpnMplsPbbESDestTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPAddress.setStatus("current")
_SvcEvpnMplsPbbESDestTEPLabel_Type = Unsigned32
_SvcEvpnMplsPbbESDestTEPLabel_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPLabel = _SvcEvpnMplsPbbESDestTEPLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 4),
    _SvcEvpnMplsPbbESDestTEPLabel_Type()
)
svcEvpnMplsPbbESDestTEPLabel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPLabel.setStatus("current")
_SvcEvpnMplsPbbESDestTEPLstChg_Type = TimeStamp
_SvcEvpnMplsPbbESDestTEPLstChg_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPLstChg = _SvcEvpnMplsPbbESDestTEPLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 5),
    _SvcEvpnMplsPbbESDestTEPLstChg_Type()
)
svcEvpnMplsPbbESDestTEPLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPLstChg.setStatus("current")
_SvcEvpnMplsPbbESDestTEPTnlType_Type = TmnxTunnelTypeExt
_SvcEvpnMplsPbbESDestTEPTnlType_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPTnlType = _SvcEvpnMplsPbbESDestTEPTnlType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 6),
    _SvcEvpnMplsPbbESDestTEPTnlType_Type()
)
svcEvpnMplsPbbESDestTEPTnlType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPTnlType.setStatus("obsolete")
_SvcEvpnMplsPbbESDestTEPResType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnMplsPbbESDestTEPResType_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPResType = _SvcEvpnMplsPbbESDestTEPResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 7),
    _SvcEvpnMplsPbbESDestTEPResType_Type()
)
svcEvpnMplsPbbESDestTEPResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPResType.setStatus("current")
_SvcEvpnMplsPbbESDestTEPTnlId_Type = Unsigned32
_SvcEvpnMplsPbbESDestTEPTnlId_Object = MibTableColumn
svcEvpnMplsPbbESDestTEPTnlId = _SvcEvpnMplsPbbESDestTEPTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 198, 1, 8),
    _SvcEvpnMplsPbbESDestTEPTnlId_Type()
)
svcEvpnMplsPbbESDestTEPTnlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESDestTEPTnlId.setStatus("current")
_SvcSysEthSegBMacTable_Object = MibTable
svcSysEthSegBMacTable = _SvcSysEthSegBMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 199)
)
if mibBuilder.loadTexts:
    svcSysEthSegBMacTable.setStatus("current")
_SvcSysEthSegBMacEntry_Object = MibTableRow
svcSysEthSegBMacEntry = _SvcSysEthSegBMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 199, 1)
)
svcSysEthSegBMacEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcSysEthSegBMacEntry.setStatus("current")
_SvcSysEthSegBMacAddress_Type = MacAddress
_SvcSysEthSegBMacAddress_Object = MibTableColumn
svcSysEthSegBMacAddress = _SvcSysEthSegBMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 199, 1, 1),
    _SvcSysEthSegBMacAddress_Type()
)
svcSysEthSegBMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysEthSegBMacAddress.setStatus("current")
_TmnxSvcDCObjs_ObjectIdentity = ObjectIdentity
tmnxSvcDCObjs = _TmnxSvcDCObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 200)
)
_SvcVprnEsPbrL3Table_Object = MibTable
svcVprnEsPbrL3Table = _SvcVprnEsPbrL3Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201)
)
if mibBuilder.loadTexts:
    svcVprnEsPbrL3Table.setStatus("current")
_SvcVprnEsPbrL3Entry_Object = MibTableRow
svcVprnEsPbrL3Entry = _SvcVprnEsPbrL3Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1)
)
svcVprnEsPbrL3Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnEsPbrL3SFIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcVprnEsPbrL3SFIpAddr"),
)
if mibBuilder.loadTexts:
    svcVprnEsPbrL3Entry.setStatus("current")
_SvcVprnEsPbrL3SFIpAddrType_Type = InetAddressType
_SvcVprnEsPbrL3SFIpAddrType_Object = MibTableColumn
svcVprnEsPbrL3SFIpAddrType = _SvcVprnEsPbrL3SFIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 1),
    _SvcVprnEsPbrL3SFIpAddrType_Type()
)
svcVprnEsPbrL3SFIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3SFIpAddrType.setStatus("current")


class _SvcVprnEsPbrL3SFIpAddr_Type(InetAddress):
    """Custom type svcVprnEsPbrL3SFIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVprnEsPbrL3SFIpAddr_Type.__name__ = "InetAddress"
_SvcVprnEsPbrL3SFIpAddr_Object = MibTableColumn
svcVprnEsPbrL3SFIpAddr = _SvcVprnEsPbrL3SFIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 2),
    _SvcVprnEsPbrL3SFIpAddr_Type()
)
svcVprnEsPbrL3SFIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3SFIpAddr.setStatus("current")


class _SvcVprnEsPbrL3Esi_Type(OctetString):
    """Custom type svcVprnEsPbrL3Esi based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )
    fixed_length = 10


_SvcVprnEsPbrL3Esi_Type.__name__ = "OctetString"
_SvcVprnEsPbrL3Esi_Object = MibTableColumn
svcVprnEsPbrL3Esi = _SvcVprnEsPbrL3Esi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 3),
    _SvcVprnEsPbrL3Esi_Type()
)
svcVprnEsPbrL3Esi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3Esi.setStatus("current")
_SvcVprnEsPbrL3IPIfIndex_Type = InterfaceIndex
_SvcVprnEsPbrL3IPIfIndex_Object = MibTableColumn
svcVprnEsPbrL3IPIfIndex = _SvcVprnEsPbrL3IPIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 4),
    _SvcVprnEsPbrL3IPIfIndex_Type()
)
svcVprnEsPbrL3IPIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3IPIfIndex.setStatus("current")


class _SvcVprnEsPbrL3Status_Type(Integer32):
    """Custom type svcVprnEsPbrL3Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_SvcVprnEsPbrL3Status_Type.__name__ = "Integer32"
_SvcVprnEsPbrL3Status_Object = MibTableColumn
svcVprnEsPbrL3Status = _SvcVprnEsPbrL3Status_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 5),
    _SvcVprnEsPbrL3Status_Type()
)
svcVprnEsPbrL3Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3Status.setStatus("current")
_SvcVprnEsPbrL3NumUsers_Type = Unsigned32
_SvcVprnEsPbrL3NumUsers_Object = MibTableColumn
svcVprnEsPbrL3NumUsers = _SvcVprnEsPbrL3NumUsers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 6),
    _SvcVprnEsPbrL3NumUsers_Type()
)
svcVprnEsPbrL3NumUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3NumUsers.setStatus("current")
_SvcVprnEsPbrL3MAC_Type = MacAddress
_SvcVprnEsPbrL3MAC_Object = MibTableColumn
svcVprnEsPbrL3MAC = _SvcVprnEsPbrL3MAC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 7),
    _SvcVprnEsPbrL3MAC_Type()
)
svcVprnEsPbrL3MAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3MAC.setStatus("current")
_SvcVprnEsPbrL3VTEPAddrType_Type = InetAddressType
_SvcVprnEsPbrL3VTEPAddrType_Object = MibTableColumn
svcVprnEsPbrL3VTEPAddrType = _SvcVprnEsPbrL3VTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 8),
    _SvcVprnEsPbrL3VTEPAddrType_Type()
)
svcVprnEsPbrL3VTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3VTEPAddrType.setStatus("current")


class _SvcVprnEsPbrL3VTEPAddress_Type(InetAddress):
    """Custom type svcVprnEsPbrL3VTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVprnEsPbrL3VTEPAddress_Type.__name__ = "InetAddress"
_SvcVprnEsPbrL3VTEPAddress_Object = MibTableColumn
svcVprnEsPbrL3VTEPAddress = _SvcVprnEsPbrL3VTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 9),
    _SvcVprnEsPbrL3VTEPAddress_Type()
)
svcVprnEsPbrL3VTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3VTEPAddress.setStatus("current")
_SvcVprnEsPbrL3EgrVNI_Type = Unsigned32
_SvcVprnEsPbrL3EgrVNI_Object = MibTableColumn
svcVprnEsPbrL3EgrVNI = _SvcVprnEsPbrL3EgrVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 201, 1, 10),
    _SvcVprnEsPbrL3EgrVNI_Type()
)
svcVprnEsPbrL3EgrVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnEsPbrL3EgrVNI.setStatus("current")
_SvcEvpnMplsESDestTable_Object = MibTable
svcEvpnMplsESDestTable = _SvcEvpnMplsESDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 202)
)
if mibBuilder.loadTexts:
    svcEvpnMplsESDestTable.setStatus("obsolete")
_SvcEvpnMplsESDestEntry_Object = MibTableRow
svcEvpnMplsESDestEntry = _SvcEvpnMplsESDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 202, 1)
)
svcEvpnMplsESDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsESDestEntry.setStatus("current")
_SvcEvpnMplsESDestNumMacs_Type = Unsigned32
_SvcEvpnMplsESDestNumMacs_Object = MibTableColumn
svcEvpnMplsESDestNumMacs = _SvcEvpnMplsESDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 202, 1, 1),
    _SvcEvpnMplsESDestNumMacs_Type()
)
svcEvpnMplsESDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestNumMacs.setStatus("obsolete")
_SvcEvpnMplsESDestLastChanged_Type = TimeStamp
_SvcEvpnMplsESDestLastChanged_Object = MibTableColumn
svcEvpnMplsESDestLastChanged = _SvcEvpnMplsESDestLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 202, 1, 2),
    _SvcEvpnMplsESDestLastChanged_Type()
)
svcEvpnMplsESDestLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsESDestLastChanged.setStatus("obsolete")
_SvcEvpnMplsPbbESegDestTable_Object = MibTable
svcEvpnMplsPbbESegDestTable = _SvcEvpnMplsPbbESegDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 203)
)
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESegDestTable.setStatus("current")
_SvcEvpnMplsPbbESegDestEntry_Object = MibTableRow
svcEvpnMplsPbbESegDestEntry = _SvcEvpnMplsPbbESegDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 203, 1)
)
svcEvpnMplsPbbESegDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPBMac"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESegDestEntry.setStatus("current")
_SvcEvpnMplsPbbESegDestNumMacs_Type = Unsigned32
_SvcEvpnMplsPbbESegDestNumMacs_Object = MibTableColumn
svcEvpnMplsPbbESegDestNumMacs = _SvcEvpnMplsPbbESegDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 203, 1, 1),
    _SvcEvpnMplsPbbESegDestNumMacs_Type()
)
svcEvpnMplsPbbESegDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESegDestNumMacs.setStatus("obsolete")
_SvcEvpnMplsPbbESegDestLstChg_Type = TimeStamp
_SvcEvpnMplsPbbESegDestLstChg_Object = MibTableColumn
svcEvpnMplsPbbESegDestLstChg = _SvcEvpnMplsPbbESegDestLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 203, 1, 2),
    _SvcEvpnMplsPbbESegDestLstChg_Type()
)
svcEvpnMplsPbbESegDestLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsPbbESegDestLstChg.setStatus("current")
_TmnxSvcDhcpLeaseRadClassTable_Object = MibTable
tmnxSvcDhcpLeaseRadClassTable = _TmnxSvcDhcpLeaseRadClassTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 204)
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpLeaseRadClassTable.setStatus("current")
_TmnxSvcDhcpLeaseRadClassEntry_Object = MibTableRow
tmnxSvcDhcpLeaseRadClassEntry = _TmnxSvcDhcpLeaseRadClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 204, 1)
)
tmnxSvcDhcpLeaseRadClassEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcDhcpLeaseRadClassIndex"),
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpLeaseRadClassEntry.setStatus("current")


class _TmnxSvcDhcpLeaseRadClassIndex_Type(Unsigned32):
    """Custom type tmnxSvcDhcpLeaseRadClassIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_TmnxSvcDhcpLeaseRadClassIndex_Type.__name__ = "Unsigned32"
_TmnxSvcDhcpLeaseRadClassIndex_Object = MibTableColumn
tmnxSvcDhcpLeaseRadClassIndex = _TmnxSvcDhcpLeaseRadClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 204, 1, 1),
    _TmnxSvcDhcpLeaseRadClassIndex_Type()
)
tmnxSvcDhcpLeaseRadClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcDhcpLeaseRadClassIndex.setStatus("current")
_TmnxSvcDhcpLeaseRadClassAscii_Type = TruthValue
_TmnxSvcDhcpLeaseRadClassAscii_Object = MibTableColumn
tmnxSvcDhcpLeaseRadClassAscii = _TmnxSvcDhcpLeaseRadClassAscii_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 204, 1, 2),
    _TmnxSvcDhcpLeaseRadClassAscii_Type()
)
tmnxSvcDhcpLeaseRadClassAscii.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpLeaseRadClassAscii.setStatus("current")


class _TmnxSvcDhcpLeaseRadClass_Type(OctetString):
    """Custom type tmnxSvcDhcpLeaseRadClass based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_TmnxSvcDhcpLeaseRadClass_Type.__name__ = "OctetString"
_TmnxSvcDhcpLeaseRadClass_Object = MibTableColumn
tmnxSvcDhcpLeaseRadClass = _TmnxSvcDhcpLeaseRadClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 204, 1, 3),
    _TmnxSvcDhcpLeaseRadClass_Type()
)
tmnxSvcDhcpLeaseRadClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcDhcpLeaseRadClass.setStatus("current")
_SvcVllBgpEvpnAutoBindTnlTable_Object = MibTable
svcVllBgpEvpnAutoBindTnlTable = _SvcVllBgpEvpnAutoBindTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205)
)
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlTable.setStatus("obsolete")
_SvcVllBgpEvpnAutoBindTnlEntry_Object = MibTableRow
svcVllBgpEvpnAutoBindTnlEntry = _SvcVllBgpEvpnAutoBindTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1)
)
svcVllBgpEvpnAutoBindTnlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlEntry.setStatus("obsolete")
_SvcVllBgpEvpnAutoBindTnlLastChg_Type = TimeStamp
_SvcVllBgpEvpnAutoBindTnlLastChg_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlLastChg = _SvcVllBgpEvpnAutoBindTnlLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 1),
    _SvcVllBgpEvpnAutoBindTnlLastChg_Type()
)
svcVllBgpEvpnAutoBindTnlLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlLastChg.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlLdp_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlLdp based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlLdp_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlLdp_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlLdp = _SvcVllBgpEvpnAutoBindTnlLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 2),
    _SvcVllBgpEvpnAutoBindTnlLdp_Type()
)
svcVllBgpEvpnAutoBindTnlLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlLdp.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlRsvpTe_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlRsvpTe based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlRsvpTe_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlRsvpTe_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlRsvpTe = _SvcVllBgpEvpnAutoBindTnlRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 3),
    _SvcVllBgpEvpnAutoBindTnlRsvpTe_Type()
)
svcVllBgpEvpnAutoBindTnlRsvpTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlRsvpTe.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlSrIsis_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlSrIsis based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlSrIsis_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlSrIsis_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlSrIsis = _SvcVllBgpEvpnAutoBindTnlSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 4),
    _SvcVllBgpEvpnAutoBindTnlSrIsis_Type()
)
svcVllBgpEvpnAutoBindTnlSrIsis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlSrIsis.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlSrOspf_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlSrOspf based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlSrOspf_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlSrOspf_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlSrOspf = _SvcVllBgpEvpnAutoBindTnlSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 5),
    _SvcVllBgpEvpnAutoBindTnlSrOspf_Type()
)
svcVllBgpEvpnAutoBindTnlSrOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlSrOspf.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBndTnlStatus_Type(TResolveStatus):
    """Custom type svcVllBgpEvpnAutoBndTnlStatus based on TResolveStatus"""
    defaultValue = 0


_SvcVllBgpEvpnAutoBndTnlStatus_Type.__name__ = "TResolveStatus"
_SvcVllBgpEvpnAutoBndTnlStatus_Object = MibTableColumn
svcVllBgpEvpnAutoBndTnlStatus = _SvcVllBgpEvpnAutoBndTnlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 6),
    _SvcVllBgpEvpnAutoBndTnlStatus_Type()
)
svcVllBgpEvpnAutoBndTnlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBndTnlStatus.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlBgp_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlBgp based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlBgp_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlBgp_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlBgp = _SvcVllBgpEvpnAutoBindTnlBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 7),
    _SvcVllBgpEvpnAutoBindTnlBgp_Type()
)
svcVllBgpEvpnAutoBindTnlBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlBgp.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlSrTe_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlSrTe based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlSrTe_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlSrTe_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlSrTe = _SvcVllBgpEvpnAutoBindTnlSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 8),
    _SvcVllBgpEvpnAutoBindTnlSrTe_Type()
)
svcVllBgpEvpnAutoBindTnlSrTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlSrTe.setStatus("obsolete")


class _SvcVllBgpEvpnAutoBindTnlUdp_Type(TruthValue):
    """Custom type svcVllBgpEvpnAutoBindTnlUdp based on TruthValue"""
    defaultValue = 2


_SvcVllBgpEvpnAutoBindTnlUdp_Type.__name__ = "TruthValue"
_SvcVllBgpEvpnAutoBindTnlUdp_Object = MibTableColumn
svcVllBgpEvpnAutoBindTnlUdp = _SvcVllBgpEvpnAutoBindTnlUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 205, 1, 9),
    _SvcVllBgpEvpnAutoBindTnlUdp_Type()
)
svcVllBgpEvpnAutoBindTnlUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcVllBgpEvpnAutoBindTnlUdp.setStatus("obsolete")
_SvcBgpEvpnVpwsTable_Object = MibTable
svcBgpEvpnVpwsTable = _SvcBgpEvpnVpwsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206)
)
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsTable.setStatus("obsolete")
_SvcBgpEvpnVpwsEntry_Object = MibTableRow
svcBgpEvpnVpwsEntry = _SvcBgpEvpnVpwsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1)
)
svcBgpEvpnVpwsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsEntry.setStatus("obsolete")
_SvcBgpEvpnVpwsLastChg_Type = TimeStamp
_SvcBgpEvpnVpwsLastChg_Object = MibTableColumn
svcBgpEvpnVpwsLastChg = _SvcBgpEvpnVpwsLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1, 1),
    _SvcBgpEvpnVpwsLastChg_Type()
)
svcBgpEvpnVpwsLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsLastChg.setStatus("obsolete")


class _SvcBgpEvpnVpwsLclAcName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnVpwsLclAcName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpEvpnVpwsLclAcName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnVpwsLclAcName_Object = MibTableColumn
svcBgpEvpnVpwsLclAcName = _SvcBgpEvpnVpwsLclAcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1, 2),
    _SvcBgpEvpnVpwsLclAcName_Type()
)
svcBgpEvpnVpwsLclAcName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsLclAcName.setStatus("obsolete")


class _SvcBgpEvpnVpwsLclAcEthTag_Type(TmnxBgpEvpnAcEthTag):
    """Custom type svcBgpEvpnVpwsLclAcEthTag based on TmnxBgpEvpnAcEthTag"""
    defaultValue = 0


_SvcBgpEvpnVpwsLclAcEthTag_Type.__name__ = "TmnxBgpEvpnAcEthTag"
_SvcBgpEvpnVpwsLclAcEthTag_Object = MibTableColumn
svcBgpEvpnVpwsLclAcEthTag = _SvcBgpEvpnVpwsLclAcEthTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1, 3),
    _SvcBgpEvpnVpwsLclAcEthTag_Type()
)
svcBgpEvpnVpwsLclAcEthTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsLclAcEthTag.setStatus("obsolete")


class _SvcBgpEvpnVpwsRemAcName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnVpwsRemAcName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpEvpnVpwsRemAcName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnVpwsRemAcName_Object = MibTableColumn
svcBgpEvpnVpwsRemAcName = _SvcBgpEvpnVpwsRemAcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1, 4),
    _SvcBgpEvpnVpwsRemAcName_Type()
)
svcBgpEvpnVpwsRemAcName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsRemAcName.setStatus("obsolete")


class _SvcBgpEvpnVpwsRemAcEthTag_Type(TmnxBgpEvpnAcEthTag):
    """Custom type svcBgpEvpnVpwsRemAcEthTag based on TmnxBgpEvpnAcEthTag"""
    defaultValue = 0


_SvcBgpEvpnVpwsRemAcEthTag_Type.__name__ = "TmnxBgpEvpnAcEthTag"
_SvcBgpEvpnVpwsRemAcEthTag_Object = MibTableColumn
svcBgpEvpnVpwsRemAcEthTag = _SvcBgpEvpnVpwsRemAcEthTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 206, 1, 5),
    _SvcBgpEvpnVpwsRemAcEthTag_Type()
)
svcBgpEvpnVpwsRemAcEthTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsRemAcEthTag.setStatus("obsolete")
_TmnxSvcArpHostRadClassTable_Object = MibTable
tmnxSvcArpHostRadClassTable = _TmnxSvcArpHostRadClassTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 207)
)
if mibBuilder.loadTexts:
    tmnxSvcArpHostRadClassTable.setStatus("current")
_TmnxSvcArpHostRadClassEntry_Object = MibTableRow
tmnxSvcArpHostRadClassEntry = _TmnxSvcArpHostRadClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 207, 1)
)
tmnxSvcArpHostRadClassEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcArpHostIpAddr"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcArpHostRadClassIndex"),
)
if mibBuilder.loadTexts:
    tmnxSvcArpHostRadClassEntry.setStatus("current")


class _TmnxSvcArpHostRadClassIndex_Type(Unsigned32):
    """Custom type tmnxSvcArpHostRadClassIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_TmnxSvcArpHostRadClassIndex_Type.__name__ = "Unsigned32"
_TmnxSvcArpHostRadClassIndex_Object = MibTableColumn
tmnxSvcArpHostRadClassIndex = _TmnxSvcArpHostRadClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 207, 1, 1),
    _TmnxSvcArpHostRadClassIndex_Type()
)
tmnxSvcArpHostRadClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcArpHostRadClassIndex.setStatus("current")
_TmnxSvcArpHostRadClassAscii_Type = TruthValue
_TmnxSvcArpHostRadClassAscii_Object = MibTableColumn
tmnxSvcArpHostRadClassAscii = _TmnxSvcArpHostRadClassAscii_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 207, 1, 2),
    _TmnxSvcArpHostRadClassAscii_Type()
)
tmnxSvcArpHostRadClassAscii.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcArpHostRadClassAscii.setStatus("current")


class _TmnxSvcArpHostRadClass_Type(OctetString):
    """Custom type tmnxSvcArpHostRadClass based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_TmnxSvcArpHostRadClass_Type.__name__ = "OctetString"
_TmnxSvcArpHostRadClass_Object = MibTableColumn
tmnxSvcArpHostRadClass = _TmnxSvcArpHostRadClass_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 207, 1, 3),
    _TmnxSvcArpHostRadClass_Type()
)
tmnxSvcArpHostRadClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcArpHostRadClass.setStatus("current")
_TmnxSvcSysVxlanObjs_ObjectIdentity = ObjectIdentity
tmnxSvcSysVxlanObjs = _TmnxSvcSysVxlanObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 208)
)


class _TmnxSvcSysVxlanARIpAddrType_Type(InetAddressType):
    """Custom type tmnxSvcSysVxlanARIpAddrType based on InetAddressType"""
    defaultValue = 0


_TmnxSvcSysVxlanARIpAddrType_Type.__name__ = "InetAddressType"
_TmnxSvcSysVxlanARIpAddrType_Object = MibScalar
tmnxSvcSysVxlanARIpAddrType = _TmnxSvcSysVxlanARIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 208, 1),
    _TmnxSvcSysVxlanARIpAddrType_Type()
)
tmnxSvcSysVxlanARIpAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanARIpAddrType.setStatus("current")


class _TmnxSvcSysVxlanARRepIpAddr_Type(InetAddress):
    """Custom type tmnxSvcSysVxlanARRepIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_TmnxSvcSysVxlanARRepIpAddr_Type.__name__ = "InetAddress"
_TmnxSvcSysVxlanARRepIpAddr_Object = MibScalar
tmnxSvcSysVxlanARRepIpAddr = _TmnxSvcSysVxlanARRepIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 208, 2),
    _TmnxSvcSysVxlanARRepIpAddr_Type()
)
tmnxSvcSysVxlanARRepIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanARRepIpAddr.setStatus("current")
_SvcTlsVxlanARLeafReplCndtTable_Object = MibTable
svcTlsVxlanARLeafReplCndtTable = _SvcTlsVxlanARLeafReplCndtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 209)
)
if mibBuilder.loadTexts:
    svcTlsVxlanARLeafReplCndtTable.setStatus("obsolete")
_SvcTlsVxlanARLeafReplCndtEntry_Object = MibTableRow
svcTlsVxlanARLeafReplCndtEntry = _SvcTlsVxlanARLeafReplCndtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 209, 1)
)
svcTlsVxlanARLeafReplCndtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
)
if mibBuilder.loadTexts:
    svcTlsVxlanARLeafReplCndtEntry.setStatus("obsolete")
_SvcTlsVxlanARLeafReplCndtInUse_Type = TruthValue
_SvcTlsVxlanARLeafReplCndtInUse_Object = MibTableColumn
svcTlsVxlanARLeafReplCndtInUse = _SvcTlsVxlanARLeafReplCndtInUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 209, 1, 1),
    _SvcTlsVxlanARLeafReplCndtInUse_Type()
)
svcTlsVxlanARLeafReplCndtInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanARLeafReplCndtInUse.setStatus("obsolete")
_SvcTlsVxlanARLeafReplCndtActive_Type = TruthValue
_SvcTlsVxlanARLeafReplCndtActive_Object = MibTableColumn
svcTlsVxlanARLeafReplCndtActive = _SvcTlsVxlanARLeafReplCndtActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 209, 1, 2),
    _SvcTlsVxlanARLeafReplCndtActive_Type()
)
svcTlsVxlanARLeafReplCndtActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanARLeafReplCndtActive.setStatus("obsolete")
_SvcTlsVxlanARLeafReplCndtPndTime_Type = Unsigned32
_SvcTlsVxlanARLeafReplCndtPndTime_Object = MibTableColumn
svcTlsVxlanARLeafReplCndtPndTime = _SvcTlsVxlanARLeafReplCndtPndTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 209, 1, 3),
    _SvcTlsVxlanARLeafReplCndtPndTime_Type()
)
svcTlsVxlanARLeafReplCndtPndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanARLeafReplCndtPndTime.setStatus("obsolete")
_SvcEpipePwPortTable_Object = MibTable
svcEpipePwPortTable = _SvcEpipePwPortTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210)
)
if mibBuilder.loadTexts:
    svcEpipePwPortTable.setStatus("current")
_SvcEpipePwPortEntry_Object = MibTableRow
svcEpipePwPortEntry = _SvcEpipePwPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1)
)
svcEpipePwPortEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEpipePwPortEntry.setStatus("current")
_SvcEpipePwPortRowStatus_Type = RowStatus
_SvcEpipePwPortRowStatus_Object = MibTableColumn
svcEpipePwPortRowStatus = _SvcEpipePwPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 1),
    _SvcEpipePwPortRowStatus_Type()
)
svcEpipePwPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortRowStatus.setStatus("current")
_SvcEpipePwPortLastChngd_Type = TimeStamp
_SvcEpipePwPortLastChngd_Object = MibTableColumn
svcEpipePwPortLastChngd = _SvcEpipePwPortLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 2),
    _SvcEpipePwPortLastChngd_Type()
)
svcEpipePwPortLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePwPortLastChngd.setStatus("current")


class _SvcEpipePwPortId_Type(Unsigned32):
    """Custom type svcEpipePwPortId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_SvcEpipePwPortId_Type.__name__ = "Unsigned32"
_SvcEpipePwPortId_Object = MibTableColumn
svcEpipePwPortId = _SvcEpipePwPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 3),
    _SvcEpipePwPortId_Type()
)
svcEpipePwPortId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortId.setStatus("current")
_SvcEpipePwPortFpeId_Type = TmnxFpeId
_SvcEpipePwPortFpeId_Object = MibTableColumn
svcEpipePwPortFpeId = _SvcEpipePwPortFpeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 4),
    _SvcEpipePwPortFpeId_Type()
)
svcEpipePwPortFpeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortFpeId.setStatus("current")


class _SvcEpipePwPortEgrShapVPort_Type(TNamedItemOrEmpty):
    """Custom type svcEpipePwPortEgrShapVPort based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipePwPortEgrShapVPort_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipePwPortEgrShapVPort_Object = MibTableColumn
svcEpipePwPortEgrShapVPort = _SvcEpipePwPortEgrShapVPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 5),
    _SvcEpipePwPortEgrShapVPort_Type()
)
svcEpipePwPortEgrShapVPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortEgrShapVPort.setStatus("current")


class _SvcEpipePwPortEgrShapIntDestId_Type(TNamedItemOrEmpty):
    """Custom type svcEpipePwPortEgrShapIntDestId based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipePwPortEgrShapIntDestId_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipePwPortEgrShapIntDestId_Object = MibTableColumn
svcEpipePwPortEgrShapIntDestId = _SvcEpipePwPortEgrShapIntDestId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 6),
    _SvcEpipePwPortEgrShapIntDestId_Type()
)
svcEpipePwPortEgrShapIntDestId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortEgrShapIntDestId.setStatus("current")


class _SvcEpipePwPortMonOperGrp_Type(TNamedItemOrEmpty):
    """Custom type svcEpipePwPortMonOperGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipePwPortMonOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipePwPortMonOperGrp_Object = MibTableColumn
svcEpipePwPortMonOperGrp = _SvcEpipePwPortMonOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 7),
    _SvcEpipePwPortMonOperGrp_Type()
)
svcEpipePwPortMonOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortMonOperGrp.setStatus("current")


class _SvcEpipePwPortAdminStatus_Type(ServiceAdminStatus):
    """Custom type svcEpipePwPortAdminStatus based on ServiceAdminStatus"""
    defaultValue = 1


_SvcEpipePwPortAdminStatus_Type.__name__ = "ServiceAdminStatus"
_SvcEpipePwPortAdminStatus_Object = MibTableColumn
svcEpipePwPortAdminStatus = _SvcEpipePwPortAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 8),
    _SvcEpipePwPortAdminStatus_Type()
)
svcEpipePwPortAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortAdminStatus.setStatus("current")


class _SvcEpipePwPortOperStatus_Type(Integer32):
    """Custom type svcEpipePwPortOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 5))
    )


_SvcEpipePwPortOperStatus_Type.__name__ = "Integer32"
_SvcEpipePwPortOperStatus_Object = MibTableColumn
svcEpipePwPortOperStatus = _SvcEpipePwPortOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 10),
    _SvcEpipePwPortOperStatus_Type()
)
svcEpipePwPortOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePwPortOperStatus.setStatus("current")


class _SvcEpipePwPortDnPeerTldpFault_Type(TruthValue):
    """Custom type svcEpipePwPortDnPeerTldpFault based on TruthValue"""
    defaultValue = 2


_SvcEpipePwPortDnPeerTldpFault_Type.__name__ = "TruthValue"
_SvcEpipePwPortDnPeerTldpFault_Object = MibTableColumn
svcEpipePwPortDnPeerTldpFault = _SvcEpipePwPortDnPeerTldpFault_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 11),
    _SvcEpipePwPortDnPeerTldpFault_Type()
)
svcEpipePwPortDnPeerTldpFault.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortDnPeerTldpFault.setStatus("current")


class _SvcEpipePwPortOprUpOnMhStdby_Type(TruthValue):
    """Custom type svcEpipePwPortOprUpOnMhStdby based on TruthValue"""
    defaultValue = 2


_SvcEpipePwPortOprUpOnMhStdby_Type.__name__ = "TruthValue"
_SvcEpipePwPortOprUpOnMhStdby_Object = MibTableColumn
svcEpipePwPortOprUpOnMhStdby = _SvcEpipePwPortOprUpOnMhStdby_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 210, 1, 12),
    _SvcEpipePwPortOprUpOnMhStdby_Type()
)
svcEpipePwPortOprUpOnMhStdby.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipePwPortOprUpOnMhStdby.setStatus("current")
_TmnxSvcSysVxlanTunTermTable_Object = MibTable
tmnxSvcSysVxlanTunTermTable = _TmnxSvcSysVxlanTunTermTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211)
)
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermTable.setStatus("current")
_TmnxSvcSysVxlanTunTermEntry_Object = MibTableRow
tmnxSvcSysVxlanTunTermEntry = _TmnxSvcSysVxlanTunTermEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1)
)
tmnxSvcSysVxlanTunTermEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermIpAddr"),
)
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermEntry.setStatus("current")
_TmnxSvcSysVxlanTunTermIpAddrType_Type = InetAddressType
_TmnxSvcSysVxlanTunTermIpAddrType_Object = MibTableColumn
tmnxSvcSysVxlanTunTermIpAddrType = _TmnxSvcSysVxlanTunTermIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1, 1),
    _TmnxSvcSysVxlanTunTermIpAddrType_Type()
)
tmnxSvcSysVxlanTunTermIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermIpAddrType.setStatus("current")


class _TmnxSvcSysVxlanTunTermIpAddr_Type(InetAddress):
    """Custom type tmnxSvcSysVxlanTunTermIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_TmnxSvcSysVxlanTunTermIpAddr_Type.__name__ = "InetAddress"
_TmnxSvcSysVxlanTunTermIpAddr_Object = MibTableColumn
tmnxSvcSysVxlanTunTermIpAddr = _TmnxSvcSysVxlanTunTermIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1, 2),
    _TmnxSvcSysVxlanTunTermIpAddr_Type()
)
tmnxSvcSysVxlanTunTermIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermIpAddr.setStatus("current")
_TmnxSvcSysVxlanTunTermRowStatus_Type = RowStatus
_TmnxSvcSysVxlanTunTermRowStatus_Object = MibTableColumn
tmnxSvcSysVxlanTunTermRowStatus = _TmnxSvcSysVxlanTunTermRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1, 3),
    _TmnxSvcSysVxlanTunTermRowStatus_Type()
)
tmnxSvcSysVxlanTunTermRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermRowStatus.setStatus("current")
_TmnxSvcSysVxlanTunTermLastChg_Type = TimeStamp
_TmnxSvcSysVxlanTunTermLastChg_Object = MibTableColumn
tmnxSvcSysVxlanTunTermLastChg = _TmnxSvcSysVxlanTunTermLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1, 4),
    _TmnxSvcSysVxlanTunTermLastChg_Type()
)
tmnxSvcSysVxlanTunTermLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermLastChg.setStatus("current")
_TmnxSvcSysVxlanTunTermFpeId_Type = TmnxFpeId
_TmnxSvcSysVxlanTunTermFpeId_Object = MibTableColumn
tmnxSvcSysVxlanTunTermFpeId = _TmnxSvcSysVxlanTunTermFpeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 211, 1, 5),
    _TmnxSvcSysVxlanTunTermFpeId_Type()
)
tmnxSvcSysVxlanTunTermFpeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermFpeId.setStatus("current")
_SvcVplsBgpTable_Object = MibTable
svcVplsBgpTable = _SvcVplsBgpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212)
)
if mibBuilder.loadTexts:
    svcVplsBgpTable.setStatus("current")
_SvcVplsBgpEntry_Object = MibTableRow
svcVplsBgpEntry = _SvcVplsBgpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1)
)
svcVplsBgpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVplsBgpInstance"),
)
if mibBuilder.loadTexts:
    svcVplsBgpEntry.setStatus("current")


class _SvcVplsBgpInstance_Type(Integer32):
    """Custom type svcVplsBgpInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcVplsBgpInstance_Type.__name__ = "Integer32"
_SvcVplsBgpInstance_Object = MibTableColumn
svcVplsBgpInstance = _SvcVplsBgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 1),
    _SvcVplsBgpInstance_Type()
)
svcVplsBgpInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVplsBgpInstance.setStatus("current")
_SvcVplsBgpLastChanged_Type = TimeStamp
_SvcVplsBgpLastChanged_Object = MibTableColumn
svcVplsBgpLastChanged = _SvcVplsBgpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 2),
    _SvcVplsBgpLastChanged_Type()
)
svcVplsBgpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpLastChanged.setStatus("current")


class _SvcVplsBgpVsiRD_Type(TmnxVPNRouteDistinguisher):
    """Custom type svcVplsBgpVsiRD based on TmnxVPNRouteDistinguisher"""
    defaultHexValue = "0000000000000000"


_SvcVplsBgpVsiRD_Type.__name__ = "TmnxVPNRouteDistinguisher"
_SvcVplsBgpVsiRD_Object = MibTableColumn
svcVplsBgpVsiRD = _SvcVplsBgpVsiRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 3),
    _SvcVplsBgpVsiRD_Type()
)
svcVplsBgpVsiRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiRD.setStatus("current")


class _SvcVplsBgpExportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcVplsBgpExportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcVplsBgpExportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcVplsBgpExportRteTarget_Object = MibTableColumn
svcVplsBgpExportRteTarget = _SvcVplsBgpExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 4),
    _SvcVplsBgpExportRteTarget_Type()
)
svcVplsBgpExportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpExportRteTarget.setStatus("current")


class _SvcVplsBgpVsiExportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiExportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiExportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiExportPolicy1_Object = MibTableColumn
svcVplsBgpVsiExportPolicy1 = _SvcVplsBgpVsiExportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 5),
    _SvcVplsBgpVsiExportPolicy1_Type()
)
svcVplsBgpVsiExportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiExportPolicy1.setStatus("current")


class _SvcVplsBgpVsiExportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiExportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiExportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiExportPolicy2_Object = MibTableColumn
svcVplsBgpVsiExportPolicy2 = _SvcVplsBgpVsiExportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 6),
    _SvcVplsBgpVsiExportPolicy2_Type()
)
svcVplsBgpVsiExportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiExportPolicy2.setStatus("current")


class _SvcVplsBgpVsiExportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiExportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiExportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiExportPolicy3_Object = MibTableColumn
svcVplsBgpVsiExportPolicy3 = _SvcVplsBgpVsiExportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 7),
    _SvcVplsBgpVsiExportPolicy3_Type()
)
svcVplsBgpVsiExportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiExportPolicy3.setStatus("current")


class _SvcVplsBgpVsiExportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiExportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiExportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiExportPolicy4_Object = MibTableColumn
svcVplsBgpVsiExportPolicy4 = _SvcVplsBgpVsiExportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 8),
    _SvcVplsBgpVsiExportPolicy4_Type()
)
svcVplsBgpVsiExportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiExportPolicy4.setStatus("current")


class _SvcVplsBgpVsiExportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiExportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiExportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiExportPolicy5_Object = MibTableColumn
svcVplsBgpVsiExportPolicy5 = _SvcVplsBgpVsiExportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 9),
    _SvcVplsBgpVsiExportPolicy5_Type()
)
svcVplsBgpVsiExportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiExportPolicy5.setStatus("current")


class _SvcVplsBgpImportRteTarget_Type(TNamedItemOrEmpty):
    """Custom type svcVplsBgpImportRteTarget based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcVplsBgpImportRteTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcVplsBgpImportRteTarget_Object = MibTableColumn
svcVplsBgpImportRteTarget = _SvcVplsBgpImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 10),
    _SvcVplsBgpImportRteTarget_Type()
)
svcVplsBgpImportRteTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpImportRteTarget.setStatus("current")


class _SvcVplsBgpVsiImportPolicy1_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiImportPolicy1 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiImportPolicy1_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiImportPolicy1_Object = MibTableColumn
svcVplsBgpVsiImportPolicy1 = _SvcVplsBgpVsiImportPolicy1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 11),
    _SvcVplsBgpVsiImportPolicy1_Type()
)
svcVplsBgpVsiImportPolicy1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiImportPolicy1.setStatus("current")


class _SvcVplsBgpVsiImportPolicy2_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiImportPolicy2 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiImportPolicy2_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiImportPolicy2_Object = MibTableColumn
svcVplsBgpVsiImportPolicy2 = _SvcVplsBgpVsiImportPolicy2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 12),
    _SvcVplsBgpVsiImportPolicy2_Type()
)
svcVplsBgpVsiImportPolicy2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiImportPolicy2.setStatus("current")


class _SvcVplsBgpVsiImportPolicy3_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiImportPolicy3 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiImportPolicy3_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiImportPolicy3_Object = MibTableColumn
svcVplsBgpVsiImportPolicy3 = _SvcVplsBgpVsiImportPolicy3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 13),
    _SvcVplsBgpVsiImportPolicy3_Type()
)
svcVplsBgpVsiImportPolicy3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiImportPolicy3.setStatus("current")


class _SvcVplsBgpVsiImportPolicy4_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiImportPolicy4 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiImportPolicy4_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiImportPolicy4_Object = MibTableColumn
svcVplsBgpVsiImportPolicy4 = _SvcVplsBgpVsiImportPolicy4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 14),
    _SvcVplsBgpVsiImportPolicy4_Type()
)
svcVplsBgpVsiImportPolicy4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiImportPolicy4.setStatus("current")


class _SvcVplsBgpVsiImportPolicy5_Type(TPolicyStatementNameOrEmpty):
    """Custom type svcVplsBgpVsiImportPolicy5 based on TPolicyStatementNameOrEmpty"""
    defaultHexValue = ""


_SvcVplsBgpVsiImportPolicy5_Type.__name__ = "TPolicyStatementNameOrEmpty"
_SvcVplsBgpVsiImportPolicy5_Object = MibTableColumn
svcVplsBgpVsiImportPolicy5 = _SvcVplsBgpVsiImportPolicy5_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 15),
    _SvcVplsBgpVsiImportPolicy5_Type()
)
svcVplsBgpVsiImportPolicy5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpVsiImportPolicy5.setStatus("current")
_SvcVplsBgpRowStatus_Type = RowStatus
_SvcVplsBgpRowStatus_Object = MibTableColumn
svcVplsBgpRowStatus = _SvcVplsBgpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 16),
    _SvcVplsBgpRowStatus_Type()
)
svcVplsBgpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpRowStatus.setStatus("current")


class _SvcVplsBgpCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcVplsBgpCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcVplsBgpCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcVplsBgpCreationOrigin_Object = MibTableColumn
svcVplsBgpCreationOrigin = _SvcVplsBgpCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 17),
    _SvcVplsBgpCreationOrigin_Type()
)
svcVplsBgpCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpCreationOrigin.setStatus("current")


class _SvcVplsBgpAutoRD_Type(TruthValue):
    """Custom type svcVplsBgpAutoRD based on TruthValue"""
    defaultValue = 2


_SvcVplsBgpAutoRD_Type.__name__ = "TruthValue"
_SvcVplsBgpAutoRD_Object = MibTableColumn
svcVplsBgpAutoRD = _SvcVplsBgpAutoRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 18),
    _SvcVplsBgpAutoRD_Type()
)
svcVplsBgpAutoRD.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpAutoRD.setStatus("current")
_SvcVplsBgpOperRD_Type = TmnxVPNRouteDistinguisher
_SvcVplsBgpOperRD_Object = MibTableColumn
svcVplsBgpOperRD = _SvcVplsBgpOperRD_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 19),
    _SvcVplsBgpOperRD_Type()
)
svcVplsBgpOperRD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperRD.setStatus("current")
_SvcVplsBgpOperRDType_Type = TmnxRouteDistType
_SvcVplsBgpOperRDType_Object = MibTableColumn
svcVplsBgpOperRDType = _SvcVplsBgpOperRDType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 20),
    _SvcVplsBgpOperRDType_Type()
)
svcVplsBgpOperRDType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperRDType.setStatus("current")
_SvcVplsBgpOperImportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcVplsBgpOperImportRteTgtOrigin_Object = MibTableColumn
svcVplsBgpOperImportRteTgtOrigin = _SvcVplsBgpOperImportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 21),
    _SvcVplsBgpOperImportRteTgtOrigin_Type()
)
svcVplsBgpOperImportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperImportRteTgtOrigin.setStatus("current")
_SvcVplsBgpOperImportRteTarget_Type = TNamedItemOrEmpty
_SvcVplsBgpOperImportRteTarget_Object = MibTableColumn
svcVplsBgpOperImportRteTarget = _SvcVplsBgpOperImportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 22),
    _SvcVplsBgpOperImportRteTarget_Type()
)
svcVplsBgpOperImportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperImportRteTarget.setStatus("current")
_SvcVplsBgpOperExportRteTgtOrigin_Type = TmnxRouteTargetOrigin
_SvcVplsBgpOperExportRteTgtOrigin_Object = MibTableColumn
svcVplsBgpOperExportRteTgtOrigin = _SvcVplsBgpOperExportRteTgtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 23),
    _SvcVplsBgpOperExportRteTgtOrigin_Type()
)
svcVplsBgpOperExportRteTgtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperExportRteTgtOrigin.setStatus("current")
_SvcVplsBgpOperExportRteTarget_Type = TNamedItemOrEmpty
_SvcVplsBgpOperExportRteTarget_Object = MibTableColumn
svcVplsBgpOperExportRteTarget = _SvcVplsBgpOperExportRteTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 24),
    _SvcVplsBgpOperExportRteTarget_Type()
)
svcVplsBgpOperExportRteTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpOperExportRteTarget.setStatus("current")


class _SvcVplsBgpAdvServiceMtu_Type(Integer32):
    """Custom type svcVplsBgpAdvServiceMtu based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 9782),
    )


_SvcVplsBgpAdvServiceMtu_Type.__name__ = "Integer32"
_SvcVplsBgpAdvServiceMtu_Object = MibTableColumn
svcVplsBgpAdvServiceMtu = _SvcVplsBgpAdvServiceMtu_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 212, 1, 25),
    _SvcVplsBgpAdvServiceMtu_Type()
)
svcVplsBgpAdvServiceMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVplsBgpAdvServiceMtu.setStatus("current")
_SvcProxyArpNdMacListTable_Object = MibTable
svcProxyArpNdMacListTable = _SvcProxyArpNdMacListTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213)
)
if mibBuilder.loadTexts:
    svcProxyArpNdMacListTable.setStatus("current")
_SvcProxyArpNdMacListEntry_Object = MibTableRow
svcProxyArpNdMacListEntry = _SvcProxyArpNdMacListEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1)
)
svcProxyArpNdMacListEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdMacListName"),
)
if mibBuilder.loadTexts:
    svcProxyArpNdMacListEntry.setStatus("current")
_SvcProxyArpNdMacListName_Type = TNamedItem
_SvcProxyArpNdMacListName_Object = MibTableColumn
svcProxyArpNdMacListName = _SvcProxyArpNdMacListName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1, 1),
    _SvcProxyArpNdMacListName_Type()
)
svcProxyArpNdMacListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListName.setStatus("current")
_SvcProxyArpNdMacListRowStatus_Type = RowStatus
_SvcProxyArpNdMacListRowStatus_Object = MibTableColumn
svcProxyArpNdMacListRowStatus = _SvcProxyArpNdMacListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1, 2),
    _SvcProxyArpNdMacListRowStatus_Type()
)
svcProxyArpNdMacListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListRowStatus.setStatus("current")
_SvcProxyArpNdMacListLastChgd_Type = TimeStamp
_SvcProxyArpNdMacListLastChgd_Object = MibTableColumn
svcProxyArpNdMacListLastChgd = _SvcProxyArpNdMacListLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1, 3),
    _SvcProxyArpNdMacListLastChgd_Type()
)
svcProxyArpNdMacListLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListLastChgd.setStatus("current")
_SvcProxyArpNdMacListNumMacs_Type = Unsigned32
_SvcProxyArpNdMacListNumMacs_Object = MibTableColumn
svcProxyArpNdMacListNumMacs = _SvcProxyArpNdMacListNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1, 4),
    _SvcProxyArpNdMacListNumMacs_Type()
)
svcProxyArpNdMacListNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListNumMacs.setStatus("current")
_SvcProxyArpNdMacListNumAssocs_Type = Unsigned32
_SvcProxyArpNdMacListNumAssocs_Object = MibTableColumn
svcProxyArpNdMacListNumAssocs = _SvcProxyArpNdMacListNumAssocs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 213, 1, 5),
    _SvcProxyArpNdMacListNumAssocs_Type()
)
svcProxyArpNdMacListNumAssocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListNumAssocs.setStatus("current")
_SvcProxyArpNdMacListMacTable_Object = MibTable
svcProxyArpNdMacListMacTable = _SvcProxyArpNdMacListMacTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 214)
)
if mibBuilder.loadTexts:
    svcProxyArpNdMacListMacTable.setStatus("current")
_SvcProxyArpNdMacListMacEntry_Object = MibTableRow
svcProxyArpNdMacListMacEntry = _SvcProxyArpNdMacListMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 214, 1)
)
svcProxyArpNdMacListMacEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdMacListName"),
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdMacListMacAddr"),
)
if mibBuilder.loadTexts:
    svcProxyArpNdMacListMacEntry.setStatus("current")
_SvcProxyArpNdMacListMacAddr_Type = MacAddress
_SvcProxyArpNdMacListMacAddr_Object = MibTableColumn
svcProxyArpNdMacListMacAddr = _SvcProxyArpNdMacListMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 214, 1, 1),
    _SvcProxyArpNdMacListMacAddr_Type()
)
svcProxyArpNdMacListMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListMacAddr.setStatus("current")
_SvcProxyArpNdMacListMacRowStatus_Type = RowStatus
_SvcProxyArpNdMacListMacRowStatus_Object = MibTableColumn
svcProxyArpNdMacListMacRowStatus = _SvcProxyArpNdMacListMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 214, 1, 2),
    _SvcProxyArpNdMacListMacRowStatus_Type()
)
svcProxyArpNdMacListMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListMacRowStatus.setStatus("current")
_SvcProxyArpNdMacListMacLastChgd_Type = TimeStamp
_SvcProxyArpNdMacListMacLastChgd_Object = MibTableColumn
svcProxyArpNdMacListMacLastChgd = _SvcProxyArpNdMacListMacLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 214, 1, 3),
    _SvcProxyArpNdMacListMacLastChgd_Type()
)
svcProxyArpNdMacListMacLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListMacLastChgd.setStatus("current")
_SvcTlsProxyArpDynCfgTable_Object = MibTable
svcTlsProxyArpDynCfgTable = _SvcTlsProxyArpDynCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgTable.setStatus("current")
_SvcTlsProxyArpDynCfgEntry_Object = MibTableRow
svcTlsProxyArpDynCfgEntry = _SvcTlsProxyArpDynCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1)
)
svcTlsProxyArpDynCfgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgIpAddr"),
)
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgEntry.setStatus("current")
_SvcTlsProxyArpDynCfgIpAddrType_Type = InetAddressType
_SvcTlsProxyArpDynCfgIpAddrType_Object = MibTableColumn
svcTlsProxyArpDynCfgIpAddrType = _SvcTlsProxyArpDynCfgIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 1),
    _SvcTlsProxyArpDynCfgIpAddrType_Type()
)
svcTlsProxyArpDynCfgIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgIpAddrType.setStatus("current")


class _SvcTlsProxyArpDynCfgIpAddr_Type(InetAddress):
    """Custom type svcTlsProxyArpDynCfgIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_SvcTlsProxyArpDynCfgIpAddr_Type.__name__ = "InetAddress"
_SvcTlsProxyArpDynCfgIpAddr_Object = MibTableColumn
svcTlsProxyArpDynCfgIpAddr = _SvcTlsProxyArpDynCfgIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 2),
    _SvcTlsProxyArpDynCfgIpAddr_Type()
)
svcTlsProxyArpDynCfgIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgIpAddr.setStatus("current")
_SvcTlsProxyArpDynCfgRowStatus_Type = RowStatus
_SvcTlsProxyArpDynCfgRowStatus_Object = MibTableColumn
svcTlsProxyArpDynCfgRowStatus = _SvcTlsProxyArpDynCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 3),
    _SvcTlsProxyArpDynCfgRowStatus_Type()
)
svcTlsProxyArpDynCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgRowStatus.setStatus("current")


class _SvcTlsProxyArpDynCfgMacList_Type(TNamedItemOrEmpty):
    """Custom type svcTlsProxyArpDynCfgMacList based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsProxyArpDynCfgMacList_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsProxyArpDynCfgMacList_Object = MibTableColumn
svcTlsProxyArpDynCfgMacList = _SvcTlsProxyArpDynCfgMacList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 4),
    _SvcTlsProxyArpDynCfgMacList_Type()
)
svcTlsProxyArpDynCfgMacList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgMacList.setStatus("current")


class _SvcTlsProxyArpDynCfgResolve_Type(Unsigned32):
    """Custom type svcTlsProxyArpDynCfgResolve based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SvcTlsProxyArpDynCfgResolve_Type.__name__ = "Unsigned32"
_SvcTlsProxyArpDynCfgResolve_Object = MibTableColumn
svcTlsProxyArpDynCfgResolve = _SvcTlsProxyArpDynCfgResolve_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 5),
    _SvcTlsProxyArpDynCfgResolve_Type()
)
svcTlsProxyArpDynCfgResolve.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgResolve.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgResolve.setUnits("minutes")
_SvcTlsProxyArpDynCfgRemResolve_Type = Unsigned32
_SvcTlsProxyArpDynCfgRemResolve_Object = MibTableColumn
svcTlsProxyArpDynCfgRemResolve = _SvcTlsProxyArpDynCfgRemResolve_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 215, 1, 6),
    _SvcTlsProxyArpDynCfgRemResolve_Type()
)
svcTlsProxyArpDynCfgRemResolve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgRemResolve.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgRemResolve.setUnits("seconds")
_SvcTlsProxyNdDynCfgTable_Object = MibTable
svcTlsProxyNdDynCfgTable = _SvcTlsProxyNdDynCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgTable.setStatus("current")
_SvcTlsProxyNdDynCfgEntry_Object = MibTableRow
svcTlsProxyNdDynCfgEntry = _SvcTlsProxyNdDynCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1)
)
svcTlsProxyNdDynCfgEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgIpAddr"),
)
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgEntry.setStatus("current")
_SvcTlsProxyNdDynCfgIpAddrType_Type = InetAddressType
_SvcTlsProxyNdDynCfgIpAddrType_Object = MibTableColumn
svcTlsProxyNdDynCfgIpAddrType = _SvcTlsProxyNdDynCfgIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 1),
    _SvcTlsProxyNdDynCfgIpAddrType_Type()
)
svcTlsProxyNdDynCfgIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgIpAddrType.setStatus("current")


class _SvcTlsProxyNdDynCfgIpAddr_Type(InetAddress):
    """Custom type svcTlsProxyNdDynCfgIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_SvcTlsProxyNdDynCfgIpAddr_Type.__name__ = "InetAddress"
_SvcTlsProxyNdDynCfgIpAddr_Object = MibTableColumn
svcTlsProxyNdDynCfgIpAddr = _SvcTlsProxyNdDynCfgIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 2),
    _SvcTlsProxyNdDynCfgIpAddr_Type()
)
svcTlsProxyNdDynCfgIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgIpAddr.setStatus("current")
_SvcTlsProxyNdDynCfgRowStatus_Type = RowStatus
_SvcTlsProxyNdDynCfgRowStatus_Object = MibTableColumn
svcTlsProxyNdDynCfgRowStatus = _SvcTlsProxyNdDynCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 3),
    _SvcTlsProxyNdDynCfgRowStatus_Type()
)
svcTlsProxyNdDynCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgRowStatus.setStatus("current")


class _SvcTlsProxyNdDynCfgMacList_Type(TNamedItemOrEmpty):
    """Custom type svcTlsProxyNdDynCfgMacList based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsProxyNdDynCfgMacList_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsProxyNdDynCfgMacList_Object = MibTableColumn
svcTlsProxyNdDynCfgMacList = _SvcTlsProxyNdDynCfgMacList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 4),
    _SvcTlsProxyNdDynCfgMacList_Type()
)
svcTlsProxyNdDynCfgMacList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgMacList.setStatus("current")


class _SvcTlsProxyNdDynCfgResolve_Type(Unsigned32):
    """Custom type svcTlsProxyNdDynCfgResolve based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SvcTlsProxyNdDynCfgResolve_Type.__name__ = "Unsigned32"
_SvcTlsProxyNdDynCfgResolve_Object = MibTableColumn
svcTlsProxyNdDynCfgResolve = _SvcTlsProxyNdDynCfgResolve_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 5),
    _SvcTlsProxyNdDynCfgResolve_Type()
)
svcTlsProxyNdDynCfgResolve.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgResolve.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgResolve.setUnits("minutes")
_SvcTlsProxyNdDynCfgRemResolve_Type = Unsigned32
_SvcTlsProxyNdDynCfgRemResolve_Object = MibTableColumn
svcTlsProxyNdDynCfgRemResolve = _SvcTlsProxyNdDynCfgRemResolve_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 216, 1, 6),
    _SvcTlsProxyNdDynCfgRemResolve_Type()
)
svcTlsProxyNdDynCfgRemResolve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgRemResolve.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgRemResolve.setUnits("seconds")
_TmnxSvcSysEthSegQTagRngTable_Object = MibTable
tmnxSvcSysEthSegQTagRngTable = _TmnxSvcSysEthSegQTagRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217)
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngTable.setStatus("current")
_TmnxSvcSysEthSegQTagRngEntry_Object = MibTableRow
tmnxSvcSysEthSegQTagRngEntry = _TmnxSvcSysEthSegQTagRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217, 1)
)
tmnxSvcSysEthSegQTagRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegQTagRngFrom"),
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngEntry.setStatus("current")
_TmnxSvcSysEthSegQTagRngFrom_Type = TmnxSVlanEncapVal
_TmnxSvcSysEthSegQTagRngFrom_Object = MibTableColumn
tmnxSvcSysEthSegQTagRngFrom = _TmnxSvcSysEthSegQTagRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217, 1, 1),
    _TmnxSvcSysEthSegQTagRngFrom_Type()
)
tmnxSvcSysEthSegQTagRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngFrom.setStatus("current")
_TmnxSvcSysEthSegQTagRngRowStatus_Type = RowStatus
_TmnxSvcSysEthSegQTagRngRowStatus_Object = MibTableColumn
tmnxSvcSysEthSegQTagRngRowStatus = _TmnxSvcSysEthSegQTagRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217, 1, 2),
    _TmnxSvcSysEthSegQTagRngRowStatus_Type()
)
tmnxSvcSysEthSegQTagRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngRowStatus.setStatus("current")
_TmnxSvcSysEthSegQTagRngLastChg_Type = TimeStamp
_TmnxSvcSysEthSegQTagRngLastChg_Object = MibTableColumn
tmnxSvcSysEthSegQTagRngLastChg = _TmnxSvcSysEthSegQTagRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217, 1, 3),
    _TmnxSvcSysEthSegQTagRngLastChg_Type()
)
tmnxSvcSysEthSegQTagRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngLastChg.setStatus("current")


class _TmnxSvcSysEthSegQTagRngTo_Type(TmnxSVlanEncapVal):
    """Custom type tmnxSvcSysEthSegQTagRngTo based on TmnxSVlanEncapVal"""
    defaultValue = 0


_TmnxSvcSysEthSegQTagRngTo_Type.__name__ = "TmnxSVlanEncapVal"
_TmnxSvcSysEthSegQTagRngTo_Object = MibTableColumn
tmnxSvcSysEthSegQTagRngTo = _TmnxSvcSysEthSegQTagRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 217, 1, 4),
    _TmnxSvcSysEthSegQTagRngTo_Type()
)
tmnxSvcSysEthSegQTagRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngTo.setStatus("current")
_TmnxSvcSysEthSegVcIdRngTable_Object = MibTable
tmnxSvcSysEthSegVcIdRngTable = _TmnxSvcSysEthSegVcIdRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218)
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngTable.setStatus("current")
_TmnxSvcSysEthSegVcIdRngEntry_Object = MibTableRow
tmnxSvcSysEthSegVcIdRngEntry = _TmnxSvcSysEthSegVcIdRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218, 1)
)
tmnxSvcSysEthSegVcIdRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVcIdRngFrom"),
)
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngEntry.setStatus("current")


class _TmnxSvcSysEthSegVcIdRngFrom_Type(Unsigned32):
    """Custom type tmnxSvcSysEthSegVcIdRngFrom based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_TmnxSvcSysEthSegVcIdRngFrom_Type.__name__ = "Unsigned32"
_TmnxSvcSysEthSegVcIdRngFrom_Object = MibTableColumn
tmnxSvcSysEthSegVcIdRngFrom = _TmnxSvcSysEthSegVcIdRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218, 1, 1),
    _TmnxSvcSysEthSegVcIdRngFrom_Type()
)
tmnxSvcSysEthSegVcIdRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngFrom.setStatus("current")
_TmnxSvcSysEthSegVcIdRngRowStatus_Type = RowStatus
_TmnxSvcSysEthSegVcIdRngRowStatus_Object = MibTableColumn
tmnxSvcSysEthSegVcIdRngRowStatus = _TmnxSvcSysEthSegVcIdRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218, 1, 2),
    _TmnxSvcSysEthSegVcIdRngRowStatus_Type()
)
tmnxSvcSysEthSegVcIdRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngRowStatus.setStatus("current")
_TmnxSvcSysEthSegVcIdRngLastChg_Type = TimeStamp
_TmnxSvcSysEthSegVcIdRngLastChg_Object = MibTableColumn
tmnxSvcSysEthSegVcIdRngLastChg = _TmnxSvcSysEthSegVcIdRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218, 1, 3),
    _TmnxSvcSysEthSegVcIdRngLastChg_Type()
)
tmnxSvcSysEthSegVcIdRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngLastChg.setStatus("current")


class _TmnxSvcSysEthSegVcIdRngTo_Type(Unsigned32):
    """Custom type tmnxSvcSysEthSegVcIdRngTo based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_TmnxSvcSysEthSegVcIdRngTo_Type.__name__ = "Unsigned32"
_TmnxSvcSysEthSegVcIdRngTo_Object = MibTableColumn
tmnxSvcSysEthSegVcIdRngTo = _TmnxSvcSysEthSegVcIdRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 218, 1, 4),
    _TmnxSvcSysEthSegVcIdRngTo_Type()
)
tmnxSvcSysEthSegVcIdRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngTo.setStatus("current")
_TmnxESSTagRngTable_Object = MibTable
tmnxESSTagRngTable = _TmnxESSTagRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219)
)
if mibBuilder.loadTexts:
    tmnxESSTagRngTable.setStatus("current")
_TmnxESSTagRngEntry_Object = MibTableRow
tmnxESSTagRngEntry = _TmnxESSTagRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219, 1)
)
tmnxESSTagRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "tmnxESSTagRngFrom"),
)
if mibBuilder.loadTexts:
    tmnxESSTagRngEntry.setStatus("current")
_TmnxESSTagRngFrom_Type = TmnxSVlanEncapVal
_TmnxESSTagRngFrom_Object = MibTableColumn
tmnxESSTagRngFrom = _TmnxESSTagRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219, 1, 1),
    _TmnxESSTagRngFrom_Type()
)
tmnxESSTagRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxESSTagRngFrom.setStatus("current")
_TmnxESSTagRngRowStatus_Type = RowStatus
_TmnxESSTagRngRowStatus_Object = MibTableColumn
tmnxESSTagRngRowStatus = _TmnxESSTagRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219, 1, 2),
    _TmnxESSTagRngRowStatus_Type()
)
tmnxESSTagRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESSTagRngRowStatus.setStatus("current")
_TmnxESSTagRngLastChg_Type = TimeStamp
_TmnxESSTagRngLastChg_Object = MibTableColumn
tmnxESSTagRngLastChg = _TmnxESSTagRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219, 1, 3),
    _TmnxESSTagRngLastChg_Type()
)
tmnxESSTagRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESSTagRngLastChg.setStatus("current")


class _TmnxESSTagRngTo_Type(TmnxSVlanEncapVal):
    """Custom type tmnxESSTagRngTo based on TmnxSVlanEncapVal"""
    defaultValue = 0


_TmnxESSTagRngTo_Type.__name__ = "TmnxSVlanEncapVal"
_TmnxESSTagRngTo_Object = MibTableColumn
tmnxESSTagRngTo = _TmnxESSTagRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 219, 1, 4),
    _TmnxESSTagRngTo_Type()
)
tmnxESSTagRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESSTagRngTo.setStatus("current")
_TmnxESSTagCTagRngTable_Object = MibTable
tmnxESSTagCTagRngTable = _TmnxESSTagCTagRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220)
)
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngTable.setStatus("current")
_TmnxESSTagCTagRngEntry_Object = MibTableRow
tmnxESSTagCTagRngEntry = _TmnxESSTagCTagRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1)
)
tmnxESSTagCTagRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "tmnxESSTagCTagRngSTag"),
    (0, "TIMETRA-SERV-MIB", "tmnxESSTagCTagRngFrom"),
)
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngEntry.setStatus("current")
_TmnxESSTagCTagRngSTag_Type = TmnxSVlanEncapVal
_TmnxESSTagCTagRngSTag_Object = MibTableColumn
tmnxESSTagCTagRngSTag = _TmnxESSTagCTagRngSTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1, 1),
    _TmnxESSTagCTagRngSTag_Type()
)
tmnxESSTagCTagRngSTag.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngSTag.setStatus("current")
_TmnxESSTagCTagRngFrom_Type = TmnxSVlanEncapVal
_TmnxESSTagCTagRngFrom_Object = MibTableColumn
tmnxESSTagCTagRngFrom = _TmnxESSTagCTagRngFrom_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1, 2),
    _TmnxESSTagCTagRngFrom_Type()
)
tmnxESSTagCTagRngFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngFrom.setStatus("current")
_TmnxESSTagCTagRngRowStatus_Type = RowStatus
_TmnxESSTagCTagRngRowStatus_Object = MibTableColumn
tmnxESSTagCTagRngRowStatus = _TmnxESSTagCTagRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1, 3),
    _TmnxESSTagCTagRngRowStatus_Type()
)
tmnxESSTagCTagRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngRowStatus.setStatus("current")
_TmnxESSTagCTagRngLastChg_Type = TimeStamp
_TmnxESSTagCTagRngLastChg_Object = MibTableColumn
tmnxESSTagCTagRngLastChg = _TmnxESSTagCTagRngLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1, 4),
    _TmnxESSTagCTagRngLastChg_Type()
)
tmnxESSTagCTagRngLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngLastChg.setStatus("current")


class _TmnxESSTagCTagRngTo_Type(TmnxSVlanEncapVal):
    """Custom type tmnxESSTagCTagRngTo based on TmnxSVlanEncapVal"""
    defaultValue = 0


_TmnxESSTagCTagRngTo_Type.__name__ = "TmnxSVlanEncapVal"
_TmnxESSTagCTagRngTo_Object = MibTableColumn
tmnxESSTagCTagRngTo = _TmnxESSTagCTagRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 220, 1, 5),
    _TmnxESSTagCTagRngTo_Type()
)
tmnxESSTagCTagRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngTo.setStatus("current")
_SvcSysEvpnESDfPrefElecTable_Object = MibTable
svcSysEvpnESDfPrefElecTable = _SvcSysEvpnESDfPrefElecTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221)
)
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecTable.setStatus("current")
_SvcSysEvpnESDfPrefElecEntry_Object = MibTableRow
svcSysEvpnESDfPrefElecEntry = _SvcSysEvpnESDfPrefElecEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1)
)
svcSysEvpnESDfPrefElecEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
)
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecEntry.setStatus("current")
_SvcSysEvpnESDfPrefElecRowStatus_Type = RowStatus
_SvcSysEvpnESDfPrefElecRowStatus_Object = MibTableColumn
svcSysEvpnESDfPrefElecRowStatus = _SvcSysEvpnESDfPrefElecRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 1),
    _SvcSysEvpnESDfPrefElecRowStatus_Type()
)
svcSysEvpnESDfPrefElecRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecRowStatus.setStatus("current")


class _SvcSysEvpnESDfPrefElecPrefMode_Type(Integer32):
    """Custom type svcSysEvpnESDfPrefElecPrefMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 1),
          ("non-revertive", 2))
    )


_SvcSysEvpnESDfPrefElecPrefMode_Type.__name__ = "Integer32"
_SvcSysEvpnESDfPrefElecPrefMode_Object = MibTableColumn
svcSysEvpnESDfPrefElecPrefMode = _SvcSysEvpnESDfPrefElecPrefMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 2),
    _SvcSysEvpnESDfPrefElecPrefMode_Type()
)
svcSysEvpnESDfPrefElecPrefMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecPrefMode.setStatus("current")


class _SvcSysEvpnESDfPrefElecValue_Type(Unsigned32):
    """Custom type svcSysEvpnESDfPrefElecValue based on Unsigned32"""
    defaultValue = 32767

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcSysEvpnESDfPrefElecValue_Type.__name__ = "Unsigned32"
_SvcSysEvpnESDfPrefElecValue_Object = MibTableColumn
svcSysEvpnESDfPrefElecValue = _SvcSysEvpnESDfPrefElecValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 3),
    _SvcSysEvpnESDfPrefElecValue_Type()
)
svcSysEvpnESDfPrefElecValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecValue.setStatus("current")
_SvcSysEvpnESDfPrefElecLastChg_Type = TimeStamp
_SvcSysEvpnESDfPrefElecLastChg_Object = MibTableColumn
svcSysEvpnESDfPrefElecLastChg = _SvcSysEvpnESDfPrefElecLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 4),
    _SvcSysEvpnESDfPrefElecLastChg_Type()
)
svcSysEvpnESDfPrefElecLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecLastChg.setStatus("current")
_SvcSysEvpnESDfPrefElecOperValue_Type = Unsigned32
_SvcSysEvpnESDfPrefElecOperValue_Object = MibTableColumn
svcSysEvpnESDfPrefElecOperValue = _SvcSysEvpnESDfPrefElecOperValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 5),
    _SvcSysEvpnESDfPrefElecOperValue_Type()
)
svcSysEvpnESDfPrefElecOperValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecOperValue.setStatus("current")
_SvcSysEvpnESDfPrefElecDntPreempt_Type = TruthValue
_SvcSysEvpnESDfPrefElecDntPreempt_Object = MibTableColumn
svcSysEvpnESDfPrefElecDntPreempt = _SvcSysEvpnESDfPrefElecDntPreempt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 221, 1, 6),
    _SvcSysEvpnESDfPrefElecDntPreempt_Type()
)
svcSysEvpnESDfPrefElecDntPreempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecDntPreempt.setStatus("current")
_SvcVsdDomainParamsExtTable_Object = MibTable
svcVsdDomainParamsExtTable = _SvcVsdDomainParamsExtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222)
)
if mibBuilder.loadTexts:
    svcVsdDomainParamsExtTable.setStatus("current")
_SvcVsdDomainParamsExtEntry_Object = MibTableRow
svcVsdDomainParamsExtEntry = _SvcVsdDomainParamsExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1)
)
if mibBuilder.loadTexts:
    svcVsdDomainParamsExtEntry.setStatus("current")


class _SvcVsdDomainRecParams1_Type(OctetString):
    """Custom type svcVsdDomainRecParams1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainRecParams1_Type.__name__ = "OctetString"
_SvcVsdDomainRecParams1_Object = MibTableColumn
svcVsdDomainRecParams1 = _SvcVsdDomainRecParams1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 1),
    _SvcVsdDomainRecParams1_Type()
)
svcVsdDomainRecParams1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainRecParams1.setStatus("current")


class _SvcVsdDomainRecParams2_Type(OctetString):
    """Custom type svcVsdDomainRecParams2 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainRecParams2_Type.__name__ = "OctetString"
_SvcVsdDomainRecParams2_Object = MibTableColumn
svcVsdDomainRecParams2 = _SvcVsdDomainRecParams2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 2),
    _SvcVsdDomainRecParams2_Type()
)
svcVsdDomainRecParams2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainRecParams2.setStatus("current")


class _SvcVsdDomainRecParams3_Type(OctetString):
    """Custom type svcVsdDomainRecParams3 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainRecParams3_Type.__name__ = "OctetString"
_SvcVsdDomainRecParams3_Object = MibTableColumn
svcVsdDomainRecParams3 = _SvcVsdDomainRecParams3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 3),
    _SvcVsdDomainRecParams3_Type()
)
svcVsdDomainRecParams3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainRecParams3.setStatus("current")


class _SvcVsdDomainRecParams4_Type(OctetString):
    """Custom type svcVsdDomainRecParams4 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainRecParams4_Type.__name__ = "OctetString"
_SvcVsdDomainRecParams4_Object = MibTableColumn
svcVsdDomainRecParams4 = _SvcVsdDomainRecParams4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 4),
    _SvcVsdDomainRecParams4_Type()
)
svcVsdDomainRecParams4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainRecParams4.setStatus("current")


class _SvcVsdDomainExecParams1_Type(OctetString):
    """Custom type svcVsdDomainExecParams1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainExecParams1_Type.__name__ = "OctetString"
_SvcVsdDomainExecParams1_Object = MibTableColumn
svcVsdDomainExecParams1 = _SvcVsdDomainExecParams1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 5),
    _SvcVsdDomainExecParams1_Type()
)
svcVsdDomainExecParams1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainExecParams1.setStatus("current")


class _SvcVsdDomainExecParams2_Type(OctetString):
    """Custom type svcVsdDomainExecParams2 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainExecParams2_Type.__name__ = "OctetString"
_SvcVsdDomainExecParams2_Object = MibTableColumn
svcVsdDomainExecParams2 = _SvcVsdDomainExecParams2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 6),
    _SvcVsdDomainExecParams2_Type()
)
svcVsdDomainExecParams2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainExecParams2.setStatus("current")


class _SvcVsdDomainExecParams3_Type(OctetString):
    """Custom type svcVsdDomainExecParams3 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainExecParams3_Type.__name__ = "OctetString"
_SvcVsdDomainExecParams3_Object = MibTableColumn
svcVsdDomainExecParams3 = _SvcVsdDomainExecParams3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 7),
    _SvcVsdDomainExecParams3_Type()
)
svcVsdDomainExecParams3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainExecParams3.setStatus("current")


class _SvcVsdDomainExecParams4_Type(OctetString):
    """Custom type svcVsdDomainExecParams4 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_SvcVsdDomainExecParams4_Type.__name__ = "OctetString"
_SvcVsdDomainExecParams4_Object = MibTableColumn
svcVsdDomainExecParams4 = _SvcVsdDomainExecParams4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 222, 1, 8),
    _SvcVsdDomainExecParams4_Type()
)
svcVsdDomainExecParams4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainExecParams4.setStatus("current")
_SvcEpipeVxlanTable_Object = MibTable
svcEpipeVxlanTable = _SvcEpipeVxlanTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223)
)
if mibBuilder.loadTexts:
    svcEpipeVxlanTable.setStatus("obsolete")
_SvcEpipeVxlanEntry_Object = MibTableRow
svcEpipeVxlanEntry = _SvcEpipeVxlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1)
)
svcEpipeVxlanEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeVxlanVni"),
)
if mibBuilder.loadTexts:
    svcEpipeVxlanEntry.setStatus("obsolete")
_SvcEpipeVxlanVni_Type = TmnxVni
_SvcEpipeVxlanVni_Object = MibTableColumn
svcEpipeVxlanVni = _SvcEpipeVxlanVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 1),
    _SvcEpipeVxlanVni_Type()
)
svcEpipeVxlanVni.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEpipeVxlanVni.setStatus("obsolete")
_SvcEpipeVxlanRowStatus_Type = RowStatus
_SvcEpipeVxlanRowStatus_Object = MibTableColumn
svcEpipeVxlanRowStatus = _SvcEpipeVxlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 2),
    _SvcEpipeVxlanRowStatus_Type()
)
svcEpipeVxlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxlanRowStatus.setStatus("obsolete")
_SvcEpipeVxlanLastChgd_Type = TimeStamp
_SvcEpipeVxlanLastChgd_Object = MibTableColumn
svcEpipeVxlanLastChgd = _SvcEpipeVxlanLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 3),
    _SvcEpipeVxlanLastChgd_Type()
)
svcEpipeVxlanLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxlanLastChgd.setStatus("obsolete")


class _SvcEpipeVxlanCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcEpipeVxlanCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcEpipeVxlanCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcEpipeVxlanCreationOrigin_Object = MibTableColumn
svcEpipeVxlanCreationOrigin = _SvcEpipeVxlanCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 4),
    _SvcEpipeVxlanCreationOrigin_Type()
)
svcEpipeVxlanCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxlanCreationOrigin.setStatus("obsolete")


class _SvcEpipeVxlanEgrVTEPIpAddrType_Type(InetAddressType):
    """Custom type svcEpipeVxlanEgrVTEPIpAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEpipeVxlanEgrVTEPIpAddrType_Type.__name__ = "InetAddressType"
_SvcEpipeVxlanEgrVTEPIpAddrType_Object = MibTableColumn
svcEpipeVxlanEgrVTEPIpAddrType = _SvcEpipeVxlanEgrVTEPIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 5),
    _SvcEpipeVxlanEgrVTEPIpAddrType_Type()
)
svcEpipeVxlanEgrVTEPIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxlanEgrVTEPIpAddrType.setStatus("obsolete")


class _SvcEpipeVxlanEgrVTEPIpAddr_Type(InetAddress):
    """Custom type svcEpipeVxlanEgrVTEPIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEpipeVxlanEgrVTEPIpAddr_Type.__name__ = "InetAddress"
_SvcEpipeVxlanEgrVTEPIpAddr_Object = MibTableColumn
svcEpipeVxlanEgrVTEPIpAddr = _SvcEpipeVxlanEgrVTEPIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 6),
    _SvcEpipeVxlanEgrVTEPIpAddr_Type()
)
svcEpipeVxlanEgrVTEPIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxlanEgrVTEPIpAddr.setStatus("obsolete")


class _SvcEpipeVxlanEgrVTEPIpOperGrp_Type(TNamedItemOrEmpty):
    """Custom type svcEpipeVxlanEgrVTEPIpOperGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipeVxlanEgrVTEPIpOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipeVxlanEgrVTEPIpOperGrp_Object = MibTableColumn
svcEpipeVxlanEgrVTEPIpOperGrp = _SvcEpipeVxlanEgrVTEPIpOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 7),
    _SvcEpipeVxlanEgrVTEPIpOperGrp_Type()
)
svcEpipeVxlanEgrVTEPIpOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxlanEgrVTEPIpOperGrp.setStatus("obsolete")


class _SvcEpipeVxlanInstanceId_Type(Unsigned32):
    """Custom type svcEpipeVxlanInstanceId based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_SvcEpipeVxlanInstanceId_Type.__name__ = "Unsigned32"
_SvcEpipeVxlanInstanceId_Object = MibTableColumn
svcEpipeVxlanInstanceId = _SvcEpipeVxlanInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 223, 1, 8),
    _SvcEpipeVxlanInstanceId_Type()
)
svcEpipeVxlanInstanceId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxlanInstanceId.setStatus("obsolete")
_SvcEpipeVTEPEgrVNITable_Object = MibTable
svcEpipeVTEPEgrVNITable = _SvcEpipeVTEPEgrVNITable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224)
)
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNITable.setStatus("current")
_SvcEpipeVTEPEgrVNIEntry_Object = MibTableRow
svcEpipeVTEPEgrVNIEntry = _SvcEpipeVTEPEgrVNIEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1)
)
svcEpipeVTEPEgrVNIEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIEgrVNI"),
)
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIEntry.setStatus("current")
_SvcEpipeVTEPEgrVNIVTEPAddrType_Type = InetAddressType
_SvcEpipeVTEPEgrVNIVTEPAddrType_Object = MibTableColumn
svcEpipeVTEPEgrVNIVTEPAddrType = _SvcEpipeVTEPEgrVNIVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1, 1),
    _SvcEpipeVTEPEgrVNIVTEPAddrType_Type()
)
svcEpipeVTEPEgrVNIVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIVTEPAddrType.setStatus("current")


class _SvcEpipeVTEPEgrVNIVTEPAddress_Type(InetAddress):
    """Custom type svcEpipeVTEPEgrVNIVTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEpipeVTEPEgrVNIVTEPAddress_Type.__name__ = "InetAddress"
_SvcEpipeVTEPEgrVNIVTEPAddress_Object = MibTableColumn
svcEpipeVTEPEgrVNIVTEPAddress = _SvcEpipeVTEPEgrVNIVTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1, 2),
    _SvcEpipeVTEPEgrVNIVTEPAddress_Type()
)
svcEpipeVTEPEgrVNIVTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIVTEPAddress.setStatus("current")


class _SvcEpipeVTEPEgrVNIEgrVNI_Type(Unsigned32):
    """Custom type svcEpipeVTEPEgrVNIEgrVNI based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_SvcEpipeVTEPEgrVNIEgrVNI_Type.__name__ = "Unsigned32"
_SvcEpipeVTEPEgrVNIEgrVNI_Object = MibTableColumn
svcEpipeVTEPEgrVNIEgrVNI = _SvcEpipeVTEPEgrVNIEgrVNI_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1, 3),
    _SvcEpipeVTEPEgrVNIEgrVNI_Type()
)
svcEpipeVTEPEgrVNIEgrVNI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIEgrVNI.setStatus("current")
_SvcEpipeVTEPEgrVNIOperState_Type = ServiceOperStatus
_SvcEpipeVTEPEgrVNIOperState_Object = MibTableColumn
svcEpipeVTEPEgrVNIOperState = _SvcEpipeVTEPEgrVNIOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1, 4),
    _SvcEpipeVTEPEgrVNIOperState_Type()
)
svcEpipeVTEPEgrVNIOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIOperState.setStatus("current")


class _SvcEpipeVTEPEgrVNIVxlanType_Type(Integer32):
    """Custom type svcEpipeVTEPEgrVNIVxlanType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("static", 1),
          ("evpn", 2))
    )


_SvcEpipeVTEPEgrVNIVxlanType_Type.__name__ = "Integer32"
_SvcEpipeVTEPEgrVNIVxlanType_Object = MibTableColumn
svcEpipeVTEPEgrVNIVxlanType = _SvcEpipeVTEPEgrVNIVxlanType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 224, 1, 5),
    _SvcEpipeVTEPEgrVNIVxlanType_Type()
)
svcEpipeVTEPEgrVNIVxlanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVTEPEgrVNIVxlanType.setStatus("current")
_SvcEpipeNatOutsideTable_Object = MibTable
svcEpipeNatOutsideTable = _SvcEpipeNatOutsideTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225)
)
if mibBuilder.loadTexts:
    svcEpipeNatOutsideTable.setStatus("current")
_SvcEpipeNatOutsideEntry_Object = MibTableRow
svcEpipeNatOutsideEntry = _SvcEpipeNatOutsideEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225, 1)
)
svcEpipeNatOutsideEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeNatOSNatGrp"),
)
if mibBuilder.loadTexts:
    svcEpipeNatOutsideEntry.setStatus("current")
_SvcEpipeNatOSNatGrp_Type = TmnxNatIsaGrpId
_SvcEpipeNatOSNatGrp_Object = MibTableColumn
svcEpipeNatOSNatGrp = _SvcEpipeNatOSNatGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225, 1, 1),
    _SvcEpipeNatOSNatGrp_Type()
)
svcEpipeNatOSNatGrp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEpipeNatOSNatGrp.setStatus("current")
_SvcEpipeNatOSRowStatus_Type = RowStatus
_SvcEpipeNatOSRowStatus_Object = MibTableColumn
svcEpipeNatOSRowStatus = _SvcEpipeNatOSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225, 1, 2),
    _SvcEpipeNatOSRowStatus_Type()
)
svcEpipeNatOSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeNatOSRowStatus.setStatus("current")
_SvcEpipeNatOSLastChngd_Type = TimeStamp
_SvcEpipeNatOSLastChngd_Object = MibTableColumn
svcEpipeNatOSLastChngd = _SvcEpipeNatOSLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225, 1, 3),
    _SvcEpipeNatOSLastChngd_Type()
)
svcEpipeNatOSLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeNatOSLastChngd.setStatus("current")


class _SvcEpipeNatOSAdminState_Type(TmnxAdminState):
    """Custom type svcEpipeNatOSAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcEpipeNatOSAdminState_Type.__name__ = "TmnxAdminState"
_SvcEpipeNatOSAdminState_Object = MibTableColumn
svcEpipeNatOSAdminState = _SvcEpipeNatOSAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 225, 1, 4),
    _SvcEpipeNatOSAdminState_Type()
)
svcEpipeNatOSAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeNatOSAdminState.setStatus("current")
_SvcPbbEvpnIsidRtTable_Object = MibTable
svcPbbEvpnIsidRtTable = _SvcPbbEvpnIsidRtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226)
)
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtTable.setStatus("current")
_SvcPbbEvpnIsidRtEntry_Object = MibTableRow
svcPbbEvpnIsidRtEntry = _SvcPbbEvpnIsidRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1)
)
svcPbbEvpnIsidRtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtIsidRngFrm"),
)
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtEntry.setStatus("current")
_SvcPbbEvpnIsidRtIsidRngFrm_Type = TmnxISIDNoZero
_SvcPbbEvpnIsidRtIsidRngFrm_Object = MibTableColumn
svcPbbEvpnIsidRtIsidRngFrm = _SvcPbbEvpnIsidRtIsidRngFrm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 1),
    _SvcPbbEvpnIsidRtIsidRngFrm_Type()
)
svcPbbEvpnIsidRtIsidRngFrm.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtIsidRngFrm.setStatus("current")
_SvcPbbEvpnIsidRtRowStatus_Type = RowStatus
_SvcPbbEvpnIsidRtRowStatus_Object = MibTableColumn
svcPbbEvpnIsidRtRowStatus = _SvcPbbEvpnIsidRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 2),
    _SvcPbbEvpnIsidRtRowStatus_Type()
)
svcPbbEvpnIsidRtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtRowStatus.setStatus("current")
_SvcPbbEvpnIsidRtLastChgd_Type = TimeStamp
_SvcPbbEvpnIsidRtLastChgd_Object = MibTableColumn
svcPbbEvpnIsidRtLastChgd = _SvcPbbEvpnIsidRtLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 3),
    _SvcPbbEvpnIsidRtLastChgd_Type()
)
svcPbbEvpnIsidRtLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtLastChgd.setStatus("current")


class _SvcPbbEvpnIsidRtIsidRngTo_Type(TmnxISID):
    """Custom type svcPbbEvpnIsidRtIsidRngTo based on TmnxISID"""
    defaultValue = 0


_SvcPbbEvpnIsidRtIsidRngTo_Type.__name__ = "TmnxISID"
_SvcPbbEvpnIsidRtIsidRngTo_Object = MibTableColumn
svcPbbEvpnIsidRtIsidRngTo = _SvcPbbEvpnIsidRtIsidRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 4),
    _SvcPbbEvpnIsidRtIsidRngTo_Type()
)
svcPbbEvpnIsidRtIsidRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtIsidRngTo.setStatus("current")


class _SvcPbbEvpnIsidRtTgtType_Type(Integer32):
    """Custom type svcPbbEvpnIsidRtTgtType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("configured", 2))
    )


_SvcPbbEvpnIsidRtTgtType_Type.__name__ = "Integer32"
_SvcPbbEvpnIsidRtTgtType_Object = MibTableColumn
svcPbbEvpnIsidRtTgtType = _SvcPbbEvpnIsidRtTgtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 5),
    _SvcPbbEvpnIsidRtTgtType_Type()
)
svcPbbEvpnIsidRtTgtType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtTgtType.setStatus("current")


class _SvcPbbEvpnIsidRtTarget_Type(TNamedItemOrEmpty):
    """Custom type svcPbbEvpnIsidRtTarget based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcPbbEvpnIsidRtTarget_Type.__name__ = "TNamedItemOrEmpty"
_SvcPbbEvpnIsidRtTarget_Object = MibTableColumn
svcPbbEvpnIsidRtTarget = _SvcPbbEvpnIsidRtTarget_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 226, 1, 6),
    _SvcPbbEvpnIsidRtTarget_Type()
)
svcPbbEvpnIsidRtTarget.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtTarget.setStatus("current")
_SvcProxyArpNdAssocsTable_Object = MibTable
svcProxyArpNdAssocsTable = _SvcProxyArpNdAssocsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 227)
)
if mibBuilder.loadTexts:
    svcProxyArpNdAssocsTable.setStatus("current")
_SvcProxyArpNdAssocsEntry_Object = MibTableRow
svcProxyArpNdAssocsEntry = _SvcProxyArpNdAssocsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 227, 1)
)
svcProxyArpNdAssocsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdMacListName"),
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdAssocsIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcProxyArpNdAssocsIpAddr"),
)
if mibBuilder.loadTexts:
    svcProxyArpNdAssocsEntry.setStatus("current")
_SvcProxyArpNdAssocsIpAddrType_Type = InetAddressType
_SvcProxyArpNdAssocsIpAddrType_Object = MibTableColumn
svcProxyArpNdAssocsIpAddrType = _SvcProxyArpNdAssocsIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 227, 1, 1),
    _SvcProxyArpNdAssocsIpAddrType_Type()
)
svcProxyArpNdAssocsIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcProxyArpNdAssocsIpAddrType.setStatus("current")


class _SvcProxyArpNdAssocsIpAddr_Type(InetAddress):
    """Custom type svcProxyArpNdAssocsIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcProxyArpNdAssocsIpAddr_Type.__name__ = "InetAddress"
_SvcProxyArpNdAssocsIpAddr_Object = MibTableColumn
svcProxyArpNdAssocsIpAddr = _SvcProxyArpNdAssocsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 227, 1, 2),
    _SvcProxyArpNdAssocsIpAddr_Type()
)
svcProxyArpNdAssocsIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcProxyArpNdAssocsIpAddr.setStatus("current")
_SvcProxyArpNdAssocsLastChgd_Type = TimeStamp
_SvcProxyArpNdAssocsLastChgd_Object = MibTableColumn
svcProxyArpNdAssocsLastChgd = _SvcProxyArpNdAssocsLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 227, 1, 3),
    _SvcProxyArpNdAssocsLastChgd_Type()
)
svcProxyArpNdAssocsLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdAssocsLastChgd.setStatus("current")
_TmnxSvcSysFdbObjs_ObjectIdentity = ObjectIdentity
tmnxSvcSysFdbObjs = _TmnxSvcSysFdbObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228)
)
_TmnxSvcSysFdbTableSize_Type = Unsigned32
_TmnxSvcSysFdbTableSize_Object = MibScalar
tmnxSvcSysFdbTableSize = _TmnxSvcSysFdbTableSize_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 1),
    _TmnxSvcSysFdbTableSize_Type()
)
tmnxSvcSysFdbTableSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbTableSize.setStatus("current")
_TmnxSvcSysFdbAllocEntries_Type = Unsigned32
_TmnxSvcSysFdbAllocEntries_Object = MibScalar
tmnxSvcSysFdbAllocEntries = _TmnxSvcSysFdbAllocEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 2),
    _TmnxSvcSysFdbAllocEntries_Type()
)
tmnxSvcSysFdbAllocEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbAllocEntries.setStatus("current")
_TmnxSvcSysFdbGlobalEntries_Type = Unsigned32
_TmnxSvcSysFdbGlobalEntries_Object = MibScalar
tmnxSvcSysFdbGlobalEntries = _TmnxSvcSysFdbGlobalEntries_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 3),
    _TmnxSvcSysFdbGlobalEntries_Type()
)
tmnxSvcSysFdbGlobalEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbGlobalEntries.setStatus("current")
_TmnxSvcSysFdbRvplsEntriesInUse_Type = Unsigned32
_TmnxSvcSysFdbRvplsEntriesInUse_Object = MibScalar
tmnxSvcSysFdbRvplsEntriesInUse = _TmnxSvcSysFdbRvplsEntriesInUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 4),
    _TmnxSvcSysFdbRvplsEntriesInUse_Type()
)
tmnxSvcSysFdbRvplsEntriesInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbRvplsEntriesInUse.setStatus("current")
_TmnxSvcSysFdbRvplsEntriesAlloc_Type = Unsigned32
_TmnxSvcSysFdbRvplsEntriesAlloc_Object = MibScalar
tmnxSvcSysFdbRvplsEntriesAlloc = _TmnxSvcSysFdbRvplsEntriesAlloc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 5),
    _TmnxSvcSysFdbRvplsEntriesAlloc_Type()
)
tmnxSvcSysFdbRvplsEntriesAlloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbRvplsEntriesAlloc.setStatus("current")
_TmnxSvcSysFdbEsBmacEntriesInUse_Type = Unsigned32
_TmnxSvcSysFdbEsBmacEntriesInUse_Object = MibScalar
tmnxSvcSysFdbEsBmacEntriesInUse = _TmnxSvcSysFdbEsBmacEntriesInUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 6),
    _TmnxSvcSysFdbEsBmacEntriesInUse_Type()
)
tmnxSvcSysFdbEsBmacEntriesInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbEsBmacEntriesInUse.setStatus("current")
_TmnxSvcSysFdbEsBmacEntriesAlloc_Type = Unsigned32
_TmnxSvcSysFdbEsBmacEntriesAlloc_Object = MibScalar
tmnxSvcSysFdbEsBmacEntriesAlloc = _TmnxSvcSysFdbEsBmacEntriesAlloc_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 228, 7),
    _TmnxSvcSysFdbEsBmacEntriesAlloc_Type()
)
tmnxSvcSysFdbEsBmacEntriesAlloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysFdbEsBmacEntriesAlloc.setStatus("current")
_TmnxESVxlanInstSvcRngTable_Object = MibTable
tmnxESVxlanInstSvcRngTable = _TmnxESVxlanInstSvcRngTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229)
)
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngTable.setStatus("current")
_TmnxESVxlanInstSvcRngEntry_Object = MibTableRow
tmnxESVxlanInstSvcRngEntry = _TmnxESVxlanInstSvcRngEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229, 1)
)
tmnxESVxlanInstSvcRngEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegName"),
    (0, "TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngFrm"),
)
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngEntry.setStatus("current")
_TmnxESVxlanInstSvcRngFrm_Type = TmnxExtServId
_TmnxESVxlanInstSvcRngFrm_Object = MibTableColumn
tmnxESVxlanInstSvcRngFrm = _TmnxESVxlanInstSvcRngFrm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229, 1, 1),
    _TmnxESVxlanInstSvcRngFrm_Type()
)
tmnxESVxlanInstSvcRngFrm.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngFrm.setStatus("current")
_TmnxESVxlanInstSvcRngRowStatus_Type = RowStatus
_TmnxESVxlanInstSvcRngRowStatus_Object = MibTableColumn
tmnxESVxlanInstSvcRngRowStatus = _TmnxESVxlanInstSvcRngRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229, 1, 2),
    _TmnxESVxlanInstSvcRngRowStatus_Type()
)
tmnxESVxlanInstSvcRngRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngRowStatus.setStatus("current")


class _TmnxESVxlanInstSvcRngTo_Type(TmnxExtServId):
    """Custom type tmnxESVxlanInstSvcRngTo based on TmnxExtServId"""
    defaultValue = 0


_TmnxESVxlanInstSvcRngTo_Type.__name__ = "TmnxExtServId"
_TmnxESVxlanInstSvcRngTo_Object = MibTableColumn
tmnxESVxlanInstSvcRngTo = _TmnxESVxlanInstSvcRngTo_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229, 1, 3),
    _TmnxESVxlanInstSvcRngTo_Type()
)
tmnxESVxlanInstSvcRngTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngTo.setStatus("current")
_TmnxESVxlanInstSvcRngLastChgd_Type = TimeStamp
_TmnxESVxlanInstSvcRngLastChgd_Object = MibTableColumn
tmnxESVxlanInstSvcRngLastChgd = _TmnxESVxlanInstSvcRngLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 229, 1, 4),
    _TmnxESVxlanInstSvcRngLastChgd_Type()
)
tmnxESVxlanInstSvcRngLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngLastChgd.setStatus("current")
_SvcSysGreEthBrgdTnlTrmTable_Object = MibTable
svcSysGreEthBrgdTnlTrmTable = _SvcSysGreEthBrgdTnlTrmTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230)
)
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmTable.setStatus("current")
_SvcSysGreEthBrgdTnlTrmEntry_Object = MibTableRow
svcSysGreEthBrgdTnlTrmEntry = _SvcSysGreEthBrgdTnlTrmEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1)
)
svcSysGreEthBrgdTnlTrmEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmIpAddr"),
)
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmEntry.setStatus("current")
_SvcSysGreEthBrgdTnlTrmIpAddrType_Type = InetAddressType
_SvcSysGreEthBrgdTnlTrmIpAddrType_Object = MibTableColumn
svcSysGreEthBrgdTnlTrmIpAddrType = _SvcSysGreEthBrgdTnlTrmIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1, 1),
    _SvcSysGreEthBrgdTnlTrmIpAddrType_Type()
)
svcSysGreEthBrgdTnlTrmIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmIpAddrType.setStatus("current")


class _SvcSysGreEthBrgdTnlTrmIpAddr_Type(InetAddress):
    """Custom type svcSysGreEthBrgdTnlTrmIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcSysGreEthBrgdTnlTrmIpAddr_Type.__name__ = "InetAddress"
_SvcSysGreEthBrgdTnlTrmIpAddr_Object = MibTableColumn
svcSysGreEthBrgdTnlTrmIpAddr = _SvcSysGreEthBrgdTnlTrmIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1, 2),
    _SvcSysGreEthBrgdTnlTrmIpAddr_Type()
)
svcSysGreEthBrgdTnlTrmIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmIpAddr.setStatus("current")
_SvcSysGreEthBrgdTnlTrmRowStatus_Type = RowStatus
_SvcSysGreEthBrgdTnlTrmRowStatus_Object = MibTableColumn
svcSysGreEthBrgdTnlTrmRowStatus = _SvcSysGreEthBrgdTnlTrmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1, 3),
    _SvcSysGreEthBrgdTnlTrmRowStatus_Type()
)
svcSysGreEthBrgdTnlTrmRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmRowStatus.setStatus("current")
_SvcSysGreEthBrgdTnlTrmLastChg_Type = TimeStamp
_SvcSysGreEthBrgdTnlTrmLastChg_Object = MibTableColumn
svcSysGreEthBrgdTnlTrmLastChg = _SvcSysGreEthBrgdTnlTrmLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1, 4),
    _SvcSysGreEthBrgdTnlTrmLastChg_Type()
)
svcSysGreEthBrgdTnlTrmLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmLastChg.setStatus("current")
_SvcSysGreEthBrgdTnlTrmFpeId_Type = TmnxFpeId
_SvcSysGreEthBrgdTnlTrmFpeId_Object = MibTableColumn
svcSysGreEthBrgdTnlTrmFpeId = _SvcSysGreEthBrgdTnlTrmFpeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 230, 1, 5),
    _SvcSysGreEthBrgdTnlTrmFpeId_Type()
)
svcSysGreEthBrgdTnlTrmFpeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmFpeId.setStatus("current")


class _SvcPbbLeafSrcBVplsMacAddr_Type(MacAddress):
    """Custom type svcPbbLeafSrcBVplsMacAddr based on MacAddress"""
    defaultHexValue = "000000000000"


_SvcPbbLeafSrcBVplsMacAddr_Type.__name__ = "MacAddress"
_SvcPbbLeafSrcBVplsMacAddr_Object = MibScalar
svcPbbLeafSrcBVplsMacAddr = _SvcPbbLeafSrcBVplsMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 231),
    _SvcPbbLeafSrcBVplsMacAddr_Type()
)
svcPbbLeafSrcBVplsMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPbbLeafSrcBVplsMacAddr.setStatus("current")
_SvcVxlanInstEthSegTable_Object = MibTable
svcVxlanInstEthSegTable = _SvcVxlanInstEthSegTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 232)
)
if mibBuilder.loadTexts:
    svcVxlanInstEthSegTable.setStatus("current")
_SvcVxlanInstEthSegEntry_Object = MibTableRow
svcVxlanInstEthSegEntry = _SvcVxlanInstEthSegEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 232, 1)
)
svcVxlanInstEthSegEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
)
if mibBuilder.loadTexts:
    svcVxlanInstEthSegEntry.setStatus("current")


class _SvcVxlanInstanceId_Type(Unsigned32):
    """Custom type svcVxlanInstanceId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcVxlanInstanceId_Type.__name__ = "Unsigned32"
_SvcVxlanInstanceId_Object = MibTableColumn
svcVxlanInstanceId = _SvcVxlanInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 232, 1, 1),
    _SvcVxlanInstanceId_Type()
)
svcVxlanInstanceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVxlanInstanceId.setStatus("current")


class _SvcVxlanInstEthSegName_Type(TNamedItemOrEmpty):
    """Custom type svcVxlanInstEthSegName based on TNamedItemOrEmpty"""
    subtypeSpec = TNamedItemOrEmpty.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SvcVxlanInstEthSegName_Type.__name__ = "TNamedItemOrEmpty"
_SvcVxlanInstEthSegName_Object = MibTableColumn
svcVxlanInstEthSegName = _SvcVxlanInstEthSegName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 232, 1, 2),
    _SvcVxlanInstEthSegName_Type()
)
svcVxlanInstEthSegName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVxlanInstEthSegName.setStatus("current")
_SvcVxlanInstEthSegStatus_Type = TmnxEvpnMHEthSegStatus
_SvcVxlanInstEthSegStatus_Object = MibTableColumn
svcVxlanInstEthSegStatus = _SvcVxlanInstEthSegStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 232, 1, 3),
    _SvcVxlanInstEthSegStatus_Type()
)
svcVxlanInstEthSegStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVxlanInstEthSegStatus.setStatus("current")
_SvcVxlanInstOperFlagsTable_Object = MibTable
svcVxlanInstOperFlagsTable = _SvcVxlanInstOperFlagsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 233)
)
if mibBuilder.loadTexts:
    svcVxlanInstOperFlagsTable.setStatus("current")
_SvcVxlanInstOperFlagsEntry_Object = MibTableRow
svcVxlanInstOperFlagsEntry = _SvcVxlanInstOperFlagsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 233, 1)
)
svcVxlanInstOperFlagsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstOperFlagsInstance"),
)
if mibBuilder.loadTexts:
    svcVxlanInstOperFlagsEntry.setStatus("current")


class _SvcVxlanInstOperFlagsInstance_Type(Unsigned32):
    """Custom type svcVxlanInstOperFlagsInstance based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcVxlanInstOperFlagsInstance_Type.__name__ = "Unsigned32"
_SvcVxlanInstOperFlagsInstance_Object = MibTableColumn
svcVxlanInstOperFlagsInstance = _SvcVxlanInstOperFlagsInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 233, 1, 1),
    _SvcVxlanInstOperFlagsInstance_Type()
)
svcVxlanInstOperFlagsInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVxlanInstOperFlagsInstance.setStatus("current")
_SvcVxlanInstOperFlagsMhStandby_Type = TruthValue
_SvcVxlanInstOperFlagsMhStandby_Object = MibTableColumn
svcVxlanInstOperFlagsMhStandby = _SvcVxlanInstOperFlagsMhStandby_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 233, 1, 2),
    _SvcVxlanInstOperFlagsMhStandby_Type()
)
svcVxlanInstOperFlagsMhStandby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVxlanInstOperFlagsMhStandby.setStatus("current")
_SvcVprnVxlanTunTermTable_Object = MibTable
svcVprnVxlanTunTermTable = _SvcVprnVxlanTunTermTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234)
)
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermTable.setStatus("current")
_SvcVprnVxlanTunTermEntry_Object = MibTableRow
svcVprnVxlanTunTermEntry = _SvcVprnVxlanTunTermEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1)
)
svcVprnVxlanTunTermEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnVxlanTunTermIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcVprnVxlanTunTermIpAddr"),
)
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermEntry.setStatus("current")
_SvcVprnVxlanTunTermIpAddrType_Type = InetAddressType
_SvcVprnVxlanTunTermIpAddrType_Object = MibTableColumn
svcVprnVxlanTunTermIpAddrType = _SvcVprnVxlanTunTermIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1, 1),
    _SvcVprnVxlanTunTermIpAddrType_Type()
)
svcVprnVxlanTunTermIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermIpAddrType.setStatus("current")


class _SvcVprnVxlanTunTermIpAddr_Type(InetAddress):
    """Custom type svcVprnVxlanTunTermIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVprnVxlanTunTermIpAddr_Type.__name__ = "InetAddress"
_SvcVprnVxlanTunTermIpAddr_Object = MibTableColumn
svcVprnVxlanTunTermIpAddr = _SvcVprnVxlanTunTermIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1, 2),
    _SvcVprnVxlanTunTermIpAddr_Type()
)
svcVprnVxlanTunTermIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermIpAddr.setStatus("current")
_SvcVprnVxlanTunTermRowStatus_Type = RowStatus
_SvcVprnVxlanTunTermRowStatus_Object = MibTableColumn
svcVprnVxlanTunTermRowStatus = _SvcVprnVxlanTunTermRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1, 3),
    _SvcVprnVxlanTunTermRowStatus_Type()
)
svcVprnVxlanTunTermRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermRowStatus.setStatus("current")
_SvcVprnVxlanTunTermLastChg_Type = TimeStamp
_SvcVprnVxlanTunTermLastChg_Object = MibTableColumn
svcVprnVxlanTunTermLastChg = _SvcVprnVxlanTunTermLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1, 4),
    _SvcVprnVxlanTunTermLastChg_Type()
)
svcVprnVxlanTunTermLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermLastChg.setStatus("current")
_SvcVprnVxlanTunTermFpeId_Type = TmnxFpeId
_SvcVprnVxlanTunTermFpeId_Object = MibTableColumn
svcVprnVxlanTunTermFpeId = _SvcVprnVxlanTunTermFpeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 234, 1, 5),
    _SvcVprnVxlanTunTermFpeId_Type()
)
svcVprnVxlanTunTermFpeId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermFpeId.setStatus("current")
_SvcEvpnVxlanESDestTEPTable_Object = MibTable
svcEvpnVxlanESDestTEPTable = _SvcEvpnVxlanESDestTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235)
)
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPTable.setStatus("obsolete")
_SvcEvpnVxlanESDestTEPEntry_Object = MibTableRow
svcEvpnVxlanESDestTEPEntry = _SvcEvpnVxlanESDestTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235, 1)
)
svcEvpnVxlanESDestTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPVni"),
)
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPEntry.setStatus("obsolete")
_SvcEvpnVxlanESDestTEPAddrType_Type = InetAddressType
_SvcEvpnVxlanESDestTEPAddrType_Object = MibTableColumn
svcEvpnVxlanESDestTEPAddrType = _SvcEvpnVxlanESDestTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235, 1, 1),
    _SvcEvpnVxlanESDestTEPAddrType_Type()
)
svcEvpnVxlanESDestTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPAddrType.setStatus("obsolete")


class _SvcEvpnVxlanESDestTEPAddress_Type(InetAddress):
    """Custom type svcEvpnVxlanESDestTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnVxlanESDestTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnVxlanESDestTEPAddress_Object = MibTableColumn
svcEvpnVxlanESDestTEPAddress = _SvcEvpnVxlanESDestTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235, 1, 2),
    _SvcEvpnVxlanESDestTEPAddress_Type()
)
svcEvpnVxlanESDestTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPAddress.setStatus("obsolete")
_SvcEvpnVxlanESDestTEPVni_Type = TmnxVni
_SvcEvpnVxlanESDestTEPVni_Object = MibTableColumn
svcEvpnVxlanESDestTEPVni = _SvcEvpnVxlanESDestTEPVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235, 1, 3),
    _SvcEvpnVxlanESDestTEPVni_Type()
)
svcEvpnVxlanESDestTEPVni.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPVni.setStatus("obsolete")
_SvcEvpnVxlanESDestTEPLastChanged_Type = TimeStamp
_SvcEvpnVxlanESDestTEPLastChanged_Object = MibTableColumn
svcEvpnVxlanESDestTEPLastChanged = _SvcEvpnVxlanESDestTEPLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 235, 1, 4),
    _SvcEvpnVxlanESDestTEPLastChanged_Type()
)
svcEvpnVxlanESDestTEPLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTEPLastChanged.setStatus("obsolete")
_SvcOperGroupConfigTable_Object = MibTable
svcOperGroupConfigTable = _SvcOperGroupConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 236)
)
if mibBuilder.loadTexts:
    svcOperGroupConfigTable.setStatus("current")
_SvcOperGroupConfigEntry_Object = MibTableRow
svcOperGroupConfigEntry = _SvcOperGroupConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 236, 1)
)
svcOperGroupConfigEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcOperGroupConfigEntry.setStatus("current")
_SvcOperGroupConfigLastChange_Type = TimeStamp
_SvcOperGroupConfigLastChange_Object = MibTableColumn
svcOperGroupConfigLastChange = _SvcOperGroupConfigLastChange_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 236, 1, 1),
    _SvcOperGroupConfigLastChange_Type()
)
svcOperGroupConfigLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGroupConfigLastChange.setStatus("current")
_SvcOperGroupConfigName_Type = TNamedItemOrEmpty
_SvcOperGroupConfigName_Object = MibTableColumn
svcOperGroupConfigName = _SvcOperGroupConfigName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 236, 1, 2),
    _SvcOperGroupConfigName_Type()
)
svcOperGroupConfigName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcOperGroupConfigName.setStatus("current")
_SvcEvpnVxlanESDestTable_Object = MibTable
svcEvpnVxlanESDestTable = _SvcEvpnVxlanESDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 237)
)
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestTable.setStatus("obsolete")
_SvcEvpnVxlanESDestEntry_Object = MibTableRow
svcEvpnVxlanESDestEntry = _SvcEvpnVxlanESDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 237, 1)
)
svcEvpnVxlanESDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
)
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestEntry.setStatus("obsolete")
_SvcEvpnVxlanESDestLastChanged_Type = TimeStamp
_SvcEvpnVxlanESDestLastChanged_Object = MibTableColumn
svcEvpnVxlanESDestLastChanged = _SvcEvpnVxlanESDestLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 237, 1, 2),
    _SvcEvpnVxlanESDestLastChanged_Type()
)
svcEvpnVxlanESDestLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestLastChanged.setStatus("obsolete")
_SvcEvpnVxlanESDestNumMacs_Type = Unsigned32
_SvcEvpnVxlanESDestNumMacs_Object = MibTableColumn
svcEvpnVxlanESDestNumMacs = _SvcEvpnVxlanESDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 237, 1, 3),
    _SvcEvpnVxlanESDestNumMacs_Type()
)
svcEvpnVxlanESDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanESDestNumMacs.setStatus("obsolete")
_SvcBgpEvpnInstTable_Object = MibTable
svcBgpEvpnInstTable = _SvcBgpEvpnInstTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238)
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstTable.setStatus("current")
_SvcBgpEvpnInstEntry_Object = MibTableRow
svcBgpEvpnInstEntry = _SvcBgpEvpnInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1)
)
svcBgpEvpnInstEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstEntry.setStatus("current")


class _SvcBgpEvpnInstance_Type(Integer32):
    """Custom type svcBgpEvpnInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcBgpEvpnInstance_Type.__name__ = "Integer32"
_SvcBgpEvpnInstance_Object = MibTableColumn
svcBgpEvpnInstance = _SvcBgpEvpnInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 1),
    _SvcBgpEvpnInstance_Type()
)
svcBgpEvpnInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcBgpEvpnInstance.setStatus("current")
_SvcBgpEvpnInstRowStatus_Type = RowStatus
_SvcBgpEvpnInstRowStatus_Object = MibTableColumn
svcBgpEvpnInstRowStatus = _SvcBgpEvpnInstRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 2),
    _SvcBgpEvpnInstRowStatus_Type()
)
svcBgpEvpnInstRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstRowStatus.setStatus("current")
_SvcBgpEvpnInstLastChanged_Type = TimeStamp
_SvcBgpEvpnInstLastChanged_Object = MibTableColumn
svcBgpEvpnInstLastChanged = _SvcBgpEvpnInstLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 3),
    _SvcBgpEvpnInstLastChanged_Type()
)
svcBgpEvpnInstLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstLastChanged.setStatus("current")


class _SvcBgpEvpnInstAdminState_Type(TmnxEnabledDisabled):
    """Custom type svcBgpEvpnInstAdminState based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcBgpEvpnInstAdminState_Type.__name__ = "TmnxEnabledDisabled"
_SvcBgpEvpnInstAdminState_Object = MibTableColumn
svcBgpEvpnInstAdminState = _SvcBgpEvpnInstAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 4),
    _SvcBgpEvpnInstAdminState_Type()
)
svcBgpEvpnInstAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAdminState.setStatus("current")
_SvcBgpEvpnInstCreationOrigin_Type = TmnxCreateOrigin
_SvcBgpEvpnInstCreationOrigin_Object = MibTableColumn
svcBgpEvpnInstCreationOrigin = _SvcBgpEvpnInstCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 5),
    _SvcBgpEvpnInstCreationOrigin_Type()
)
svcBgpEvpnInstCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstCreationOrigin.setStatus("current")


class _SvcBgpEvpnInstType_Type(Integer32):
    """Custom type svcBgpEvpnInstType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mpls", 0),
          ("vxlan", 1),
          ("srv6", 2))
    )


_SvcBgpEvpnInstType_Type.__name__ = "Integer32"
_SvcBgpEvpnInstType_Object = MibTableColumn
svcBgpEvpnInstType = _SvcBgpEvpnInstType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 6),
    _SvcBgpEvpnInstType_Type()
)
svcBgpEvpnInstType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstType.setStatus("current")


class _SvcBgpEvpnVxlanInstance_Type(Unsigned32):
    """Custom type svcBgpEvpnVxlanInstance based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcBgpEvpnVxlanInstance_Type.__name__ = "Unsigned32"
_SvcBgpEvpnVxlanInstance_Object = MibTableColumn
svcBgpEvpnVxlanInstance = _SvcBgpEvpnVxlanInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 7),
    _SvcBgpEvpnVxlanInstance_Type()
)
svcBgpEvpnVxlanInstance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanInstance.setStatus("current")


class _SvcBgpEvpnInstDefRtTag_Type(Unsigned32):
    """Custom type svcBgpEvpnInstDefRtTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcBgpEvpnInstDefRtTag_Type.__name__ = "Unsigned32"
_SvcBgpEvpnInstDefRtTag_Object = MibTableColumn
svcBgpEvpnInstDefRtTag = _SvcBgpEvpnInstDefRtTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 8),
    _SvcBgpEvpnInstDefRtTag_Type()
)
svcBgpEvpnInstDefRtTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstDefRtTag.setStatus("current")


class _SvcBgpEvpnInstEndpoint_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnInstEndpoint based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcBgpEvpnInstEndpoint_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnInstEndpoint_Object = MibTableColumn
svcBgpEvpnInstEndpoint = _SvcBgpEvpnInstEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 9),
    _SvcBgpEvpnInstEndpoint_Type()
)
svcBgpEvpnInstEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstEndpoint.setStatus("obsolete")


class _SvcBgpEvpnInstOperGrp_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnInstOperGrp based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcBgpEvpnInstOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnInstOperGrp_Object = MibTableColumn
svcBgpEvpnInstOperGrp = _SvcBgpEvpnInstOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 10),
    _SvcBgpEvpnInstOperGrp_Type()
)
svcBgpEvpnInstOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstOperGrp.setStatus("current")


class _SvcBgpEvpnInstSrv6Instance_Type(Integer32):
    """Custom type svcBgpEvpnInstSrv6Instance based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_SvcBgpEvpnInstSrv6Instance_Type.__name__ = "Integer32"
_SvcBgpEvpnInstSrv6Instance_Object = MibTableColumn
svcBgpEvpnInstSrv6Instance = _SvcBgpEvpnInstSrv6Instance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 11),
    _SvcBgpEvpnInstSrv6Instance_Type()
)
svcBgpEvpnInstSrv6Instance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstSrv6Instance.setStatus("current")


class _SvcBgpEvpnInstSrv6DefLocator_Type(TLNamedItemOrEmpty):
    """Custom type svcBgpEvpnInstSrv6DefLocator based on TLNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcBgpEvpnInstSrv6DefLocator_Type.__name__ = "TLNamedItemOrEmpty"
_SvcBgpEvpnInstSrv6DefLocator_Object = MibTableColumn
svcBgpEvpnInstSrv6DefLocator = _SvcBgpEvpnInstSrv6DefLocator_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 238, 1, 12),
    _SvcBgpEvpnInstSrv6DefLocator_Type()
)
svcBgpEvpnInstSrv6DefLocator.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstSrv6DefLocator.setStatus("current")
_SvcBgpEvpnInstVxlanTable_Object = MibTable
svcBgpEvpnInstVxlanTable = _SvcBgpEvpnInstVxlanTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239)
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanTable.setStatus("current")
_SvcBgpEvpnInstVxlanEntry_Object = MibTableRow
svcBgpEvpnInstVxlanEntry = _SvcBgpEvpnInstVxlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1)
)
svcBgpEvpnInstVxlanEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanEntry.setStatus("current")
_SvcBgpEvpnInstVxlanLastChanged_Type = TimeStamp
_SvcBgpEvpnInstVxlanLastChanged_Object = MibTableColumn
svcBgpEvpnInstVxlanLastChanged = _SvcBgpEvpnInstVxlanLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 1),
    _SvcBgpEvpnInstVxlanLastChanged_Type()
)
svcBgpEvpnInstVxlanLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanLastChanged.setStatus("current")


class _SvcBgpEvpnInstVxlanSendEvpnEncap_Type(TruthValue):
    """Custom type svcBgpEvpnInstVxlanSendEvpnEncap based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnInstVxlanSendEvpnEncap_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstVxlanSendEvpnEncap_Object = MibTableColumn
svcBgpEvpnInstVxlanSendEvpnEncap = _SvcBgpEvpnInstVxlanSendEvpnEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 2),
    _SvcBgpEvpnInstVxlanSendEvpnEncap_Type()
)
svcBgpEvpnInstVxlanSendEvpnEncap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanSendEvpnEncap.setStatus("obsolete")


class _SvcBgpEvpnInstVxlanSndImtIrOnNdf_Type(TruthValue):
    """Custom type svcBgpEvpnInstVxlanSndImtIrOnNdf based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnInstVxlanSndImtIrOnNdf_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstVxlanSndImtIrOnNdf_Object = MibTableColumn
svcBgpEvpnInstVxlanSndImtIrOnNdf = _SvcBgpEvpnInstVxlanSndImtIrOnNdf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 3),
    _SvcBgpEvpnInstVxlanSndImtIrOnNdf_Type()
)
svcBgpEvpnInstVxlanSndImtIrOnNdf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanSndImtIrOnNdf.setStatus("current")


class _SvcBgpEvpnInstVxlanMaxEcmpRoutes_Type(Integer32):
    """Custom type svcBgpEvpnInstVxlanMaxEcmpRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcBgpEvpnInstVxlanMaxEcmpRoutes_Type.__name__ = "Integer32"
_SvcBgpEvpnInstVxlanMaxEcmpRoutes_Object = MibTableColumn
svcBgpEvpnInstVxlanMaxEcmpRoutes = _SvcBgpEvpnInstVxlanMaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 4),
    _SvcBgpEvpnInstVxlanMaxEcmpRoutes_Type()
)
svcBgpEvpnInstVxlanMaxEcmpRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanMaxEcmpRoutes.setStatus("current")


class _SvcBgpEvpnInstVxlanMhMode_Type(Integer32):
    """Custom type svcBgpEvpnInstVxlanMhMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("access", 0),
          ("network", 1))
    )


_SvcBgpEvpnInstVxlanMhMode_Type.__name__ = "Integer32"
_SvcBgpEvpnInstVxlanMhMode_Object = MibTableColumn
svcBgpEvpnInstVxlanMhMode = _SvcBgpEvpnInstVxlanMhMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 5),
    _SvcBgpEvpnInstVxlanMhMode_Type()
)
svcBgpEvpnInstVxlanMhMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanMhMode.setStatus("current")


class _SvcBgpEvpnInstVxlanAutoDiscRtAdv_Type(TruthValue):
    """Custom type svcBgpEvpnInstVxlanAutoDiscRtAdv based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstVxlanAutoDiscRtAdv_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstVxlanAutoDiscRtAdv_Object = MibTableColumn
svcBgpEvpnInstVxlanAutoDiscRtAdv = _SvcBgpEvpnInstVxlanAutoDiscRtAdv_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 6),
    _SvcBgpEvpnInstVxlanAutoDiscRtAdv_Type()
)
svcBgpEvpnInstVxlanAutoDiscRtAdv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanAutoDiscRtAdv.setStatus("current")


class _SvcBgpEvpnInstVxlanSendTnlEncap_Type(TruthValue):
    """Custom type svcBgpEvpnInstVxlanSendTnlEncap based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnInstVxlanSendTnlEncap_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstVxlanSendTnlEncap_Object = MibTableColumn
svcBgpEvpnInstVxlanSendTnlEncap = _SvcBgpEvpnInstVxlanSendTnlEncap_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 7),
    _SvcBgpEvpnInstVxlanSendTnlEncap_Type()
)
svcBgpEvpnInstVxlanSendTnlEncap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanSendTnlEncap.setStatus("current")


class _SvcBgpEvpnInstVxlnEvi3ByteAutoRT_Type(TruthValue):
    """Custom type svcBgpEvpnInstVxlnEvi3ByteAutoRT based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstVxlnEvi3ByteAutoRT_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstVxlnEvi3ByteAutoRT_Object = MibTableColumn
svcBgpEvpnInstVxlnEvi3ByteAutoRT = _SvcBgpEvpnInstVxlnEvi3ByteAutoRT_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 239, 1, 8),
    _SvcBgpEvpnInstVxlnEvi3ByteAutoRT_Type()
)
svcBgpEvpnInstVxlnEvi3ByteAutoRT.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlnEvi3ByteAutoRT.setStatus("current")
_SvcBgpEvpnInstMplsTable_Object = MibTable
svcBgpEvpnInstMplsTable = _SvcBgpEvpnInstMplsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240)
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsTable.setStatus("current")
_SvcBgpEvpnInstMplsEntry_Object = MibTableRow
svcBgpEvpnInstMplsEntry = _SvcBgpEvpnInstMplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1)
)
svcBgpEvpnInstMplsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsEntry.setStatus("current")
_SvcBgpEvpnInstMplsLastChanged_Type = TimeStamp
_SvcBgpEvpnInstMplsLastChanged_Object = MibTableColumn
svcBgpEvpnInstMplsLastChanged = _SvcBgpEvpnInstMplsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 1),
    _SvcBgpEvpnInstMplsLastChanged_Type()
)
svcBgpEvpnInstMplsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsLastChanged.setStatus("current")


class _SvcBgpEvpnInstMplsFrceVlanVcFwd_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsFrceVlanVcFwd based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsFrceVlanVcFwd_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsFrceVlanVcFwd_Object = MibTableColumn
svcBgpEvpnInstMplsFrceVlanVcFwd = _SvcBgpEvpnInstMplsFrceVlanVcFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 2),
    _SvcBgpEvpnInstMplsFrceVlanVcFwd_Type()
)
svcBgpEvpnInstMplsFrceVlanVcFwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsFrceVlanVcFwd.setStatus("current")


class _SvcBgpEvpnInstMplsControlWord_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsControlWord based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsControlWord_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsControlWord_Object = MibTableColumn
svcBgpEvpnInstMplsControlWord = _SvcBgpEvpnInstMplsControlWord_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 3),
    _SvcBgpEvpnInstMplsControlWord_Type()
)
svcBgpEvpnInstMplsControlWord.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsControlWord.setStatus("current")


class _SvcBgpEvpnInstMplsShgName_Type(TNamedItemOrEmpty):
    """Custom type svcBgpEvpnInstMplsShgName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcBgpEvpnInstMplsShgName_Type.__name__ = "TNamedItemOrEmpty"
_SvcBgpEvpnInstMplsShgName_Object = MibTableColumn
svcBgpEvpnInstMplsShgName = _SvcBgpEvpnInstMplsShgName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 4),
    _SvcBgpEvpnInstMplsShgName_Type()
)
svcBgpEvpnInstMplsShgName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsShgName.setStatus("current")


class _SvcBgpEvpnInstMplsIngRepBumLabel_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsIngRepBumLabel based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsIngRepBumLabel_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsIngRepBumLabel_Object = MibTableColumn
svcBgpEvpnInstMplsIngRepBumLabel = _SvcBgpEvpnInstMplsIngRepBumLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 5),
    _SvcBgpEvpnInstMplsIngRepBumLabel_Type()
)
svcBgpEvpnInstMplsIngRepBumLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsIngRepBumLabel.setStatus("current")


class _SvcBgpEvpnInstMplsMaxEcmpRoutes_Type(Integer32):
    """Custom type svcBgpEvpnInstMplsMaxEcmpRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcBgpEvpnInstMplsMaxEcmpRoutes_Type.__name__ = "Integer32"
_SvcBgpEvpnInstMplsMaxEcmpRoutes_Object = MibTableColumn
svcBgpEvpnInstMplsMaxEcmpRoutes = _SvcBgpEvpnInstMplsMaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 6),
    _SvcBgpEvpnInstMplsMaxEcmpRoutes_Type()
)
svcBgpEvpnInstMplsMaxEcmpRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsMaxEcmpRoutes.setStatus("current")
_SvcBgpEvpnInstMplsIngressLabel_Type = Integer32
_SvcBgpEvpnInstMplsIngressLabel_Object = MibTableColumn
svcBgpEvpnInstMplsIngressLabel = _SvcBgpEvpnInstMplsIngressLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 7),
    _SvcBgpEvpnInstMplsIngressLabel_Type()
)
svcBgpEvpnInstMplsIngressLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsIngressLabel.setStatus("current")
_SvcBgpEvpnInstMplsIngBumLabel_Type = Integer32
_SvcBgpEvpnInstMplsIngBumLabel_Object = MibTableColumn
svcBgpEvpnInstMplsIngBumLabel = _SvcBgpEvpnInstMplsIngBumLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 8),
    _SvcBgpEvpnInstMplsIngBumLabel_Type()
)
svcBgpEvpnInstMplsIngBumLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsIngBumLabel.setStatus("current")


class _SvcBgpEvpnInstMplsEntropyLabel_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsEntropyLabel based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsEntropyLabel_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsEntropyLabel_Object = MibTableColumn
svcBgpEvpnInstMplsEntropyLabel = _SvcBgpEvpnInstMplsEntropyLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 9),
    _SvcBgpEvpnInstMplsEntropyLabel_Type()
)
svcBgpEvpnInstMplsEntropyLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsEntropyLabel.setStatus("current")


class _SvcBgpEvpnInstMplsResProtSrcMac_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsResProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsResProtSrcMac_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsResProtSrcMac_Object = MibTableColumn
svcBgpEvpnInstMplsResProtSrcMac = _SvcBgpEvpnInstMplsResProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 10),
    _SvcBgpEvpnInstMplsResProtSrcMac_Type()
)
svcBgpEvpnInstMplsResProtSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsResProtSrcMac.setStatus("current")


class _SvcBgpEvpnInstMplsRPSMacAct_Type(Integer32):
    """Custom type svcBgpEvpnInstMplsRPSMacAct based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("discardFrame", 1)
    )


_SvcBgpEvpnInstMplsRPSMacAct_Type.__name__ = "Integer32"
_SvcBgpEvpnInstMplsRPSMacAct_Object = MibTableColumn
svcBgpEvpnInstMplsRPSMacAct = _SvcBgpEvpnInstMplsRPSMacAct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 11),
    _SvcBgpEvpnInstMplsRPSMacAct_Type()
)
svcBgpEvpnInstMplsRPSMacAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsRPSMacAct.setStatus("current")


class _SvcBgpEvpnInstMplsEvpnEncapMpls_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsEvpnEncapMpls based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnInstMplsEvpnEncapMpls_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsEvpnEncapMpls_Object = MibTableColumn
svcBgpEvpnInstMplsEvpnEncapMpls = _SvcBgpEvpnInstMplsEvpnEncapMpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 12),
    _SvcBgpEvpnInstMplsEvpnEncapMpls_Type()
)
svcBgpEvpnInstMplsEvpnEncapMpls.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsEvpnEncapMpls.setStatus("obsolete")


class _SvcBgpEvpnInstMplsEvpnEncapMoUdp_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsEvpnEncapMoUdp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsEvpnEncapMoUdp_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsEvpnEncapMoUdp_Object = MibTableColumn
svcBgpEvpnInstMplsEvpnEncapMoUdp = _SvcBgpEvpnInstMplsEvpnEncapMoUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 13),
    _SvcBgpEvpnInstMplsEvpnEncapMoUdp_Type()
)
svcBgpEvpnInstMplsEvpnEncapMoUdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsEvpnEncapMoUdp.setStatus("obsolete")


class _SvcBgpEvpnInstMplsForceQinqVcFwd_Type(Integer32):
    """Custom type svcBgpEvpnInstMplsForceQinqVcFwd based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ctagctag", 1),
          ("stagctag", 2))
    )


_SvcBgpEvpnInstMplsForceQinqVcFwd_Type.__name__ = "Integer32"
_SvcBgpEvpnInstMplsForceQinqVcFwd_Object = MibTableColumn
svcBgpEvpnInstMplsForceQinqVcFwd = _SvcBgpEvpnInstMplsForceQinqVcFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 14),
    _SvcBgpEvpnInstMplsForceQinqVcFwd_Type()
)
svcBgpEvpnInstMplsForceQinqVcFwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsForceQinqVcFwd.setStatus("current")


class _SvcBgpEvpnInstMplsRtNHType_Type(Integer32):
    """Custom type svcBgpEvpnInstMplsRtNHType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("system-ipv4", 0),
          ("system-ipv6", 1),
          ("explicit", 2))
    )


_SvcBgpEvpnInstMplsRtNHType_Type.__name__ = "Integer32"
_SvcBgpEvpnInstMplsRtNHType_Object = MibTableColumn
svcBgpEvpnInstMplsRtNHType = _SvcBgpEvpnInstMplsRtNHType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 15),
    _SvcBgpEvpnInstMplsRtNHType_Type()
)
svcBgpEvpnInstMplsRtNHType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsRtNHType.setStatus("current")


class _SvcBgpEvpnInstMplsRtNHAddrType_Type(InetAddressType):
    """Custom type svcBgpEvpnInstMplsRtNHAddrType based on InetAddressType"""
    defaultValue = 0


_SvcBgpEvpnInstMplsRtNHAddrType_Type.__name__ = "InetAddressType"
_SvcBgpEvpnInstMplsRtNHAddrType_Object = MibTableColumn
svcBgpEvpnInstMplsRtNHAddrType = _SvcBgpEvpnInstMplsRtNHAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 16),
    _SvcBgpEvpnInstMplsRtNHAddrType_Type()
)
svcBgpEvpnInstMplsRtNHAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsRtNHAddrType.setStatus("current")


class _SvcBgpEvpnInstMplsRtNHAddr_Type(InetAddress):
    """Custom type svcBgpEvpnInstMplsRtNHAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcBgpEvpnInstMplsRtNHAddr_Type.__name__ = "InetAddress"
_SvcBgpEvpnInstMplsRtNHAddr_Object = MibTableColumn
svcBgpEvpnInstMplsRtNHAddr = _SvcBgpEvpnInstMplsRtNHAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 17),
    _SvcBgpEvpnInstMplsRtNHAddr_Type()
)
svcBgpEvpnInstMplsRtNHAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsRtNHAddr.setStatus("current")


class _SvcBgpEvpnInstMplsTnlEncapMpls_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsTnlEncapMpls based on TruthValue"""
    defaultValue = 1


_SvcBgpEvpnInstMplsTnlEncapMpls_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsTnlEncapMpls_Object = MibTableColumn
svcBgpEvpnInstMplsTnlEncapMpls = _SvcBgpEvpnInstMplsTnlEncapMpls_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 18),
    _SvcBgpEvpnInstMplsTnlEncapMpls_Type()
)
svcBgpEvpnInstMplsTnlEncapMpls.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsTnlEncapMpls.setStatus("current")


class _SvcBgpEvpnInstMplsTnlEncapMoUdp_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsTnlEncapMoUdp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsTnlEncapMoUdp_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsTnlEncapMoUdp_Object = MibTableColumn
svcBgpEvpnInstMplsTnlEncapMoUdp = _SvcBgpEvpnInstMplsTnlEncapMoUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 19),
    _SvcBgpEvpnInstMplsTnlEncapMoUdp_Type()
)
svcBgpEvpnInstMplsTnlEncapMoUdp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsTnlEncapMoUdp.setStatus("current")


class _SvcBgpEvpnInstMplsEvi3ByteAutoRT_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsEvi3ByteAutoRT based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsEvi3ByteAutoRT_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsEvi3ByteAutoRT_Object = MibTableColumn
svcBgpEvpnInstMplsEvi3ByteAutoRT = _SvcBgpEvpnInstMplsEvi3ByteAutoRT_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 20),
    _SvcBgpEvpnInstMplsEvi3ByteAutoRT_Type()
)
svcBgpEvpnInstMplsEvi3ByteAutoRT.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsEvi3ByteAutoRT.setStatus("current")


class _SvcBgpEvpnInstMplsMhMode_Type(Integer32):
    """Custom type svcBgpEvpnInstMplsMhMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("access", 0),
          ("network", 1))
    )


_SvcBgpEvpnInstMplsMhMode_Type.__name__ = "Integer32"
_SvcBgpEvpnInstMplsMhMode_Object = MibTableColumn
svcBgpEvpnInstMplsMhMode = _SvcBgpEvpnInstMplsMhMode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 21),
    _SvcBgpEvpnInstMplsMhMode_Type()
)
svcBgpEvpnInstMplsMhMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsMhMode.setStatus("current")


class _SvcBgpEvpnInstMplsDynEgrLblLmt_Type(TruthValue):
    """Custom type svcBgpEvpnInstMplsDynEgrLblLmt based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstMplsDynEgrLblLmt_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstMplsDynEgrLblLmt_Object = MibTableColumn
svcBgpEvpnInstMplsDynEgrLblLmt = _SvcBgpEvpnInstMplsDynEgrLblLmt_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 240, 1, 22),
    _SvcBgpEvpnInstMplsDynEgrLblLmt_Type()
)
svcBgpEvpnInstMplsDynEgrLblLmt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsDynEgrLblLmt.setStatus("current")
_SvcBgpEvpnInstAutoBndTnlTable_Object = MibTable
svcBgpEvpnInstAutoBndTnlTable = _SvcBgpEvpnInstAutoBndTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241)
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlTable.setStatus("current")
_SvcBgpEvpnInstAutoBndTnlEntry_Object = MibTableRow
svcBgpEvpnInstAutoBndTnlEntry = _SvcBgpEvpnInstAutoBndTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1)
)
svcBgpEvpnInstAutoBndTnlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlEntry.setStatus("current")
_SvcBgpEvpnInstAutoBndTnlLastChg_Type = TimeStamp
_SvcBgpEvpnInstAutoBndTnlLastChg_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlLastChg = _SvcBgpEvpnInstAutoBndTnlLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 1),
    _SvcBgpEvpnInstAutoBndTnlLastChg_Type()
)
svcBgpEvpnInstAutoBndTnlLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlLastChg.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlLdp_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlLdp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlLdp_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlLdp_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlLdp = _SvcBgpEvpnInstAutoBndTnlLdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 2),
    _SvcBgpEvpnInstAutoBndTnlLdp_Type()
)
svcBgpEvpnInstAutoBndTnlLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlLdp.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlRsvpTe_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlRsvpTe based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlRsvpTe_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlRsvpTe_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlRsvpTe = _SvcBgpEvpnInstAutoBndTnlRsvpTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 3),
    _SvcBgpEvpnInstAutoBndTnlRsvpTe_Type()
)
svcBgpEvpnInstAutoBndTnlRsvpTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlRsvpTe.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlSrIsis_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlSrIsis based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlSrIsis_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlSrIsis_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlSrIsis = _SvcBgpEvpnInstAutoBndTnlSrIsis_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 4),
    _SvcBgpEvpnInstAutoBndTnlSrIsis_Type()
)
svcBgpEvpnInstAutoBndTnlSrIsis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlSrIsis.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlSrOspf_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlSrOspf based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlSrOspf_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlSrOspf_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlSrOspf = _SvcBgpEvpnInstAutoBndTnlSrOspf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 5),
    _SvcBgpEvpnInstAutoBndTnlSrOspf_Type()
)
svcBgpEvpnInstAutoBndTnlSrOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlSrOspf.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlStatus_Type(TResolveStatus):
    """Custom type svcBgpEvpnInstAutoBndTnlStatus based on TResolveStatus"""
    defaultValue = 0


_SvcBgpEvpnInstAutoBndTnlStatus_Type.__name__ = "TResolveStatus"
_SvcBgpEvpnInstAutoBndTnlStatus_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlStatus = _SvcBgpEvpnInstAutoBndTnlStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 6),
    _SvcBgpEvpnInstAutoBndTnlStatus_Type()
)
svcBgpEvpnInstAutoBndTnlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlStatus.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlBgp_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlBgp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlBgp_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlBgp_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlBgp = _SvcBgpEvpnInstAutoBndTnlBgp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 7),
    _SvcBgpEvpnInstAutoBndTnlBgp_Type()
)
svcBgpEvpnInstAutoBndTnlBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlBgp.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlSrTe_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlSrTe based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlSrTe_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlSrTe_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlSrTe = _SvcBgpEvpnInstAutoBndTnlSrTe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 8),
    _SvcBgpEvpnInstAutoBndTnlSrTe_Type()
)
svcBgpEvpnInstAutoBndTnlSrTe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlSrTe.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlUdp_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlUdp based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlUdp_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlUdp_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlUdp = _SvcBgpEvpnInstAutoBndTnlUdp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 9),
    _SvcBgpEvpnInstAutoBndTnlUdp_Type()
)
svcBgpEvpnInstAutoBndTnlUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlUdp.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlTag_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlTag based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlTag_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlTag_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlTag = _SvcBgpEvpnInstAutoBndTnlTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 10),
    _SvcBgpEvpnInstAutoBndTnlTag_Type()
)
svcBgpEvpnInstAutoBndTnlTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlTag.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlSrPlcy_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlSrPlcy based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlSrPlcy_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlSrPlcy_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlSrPlcy = _SvcBgpEvpnInstAutoBndTnlSrPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 11),
    _SvcBgpEvpnInstAutoBndTnlSrPlcy_Type()
)
svcBgpEvpnInstAutoBndTnlSrPlcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlSrPlcy.setStatus("current")


class _SvcBgpEvpnInstBndTnlMplsFwdPlcy_Type(TruthValue):
    """Custom type svcBgpEvpnInstBndTnlMplsFwdPlcy based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstBndTnlMplsFwdPlcy_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstBndTnlMplsFwdPlcy_Object = MibTableColumn
svcBgpEvpnInstBndTnlMplsFwdPlcy = _SvcBgpEvpnInstBndTnlMplsFwdPlcy_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 12),
    _SvcBgpEvpnInstBndTnlMplsFwdPlcy_Type()
)
svcBgpEvpnInstBndTnlMplsFwdPlcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstBndTnlMplsFwdPlcy.setStatus("current")


class _SvcBgpEvpnInstBndTnlRibApi_Type(TruthValue):
    """Custom type svcBgpEvpnInstBndTnlRibApi based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstBndTnlRibApi_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstBndTnlRibApi_Object = MibTableColumn
svcBgpEvpnInstBndTnlRibApi = _SvcBgpEvpnInstBndTnlRibApi_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 13),
    _SvcBgpEvpnInstBndTnlRibApi_Type()
)
svcBgpEvpnInstBndTnlRibApi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstBndTnlRibApi.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlSrOspf3_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlSrOspf3 based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlSrOspf3_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlSrOspf3_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlSrOspf3 = _SvcBgpEvpnInstAutoBndTnlSrOspf3_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 14),
    _SvcBgpEvpnInstAutoBndTnlSrOspf3_Type()
)
svcBgpEvpnInstAutoBndTnlSrOspf3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlSrOspf3.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlEcmp_Type(Unsigned32):
    """Custom type svcBgpEvpnInstAutoBndTnlEcmp based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcBgpEvpnInstAutoBndTnlEcmp_Type.__name__ = "Unsigned32"
_SvcBgpEvpnInstAutoBndTnlEcmp_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlEcmp = _SvcBgpEvpnInstAutoBndTnlEcmp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 15),
    _SvcBgpEvpnInstAutoBndTnlEcmp_Type()
)
svcBgpEvpnInstAutoBndTnlEcmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlEcmp.setStatus("current")


class _SvcBgpEvpnInstAutoBndTnlFlxAlgFb_Type(TruthValue):
    """Custom type svcBgpEvpnInstAutoBndTnlFlxAlgFb based on TruthValue"""
    defaultValue = 2


_SvcBgpEvpnInstAutoBndTnlFlxAlgFb_Type.__name__ = "TruthValue"
_SvcBgpEvpnInstAutoBndTnlFlxAlgFb_Object = MibTableColumn
svcBgpEvpnInstAutoBndTnlFlxAlgFb = _SvcBgpEvpnInstAutoBndTnlFlxAlgFb_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 241, 1, 16),
    _SvcBgpEvpnInstAutoBndTnlFlxAlgFb_Type()
)
svcBgpEvpnInstAutoBndTnlFlxAlgFb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcBgpEvpnInstAutoBndTnlFlxAlgFb.setStatus("current")
_SvcTlsVxInstVTEPEgrVniTable_Object = MibTable
svcTlsVxInstVTEPEgrVniTable = _SvcTlsVxInstVTEPEgrVniTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242)
)
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniTable.setStatus("current")
_SvcTlsVxInstVTEPEgrVniEntry_Object = MibTableRow
svcTlsVxInstVTEPEgrVniEntry = _SvcTlsVxInstVTEPEgrVniEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1)
)
svcTlsVxInstVTEPEgrVniEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVni"),
)
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniEntry.setStatus("current")
_SvcTlsVxInstVTEPAddrType_Type = InetAddressType
_SvcTlsVxInstVTEPAddrType_Object = MibTableColumn
svcTlsVxInstVTEPAddrType = _SvcTlsVxInstVTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 1),
    _SvcTlsVxInstVTEPAddrType_Type()
)
svcTlsVxInstVTEPAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPAddrType.setStatus("current")


class _SvcTlsVxInstVTEPAddress_Type(InetAddress):
    """Custom type svcTlsVxInstVTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsVxInstVTEPAddress_Type.__name__ = "InetAddress"
_SvcTlsVxInstVTEPAddress_Object = MibTableColumn
svcTlsVxInstVTEPAddress = _SvcTlsVxInstVTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 2),
    _SvcTlsVxInstVTEPAddress_Type()
)
svcTlsVxInstVTEPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPAddress.setStatus("current")


class _SvcTlsVxInstVTEPEgrVni_Type(Unsigned32):
    """Custom type svcTlsVxInstVTEPEgrVni based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_SvcTlsVxInstVTEPEgrVni_Type.__name__ = "Unsigned32"
_SvcTlsVxInstVTEPEgrVni_Object = MibTableColumn
svcTlsVxInstVTEPEgrVni = _SvcTlsVxInstVTEPEgrVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 3),
    _SvcTlsVxInstVTEPEgrVni_Type()
)
svcTlsVxInstVTEPEgrVni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVni.setStatus("current")
_SvcTlsVxInstVTEPEgrVniNumMACs_Type = Unsigned32
_SvcTlsVxInstVTEPEgrVniNumMACs_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniNumMACs = _SvcTlsVxInstVTEPEgrVniNumMACs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 4),
    _SvcTlsVxInstVTEPEgrVniNumMACs_Type()
)
svcTlsVxInstVTEPEgrVniNumMACs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniNumMACs.setStatus("current")
_SvcTlsVxInstVTEPEgrVniOperState_Type = ServiceOperStatus
_SvcTlsVxInstVTEPEgrVniOperState_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniOperState = _SvcTlsVxInstVTEPEgrVniOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 6),
    _SvcTlsVxInstVTEPEgrVniOperState_Type()
)
svcTlsVxInstVTEPEgrVniOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniOperState.setStatus("current")
_SvcTlsVxInstVTEPEgrVniL2EsPbr_Type = TruthValue
_SvcTlsVxInstVTEPEgrVniL2EsPbr_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniL2EsPbr = _SvcTlsVxInstVTEPEgrVniL2EsPbr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 7),
    _SvcTlsVxInstVTEPEgrVniL2EsPbr_Type()
)
svcTlsVxInstVTEPEgrVniL2EsPbr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniL2EsPbr.setStatus("current")


class _SvcTlsVxInstVTEPEgrVniMcast_Type(Integer32):
    """Custom type svcTlsVxInstVTEPEgrVniMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("u", 1),
          ("bm", 2),
          ("bum", 3),
          ("m", 4))
    )


_SvcTlsVxInstVTEPEgrVniMcast_Type.__name__ = "Integer32"
_SvcTlsVxInstVTEPEgrVniMcast_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniMcast = _SvcTlsVxInstVTEPEgrVniMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 8),
    _SvcTlsVxInstVTEPEgrVniMcast_Type()
)
svcTlsVxInstVTEPEgrVniMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniMcast.setStatus("current")


class _SvcTlsVxInstVTEPEgrVniVxlanType_Type(Integer32):
    """Custom type svcTlsVxInstVTEPEgrVniVxlanType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("static", 1),
          ("evpn", 2))
    )


_SvcTlsVxInstVTEPEgrVniVxlanType_Type.__name__ = "Integer32"
_SvcTlsVxInstVTEPEgrVniVxlanType_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniVxlanType = _SvcTlsVxInstVTEPEgrVniVxlanType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 9),
    _SvcTlsVxInstVTEPEgrVniVxlanType_Type()
)
svcTlsVxInstVTEPEgrVniVxlanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniVxlanType.setStatus("current")
_SvcTlsVxInstVTEPEgrVniSbdMcast_Type = TruthValue
_SvcTlsVxInstVTEPEgrVniSbdMcast_Object = MibTableColumn
svcTlsVxInstVTEPEgrVniSbdMcast = _SvcTlsVxInstVTEPEgrVniSbdMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 242, 1, 10),
    _SvcTlsVxInstVTEPEgrVniSbdMcast_Type()
)
svcTlsVxInstVTEPEgrVniSbdMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniSbdMcast.setStatus("current")
_SvcTlsVxlanInstARLfRplCndTable_Object = MibTable
svcTlsVxlanInstARLfRplCndTable = _SvcTlsVxlanInstARLfRplCndTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 243)
)
if mibBuilder.loadTexts:
    svcTlsVxlanInstARLfRplCndTable.setStatus("current")
_SvcTlsVxlanInstARLfRplCndEntry_Object = MibTableRow
svcTlsVxlanInstARLfRplCndEntry = _SvcTlsVxlanInstARLfRplCndEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 243, 1)
)
svcTlsVxlanInstARLfRplCndEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVni"),
)
if mibBuilder.loadTexts:
    svcTlsVxlanInstARLfRplCndEntry.setStatus("current")
_SvcTlsVxlanInstARLfRplCndInUse_Type = TruthValue
_SvcTlsVxlanInstARLfRplCndInUse_Object = MibTableColumn
svcTlsVxlanInstARLfRplCndInUse = _SvcTlsVxlanInstARLfRplCndInUse_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 243, 1, 1),
    _SvcTlsVxlanInstARLfRplCndInUse_Type()
)
svcTlsVxlanInstARLfRplCndInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanInstARLfRplCndInUse.setStatus("current")
_SvcTlsVxlanInstARLfRplCndActive_Type = TruthValue
_SvcTlsVxlanInstARLfRplCndActive_Object = MibTableColumn
svcTlsVxlanInstARLfRplCndActive = _SvcTlsVxlanInstARLfRplCndActive_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 243, 1, 2),
    _SvcTlsVxlanInstARLfRplCndActive_Type()
)
svcTlsVxlanInstARLfRplCndActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanInstARLfRplCndActive.setStatus("current")
_SvcTlsVxlanInstARLfRplCndPndTime_Type = Unsigned32
_SvcTlsVxlanInstARLfRplCndPndTime_Object = MibTableColumn
svcTlsVxlanInstARLfRplCndPndTime = _SvcTlsVxlanInstARLfRplCndPndTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 243, 1, 3),
    _SvcTlsVxlanInstARLfRplCndPndTime_Type()
)
svcTlsVxlanInstARLfRplCndPndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanInstARLfRplCndPndTime.setStatus("current")
_SvcEvpnVxlanInstESDstTEPTable_Object = MibTable
svcEvpnVxlanInstESDstTEPTable = _SvcEvpnVxlanInstESDstTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244)
)
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPTable.setStatus("current")
_SvcEvpnVxlanInstESDstTEPEntry_Object = MibTableRow
svcEvpnVxlanInstESDstTEPEntry = _SvcEvpnVxlanInstESDstTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244, 1)
)
svcEvpnVxlanInstESDstTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPVni"),
)
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPEntry.setStatus("current")
_SvcEvpnVxlanInstESDstTEPAddrType_Type = InetAddressType
_SvcEvpnVxlanInstESDstTEPAddrType_Object = MibTableColumn
svcEvpnVxlanInstESDstTEPAddrType = _SvcEvpnVxlanInstESDstTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244, 1, 1),
    _SvcEvpnVxlanInstESDstTEPAddrType_Type()
)
svcEvpnVxlanInstESDstTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPAddrType.setStatus("current")


class _SvcEvpnVxlanInstESDstTEPAddress_Type(InetAddress):
    """Custom type svcEvpnVxlanInstESDstTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnVxlanInstESDstTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnVxlanInstESDstTEPAddress_Object = MibTableColumn
svcEvpnVxlanInstESDstTEPAddress = _SvcEvpnVxlanInstESDstTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244, 1, 2),
    _SvcEvpnVxlanInstESDstTEPAddress_Type()
)
svcEvpnVxlanInstESDstTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPAddress.setStatus("current")
_SvcEvpnVxlanInstESDstTEPVni_Type = TmnxVni
_SvcEvpnVxlanInstESDstTEPVni_Object = MibTableColumn
svcEvpnVxlanInstESDstTEPVni = _SvcEvpnVxlanInstESDstTEPVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244, 1, 3),
    _SvcEvpnVxlanInstESDstTEPVni_Type()
)
svcEvpnVxlanInstESDstTEPVni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPVni.setStatus("current")
_SvcEvpnVxlanInstESDstTEPLastChg_Type = TimeStamp
_SvcEvpnVxlanInstESDstTEPLastChg_Object = MibTableColumn
svcEvpnVxlanInstESDstTEPLastChg = _SvcEvpnVxlanInstESDstTEPLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 244, 1, 4),
    _SvcEvpnVxlanInstESDstTEPLastChg_Type()
)
svcEvpnVxlanInstESDstTEPLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDstTEPLastChg.setStatus("current")
_SvcEvpnVxlanInstESDestTable_Object = MibTable
svcEvpnVxlanInstESDestTable = _SvcEvpnVxlanInstESDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 245)
)
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDestTable.setStatus("current")
_SvcEvpnVxlanInstESDestEntry_Object = MibTableRow
svcEvpnVxlanInstESDestEntry = _SvcEvpnVxlanInstESDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 245, 1)
)
svcEvpnVxlanInstESDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
)
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDestEntry.setStatus("current")
_SvcEvpnVxlanInstESDestLastChgd_Type = TimeStamp
_SvcEvpnVxlanInstESDestLastChgd_Object = MibTableColumn
svcEvpnVxlanInstESDestLastChgd = _SvcEvpnVxlanInstESDestLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 245, 1, 2),
    _SvcEvpnVxlanInstESDestLastChgd_Type()
)
svcEvpnVxlanInstESDestLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDestLastChgd.setStatus("current")
_SvcEvpnVxlanInstESDestNumMacs_Type = Unsigned32
_SvcEvpnVxlanInstESDestNumMacs_Object = MibTableColumn
svcEvpnVxlanInstESDestNumMacs = _SvcEvpnVxlanInstESDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 245, 1, 3),
    _SvcEvpnVxlanInstESDestNumMacs_Type()
)
svcEvpnVxlanInstESDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVxlanInstESDestNumMacs.setStatus("current")
_SvcTlsVxInstTable_Object = MibTable
svcTlsVxInstTable = _SvcTlsVxInstTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246)
)
if mibBuilder.loadTexts:
    svcTlsVxInstTable.setStatus("current")
_SvcTlsVxInstEntry_Object = MibTableRow
svcTlsVxInstEntry = _SvcTlsVxInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1)
)
svcTlsVxInstEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
)
if mibBuilder.loadTexts:
    svcTlsVxInstEntry.setStatus("current")
_SvcTlsVxInstRowStatus_Type = RowStatus
_SvcTlsVxInstRowStatus_Object = MibTableColumn
svcTlsVxInstRowStatus = _SvcTlsVxInstRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 2),
    _SvcTlsVxInstRowStatus_Type()
)
svcTlsVxInstRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstRowStatus.setStatus("current")
_SvcTlsVxInstLastChgd_Type = TimeStamp
_SvcTlsVxInstLastChgd_Object = MibTableColumn
svcTlsVxInstLastChgd = _SvcTlsVxInstLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 3),
    _SvcTlsVxInstLastChgd_Type()
)
svcTlsVxInstLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstLastChgd.setStatus("current")


class _SvcTlsVxInstCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcTlsVxInstCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcTlsVxInstCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcTlsVxInstCreationOrigin_Object = MibTableColumn
svcTlsVxInstCreationOrigin = _SvcTlsVxInstCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 4),
    _SvcTlsVxInstCreationOrigin_Type()
)
svcTlsVxInstCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstCreationOrigin.setStatus("current")


class _SvcTlsVxInstNetIngQosPolicyId_Type(TPolicyID):
    """Custom type svcTlsVxInstNetIngQosPolicyId based on TPolicyID"""
    defaultValue = 0

    subtypeSpec = TPolicyID.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SvcTlsVxInstNetIngQosPolicyId_Type.__name__ = "TPolicyID"
_SvcTlsVxInstNetIngQosPolicyId_Object = MibTableColumn
svcTlsVxInstNetIngQosPolicyId = _SvcTlsVxInstNetIngQosPolicyId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 5),
    _SvcTlsVxInstNetIngQosPolicyId_Type()
)
svcTlsVxInstNetIngQosPolicyId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstNetIngQosPolicyId.setStatus("current")


class _SvcTlsVxInstNetIngQosFPQGrp_Type(TNamedItemOrEmpty):
    """Custom type svcTlsVxInstNetIngQosFPQGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcTlsVxInstNetIngQosFPQGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcTlsVxInstNetIngQosFPQGrp_Object = MibTableColumn
svcTlsVxInstNetIngQosFPQGrp = _SvcTlsVxInstNetIngQosFPQGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 6),
    _SvcTlsVxInstNetIngQosFPQGrp_Type()
)
svcTlsVxInstNetIngQosFPQGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstNetIngQosFPQGrp.setStatus("current")


class _SvcTlsVxInstNetIngQosFPQGrpInst_Type(TQosQGrpInstanceIDorZero):
    """Custom type svcTlsVxInstNetIngQosFPQGrpInst based on TQosQGrpInstanceIDorZero"""
    defaultValue = 0


_SvcTlsVxInstNetIngQosFPQGrpInst_Type.__name__ = "TQosQGrpInstanceIDorZero"
_SvcTlsVxInstNetIngQosFPQGrpInst_Object = MibTableColumn
svcTlsVxInstNetIngQosFPQGrpInst = _SvcTlsVxInstNetIngQosFPQGrpInst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 7),
    _SvcTlsVxInstNetIngQosFPQGrpInst_Type()
)
svcTlsVxInstNetIngQosFPQGrpInst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstNetIngQosFPQGrpInst.setStatus("current")


class _SvcTlsVxInstAsstdRepl_Type(Integer32):
    """Custom type svcTlsVxInstAsstdRepl based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("replicator", 1),
          ("leaf", 2))
    )


_SvcTlsVxInstAsstdRepl_Type.__name__ = "Integer32"
_SvcTlsVxInstAsstdRepl_Object = MibTableColumn
svcTlsVxInstAsstdRepl = _SvcTlsVxInstAsstdRepl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 8),
    _SvcTlsVxInstAsstdRepl_Type()
)
svcTlsVxInstAsstdRepl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstAsstdRepl.setStatus("current")


class _SvcTlsVxInstARActTime_Type(Unsigned32):
    """Custom type svcTlsVxInstARActTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SvcTlsVxInstARActTime_Type.__name__ = "Unsigned32"
_SvcTlsVxInstARActTime_Object = MibTableColumn
svcTlsVxInstARActTime = _SvcTlsVxInstARActTime_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 9),
    _SvcTlsVxInstARActTime_Type()
)
svcTlsVxInstARActTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstARActTime.setStatus("current")
if mibBuilder.loadTexts:
    svcTlsVxInstARActTime.setUnits("seconds")


class _SvcTlsVxInstResProtSrcMac_Type(TruthValue):
    """Custom type svcTlsVxInstResProtSrcMac based on TruthValue"""
    defaultValue = 2


_SvcTlsVxInstResProtSrcMac_Type.__name__ = "TruthValue"
_SvcTlsVxInstResProtSrcMac_Object = MibTableColumn
svcTlsVxInstResProtSrcMac = _SvcTlsVxInstResProtSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 10),
    _SvcTlsVxInstResProtSrcMac_Type()
)
svcTlsVxInstResProtSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstResProtSrcMac.setStatus("current")


class _SvcTlsVxInstResProtSrcMacAct_Type(Integer32):
    """Custom type svcTlsVxInstResProtSrcMacAct based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("discardFrame", 1)
    )


_SvcTlsVxInstResProtSrcMacAct_Type.__name__ = "Integer32"
_SvcTlsVxInstResProtSrcMacAct_Object = MibTableColumn
svcTlsVxInstResProtSrcMacAct = _SvcTlsVxInstResProtSrcMacAct_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 11),
    _SvcTlsVxInstResProtSrcMacAct_Type()
)
svcTlsVxInstResProtSrcMacAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstResProtSrcMacAct.setStatus("current")


class _SvcTlsVxInstVni_Type(Unsigned32):
    """Custom type svcTlsVxInstVni based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_SvcTlsVxInstVni_Type.__name__ = "Unsigned32"
_SvcTlsVxInstVni_Object = MibTableColumn
svcTlsVxInstVni = _SvcTlsVxInstVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 12),
    _SvcTlsVxInstVni_Type()
)
svcTlsVxInstVni.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstVni.setStatus("current")


class _SvcTlsVxInstSrcVTEPSecurity_Type(TmnxEnabledDisabled):
    """Custom type svcTlsVxInstSrcVTEPSecurity based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsVxInstSrcVTEPSecurity_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsVxInstSrcVTEPSecurity_Object = MibTableColumn
svcTlsVxInstSrcVTEPSecurity = _SvcTlsVxInstSrcVTEPSecurity_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 13),
    _SvcTlsVxInstSrcVTEPSecurity_Type()
)
svcTlsVxInstSrcVTEPSecurity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstSrcVTEPSecurity.setStatus("current")


class _SvcTlsVxInstMacLearning_Type(TmnxEnabledDisabled):
    """Custom type svcTlsVxInstMacLearning based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsVxInstMacLearning_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsVxInstMacLearning_Object = MibTableColumn
svcTlsVxInstMacLearning = _SvcTlsVxInstMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 14),
    _SvcTlsVxInstMacLearning_Type()
)
svcTlsVxInstMacLearning.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstMacLearning.setStatus("current")


class _SvcTlsVxInstMacAgeing_Type(TmnxEnabledDisabled):
    """Custom type svcTlsVxInstMacAgeing based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsVxInstMacAgeing_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsVxInstMacAgeing_Object = MibTableColumn
svcTlsVxInstMacAgeing = _SvcTlsVxInstMacAgeing_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 15),
    _SvcTlsVxInstMacAgeing_Type()
)
svcTlsVxInstMacAgeing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstMacAgeing.setStatus("current")


class _SvcTlsVxInstDiscardUnknownSource_Type(TmnxEnabledDisabled):
    """Custom type svcTlsVxInstDiscardUnknownSource based on TmnxEnabledDisabled"""
    defaultValue = 2


_SvcTlsVxInstDiscardUnknownSource_Type.__name__ = "TmnxEnabledDisabled"
_SvcTlsVxInstDiscardUnknownSource_Object = MibTableColumn
svcTlsVxInstDiscardUnknownSource = _SvcTlsVxInstDiscardUnknownSource_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 16),
    _SvcTlsVxInstDiscardUnknownSource_Type()
)
svcTlsVxInstDiscardUnknownSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstDiscardUnknownSource.setStatus("current")


class _SvcTlsVxInstMacAddressLimit_Type(Unsigned32):
    """Custom type svcTlsVxInstMacAddressLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 511999),
    )


_SvcTlsVxInstMacAddressLimit_Type.__name__ = "Unsigned32"
_SvcTlsVxInstMacAddressLimit_Object = MibTableColumn
svcTlsVxInstMacAddressLimit = _SvcTlsVxInstMacAddressLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 17),
    _SvcTlsVxInstMacAddressLimit_Type()
)
svcTlsVxInstMacAddressLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstMacAddressLimit.setStatus("current")


class _SvcTlsVxInstRxDiscardOnNdf_Type(Integer32):
    """Custom type svcTlsVxInstRxDiscardOnNdf based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bm", 0),
          ("bum", 1),
          ("none", 2))
    )


_SvcTlsVxInstRxDiscardOnNdf_Type.__name__ = "Integer32"
_SvcTlsVxInstRxDiscardOnNdf_Object = MibTableColumn
svcTlsVxInstRxDiscardOnNdf = _SvcTlsVxInstRxDiscardOnNdf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 18),
    _SvcTlsVxInstRxDiscardOnNdf_Type()
)
svcTlsVxInstRxDiscardOnNdf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstRxDiscardOnNdf.setStatus("current")


class _SvcTlsVxInstIgmpSnpgMrouter_Type(TruthValue):
    """Custom type svcTlsVxInstIgmpSnpgMrouter based on TruthValue"""
    defaultValue = 2


_SvcTlsVxInstIgmpSnpgMrouter_Type.__name__ = "TruthValue"
_SvcTlsVxInstIgmpSnpgMrouter_Object = MibTableColumn
svcTlsVxInstIgmpSnpgMrouter = _SvcTlsVxInstIgmpSnpgMrouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 19),
    _SvcTlsVxInstIgmpSnpgMrouter_Type()
)
svcTlsVxInstIgmpSnpgMrouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstIgmpSnpgMrouter.setStatus("current")


class _SvcTlsVxInstMldSnpgMrouter_Type(TruthValue):
    """Custom type svcTlsVxInstMldSnpgMrouter based on TruthValue"""
    defaultValue = 2


_SvcTlsVxInstMldSnpgMrouter_Type.__name__ = "TruthValue"
_SvcTlsVxInstMldSnpgMrouter_Object = MibTableColumn
svcTlsVxInstMldSnpgMrouter = _SvcTlsVxInstMldSnpgMrouter_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 246, 1, 20),
    _SvcTlsVxInstMldSnpgMrouter_Type()
)
svcTlsVxInstMldSnpgMrouter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxInstMldSnpgMrouter.setStatus("current")
_SvcMdAutoIdGroup_ObjectIdentity = ObjectIdentity
svcMdAutoIdGroup = _SvcMdAutoIdGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247)
)


class _SvcMdAutoIdSvcRangeStart_Type(TmnxExtServId):
    """Custom type svcMdAutoIdSvcRangeStart based on TmnxExtServId"""
    defaultValue = 0


_SvcMdAutoIdSvcRangeStart_Type.__name__ = "TmnxExtServId"
_SvcMdAutoIdSvcRangeStart_Object = MibScalar
svcMdAutoIdSvcRangeStart = _SvcMdAutoIdSvcRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 1),
    _SvcMdAutoIdSvcRangeStart_Type()
)
svcMdAutoIdSvcRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdSvcRangeStart.setStatus("current")


class _SvcMdAutoIdSvcRangeEnd_Type(TmnxExtServId):
    """Custom type svcMdAutoIdSvcRangeEnd based on TmnxExtServId"""
    defaultValue = 0


_SvcMdAutoIdSvcRangeEnd_Type.__name__ = "TmnxExtServId"
_SvcMdAutoIdSvcRangeEnd_Object = MibScalar
svcMdAutoIdSvcRangeEnd = _SvcMdAutoIdSvcRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 2),
    _SvcMdAutoIdSvcRangeEnd_Type()
)
svcMdAutoIdSvcRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdSvcRangeEnd.setStatus("current")


class _SvcMdAutoIdCustRangeStart_Type(TmnxCustId):
    """Custom type svcMdAutoIdCustRangeStart based on TmnxCustId"""
    defaultValue = 0


_SvcMdAutoIdCustRangeStart_Type.__name__ = "TmnxCustId"
_SvcMdAutoIdCustRangeStart_Object = MibScalar
svcMdAutoIdCustRangeStart = _SvcMdAutoIdCustRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 3),
    _SvcMdAutoIdCustRangeStart_Type()
)
svcMdAutoIdCustRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdCustRangeStart.setStatus("current")


class _SvcMdAutoIdCustRangeEnd_Type(TmnxCustId):
    """Custom type svcMdAutoIdCustRangeEnd based on TmnxCustId"""
    defaultValue = 0


_SvcMdAutoIdCustRangeEnd_Type.__name__ = "TmnxCustId"
_SvcMdAutoIdCustRangeEnd_Object = MibScalar
svcMdAutoIdCustRangeEnd = _SvcMdAutoIdCustRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 4),
    _SvcMdAutoIdCustRangeEnd_Type()
)
svcMdAutoIdCustRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdCustRangeEnd.setStatus("current")


class _SvcMdAutoIdPwTmplRangeStart_Type(PWTemplateId):
    """Custom type svcMdAutoIdPwTmplRangeStart based on PWTemplateId"""
    defaultValue = 0


_SvcMdAutoIdPwTmplRangeStart_Type.__name__ = "PWTemplateId"
_SvcMdAutoIdPwTmplRangeStart_Object = MibScalar
svcMdAutoIdPwTmplRangeStart = _SvcMdAutoIdPwTmplRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 5),
    _SvcMdAutoIdPwTmplRangeStart_Type()
)
svcMdAutoIdPwTmplRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdPwTmplRangeStart.setStatus("current")


class _SvcMdAutoIdPwTmplRangeEnd_Type(PWTemplateId):
    """Custom type svcMdAutoIdPwTmplRangeEnd based on PWTemplateId"""
    defaultValue = 0


_SvcMdAutoIdPwTmplRangeEnd_Type.__name__ = "PWTemplateId"
_SvcMdAutoIdPwTmplRangeEnd_Object = MibScalar
svcMdAutoIdPwTmplRangeEnd = _SvcMdAutoIdPwTmplRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 6),
    _SvcMdAutoIdPwTmplRangeEnd_Type()
)
svcMdAutoIdPwTmplRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcMdAutoIdPwTmplRangeEnd.setStatus("current")
_SvcMdAutoIdSvcCount_Type = TmnxExtServId
_SvcMdAutoIdSvcCount_Object = MibScalar
svcMdAutoIdSvcCount = _SvcMdAutoIdSvcCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 7),
    _SvcMdAutoIdSvcCount_Type()
)
svcMdAutoIdSvcCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMdAutoIdSvcCount.setStatus("current")
_SvcMdAutoIdCustCount_Type = TmnxCustId
_SvcMdAutoIdCustCount_Object = MibScalar
svcMdAutoIdCustCount = _SvcMdAutoIdCustCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 8),
    _SvcMdAutoIdCustCount_Type()
)
svcMdAutoIdCustCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMdAutoIdCustCount.setStatus("current")
_SvcMdAutoIdPwTmplCount_Type = PWTemplateId
_SvcMdAutoIdPwTmplCount_Object = MibScalar
svcMdAutoIdPwTmplCount = _SvcMdAutoIdPwTmplCount_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 247, 9),
    _SvcMdAutoIdPwTmplCount_Type()
)
svcMdAutoIdPwTmplCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMdAutoIdPwTmplCount.setStatus("current")
_TmnxSvcSysPwPortListTable_Object = MibTable
tmnxSvcSysPwPortListTable = _TmnxSvcSysPwPortListTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 248)
)
if mibBuilder.loadTexts:
    tmnxSvcSysPwPortListTable.setStatus("current")
_TmnxSvcSysPwPortListEntry_Object = MibTableRow
tmnxSvcSysPwPortListEntry = _TmnxSvcSysPwPortListEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 248, 1)
)
tmnxSvcSysPwPortListEntry.setIndexNames(
    (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"),
)
if mibBuilder.loadTexts:
    tmnxSvcSysPwPortListEntry.setStatus("current")
_TmnxSvcSysPwPortListRowStatus_Type = RowStatus
_TmnxSvcSysPwPortListRowStatus_Object = MibTableColumn
tmnxSvcSysPwPortListRowStatus = _TmnxSvcSysPwPortListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 248, 1, 1),
    _TmnxSvcSysPwPortListRowStatus_Type()
)
tmnxSvcSysPwPortListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSysPwPortListRowStatus.setStatus("current")
_SvcTlsVxlanInstEgrVTEPTable_Object = MibTable
svcTlsVxlanInstEgrVTEPTable = _SvcTlsVxlanInstEgrVTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 249)
)
if mibBuilder.loadTexts:
    svcTlsVxlanInstEgrVTEPTable.setStatus("current")
_SvcTlsVxlanInstEgrVTEPEntry_Object = MibTableRow
svcTlsVxlanInstEgrVTEPEntry = _SvcTlsVxlanInstEgrVTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 249, 1)
)
svcTlsVxlanInstEgrVTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxlanInstEgrVTEPIpAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcTlsVxlanInstEgrVTEPIpAddr"),
)
if mibBuilder.loadTexts:
    svcTlsVxlanInstEgrVTEPEntry.setStatus("current")
_SvcTlsVxlanInstEgrVTEPIpAddrType_Type = InetAddressType
_SvcTlsVxlanInstEgrVTEPIpAddrType_Object = MibTableColumn
svcTlsVxlanInstEgrVTEPIpAddrType = _SvcTlsVxlanInstEgrVTEPIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 249, 1, 1),
    _SvcTlsVxlanInstEgrVTEPIpAddrType_Type()
)
svcTlsVxlanInstEgrVTEPIpAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsVxlanInstEgrVTEPIpAddrType.setStatus("current")


class _SvcTlsVxlanInstEgrVTEPIpAddr_Type(InetAddress):
    """Custom type svcTlsVxlanInstEgrVTEPIpAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcTlsVxlanInstEgrVTEPIpAddr_Type.__name__ = "InetAddress"
_SvcTlsVxlanInstEgrVTEPIpAddr_Object = MibTableColumn
svcTlsVxlanInstEgrVTEPIpAddr = _SvcTlsVxlanInstEgrVTEPIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 249, 1, 2),
    _SvcTlsVxlanInstEgrVTEPIpAddr_Type()
)
svcTlsVxlanInstEgrVTEPIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcTlsVxlanInstEgrVTEPIpAddr.setStatus("current")
_SvcTlsVxlanInstEgrVTEPRowStatus_Type = RowStatus
_SvcTlsVxlanInstEgrVTEPRowStatus_Object = MibTableColumn
svcTlsVxlanInstEgrVTEPRowStatus = _SvcTlsVxlanInstEgrVTEPRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 249, 1, 3),
    _SvcTlsVxlanInstEgrVTEPRowStatus_Type()
)
svcTlsVxlanInstEgrVTEPRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcTlsVxlanInstEgrVTEPRowStatus.setStatus("current")
_SvcEpipeVxInstTable_Object = MibTable
svcEpipeVxInstTable = _SvcEpipeVxInstTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250)
)
if mibBuilder.loadTexts:
    svcEpipeVxInstTable.setStatus("current")
_SvcEpipeVxInstEntry_Object = MibTableRow
svcEpipeVxInstEntry = _SvcEpipeVxInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1)
)
svcEpipeVxInstEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVxlanInstanceId"),
)
if mibBuilder.loadTexts:
    svcEpipeVxInstEntry.setStatus("current")


class _SvcEpipeVxInstVni_Type(TmnxVniOrZero):
    """Custom type svcEpipeVxInstVni based on TmnxVniOrZero"""
    defaultValue = 0


_SvcEpipeVxInstVni_Type.__name__ = "TmnxVniOrZero"
_SvcEpipeVxInstVni_Object = MibTableColumn
svcEpipeVxInstVni = _SvcEpipeVxInstVni_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 1),
    _SvcEpipeVxInstVni_Type()
)
svcEpipeVxInstVni.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxInstVni.setStatus("current")
_SvcEpipeVxInstRowStatus_Type = RowStatus
_SvcEpipeVxInstRowStatus_Object = MibTableColumn
svcEpipeVxInstRowStatus = _SvcEpipeVxInstRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 2),
    _SvcEpipeVxInstRowStatus_Type()
)
svcEpipeVxInstRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxInstRowStatus.setStatus("current")
_SvcEpipeVxInstLastChgd_Type = TimeStamp
_SvcEpipeVxInstLastChgd_Object = MibTableColumn
svcEpipeVxInstLastChgd = _SvcEpipeVxInstLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 3),
    _SvcEpipeVxInstLastChgd_Type()
)
svcEpipeVxInstLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxInstLastChgd.setStatus("current")


class _SvcEpipeVxInstCreationOrigin_Type(TmnxCreateOrigin):
    """Custom type svcEpipeVxInstCreationOrigin based on TmnxCreateOrigin"""
    defaultValue = 1


_SvcEpipeVxInstCreationOrigin_Type.__name__ = "TmnxCreateOrigin"
_SvcEpipeVxInstCreationOrigin_Object = MibTableColumn
svcEpipeVxInstCreationOrigin = _SvcEpipeVxInstCreationOrigin_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 4),
    _SvcEpipeVxInstCreationOrigin_Type()
)
svcEpipeVxInstCreationOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxInstCreationOrigin.setStatus("current")


class _SvcEpipeVxInstEgrVTEPIpAddrType_Type(InetAddressType):
    """Custom type svcEpipeVxInstEgrVTEPIpAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEpipeVxInstEgrVTEPIpAddrType_Type.__name__ = "InetAddressType"
_SvcEpipeVxInstEgrVTEPIpAddrType_Object = MibTableColumn
svcEpipeVxInstEgrVTEPIpAddrType = _SvcEpipeVxInstEgrVTEPIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 5),
    _SvcEpipeVxInstEgrVTEPIpAddrType_Type()
)
svcEpipeVxInstEgrVTEPIpAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxInstEgrVTEPIpAddrType.setStatus("current")


class _SvcEpipeVxInstEgrVTEPIpAddr_Type(InetAddress):
    """Custom type svcEpipeVxInstEgrVTEPIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEpipeVxInstEgrVTEPIpAddr_Type.__name__ = "InetAddress"
_SvcEpipeVxInstEgrVTEPIpAddr_Object = MibTableColumn
svcEpipeVxInstEgrVTEPIpAddr = _SvcEpipeVxInstEgrVTEPIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 6),
    _SvcEpipeVxInstEgrVTEPIpAddr_Type()
)
svcEpipeVxInstEgrVTEPIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxInstEgrVTEPIpAddr.setStatus("current")


class _SvcEpipeVxInstEgrVTEPIpOperGrp_Type(TNamedItemOrEmpty):
    """Custom type svcEpipeVxInstEgrVTEPIpOperGrp based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcEpipeVxInstEgrVTEPIpOperGrp_Type.__name__ = "TNamedItemOrEmpty"
_SvcEpipeVxInstEgrVTEPIpOperGrp_Object = MibTableColumn
svcEpipeVxInstEgrVTEPIpOperGrp = _SvcEpipeVxInstEgrVTEPIpOperGrp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 250, 1, 7),
    _SvcEpipeVxInstEgrVTEPIpOperGrp_Type()
)
svcEpipeVxInstEgrVTEPIpOperGrp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeVxInstEgrVTEPIpOperGrp.setStatus("current")
_SvcVprnAaaObjs_ObjectIdentity = ObjectIdentity
svcVprnAaaObjs = _SvcVprnAaaObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251)
)
_SvcVprnTacPlusTable_Object = MibTable
svcVprnTacPlusTable = _SvcVprnTacPlusTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1)
)
if mibBuilder.loadTexts:
    svcVprnTacPlusTable.setStatus("current")
_SvcVprnTacPlusEntry_Object = MibTableRow
svcVprnTacPlusEntry = _SvcVprnTacPlusEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1)
)
svcVprnTacPlusEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnTacPlusEntry.setStatus("current")


class _SvcVprnTacPlusAdminStatus_Type(TmnxAdminState):
    """Custom type svcVprnTacPlusAdminStatus based on TmnxAdminState"""
    defaultValue = 2


_SvcVprnTacPlusAdminStatus_Type.__name__ = "TmnxAdminState"
_SvcVprnTacPlusAdminStatus_Object = MibTableColumn
svcVprnTacPlusAdminStatus = _SvcVprnTacPlusAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 1),
    _SvcVprnTacPlusAdminStatus_Type()
)
svcVprnTacPlusAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAdminStatus.setStatus("current")
_SvcVprnTacPlusRowStatus_Type = RowStatus
_SvcVprnTacPlusRowStatus_Object = MibTableColumn
svcVprnTacPlusRowStatus = _SvcVprnTacPlusRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 2),
    _SvcVprnTacPlusRowStatus_Type()
)
svcVprnTacPlusRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusRowStatus.setStatus("current")


class _SvcVprnTacPlusTimeout_Type(Unsigned32):
    """Custom type svcVprnTacPlusTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 90),
    )


_SvcVprnTacPlusTimeout_Type.__name__ = "Unsigned32"
_SvcVprnTacPlusTimeout_Object = MibTableColumn
svcVprnTacPlusTimeout = _SvcVprnTacPlusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 3),
    _SvcVprnTacPlusTimeout_Type()
)
svcVprnTacPlusTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcVprnTacPlusTimeout.setUnits("Seconds")


class _SvcVprnTacPlusAccounting_Type(TruthValue):
    """Custom type svcVprnTacPlusAccounting based on TruthValue"""
    defaultValue = 2


_SvcVprnTacPlusAccounting_Type.__name__ = "TruthValue"
_SvcVprnTacPlusAccounting_Object = MibTableColumn
svcVprnTacPlusAccounting = _SvcVprnTacPlusAccounting_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 4),
    _SvcVprnTacPlusAccounting_Type()
)
svcVprnTacPlusAccounting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAccounting.setStatus("current")


class _SvcVprnTacPlusAcctRecType_Type(Integer32):
    """Custom type svcVprnTacPlusAcctRecType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("startStop", 1),
          ("stopOnly", 2))
    )


_SvcVprnTacPlusAcctRecType_Type.__name__ = "Integer32"
_SvcVprnTacPlusAcctRecType_Object = MibTableColumn
svcVprnTacPlusAcctRecType = _SvcVprnTacPlusAcctRecType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 5),
    _SvcVprnTacPlusAcctRecType_Type()
)
svcVprnTacPlusAcctRecType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAcctRecType.setStatus("current")


class _SvcVprnTacPlusAuthorization_Type(TruthValue):
    """Custom type svcVprnTacPlusAuthorization based on TruthValue"""
    defaultValue = 2


_SvcVprnTacPlusAuthorization_Type.__name__ = "TruthValue"
_SvcVprnTacPlusAuthorization_Object = MibTableColumn
svcVprnTacPlusAuthorization = _SvcVprnTacPlusAuthorization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 6),
    _SvcVprnTacPlusAuthorization_Type()
)
svcVprnTacPlusAuthorization.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAuthorization.setStatus("current")


class _SvcVprnTacplusUseTemplate_Type(TruthValue):
    """Custom type svcVprnTacplusUseTemplate based on TruthValue"""
    defaultValue = 1


_SvcVprnTacplusUseTemplate_Type.__name__ = "TruthValue"
_SvcVprnTacplusUseTemplate_Object = MibTableColumn
svcVprnTacplusUseTemplate = _SvcVprnTacplusUseTemplate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 7),
    _SvcVprnTacplusUseTemplate_Type()
)
svcVprnTacplusUseTemplate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacplusUseTemplate.setStatus("current")


class _SvcVprnTacPlusInteractiveAuthen_Type(TruthValue):
    """Custom type svcVprnTacPlusInteractiveAuthen based on TruthValue"""
    defaultValue = 2


_SvcVprnTacPlusInteractiveAuthen_Type.__name__ = "TruthValue"
_SvcVprnTacPlusInteractiveAuthen_Object = MibTableColumn
svcVprnTacPlusInteractiveAuthen = _SvcVprnTacPlusInteractiveAuthen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 8),
    _SvcVprnTacPlusInteractiveAuthen_Type()
)
svcVprnTacPlusInteractiveAuthen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusInteractiveAuthen.setStatus("current")


class _SvcVprnTacPlusAuthorUsePrivLvl_Type(TruthValue):
    """Custom type svcVprnTacPlusAuthorUsePrivLvl based on TruthValue"""
    defaultValue = 2


_SvcVprnTacPlusAuthorUsePrivLvl_Type.__name__ = "TruthValue"
_SvcVprnTacPlusAuthorUsePrivLvl_Object = MibTableColumn
svcVprnTacPlusAuthorUsePrivLvl = _SvcVprnTacPlusAuthorUsePrivLvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 9),
    _SvcVprnTacPlusAuthorUsePrivLvl_Type()
)
svcVprnTacPlusAuthorUsePrivLvl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAuthorUsePrivLvl.setStatus("current")
_SvcVprnTacPlusLastChanged_Type = TimeStamp
_SvcVprnTacPlusLastChanged_Object = MibTableColumn
svcVprnTacPlusLastChanged = _SvcVprnTacPlusLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 10),
    _SvcVprnTacPlusLastChanged_Type()
)
svcVprnTacPlusLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTacPlusLastChanged.setStatus("current")


class _SvcVprnTacPlusAccessOpCmd1_Type(TmnxTacplusAccessOpType):
    """Custom type svcVprnTacPlusAccessOpCmd1 based on TmnxTacplusAccessOpType"""
    defaultValue = 0


_SvcVprnTacPlusAccessOpCmd1_Type.__name__ = "TmnxTacplusAccessOpType"
_SvcVprnTacPlusAccessOpCmd1_Object = MibTableColumn
svcVprnTacPlusAccessOpCmd1 = _SvcVprnTacPlusAccessOpCmd1_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 1, 1, 11),
    _SvcVprnTacPlusAccessOpCmd1_Type()
)
svcVprnTacPlusAccessOpCmd1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusAccessOpCmd1.setStatus("current")
_SvcVprnTacPlusServerTable_Object = MibTable
svcVprnTacPlusServerTable = _SvcVprnTacPlusServerTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2)
)
if mibBuilder.loadTexts:
    svcVprnTacPlusServerTable.setStatus("current")
_SvcVprnTacPlusServerEntry_Object = MibTableRow
svcVprnTacPlusServerEntry = _SvcVprnTacPlusServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1)
)
svcVprnTacPlusServerEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnTacPlusServerIndex"),
)
if mibBuilder.loadTexts:
    svcVprnTacPlusServerEntry.setStatus("current")


class _SvcVprnTacPlusServerIndex_Type(Unsigned32):
    """Custom type svcVprnTacPlusServerIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SvcVprnTacPlusServerIndex_Type.__name__ = "Unsigned32"
_SvcVprnTacPlusServerIndex_Object = MibTableColumn
svcVprnTacPlusServerIndex = _SvcVprnTacPlusServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 1),
    _SvcVprnTacPlusServerIndex_Type()
)
svcVprnTacPlusServerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerIndex.setStatus("current")


class _SvcVprnTacPlusServerSecret_Type(OctetString):
    """Custom type svcVprnTacPlusServerSecret based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SvcVprnTacPlusServerSecret_Type.__name__ = "OctetString"
_SvcVprnTacPlusServerSecret_Object = MibTableColumn
svcVprnTacPlusServerSecret = _SvcVprnTacPlusServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 2),
    _SvcVprnTacPlusServerSecret_Type()
)
svcVprnTacPlusServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerSecret.setStatus("current")
_SvcVprnTacPlusServerRowStatus_Type = RowStatus
_SvcVprnTacPlusServerRowStatus_Object = MibTableColumn
svcVprnTacPlusServerRowStatus = _SvcVprnTacPlusServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 3),
    _SvcVprnTacPlusServerRowStatus_Type()
)
svcVprnTacPlusServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerRowStatus.setStatus("current")
_SvcVprnTacPlusServerOperStatus_Type = TmnxOperState
_SvcVprnTacPlusServerOperStatus_Object = MibTableColumn
svcVprnTacPlusServerOperStatus = _SvcVprnTacPlusServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 4),
    _SvcVprnTacPlusServerOperStatus_Type()
)
svcVprnTacPlusServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerOperStatus.setStatus("current")
_SvcVprnTacPlusServInetAddrType_Type = InetAddressType
_SvcVprnTacPlusServInetAddrType_Object = MibTableColumn
svcVprnTacPlusServInetAddrType = _SvcVprnTacPlusServInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 5),
    _SvcVprnTacPlusServInetAddrType_Type()
)
svcVprnTacPlusServInetAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusServInetAddrType.setStatus("current")


class _SvcVprnTacPlusServerInetAddress_Type(InetAddress):
    """Custom type svcVprnTacPlusServerInetAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
        ValueSizeConstraint(20, 20),
    )


_SvcVprnTacPlusServerInetAddress_Type.__name__ = "InetAddress"
_SvcVprnTacPlusServerInetAddress_Object = MibTableColumn
svcVprnTacPlusServerInetAddress = _SvcVprnTacPlusServerInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 6),
    _SvcVprnTacPlusServerInetAddress_Type()
)
svcVprnTacPlusServerInetAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerInetAddress.setStatus("current")


class _SvcVprnTacPlusServerPort_Type(TTcpUdpPort):
    """Custom type svcVprnTacPlusServerPort based on TTcpUdpPort"""
    defaultValue = 49


_SvcVprnTacPlusServerPort_Type.__name__ = "TTcpUdpPort"
_SvcVprnTacPlusServerPort_Object = MibTableColumn
svcVprnTacPlusServerPort = _SvcVprnTacPlusServerPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 7),
    _SvcVprnTacPlusServerPort_Type()
)
svcVprnTacPlusServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerPort.setStatus("current")
_SvcVprnTacPlusServerLastChanged_Type = TimeStamp
_SvcVprnTacPlusServerLastChanged_Object = MibTableColumn
svcVprnTacPlusServerLastChanged = _SvcVprnTacPlusServerLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 2, 1, 8),
    _SvcVprnTacPlusServerLastChanged_Type()
)
svcVprnTacPlusServerLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerLastChanged.setStatus("current")
_SvcVprnTacPlusPrivLvlMapTable_Object = MibTable
svcVprnTacPlusPrivLvlMapTable = _SvcVprnTacPlusPrivLvlMapTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3)
)
if mibBuilder.loadTexts:
    svcVprnTacPlusPrivLvlMapTable.setStatus("current")
_SvcVprnTacPlusPrivLvlMapEntry_Object = MibTableRow
svcVprnTacPlusPrivLvlMapEntry = _SvcVprnTacPlusPrivLvlMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3, 1)
)
svcVprnTacPlusPrivLvlMapEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnTacPlusPrivLvlMapPrivLvl"),
)
if mibBuilder.loadTexts:
    svcVprnTacPlusPrivLvlMapEntry.setStatus("current")


class _SvcVprnTacPlusPrivLvlMapPrivLvl_Type(Unsigned32):
    """Custom type svcVprnTacPlusPrivLvlMapPrivLvl based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SvcVprnTacPlusPrivLvlMapPrivLvl_Type.__name__ = "Unsigned32"
_SvcVprnTacPlusPrivLvlMapPrivLvl_Object = MibTableColumn
svcVprnTacPlusPrivLvlMapPrivLvl = _SvcVprnTacPlusPrivLvlMapPrivLvl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3, 1, 1),
    _SvcVprnTacPlusPrivLvlMapPrivLvl_Type()
)
svcVprnTacPlusPrivLvlMapPrivLvl.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnTacPlusPrivLvlMapPrivLvl.setStatus("current")
_SvcVprnTacPlusPrivLvlRowStatus_Type = RowStatus
_SvcVprnTacPlusPrivLvlRowStatus_Object = MibTableColumn
svcVprnTacPlusPrivLvlRowStatus = _SvcVprnTacPlusPrivLvlRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3, 1, 2),
    _SvcVprnTacPlusPrivLvlRowStatus_Type()
)
svcVprnTacPlusPrivLvlRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusPrivLvlRowStatus.setStatus("current")
_SvcVprnTacPlusPriLvlMapUserProf_Type = TNamedItem
_SvcVprnTacPlusPriLvlMapUserProf_Object = MibTableColumn
svcVprnTacPlusPriLvlMapUserProf = _SvcVprnTacPlusPriLvlMapUserProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3, 1, 3),
    _SvcVprnTacPlusPriLvlMapUserProf_Type()
)
svcVprnTacPlusPriLvlMapUserProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnTacPlusPriLvlMapUserProf.setStatus("current")
_SvcVprnTPlusPriLvlMpLastChanged_Type = TimeStamp
_SvcVprnTPlusPriLvlMpLastChanged_Object = MibTableColumn
svcVprnTPlusPriLvlMpLastChanged = _SvcVprnTPlusPriLvlMpLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 3, 1, 4),
    _SvcVprnTPlusPriLvlMpLastChanged_Type()
)
svcVprnTPlusPriLvlMpLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTPlusPriLvlMpLastChanged.setStatus("current")
_SvcVprnLdapTable_Object = MibTable
svcVprnLdapTable = _SvcVprnLdapTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4)
)
if mibBuilder.loadTexts:
    svcVprnLdapTable.setStatus("current")
_SvcVprnLdapConfigEntry_Object = MibTableRow
svcVprnLdapConfigEntry = _SvcVprnLdapConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1)
)
svcVprnLdapConfigEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnLdapConfigEntry.setStatus("current")


class _SvcVprnLdapAdminState_Type(TmnxAdminState):
    """Custom type svcVprnLdapAdminState based on TmnxAdminState"""
    defaultValue = 2


_SvcVprnLdapAdminState_Type.__name__ = "TmnxAdminState"
_SvcVprnLdapAdminState_Object = MibTableColumn
svcVprnLdapAdminState = _SvcVprnLdapAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 1),
    _SvcVprnLdapAdminState_Type()
)
svcVprnLdapAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapAdminState.setStatus("current")
_SvcVprnLdapRowStatus_Type = RowStatus
_SvcVprnLdapRowStatus_Object = MibTableColumn
svcVprnLdapRowStatus = _SvcVprnLdapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 2),
    _SvcVprnLdapRowStatus_Type()
)
svcVprnLdapRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapRowStatus.setStatus("current")
_SvcVprnLdapOperState_Type = TmnxOperState
_SvcVprnLdapOperState_Object = MibTableColumn
svcVprnLdapOperState = _SvcVprnLdapOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 3),
    _SvcVprnLdapOperState_Type()
)
svcVprnLdapOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapOperState.setStatus("current")


class _SvcVprnLdapRetryAttempts_Type(Unsigned32):
    """Custom type svcVprnLdapRetryAttempts based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcVprnLdapRetryAttempts_Type.__name__ = "Unsigned32"
_SvcVprnLdapRetryAttempts_Object = MibTableColumn
svcVprnLdapRetryAttempts = _SvcVprnLdapRetryAttempts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 4),
    _SvcVprnLdapRetryAttempts_Type()
)
svcVprnLdapRetryAttempts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapRetryAttempts.setStatus("current")


class _SvcVprnLdapTimeout_Type(Unsigned32):
    """Custom type svcVprnLdapTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 90),
    )


_SvcVprnLdapTimeout_Type.__name__ = "Unsigned32"
_SvcVprnLdapTimeout_Object = MibTableColumn
svcVprnLdapTimeout = _SvcVprnLdapTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 5),
    _SvcVprnLdapTimeout_Type()
)
svcVprnLdapTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcVprnLdapTimeout.setUnits("Seconds")


class _SvcVprnLdapUseTemplate_Type(TruthValue):
    """Custom type svcVprnLdapUseTemplate based on TruthValue"""
    defaultValue = 1


_SvcVprnLdapUseTemplate_Type.__name__ = "TruthValue"
_SvcVprnLdapUseTemplate_Object = MibTableColumn
svcVprnLdapUseTemplate = _SvcVprnLdapUseTemplate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 6),
    _SvcVprnLdapUseTemplate_Type()
)
svcVprnLdapUseTemplate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapUseTemplate.setStatus("current")


class _SvcVprnLdapPublicKeyAuth_Type(TruthValue):
    """Custom type svcVprnLdapPublicKeyAuth based on TruthValue"""
    defaultValue = 2


_SvcVprnLdapPublicKeyAuth_Type.__name__ = "TruthValue"
_SvcVprnLdapPublicKeyAuth_Object = MibTableColumn
svcVprnLdapPublicKeyAuth = _SvcVprnLdapPublicKeyAuth_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 7),
    _SvcVprnLdapPublicKeyAuth_Type()
)
svcVprnLdapPublicKeyAuth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapPublicKeyAuth.setStatus("current")
_SvcVprnLdapLastChanged_Type = TimeStamp
_SvcVprnLdapLastChanged_Object = MibTableColumn
svcVprnLdapLastChanged = _SvcVprnLdapLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 4, 1, 8),
    _SvcVprnLdapLastChanged_Type()
)
svcVprnLdapLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapLastChanged.setStatus("current")
_SvcVprnLdapServerTable_Object = MibTable
svcVprnLdapServerTable = _SvcVprnLdapServerTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5)
)
if mibBuilder.loadTexts:
    svcVprnLdapServerTable.setStatus("current")
_SvcVprnLdapServerEntry_Object = MibTableRow
svcVprnLdapServerEntry = _SvcVprnLdapServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1)
)
svcVprnLdapServerEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnLdapServerIndex"),
)
if mibBuilder.loadTexts:
    svcVprnLdapServerEntry.setStatus("current")


class _SvcVprnLdapServerIndex_Type(Unsigned32):
    """Custom type svcVprnLdapServerIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SvcVprnLdapServerIndex_Type.__name__ = "Unsigned32"
_SvcVprnLdapServerIndex_Object = MibTableColumn
svcVprnLdapServerIndex = _SvcVprnLdapServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 1),
    _SvcVprnLdapServerIndex_Type()
)
svcVprnLdapServerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnLdapServerIndex.setStatus("current")
_SvcVprnLdapServerLastChanged_Type = TimeStamp
_SvcVprnLdapServerLastChanged_Object = MibTableColumn
svcVprnLdapServerLastChanged = _SvcVprnLdapServerLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 2),
    _SvcVprnLdapServerLastChanged_Type()
)
svcVprnLdapServerLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapServerLastChanged.setStatus("current")
_SvcVprnLdapServerRowStatus_Type = RowStatus
_SvcVprnLdapServerRowStatus_Object = MibTableColumn
svcVprnLdapServerRowStatus = _SvcVprnLdapServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 3),
    _SvcVprnLdapServerRowStatus_Type()
)
svcVprnLdapServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerRowStatus.setStatus("current")


class _SvcVprnLdapServerAdminState_Type(TmnxAdminState):
    """Custom type svcVprnLdapServerAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcVprnLdapServerAdminState_Type.__name__ = "TmnxAdminState"
_SvcVprnLdapServerAdminState_Object = MibTableColumn
svcVprnLdapServerAdminState = _SvcVprnLdapServerAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 4),
    _SvcVprnLdapServerAdminState_Type()
)
svcVprnLdapServerAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerAdminState.setStatus("current")
_SvcVprnLdapServerOperState_Type = TmnxOperState
_SvcVprnLdapServerOperState_Object = MibTableColumn
svcVprnLdapServerOperState = _SvcVprnLdapServerOperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 5),
    _SvcVprnLdapServerOperState_Type()
)
svcVprnLdapServerOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapServerOperState.setStatus("current")


class _SvcVprnLdapServerInetAddressType_Type(InetAddressType):
    """Custom type svcVprnLdapServerInetAddressType based on InetAddressType"""
    defaultValue = 0


_SvcVprnLdapServerInetAddressType_Type.__name__ = "InetAddressType"
_SvcVprnLdapServerInetAddressType_Object = MibTableColumn
svcVprnLdapServerInetAddressType = _SvcVprnLdapServerInetAddressType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 6),
    _SvcVprnLdapServerInetAddressType_Type()
)
svcVprnLdapServerInetAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerInetAddressType.setStatus("current")


class _SvcVprnLdapServInetAddr_Type(InetAddress):
    """Custom type svcVprnLdapServInetAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVprnLdapServInetAddr_Type.__name__ = "InetAddress"
_SvcVprnLdapServInetAddr_Object = MibTableColumn
svcVprnLdapServInetAddr = _SvcVprnLdapServInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 7),
    _SvcVprnLdapServInetAddr_Type()
)
svcVprnLdapServInetAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServInetAddr.setStatus("current")


class _SvcVprnLdapServerPort_Type(TTcpUdpPort):
    """Custom type svcVprnLdapServerPort based on TTcpUdpPort"""
    defaultValue = 389

    subtypeSpec = TTcpUdpPort.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SvcVprnLdapServerPort_Type.__name__ = "TTcpUdpPort"
_SvcVprnLdapServerPort_Object = MibTableColumn
svcVprnLdapServerPort = _SvcVprnLdapServerPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 8),
    _SvcVprnLdapServerPort_Type()
)
svcVprnLdapServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerPort.setStatus("current")


class _SvcVprnLdapServBindAuthRtDn_Type(TmnxLongDisplayString):
    """Custom type svcVprnLdapServBindAuthRtDn based on TmnxLongDisplayString"""
    defaultHexValue = ""

    subtypeSpec = TmnxLongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SvcVprnLdapServBindAuthRtDn_Type.__name__ = "TmnxLongDisplayString"
_SvcVprnLdapServBindAuthRtDn_Object = MibTableColumn
svcVprnLdapServBindAuthRtDn = _SvcVprnLdapServBindAuthRtDn_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 9),
    _SvcVprnLdapServBindAuthRtDn_Type()
)
svcVprnLdapServBindAuthRtDn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServBindAuthRtDn.setStatus("current")


class _SvcVprnLdapServBindAuthPwd_Type(DisplayString):
    """Custom type svcVprnLdapServBindAuthPwd based on DisplayString"""
    defaultHexValue = ""

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SvcVprnLdapServBindAuthPwd_Type.__name__ = "DisplayString"
_SvcVprnLdapServBindAuthPwd_Object = MibTableColumn
svcVprnLdapServBindAuthPwd = _SvcVprnLdapServBindAuthPwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 10),
    _SvcVprnLdapServBindAuthPwd_Type()
)
svcVprnLdapServBindAuthPwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServBindAuthPwd.setStatus("current")


class _SvcVprnLdapServerName_Type(TNamedItemOrEmpty):
    """Custom type svcVprnLdapServerName based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcVprnLdapServerName_Type.__name__ = "TNamedItemOrEmpty"
_SvcVprnLdapServerName_Object = MibTableColumn
svcVprnLdapServerName = _SvcVprnLdapServerName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 11),
    _SvcVprnLdapServerName_Type()
)
svcVprnLdapServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerName.setStatus("current")


class _SvcVprnLdapServerSearch_Type(TmnxLongDisplayString):
    """Custom type svcVprnLdapServerSearch based on TmnxLongDisplayString"""
    defaultHexValue = ""

    subtypeSpec = TmnxLongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SvcVprnLdapServerSearch_Type.__name__ = "TmnxLongDisplayString"
_SvcVprnLdapServerSearch_Object = MibTableColumn
svcVprnLdapServerSearch = _SvcVprnLdapServerSearch_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 12),
    _SvcVprnLdapServerSearch_Type()
)
svcVprnLdapServerSearch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerSearch.setStatus("current")


class _SvcVprnLdapServerTlsProf_Type(TNamedItemOrEmpty):
    """Custom type svcVprnLdapServerTlsProf based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcVprnLdapServerTlsProf_Type.__name__ = "TNamedItemOrEmpty"
_SvcVprnLdapServerTlsProf_Object = MibTableColumn
svcVprnLdapServerTlsProf = _SvcVprnLdapServerTlsProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 5, 1, 13),
    _SvcVprnLdapServerTlsProf_Type()
)
svcVprnLdapServerTlsProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnLdapServerTlsProf.setStatus("current")
_SvcVprnRadiusTable_Object = MibTable
svcVprnRadiusTable = _SvcVprnRadiusTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6)
)
if mibBuilder.loadTexts:
    svcVprnRadiusTable.setStatus("current")
_SvcVprnRadiusEntry_Object = MibTableRow
svcVprnRadiusEntry = _SvcVprnRadiusEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1)
)
svcVprnRadiusEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnRadiusEntry.setStatus("current")


class _SvcVprnRadiusAdminStatus_Type(TmnxAdminState):
    """Custom type svcVprnRadiusAdminStatus based on TmnxAdminState"""
    defaultValue = 2


_SvcVprnRadiusAdminStatus_Type.__name__ = "TmnxAdminState"
_SvcVprnRadiusAdminStatus_Object = MibTableColumn
svcVprnRadiusAdminStatus = _SvcVprnRadiusAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 1),
    _SvcVprnRadiusAdminStatus_Type()
)
svcVprnRadiusAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusAdminStatus.setStatus("current")
_SvcVprnRadiusRowStatus_Type = RowStatus
_SvcVprnRadiusRowStatus_Object = MibTableColumn
svcVprnRadiusRowStatus = _SvcVprnRadiusRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 2),
    _SvcVprnRadiusRowStatus_Type()
)
svcVprnRadiusRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusRowStatus.setStatus("current")


class _SvcVprnRadiusAccounting_Type(TruthValue):
    """Custom type svcVprnRadiusAccounting based on TruthValue"""
    defaultValue = 2


_SvcVprnRadiusAccounting_Type.__name__ = "TruthValue"
_SvcVprnRadiusAccounting_Object = MibTableColumn
svcVprnRadiusAccounting = _SvcVprnRadiusAccounting_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 3),
    _SvcVprnRadiusAccounting_Type()
)
svcVprnRadiusAccounting.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusAccounting.setStatus("current")


class _SvcVprnRadiusAuthorization_Type(TruthValue):
    """Custom type svcVprnRadiusAuthorization based on TruthValue"""
    defaultValue = 2


_SvcVprnRadiusAuthorization_Type.__name__ = "TruthValue"
_SvcVprnRadiusAuthorization_Object = MibTableColumn
svcVprnRadiusAuthorization = _SvcVprnRadiusAuthorization_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 4),
    _SvcVprnRadiusAuthorization_Type()
)
svcVprnRadiusAuthorization.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusAuthorization.setStatus("current")


class _SvcVprnRadiusRetryAttempts_Type(Unsigned32):
    """Custom type svcVprnRadiusRetryAttempts based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SvcVprnRadiusRetryAttempts_Type.__name__ = "Unsigned32"
_SvcVprnRadiusRetryAttempts_Object = MibTableColumn
svcVprnRadiusRetryAttempts = _SvcVprnRadiusRetryAttempts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 5),
    _SvcVprnRadiusRetryAttempts_Type()
)
svcVprnRadiusRetryAttempts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusRetryAttempts.setStatus("current")


class _SvcVprnRadiusTimeout_Type(Unsigned32):
    """Custom type svcVprnRadiusTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 90),
    )


_SvcVprnRadiusTimeout_Type.__name__ = "Unsigned32"
_SvcVprnRadiusTimeout_Object = MibTableColumn
svcVprnRadiusTimeout = _SvcVprnRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 6),
    _SvcVprnRadiusTimeout_Type()
)
svcVprnRadiusTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusTimeout.setStatus("current")
if mibBuilder.loadTexts:
    svcVprnRadiusTimeout.setUnits("Seconds")


class _SvcVprnRadiusPort_Type(Unsigned32):
    """Custom type svcVprnRadiusPort based on Unsigned32"""
    defaultValue = 1812

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SvcVprnRadiusPort_Type.__name__ = "Unsigned32"
_SvcVprnRadiusPort_Object = MibTableColumn
svcVprnRadiusPort = _SvcVprnRadiusPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 7),
    _SvcVprnRadiusPort_Type()
)
svcVprnRadiusPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusPort.setStatus("current")


class _SvcVprnRadiusAccountingPort_Type(Unsigned32):
    """Custom type svcVprnRadiusAccountingPort based on Unsigned32"""
    defaultValue = 1813

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SvcVprnRadiusAccountingPort_Type.__name__ = "Unsigned32"
_SvcVprnRadiusAccountingPort_Object = MibTableColumn
svcVprnRadiusAccountingPort = _SvcVprnRadiusAccountingPort_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 8),
    _SvcVprnRadiusAccountingPort_Type()
)
svcVprnRadiusAccountingPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusAccountingPort.setStatus("current")


class _SvcVprnRadiusUseTemplate_Type(TruthValue):
    """Custom type svcVprnRadiusUseTemplate based on TruthValue"""
    defaultValue = 2


_SvcVprnRadiusUseTemplate_Type.__name__ = "TruthValue"
_SvcVprnRadiusUseTemplate_Object = MibTableColumn
svcVprnRadiusUseTemplate = _SvcVprnRadiusUseTemplate_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 9),
    _SvcVprnRadiusUseTemplate_Type()
)
svcVprnRadiusUseTemplate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusUseTemplate.setStatus("current")


class _SvcVprnRadiusAuthAlgorithm_Type(TmnxSecRadiusServAlgorithm):
    """Custom type svcVprnRadiusAuthAlgorithm based on TmnxSecRadiusServAlgorithm"""
    defaultValue = 1


_SvcVprnRadiusAuthAlgorithm_Type.__name__ = "TmnxSecRadiusServAlgorithm"
_SvcVprnRadiusAuthAlgorithm_Object = MibTableColumn
svcVprnRadiusAuthAlgorithm = _SvcVprnRadiusAuthAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 10),
    _SvcVprnRadiusAuthAlgorithm_Type()
)
svcVprnRadiusAuthAlgorithm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusAuthAlgorithm.setStatus("current")


class _SvcVprnRadiusInteractiveAuthen_Type(TruthValue):
    """Custom type svcVprnRadiusInteractiveAuthen based on TruthValue"""
    defaultValue = 2


_SvcVprnRadiusInteractiveAuthen_Type.__name__ = "TruthValue"
_SvcVprnRadiusInteractiveAuthen_Object = MibTableColumn
svcVprnRadiusInteractiveAuthen = _SvcVprnRadiusInteractiveAuthen_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 11),
    _SvcVprnRadiusInteractiveAuthen_Type()
)
svcVprnRadiusInteractiveAuthen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusInteractiveAuthen.setStatus("current")
_SvcVprnRadiusLastChanged_Type = TimeStamp
_SvcVprnRadiusLastChanged_Object = MibTableColumn
svcVprnRadiusLastChanged = _SvcVprnRadiusLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 6, 1, 12),
    _SvcVprnRadiusLastChanged_Type()
)
svcVprnRadiusLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusLastChanged.setStatus("current")
_SvcVprnRadiusServerTable_Object = MibTable
svcVprnRadiusServerTable = _SvcVprnRadiusServerTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7)
)
if mibBuilder.loadTexts:
    svcVprnRadiusServerTable.setStatus("current")
_SvcVprnRadiusServerEntry_Object = MibTableRow
svcVprnRadiusServerEntry = _SvcVprnRadiusServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1)
)
svcVprnRadiusServerEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcVprnRadiusServerIndex"),
)
if mibBuilder.loadTexts:
    svcVprnRadiusServerEntry.setStatus("current")


class _SvcVprnRadiusServerIndex_Type(Unsigned32):
    """Custom type svcVprnRadiusServerIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_SvcVprnRadiusServerIndex_Type.__name__ = "Unsigned32"
_SvcVprnRadiusServerIndex_Object = MibTableColumn
svcVprnRadiusServerIndex = _SvcVprnRadiusServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 1),
    _SvcVprnRadiusServerIndex_Type()
)
svcVprnRadiusServerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcVprnRadiusServerIndex.setStatus("current")


class _SvcVprnRadiusServerSecret_Type(OctetString):
    """Custom type svcVprnRadiusServerSecret based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SvcVprnRadiusServerSecret_Type.__name__ = "OctetString"
_SvcVprnRadiusServerSecret_Object = MibTableColumn
svcVprnRadiusServerSecret = _SvcVprnRadiusServerSecret_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 2),
    _SvcVprnRadiusServerSecret_Type()
)
svcVprnRadiusServerSecret.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusServerSecret.setStatus("current")
_SvcVprnRadiusServerOperStatus_Type = TmnxOperState
_SvcVprnRadiusServerOperStatus_Object = MibTableColumn
svcVprnRadiusServerOperStatus = _SvcVprnRadiusServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 3),
    _SvcVprnRadiusServerOperStatus_Type()
)
svcVprnRadiusServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusServerOperStatus.setStatus("current")
_SvcVprnRadiusServerRowStatus_Type = RowStatus
_SvcVprnRadiusServerRowStatus_Object = MibTableColumn
svcVprnRadiusServerRowStatus = _SvcVprnRadiusServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 4),
    _SvcVprnRadiusServerRowStatus_Type()
)
svcVprnRadiusServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusServerRowStatus.setStatus("current")
_SvcVprnRadiusServerInetAddrType_Type = InetAddressType
_SvcVprnRadiusServerInetAddrType_Object = MibTableColumn
svcVprnRadiusServerInetAddrType = _SvcVprnRadiusServerInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 5),
    _SvcVprnRadiusServerInetAddrType_Type()
)
svcVprnRadiusServerInetAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusServerInetAddrType.setStatus("current")


class _SvcVprnRadiusServerInetAddress_Type(InetAddress):
    """Custom type svcVprnRadiusServerInetAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcVprnRadiusServerInetAddress_Type.__name__ = "InetAddress"
_SvcVprnRadiusServerInetAddress_Object = MibTableColumn
svcVprnRadiusServerInetAddress = _SvcVprnRadiusServerInetAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 6),
    _SvcVprnRadiusServerInetAddress_Type()
)
svcVprnRadiusServerInetAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusServerInetAddress.setStatus("current")
_SvcVprnRadiusServerLastChanged_Type = TimeStamp
_SvcVprnRadiusServerLastChanged_Object = MibTableColumn
svcVprnRadiusServerLastChanged = _SvcVprnRadiusServerLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 7),
    _SvcVprnRadiusServerLastChanged_Type()
)
svcVprnRadiusServerLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusServerLastChanged.setStatus("current")


class _SvcVprnRadiusServerTLSClientProf_Type(TNamedItemOrEmpty):
    """Custom type svcVprnRadiusServerTLSClientProf based on TNamedItemOrEmpty"""
    defaultHexValue = ""


_SvcVprnRadiusServerTLSClientProf_Type.__name__ = "TNamedItemOrEmpty"
_SvcVprnRadiusServerTLSClientProf_Object = MibTableColumn
svcVprnRadiusServerTLSClientProf = _SvcVprnRadiusServerTLSClientProf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 8),
    _SvcVprnRadiusServerTLSClientProf_Type()
)
svcVprnRadiusServerTLSClientProf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnRadiusServerTLSClientProf.setStatus("current")
_SvcVprnRadiusServerSecretErr_Type = SecretError
_SvcVprnRadiusServerSecretErr_Object = MibTableColumn
svcVprnRadiusServerSecretErr = _SvcVprnRadiusServerSecretErr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 9),
    _SvcVprnRadiusServerSecretErr_Type()
)
svcVprnRadiusServerSecretErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusServerSecretErr.setStatus("current")
_SvcVprnRadiusServerTLSClntPrfErr_Type = TlsClientProfileError
_SvcVprnRadiusServerTLSClntPrfErr_Object = MibTableColumn
svcVprnRadiusServerTLSClntPrfErr = _SvcVprnRadiusServerTLSClntPrfErr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 251, 7, 1, 10),
    _SvcVprnRadiusServerTLSClntPrfErr_Type()
)
svcVprnRadiusServerTLSClntPrfErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusServerTLSClntPrfErr.setStatus("current")
_SvcSysVpnGreSrcIpObjs_ObjectIdentity = ObjectIdentity
svcSysVpnGreSrcIpObjs = _SvcSysVpnGreSrcIpObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 252)
)


class _SvcSysVpnGreSrcIpAddrType_Type(InetAddressType):
    """Custom type svcSysVpnGreSrcIpAddrType based on InetAddressType"""
    defaultValue = 0


_SvcSysVpnGreSrcIpAddrType_Type.__name__ = "InetAddressType"
_SvcSysVpnGreSrcIpAddrType_Object = MibScalar
svcSysVpnGreSrcIpAddrType = _SvcSysVpnGreSrcIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 252, 1),
    _SvcSysVpnGreSrcIpAddrType_Type()
)
svcSysVpnGreSrcIpAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcSysVpnGreSrcIpAddrType.setStatus("current")


class _SvcSysVpnGreSrcIpAddr_Type(InetAddress):
    """Custom type svcSysVpnGreSrcIpAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcSysVpnGreSrcIpAddr_Type.__name__ = "InetAddress"
_SvcSysVpnGreSrcIpAddr_Object = MibScalar
svcSysVpnGreSrcIpAddr = _SvcSysVpnGreSrcIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 252, 2),
    _SvcSysVpnGreSrcIpAddr_Type()
)
svcSysVpnGreSrcIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcSysVpnGreSrcIpAddr.setStatus("current")
_SvcVprnMgmtObjs_ObjectIdentity = ObjectIdentity
svcVprnMgmtObjs = _SvcVprnMgmtObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253)
)
_SvcVprnServerCtlTable_Object = MibTable
svcVprnServerCtlTable = _SvcVprnServerCtlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1)
)
if mibBuilder.loadTexts:
    svcVprnServerCtlTable.setStatus("current")
_SvcVprnServerCtlEntry_Object = MibTableRow
svcVprnServerCtlEntry = _SvcVprnServerCtlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1)
)
svcVprnServerCtlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcVprnServerCtlEntry.setStatus("current")


class _SvcVprnEnableServers_Type(Bits):
    """Custom type svcVprnEnableServers based on Bits"""
    namedValues = NamedValues(
        *(("ssh", 0),
          ("telnet", 1),
          ("ftp", 2),
          ("telnet6", 3),
          ("netconf", 4),
          ("grpc", 5))
    )

_SvcVprnEnableServers_Type.__name__ = "Bits"
_SvcVprnEnableServers_Object = MibTableColumn
svcVprnEnableServers = _SvcVprnEnableServers_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 1),
    _SvcVprnEnableServers_Type()
)
svcVprnEnableServers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnEnableServers.setStatus("current")
_SvcVprnTelnetServerOperStatus_Type = TmnxOperState
_SvcVprnTelnetServerOperStatus_Object = MibTableColumn
svcVprnTelnetServerOperStatus = _SvcVprnTelnetServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 2),
    _SvcVprnTelnetServerOperStatus_Type()
)
svcVprnTelnetServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTelnetServerOperStatus.setStatus("obsolete")
_SvcVprnSSHServerOperStatus_Type = TmnxOperState
_SvcVprnSSHServerOperStatus_Object = MibTableColumn
svcVprnSSHServerOperStatus = _SvcVprnSSHServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 3),
    _SvcVprnSSHServerOperStatus_Type()
)
svcVprnSSHServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnSSHServerOperStatus.setStatus("obsolete")
_SvcVprnFTPServerOperStatus_Type = TmnxOperState
_SvcVprnFTPServerOperStatus_Object = MibTableColumn
svcVprnFTPServerOperStatus = _SvcVprnFTPServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 4),
    _SvcVprnFTPServerOperStatus_Type()
)
svcVprnFTPServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnFTPServerOperStatus.setStatus("obsolete")
_SvcVprnTelnet6ServerOperStatus_Type = TmnxOperState
_SvcVprnTelnet6ServerOperStatus_Object = MibTableColumn
svcVprnTelnet6ServerOperStatus = _SvcVprnTelnet6ServerOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 5),
    _SvcVprnTelnet6ServerOperStatus_Type()
)
svcVprnTelnet6ServerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTelnet6ServerOperStatus.setStatus("obsolete")
_SvcVprnServerCtlRowStatus_Type = RowStatus
_SvcVprnServerCtlRowStatus_Object = MibTableColumn
svcVprnServerCtlRowStatus = _SvcVprnServerCtlRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 7),
    _SvcVprnServerCtlRowStatus_Type()
)
svcVprnServerCtlRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcVprnServerCtlRowStatus.setStatus("current")
_SvcVprnServerCtlLastChanged_Type = TimeStamp
_SvcVprnServerCtlLastChanged_Object = MibTableColumn
svcVprnServerCtlLastChanged = _SvcVprnServerCtlLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 253, 1, 1, 8),
    _SvcVprnServerCtlLastChanged_Type()
)
svcVprnServerCtlLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnServerCtlLastChanged.setStatus("current")
_SvcEvpnMplsTEPEgrLblTnlTable_Object = MibTable
svcEvpnMplsTEPEgrLblTnlTable = _SvcEvpnMplsTEPEgrLblTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlTable.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlEntry_Object = MibTableRow
svcEvpnMplsTEPEgrLblTnlEntry = _SvcEvpnMplsTEPEgrLblTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1)
)
svcEvpnMplsTEPEgrLblTnlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPTnlId"),
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlEntry.setStatus("current")
_SvcEvpnMplsTEPEgrLblTEPTnlId_Type = Integer32
_SvcEvpnMplsTEPEgrLblTEPTnlId_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTEPTnlId = _SvcEvpnMplsTEPEgrLblTEPTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 1),
    _SvcEvpnMplsTEPEgrLblTEPTnlId_Type()
)
svcEvpnMplsTEPEgrLblTEPTnlId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTEPTnlId.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlLastCh_Type = TimeStamp
_SvcEvpnMplsTEPEgrLblTnlLastCh_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTnlLastCh = _SvcEvpnMplsTEPEgrLblTnlLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 2),
    _SvcEvpnMplsTEPEgrLblTnlLastCh_Type()
)
svcEvpnMplsTEPEgrLblTnlLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlLastCh.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlNumMACs_Type = Unsigned32
_SvcEvpnMplsTEPEgrLblTnlNumMACs_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTnlNumMACs = _SvcEvpnMplsTEPEgrLblTnlNumMACs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 3),
    _SvcEvpnMplsTEPEgrLblTnlNumMACs_Type()
)
svcEvpnMplsTEPEgrLblTnlNumMACs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlNumMACs.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlInMcList_Type = TruthValue
_SvcEvpnMplsTEPEgrLblTnlInMcList_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTnlInMcList = _SvcEvpnMplsTEPEgrLblTnlInMcList_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 4),
    _SvcEvpnMplsTEPEgrLblTnlInMcList_Type()
)
svcEvpnMplsTEPEgrLblTnlInMcList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlInMcList.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlResType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnMplsTEPEgrLblTnlResType_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTnlResType = _SvcEvpnMplsTEPEgrLblTnlResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 5),
    _SvcEvpnMplsTEPEgrLblTnlResType_Type()
)
svcEvpnMplsTEPEgrLblTnlResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlResType.setStatus("obsolete")
_SvcEvpnMplsTEPEgrLblTnlSbdMcast_Type = TruthValue
_SvcEvpnMplsTEPEgrLblTnlSbdMcast_Object = MibTableColumn
svcEvpnMplsTEPEgrLblTnlSbdMcast = _SvcEvpnMplsTEPEgrLblTnlSbdMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 6),
    _SvcEvpnMplsTEPEgrLblTnlSbdMcast_Type()
)
svcEvpnMplsTEPEgrLblTnlSbdMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblTnlSbdMcast.setStatus("obsolete")


class _SvcEvpnMplsTEPEgrLblMcast_Type(Integer32):
    """Custom type svcEvpnMplsTEPEgrLblMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("u", 1),
          ("bm", 2),
          ("bum", 3),
          ("m", 4))
    )


_SvcEvpnMplsTEPEgrLblMcast_Type.__name__ = "Integer32"
_SvcEvpnMplsTEPEgrLblMcast_Object = MibTableColumn
svcEvpnMplsTEPEgrLblMcast = _SvcEvpnMplsTEPEgrLblMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 254, 1, 7),
    _SvcEvpnMplsTEPEgrLblMcast_Type()
)
svcEvpnMplsTEPEgrLblMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrLblMcast.setStatus("obsolete")
_SvcRoutedVplsEvpnGWTable_Object = MibTable
svcRoutedVplsEvpnGWTable = _SvcRoutedVplsEvpnGWTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255)
)
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWTable.setStatus("current")
_SvcRoutedVplsEvpnGWEntry_Object = MibTableRow
svcRoutedVplsEvpnGWEntry = _SvcRoutedVplsEvpnGWEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1)
)
svcRoutedVplsEvpnGWEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWEntry.setStatus("current")
_SvcRoutedVplsEvpnGWRowStatus_Type = RowStatus
_SvcRoutedVplsEvpnGWRowStatus_Object = MibTableColumn
svcRoutedVplsEvpnGWRowStatus = _SvcRoutedVplsEvpnGWRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 1),
    _SvcRoutedVplsEvpnGWRowStatus_Type()
)
svcRoutedVplsEvpnGWRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWRowStatus.setStatus("current")
_SvcRoutedVplsEvpnGWLastChgd_Type = TimeStamp
_SvcRoutedVplsEvpnGWLastChgd_Object = MibTableColumn
svcRoutedVplsEvpnGWLastChgd = _SvcRoutedVplsEvpnGWLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 2),
    _SvcRoutedVplsEvpnGWLastChgd_Type()
)
svcRoutedVplsEvpnGWLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWLastChgd.setStatus("current")


class _SvcRoutedVplsEvpnGWAdminState_Type(TmnxAdminState):
    """Custom type svcRoutedVplsEvpnGWAdminState based on TmnxAdminState"""
    defaultValue = 3


_SvcRoutedVplsEvpnGWAdminState_Type.__name__ = "TmnxAdminState"
_SvcRoutedVplsEvpnGWAdminState_Object = MibTableColumn
svcRoutedVplsEvpnGWAdminState = _SvcRoutedVplsEvpnGWAdminState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 3),
    _SvcRoutedVplsEvpnGWAdminState_Type()
)
svcRoutedVplsEvpnGWAdminState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWAdminState.setStatus("current")


class _SvcRoutedVplsEvpnGWType_Type(Integer32):
    """Custom type svcRoutedVplsEvpnGWType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mvpn-pim", 0),
          ("mvpn-only", 1),
          ("pim-only", 2))
    )


_SvcRoutedVplsEvpnGWType_Type.__name__ = "Integer32"
_SvcRoutedVplsEvpnGWType_Object = MibTableColumn
svcRoutedVplsEvpnGWType = _SvcRoutedVplsEvpnGWType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 4),
    _SvcRoutedVplsEvpnGWType_Type()
)
svcRoutedVplsEvpnGWType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWType.setStatus("current")


class _SvcRoutedVplsEvpnGWDrActTimer_Type(Unsigned32):
    """Custom type svcRoutedVplsEvpnGWDrActTimer based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcRoutedVplsEvpnGWDrActTimer_Type.__name__ = "Unsigned32"
_SvcRoutedVplsEvpnGWDrActTimer_Object = MibTableColumn
svcRoutedVplsEvpnGWDrActTimer = _SvcRoutedVplsEvpnGWDrActTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 5),
    _SvcRoutedVplsEvpnGWDrActTimer_Type()
)
svcRoutedVplsEvpnGWDrActTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrActTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrActTimer.setUnits("seconds")


class _SvcRoutedVplsEvpnGWNonDrAtrtTraf_Type(Integer32):
    """Custom type svcRoutedVplsEvpnGWNonDrAtrtTraf based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("from-evpn", 1),
          ("from-pim-mvpn", 2),
          ("from-evpn-pim-mvpn", 3))
    )


_SvcRoutedVplsEvpnGWNonDrAtrtTraf_Type.__name__ = "Integer32"
_SvcRoutedVplsEvpnGWNonDrAtrtTraf_Object = MibTableColumn
svcRoutedVplsEvpnGWNonDrAtrtTraf = _SvcRoutedVplsEvpnGWNonDrAtrtTraf_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 6),
    _SvcRoutedVplsEvpnGWNonDrAtrtTraf_Type()
)
svcRoutedVplsEvpnGWNonDrAtrtTraf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWNonDrAtrtTraf.setStatus("current")
_SvcRoutedVplsEvpnGWDrState_Type = TruthValue
_SvcRoutedVplsEvpnGWDrState_Object = MibTableColumn
svcRoutedVplsEvpnGWDrState = _SvcRoutedVplsEvpnGWDrState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 7),
    _SvcRoutedVplsEvpnGWDrState_Type()
)
svcRoutedVplsEvpnGWDrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrState.setStatus("current")
_SvcRoutedVplsEvpnGWDrLstChg_Type = TimeStamp
_SvcRoutedVplsEvpnGWDrLstChg_Object = MibTableColumn
svcRoutedVplsEvpnGWDrLstChg = _SvcRoutedVplsEvpnGWDrLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 8),
    _SvcRoutedVplsEvpnGWDrLstChg_Type()
)
svcRoutedVplsEvpnGWDrLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrLstChg.setStatus("current")


class _SvcRoutedVplsEvpnGWDrActTimeRem_Type(Unsigned32):
    """Custom type svcRoutedVplsEvpnGWDrActTimeRem based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcRoutedVplsEvpnGWDrActTimeRem_Type.__name__ = "Unsigned32"
_SvcRoutedVplsEvpnGWDrActTimeRem_Object = MibTableColumn
svcRoutedVplsEvpnGWDrActTimeRem = _SvcRoutedVplsEvpnGWDrActTimeRem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 255, 1, 9),
    _SvcRoutedVplsEvpnGWDrActTimeRem_Type()
)
svcRoutedVplsEvpnGWDrActTimeRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrActTimeRem.setStatus("current")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrActTimeRem.setUnits("seconds")
_SvcRvplsEvpnArpAdvrtTable_Object = MibTable
svcRvplsEvpnArpAdvrtTable = _SvcRvplsEvpnArpAdvrtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256)
)
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtTable.setStatus("current")
_SvcRvplsEvpnArpAdvrtEntry_Object = MibTableRow
svcRvplsEvpnArpAdvrtEntry = _SvcRvplsEvpnArpAdvrtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256, 1)
)
svcRvplsEvpnArpAdvrtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
    (0, "TIMETRA-SERV-MIB", "svcRvplsEvpnArpAdvrtType"),
)
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtEntry.setStatus("current")


class _SvcRvplsEvpnArpAdvrtType_Type(Integer32):
    """Custom type svcRvplsEvpnArpAdvrtType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_SvcRvplsEvpnArpAdvrtType_Type.__name__ = "Integer32"
_SvcRvplsEvpnArpAdvrtType_Object = MibTableColumn
svcRvplsEvpnArpAdvrtType = _SvcRvplsEvpnArpAdvrtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256, 1, 1),
    _SvcRvplsEvpnArpAdvrtType_Type()
)
svcRvplsEvpnArpAdvrtType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtType.setStatus("current")
_SvcRvplsEvpnArpAdvrtRowStatus_Type = RowStatus
_SvcRvplsEvpnArpAdvrtRowStatus_Object = MibTableColumn
svcRvplsEvpnArpAdvrtRowStatus = _SvcRvplsEvpnArpAdvrtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256, 1, 2),
    _SvcRvplsEvpnArpAdvrtRowStatus_Type()
)
svcRvplsEvpnArpAdvrtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtRowStatus.setStatus("current")
_SvcRvplsEvpnArpAdvrtLastChgd_Type = TimeStamp
_SvcRvplsEvpnArpAdvrtLastChgd_Object = MibTableColumn
svcRvplsEvpnArpAdvrtLastChgd = _SvcRvplsEvpnArpAdvrtLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256, 1, 3),
    _SvcRvplsEvpnArpAdvrtLastChgd_Type()
)
svcRvplsEvpnArpAdvrtLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtLastChgd.setStatus("current")


class _SvcRvplsEvpnArpAdvrtRouteTag_Type(Unsigned32):
    """Custom type svcRvplsEvpnArpAdvrtRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_SvcRvplsEvpnArpAdvrtRouteTag_Type.__name__ = "Unsigned32"
_SvcRvplsEvpnArpAdvrtRouteTag_Object = MibTableColumn
svcRvplsEvpnArpAdvrtRouteTag = _SvcRvplsEvpnArpAdvrtRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 256, 1, 4),
    _SvcRvplsEvpnArpAdvrtRouteTag_Type()
)
svcRvplsEvpnArpAdvrtRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtRouteTag.setStatus("current")
_SvcRvplsEvpnNdAdvrtTable_Object = MibTable
svcRvplsEvpnNdAdvrtTable = _SvcRvplsEvpnNdAdvrtTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257)
)
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtTable.setStatus("current")
_SvcRvplsEvpnNdAdvrtEntry_Object = MibTableRow
svcRvplsEvpnNdAdvrtEntry = _SvcRvplsEvpnNdAdvrtEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257, 1)
)
svcRvplsEvpnNdAdvrtEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
    (0, "TIMETRA-SERV-MIB", "svcRvplsEvpnNdAdvrtType"),
)
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtEntry.setStatus("current")


class _SvcRvplsEvpnNdAdvrtType_Type(Integer32):
    """Custom type svcRvplsEvpnNdAdvrtType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2))
    )


_SvcRvplsEvpnNdAdvrtType_Type.__name__ = "Integer32"
_SvcRvplsEvpnNdAdvrtType_Object = MibTableColumn
svcRvplsEvpnNdAdvrtType = _SvcRvplsEvpnNdAdvrtType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257, 1, 1),
    _SvcRvplsEvpnNdAdvrtType_Type()
)
svcRvplsEvpnNdAdvrtType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtType.setStatus("current")
_SvcRvplsEvpnNdAdvrtRowStatus_Type = RowStatus
_SvcRvplsEvpnNdAdvrtRowStatus_Object = MibTableColumn
svcRvplsEvpnNdAdvrtRowStatus = _SvcRvplsEvpnNdAdvrtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257, 1, 2),
    _SvcRvplsEvpnNdAdvrtRowStatus_Type()
)
svcRvplsEvpnNdAdvrtRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtRowStatus.setStatus("current")
_SvcRvplsEvpnNdAdvrtLastChgd_Type = TimeStamp
_SvcRvplsEvpnNdAdvrtLastChgd_Object = MibTableColumn
svcRvplsEvpnNdAdvrtLastChgd = _SvcRvplsEvpnNdAdvrtLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257, 1, 3),
    _SvcRvplsEvpnNdAdvrtLastChgd_Type()
)
svcRvplsEvpnNdAdvrtLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtLastChgd.setStatus("current")


class _SvcRvplsEvpnNdAdvrtRouteTag_Type(Unsigned32):
    """Custom type svcRvplsEvpnNdAdvrtRouteTag based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 255),
    )


_SvcRvplsEvpnNdAdvrtRouteTag_Type.__name__ = "Unsigned32"
_SvcRvplsEvpnNdAdvrtRouteTag_Object = MibTableColumn
svcRvplsEvpnNdAdvrtRouteTag = _SvcRvplsEvpnNdAdvrtRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 257, 1, 4),
    _SvcRvplsEvpnNdAdvrtRouteTag_Type()
)
svcRvplsEvpnNdAdvrtRouteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtRouteTag.setStatus("current")
_IesIfRvplsEvpnTable_Object = MibTable
iesIfRvplsEvpnTable = _IesIfRvplsEvpnTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258)
)
if mibBuilder.loadTexts:
    iesIfRvplsEvpnTable.setStatus("current")
_IesIfRvplsEvpnEntry_Object = MibTableRow
iesIfRvplsEvpnEntry = _IesIfRvplsEvpnEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258, 1)
)
iesIfRvplsEvpnEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    iesIfRvplsEvpnEntry.setStatus("current")
_IesIfRvplsEvpnLastChgd_Type = TimeStamp
_IesIfRvplsEvpnLastChgd_Object = MibTableColumn
iesIfRvplsEvpnLastChgd = _IesIfRvplsEvpnLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258, 1, 1),
    _IesIfRvplsEvpnLastChgd_Type()
)
iesIfRvplsEvpnLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfRvplsEvpnLastChgd.setStatus("current")


class _IesIfRvplsEvpnArpLearnDynamic_Type(TruthValue):
    """Custom type iesIfRvplsEvpnArpLearnDynamic based on TruthValue"""
    defaultValue = 1


_IesIfRvplsEvpnArpLearnDynamic_Type.__name__ = "TruthValue"
_IesIfRvplsEvpnArpLearnDynamic_Object = MibTableColumn
iesIfRvplsEvpnArpLearnDynamic = _IesIfRvplsEvpnArpLearnDynamic_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258, 1, 2),
    _IesIfRvplsEvpnArpLearnDynamic_Type()
)
iesIfRvplsEvpnArpLearnDynamic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfRvplsEvpnArpLearnDynamic.setStatus("current")


class _IesIfRvplsEvpnNdLearnDynamic_Type(TruthValue):
    """Custom type iesIfRvplsEvpnNdLearnDynamic based on TruthValue"""
    defaultValue = 1


_IesIfRvplsEvpnNdLearnDynamic_Type.__name__ = "TruthValue"
_IesIfRvplsEvpnNdLearnDynamic_Object = MibTableColumn
iesIfRvplsEvpnNdLearnDynamic = _IesIfRvplsEvpnNdLearnDynamic_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258, 1, 3),
    _IesIfRvplsEvpnNdLearnDynamic_Type()
)
iesIfRvplsEvpnNdLearnDynamic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfRvplsEvpnNdLearnDynamic.setStatus("current")


class _IesIfRvplsEvpnFldGarpAndUnknReq_Type(TruthValue):
    """Custom type iesIfRvplsEvpnFldGarpAndUnknReq based on TruthValue"""
    defaultValue = 1


_IesIfRvplsEvpnFldGarpAndUnknReq_Type.__name__ = "TruthValue"
_IesIfRvplsEvpnFldGarpAndUnknReq_Object = MibTableColumn
iesIfRvplsEvpnFldGarpAndUnknReq = _IesIfRvplsEvpnFldGarpAndUnknReq_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 258, 1, 4),
    _IesIfRvplsEvpnFldGarpAndUnknReq_Type()
)
iesIfRvplsEvpnFldGarpAndUnknReq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iesIfRvplsEvpnFldGarpAndUnknReq.setStatus("current")
_SvcMacListTable_Object = MibTable
svcMacListTable = _SvcMacListTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259)
)
if mibBuilder.loadTexts:
    svcMacListTable.setStatus("current")
_SvcMacListEntry_Object = MibTableRow
svcMacListEntry = _SvcMacListEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259, 1)
)
svcMacListEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMacListName"),
)
if mibBuilder.loadTexts:
    svcMacListEntry.setStatus("current")
_SvcMacListName_Type = TNamedItemOrEmpty
_SvcMacListName_Object = MibTableColumn
svcMacListName = _SvcMacListName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259, 1, 1),
    _SvcMacListName_Type()
)
svcMacListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMacListName.setStatus("current")
_SvcMacListRowStatus_Type = RowStatus
_SvcMacListRowStatus_Object = MibTableColumn
svcMacListRowStatus = _SvcMacListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259, 1, 2),
    _SvcMacListRowStatus_Type()
)
svcMacListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacListRowStatus.setStatus("current")
_SvcMacListLastChanged_Type = TimeStamp
_SvcMacListLastChanged_Object = MibTableColumn
svcMacListLastChanged = _SvcMacListLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259, 1, 3),
    _SvcMacListLastChanged_Type()
)
svcMacListLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacListLastChanged.setStatus("current")
_SvcMacListDescr_Type = TItemDescription
_SvcMacListDescr_Object = MibTableColumn
svcMacListDescr = _SvcMacListDescr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 259, 1, 4),
    _SvcMacListDescr_Type()
)
svcMacListDescr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacListDescr.setStatus("current")
_SvcMacListEntryTable_Object = MibTable
svcMacListEntryTable = _SvcMacListEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260)
)
if mibBuilder.loadTexts:
    svcMacListEntryTable.setStatus("current")
_SvcMacListEntryEntry_Object = MibTableRow
svcMacListEntryEntry = _SvcMacListEntryEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260, 1)
)
svcMacListEntryEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcMacListName"),
    (0, "TIMETRA-SERV-MIB", "svcMacListEntryAddr"),
)
if mibBuilder.loadTexts:
    svcMacListEntryEntry.setStatus("current")
_SvcMacListEntryAddr_Type = MacAddress
_SvcMacListEntryAddr_Object = MibTableColumn
svcMacListEntryAddr = _SvcMacListEntryAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260, 1, 1),
    _SvcMacListEntryAddr_Type()
)
svcMacListEntryAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcMacListEntryAddr.setStatus("current")
_SvcMacListEntryRowStatus_Type = RowStatus
_SvcMacListEntryRowStatus_Object = MibTableColumn
svcMacListEntryRowStatus = _SvcMacListEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260, 1, 2),
    _SvcMacListEntryRowStatus_Type()
)
svcMacListEntryRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacListEntryRowStatus.setStatus("current")
_SvcMacListEntryLastChanged_Type = TimeStamp
_SvcMacListEntryLastChanged_Object = MibTableColumn
svcMacListEntryLastChanged = _SvcMacListEntryLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260, 1, 3),
    _SvcMacListEntryLastChanged_Type()
)
svcMacListEntryLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacListEntryLastChanged.setStatus("current")


class _SvcMacListEntryMask_Type(MacAddress):
    """Custom type svcMacListEntryMask based on MacAddress"""
    defaultHexValue = "FFFFFFFFFFFF"


_SvcMacListEntryMask_Type.__name__ = "MacAddress"
_SvcMacListEntryMask_Object = MibTableColumn
svcMacListEntryMask = _SvcMacListEntryMask_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 260, 1, 4),
    _SvcMacListEntryMask_Type()
)
svcMacListEntryMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcMacListEntryMask.setStatus("current")
_SvcEvpnVpwsLocalAcTable_Object = MibTable
svcEvpnVpwsLocalAcTable = _SvcEvpnVpwsLocalAcTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261)
)
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcTable.setStatus("current")
_SvcEvpnVpwsLocalAcEntry_Object = MibTableRow
svcEvpnVpwsLocalAcEntry = _SvcEvpnVpwsLocalAcEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1)
)
svcEvpnVpwsLocalAcEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcName"),
)
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcEntry.setStatus("current")
_SvcEvpnVpwsLocalAcName_Type = TNamedItem
_SvcEvpnVpwsLocalAcName_Object = MibTableColumn
svcEvpnVpwsLocalAcName = _SvcEvpnVpwsLocalAcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 1),
    _SvcEvpnVpwsLocalAcName_Type()
)
svcEvpnVpwsLocalAcName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcName.setStatus("current")
_SvcEvpnVpwsLocalAcRowStatus_Type = RowStatus
_SvcEvpnVpwsLocalAcRowStatus_Object = MibTableColumn
svcEvpnVpwsLocalAcRowStatus = _SvcEvpnVpwsLocalAcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 2),
    _SvcEvpnVpwsLocalAcRowStatus_Type()
)
svcEvpnVpwsLocalAcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcRowStatus.setStatus("current")
_SvcEvpnVpwsLocalAcLastChanged_Type = TimeStamp
_SvcEvpnVpwsLocalAcLastChanged_Object = MibTableColumn
svcEvpnVpwsLocalAcLastChanged = _SvcEvpnVpwsLocalAcLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 3),
    _SvcEvpnVpwsLocalAcLastChanged_Type()
)
svcEvpnVpwsLocalAcLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcLastChanged.setStatus("current")


class _SvcEvpnVpwsLocalAcEthTag_Type(TmnxBgpEvpnAcEthTag):
    """Custom type svcEvpnVpwsLocalAcEthTag based on TmnxBgpEvpnAcEthTag"""
    defaultValue = 0


_SvcEvpnVpwsLocalAcEthTag_Type.__name__ = "TmnxBgpEvpnAcEthTag"
_SvcEvpnVpwsLocalAcEthTag_Object = MibTableColumn
svcEvpnVpwsLocalAcEthTag = _SvcEvpnVpwsLocalAcEthTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 4),
    _SvcEvpnVpwsLocalAcEthTag_Type()
)
svcEvpnVpwsLocalAcEthTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcEthTag.setStatus("current")


class _SvcEvpnVpwsLocalAcEndpoint_Type(TNamedItemOrEmpty):
    """Custom type svcEvpnVpwsLocalAcEndpoint based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcEvpnVpwsLocalAcEndpoint_Type.__name__ = "TNamedItemOrEmpty"
_SvcEvpnVpwsLocalAcEndpoint_Object = MibTableColumn
svcEvpnVpwsLocalAcEndpoint = _SvcEvpnVpwsLocalAcEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 5),
    _SvcEvpnVpwsLocalAcEndpoint_Type()
)
svcEvpnVpwsLocalAcEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcEndpoint.setStatus("current")
_SvcEvpnVpwsLocalAcIngressLabel_Type = Integer32
_SvcEvpnVpwsLocalAcIngressLabel_Object = MibTableColumn
svcEvpnVpwsLocalAcIngressLabel = _SvcEvpnVpwsLocalAcIngressLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 261, 1, 6),
    _SvcEvpnVpwsLocalAcIngressLabel_Type()
)
svcEvpnVpwsLocalAcIngressLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcIngressLabel.setStatus("current")
_SvcEvpnVpwsRemoteAcTable_Object = MibTable
svcEvpnVpwsRemoteAcTable = _SvcEvpnVpwsRemoteAcTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262)
)
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcTable.setStatus("current")
_SvcEvpnVpwsRemoteAcEntry_Object = MibTableRow
svcEvpnVpwsRemoteAcEntry = _SvcEvpnVpwsRemoteAcEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1)
)
svcEvpnVpwsRemoteAcEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcName"),
)
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcEntry.setStatus("current")
_SvcEvpnVpwsRemoteAcName_Type = TNamedItem
_SvcEvpnVpwsRemoteAcName_Object = MibTableColumn
svcEvpnVpwsRemoteAcName = _SvcEvpnVpwsRemoteAcName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1, 1),
    _SvcEvpnVpwsRemoteAcName_Type()
)
svcEvpnVpwsRemoteAcName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcName.setStatus("current")
_SvcEvpnVpwsRemoteAcRowStatus_Type = RowStatus
_SvcEvpnVpwsRemoteAcRowStatus_Object = MibTableColumn
svcEvpnVpwsRemoteAcRowStatus = _SvcEvpnVpwsRemoteAcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1, 2),
    _SvcEvpnVpwsRemoteAcRowStatus_Type()
)
svcEvpnVpwsRemoteAcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcRowStatus.setStatus("current")
_SvcEvpnVpwsRemoteAcLastChanged_Type = TimeStamp
_SvcEvpnVpwsRemoteAcLastChanged_Object = MibTableColumn
svcEvpnVpwsRemoteAcLastChanged = _SvcEvpnVpwsRemoteAcLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1, 3),
    _SvcEvpnVpwsRemoteAcLastChanged_Type()
)
svcEvpnVpwsRemoteAcLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcLastChanged.setStatus("current")


class _SvcEvpnVpwsRemoteAcEthTag_Type(TmnxBgpEvpnAcEthTag):
    """Custom type svcEvpnVpwsRemoteAcEthTag based on TmnxBgpEvpnAcEthTag"""
    defaultValue = 0


_SvcEvpnVpwsRemoteAcEthTag_Type.__name__ = "TmnxBgpEvpnAcEthTag"
_SvcEvpnVpwsRemoteAcEthTag_Object = MibTableColumn
svcEvpnVpwsRemoteAcEthTag = _SvcEvpnVpwsRemoteAcEthTag_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1, 4),
    _SvcEvpnVpwsRemoteAcEthTag_Type()
)
svcEvpnVpwsRemoteAcEthTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcEthTag.setStatus("current")


class _SvcEvpnVpwsRemoteAcEndpoint_Type(TNamedItemOrEmpty):
    """Custom type svcEvpnVpwsRemoteAcEndpoint based on TNamedItemOrEmpty"""
    defaultValue = OctetString("")


_SvcEvpnVpwsRemoteAcEndpoint_Type.__name__ = "TNamedItemOrEmpty"
_SvcEvpnVpwsRemoteAcEndpoint_Object = MibTableColumn
svcEvpnVpwsRemoteAcEndpoint = _SvcEvpnVpwsRemoteAcEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 262, 1, 5),
    _SvcEvpnVpwsRemoteAcEndpoint_Type()
)
svcEvpnVpwsRemoteAcEndpoint.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcEndpoint.setStatus("current")
_SvcDhcpLeaseExTable_Object = MibTable
svcDhcpLeaseExTable = _SvcDhcpLeaseExTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseExTable.setStatus("current")
_SvcDhcpLeaseExEntry_Object = MibTableRow
svcDhcpLeaseExEntry = _SvcDhcpLeaseExEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseExEntry.setStatus("current")
_SvcDhcpLeaseSpiHLimit_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLimit_Object = MibTableColumn
svcDhcpLeaseSpiHLimit = _SvcDhcpLeaseSpiHLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 1),
    _SvcDhcpLeaseSpiHLimit_Type()
)
svcDhcpLeaseSpiHLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLimit.setStatus("current")
_SvcDhcpLeaseSpiHLim4_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim4_Object = MibTableColumn
svcDhcpLeaseSpiHLim4 = _SvcDhcpLeaseSpiHLim4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 2),
    _SvcDhcpLeaseSpiHLim4_Type()
)
svcDhcpLeaseSpiHLim4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim4.setStatus("current")
_SvcDhcpLeaseSpiHLim4Ppp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim4Ppp_Object = MibTableColumn
svcDhcpLeaseSpiHLim4Ppp = _SvcDhcpLeaseSpiHLim4Ppp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 3),
    _SvcDhcpLeaseSpiHLim4Ppp_Type()
)
svcDhcpLeaseSpiHLim4Ppp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim4Ppp.setStatus("current")
_SvcDhcpLeaseSpiHLim4Dhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim4Dhcp_Object = MibTableColumn
svcDhcpLeaseSpiHLim4Dhcp = _SvcDhcpLeaseSpiHLim4Dhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 4),
    _SvcDhcpLeaseSpiHLim4Dhcp_Type()
)
svcDhcpLeaseSpiHLim4Dhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim4Dhcp.setStatus("current")
_SvcDhcpLeaseSpiHLim4Arp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim4Arp_Object = MibTableColumn
svcDhcpLeaseSpiHLim4Arp = _SvcDhcpLeaseSpiHLim4Arp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 5),
    _SvcDhcpLeaseSpiHLim4Arp_Type()
)
svcDhcpLeaseSpiHLim4Arp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim4Arp.setStatus("current")
_SvcDhcpLeaseSpiHLim6_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6_Object = MibTableColumn
svcDhcpLeaseSpiHLim6 = _SvcDhcpLeaseSpiHLim6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 6),
    _SvcDhcpLeaseSpiHLim6_Type()
)
svcDhcpLeaseSpiHLim6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6.setStatus("current")
_SvcDhcpLeaseSpiHLim6Wan_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6Wan_Object = MibTableColumn
svcDhcpLeaseSpiHLim6Wan = _SvcDhcpLeaseSpiHLim6Wan_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 7),
    _SvcDhcpLeaseSpiHLim6Wan_Type()
)
svcDhcpLeaseSpiHLim6Wan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6Wan.setStatus("current")
_SvcDhcpLeaseSpiHLim6WanPppSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6WanPppSlaac_Object = MibTableColumn
svcDhcpLeaseSpiHLim6WanPppSlaac = _SvcDhcpLeaseSpiHLim6WanPppSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 8),
    _SvcDhcpLeaseSpiHLim6WanPppSlaac_Type()
)
svcDhcpLeaseSpiHLim6WanPppSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6WanPppSlaac.setStatus("current")
_SvcDhcpLeaseSpiHLim6WanPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6WanPppDhcp_Object = MibTableColumn
svcDhcpLeaseSpiHLim6WanPppDhcp = _SvcDhcpLeaseSpiHLim6WanPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 9),
    _SvcDhcpLeaseSpiHLim6WanPppDhcp_Type()
)
svcDhcpLeaseSpiHLim6WanPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6WanPppDhcp.setStatus("current")
_SvcDhcpLeaseSpiHLim6WanIpoeSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6WanIpoeSlaac_Object = MibTableColumn
svcDhcpLeaseSpiHLim6WanIpoeSlaac = _SvcDhcpLeaseSpiHLim6WanIpoeSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 10),
    _SvcDhcpLeaseSpiHLim6WanIpoeSlaac_Type()
)
svcDhcpLeaseSpiHLim6WanIpoeSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6WanIpoeSlaac.setStatus("current")
_SvcDhcpLeaseSpiHLim6WanIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6WanIpoeDhcp_Object = MibTableColumn
svcDhcpLeaseSpiHLim6WanIpoeDhcp = _SvcDhcpLeaseSpiHLim6WanIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 11),
    _SvcDhcpLeaseSpiHLim6WanIpoeDhcp_Type()
)
svcDhcpLeaseSpiHLim6WanIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6WanIpoeDhcp.setStatus("current")
_SvcDhcpLeaseSpiHLim6Pd_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6Pd_Object = MibTableColumn
svcDhcpLeaseSpiHLim6Pd = _SvcDhcpLeaseSpiHLim6Pd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 12),
    _SvcDhcpLeaseSpiHLim6Pd_Type()
)
svcDhcpLeaseSpiHLim6Pd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6Pd.setStatus("current")
_SvcDhcpLeaseSpiHLim6PdPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6PdPppDhcp_Object = MibTableColumn
svcDhcpLeaseSpiHLim6PdPppDhcp = _SvcDhcpLeaseSpiHLim6PdPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 13),
    _SvcDhcpLeaseSpiHLim6PdPppDhcp_Type()
)
svcDhcpLeaseSpiHLim6PdPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6PdPppDhcp.setStatus("current")
_SvcDhcpLeaseSpiHLim6PdIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLim6PdIpoeDhcp_Object = MibTableColumn
svcDhcpLeaseSpiHLim6PdIpoeDhcp = _SvcDhcpLeaseSpiHLim6PdIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 14),
    _SvcDhcpLeaseSpiHLim6PdIpoeDhcp_Type()
)
svcDhcpLeaseSpiHLim6PdIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLim6PdIpoeDhcp.setStatus("current")
_SvcDhcpLeaseSpiHLimLac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiHLimLac_Object = MibTableColumn
svcDhcpLeaseSpiHLimLac = _SvcDhcpLeaseSpiHLimLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 15),
    _SvcDhcpLeaseSpiHLimLac_Type()
)
svcDhcpLeaseSpiHLimLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiHLimLac.setStatus("current")
_SvcDhcpLeaseSpiSLimIpoe_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimIpoe_Object = MibTableColumn
svcDhcpLeaseSpiSLimIpoe = _SvcDhcpLeaseSpiSLimIpoe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 16),
    _SvcDhcpLeaseSpiSLimIpoe_Type()
)
svcDhcpLeaseSpiSLimIpoe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimIpoe.setStatus("current")
_SvcDhcpLeaseSpiSLimPppoeLcl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimPppoeLcl_Object = MibTableColumn
svcDhcpLeaseSpiSLimPppoeLcl = _SvcDhcpLeaseSpiSLimPppoeLcl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 17),
    _SvcDhcpLeaseSpiSLimPppoeLcl_Type()
)
svcDhcpLeaseSpiSLimPppoeLcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimPppoeLcl.setStatus("current")
_SvcDhcpLeaseSpiSLimPppoeLac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimPppoeLac_Object = MibTableColumn
svcDhcpLeaseSpiSLimPppoeLac = _SvcDhcpLeaseSpiSLimPppoeLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 18),
    _SvcDhcpLeaseSpiSLimPppoeLac_Type()
)
svcDhcpLeaseSpiSLimPppoeLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimPppoeLac.setStatus("current")
_SvcDhcpLeaseSpiSLimPppoeOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimPppoeOvrl_Object = MibTableColumn
svcDhcpLeaseSpiSLimPppoeOvrl = _SvcDhcpLeaseSpiSLimPppoeOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 19),
    _SvcDhcpLeaseSpiSLimPppoeOvrl_Type()
)
svcDhcpLeaseSpiSLimPppoeOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimPppoeOvrl.setStatus("current")
_SvcDhcpLeaseSpiSLimL2tpLns_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimL2tpLns_Object = MibTableColumn
svcDhcpLeaseSpiSLimL2tpLns = _SvcDhcpLeaseSpiSLimL2tpLns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 20),
    _SvcDhcpLeaseSpiSLimL2tpLns_Type()
)
svcDhcpLeaseSpiSLimL2tpLns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimL2tpLns.setStatus("current")
_SvcDhcpLeaseSpiSLimL2tpLts_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimL2tpLts_Object = MibTableColumn
svcDhcpLeaseSpiSLimL2tpLts = _SvcDhcpLeaseSpiSLimL2tpLts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 21),
    _SvcDhcpLeaseSpiSLimL2tpLts_Type()
)
svcDhcpLeaseSpiSLimL2tpLts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimL2tpLts.setStatus("current")
_SvcDhcpLeaseSpiSLimL2tpOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimL2tpOvrl_Object = MibTableColumn
svcDhcpLeaseSpiSLimL2tpOvrl = _SvcDhcpLeaseSpiSLimL2tpOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 22),
    _SvcDhcpLeaseSpiSLimL2tpOvrl_Type()
)
svcDhcpLeaseSpiSLimL2tpOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimL2tpOvrl.setStatus("current")
_SvcDhcpLeaseSpiSLimOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSpiSLimOvrl_Object = MibTableColumn
svcDhcpLeaseSpiSLimOvrl = _SvcDhcpLeaseSpiSLimOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 23),
    _SvcDhcpLeaseSpiSLimOvrl_Type()
)
svcDhcpLeaseSpiSLimOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSpiSLimOvrl.setStatus("current")
_SvcDhcpLeaseSubHLimit_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLimit_Object = MibTableColumn
svcDhcpLeaseSubHLimit = _SvcDhcpLeaseSubHLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 24),
    _SvcDhcpLeaseSubHLimit_Type()
)
svcDhcpLeaseSubHLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLimit.setStatus("current")
_SvcDhcpLeaseSubHLim4_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim4_Object = MibTableColumn
svcDhcpLeaseSubHLim4 = _SvcDhcpLeaseSubHLim4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 25),
    _SvcDhcpLeaseSubHLim4_Type()
)
svcDhcpLeaseSubHLim4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim4.setStatus("current")
_SvcDhcpLeaseSubHLim4Ppp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim4Ppp_Object = MibTableColumn
svcDhcpLeaseSubHLim4Ppp = _SvcDhcpLeaseSubHLim4Ppp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 26),
    _SvcDhcpLeaseSubHLim4Ppp_Type()
)
svcDhcpLeaseSubHLim4Ppp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim4Ppp.setStatus("current")
_SvcDhcpLeaseSubHLim4Dhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim4Dhcp_Object = MibTableColumn
svcDhcpLeaseSubHLim4Dhcp = _SvcDhcpLeaseSubHLim4Dhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 27),
    _SvcDhcpLeaseSubHLim4Dhcp_Type()
)
svcDhcpLeaseSubHLim4Dhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim4Dhcp.setStatus("current")
_SvcDhcpLeaseSubHLim4Arp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim4Arp_Object = MibTableColumn
svcDhcpLeaseSubHLim4Arp = _SvcDhcpLeaseSubHLim4Arp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 28),
    _SvcDhcpLeaseSubHLim4Arp_Type()
)
svcDhcpLeaseSubHLim4Arp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim4Arp.setStatus("current")
_SvcDhcpLeaseSubHLim6_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6_Object = MibTableColumn
svcDhcpLeaseSubHLim6 = _SvcDhcpLeaseSubHLim6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 29),
    _SvcDhcpLeaseSubHLim6_Type()
)
svcDhcpLeaseSubHLim6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6.setStatus("current")
_SvcDhcpLeaseSubHLim6Wan_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6Wan_Object = MibTableColumn
svcDhcpLeaseSubHLim6Wan = _SvcDhcpLeaseSubHLim6Wan_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 30),
    _SvcDhcpLeaseSubHLim6Wan_Type()
)
svcDhcpLeaseSubHLim6Wan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6Wan.setStatus("current")
_SvcDhcpLeaseSubHLim6WanPppSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6WanPppSlaac_Object = MibTableColumn
svcDhcpLeaseSubHLim6WanPppSlaac = _SvcDhcpLeaseSubHLim6WanPppSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 31),
    _SvcDhcpLeaseSubHLim6WanPppSlaac_Type()
)
svcDhcpLeaseSubHLim6WanPppSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6WanPppSlaac.setStatus("current")
_SvcDhcpLeaseSubHLim6WanPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6WanPppDhcp_Object = MibTableColumn
svcDhcpLeaseSubHLim6WanPppDhcp = _SvcDhcpLeaseSubHLim6WanPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 32),
    _SvcDhcpLeaseSubHLim6WanPppDhcp_Type()
)
svcDhcpLeaseSubHLim6WanPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6WanPppDhcp.setStatus("current")
_SvcDhcpLeaseSubHLim6WanIpoeSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6WanIpoeSlaac_Object = MibTableColumn
svcDhcpLeaseSubHLim6WanIpoeSlaac = _SvcDhcpLeaseSubHLim6WanIpoeSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 33),
    _SvcDhcpLeaseSubHLim6WanIpoeSlaac_Type()
)
svcDhcpLeaseSubHLim6WanIpoeSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6WanIpoeSlaac.setStatus("current")
_SvcDhcpLeaseSubHLim6WanIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6WanIpoeDhcp_Object = MibTableColumn
svcDhcpLeaseSubHLim6WanIpoeDhcp = _SvcDhcpLeaseSubHLim6WanIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 34),
    _SvcDhcpLeaseSubHLim6WanIpoeDhcp_Type()
)
svcDhcpLeaseSubHLim6WanIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6WanIpoeDhcp.setStatus("current")
_SvcDhcpLeaseSubHLim6Pd_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6Pd_Object = MibTableColumn
svcDhcpLeaseSubHLim6Pd = _SvcDhcpLeaseSubHLim6Pd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 35),
    _SvcDhcpLeaseSubHLim6Pd_Type()
)
svcDhcpLeaseSubHLim6Pd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6Pd.setStatus("current")
_SvcDhcpLeaseSubHLim6PdPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6PdPppDhcp_Object = MibTableColumn
svcDhcpLeaseSubHLim6PdPppDhcp = _SvcDhcpLeaseSubHLim6PdPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 36),
    _SvcDhcpLeaseSubHLim6PdPppDhcp_Type()
)
svcDhcpLeaseSubHLim6PdPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6PdPppDhcp.setStatus("current")
_SvcDhcpLeaseSubHLim6PdIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLim6PdIpoeDhcp_Object = MibTableColumn
svcDhcpLeaseSubHLim6PdIpoeDhcp = _SvcDhcpLeaseSubHLim6PdIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 37),
    _SvcDhcpLeaseSubHLim6PdIpoeDhcp_Type()
)
svcDhcpLeaseSubHLim6PdIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLim6PdIpoeDhcp.setStatus("current")
_SvcDhcpLeaseSubHLimLac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubHLimLac_Object = MibTableColumn
svcDhcpLeaseSubHLimLac = _SvcDhcpLeaseSubHLimLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 38),
    _SvcDhcpLeaseSubHLimLac_Type()
)
svcDhcpLeaseSubHLimLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubHLimLac.setStatus("current")
_SvcDhcpLeaseSubSLimIpoe_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimIpoe_Object = MibTableColumn
svcDhcpLeaseSubSLimIpoe = _SvcDhcpLeaseSubSLimIpoe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 39),
    _SvcDhcpLeaseSubSLimIpoe_Type()
)
svcDhcpLeaseSubSLimIpoe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimIpoe.setStatus("current")
_SvcDhcpLeaseSubSLimPppoeLcl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimPppoeLcl_Object = MibTableColumn
svcDhcpLeaseSubSLimPppoeLcl = _SvcDhcpLeaseSubSLimPppoeLcl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 40),
    _SvcDhcpLeaseSubSLimPppoeLcl_Type()
)
svcDhcpLeaseSubSLimPppoeLcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimPppoeLcl.setStatus("current")
_SvcDhcpLeaseSubSLimPppoeLac_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimPppoeLac_Object = MibTableColumn
svcDhcpLeaseSubSLimPppoeLac = _SvcDhcpLeaseSubSLimPppoeLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 41),
    _SvcDhcpLeaseSubSLimPppoeLac_Type()
)
svcDhcpLeaseSubSLimPppoeLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimPppoeLac.setStatus("current")
_SvcDhcpLeaseSubSLimPppoeOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimPppoeOvrl_Object = MibTableColumn
svcDhcpLeaseSubSLimPppoeOvrl = _SvcDhcpLeaseSubSLimPppoeOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 42),
    _SvcDhcpLeaseSubSLimPppoeOvrl_Type()
)
svcDhcpLeaseSubSLimPppoeOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimPppoeOvrl.setStatus("current")
_SvcDhcpLeaseSubSLimL2tpLns_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimL2tpLns_Object = MibTableColumn
svcDhcpLeaseSubSLimL2tpLns = _SvcDhcpLeaseSubSLimL2tpLns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 43),
    _SvcDhcpLeaseSubSLimL2tpLns_Type()
)
svcDhcpLeaseSubSLimL2tpLns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimL2tpLns.setStatus("current")
_SvcDhcpLeaseSubSLimL2tpLts_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimL2tpLts_Object = MibTableColumn
svcDhcpLeaseSubSLimL2tpLts = _SvcDhcpLeaseSubSLimL2tpLts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 44),
    _SvcDhcpLeaseSubSLimL2tpLts_Type()
)
svcDhcpLeaseSubSLimL2tpLts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimL2tpLts.setStatus("current")
_SvcDhcpLeaseSubSLimL2tpOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimL2tpOvrl_Object = MibTableColumn
svcDhcpLeaseSubSLimL2tpOvrl = _SvcDhcpLeaseSubSLimL2tpOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 45),
    _SvcDhcpLeaseSubSLimL2tpOvrl_Type()
)
svcDhcpLeaseSubSLimL2tpOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimL2tpOvrl.setStatus("current")
_SvcDhcpLeaseSubSLimOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcDhcpLeaseSubSLimOvrl_Object = MibTableColumn
svcDhcpLeaseSubSLimOvrl = _SvcDhcpLeaseSubSLimOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 263, 1, 46),
    _SvcDhcpLeaseSubSLimOvrl_Type()
)
svcDhcpLeaseSubSLimOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseSubSLimOvrl.setStatus("current")
_SvcArpHostExTable_Object = MibTable
svcArpHostExTable = _SvcArpHostExTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264)
)
if mibBuilder.loadTexts:
    svcArpHostExTable.setStatus("current")
_SvcArpHostExEntry_Object = MibTableRow
svcArpHostExEntry = _SvcArpHostExEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1)
)
if mibBuilder.loadTexts:
    svcArpHostExEntry.setStatus("current")
_SvcArpHostSpiHLimit_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLimit_Object = MibTableColumn
svcArpHostSpiHLimit = _SvcArpHostSpiHLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 1),
    _SvcArpHostSpiHLimit_Type()
)
svcArpHostSpiHLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLimit.setStatus("current")
_SvcArpHostSpiHLim4_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim4_Object = MibTableColumn
svcArpHostSpiHLim4 = _SvcArpHostSpiHLim4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 2),
    _SvcArpHostSpiHLim4_Type()
)
svcArpHostSpiHLim4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim4.setStatus("current")
_SvcArpHostSpiHLim4Ppp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim4Ppp_Object = MibTableColumn
svcArpHostSpiHLim4Ppp = _SvcArpHostSpiHLim4Ppp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 3),
    _SvcArpHostSpiHLim4Ppp_Type()
)
svcArpHostSpiHLim4Ppp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim4Ppp.setStatus("current")
_SvcArpHostSpiHLim4Dhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim4Dhcp_Object = MibTableColumn
svcArpHostSpiHLim4Dhcp = _SvcArpHostSpiHLim4Dhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 4),
    _SvcArpHostSpiHLim4Dhcp_Type()
)
svcArpHostSpiHLim4Dhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim4Dhcp.setStatus("current")
_SvcArpHostSpiHLim4Arp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim4Arp_Object = MibTableColumn
svcArpHostSpiHLim4Arp = _SvcArpHostSpiHLim4Arp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 5),
    _SvcArpHostSpiHLim4Arp_Type()
)
svcArpHostSpiHLim4Arp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim4Arp.setStatus("current")
_SvcArpHostSpiHLim6_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6_Object = MibTableColumn
svcArpHostSpiHLim6 = _SvcArpHostSpiHLim6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 6),
    _SvcArpHostSpiHLim6_Type()
)
svcArpHostSpiHLim6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6.setStatus("current")
_SvcArpHostSpiHLim6Wan_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6Wan_Object = MibTableColumn
svcArpHostSpiHLim6Wan = _SvcArpHostSpiHLim6Wan_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 7),
    _SvcArpHostSpiHLim6Wan_Type()
)
svcArpHostSpiHLim6Wan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6Wan.setStatus("current")
_SvcArpHostSpiHLim6WanPppSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6WanPppSlaac_Object = MibTableColumn
svcArpHostSpiHLim6WanPppSlaac = _SvcArpHostSpiHLim6WanPppSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 8),
    _SvcArpHostSpiHLim6WanPppSlaac_Type()
)
svcArpHostSpiHLim6WanPppSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6WanPppSlaac.setStatus("current")
_SvcArpHostSpiHLim6WanPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6WanPppDhcp_Object = MibTableColumn
svcArpHostSpiHLim6WanPppDhcp = _SvcArpHostSpiHLim6WanPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 9),
    _SvcArpHostSpiHLim6WanPppDhcp_Type()
)
svcArpHostSpiHLim6WanPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6WanPppDhcp.setStatus("current")
_SvcArpHostSpiHLim6WanIpoeSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6WanIpoeSlaac_Object = MibTableColumn
svcArpHostSpiHLim6WanIpoeSlaac = _SvcArpHostSpiHLim6WanIpoeSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 10),
    _SvcArpHostSpiHLim6WanIpoeSlaac_Type()
)
svcArpHostSpiHLim6WanIpoeSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6WanIpoeSlaac.setStatus("current")
_SvcArpHostSpiHLim6WanIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6WanIpoeDhcp_Object = MibTableColumn
svcArpHostSpiHLim6WanIpoeDhcp = _SvcArpHostSpiHLim6WanIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 11),
    _SvcArpHostSpiHLim6WanIpoeDhcp_Type()
)
svcArpHostSpiHLim6WanIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6WanIpoeDhcp.setStatus("current")
_SvcArpHostSpiHLim6Pd_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6Pd_Object = MibTableColumn
svcArpHostSpiHLim6Pd = _SvcArpHostSpiHLim6Pd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 12),
    _SvcArpHostSpiHLim6Pd_Type()
)
svcArpHostSpiHLim6Pd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6Pd.setStatus("current")
_SvcArpHostSpiHLim6PdPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6PdPppDhcp_Object = MibTableColumn
svcArpHostSpiHLim6PdPppDhcp = _SvcArpHostSpiHLim6PdPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 13),
    _SvcArpHostSpiHLim6PdPppDhcp_Type()
)
svcArpHostSpiHLim6PdPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6PdPppDhcp.setStatus("current")
_SvcArpHostSpiHLim6PdIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLim6PdIpoeDhcp_Object = MibTableColumn
svcArpHostSpiHLim6PdIpoeDhcp = _SvcArpHostSpiHLim6PdIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 14),
    _SvcArpHostSpiHLim6PdIpoeDhcp_Type()
)
svcArpHostSpiHLim6PdIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLim6PdIpoeDhcp.setStatus("current")
_SvcArpHostSpiHLimLac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiHLimLac_Object = MibTableColumn
svcArpHostSpiHLimLac = _SvcArpHostSpiHLimLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 15),
    _SvcArpHostSpiHLimLac_Type()
)
svcArpHostSpiHLimLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiHLimLac.setStatus("current")
_SvcArpHostSpiSLimIpoe_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimIpoe_Object = MibTableColumn
svcArpHostSpiSLimIpoe = _SvcArpHostSpiSLimIpoe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 16),
    _SvcArpHostSpiSLimIpoe_Type()
)
svcArpHostSpiSLimIpoe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimIpoe.setStatus("current")
_SvcArpHostSpiSLimPppoeLcl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimPppoeLcl_Object = MibTableColumn
svcArpHostSpiSLimPppoeLcl = _SvcArpHostSpiSLimPppoeLcl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 17),
    _SvcArpHostSpiSLimPppoeLcl_Type()
)
svcArpHostSpiSLimPppoeLcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimPppoeLcl.setStatus("current")
_SvcArpHostSpiSLimPppoeLac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimPppoeLac_Object = MibTableColumn
svcArpHostSpiSLimPppoeLac = _SvcArpHostSpiSLimPppoeLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 18),
    _SvcArpHostSpiSLimPppoeLac_Type()
)
svcArpHostSpiSLimPppoeLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimPppoeLac.setStatus("current")
_SvcArpHostSpiSLimPppoeOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimPppoeOvrl_Object = MibTableColumn
svcArpHostSpiSLimPppoeOvrl = _SvcArpHostSpiSLimPppoeOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 19),
    _SvcArpHostSpiSLimPppoeOvrl_Type()
)
svcArpHostSpiSLimPppoeOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimPppoeOvrl.setStatus("current")
_SvcArpHostSpiSLimL2tpLns_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimL2tpLns_Object = MibTableColumn
svcArpHostSpiSLimL2tpLns = _SvcArpHostSpiSLimL2tpLns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 20),
    _SvcArpHostSpiSLimL2tpLns_Type()
)
svcArpHostSpiSLimL2tpLns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimL2tpLns.setStatus("current")
_SvcArpHostSpiSLimL2tpLts_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimL2tpLts_Object = MibTableColumn
svcArpHostSpiSLimL2tpLts = _SvcArpHostSpiSLimL2tpLts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 21),
    _SvcArpHostSpiSLimL2tpLts_Type()
)
svcArpHostSpiSLimL2tpLts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimL2tpLts.setStatus("current")
_SvcArpHostSpiSLimL2tpOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimL2tpOvrl_Object = MibTableColumn
svcArpHostSpiSLimL2tpOvrl = _SvcArpHostSpiSLimL2tpOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 22),
    _SvcArpHostSpiSLimL2tpOvrl_Type()
)
svcArpHostSpiSLimL2tpOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimL2tpOvrl.setStatus("current")
_SvcArpHostSpiSLimOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSpiSLimOvrl_Object = MibTableColumn
svcArpHostSpiSLimOvrl = _SvcArpHostSpiSLimOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 23),
    _SvcArpHostSpiSLimOvrl_Type()
)
svcArpHostSpiSLimOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSpiSLimOvrl.setStatus("current")
_SvcArpHostSubHLimit_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLimit_Object = MibTableColumn
svcArpHostSubHLimit = _SvcArpHostSubHLimit_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 24),
    _SvcArpHostSubHLimit_Type()
)
svcArpHostSubHLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLimit.setStatus("current")
_SvcArpHostSubHLim4_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim4_Object = MibTableColumn
svcArpHostSubHLim4 = _SvcArpHostSubHLim4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 25),
    _SvcArpHostSubHLim4_Type()
)
svcArpHostSubHLim4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim4.setStatus("current")
_SvcArpHostSubHLim4Ppp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim4Ppp_Object = MibTableColumn
svcArpHostSubHLim4Ppp = _SvcArpHostSubHLim4Ppp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 26),
    _SvcArpHostSubHLim4Ppp_Type()
)
svcArpHostSubHLim4Ppp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim4Ppp.setStatus("current")
_SvcArpHostSubHLim4Dhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim4Dhcp_Object = MibTableColumn
svcArpHostSubHLim4Dhcp = _SvcArpHostSubHLim4Dhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 27),
    _SvcArpHostSubHLim4Dhcp_Type()
)
svcArpHostSubHLim4Dhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim4Dhcp.setStatus("current")
_SvcArpHostSubHLim4Arp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim4Arp_Object = MibTableColumn
svcArpHostSubHLim4Arp = _SvcArpHostSubHLim4Arp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 28),
    _SvcArpHostSubHLim4Arp_Type()
)
svcArpHostSubHLim4Arp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim4Arp.setStatus("current")
_SvcArpHostSubHLim6_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6_Object = MibTableColumn
svcArpHostSubHLim6 = _SvcArpHostSubHLim6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 29),
    _SvcArpHostSubHLim6_Type()
)
svcArpHostSubHLim6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6.setStatus("current")
_SvcArpHostSubHLim6Wan_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6Wan_Object = MibTableColumn
svcArpHostSubHLim6Wan = _SvcArpHostSubHLim6Wan_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 30),
    _SvcArpHostSubHLim6Wan_Type()
)
svcArpHostSubHLim6Wan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6Wan.setStatus("current")
_SvcArpHostSubHLim6WanPppSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6WanPppSlaac_Object = MibTableColumn
svcArpHostSubHLim6WanPppSlaac = _SvcArpHostSubHLim6WanPppSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 31),
    _SvcArpHostSubHLim6WanPppSlaac_Type()
)
svcArpHostSubHLim6WanPppSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6WanPppSlaac.setStatus("current")
_SvcArpHostSubHLim6WanPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6WanPppDhcp_Object = MibTableColumn
svcArpHostSubHLim6WanPppDhcp = _SvcArpHostSubHLim6WanPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 32),
    _SvcArpHostSubHLim6WanPppDhcp_Type()
)
svcArpHostSubHLim6WanPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6WanPppDhcp.setStatus("current")
_SvcArpHostSubHLim6WanIpoeSlaac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6WanIpoeSlaac_Object = MibTableColumn
svcArpHostSubHLim6WanIpoeSlaac = _SvcArpHostSubHLim6WanIpoeSlaac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 33),
    _SvcArpHostSubHLim6WanIpoeSlaac_Type()
)
svcArpHostSubHLim6WanIpoeSlaac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6WanIpoeSlaac.setStatus("current")
_SvcArpHostSubHLim6WanIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6WanIpoeDhcp_Object = MibTableColumn
svcArpHostSubHLim6WanIpoeDhcp = _SvcArpHostSubHLim6WanIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 34),
    _SvcArpHostSubHLim6WanIpoeDhcp_Type()
)
svcArpHostSubHLim6WanIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6WanIpoeDhcp.setStatus("current")
_SvcArpHostSubHLim6Pd_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6Pd_Object = MibTableColumn
svcArpHostSubHLim6Pd = _SvcArpHostSubHLim6Pd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 35),
    _SvcArpHostSubHLim6Pd_Type()
)
svcArpHostSubHLim6Pd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6Pd.setStatus("current")
_SvcArpHostSubHLim6PdPppDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6PdPppDhcp_Object = MibTableColumn
svcArpHostSubHLim6PdPppDhcp = _SvcArpHostSubHLim6PdPppDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 36),
    _SvcArpHostSubHLim6PdPppDhcp_Type()
)
svcArpHostSubHLim6PdPppDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6PdPppDhcp.setStatus("current")
_SvcArpHostSubHLim6PdIpoeDhcp_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLim6PdIpoeDhcp_Object = MibTableColumn
svcArpHostSubHLim6PdIpoeDhcp = _SvcArpHostSubHLim6PdIpoeDhcp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 37),
    _SvcArpHostSubHLim6PdIpoeDhcp_Type()
)
svcArpHostSubHLim6PdIpoeDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLim6PdIpoeDhcp.setStatus("current")
_SvcArpHostSubHLimLac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubHLimLac_Object = MibTableColumn
svcArpHostSubHLimLac = _SvcArpHostSubHLimLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 38),
    _SvcArpHostSubHLimLac_Type()
)
svcArpHostSubHLimLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubHLimLac.setStatus("current")
_SvcArpHostSubSLimIpoe_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimIpoe_Object = MibTableColumn
svcArpHostSubSLimIpoe = _SvcArpHostSubSLimIpoe_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 39),
    _SvcArpHostSubSLimIpoe_Type()
)
svcArpHostSubSLimIpoe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimIpoe.setStatus("current")
_SvcArpHostSubSLimPppoeLcl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimPppoeLcl_Object = MibTableColumn
svcArpHostSubSLimPppoeLcl = _SvcArpHostSubSLimPppoeLcl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 40),
    _SvcArpHostSubSLimPppoeLcl_Type()
)
svcArpHostSubSLimPppoeLcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimPppoeLcl.setStatus("current")
_SvcArpHostSubSLimPppoeLac_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimPppoeLac_Object = MibTableColumn
svcArpHostSubSLimPppoeLac = _SvcArpHostSubSLimPppoeLac_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 41),
    _SvcArpHostSubSLimPppoeLac_Type()
)
svcArpHostSubSLimPppoeLac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimPppoeLac.setStatus("current")
_SvcArpHostSubSLimPppoeOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimPppoeOvrl_Object = MibTableColumn
svcArpHostSubSLimPppoeOvrl = _SvcArpHostSubSLimPppoeOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 42),
    _SvcArpHostSubSLimPppoeOvrl_Type()
)
svcArpHostSubSLimPppoeOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimPppoeOvrl.setStatus("current")
_SvcArpHostSubSLimL2tpLns_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimL2tpLns_Object = MibTableColumn
svcArpHostSubSLimL2tpLns = _SvcArpHostSubSLimL2tpLns_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 43),
    _SvcArpHostSubSLimL2tpLns_Type()
)
svcArpHostSubSLimL2tpLns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimL2tpLns.setStatus("current")
_SvcArpHostSubSLimL2tpLts_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimL2tpLts_Object = MibTableColumn
svcArpHostSubSLimL2tpLts = _SvcArpHostSubSLimL2tpLts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 44),
    _SvcArpHostSubSLimL2tpLts_Type()
)
svcArpHostSubSLimL2tpLts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimL2tpLts.setStatus("current")
_SvcArpHostSubSLimL2tpOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimL2tpOvrl_Object = MibTableColumn
svcArpHostSubSLimL2tpOvrl = _SvcArpHostSubSLimL2tpOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 45),
    _SvcArpHostSubSLimL2tpOvrl_Type()
)
svcArpHostSubSLimL2tpOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimL2tpOvrl.setStatus("current")
_SvcArpHostSubSLimOvrl_Type = TmnxSubHostSessionLimitOverride
_SvcArpHostSubSLimOvrl_Object = MibTableColumn
svcArpHostSubSLimOvrl = _SvcArpHostSubSLimOvrl_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 264, 1, 46),
    _SvcArpHostSubSLimOvrl_Type()
)
svcArpHostSubSLimOvrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcArpHostSubSLimOvrl.setStatus("current")
_SvcSrv6Objs_ObjectIdentity = ObjectIdentity
svcSrv6Objs = _SvcSrv6Objs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265)
)
_SvcSrv6TblLastCh_Type = TimeStamp
_SvcSrv6TblLastCh_Object = MibScalar
svcSrv6TblLastCh = _SvcSrv6TblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 1),
    _SvcSrv6TblLastCh_Type()
)
svcSrv6TblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6TblLastCh.setStatus("current")
_SvcSrv6Table_Object = MibTable
svcSrv6Table = _SvcSrv6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 2)
)
if mibBuilder.loadTexts:
    svcSrv6Table.setStatus("current")
_SvcSrv6Entry_Object = MibTableRow
svcSrv6Entry = _SvcSrv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 2, 1)
)
svcSrv6Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6Instance"),
)
if mibBuilder.loadTexts:
    svcSrv6Entry.setStatus("current")


class _SvcSrv6Instance_Type(Integer32):
    """Custom type svcSrv6Instance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcSrv6Instance_Type.__name__ = "Integer32"
_SvcSrv6Instance_Object = MibTableColumn
svcSrv6Instance = _SvcSrv6Instance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 2, 1, 1),
    _SvcSrv6Instance_Type()
)
svcSrv6Instance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6Instance.setStatus("current")
_SvcSrv6RowStatus_Type = RowStatus
_SvcSrv6RowStatus_Object = MibTableColumn
svcSrv6RowStatus = _SvcSrv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 2, 1, 2),
    _SvcSrv6RowStatus_Type()
)
svcSrv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6RowStatus.setStatus("current")
_SvcSrv6LastChngd_Type = TimeStamp
_SvcSrv6LastChngd_Object = MibTableColumn
svcSrv6LastChngd = _SvcSrv6LastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 2, 1, 3),
    _SvcSrv6LastChngd_Type()
)
svcSrv6LastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LastChngd.setStatus("current")
_SvcSrv6LocatorTblLastCh_Type = TimeStamp
_SvcSrv6LocatorTblLastCh_Object = MibScalar
svcSrv6LocatorTblLastCh = _SvcSrv6LocatorTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 3),
    _SvcSrv6LocatorTblLastCh_Type()
)
svcSrv6LocatorTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocatorTblLastCh.setStatus("current")
_SvcSrv6LocatorTable_Object = MibTable
svcSrv6LocatorTable = _SvcSrv6LocatorTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4)
)
if mibBuilder.loadTexts:
    svcSrv6LocatorTable.setStatus("current")
_SvcSrv6LocatorEntry_Object = MibTableRow
svcSrv6LocatorEntry = _SvcSrv6LocatorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1)
)
svcSrv6LocatorEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6Instance"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6LocatorName"),
)
if mibBuilder.loadTexts:
    svcSrv6LocatorEntry.setStatus("current")
_SvcSrv6LocatorName_Type = TLNamedItem
_SvcSrv6LocatorName_Object = MibTableColumn
svcSrv6LocatorName = _SvcSrv6LocatorName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 1),
    _SvcSrv6LocatorName_Type()
)
svcSrv6LocatorName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcSrv6LocatorName.setStatus("current")
_SvcSrv6LocatorRowStatus_Type = RowStatus
_SvcSrv6LocatorRowStatus_Object = MibTableColumn
svcSrv6LocatorRowStatus = _SvcSrv6LocatorRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 2),
    _SvcSrv6LocatorRowStatus_Type()
)
svcSrv6LocatorRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorRowStatus.setStatus("current")
_SvcSrv6LocatorLastChngd_Type = TimeStamp
_SvcSrv6LocatorLastChngd_Object = MibTableColumn
svcSrv6LocatorLastChngd = _SvcSrv6LocatorLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 3),
    _SvcSrv6LocatorLastChngd_Type()
)
svcSrv6LocatorLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocatorLastChngd.setStatus("current")


class _SvcSrv6LocatorEndDt4_Type(TSrv6FunctionType):
    """Custom type svcSrv6LocatorEndDt4 based on TSrv6FunctionType"""
    defaultValue = 0


_SvcSrv6LocatorEndDt4_Type.__name__ = "TSrv6FunctionType"
_SvcSrv6LocatorEndDt4_Object = MibTableColumn
svcSrv6LocatorEndDt4 = _SvcSrv6LocatorEndDt4_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 4),
    _SvcSrv6LocatorEndDt4_Type()
)
svcSrv6LocatorEndDt4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt4.setStatus("current")


class _SvcSrv6LocatorEndDt4StaticValue_Type(TSrv6FunctionValue):
    """Custom type svcSrv6LocatorEndDt4StaticValue based on TSrv6FunctionValue"""
    defaultValue = 0


_SvcSrv6LocatorEndDt4StaticValue_Type.__name__ = "TSrv6FunctionValue"
_SvcSrv6LocatorEndDt4StaticValue_Object = MibTableColumn
svcSrv6LocatorEndDt4StaticValue = _SvcSrv6LocatorEndDt4StaticValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 5),
    _SvcSrv6LocatorEndDt4StaticValue_Type()
)
svcSrv6LocatorEndDt4StaticValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt4StaticValue.setStatus("current")


class _SvcSrv6LocatorEndDt6_Type(TSrv6FunctionType):
    """Custom type svcSrv6LocatorEndDt6 based on TSrv6FunctionType"""
    defaultValue = 0


_SvcSrv6LocatorEndDt6_Type.__name__ = "TSrv6FunctionType"
_SvcSrv6LocatorEndDt6_Object = MibTableColumn
svcSrv6LocatorEndDt6 = _SvcSrv6LocatorEndDt6_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 6),
    _SvcSrv6LocatorEndDt6_Type()
)
svcSrv6LocatorEndDt6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt6.setStatus("current")


class _SvcSrv6LocatorEndDt6StaticValue_Type(TSrv6FunctionValue):
    """Custom type svcSrv6LocatorEndDt6StaticValue based on TSrv6FunctionValue"""
    defaultValue = 0


_SvcSrv6LocatorEndDt6StaticValue_Type.__name__ = "TSrv6FunctionValue"
_SvcSrv6LocatorEndDt6StaticValue_Object = MibTableColumn
svcSrv6LocatorEndDt6StaticValue = _SvcSrv6LocatorEndDt6StaticValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 7),
    _SvcSrv6LocatorEndDt6StaticValue_Type()
)
svcSrv6LocatorEndDt6StaticValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt6StaticValue.setStatus("current")


class _SvcSrv6LocatorEndDt46_Type(TSrv6FunctionType):
    """Custom type svcSrv6LocatorEndDt46 based on TSrv6FunctionType"""
    defaultValue = 0


_SvcSrv6LocatorEndDt46_Type.__name__ = "TSrv6FunctionType"
_SvcSrv6LocatorEndDt46_Object = MibTableColumn
svcSrv6LocatorEndDt46 = _SvcSrv6LocatorEndDt46_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 8),
    _SvcSrv6LocatorEndDt46_Type()
)
svcSrv6LocatorEndDt46.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt46.setStatus("current")


class _SvcSrv6LocatorEndDt46StaticValue_Type(TSrv6FunctionValue):
    """Custom type svcSrv6LocatorEndDt46StaticValue based on TSrv6FunctionValue"""
    defaultValue = 0


_SvcSrv6LocatorEndDt46StaticValue_Type.__name__ = "TSrv6FunctionValue"
_SvcSrv6LocatorEndDt46StaticValue_Object = MibTableColumn
svcSrv6LocatorEndDt46StaticValue = _SvcSrv6LocatorEndDt46StaticValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 9),
    _SvcSrv6LocatorEndDt46StaticValue_Type()
)
svcSrv6LocatorEndDt46StaticValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcSrv6LocatorEndDt46StaticValue.setStatus("current")
_SvcSrv6LocEndDt4OperValue_Type = TSrv6FunctionValue
_SvcSrv6LocEndDt4OperValue_Object = MibTableColumn
svcSrv6LocEndDt4OperValue = _SvcSrv6LocEndDt4OperValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 10),
    _SvcSrv6LocEndDt4OperValue_Type()
)
svcSrv6LocEndDt4OperValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt4OperValue.setStatus("current")
_SvcSrv6LocEndDt4OperState_Type = TmnxOperState
_SvcSrv6LocEndDt4OperState_Object = MibTableColumn
svcSrv6LocEndDt4OperState = _SvcSrv6LocEndDt4OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 11),
    _SvcSrv6LocEndDt4OperState_Type()
)
svcSrv6LocEndDt4OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt4OperState.setStatus("current")
_SvcSrv6LocEndDt4OperErrorCode_Type = TSrv6FunctionErrorCode
_SvcSrv6LocEndDt4OperErrorCode_Object = MibTableColumn
svcSrv6LocEndDt4OperErrorCode = _SvcSrv6LocEndDt4OperErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 12),
    _SvcSrv6LocEndDt4OperErrorCode_Type()
)
svcSrv6LocEndDt4OperErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt4OperErrorCode.setStatus("current")
_SvcSrv6LocEndDt4OperSidAddrType_Type = InetAddressType
_SvcSrv6LocEndDt4OperSidAddrType_Object = MibTableColumn
svcSrv6LocEndDt4OperSidAddrType = _SvcSrv6LocEndDt4OperSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 13),
    _SvcSrv6LocEndDt4OperSidAddrType_Type()
)
svcSrv6LocEndDt4OperSidAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt4OperSidAddrType.setStatus("current")


class _SvcSrv6LocEndDt4OperSidAddr_Type(InetAddress):
    """Custom type svcSrv6LocEndDt4OperSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6LocEndDt4OperSidAddr_Type.__name__ = "InetAddress"
_SvcSrv6LocEndDt4OperSidAddr_Object = MibTableColumn
svcSrv6LocEndDt4OperSidAddr = _SvcSrv6LocEndDt4OperSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 14),
    _SvcSrv6LocEndDt4OperSidAddr_Type()
)
svcSrv6LocEndDt4OperSidAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt4OperSidAddr.setStatus("current")
_SvcSrv6LocEndDt6OperValue_Type = TSrv6FunctionValue
_SvcSrv6LocEndDt6OperValue_Object = MibTableColumn
svcSrv6LocEndDt6OperValue = _SvcSrv6LocEndDt6OperValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 15),
    _SvcSrv6LocEndDt6OperValue_Type()
)
svcSrv6LocEndDt6OperValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt6OperValue.setStatus("current")
_SvcSrv6LocEndDt6OperState_Type = TmnxOperState
_SvcSrv6LocEndDt6OperState_Object = MibTableColumn
svcSrv6LocEndDt6OperState = _SvcSrv6LocEndDt6OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 16),
    _SvcSrv6LocEndDt6OperState_Type()
)
svcSrv6LocEndDt6OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt6OperState.setStatus("current")
_SvcSrv6LocEndDt6OperErrorCode_Type = TSrv6FunctionErrorCode
_SvcSrv6LocEndDt6OperErrorCode_Object = MibTableColumn
svcSrv6LocEndDt6OperErrorCode = _SvcSrv6LocEndDt6OperErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 17),
    _SvcSrv6LocEndDt6OperErrorCode_Type()
)
svcSrv6LocEndDt6OperErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt6OperErrorCode.setStatus("current")
_SvcSrv6LocEndDt6OperSidAddrType_Type = InetAddressType
_SvcSrv6LocEndDt6OperSidAddrType_Object = MibTableColumn
svcSrv6LocEndDt6OperSidAddrType = _SvcSrv6LocEndDt6OperSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 18),
    _SvcSrv6LocEndDt6OperSidAddrType_Type()
)
svcSrv6LocEndDt6OperSidAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt6OperSidAddrType.setStatus("current")


class _SvcSrv6LocEndDt6OperSidAddr_Type(InetAddress):
    """Custom type svcSrv6LocEndDt6OperSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6LocEndDt6OperSidAddr_Type.__name__ = "InetAddress"
_SvcSrv6LocEndDt6OperSidAddr_Object = MibTableColumn
svcSrv6LocEndDt6OperSidAddr = _SvcSrv6LocEndDt6OperSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 19),
    _SvcSrv6LocEndDt6OperSidAddr_Type()
)
svcSrv6LocEndDt6OperSidAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt6OperSidAddr.setStatus("current")
_SvcSrv6LocEndDt46OperValue_Type = TSrv6FunctionValue
_SvcSrv6LocEndDt46OperValue_Object = MibTableColumn
svcSrv6LocEndDt46OperValue = _SvcSrv6LocEndDt46OperValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 20),
    _SvcSrv6LocEndDt46OperValue_Type()
)
svcSrv6LocEndDt46OperValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt46OperValue.setStatus("current")
_SvcSrv6LocEndDt46OperState_Type = TmnxOperState
_SvcSrv6LocEndDt46OperState_Object = MibTableColumn
svcSrv6LocEndDt46OperState = _SvcSrv6LocEndDt46OperState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 21),
    _SvcSrv6LocEndDt46OperState_Type()
)
svcSrv6LocEndDt46OperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt46OperState.setStatus("current")
_SvcSrv6LocEndDt46OperErrorCode_Type = TSrv6FunctionErrorCode
_SvcSrv6LocEndDt46OperErrorCode_Object = MibTableColumn
svcSrv6LocEndDt46OperErrorCode = _SvcSrv6LocEndDt46OperErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 22),
    _SvcSrv6LocEndDt46OperErrorCode_Type()
)
svcSrv6LocEndDt46OperErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt46OperErrorCode.setStatus("current")
_SvcSrv6LocEndDt46OpSidAddrType_Type = InetAddressType
_SvcSrv6LocEndDt46OpSidAddrType_Object = MibTableColumn
svcSrv6LocEndDt46OpSidAddrType = _SvcSrv6LocEndDt46OpSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 23),
    _SvcSrv6LocEndDt46OpSidAddrType_Type()
)
svcSrv6LocEndDt46OpSidAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt46OpSidAddrType.setStatus("current")


class _SvcSrv6LocEndDt46OpSidAddr_Type(InetAddress):
    """Custom type svcSrv6LocEndDt46OpSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6LocEndDt46OpSidAddr_Type.__name__ = "InetAddress"
_SvcSrv6LocEndDt46OpSidAddr_Object = MibTableColumn
svcSrv6LocEndDt46OpSidAddr = _SvcSrv6LocEndDt46OpSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 4, 1, 24),
    _SvcSrv6LocEndDt46OpSidAddr_Type()
)
svcSrv6LocEndDt46OpSidAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6LocEndDt46OpSidAddr.setStatus("current")
_SvcEvpnSrv6TblLastCh_Type = TimeStamp
_SvcEvpnSrv6TblLastCh_Object = MibScalar
svcEvpnSrv6TblLastCh = _SvcEvpnSrv6TblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 5),
    _SvcEvpnSrv6TblLastCh_Type()
)
svcEvpnSrv6TblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnSrv6TblLastCh.setStatus("current")
_SvcEvpnSrv6Table_Object = MibTable
svcEvpnSrv6Table = _SvcEvpnSrv6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6)
)
if mibBuilder.loadTexts:
    svcEvpnSrv6Table.setStatus("current")
_SvcEvpnSrv6Entry_Object = MibTableRow
svcEvpnSrv6Entry = _SvcEvpnSrv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1)
)
svcEvpnSrv6Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnSrv6BgpInstance"),
)
if mibBuilder.loadTexts:
    svcEvpnSrv6Entry.setStatus("current")


class _SvcEvpnSrv6BgpInstance_Type(Integer32):
    """Custom type svcEvpnSrv6BgpInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SvcEvpnSrv6BgpInstance_Type.__name__ = "Integer32"
_SvcEvpnSrv6BgpInstance_Object = MibTableColumn
svcEvpnSrv6BgpInstance = _SvcEvpnSrv6BgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 1),
    _SvcEvpnSrv6BgpInstance_Type()
)
svcEvpnSrv6BgpInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnSrv6BgpInstance.setStatus("current")
_SvcEvpnSrv6LastChanged_Type = TimeStamp
_SvcEvpnSrv6LastChanged_Object = MibTableColumn
svcEvpnSrv6LastChanged = _SvcEvpnSrv6LastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 2),
    _SvcEvpnSrv6LastChanged_Type()
)
svcEvpnSrv6LastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnSrv6LastChanged.setStatus("current")


class _SvcEvpnSrv6SrcAddrType_Type(InetAddressType):
    """Custom type svcEvpnSrv6SrcAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEvpnSrv6SrcAddrType_Type.__name__ = "InetAddressType"
_SvcEvpnSrv6SrcAddrType_Object = MibTableColumn
svcEvpnSrv6SrcAddrType = _SvcEvpnSrv6SrcAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 3),
    _SvcEvpnSrv6SrcAddrType_Type()
)
svcEvpnSrv6SrcAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6SrcAddrType.setStatus("current")


class _SvcEvpnSrv6SrcAddr_Type(InetAddress):
    """Custom type svcEvpnSrv6SrcAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnSrv6SrcAddr_Type.__name__ = "InetAddress"
_SvcEvpnSrv6SrcAddr_Object = MibTableColumn
svcEvpnSrv6SrcAddr = _SvcEvpnSrv6SrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 4),
    _SvcEvpnSrv6SrcAddr_Type()
)
svcEvpnSrv6SrcAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6SrcAddr.setStatus("current")


class _SvcEvpnSrv6MaxEcmpRoutes_Type(Integer32):
    """Custom type svcEvpnSrv6MaxEcmpRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_SvcEvpnSrv6MaxEcmpRoutes_Type.__name__ = "Integer32"
_SvcEvpnSrv6MaxEcmpRoutes_Object = MibTableColumn
svcEvpnSrv6MaxEcmpRoutes = _SvcEvpnSrv6MaxEcmpRoutes_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 5),
    _SvcEvpnSrv6MaxEcmpRoutes_Type()
)
svcEvpnSrv6MaxEcmpRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6MaxEcmpRoutes.setStatus("current")


class _SvcEvpnSrv6ForceVlanVcFwd_Type(TruthValue):
    """Custom type svcEvpnSrv6ForceVlanVcFwd based on TruthValue"""
    defaultValue = 2


_SvcEvpnSrv6ForceVlanVcFwd_Type.__name__ = "TruthValue"
_SvcEvpnSrv6ForceVlanVcFwd_Object = MibTableColumn
svcEvpnSrv6ForceVlanVcFwd = _SvcEvpnSrv6ForceVlanVcFwd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 6),
    _SvcEvpnSrv6ForceVlanVcFwd_Type()
)
svcEvpnSrv6ForceVlanVcFwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6ForceVlanVcFwd.setStatus("current")


class _SvcEvpnSrv6RtNextHopType_Type(Integer32):
    """Custom type svcEvpnSrv6RtNextHopType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("system-ipv4", 0),
          ("system-ipv6", 1),
          ("explicit", 2))
    )


_SvcEvpnSrv6RtNextHopType_Type.__name__ = "Integer32"
_SvcEvpnSrv6RtNextHopType_Object = MibTableColumn
svcEvpnSrv6RtNextHopType = _SvcEvpnSrv6RtNextHopType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 7),
    _SvcEvpnSrv6RtNextHopType_Type()
)
svcEvpnSrv6RtNextHopType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6RtNextHopType.setStatus("current")


class _SvcEvpnSrv6RtNextHopAddrType_Type(InetAddressType):
    """Custom type svcEvpnSrv6RtNextHopAddrType based on InetAddressType"""
    defaultValue = 0


_SvcEvpnSrv6RtNextHopAddrType_Type.__name__ = "InetAddressType"
_SvcEvpnSrv6RtNextHopAddrType_Object = MibTableColumn
svcEvpnSrv6RtNextHopAddrType = _SvcEvpnSrv6RtNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 8),
    _SvcEvpnSrv6RtNextHopAddrType_Type()
)
svcEvpnSrv6RtNextHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6RtNextHopAddrType.setStatus("current")


class _SvcEvpnSrv6RtNextHopAddr_Type(InetAddress):
    """Custom type svcEvpnSrv6RtNextHopAddr based on InetAddress"""
    defaultHexValue = ""

    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnSrv6RtNextHopAddr_Type.__name__ = "InetAddress"
_SvcEvpnSrv6RtNextHopAddr_Object = MibTableColumn
svcEvpnSrv6RtNextHopAddr = _SvcEvpnSrv6RtNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 9),
    _SvcEvpnSrv6RtNextHopAddr_Type()
)
svcEvpnSrv6RtNextHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6RtNextHopAddr.setStatus("current")


class _SvcEvpnSrv6Evi3ByteAutoRT_Type(TruthValue):
    """Custom type svcEvpnSrv6Evi3ByteAutoRT based on TruthValue"""
    defaultValue = 2


_SvcEvpnSrv6Evi3ByteAutoRT_Type.__name__ = "TruthValue"
_SvcEvpnSrv6Evi3ByteAutoRT_Object = MibTableColumn
svcEvpnSrv6Evi3ByteAutoRT = _SvcEvpnSrv6Evi3ByteAutoRT_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 6, 1, 10),
    _SvcEvpnSrv6Evi3ByteAutoRT_Type()
)
svcEvpnSrv6Evi3ByteAutoRT.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEvpnSrv6Evi3ByteAutoRT.setStatus("current")
_SvcEpipeSrv6TblLastCh_Type = TimeStamp
_SvcEpipeSrv6TblLastCh_Object = MibScalar
svcEpipeSrv6TblLastCh = _SvcEpipeSrv6TblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 7),
    _SvcEpipeSrv6TblLastCh_Type()
)
svcEpipeSrv6TblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6TblLastCh.setStatus("current")
_SvcEpipeSrv6Table_Object = MibTable
svcEpipeSrv6Table = _SvcEpipeSrv6Table_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 8)
)
if mibBuilder.loadTexts:
    svcEpipeSrv6Table.setStatus("current")
_SvcEpipeSrv6Entry_Object = MibTableRow
svcEpipeSrv6Entry = _SvcEpipeSrv6Entry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 8, 1)
)
svcEpipeSrv6Entry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeSrv6Instance"),
)
if mibBuilder.loadTexts:
    svcEpipeSrv6Entry.setStatus("current")


class _SvcEpipeSrv6Instance_Type(Integer32):
    """Custom type svcEpipeSrv6Instance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_SvcEpipeSrv6Instance_Type.__name__ = "Integer32"
_SvcEpipeSrv6Instance_Object = MibTableColumn
svcEpipeSrv6Instance = _SvcEpipeSrv6Instance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 8, 1, 1),
    _SvcEpipeSrv6Instance_Type()
)
svcEpipeSrv6Instance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEpipeSrv6Instance.setStatus("current")
_SvcEpipeSrv6RowStatus_Type = RowStatus
_SvcEpipeSrv6RowStatus_Object = MibTableColumn
svcEpipeSrv6RowStatus = _SvcEpipeSrv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 8, 1, 2),
    _SvcEpipeSrv6RowStatus_Type()
)
svcEpipeSrv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeSrv6RowStatus.setStatus("current")
_SvcEpipeSrv6LastChngd_Type = TimeStamp
_SvcEpipeSrv6LastChngd_Object = MibTableColumn
svcEpipeSrv6LastChngd = _SvcEpipeSrv6LastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 8, 1, 3),
    _SvcEpipeSrv6LastChngd_Type()
)
svcEpipeSrv6LastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LastChngd.setStatus("current")
_SvcEpipeSrv6LocatorTblLastCh_Type = TimeStamp
_SvcEpipeSrv6LocatorTblLastCh_Object = MibScalar
svcEpipeSrv6LocatorTblLastCh = _SvcEpipeSrv6LocatorTblLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 9),
    _SvcEpipeSrv6LocatorTblLastCh_Type()
)
svcEpipeSrv6LocatorTblLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorTblLastCh.setStatus("current")
_SvcEpipeSrv6LocatorTable_Object = MibTable
svcEpipeSrv6LocatorTable = _SvcEpipeSrv6LocatorTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10)
)
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorTable.setStatus("current")
_SvcEpipeSrv6LocatorEntry_Object = MibTableRow
svcEpipeSrv6LocatorEntry = _SvcEpipeSrv6LocatorEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1)
)
svcEpipeSrv6LocatorEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeSrv6Instance"),
    (0, "TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorName"),
)
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorEntry.setStatus("current")
_SvcEpipeSrv6LocatorName_Type = TLNamedItem
_SvcEpipeSrv6LocatorName_Object = MibTableColumn
svcEpipeSrv6LocatorName = _SvcEpipeSrv6LocatorName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 1),
    _SvcEpipeSrv6LocatorName_Type()
)
svcEpipeSrv6LocatorName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorName.setStatus("current")
_SvcEpipeSrv6LocatorRowStatus_Type = RowStatus
_SvcEpipeSrv6LocatorRowStatus_Object = MibTableColumn
svcEpipeSrv6LocatorRowStatus = _SvcEpipeSrv6LocatorRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 2),
    _SvcEpipeSrv6LocatorRowStatus_Type()
)
svcEpipeSrv6LocatorRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorRowStatus.setStatus("current")
_SvcEpipeSrv6LocatorLastChngd_Type = TimeStamp
_SvcEpipeSrv6LocatorLastChngd_Object = MibTableColumn
svcEpipeSrv6LocatorLastChngd = _SvcEpipeSrv6LocatorLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 3),
    _SvcEpipeSrv6LocatorLastChngd_Type()
)
svcEpipeSrv6LocatorLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorLastChngd.setStatus("current")


class _SvcEpipeSrv6LocatorEndDx2_Type(TSrv6FunctionType):
    """Custom type svcEpipeSrv6LocatorEndDx2 based on TSrv6FunctionType"""
    defaultValue = 0


_SvcEpipeSrv6LocatorEndDx2_Type.__name__ = "TSrv6FunctionType"
_SvcEpipeSrv6LocatorEndDx2_Object = MibTableColumn
svcEpipeSrv6LocatorEndDx2 = _SvcEpipeSrv6LocatorEndDx2_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 4),
    _SvcEpipeSrv6LocatorEndDx2_Type()
)
svcEpipeSrv6LocatorEndDx2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorEndDx2.setStatus("current")


class _SvcEpipeSrv6LocatorEndDx2Static_Type(TSrv6FunctionValue):
    """Custom type svcEpipeSrv6LocatorEndDx2Static based on TSrv6FunctionValue"""
    defaultValue = 0


_SvcEpipeSrv6LocatorEndDx2Static_Type.__name__ = "TSrv6FunctionValue"
_SvcEpipeSrv6LocatorEndDx2Static_Object = MibTableColumn
svcEpipeSrv6LocatorEndDx2Static = _SvcEpipeSrv6LocatorEndDx2Static_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 5),
    _SvcEpipeSrv6LocatorEndDx2Static_Type()
)
svcEpipeSrv6LocatorEndDx2Static.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocatorEndDx2Static.setStatus("current")
_SvcEpipeSrv6LocEndDx2Value_Type = TSrv6FunctionValue
_SvcEpipeSrv6LocEndDx2Value_Object = MibTableColumn
svcEpipeSrv6LocEndDx2Value = _SvcEpipeSrv6LocEndDx2Value_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 6),
    _SvcEpipeSrv6LocEndDx2Value_Type()
)
svcEpipeSrv6LocEndDx2Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocEndDx2Value.setStatus("current")
_SvcEpipeSrv6LocEndDx2State_Type = TmnxOperState
_SvcEpipeSrv6LocEndDx2State_Object = MibTableColumn
svcEpipeSrv6LocEndDx2State = _SvcEpipeSrv6LocEndDx2State_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 7),
    _SvcEpipeSrv6LocEndDx2State_Type()
)
svcEpipeSrv6LocEndDx2State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocEndDx2State.setStatus("current")
_SvcEpipeSrv6LocEndDx2ErrorCode_Type = TSrv6FunctionErrorCode
_SvcEpipeSrv6LocEndDx2ErrorCode_Object = MibTableColumn
svcEpipeSrv6LocEndDx2ErrorCode = _SvcEpipeSrv6LocEndDx2ErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 8),
    _SvcEpipeSrv6LocEndDx2ErrorCode_Type()
)
svcEpipeSrv6LocEndDx2ErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocEndDx2ErrorCode.setStatus("current")
_SvcEpipeSrv6LocEndDx2SidAddrType_Type = InetAddressType
_SvcEpipeSrv6LocEndDx2SidAddrType_Object = MibTableColumn
svcEpipeSrv6LocEndDx2SidAddrType = _SvcEpipeSrv6LocEndDx2SidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 9),
    _SvcEpipeSrv6LocEndDx2SidAddrType_Type()
)
svcEpipeSrv6LocEndDx2SidAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocEndDx2SidAddrType.setStatus("current")


class _SvcEpipeSrv6LocEndDx2SidAddr_Type(InetAddress):
    """Custom type svcEpipeSrv6LocEndDx2SidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcEpipeSrv6LocEndDx2SidAddr_Type.__name__ = "InetAddress"
_SvcEpipeSrv6LocEndDx2SidAddr_Object = MibTableColumn
svcEpipeSrv6LocEndDx2SidAddr = _SvcEpipeSrv6LocEndDx2SidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 10, 1, 10),
    _SvcEpipeSrv6LocEndDx2SidAddr_Type()
)
svcEpipeSrv6LocEndDx2SidAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeSrv6LocEndDx2SidAddr.setStatus("current")
_SvcSrv6TEPTable_Object = MibTable
svcSrv6TEPTable = _SvcSrv6TEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11)
)
if mibBuilder.loadTexts:
    svcSrv6TEPTable.setStatus("current")
_SvcSrv6TEPEntry_Object = MibTableRow
svcSrv6TEPEntry = _SvcSrv6TEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11, 1)
)
svcSrv6TEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcSrv6TEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6TEPAddress"),
)
if mibBuilder.loadTexts:
    svcSrv6TEPEntry.setStatus("current")
_SvcSrv6TEPAddrType_Type = InetAddressType
_SvcSrv6TEPAddrType_Object = MibTableColumn
svcSrv6TEPAddrType = _SvcSrv6TEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11, 1, 1),
    _SvcSrv6TEPAddrType_Type()
)
svcSrv6TEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6TEPAddrType.setStatus("current")


class _SvcSrv6TEPAddress_Type(InetAddress):
    """Custom type svcSrv6TEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6TEPAddress_Type.__name__ = "InetAddress"
_SvcSrv6TEPAddress_Object = MibTableColumn
svcSrv6TEPAddress = _SvcSrv6TEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11, 1, 2),
    _SvcSrv6TEPAddress_Type()
)
svcSrv6TEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6TEPAddress.setStatus("current")
_SvcSrv6TEPNumNonESDest_Type = Unsigned32
_SvcSrv6TEPNumNonESDest_Object = MibTableColumn
svcSrv6TEPNumNonESDest = _SvcSrv6TEPNumNonESDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11, 1, 3),
    _SvcSrv6TEPNumNonESDest_Type()
)
svcSrv6TEPNumNonESDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6TEPNumNonESDest.setStatus("current")
_SvcSrv6TEPNumESDest_Type = Unsigned32
_SvcSrv6TEPNumESDest_Object = MibTableColumn
svcSrv6TEPNumESDest = _SvcSrv6TEPNumESDest_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 11, 1, 4),
    _SvcSrv6TEPNumESDest_Type()
)
svcSrv6TEPNumESDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6TEPNumESDest.setStatus("current")
_SvcSrv6InstTEPSidTable_Object = MibTable
svcSrv6InstTEPSidTable = _SvcSrv6InstTEPSidTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12)
)
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidTable.setStatus("current")
_SvcSrv6InstTEPSidEntry_Object = MibTableRow
svcSrv6InstTEPSidEntry = _SvcSrv6InstTEPSidEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1)
)
svcSrv6InstTEPSidEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6Instance"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstTEPSidAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstTEPSidAddr"),
)
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidEntry.setStatus("current")
_SvcSrv6InstTEPAddrType_Type = InetAddressType
_SvcSrv6InstTEPAddrType_Object = MibTableColumn
svcSrv6InstTEPAddrType = _SvcSrv6InstTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 1),
    _SvcSrv6InstTEPAddrType_Type()
)
svcSrv6InstTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstTEPAddrType.setStatus("current")


class _SvcSrv6InstTEPAddress_Type(InetAddress):
    """Custom type svcSrv6InstTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6InstTEPAddress_Type.__name__ = "InetAddress"
_SvcSrv6InstTEPAddress_Object = MibTableColumn
svcSrv6InstTEPAddress = _SvcSrv6InstTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 2),
    _SvcSrv6InstTEPAddress_Type()
)
svcSrv6InstTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstTEPAddress.setStatus("current")
_SvcSrv6InstTEPSidAddrType_Type = InetAddressType
_SvcSrv6InstTEPSidAddrType_Object = MibTableColumn
svcSrv6InstTEPSidAddrType = _SvcSrv6InstTEPSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 3),
    _SvcSrv6InstTEPSidAddrType_Type()
)
svcSrv6InstTEPSidAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidAddrType.setStatus("current")


class _SvcSrv6InstTEPSidAddr_Type(InetAddress):
    """Custom type svcSrv6InstTEPSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6InstTEPSidAddr_Type.__name__ = "InetAddress"
_SvcSrv6InstTEPSidAddr_Object = MibTableColumn
svcSrv6InstTEPSidAddr = _SvcSrv6InstTEPSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 4),
    _SvcSrv6InstTEPSidAddr_Type()
)
svcSrv6InstTEPSidAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidAddr.setStatus("current")
_SvcSrv6InstTEPSidNumMACs_Type = Unsigned32
_SvcSrv6InstTEPSidNumMACs_Object = MibTableColumn
svcSrv6InstTEPSidNumMACs = _SvcSrv6InstTEPSidNumMACs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 5),
    _SvcSrv6InstTEPSidNumMACs_Type()
)
svcSrv6InstTEPSidNumMACs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidNumMACs.setStatus("current")
_SvcSrv6InstTEPSidL2EsPbr_Type = TruthValue
_SvcSrv6InstTEPSidL2EsPbr_Object = MibTableColumn
svcSrv6InstTEPSidL2EsPbr = _SvcSrv6InstTEPSidL2EsPbr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 7),
    _SvcSrv6InstTEPSidL2EsPbr_Type()
)
svcSrv6InstTEPSidL2EsPbr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidL2EsPbr.setStatus("current")


class _SvcSrv6InstTEPSidMcast_Type(Integer32):
    """Custom type svcSrv6InstTEPSidMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("u", 1),
          ("bm", 2),
          ("bum", 3),
          ("m", 4))
    )


_SvcSrv6InstTEPSidMcast_Type.__name__ = "Integer32"
_SvcSrv6InstTEPSidMcast_Object = MibTableColumn
svcSrv6InstTEPSidMcast = _SvcSrv6InstTEPSidMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 8),
    _SvcSrv6InstTEPSidMcast_Type()
)
svcSrv6InstTEPSidMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidMcast.setStatus("current")


class _SvcSrv6InstTEPSidSrv6Type_Type(Integer32):
    """Custom type svcSrv6InstTEPSidSrv6Type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("static", 1),
          ("evpn", 2))
    )


_SvcSrv6InstTEPSidSrv6Type_Type.__name__ = "Integer32"
_SvcSrv6InstTEPSidSrv6Type_Object = MibTableColumn
svcSrv6InstTEPSidSrv6Type = _SvcSrv6InstTEPSidSrv6Type_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 9),
    _SvcSrv6InstTEPSidSrv6Type_Type()
)
svcSrv6InstTEPSidSrv6Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidSrv6Type.setStatus("current")
_SvcSrv6InstTEPSidSbdMcast_Type = TruthValue
_SvcSrv6InstTEPSidSbdMcast_Object = MibTableColumn
svcSrv6InstTEPSidSbdMcast = _SvcSrv6InstTEPSidSbdMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 12, 1, 10),
    _SvcSrv6InstTEPSidSbdMcast_Type()
)
svcSrv6InstTEPSidSbdMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstTEPSidSbdMcast.setStatus("current")
_SvcSrv6InstESDstTEPTable_Object = MibTable
svcSrv6InstESDstTEPTable = _SvcSrv6InstESDstTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13)
)
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPTable.setStatus("current")
_SvcSrv6InstESDstTEPEntry_Object = MibTableRow
svcSrv6InstESDstTEPEntry = _SvcSrv6InstESDstTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1)
)
svcSrv6InstESDstTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6Instance"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstESDstTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstESDstTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstESDstTEPSidAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6InstESDstTEPSidAddr"),
)
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPEntry.setStatus("current")
_SvcSrv6InstESDstTEPAddrType_Type = InetAddressType
_SvcSrv6InstESDstTEPAddrType_Object = MibTableColumn
svcSrv6InstESDstTEPAddrType = _SvcSrv6InstESDstTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1, 1),
    _SvcSrv6InstESDstTEPAddrType_Type()
)
svcSrv6InstESDstTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPAddrType.setStatus("current")


class _SvcSrv6InstESDstTEPAddress_Type(InetAddress):
    """Custom type svcSrv6InstESDstTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6InstESDstTEPAddress_Type.__name__ = "InetAddress"
_SvcSrv6InstESDstTEPAddress_Object = MibTableColumn
svcSrv6InstESDstTEPAddress = _SvcSrv6InstESDstTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1, 2),
    _SvcSrv6InstESDstTEPAddress_Type()
)
svcSrv6InstESDstTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPAddress.setStatus("current")
_SvcSrv6InstESDstTEPSidAddrType_Type = InetAddressType
_SvcSrv6InstESDstTEPSidAddrType_Object = MibTableColumn
svcSrv6InstESDstTEPSidAddrType = _SvcSrv6InstESDstTEPSidAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1, 3),
    _SvcSrv6InstESDstTEPSidAddrType_Type()
)
svcSrv6InstESDstTEPSidAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPSidAddrType.setStatus("current")


class _SvcSrv6InstESDstTEPSidAddr_Type(InetAddress):
    """Custom type svcSrv6InstESDstTEPSidAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcSrv6InstESDstTEPSidAddr_Type.__name__ = "InetAddress"
_SvcSrv6InstESDstTEPSidAddr_Object = MibTableColumn
svcSrv6InstESDstTEPSidAddr = _SvcSrv6InstESDstTEPSidAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1, 4),
    _SvcSrv6InstESDstTEPSidAddr_Type()
)
svcSrv6InstESDstTEPSidAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPSidAddr.setStatus("current")
_SvcSrv6InstESDstTEPLastChg_Type = TimeStamp
_SvcSrv6InstESDstTEPLastChg_Object = MibTableColumn
svcSrv6InstESDstTEPLastChg = _SvcSrv6InstESDstTEPLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 13, 1, 5),
    _SvcSrv6InstESDstTEPLastChg_Type()
)
svcSrv6InstESDstTEPLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstESDstTEPLastChg.setStatus("current")
_SvcSrv6InstESDestTable_Object = MibTable
svcSrv6InstESDestTable = _SvcSrv6InstESDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 14)
)
if mibBuilder.loadTexts:
    svcSrv6InstESDestTable.setStatus("current")
_SvcSrv6InstESDestEntry_Object = MibTableRow
svcSrv6InstESDestEntry = _SvcSrv6InstESDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 14, 1)
)
svcSrv6InstESDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcSrv6Instance"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
)
if mibBuilder.loadTexts:
    svcSrv6InstESDestEntry.setStatus("current")
_SvcSrv6InstESDestLastChgd_Type = TimeStamp
_SvcSrv6InstESDestLastChgd_Object = MibTableColumn
svcSrv6InstESDestLastChgd = _SvcSrv6InstESDestLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 14, 1, 2),
    _SvcSrv6InstESDestLastChgd_Type()
)
svcSrv6InstESDestLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstESDestLastChgd.setStatus("current")
_SvcSrv6InstESDestNumMacs_Type = Unsigned32
_SvcSrv6InstESDestNumMacs_Object = MibTableColumn
svcSrv6InstESDestNumMacs = _SvcSrv6InstESDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 265, 14, 1, 3),
    _SvcSrv6InstESDestNumMacs_Type()
)
svcSrv6InstESDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSrv6InstESDestNumMacs.setStatus("current")
_SvcDhcpLeaseDnsNbnsTable_Object = MibTable
svcDhcpLeaseDnsNbnsTable = _SvcDhcpLeaseDnsNbnsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266)
)
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsNbnsTable.setStatus("current")
_SvcDhcpLeaseDnsNbnsEntry_Object = MibTableRow
svcDhcpLeaseDnsNbnsEntry = _SvcDhcpLeaseDnsNbnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1)
)
svcDhcpLeaseDnsNbnsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseNextHopMacAddr"),
    (0, "TIMETRA-SERV-MIB", "svcDhcpLeaseDnsNbnsAddrIndex"),
)
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsNbnsEntry.setStatus("current")


class _SvcDhcpLeaseDnsNbnsAddrIndex_Type(Unsigned32):
    """Custom type svcDhcpLeaseDnsNbnsAddrIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_SvcDhcpLeaseDnsNbnsAddrIndex_Type.__name__ = "Unsigned32"
_SvcDhcpLeaseDnsNbnsAddrIndex_Object = MibTableColumn
svcDhcpLeaseDnsNbnsAddrIndex = _SvcDhcpLeaseDnsNbnsAddrIndex_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 1),
    _SvcDhcpLeaseDnsNbnsAddrIndex_Type()
)
svcDhcpLeaseDnsNbnsAddrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsNbnsAddrIndex.setStatus("current")
_SvcDhcpLeaseDnsV4AddrType_Type = InetAddressType
_SvcDhcpLeaseDnsV4AddrType_Object = MibTableColumn
svcDhcpLeaseDnsV4AddrType = _SvcDhcpLeaseDnsV4AddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 2),
    _SvcDhcpLeaseDnsV4AddrType_Type()
)
svcDhcpLeaseDnsV4AddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsV4AddrType.setStatus("current")


class _SvcDhcpLeaseDnsV4Addr_Type(InetAddress):
    """Custom type svcDhcpLeaseDnsV4Addr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseDnsV4Addr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseDnsV4Addr_Object = MibTableColumn
svcDhcpLeaseDnsV4Addr = _SvcDhcpLeaseDnsV4Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 3),
    _SvcDhcpLeaseDnsV4Addr_Type()
)
svcDhcpLeaseDnsV4Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsV4Addr.setStatus("current")
_SvcDhcpLeaseNbnsV4AddrType_Type = InetAddressType
_SvcDhcpLeaseNbnsV4AddrType_Object = MibTableColumn
svcDhcpLeaseNbnsV4AddrType = _SvcDhcpLeaseNbnsV4AddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 4),
    _SvcDhcpLeaseNbnsV4AddrType_Type()
)
svcDhcpLeaseNbnsV4AddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseNbnsV4AddrType.setStatus("current")


class _SvcDhcpLeaseNbnsV4Addr_Type(InetAddress):
    """Custom type svcDhcpLeaseNbnsV4Addr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
    )


_SvcDhcpLeaseNbnsV4Addr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseNbnsV4Addr_Object = MibTableColumn
svcDhcpLeaseNbnsV4Addr = _SvcDhcpLeaseNbnsV4Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 5),
    _SvcDhcpLeaseNbnsV4Addr_Type()
)
svcDhcpLeaseNbnsV4Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseNbnsV4Addr.setStatus("current")
_SvcDhcpLeaseDnsV6AddrType_Type = InetAddressType
_SvcDhcpLeaseDnsV6AddrType_Object = MibTableColumn
svcDhcpLeaseDnsV6AddrType = _SvcDhcpLeaseDnsV6AddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 6),
    _SvcDhcpLeaseDnsV6AddrType_Type()
)
svcDhcpLeaseDnsV6AddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsV6AddrType.setStatus("current")


class _SvcDhcpLeaseDnsV6Addr_Type(InetAddress):
    """Custom type svcDhcpLeaseDnsV6Addr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(16, 16),
    )


_SvcDhcpLeaseDnsV6Addr_Type.__name__ = "InetAddress"
_SvcDhcpLeaseDnsV6Addr_Object = MibTableColumn
svcDhcpLeaseDnsV6Addr = _SvcDhcpLeaseDnsV6Addr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 266, 1, 7),
    _SvcDhcpLeaseDnsV6Addr_Type()
)
svcDhcpLeaseDnsV6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcDhcpLeaseDnsV6Addr.setStatus("current")
_SvcIfSubStatsTable_Object = MibTable
svcIfSubStatsTable = _SvcIfSubStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267)
)
if mibBuilder.loadTexts:
    svcIfSubStatsTable.setStatus("current")
_SvcIfSubStatsEntry_Object = MibTableRow
svcIfSubStatsEntry = _SvcIfSubStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1)
)
svcIfSubStatsEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "iesIfIndex"),
)
if mibBuilder.loadTexts:
    svcIfSubStatsEntry.setStatus("current")
_SvcIfSubStatsLastCleared_Type = TimeStamp
_SvcIfSubStatsLastCleared_Object = MibTableColumn
svcIfSubStatsLastCleared = _SvcIfSubStatsLastCleared_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1, 3),
    _SvcIfSubStatsLastCleared_Type()
)
svcIfSubStatsLastCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSubStatsLastCleared.setStatus("current")
_SvcIfSubStatsIngPkts_Type = Counter64
_SvcIfSubStatsIngPkts_Object = MibTableColumn
svcIfSubStatsIngPkts = _SvcIfSubStatsIngPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1, 4),
    _SvcIfSubStatsIngPkts_Type()
)
svcIfSubStatsIngPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSubStatsIngPkts.setStatus("current")
_SvcIfSubStatsIngOctets_Type = Counter64
_SvcIfSubStatsIngOctets_Object = MibTableColumn
svcIfSubStatsIngOctets = _SvcIfSubStatsIngOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1, 5),
    _SvcIfSubStatsIngOctets_Type()
)
svcIfSubStatsIngOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSubStatsIngOctets.setStatus("current")
_SvcIfSubStatsEgrPkts_Type = Counter64
_SvcIfSubStatsEgrPkts_Object = MibTableColumn
svcIfSubStatsEgrPkts = _SvcIfSubStatsEgrPkts_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1, 6),
    _SvcIfSubStatsEgrPkts_Type()
)
svcIfSubStatsEgrPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSubStatsEgrPkts.setStatus("current")
_SvcIfSubStatsEgrOctets_Type = Counter64
_SvcIfSubStatsEgrOctets_Object = MibTableColumn
svcIfSubStatsEgrOctets = _SvcIfSubStatsEgrOctets_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 267, 1, 7),
    _SvcIfSubStatsEgrOctets_Type()
)
svcIfSubStatsEgrOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcIfSubStatsEgrOctets.setStatus("current")
_TmnxSvcSubTable_Object = MibTable
tmnxSvcSubTable = _TmnxSvcSubTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 271)
)
if mibBuilder.loadTexts:
    tmnxSvcSubTable.setStatus("current")
_TmnxSvcSubEntry_Object = MibTableRow
tmnxSvcSubEntry = _TmnxSvcSubEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 271, 1)
)
tmnxSvcSubEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    tmnxSvcSubEntry.setStatus("current")
_TmnxSvcSubLastCh_Type = TimeStamp
_TmnxSvcSubLastCh_Object = MibTableColumn
tmnxSvcSubLastCh = _TmnxSvcSubLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 271, 1, 1),
    _TmnxSvcSubLastCh_Type()
)
tmnxSvcSubLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSubLastCh.setStatus("current")


class _TmnxSvcSubMcShuntId_Type(Unsigned32):
    """Custom type tmnxSvcSubMcShuntId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_TmnxSvcSubMcShuntId_Type.__name__ = "Unsigned32"
_TmnxSvcSubMcShuntId_Object = MibTableColumn
tmnxSvcSubMcShuntId = _TmnxSvcSubMcShuntId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 271, 1, 2),
    _TmnxSvcSubMcShuntId_Type()
)
tmnxSvcSubMcShuntId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tmnxSvcSubMcShuntId.setStatus("current")
_TmnxSvcSubMonOperGrpTable_Object = MibTable
tmnxSvcSubMonOperGrpTable = _TmnxSvcSubMonOperGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273)
)
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpTable.setStatus("current")
_TmnxSvcSubMonOperGrpEntry_Object = MibTableRow
tmnxSvcSubMonOperGrpEntry = _TmnxSvcSubMonOperGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273, 1)
)
tmnxSvcSubMonOperGrpEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (1, "TIMETRA-SERV-MIB", "svcOperGrpName"),
)
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpEntry.setStatus("current")
_TmnxSvcSubMonOperGrpRowStatus_Type = RowStatus
_TmnxSvcSubMonOperGrpRowStatus_Object = MibTableColumn
tmnxSvcSubMonOperGrpRowStatus = _TmnxSvcSubMonOperGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273, 1, 1),
    _TmnxSvcSubMonOperGrpRowStatus_Type()
)
tmnxSvcSubMonOperGrpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpRowStatus.setStatus("current")
_TmnxSvcSubMonOperGrpLastCh_Type = TimeStamp
_TmnxSvcSubMonOperGrpLastCh_Object = MibTableColumn
tmnxSvcSubMonOperGrpLastCh = _TmnxSvcSubMonOperGrpLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273, 1, 2),
    _TmnxSvcSubMonOperGrpLastCh_Type()
)
tmnxSvcSubMonOperGrpLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpLastCh.setStatus("current")


class _TmnxSvcSubMonOperGrpHlthDrop_Type(Unsigned32):
    """Custom type tmnxSvcSubMonOperGrpHlthDrop based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_TmnxSvcSubMonOperGrpHlthDrop_Type.__name__ = "Unsigned32"
_TmnxSvcSubMonOperGrpHlthDrop_Object = MibTableColumn
tmnxSvcSubMonOperGrpHlthDrop = _TmnxSvcSubMonOperGrpHlthDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273, 1, 3),
    _TmnxSvcSubMonOperGrpHlthDrop_Type()
)
tmnxSvcSubMonOperGrpHlthDrop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpHlthDrop.setStatus("current")
_TmnxSvcSubMonOperGrpActHlthDrop_Type = Unsigned32
_TmnxSvcSubMonOperGrpActHlthDrop_Object = MibTableColumn
tmnxSvcSubMonOperGrpActHlthDrop = _TmnxSvcSubMonOperGrpActHlthDrop_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 273, 1, 4),
    _TmnxSvcSubMonOperGrpActHlthDrop_Type()
)
tmnxSvcSubMonOperGrpActHlthDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpActHlthDrop.setStatus("current")
_SvcRoutedVplsEvpnGWDrTable_Object = MibTable
svcRoutedVplsEvpnGWDrTable = _SvcRoutedVplsEvpnGWDrTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 274)
)
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrTable.setStatus("current")
_SvcRoutedVplsEvpnGWDrEntry_Object = MibTableRow
svcRoutedVplsEvpnGWDrEntry = _SvcRoutedVplsEvpnGWDrEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 274, 1)
)
svcRoutedVplsEvpnGWDrEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrCndtIpType"),
    (0, "TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrCndtIp"),
)
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrEntry.setStatus("current")
_SvcRoutedVplsEvpnGWDrCndtIpType_Type = InetAddressType
_SvcRoutedVplsEvpnGWDrCndtIpType_Object = MibTableColumn
svcRoutedVplsEvpnGWDrCndtIpType = _SvcRoutedVplsEvpnGWDrCndtIpType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 274, 1, 1),
    _SvcRoutedVplsEvpnGWDrCndtIpType_Type()
)
svcRoutedVplsEvpnGWDrCndtIpType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrCndtIpType.setStatus("current")


class _SvcRoutedVplsEvpnGWDrCndtIp_Type(InetAddress):
    """Custom type svcRoutedVplsEvpnGWDrCndtIp based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcRoutedVplsEvpnGWDrCndtIp_Type.__name__ = "InetAddress"
_SvcRoutedVplsEvpnGWDrCndtIp_Object = MibTableColumn
svcRoutedVplsEvpnGWDrCndtIp = _SvcRoutedVplsEvpnGWDrCndtIp_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 274, 1, 2),
    _SvcRoutedVplsEvpnGWDrCndtIp_Type()
)
svcRoutedVplsEvpnGWDrCndtIp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrCndtIp.setStatus("current")
_SvcRoutedVplsEvpnGWDrCndtIpAdded_Type = TimeStamp
_SvcRoutedVplsEvpnGWDrCndtIpAdded_Object = MibTableColumn
svcRoutedVplsEvpnGWDrCndtIpAdded = _SvcRoutedVplsEvpnGWDrCndtIpAdded_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 274, 1, 3),
    _SvcRoutedVplsEvpnGWDrCndtIpAdded_Type()
)
svcRoutedVplsEvpnGWDrCndtIpAdded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrCndtIpAdded.setStatus("current")
_SvcEvpnInstMplsTEPEgrLblTnlTable_Object = MibTable
svcEvpnInstMplsTEPEgrLblTnlTable = _SvcEvpnInstMplsTEPEgrLblTnlTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275)
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblTnlTable.setStatus("current")
_SvcEvpnInstMplsTEPEgrLblTnlEntry_Object = MibTableRow
svcEvpnInstMplsTEPEgrLblTnlEntry = _SvcEvpnInstMplsTEPEgrLblTnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1)
)
svcEvpnInstMplsTEPEgrLblTnlEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgrLblTEPTnlId"),
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblTnlEntry.setStatus("current")
_SvcEvpnInstMplsTEPEgrLblTEPTnlId_Type = Integer32
_SvcEvpnInstMplsTEPEgrLblTEPTnlId_Object = MibTableColumn
svcEvpnInstMplsTEPEgrLblTEPTnlId = _SvcEvpnInstMplsTEPEgrLblTEPTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 1),
    _SvcEvpnInstMplsTEPEgrLblTEPTnlId_Type()
)
svcEvpnInstMplsTEPEgrLblTEPTnlId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblTEPTnlId.setStatus("current")
_SvcEvpnInstMplsTEPEgrLblTnlLstCh_Type = TimeStamp
_SvcEvpnInstMplsTEPEgrLblTnlLstCh_Object = MibTableColumn
svcEvpnInstMplsTEPEgrLblTnlLstCh = _SvcEvpnInstMplsTEPEgrLblTnlLstCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 2),
    _SvcEvpnInstMplsTEPEgrLblTnlLstCh_Type()
)
svcEvpnInstMplsTEPEgrLblTnlLstCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblTnlLstCh.setStatus("current")
_SvcEvpnInstMplsTEPEgLblTnlNumMAC_Type = Unsigned32
_SvcEvpnInstMplsTEPEgLblTnlNumMAC_Object = MibTableColumn
svcEvpnInstMplsTEPEgLblTnlNumMAC = _SvcEvpnInstMplsTEPEgLblTnlNumMAC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 3),
    _SvcEvpnInstMplsTEPEgLblTnlNumMAC_Type()
)
svcEvpnInstMplsTEPEgLblTnlNumMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgLblTnlNumMAC.setStatus("current")
_SvcEvpnInstMplsTEPEgLblTnlInMLst_Type = TruthValue
_SvcEvpnInstMplsTEPEgLblTnlInMLst_Object = MibTableColumn
svcEvpnInstMplsTEPEgLblTnlInMLst = _SvcEvpnInstMplsTEPEgLblTnlInMLst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 4),
    _SvcEvpnInstMplsTEPEgLblTnlInMLst_Type()
)
svcEvpnInstMplsTEPEgLblTnlInMLst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgLblTnlInMLst.setStatus("current")
_SvcEvpnInstMplsTEPEgLblTnlRsType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnInstMplsTEPEgLblTnlRsType_Object = MibTableColumn
svcEvpnInstMplsTEPEgLblTnlRsType = _SvcEvpnInstMplsTEPEgLblTnlRsType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 5),
    _SvcEvpnInstMplsTEPEgLblTnlRsType_Type()
)
svcEvpnInstMplsTEPEgLblTnlRsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgLblTnlRsType.setStatus("current")
_SvcEvpnInstMplsTEPEgLbTnlSbdMcst_Type = TruthValue
_SvcEvpnInstMplsTEPEgLbTnlSbdMcst_Object = MibTableColumn
svcEvpnInstMplsTEPEgLbTnlSbdMcst = _SvcEvpnInstMplsTEPEgLbTnlSbdMcst_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 6),
    _SvcEvpnInstMplsTEPEgLbTnlSbdMcst_Type()
)
svcEvpnInstMplsTEPEgLbTnlSbdMcst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgLbTnlSbdMcst.setStatus("current")


class _SvcEvpnInstMplsTEPEgrLblMcast_Type(Integer32):
    """Custom type svcEvpnInstMplsTEPEgrLblMcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("u", 1),
          ("bm", 2),
          ("bum", 3),
          ("m", 4))
    )


_SvcEvpnInstMplsTEPEgrLblMcast_Type.__name__ = "Integer32"
_SvcEvpnInstMplsTEPEgrLblMcast_Object = MibTableColumn
svcEvpnInstMplsTEPEgrLblMcast = _SvcEvpnInstMplsTEPEgrLblMcast_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 275, 1, 7),
    _SvcEvpnInstMplsTEPEgrLblMcast_Type()
)
svcEvpnInstMplsTEPEgrLblMcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblMcast.setStatus("current")
_SvcEvpnInstMplsESDestTEPTable_Object = MibTable
svcEvpnInstMplsESDestTEPTable = _SvcEvpnInstMplsESDestTEPTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276)
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPTable.setStatus("current")
_SvcEvpnInstMplsESDestTEPEntry_Object = MibTableRow
svcEvpnInstMplsESDestTEPEntry = _SvcEvpnInstMplsESDestTEPEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1)
)
svcEvpnInstMplsESDestTEPEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPAddrType"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPAddress"),
    (0, "TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPLabel"),
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPEntry.setStatus("current")
_SvcEvpnInstMplsESDestTEPAddrType_Type = InetAddressType
_SvcEvpnInstMplsESDestTEPAddrType_Object = MibTableColumn
svcEvpnInstMplsESDestTEPAddrType = _SvcEvpnInstMplsESDestTEPAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 1),
    _SvcEvpnInstMplsESDestTEPAddrType_Type()
)
svcEvpnInstMplsESDestTEPAddrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPAddrType.setStatus("current")


class _SvcEvpnInstMplsESDestTEPAddress_Type(InetAddress):
    """Custom type svcEvpnInstMplsESDestTEPAddress based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcEvpnInstMplsESDestTEPAddress_Type.__name__ = "InetAddress"
_SvcEvpnInstMplsESDestTEPAddress_Object = MibTableColumn
svcEvpnInstMplsESDestTEPAddress = _SvcEvpnInstMplsESDestTEPAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 2),
    _SvcEvpnInstMplsESDestTEPAddress_Type()
)
svcEvpnInstMplsESDestTEPAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPAddress.setStatus("current")
_SvcEvpnInstMplsESDestTEPLabel_Type = Unsigned32
_SvcEvpnInstMplsESDestTEPLabel_Object = MibTableColumn
svcEvpnInstMplsESDestTEPLabel = _SvcEvpnInstMplsESDestTEPLabel_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 3),
    _SvcEvpnInstMplsESDestTEPLabel_Type()
)
svcEvpnInstMplsESDestTEPLabel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPLabel.setStatus("current")
_SvcEvpnInstMplsESDestTEPLastChgd_Type = TimeStamp
_SvcEvpnInstMplsESDestTEPLastChgd_Object = MibTableColumn
svcEvpnInstMplsESDestTEPLastChgd = _SvcEvpnInstMplsESDestTEPLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 4),
    _SvcEvpnInstMplsESDestTEPLastChgd_Type()
)
svcEvpnInstMplsESDestTEPLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPLastChgd.setStatus("current")
_SvcEvpnInstMplsESDestTEPResType_Type = TmnxSvcEvpnMplsTransportType
_SvcEvpnInstMplsESDestTEPResType_Object = MibTableColumn
svcEvpnInstMplsESDestTEPResType = _SvcEvpnInstMplsESDestTEPResType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 5),
    _SvcEvpnInstMplsESDestTEPResType_Type()
)
svcEvpnInstMplsESDestTEPResType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPResType.setStatus("current")
_SvcEvpnInstMplsESDestTEPTnlId_Type = Unsigned32
_SvcEvpnInstMplsESDestTEPTnlId_Object = MibTableColumn
svcEvpnInstMplsESDestTEPTnlId = _SvcEvpnInstMplsESDestTEPTnlId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 276, 1, 6),
    _SvcEvpnInstMplsESDestTEPTnlId_Type()
)
svcEvpnInstMplsESDestTEPTnlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPTnlId.setStatus("current")
_SvcEvpnInstMplsESDestTable_Object = MibTable
svcEvpnInstMplsESDestTable = _SvcEvpnInstMplsESDestTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 277)
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTable.setStatus("current")
_SvcEvpnInstMplsESDestEntry_Object = MibTableRow
svcEvpnInstMplsESDestEntry = _SvcEvpnInstMplsESDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 277, 1)
)
svcEvpnInstMplsESDestEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
    (0, "TIMETRA-SERV-MIB", "svcBgpEvpnInstance"),
    (0, "TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
)
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestEntry.setStatus("current")
_SvcEvpnInstMplsESDestNumMacs_Type = Unsigned32
_SvcEvpnInstMplsESDestNumMacs_Object = MibTableColumn
svcEvpnInstMplsESDestNumMacs = _SvcEvpnInstMplsESDestNumMacs_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 277, 1, 1),
    _SvcEvpnInstMplsESDestNumMacs_Type()
)
svcEvpnInstMplsESDestNumMacs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestNumMacs.setStatus("current")
_SvcEvpnInstMplsESDestLastChanged_Type = TimeStamp
_SvcEvpnInstMplsESDestLastChanged_Object = MibTableColumn
svcEvpnInstMplsESDestLastChanged = _SvcEvpnInstMplsESDestLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 277, 1, 2),
    _SvcEvpnInstMplsESDestLastChanged_Type()
)
svcEvpnInstMplsESDestLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestLastChanged.setStatus("current")
_SvcEvpnPwPortHdEndMHEthSegTable_Object = MibTable
svcEvpnPwPortHdEndMHEthSegTable = _SvcEvpnPwPortHdEndMHEthSegTable_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 279)
)
if mibBuilder.loadTexts:
    svcEvpnPwPortHdEndMHEthSegTable.setStatus("current")
_SvcEvpnPwPortHdEndMHEthSegEntry_Object = MibTableRow
svcEvpnPwPortHdEndMHEthSegEntry = _SvcEvpnPwPortHdEndMHEthSegEntry_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 279, 1)
)
svcEvpnPwPortHdEndMHEthSegEntry.setIndexNames(
    (0, "TIMETRA-SERV-MIB", "svcId"),
)
if mibBuilder.loadTexts:
    svcEvpnPwPortHdEndMHEthSegEntry.setStatus("current")


class _SvcEvpnHdEndMHEthSegPwPortId_Type(Unsigned32):
    """Custom type svcEvpnHdEndMHEthSegPwPortId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_SvcEvpnHdEndMHEthSegPwPortId_Type.__name__ = "Unsigned32"
_SvcEvpnHdEndMHEthSegPwPortId_Object = MibTableColumn
svcEvpnHdEndMHEthSegPwPortId = _SvcEvpnHdEndMHEthSegPwPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 279, 1, 1),
    _SvcEvpnHdEndMHEthSegPwPortId_Type()
)
svcEvpnHdEndMHEthSegPwPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnHdEndMHEthSegPwPortId.setStatus("current")
_SvcEvpnPwPortHdEndMHEthSegName_Type = TNamedItemOrEmpty
_SvcEvpnPwPortHdEndMHEthSegName_Object = MibTableColumn
svcEvpnPwPortHdEndMHEthSegName = _SvcEvpnPwPortHdEndMHEthSegName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 279, 1, 2),
    _SvcEvpnPwPortHdEndMHEthSegName_Type()
)
svcEvpnPwPortHdEndMHEthSegName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnPwPortHdEndMHEthSegName.setStatus("current")
_SvcEvpnPwPortHdEndMHEthSegStatus_Type = TmnxEvpnMHEthSegStatus
_SvcEvpnPwPortHdEndMHEthSegStatus_Object = MibTableColumn
svcEvpnPwPortHdEndMHEthSegStatus = _SvcEvpnPwPortHdEndMHEthSegStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 2, 279, 1, 3),
    _SvcEvpnPwPortHdEndMHEthSegStatus_Type()
)
svcEvpnPwPortHdEndMHEthSegStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnPwPortHdEndMHEthSegStatus.setStatus("current")
_TmnxTstpNotifyObjs_ObjectIdentity = ObjectIdentity
tmnxTstpNotifyObjs = _TmnxTstpNotifyObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5)
)
_TmnxCustomerBridgeId_Type = BridgeId
_TmnxCustomerBridgeId_Object = MibScalar
tmnxCustomerBridgeId = _TmnxCustomerBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5, 1),
    _TmnxCustomerBridgeId_Type()
)
tmnxCustomerBridgeId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxCustomerBridgeId.setStatus("current")
_TmnxCustomerRootBridgeId_Type = BridgeId
_TmnxCustomerRootBridgeId_Object = MibScalar
tmnxCustomerRootBridgeId = _TmnxCustomerRootBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5, 2),
    _TmnxCustomerRootBridgeId_Type()
)
tmnxCustomerRootBridgeId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxCustomerRootBridgeId.setStatus("current")
_TmnxOtherBridgeId_Type = BridgeId
_TmnxOtherBridgeId_Object = MibScalar
tmnxOtherBridgeId = _TmnxOtherBridgeId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5, 3),
    _TmnxOtherBridgeId_Type()
)
tmnxOtherBridgeId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxOtherBridgeId.setStatus("current")
_TmnxOldSdpBindTlsStpPortState_Type = TStpPortState
_TmnxOldSdpBindTlsStpPortState_Object = MibScalar
tmnxOldSdpBindTlsStpPortState = _TmnxOldSdpBindTlsStpPortState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5, 4),
    _TmnxOldSdpBindTlsStpPortState_Type()
)
tmnxOldSdpBindTlsStpPortState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxOldSdpBindTlsStpPortState.setStatus("current")
_TmnxVcpState_Type = TStpPortState
_TmnxVcpState_Object = MibScalar
tmnxVcpState = _TmnxVcpState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 5, 5),
    _TmnxVcpState_Type()
)
tmnxVcpState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxVcpState.setStatus("current")
_TmnxSvcNotifyObjs_ObjectIdentity = ObjectIdentity
tmnxSvcNotifyObjs = _TmnxSvcNotifyObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6)
)
_MacPinningMacAddress_Type = MacAddress
_MacPinningMacAddress_Object = MibScalar
macPinningMacAddress = _MacPinningMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 1),
    _MacPinningMacAddress_Type()
)
macPinningMacAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    macPinningMacAddress.setStatus("current")
_MacPinningPinnedRow_Type = RowPointer
_MacPinningPinnedRow_Object = MibScalar
macPinningPinnedRow = _MacPinningPinnedRow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 2),
    _MacPinningPinnedRow_Type()
)
macPinningPinnedRow.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    macPinningPinnedRow.setStatus("current")
_MacPinningPinnedRowDescr_Type = DisplayString
_MacPinningPinnedRowDescr_Object = MibScalar
macPinningPinnedRowDescr = _MacPinningPinnedRowDescr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 3),
    _MacPinningPinnedRowDescr_Type()
)
macPinningPinnedRowDescr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    macPinningPinnedRowDescr.setStatus("current")
_MacPinningViolatingRow_Type = RowPointer
_MacPinningViolatingRow_Object = MibScalar
macPinningViolatingRow = _MacPinningViolatingRow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 4),
    _MacPinningViolatingRow_Type()
)
macPinningViolatingRow.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    macPinningViolatingRow.setStatus("current")
_MacPinningViolatingRowDescr_Type = DisplayString
_MacPinningViolatingRowDescr_Object = MibScalar
macPinningViolatingRowDescr = _MacPinningViolatingRowDescr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 5),
    _MacPinningViolatingRowDescr_Type()
)
macPinningViolatingRowDescr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    macPinningViolatingRowDescr.setStatus("current")
_TlsDHCPClientLease_Type = Integer32
_TlsDHCPClientLease_Object = MibScalar
tlsDHCPClientLease = _TlsDHCPClientLease_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 6),
    _TlsDHCPClientLease_Type()
)
tlsDHCPClientLease.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDHCPClientLease.setStatus("obsolete")
_TlsDhcpLseStateOldCiAddr_Type = IpAddress
_TlsDhcpLseStateOldCiAddr_Object = MibScalar
tlsDhcpLseStateOldCiAddr = _TlsDhcpLseStateOldCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 7),
    _TlsDhcpLseStateOldCiAddr_Type()
)
tlsDhcpLseStateOldCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpLseStateOldCiAddr.setStatus("obsolete")
_TlsDhcpLseStateOldChAddr_Type = MacAddress
_TlsDhcpLseStateOldChAddr_Object = MibScalar
tlsDhcpLseStateOldChAddr = _TlsDhcpLseStateOldChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 8),
    _TlsDhcpLseStateOldChAddr_Type()
)
tlsDhcpLseStateOldChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpLseStateOldChAddr.setStatus("obsolete")
_TlsDhcpLseStateNewCiAddr_Type = IpAddress
_TlsDhcpLseStateNewCiAddr_Object = MibScalar
tlsDhcpLseStateNewCiAddr = _TlsDhcpLseStateNewCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 9),
    _TlsDhcpLseStateNewCiAddr_Type()
)
tlsDhcpLseStateNewCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpLseStateNewCiAddr.setStatus("obsolete")
_TlsDhcpLseStateNewChAddr_Type = MacAddress
_TlsDhcpLseStateNewChAddr_Object = MibScalar
tlsDhcpLseStateNewChAddr = _TlsDhcpLseStateNewChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 10),
    _TlsDhcpLseStateNewChAddr_Type()
)
tlsDhcpLseStateNewChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpLseStateNewChAddr.setStatus("obsolete")
_TlsDhcpRestoreLseStateCiAddr_Type = IpAddress
_TlsDhcpRestoreLseStateCiAddr_Object = MibScalar
tlsDhcpRestoreLseStateCiAddr = _TlsDhcpRestoreLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 11),
    _TlsDhcpRestoreLseStateCiAddr_Type()
)
tlsDhcpRestoreLseStateCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpRestoreLseStateCiAddr.setStatus("obsolete")
_TlsDhcpRestoreLseStateSvcId_Type = TmnxServId
_TlsDhcpRestoreLseStateSvcId_Object = MibScalar
tlsDhcpRestoreLseStateSvcId = _TlsDhcpRestoreLseStateSvcId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 12),
    _TlsDhcpRestoreLseStateSvcId_Type()
)
tlsDhcpRestoreLseStateSvcId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpRestoreLseStateSvcId.setStatus("obsolete")
_TlsDhcpRestoreLseStatePortId_Type = TmnxPortID
_TlsDhcpRestoreLseStatePortId_Object = MibScalar
tlsDhcpRestoreLseStatePortId = _TlsDhcpRestoreLseStatePortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 13),
    _TlsDhcpRestoreLseStatePortId_Type()
)
tlsDhcpRestoreLseStatePortId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpRestoreLseStatePortId.setStatus("obsolete")
_TlsDhcpRestoreLseStateEncapVal_Type = TmnxEncapVal
_TlsDhcpRestoreLseStateEncapVal_Object = MibScalar
tlsDhcpRestoreLseStateEncapVal = _TlsDhcpRestoreLseStateEncapVal_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 14),
    _TlsDhcpRestoreLseStateEncapVal_Type()
)
tlsDhcpRestoreLseStateEncapVal.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpRestoreLseStateEncapVal.setStatus("obsolete")
_TlsDhcpRestoreLseStateProblem_Type = DisplayString
_TlsDhcpRestoreLseStateProblem_Object = MibScalar
tlsDhcpRestoreLseStateProblem = _TlsDhcpRestoreLseStateProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 15),
    _TlsDhcpRestoreLseStateProblem_Type()
)
tlsDhcpRestoreLseStateProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpRestoreLseStateProblem.setStatus("obsolete")
_TlsDhcpPacketProblem_Type = DisplayString
_TlsDhcpPacketProblem_Object = MibScalar
tlsDhcpPacketProblem = _TlsDhcpPacketProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 16),
    _TlsDhcpPacketProblem_Type()
)
tlsDhcpPacketProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpPacketProblem.setStatus("obsolete")
_TlsDhcpLseStatePopulateError_Type = DisplayString
_TlsDhcpLseStatePopulateError_Object = MibScalar
tlsDhcpLseStatePopulateError = _TlsDhcpLseStatePopulateError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 17),
    _TlsDhcpLseStatePopulateError_Type()
)
tlsDhcpLseStatePopulateError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tlsDhcpLseStatePopulateError.setStatus("obsolete")
_SvcDhcpRestoreLseStateCiAddr_Type = IpAddress
_SvcDhcpRestoreLseStateCiAddr_Object = MibScalar
svcDhcpRestoreLseStateCiAddr = _SvcDhcpRestoreLseStateCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 18),
    _SvcDhcpRestoreLseStateCiAddr_Type()
)
svcDhcpRestoreLseStateCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpRestoreLseStateCiAddr.setStatus("current")
_SvcDhcpRestoreLseStateProblem_Type = DisplayString
_SvcDhcpRestoreLseStateProblem_Object = MibScalar
svcDhcpRestoreLseStateProblem = _SvcDhcpRestoreLseStateProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 19),
    _SvcDhcpRestoreLseStateProblem_Type()
)
svcDhcpRestoreLseStateProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpRestoreLseStateProblem.setStatus("current")
_SvcDhcpLseStateOldCiAddr_Type = IpAddress
_SvcDhcpLseStateOldCiAddr_Object = MibScalar
svcDhcpLseStateOldCiAddr = _SvcDhcpLseStateOldCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 20),
    _SvcDhcpLseStateOldCiAddr_Type()
)
svcDhcpLseStateOldCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpLseStateOldCiAddr.setStatus("current")
_SvcDhcpLseStateOldChAddr_Type = MacAddress
_SvcDhcpLseStateOldChAddr_Object = MibScalar
svcDhcpLseStateOldChAddr = _SvcDhcpLseStateOldChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 21),
    _SvcDhcpLseStateOldChAddr_Type()
)
svcDhcpLseStateOldChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpLseStateOldChAddr.setStatus("current")
_SvcDhcpLseStateNewCiAddr_Type = IpAddress
_SvcDhcpLseStateNewCiAddr_Object = MibScalar
svcDhcpLseStateNewCiAddr = _SvcDhcpLseStateNewCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 22),
    _SvcDhcpLseStateNewCiAddr_Type()
)
svcDhcpLseStateNewCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpLseStateNewCiAddr.setStatus("current")
_SvcDhcpLseStateNewChAddr_Type = MacAddress
_SvcDhcpLseStateNewChAddr_Object = MibScalar
svcDhcpLseStateNewChAddr = _SvcDhcpLseStateNewChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 23),
    _SvcDhcpLseStateNewChAddr_Type()
)
svcDhcpLseStateNewChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpLseStateNewChAddr.setStatus("current")
_SvcDhcpClientLease_Type = Integer32
_SvcDhcpClientLease_Object = MibScalar
svcDhcpClientLease = _SvcDhcpClientLease_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 24),
    _SvcDhcpClientLease_Type()
)
svcDhcpClientLease.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpClientLease.setStatus("current")
_SvcDhcpPacketProblem_Type = DisplayString
_SvcDhcpPacketProblem_Object = MibScalar
svcDhcpPacketProblem = _SvcDhcpPacketProblem_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 25),
    _SvcDhcpPacketProblem_Type()
)
svcDhcpPacketProblem.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpPacketProblem.setStatus("current")
_SvcDhcpLseStatePopulateError_Type = DisplayString
_SvcDhcpLseStatePopulateError_Object = MibScalar
svcDhcpLseStatePopulateError = _SvcDhcpLseStatePopulateError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 26),
    _SvcDhcpLseStatePopulateError_Type()
)
svcDhcpLseStatePopulateError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpLseStatePopulateError.setStatus("current")
_HostConnectivityCiAddrType_Type = InetAddressType
_HostConnectivityCiAddrType_Object = MibScalar
hostConnectivityCiAddrType = _HostConnectivityCiAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 27),
    _HostConnectivityCiAddrType_Type()
)
hostConnectivityCiAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    hostConnectivityCiAddrType.setStatus("current")
_HostConnectivityCiAddr_Type = InetAddress
_HostConnectivityCiAddr_Object = MibScalar
hostConnectivityCiAddr = _HostConnectivityCiAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 28),
    _HostConnectivityCiAddr_Type()
)
hostConnectivityCiAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    hostConnectivityCiAddr.setStatus("current")
_HostConnectivityChAddr_Type = MacAddress
_HostConnectivityChAddr_Object = MibScalar
hostConnectivityChAddr = _HostConnectivityChAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 29),
    _HostConnectivityChAddr_Type()
)
hostConnectivityChAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    hostConnectivityChAddr.setStatus("current")
_ProtectedMacForNotify_Type = MacAddress
_ProtectedMacForNotify_Object = MibScalar
protectedMacForNotify = _ProtectedMacForNotify_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 30),
    _ProtectedMacForNotify_Type()
)
protectedMacForNotify.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    protectedMacForNotify.setStatus("current")
_StaticHostDynamicMacIpAddress_Type = IpAddress
_StaticHostDynamicMacIpAddress_Object = MibScalar
staticHostDynamicMacIpAddress = _StaticHostDynamicMacIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 31),
    _StaticHostDynamicMacIpAddress_Type()
)
staticHostDynamicMacIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    staticHostDynamicMacIpAddress.setStatus("current")
_StaticHostDynamicMacConflict_Type = DisplayString
_StaticHostDynamicMacConflict_Object = MibScalar
staticHostDynamicMacConflict = _StaticHostDynamicMacConflict_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 32),
    _StaticHostDynamicMacConflict_Type()
)
staticHostDynamicMacConflict.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    staticHostDynamicMacConflict.setStatus("current")
_TmnxSvcObjRow_Type = RowPointer
_TmnxSvcObjRow_Object = MibScalar
tmnxSvcObjRow = _TmnxSvcObjRow_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 33),
    _TmnxSvcObjRow_Type()
)
tmnxSvcObjRow.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxSvcObjRow.setStatus("obsolete")
_TmnxSvcObjRowDescr_Type = DisplayString
_TmnxSvcObjRowDescr_Object = MibScalar
tmnxSvcObjRowDescr = _TmnxSvcObjRowDescr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 34),
    _TmnxSvcObjRowDescr_Type()
)
tmnxSvcObjRowDescr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxSvcObjRowDescr.setStatus("obsolete")
_TmnxSvcObjTodSuite_Type = DisplayString
_TmnxSvcObjTodSuite_Object = MibScalar
tmnxSvcObjTodSuite = _TmnxSvcObjTodSuite_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 35),
    _TmnxSvcObjTodSuite_Type()
)
tmnxSvcObjTodSuite.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxSvcObjTodSuite.setStatus("obsolete")
_TmnxFailureDescription_Type = DisplayString
_TmnxFailureDescription_Object = MibScalar
tmnxFailureDescription = _TmnxFailureDescription_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 36),
    _TmnxFailureDescription_Type()
)
tmnxFailureDescription.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    tmnxFailureDescription.setStatus("current")
_SvcDhcpProxyError_Type = DisplayString
_SvcDhcpProxyError_Object = MibScalar
svcDhcpProxyError = _SvcDhcpProxyError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 37),
    _SvcDhcpProxyError_Type()
)
svcDhcpProxyError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpProxyError.setStatus("current")
_SvcDhcpCoAError_Type = DisplayString
_SvcDhcpCoAError_Object = MibScalar
svcDhcpCoAError = _SvcDhcpCoAError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 38),
    _SvcDhcpCoAError_Type()
)
svcDhcpCoAError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpCoAError.setStatus("current")
_SvcDhcpSubAuthError_Type = DisplayString
_SvcDhcpSubAuthError_Object = MibScalar
svcDhcpSubAuthError = _SvcDhcpSubAuthError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 39),
    _SvcDhcpSubAuthError_Type()
)
svcDhcpSubAuthError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcDhcpSubAuthError.setStatus("current")


class _SvcTlsMrpAttrRegFailedReason_Type(Integer32):
    """Custom type svcTlsMrpAttrRegFailedReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 1),
          ("attribute-limit-reached", 2),
          ("system-attr-limit-reached", 3),
          ("unsupported-attribute", 4),
          ("mfib-entry-create-failed", 5))
    )


_SvcTlsMrpAttrRegFailedReason_Type.__name__ = "Integer32"
_SvcTlsMrpAttrRegFailedReason_Object = MibScalar
svcTlsMrpAttrRegFailedReason = _SvcTlsMrpAttrRegFailedReason_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 40),
    _SvcTlsMrpAttrRegFailedReason_Type()
)
svcTlsMrpAttrRegFailedReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcTlsMrpAttrRegFailedReason.setStatus("current")


class _SvcTlsMrpAttrType_Type(Unsigned32):
    """Custom type svcTlsMrpAttrType based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SvcTlsMrpAttrType_Type.__name__ = "Unsigned32"
_SvcTlsMrpAttrType_Object = MibScalar
svcTlsMrpAttrType = _SvcTlsMrpAttrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 41),
    _SvcTlsMrpAttrType_Type()
)
svcTlsMrpAttrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcTlsMrpAttrType.setStatus("current")


class _SvcTlsMrpAttrValue_Type(OctetString):
    """Custom type svcTlsMrpAttrValue based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SvcTlsMrpAttrValue_Type.__name__ = "OctetString"
_SvcTlsMrpAttrValue_Object = MibScalar
svcTlsMrpAttrValue = _SvcTlsMrpAttrValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 42),
    _SvcTlsMrpAttrValue_Type()
)
svcTlsMrpAttrValue.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcTlsMrpAttrValue.setStatus("current")
_SvcMstiInstanceId_Type = MstiInstanceId
_SvcMstiInstanceId_Object = MibScalar
svcMstiInstanceId = _SvcMstiInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 43),
    _SvcMstiInstanceId_Type()
)
svcMstiInstanceId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcMstiInstanceId.setStatus("current")
_SvcNotifSapPortId_Type = TmnxPortID
_SvcNotifSapPortId_Object = MibScalar
svcNotifSapPortId = _SvcNotifSapPortId_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 44),
    _SvcNotifSapPortId_Type()
)
svcNotifSapPortId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSapPortId.setStatus("current")
_SvcNotifSapEncapValue_Type = TmnxEncapVal
_SvcNotifSapEncapValue_Object = MibScalar
svcNotifSapEncapValue = _SvcNotifSapEncapValue_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 45),
    _SvcNotifSapEncapValue_Type()
)
svcNotifSapEncapValue.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSapEncapValue.setStatus("current")
_SvcArpHostPopulateError_Type = DisplayString
_SvcArpHostPopulateError_Object = MibScalar
svcArpHostPopulateError = _SvcArpHostPopulateError_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 46),
    _SvcArpHostPopulateError_Type()
)
svcArpHostPopulateError.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcArpHostPopulateError.setStatus("current")
_SvcHostAddrType_Type = InetAddressType
_SvcHostAddrType_Object = MibScalar
svcHostAddrType = _SvcHostAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 47),
    _SvcHostAddrType_Type()
)
svcHostAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcHostAddrType.setStatus("current")


class _SvcHostAddr_Type(InetAddress):
    """Custom type svcHostAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcHostAddr_Type.__name__ = "InetAddress"
_SvcHostAddr_Object = MibScalar
svcHostAddr = _SvcHostAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 48),
    _SvcHostAddr_Type()
)
svcHostAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcHostAddr.setStatus("current")
_SvcNotifSiteName_Type = TNamedItem
_SvcNotifSiteName_Object = MibScalar
svcNotifSiteName = _SvcNotifSiteName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 49),
    _SvcNotifSiteName_Type()
)
svcNotifSiteName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSiteName.setStatus("current")


class _SvcNotifSiteMinDnTimerState_Type(Integer32):
    """Custom type svcNotifSiteMinDnTimerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("started", 1),
          ("cancelled", 2),
          ("extended", 3),
          ("expired", 4))
    )


_SvcNotifSiteMinDnTimerState_Type.__name__ = "Integer32"
_SvcNotifSiteMinDnTimerState_Object = MibScalar
svcNotifSiteMinDnTimerState = _SvcNotifSiteMinDnTimerState_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 50),
    _SvcNotifSiteMinDnTimerState_Type()
)
svcNotifSiteMinDnTimerState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSiteMinDnTimerState.setStatus("current")


class _SvcNotifSiteMinDnTimer_Type(Integer32):
    """Custom type svcNotifSiteMinDnTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SvcNotifSiteMinDnTimer_Type.__name__ = "Integer32"
_SvcNotifSiteMinDnTimer_Object = MibScalar
svcNotifSiteMinDnTimer = _SvcNotifSiteMinDnTimer_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 51),
    _SvcNotifSiteMinDnTimer_Type()
)
svcNotifSiteMinDnTimer.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSiteMinDnTimer.setStatus("current")
if mibBuilder.loadTexts:
    svcNotifSiteMinDnTimer.setUnits("seconds")
_SvcNotifSiteMinDnTimerRemain_Type = Unsigned32
_SvcNotifSiteMinDnTimerRemain_Object = MibScalar
svcNotifSiteMinDnTimerRemain = _SvcNotifSiteMinDnTimerRemain_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 52),
    _SvcNotifSiteMinDnTimerRemain_Type()
)
svcNotifSiteMinDnTimerRemain.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifSiteMinDnTimerRemain.setStatus("current")
if mibBuilder.loadTexts:
    svcNotifSiteMinDnTimerRemain.setUnits("seconds")
_SvcNotifTlsProxyMacAddr_Type = MacAddress
_SvcNotifTlsProxyMacAddr_Object = MibScalar
svcNotifTlsProxyMacAddr = _SvcNotifTlsProxyMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 53),
    _SvcNotifTlsProxyMacAddr_Type()
)
svcNotifTlsProxyMacAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifTlsProxyMacAddr.setStatus("current")
_SvcNotifyMacAddress_Type = MacAddress
_SvcNotifyMacAddress_Object = MibScalar
svcNotifyMacAddress = _SvcNotifyMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 54),
    _SvcNotifyMacAddress_Type()
)
svcNotifyMacAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifyMacAddress.setStatus("current")
_SvcNotifyText_Type = DisplayString
_SvcNotifyText_Object = MibScalar
svcNotifyText = _SvcNotifyText_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 55),
    _SvcNotifyText_Type()
)
svcNotifyText.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifyText.setStatus("current")
_SvcNotifVxlanInstance_Type = TmnxVxlanInstance
_SvcNotifVxlanInstance_Object = MibScalar
svcNotifVxlanInstance = _SvcNotifVxlanInstance_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 56),
    _SvcNotifVxlanInstance_Type()
)
svcNotifVxlanInstance.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifVxlanInstance.setStatus("current")


class _SvcNotifEvpnMHStandbyStatus_Type(Integer32):
    """Custom type svcNotifEvpnMHStandbyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set", 1),
          ("cleared", 2))
    )


_SvcNotifEvpnMHStandbyStatus_Type.__name__ = "Integer32"
_SvcNotifEvpnMHStandbyStatus_Object = MibScalar
svcNotifEvpnMHStandbyStatus = _SvcNotifEvpnMHStandbyStatus_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 57),
    _SvcNotifEvpnMHStandbyStatus_Type()
)
svcNotifEvpnMHStandbyStatus.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifEvpnMHStandbyStatus.setStatus("current")


class _SvcNotifEthSegName_Type(TNamedItem):
    """Custom type svcNotifEthSegName based on TNamedItem"""
    subtypeSpec = TNamedItem.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SvcNotifEthSegName_Type.__name__ = "TNamedItem"
_SvcNotifEthSegName_Object = MibScalar
svcNotifEthSegName = _SvcNotifEthSegName_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 58),
    _SvcNotifEthSegName_Type()
)
svcNotifEthSegName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifEthSegName.setStatus("current")
_SvcNotifInetAddrType_Type = InetAddressType
_SvcNotifInetAddrType_Object = MibScalar
svcNotifInetAddrType = _SvcNotifInetAddrType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 59),
    _SvcNotifInetAddrType_Type()
)
svcNotifInetAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifInetAddrType.setStatus("current")


class _SvcNotifInetAddr_Type(InetAddress):
    """Custom type svcNotifInetAddr based on InetAddress"""
    subtypeSpec = InetAddress.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 0),
        ValueSizeConstraint(4, 4),
        ValueSizeConstraint(16, 16),
    )


_SvcNotifInetAddr_Type.__name__ = "InetAddress"
_SvcNotifInetAddr_Object = MibScalar
svcNotifInetAddr = _SvcNotifInetAddr_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 60),
    _SvcNotifInetAddr_Type()
)
svcNotifInetAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcNotifInetAddr.setStatus("current")
_SvcSrv6FunctionType_Type = TSrv6Function
_SvcSrv6FunctionType_Object = MibScalar
svcSrv6FunctionType = _SvcSrv6FunctionType_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 6, 61),
    _SvcSrv6FunctionType_Type()
)
svcSrv6FunctionType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    svcSrv6FunctionType.setStatus("current")
_TmnxSvcTimeObjs_ObjectIdentity = ObjectIdentity
tmnxSvcTimeObjs = _TmnxSvcTimeObjs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7)
)
_TlsCondStaticMacTblLastChanged_Type = TimeStamp
_TlsCondStaticMacTblLastChanged_Object = MibScalar
tlsCondStaticMacTblLastChanged = _TlsCondStaticMacTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 1),
    _TlsCondStaticMacTblLastChanged_Type()
)
tlsCondStaticMacTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tlsCondStaticMacTblLastChanged.setStatus("current")
_SvcOperGrpBfdTblLastChgd_Type = TimeStamp
_SvcOperGrpBfdTblLastChgd_Object = MibScalar
svcOperGrpBfdTblLastChgd = _SvcOperGrpBfdTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 2),
    _SvcOperGrpBfdTblLastChgd_Type()
)
svcOperGrpBfdTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGrpBfdTblLastChgd.setStatus("current")
_SvcTlsVxlanTblLastChgd_Type = TimeStamp
_SvcTlsVxlanTblLastChgd_Object = MibScalar
svcTlsVxlanTblLastChgd = _SvcTlsVxlanTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 3),
    _SvcTlsVxlanTblLastChgd_Type()
)
svcTlsVxlanTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxlanTblLastChgd.setStatus("obsolete")
_SvcBgpEvpnTableLastChanged_Type = TimeStamp
_SvcBgpEvpnTableLastChanged_Object = MibScalar
svcBgpEvpnTableLastChanged = _SvcBgpEvpnTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 4),
    _SvcBgpEvpnTableLastChanged_Type()
)
svcBgpEvpnTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnTableLastChanged.setStatus("current")
_TmnxIesIfRtrSolTableLastChanged_Type = TimeStamp
_TmnxIesIfRtrSolTableLastChanged_Object = MibScalar
tmnxIesIfRtrSolTableLastChanged = _TmnxIesIfRtrSolTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 5),
    _TmnxIesIfRtrSolTableLastChanged_Type()
)
tmnxIesIfRtrSolTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolTableLastChanged.setStatus("current")
_SvcVsdDomainTblLastChngd_Type = TimeStamp
_SvcVsdDomainTblLastChngd_Object = MibScalar
svcVsdDomainTblLastChngd = _SvcVsdDomainTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 6),
    _SvcVsdDomainTblLastChngd_Type()
)
svcVsdDomainTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainTblLastChngd.setStatus("current")
_SvcTlsProxyArpTblLastChngd_Type = TimeStamp
_SvcTlsProxyArpTblLastChngd_Object = MibScalar
svcTlsProxyArpTblLastChngd = _SvcTlsProxyArpTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 7),
    _SvcTlsProxyArpTblLastChngd_Type()
)
svcTlsProxyArpTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpTblLastChngd.setStatus("current")
_SvcVsdDomainToSvcTblLastChngd_Type = TimeStamp
_SvcVsdDomainToSvcTblLastChngd_Object = MibScalar
svcVsdDomainToSvcTblLastChngd = _SvcVsdDomainToSvcTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 8),
    _SvcVsdDomainToSvcTblLastChngd_Type()
)
svcVsdDomainToSvcTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVsdDomainToSvcTblLastChngd.setStatus("current")
_TmnxSvcIesIfIpoeTableLastChanged_Type = TimeStamp
_TmnxSvcIesIfIpoeTableLastChanged_Object = MibScalar
tmnxSvcIesIfIpoeTableLastChanged = _TmnxSvcIesIfIpoeTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 9),
    _TmnxSvcIesIfIpoeTableLastChanged_Type()
)
tmnxSvcIesIfIpoeTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeTableLastChanged.setStatus("current")
_SvcTlsProxyArpCfgTblLastChngd_Type = TimeStamp
_SvcTlsProxyArpCfgTblLastChngd_Object = MibScalar
svcTlsProxyArpCfgTblLastChngd = _SvcTlsProxyArpCfgTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 11),
    _SvcTlsProxyArpCfgTblLastChngd_Type()
)
svcTlsProxyArpCfgTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpCfgTblLastChngd.setStatus("current")
_SvcVprnInfoTableLastChanged_Type = TimeStamp
_SvcVprnInfoTableLastChanged_Object = MibScalar
svcVprnInfoTableLastChanged = _SvcVprnInfoTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 12),
    _SvcVprnInfoTableLastChanged_Type()
)
svcVprnInfoTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnInfoTableLastChanged.setStatus("current")
_SvcTlsProxyArpStaticTblLastChngd_Type = TimeStamp
_SvcTlsProxyArpStaticTblLastChngd_Object = MibScalar
svcTlsProxyArpStaticTblLastChngd = _SvcTlsProxyArpStaticTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 13),
    _SvcTlsProxyArpStaticTblLastChngd_Type()
)
svcTlsProxyArpStaticTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpStaticTblLastChngd.setStatus("current")
_SvcTlsProxyNdCfgTblLastChngd_Type = TimeStamp
_SvcTlsProxyNdCfgTblLastChngd_Object = MibScalar
svcTlsProxyNdCfgTblLastChngd = _SvcTlsProxyNdCfgTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 14),
    _SvcTlsProxyNdCfgTblLastChngd_Type()
)
svcTlsProxyNdCfgTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdCfgTblLastChngd.setStatus("current")
_SvcTlsProxyNdStaticTblLastChngd_Type = TimeStamp
_SvcTlsProxyNdStaticTblLastChngd_Object = MibScalar
svcTlsProxyNdStaticTblLastChngd = _SvcTlsProxyNdStaticTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 15),
    _SvcTlsProxyNdStaticTblLastChngd_Type()
)
svcTlsProxyNdStaticTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdStaticTblLastChngd.setStatus("current")
_SvcTlsProxyNdTblLastChngd_Type = TimeStamp
_SvcTlsProxyNdTblLastChngd_Object = MibScalar
svcTlsProxyNdTblLastChngd = _SvcTlsProxyNdTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 16),
    _SvcTlsProxyNdTblLastChngd_Type()
)
svcTlsProxyNdTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdTblLastChngd.setStatus("current")
_SvcBgpEvpnMplsTableLastChanged_Type = TimeStamp
_SvcBgpEvpnMplsTableLastChanged_Object = MibScalar
svcBgpEvpnMplsTableLastChanged = _SvcBgpEvpnMplsTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 17),
    _SvcBgpEvpnMplsTableLastChanged_Type()
)
svcBgpEvpnMplsTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnMplsTableLastChanged.setStatus("current")
_SvcTlsBgpEvpnABTnlTblLastChanged_Type = TimeStamp
_SvcTlsBgpEvpnABTnlTblLastChanged_Object = MibScalar
svcTlsBgpEvpnABTnlTblLastChanged = _SvcTlsBgpEvpnABTnlTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 18),
    _SvcTlsBgpEvpnABTnlTblLastChanged_Type()
)
svcTlsBgpEvpnABTnlTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsBgpEvpnABTnlTblLastChanged.setStatus("obsolete")
_SvcVprnBgpAutoBindTblLastChgd_Type = TimeStamp
_SvcVprnBgpAutoBindTblLastChgd_Object = MibScalar
svcVprnBgpAutoBindTblLastChgd = _SvcVprnBgpAutoBindTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 19),
    _SvcVprnBgpAutoBindTblLastChgd_Type()
)
svcVprnBgpAutoBindTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindTblLastChgd.setStatus("current")
_TmnxSvcSysEthSegTblLastChanged_Type = TimeStamp
_TmnxSvcSysEthSegTblLastChanged_Object = MibScalar
tmnxSvcSysEthSegTblLastChanged = _TmnxSvcSysEthSegTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 20),
    _TmnxSvcSysEthSegTblLastChanged_Type()
)
tmnxSvcSysEthSegTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegTblLastChanged.setStatus("current")
_SvcEthSegCarvEviRngTblLastChgd_Type = TimeStamp
_SvcEthSegCarvEviRngTblLastChgd_Object = MibScalar
svcEthSegCarvEviRngTblLastChgd = _SvcEthSegCarvEviRngTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 21),
    _SvcEthSegCarvEviRngTblLastChgd_Type()
)
svcEthSegCarvEviRngTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEthSegCarvEviRngTblLastChgd.setStatus("current")
_SvcEthSegCarvIsidRngTblLastChgd_Type = TimeStamp
_SvcEthSegCarvIsidRngTblLastChgd_Object = MibScalar
svcEthSegCarvIsidRngTblLastChgd = _SvcEthSegCarvIsidRngTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 22),
    _SvcEthSegCarvIsidRngTblLastChgd_Type()
)
svcEthSegCarvIsidRngTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEthSegCarvIsidRngTblLastChgd.setStatus("current")
_SvcVllBgpEvpnABTnlTblLastChanged_Type = TimeStamp
_SvcVllBgpEvpnABTnlTblLastChanged_Object = MibScalar
svcVllBgpEvpnABTnlTblLastChanged = _SvcVllBgpEvpnABTnlTblLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 23),
    _SvcVllBgpEvpnABTnlTblLastChanged_Type()
)
svcVllBgpEvpnABTnlTblLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVllBgpEvpnABTnlTblLastChanged.setStatus("obsolete")
_SvcBgpEvpnVpwsLastTblChg_Type = TimeStamp
_SvcBgpEvpnVpwsLastTblChg_Object = MibScalar
svcBgpEvpnVpwsLastTblChg = _SvcBgpEvpnVpwsLastTblChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 24),
    _SvcBgpEvpnVpwsLastTblChg_Type()
)
svcBgpEvpnVpwsLastTblChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnVpwsLastTblChg.setStatus("current")
_SvcEpipePwPortTableLastChgd_Type = TimeStamp
_SvcEpipePwPortTableLastChgd_Object = MibScalar
svcEpipePwPortTableLastChgd = _SvcEpipePwPortTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 25),
    _SvcEpipePwPortTableLastChgd_Type()
)
svcEpipePwPortTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipePwPortTableLastChgd.setStatus("current")
_TmnxSvcSysVxlanTunTermTblLstChg_Type = TimeStamp
_TmnxSvcSysVxlanTunTermTblLstChg_Object = MibScalar
tmnxSvcSysVxlanTunTermTblLstChg = _TmnxSvcSysVxlanTunTermTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 26),
    _TmnxSvcSysVxlanTunTermTblLstChg_Type()
)
tmnxSvcSysVxlanTunTermTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermTblLstChg.setStatus("current")
_SvcVplsBgpTableLastChanged_Type = TimeStamp
_SvcVplsBgpTableLastChanged_Object = MibScalar
svcVplsBgpTableLastChanged = _SvcVplsBgpTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 27),
    _SvcVplsBgpTableLastChanged_Type()
)
svcVplsBgpTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVplsBgpTableLastChanged.setStatus("current")
_SvcProxyArpNdMacListTblLastChngd_Type = TimeStamp
_SvcProxyArpNdMacListTblLastChngd_Object = MibScalar
svcProxyArpNdMacListTblLastChngd = _SvcProxyArpNdMacListTblLastChngd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 28),
    _SvcProxyArpNdMacListTblLastChngd_Type()
)
svcProxyArpNdMacListTblLastChngd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcProxyArpNdMacListTblLastChngd.setStatus("current")
_SvcTlsProxyArpDynCfgTblLastChgd_Type = TimeStamp
_SvcTlsProxyArpDynCfgTblLastChgd_Object = MibScalar
svcTlsProxyArpDynCfgTblLastChgd = _SvcTlsProxyArpDynCfgTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 29),
    _SvcTlsProxyArpDynCfgTblLastChgd_Type()
)
svcTlsProxyArpDynCfgTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyArpDynCfgTblLastChgd.setStatus("current")
_SvcTlsProxyNdDynCfgTblLastChgd_Type = TimeStamp
_SvcTlsProxyNdDynCfgTblLastChgd_Object = MibScalar
svcTlsProxyNdDynCfgTblLastChgd = _SvcTlsProxyNdDynCfgTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 30),
    _SvcTlsProxyNdDynCfgTblLastChgd_Type()
)
svcTlsProxyNdDynCfgTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsProxyNdDynCfgTblLastChgd.setStatus("current")
_TmnxSvcSysEthSegQTagRngTblLstChd_Type = TimeStamp
_TmnxSvcSysEthSegQTagRngTblLstChd_Object = MibScalar
tmnxSvcSysEthSegQTagRngTblLstChd = _TmnxSvcSysEthSegQTagRngTblLstChd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 31),
    _TmnxSvcSysEthSegQTagRngTblLstChd_Type()
)
tmnxSvcSysEthSegQTagRngTblLstChd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegQTagRngTblLstChd.setStatus("current")
_TmnxSvcSysEthSegVcIdRngTblLstChd_Type = TimeStamp
_TmnxSvcSysEthSegVcIdRngTblLstChd_Object = MibScalar
tmnxSvcSysEthSegVcIdRngTblLstChd = _TmnxSvcSysEthSegVcIdRngTblLstChd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 32),
    _TmnxSvcSysEthSegVcIdRngTblLstChd_Type()
)
tmnxSvcSysEthSegVcIdRngTblLstChd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSysEthSegVcIdRngTblLstChd.setStatus("current")
_TmnxESSTagRngTblLstChd_Type = TimeStamp
_TmnxESSTagRngTblLstChd_Object = MibScalar
tmnxESSTagRngTblLstChd = _TmnxESSTagRngTblLstChd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 33),
    _TmnxESSTagRngTblLstChd_Type()
)
tmnxESSTagRngTblLstChd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESSTagRngTblLstChd.setStatus("current")
_TmnxESSTagCTagRngTblLstChd_Type = TimeStamp
_TmnxESSTagCTagRngTblLstChd_Object = MibScalar
tmnxESSTagCTagRngTblLstChd = _TmnxESSTagCTagRngTblLstChd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 34),
    _TmnxESSTagCTagRngTblLstChd_Type()
)
tmnxESSTagCTagRngTblLstChd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESSTagCTagRngTblLstChd.setStatus("current")
_SvcSysEvpnESDfPrefElecTblLstChgd_Type = TimeStamp
_SvcSysEvpnESDfPrefElecTblLstChgd_Object = MibScalar
svcSysEvpnESDfPrefElecTblLstChgd = _SvcSysEvpnESDfPrefElecTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 35),
    _SvcSysEvpnESDfPrefElecTblLstChgd_Type()
)
svcSysEvpnESDfPrefElecTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefElecTblLstChgd.setStatus("current")
_SvcEpipeVxlanTblLastChgd_Type = TimeStamp
_SvcEpipeVxlanTblLastChgd_Object = MibScalar
svcEpipeVxlanTblLastChgd = _SvcEpipeVxlanTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 36),
    _SvcEpipeVxlanTblLastChgd_Type()
)
svcEpipeVxlanTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxlanTblLastChgd.setStatus("obsolete")
_SvcPbbEvpnIsidRtTblLastChgd_Type = TimeStamp
_SvcPbbEvpnIsidRtTblLastChgd_Object = MibScalar
svcPbbEvpnIsidRtTblLastChgd = _SvcPbbEvpnIsidRtTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 37),
    _SvcPbbEvpnIsidRtTblLastChgd_Type()
)
svcPbbEvpnIsidRtTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtTblLastChgd.setStatus("current")
_TmnxESVxlanInstSvcRngTblLstChd_Type = TimeStamp
_TmnxESVxlanInstSvcRngTblLstChd_Object = MibScalar
tmnxESVxlanInstSvcRngTblLstChd = _TmnxESVxlanInstSvcRngTblLstChd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 38),
    _TmnxESVxlanInstSvcRngTblLstChd_Type()
)
tmnxESVxlanInstSvcRngTblLstChd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxESVxlanInstSvcRngTblLstChd.setStatus("current")
_SvcSysGreEthBrgdTnlTrmTblLstChg_Type = TimeStamp
_SvcSysGreEthBrgdTnlTrmTblLstChg_Object = MibScalar
svcSysGreEthBrgdTnlTrmTblLstChg = _SvcSysGreEthBrgdTnlTrmTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 39),
    _SvcSysGreEthBrgdTnlTrmTblLstChg_Type()
)
svcSysGreEthBrgdTnlTrmTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmTblLstChg.setStatus("current")
_SvcVprnVxlanTunTermTableLastChgd_Type = TimeStamp
_SvcVprnVxlanTunTermTableLastChgd_Object = MibScalar
svcVprnVxlanTunTermTableLastChgd = _SvcVprnVxlanTunTermTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 40),
    _SvcVprnVxlanTunTermTableLastChgd_Type()
)
svcVprnVxlanTunTermTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnVxlanTunTermTableLastChgd.setStatus("current")
_SvcOperGroupConfigTblLastChgd_Type = TimeStamp
_SvcOperGroupConfigTblLastChgd_Object = MibScalar
svcOperGroupConfigTblLastChgd = _SvcOperGroupConfigTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 41),
    _SvcOperGroupConfigTblLastChgd_Type()
)
svcOperGroupConfigTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcOperGroupConfigTblLastChgd.setStatus("current")
_SvcBgpEvpnInstTableLastChgd_Type = TimeStamp
_SvcBgpEvpnInstTableLastChgd_Object = MibScalar
svcBgpEvpnInstTableLastChgd = _SvcBgpEvpnInstTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 42),
    _SvcBgpEvpnInstTableLastChgd_Type()
)
svcBgpEvpnInstTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstTableLastChgd.setStatus("current")
_SvcBgpEvpnInstVxlanTblLastChgd_Type = TimeStamp
_SvcBgpEvpnInstVxlanTblLastChgd_Object = MibScalar
svcBgpEvpnInstVxlanTblLastChgd = _SvcBgpEvpnInstVxlanTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 43),
    _SvcBgpEvpnInstVxlanTblLastChgd_Type()
)
svcBgpEvpnInstVxlanTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstVxlanTblLastChgd.setStatus("current")
_SvcBgpEvpnInstMplsTblLastChgd_Type = TimeStamp
_SvcBgpEvpnInstMplsTblLastChgd_Object = MibScalar
svcBgpEvpnInstMplsTblLastChgd = _SvcBgpEvpnInstMplsTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 44),
    _SvcBgpEvpnInstMplsTblLastChgd_Type()
)
svcBgpEvpnInstMplsTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstMplsTblLastChgd.setStatus("current")
_SvcBgpEvpnInstABTTblLastChgd_Type = TimeStamp
_SvcBgpEvpnInstABTTblLastChgd_Object = MibScalar
svcBgpEvpnInstABTTblLastChgd = _SvcBgpEvpnInstABTTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 45),
    _SvcBgpEvpnInstABTTblLastChgd_Type()
)
svcBgpEvpnInstABTTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBgpEvpnInstABTTblLastChgd.setStatus("current")
_SvcTlsVxInstTableLastChgd_Type = TimeStamp
_SvcTlsVxInstTableLastChgd_Object = MibScalar
svcTlsVxInstTableLastChgd = _SvcTlsVxInstTableLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 46),
    _SvcTlsVxInstTableLastChgd_Type()
)
svcTlsVxInstTableLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsVxInstTableLastChgd.setStatus("current")
_SvcEpipeVxInstTblLastChgd_Type = TimeStamp
_SvcEpipeVxInstTblLastChgd_Object = MibScalar
svcEpipeVxInstTblLastChgd = _SvcEpipeVxInstTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 47),
    _SvcEpipeVxInstTblLastChgd_Type()
)
svcEpipeVxInstTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEpipeVxInstTblLastChgd.setStatus("current")
_SvcVprnTacPlusTblLastChgd_Type = TimeStamp
_SvcVprnTacPlusTblLastChgd_Object = MibScalar
svcVprnTacPlusTblLastChgd = _SvcVprnTacPlusTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 48),
    _SvcVprnTacPlusTblLastChgd_Type()
)
svcVprnTacPlusTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTacPlusTblLastChgd.setStatus("current")
_SvcVprnTacPlusServerTblLastChgd_Type = TimeStamp
_SvcVprnTacPlusServerTblLastChgd_Object = MibScalar
svcVprnTacPlusServerTblLastChgd = _SvcVprnTacPlusServerTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 49),
    _SvcVprnTacPlusServerTblLastChgd_Type()
)
svcVprnTacPlusServerTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTacPlusServerTblLastChgd.setStatus("current")
_SvcVprnTcPlusPriLvlMpTblLstChgd_Type = TimeStamp
_SvcVprnTcPlusPriLvlMpTblLstChgd_Object = MibScalar
svcVprnTcPlusPriLvlMpTblLstChgd = _SvcVprnTcPlusPriLvlMpTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 50),
    _SvcVprnTcPlusPriLvlMpTblLstChgd_Type()
)
svcVprnTcPlusPriLvlMpTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnTcPlusPriLvlMpTblLstChgd.setStatus("current")
_SvcVprnLdapTblLastChgd_Type = TimeStamp
_SvcVprnLdapTblLastChgd_Object = MibScalar
svcVprnLdapTblLastChgd = _SvcVprnLdapTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 51),
    _SvcVprnLdapTblLastChgd_Type()
)
svcVprnLdapTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapTblLastChgd.setStatus("current")
_SvcVprnLdapServerTblLstChgd_Type = TimeStamp
_SvcVprnLdapServerTblLstChgd_Object = MibScalar
svcVprnLdapServerTblLstChgd = _SvcVprnLdapServerTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 52),
    _SvcVprnLdapServerTblLstChgd_Type()
)
svcVprnLdapServerTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnLdapServerTblLstChgd.setStatus("current")
_SvcVprnRadiusTblLastChgd_Type = TimeStamp
_SvcVprnRadiusTblLastChgd_Object = MibScalar
svcVprnRadiusTblLastChgd = _SvcVprnRadiusTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 53),
    _SvcVprnRadiusTblLastChgd_Type()
)
svcVprnRadiusTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusTblLastChgd.setStatus("current")
_SvcVprnRadiusServerTblLstChgd_Type = TimeStamp
_SvcVprnRadiusServerTblLstChgd_Object = MibScalar
svcVprnRadiusServerTblLstChgd = _SvcVprnRadiusServerTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 54),
    _SvcVprnRadiusServerTblLstChgd_Type()
)
svcVprnRadiusServerTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnRadiusServerTblLstChgd.setStatus("current")
_SvcVprnServerCtlTblLstChgd_Type = TimeStamp
_SvcVprnServerCtlTblLstChgd_Object = MibScalar
svcVprnServerCtlTblLstChgd = _SvcVprnServerCtlTblLstChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 55),
    _SvcVprnServerCtlTblLstChgd_Type()
)
svcVprnServerCtlTblLstChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcVprnServerCtlTblLstChgd.setStatus("current")
_SvcRoutedVplsEvpnGWTblLastChgd_Type = TimeStamp
_SvcRoutedVplsEvpnGWTblLastChgd_Object = MibScalar
svcRoutedVplsEvpnGWTblLastChgd = _SvcRoutedVplsEvpnGWTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 56),
    _SvcRoutedVplsEvpnGWTblLastChgd_Type()
)
svcRoutedVplsEvpnGWTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWTblLastChgd.setStatus("current")
_SvcRvplsEvpnArpAdvrtTblLstChg_Type = TimeStamp
_SvcRvplsEvpnArpAdvrtTblLstChg_Object = MibScalar
svcRvplsEvpnArpAdvrtTblLstChg = _SvcRvplsEvpnArpAdvrtTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 57),
    _SvcRvplsEvpnArpAdvrtTblLstChg_Type()
)
svcRvplsEvpnArpAdvrtTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRvplsEvpnArpAdvrtTblLstChg.setStatus("current")
_SvcRvplsEvpnNdAdvrtTblLstChg_Type = TimeStamp
_SvcRvplsEvpnNdAdvrtTblLstChg_Object = MibScalar
svcRvplsEvpnNdAdvrtTblLstChg = _SvcRvplsEvpnNdAdvrtTblLstChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 58),
    _SvcRvplsEvpnNdAdvrtTblLstChg_Type()
)
svcRvplsEvpnNdAdvrtTblLstChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRvplsEvpnNdAdvrtTblLstChg.setStatus("current")
_SvcMacListTableLastChanged_Type = TimeStamp
_SvcMacListTableLastChanged_Object = MibScalar
svcMacListTableLastChanged = _SvcMacListTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 59),
    _SvcMacListTableLastChanged_Type()
)
svcMacListTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacListTableLastChanged.setStatus("current")
_SvcMacListEntryTableLastChanged_Type = TimeStamp
_SvcMacListEntryTableLastChanged_Object = MibScalar
svcMacListEntryTableLastChanged = _SvcMacListEntryTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 60),
    _SvcMacListEntryTableLastChanged_Type()
)
svcMacListEntryTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcMacListEntryTableLastChanged.setStatus("current")
_SvcEvpnVpwsLocalAcTblLastChg_Type = TimeStamp
_SvcEvpnVpwsLocalAcTblLastChg_Object = MibScalar
svcEvpnVpwsLocalAcTblLastChg = _SvcEvpnVpwsLocalAcTblLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 61),
    _SvcEvpnVpwsLocalAcTblLastChg_Type()
)
svcEvpnVpwsLocalAcTblLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVpwsLocalAcTblLastChg.setStatus("current")
_SvcEvpnVpwsRemoteAcTblLastChg_Type = TimeStamp
_SvcEvpnVpwsRemoteAcTblLastChg_Object = MibScalar
svcEvpnVpwsRemoteAcTblLastChg = _SvcEvpnVpwsRemoteAcTblLastChg_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 62),
    _SvcEvpnVpwsRemoteAcTblLastChg_Type()
)
svcEvpnVpwsRemoteAcTblLastChg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnVpwsRemoteAcTblLastChg.setStatus("current")
_IesIfTableLastChanged_Type = TimeStamp
_IesIfTableLastChanged_Object = MibScalar
iesIfTableLastChanged = _IesIfTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 63),
    _IesIfTableLastChanged_Type()
)
iesIfTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iesIfTableLastChanged.setStatus("current")
_SvcBaseInfoTableLastChanged_Type = TimeStamp
_SvcBaseInfoTableLastChanged_Object = MibScalar
svcBaseInfoTableLastChanged = _SvcBaseInfoTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 64),
    _SvcBaseInfoTableLastChanged_Type()
)
svcBaseInfoTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcBaseInfoTableLastChanged.setStatus("current")
_SvcTlsInfoTableLastChanged_Type = TimeStamp
_SvcTlsInfoTableLastChanged_Object = MibScalar
svcTlsInfoTableLastChanged = _SvcTlsInfoTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 65),
    _SvcTlsInfoTableLastChanged_Type()
)
svcTlsInfoTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcTlsInfoTableLastChanged.setStatus("current")
_TmnxSvcSubTableLastChanged_Type = TimeStamp
_TmnxSvcSubTableLastChanged_Object = MibScalar
tmnxSvcSubTableLastChanged = _TmnxSvcSubTableLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 68),
    _TmnxSvcSubTableLastChanged_Type()
)
tmnxSvcSubTableLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSubTableLastChanged.setStatus("current")
_TmnxSvcSubMonOperGrpTableLastCh_Type = TimeStamp
_TmnxSvcSubMonOperGrpTableLastCh_Object = MibScalar
tmnxSvcSubMonOperGrpTableLastCh = _TmnxSvcSubMonOperGrpTableLastCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 69),
    _TmnxSvcSubMonOperGrpTableLastCh_Type()
)
tmnxSvcSubMonOperGrpTableLastCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tmnxSvcSubMonOperGrpTableLastCh.setStatus("current")
_SvcRoutedVplsEvpnGWDrTblLastChgd_Type = TimeStamp
_SvcRoutedVplsEvpnGWDrTblLastChgd_Object = MibScalar
svcRoutedVplsEvpnGWDrTblLastChgd = _SvcRoutedVplsEvpnGWDrTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 70),
    _SvcRoutedVplsEvpnGWDrTblLastChgd_Type()
)
svcRoutedVplsEvpnGWDrTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrTblLastChgd.setStatus("current")
_SvcEvpnInstMplsTEPEgrLblTnlTblLC_Type = TimeStamp
_SvcEvpnInstMplsTEPEgrLblTnlTblLC_Object = MibScalar
svcEvpnInstMplsTEPEgrLblTnlTblLC = _SvcEvpnInstMplsTEPEgrLblTnlTblLC_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 71),
    _SvcEvpnInstMplsTEPEgrLblTnlTblLC_Type()
)
svcEvpnInstMplsTEPEgrLblTnlTblLC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsTEPEgrLblTnlTblLC.setStatus("current")
_SvcEvpnInstMplsESDestTEPTblLstCh_Type = TimeStamp
_SvcEvpnInstMplsESDestTEPTblLstCh_Object = MibScalar
svcEvpnInstMplsESDestTEPTblLstCh = _SvcEvpnInstMplsESDestTEPTblLstCh_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 72),
    _SvcEvpnInstMplsESDestTEPTblLstCh_Type()
)
svcEvpnInstMplsESDestTEPTblLstCh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTEPTblLstCh.setStatus("current")
_SvcEvpnInstMplsESDestTblLastChgd_Type = TimeStamp
_SvcEvpnInstMplsESDestTblLastChgd_Object = MibScalar
svcEvpnInstMplsESDestTblLastChgd = _SvcEvpnInstMplsESDestTblLastChgd_Object(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 4, 7, 73),
    _SvcEvpnInstMplsESDestTblLastChgd_Type()
)
svcEvpnInstMplsESDestTblLastChgd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcEvpnInstMplsESDestTblLastChgd.setStatus("current")
_TmnxServNotifications_ObjectIdentity = ObjectIdentity
tmnxServNotifications = _TmnxServNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4)
)
_CustTrapsPrefix_ObjectIdentity = ObjectIdentity
custTrapsPrefix = _CustTrapsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1)
)
_CustTraps_ObjectIdentity = ObjectIdentity
custTraps = _CustTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1, 0)
)
_SvcTrapsPrefix_ObjectIdentity = ObjectIdentity
svcTrapsPrefix = _SvcTrapsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2)
)
_SvcTraps_ObjectIdentity = ObjectIdentity
svcTraps = _SvcTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0)
)
_TstpTrapsPrefix_ObjectIdentity = ObjectIdentity
tstpTrapsPrefix = _TstpTrapsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5)
)
_TstpTraps_ObjectIdentity = ObjectIdentity
tstpTraps = _TstpTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0)
)
svcDhcpLeaseStateEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseStateModifyEntry")
)
svcDhcpLeaseStateModifyEntry.setIndexNames(*svcDhcpLeaseStateEntry.getIndexNames())
svcDhcpLeaseStateEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseStateActionEntry")
)
svcDhcpLeaseStateActionEntry.setIndexNames(*svcDhcpLeaseStateEntry.getIndexNames())
svcTlsInfoEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcTlsBackboneInfoEntry")
)
svcTlsBackboneInfoEntry.setIndexNames(*svcTlsInfoEntry.getIndexNames())
svcDhcpLeaseStateEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseStateBgpEntry")
)
svcDhcpLeaseStateBgpEntry.setIndexNames(*svcDhcpLeaseStateEntry.getIndexNames())
svcArpHostEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcArpHostBgpEntry")
)
svcArpHostBgpEntry.setIndexNames(*svcArpHostEntry.getIndexNames())
svcDhcpLeaseEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseModifyEntry")
)
svcDhcpLeaseModifyEntry.setIndexNames(*svcDhcpLeaseEntry.getIndexNames())
svcDhcpLeaseEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseActionEntry")
)
svcDhcpLeaseActionEntry.setIndexNames(*svcDhcpLeaseEntry.getIndexNames())
svcDhcpLeaseEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseBgpEntry")
)
svcDhcpLeaseBgpEntry.setIndexNames(*svcDhcpLeaseEntry.getIndexNames())
svcTlsInfoEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcTlsExtEntry")
)
svcTlsExtEntry.setIndexNames(*svcTlsInfoEntry.getIndexNames())
iesIfEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "tmnxIesIfRtrSolicitEntry")
)
tmnxIesIfRtrSolicitEntry.setIndexNames(*iesIfEntry.getIndexNames())
svcDhcpLeaseEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseRipEntry")
)
svcDhcpLeaseRipEntry.setIndexNames(*svcDhcpLeaseEntry.getIndexNames())
svcArpHostEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcArpHostRipEntry")
)
svcArpHostRipEntry.setIndexNames(*svcArpHostEntry.getIndexNames())
svcVsdDomainEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcVsdDomainParamsExtEntry")
)
svcVsdDomainParamsExtEntry.setIndexNames(*svcVsdDomainEntry.getIndexNames())
svcDhcpLeaseEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcDhcpLeaseExEntry")
)
svcDhcpLeaseExEntry.setIndexNames(*svcDhcpLeaseEntry.getIndexNames())
svcArpHostEntry.registerAugmentions(
    ("TIMETRA-SERV-MIB",
     "svcArpHostExEntry")
)
svcArpHostExEntry.setIndexNames(*svcArpHostEntry.getIndexNames())

# Managed Objects groups

tmnxCustV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 100)
)
tmnxCustV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custNumEntries"),
        ("TIMETRA-SERV-MIB", "custNextFreeId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custRowStatus"),
        ("TIMETRA-SERV-MIB", "custDescription"),
        ("TIMETRA-SERV-MIB", "custContact"),
        ("TIMETRA-SERV-MIB", "custPhone"),
        ("TIMETRA-SERV-MIB", "custLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteRowStatus"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDescription"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteScope"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteAssignment"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIngressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteTodSuite"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressAggRateLimit"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSCIR"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"))
)
if mibBuilder.loadTexts:
    tmnxCustV6v0Group.setStatus("obsolete")

tmnxCustV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 102)
)
tmnxCustV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custNumEntries"),
        ("TIMETRA-SERV-MIB", "custNextFreeId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custRowStatus"),
        ("TIMETRA-SERV-MIB", "custDescription"),
        ("TIMETRA-SERV-MIB", "custContact"),
        ("TIMETRA-SERV-MIB", "custPhone"),
        ("TIMETRA-SERV-MIB", "custLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteRowStatus"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDescription"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteScope"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteAssignment"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIngressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteTodSuite"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressAggRateLimit"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSCIR"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteSubscriberMss"))
)
if mibBuilder.loadTexts:
    tmnxCustV8v0Group.setStatus("obsolete")

tmnxCustV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 103)
)
tmnxCustV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custMultSvcSiteIngPolcrCtrlPolcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgrPolcrCtrlPolcy"))
)
if mibBuilder.loadTexts:
    tmnxCustV9v0Group.setStatus("current")

tmnxCustV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 104)
)
tmnxCustV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custNumEntries"),
        ("TIMETRA-SERV-MIB", "custNextFreeId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custRowStatus"),
        ("TIMETRA-SERV-MIB", "custDescription"),
        ("TIMETRA-SERV-MIB", "custContact"),
        ("TIMETRA-SERV-MIB", "custPhone"),
        ("TIMETRA-SERV-MIB", "custLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteRowStatus"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDescription"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteScope"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteAssignment"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIngressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteTodSuite"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressAggRateLimit"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteSubscriberMss"))
)
if mibBuilder.loadTexts:
    tmnxCustV11v0Group.setStatus("obsolete")

tmnxCustObsoletedV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 105)
)
tmnxCustObsoletedV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custMssIngQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSPIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSCIR"))
)
if mibBuilder.loadTexts:
    tmnxCustObsoletedV11v0Group.setStatus("current")

tmnxCustV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 472)
)
tmnxCustV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custNumEntries"),
        ("TIMETRA-SERV-MIB", "custNextFreeId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custRowStatus"),
        ("TIMETRA-SERV-MIB", "custDescription"),
        ("TIMETRA-SERV-MIB", "custContact"),
        ("TIMETRA-SERV-MIB", "custPhone"),
        ("TIMETRA-SERV-MIB", "custLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteRowStatus"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDescription"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteScope"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteAssignment"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIngressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteTodSuite"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteSubscriberMss"))
)
if mibBuilder.loadTexts:
    tmnxCustV13v0Group.setStatus("obsolete")

tmnxCustObsoletedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 473)
)
tmnxCustObsoletedV13v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressAggRateLimit")
)
if mibBuilder.loadTexts:
    tmnxCustObsoletedV13v0Group.setStatus("current")

tmnxCustV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 503)
)
tmnxCustV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custNumEntries"),
        ("TIMETRA-SERV-MIB", "custNextFreeId"),
        ("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custRowStatus"),
        ("TIMETRA-SERV-MIB", "custDescription"),
        ("TIMETRA-SERV-MIB", "custContact"),
        ("TIMETRA-SERV-MIB", "custPhone"),
        ("TIMETRA-SERV-MIB", "custLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteRowStatus"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDescription"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteScope"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteAssignment"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIngressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressSchedulerPolicy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custIngQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedPackets"),
        ("TIMETRA-SERV-MIB", "custEgrQosSchedStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortSchedFwdOctets"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSRowStatus"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSOverrideFlags"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSSummedCIR"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteFrameBasedAccnt"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteSubscriberMss"))
)
if mibBuilder.loadTexts:
    tmnxCustV14v0Group.setStatus("current")

tmnxCustObsoletedV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 2, 504)
)
tmnxCustObsoletedV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custMultSvcSiteTodSuite"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCurrentEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedIngrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteIntendedEgrSchedPlcy"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custIngSchedPlcyPortStatsFwdOct"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdPkt"),
        ("TIMETRA-SERV-MIB", "custEgrSchedPlcyPortStatsFwdOct"))
)
if mibBuilder.loadTexts:
    tmnxCustObsoletedV14v0Group.setStatus("current")

tmnxSvcV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 101)
)
tmnxSvcV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcDefMeshVcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcAutoBind"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcRadiusUserNameType"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcRadiusPEDiscPolicy"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscoveryShutdown"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"))
)
if mibBuilder.loadTexts:
    tmnxSvcV6v0Group.setStatus("obsolete")

tmnxSvcTlsV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 102)
)
tmnxSvcTlsV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsMacLearning"),
        ("TIMETRA-SERV-MIB", "svcTlsDiscardUnknownDest"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumStaticEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbLocalAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbRemoteAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsStpPriority"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTimeSinceTopologyChange"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTopologyChanges"),
        ("TIMETRA-SERV-MIB", "svcTlsStpDesignatedRoot"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRootCost"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRootPort"),
        ("TIMETRA-SERV-MIB", "svcTlsStpMaxAge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpHelloTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpForwardDelay"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeMaxAge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeHelloTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeForwardDelay"),
        ("TIMETRA-SERV-MIB", "svcTlsStpOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVirtualRootBridgeStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMacAgeing"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTopologyChangeActive"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsVpnId"),
        ("TIMETRA-SERV-MIB", "svcTlsCustId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVersion"),
        ("TIMETRA-SERV-MIB", "svcTlsStpHoldCount"),
        ("TIMETRA-SERV-MIB", "svcTlsStpPrimaryBridge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeInstanceId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVcpOperProtocol"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveMaxRate"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveRetryTimeout"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMacRelearnOnly"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMacFlushOnFail"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRegionName"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRegionRevision"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeMaxHops"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRegionalRoot"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistIntRootCost"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRemainingHopCount"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRegionalRootPort"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumLearnedEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumOamEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumDhcpEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumHostEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvAction"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvSrcIp"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvInterval"),
        ("TIMETRA-SERV-MIB", "svcTlsPriPortsCumulativeFactor"),
        ("TIMETRA-SERV-MIB", "svcTlsSecPortsCumulativeFactor"),
        ("TIMETRA-SERV-MIB", "svcTlsL2ptTermEnabled"),
        ("TIMETRA-SERV-MIB", "svcTlsPropagateMacFlush"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpMaxAttributes"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttributeCount"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpFailedRegisterCount"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpFloodTime"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMcPathMgmtPlcyName"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpAdminQinqFixedTagVal"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsV6v0Group.setStatus("obsolete")

tmnxSvcTlsFdbV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 103)
)
tmnxSvcTlsFdbV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbMacAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsFdbType"),
        ("TIMETRA-SERV-MIB", "tlsFdbLocale"),
        ("TIMETRA-SERV-MIB", "tlsFdbPortId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsFdbSdpId"),
        ("TIMETRA-SERV-MIB", "tlsFdbVcId"),
        ("TIMETRA-SERV-MIB", "tlsFdbVpnId"),
        ("TIMETRA-SERV-MIB", "tlsFdbCustId"),
        ("TIMETRA-SERV-MIB", "tlsFdbLastStateChange"),
        ("TIMETRA-SERV-MIB", "tlsFdbProtected"),
        ("TIMETRA-SERV-MIB", "tlsFdbBackboneDstMac"),
        ("TIMETRA-SERV-MIB", "tlsFdbNumIVplsMac"),
        ("TIMETRA-SERV-MIB", "tlsFdbEndPointName"),
        ("TIMETRA-SERV-MIB", "tlsFdbEPMacOperSdpId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEPMacOperVcId"),
        ("TIMETRA-SERV-MIB", "tlsFdbPbbNumEpipes"),
        ("TIMETRA-SERV-MIB", "tlsProtMacRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsProtMacLastMgmtChange"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsFdbV6v0Group.setStatus("obsolete")

tmnxSvcIesIfV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 104)
)
tmnxSvcIesIfV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfIndex"),
        ("TIMETRA-SERV-MIB", "iesIfRowStatus"),
        ("TIMETRA-SERV-MIB", "iesIfName"),
        ("TIMETRA-SERV-MIB", "iesIfDescription"),
        ("TIMETRA-SERV-MIB", "iesIfAdminStatus"),
        ("TIMETRA-SERV-MIB", "iesIfOperStatus"),
        ("TIMETRA-SERV-MIB", "iesIfLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "iesIfVpnId"),
        ("TIMETRA-SERV-MIB", "iesIfCustId"),
        ("TIMETRA-SERV-MIB", "iesIfLoopback"),
        ("TIMETRA-SERV-MIB", "iesIfLastStatusChange"),
        ("TIMETRA-SERV-MIB", "iesIfType"),
        ("TIMETRA-SERV-MIB", "iesIfShcvSource"),
        ("TIMETRA-SERV-MIB", "iesIfShcvAction"),
        ("TIMETRA-SERV-MIB", "iesIfShcvInterval"),
        ("TIMETRA-SERV-MIB", "iesGrpIfOperUpWhileEmpty"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV6v0Group.setStatus("current")

tmnxSvcTlsShgV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 105)
)
tmnxSvcTlsShgV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsShgRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsShgCustId"),
        ("TIMETRA-SERV-MIB", "tlsShgInstanceId"),
        ("TIMETRA-SERV-MIB", "tlsShgDescription"),
        ("TIMETRA-SERV-MIB", "tlsShgLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsShgResidential"),
        ("TIMETRA-SERV-MIB", "tlsShgRestProtSrcMac"),
        ("TIMETRA-SERV-MIB", "tlsShgRestUnprotDstMac"),
        ("TIMETRA-SERV-MIB", "tlsShgCreationOrigin"),
        ("TIMETRA-SERV-MIB", "tlsShgRestProtSrcMacAction"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsShgV6v0Group.setStatus("current")

tmnxSvcTlsMFibV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 106)
)
tmnxSvcTlsMFibV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsMFibFwdOrBlk"),
        ("TIMETRA-SERV-MIB", "tlsMFibSvcId"),
        ("TIMETRA-SERV-MIB", "tlsMFibStatsForwardedPkts"),
        ("TIMETRA-SERV-MIB", "tlsMFibStatsForwardedOctets"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsMFibV6v0Group.setStatus("current")

tmnxSvcRdntV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 107)
)
tmnxSvcRdntV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsRdntGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpDescription"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpMemberRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpMemberLastMgmtChange"))
)
if mibBuilder.loadTexts:
    tmnxSvcRdntV6v0Group.setStatus("obsolete")

tmnxSvcTlsMstiV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 108)
)
tmnxSvcTlsMstiV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsMstiRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsMstiPriority"),
        ("TIMETRA-SERV-MIB", "tlsMstiLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsMstiRegionalRoot"),
        ("TIMETRA-SERV-MIB", "tlsMstiIntRootCost"),
        ("TIMETRA-SERV-MIB", "tlsMstiRemainingHopCount"),
        ("TIMETRA-SERV-MIB", "tlsMstiRegionalRootPort"),
        ("TIMETRA-SERV-MIB", "tlsMstiMvplsRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsMstiV6v0Group.setStatus("current")

tmnxSvcTlsEgrV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 109)
)
tmnxSvcTlsEgrV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsEgrMcGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpDescription"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpChainLimit"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpEncapType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpDot1qEtherType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpQinqEtherType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpMacFilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpIpFilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpIpv6FilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpQinqFixedTagPosition"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpOperQinqFixedTagVal"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsEgrV6v0Group.setStatus("obsolete")

tmnxSvcDhcpV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 110)
)
tmnxSvcDhcpV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLseStateLocale"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePortId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSdpId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateVcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRemainLseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOption82"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePersistKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAID"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAIDType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateCiAddrMaskLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMaskTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMask"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouterTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseStart"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLastRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseEnd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginLeaseInfo"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateLeaseSplitActive"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNextHopMacAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySlaProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEvaluateState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifyAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateForceRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV6v0Group.setStatus("obsolete")

tmnxSvcEndPointV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 111)
)
tmnxSvcEndPointV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEndPointRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEndPointDescription"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveType"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActivePortId"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveEncap"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveSdpId"),
        ("TIMETRA-SERV-MIB", "svcEndPointForceSwitchOver"),
        ("TIMETRA-SERV-MIB", "svcEndPointForceSwitchOverSdpId"),
        ("TIMETRA-SERV-MIB", "svcEndPointActiveHoldDelay"),
        ("TIMETRA-SERV-MIB", "svcEndPointIgnoreStandbySig"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacPinning"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimit"),
        ("TIMETRA-SERV-MIB", "svcEndPointSuppressStandbySig"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveChangeCount"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveLastChange"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveUpTime"),
        ("TIMETRA-SERV-MIB", "svcEndPointRevertTime"),
        ("TIMETRA-SERV-MIB", "svcEndPointRevertTimeCountDn"))
)
if mibBuilder.loadTexts:
    tmnxSvcEndPointV6v0Group.setStatus("current")

tmnxSvcPEV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 112)
)
tmnxSvcPEV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyPassword"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyInterval"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyTimeout"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddressType"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddress"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerSecret"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerPort"))
)
if mibBuilder.loadTexts:
    tmnxSvcPEV6v0Group.setStatus("obsolete")

tmnxSvcIfDHCP6V6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 114)
)
tmnxSvcIfDHCP6V6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIfDHCP6MsgStatsLstClrd"),
        ("TIMETRA-SERV-MIB", "svcIfDHCP6MsgStatsRcvd"),
        ("TIMETRA-SERV-MIB", "svcIfDHCP6MsgStatsSent"),
        ("TIMETRA-SERV-MIB", "svcIfDHCP6MsgStatsDropped"))
)
if mibBuilder.loadTexts:
    tmnxSvcIfDHCP6V6v0Group.setStatus("current")

tmnxSvcTlsBackbone6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 115)
)
tmnxSvcTlsBackbone6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBackboneSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcISID"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneOperSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneOperVplsSvcISID"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneLDPMacFlush"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsStp"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsBackbone6v0Group.setStatus("obsolete")

tmnxSvcTlsBgpV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 116)
)
tmnxSvcTlsBgpV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpADTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVplsId"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiPrefix"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADAdminStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsBgpV6v0Group.setStatus("obsolete")

tmnxSvcEpipeV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 117)
)
tmnxSvcEpipeV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipePbbTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbBvplsSvcId"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbBvplsDstMac"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbSvcISID"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbOperState"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbFlooding"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbLastStatusChange"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeV6v0Group.setStatus("current")

tmnxSvcTlsPipV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 118)
)
tmnxSvcTlsPipV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsPipStpPortState"),
        ("TIMETRA-SERV-MIB", "tlsPipStpPortRole"),
        ("TIMETRA-SERV-MIB", "tlsPipStpDesignatedBridge"),
        ("TIMETRA-SERV-MIB", "tlsPipStpDesignatedPort"),
        ("TIMETRA-SERV-MIB", "tlsPipStpException"),
        ("TIMETRA-SERV-MIB", "tlsPipStpForwardTransitions"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInConfigBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInTcnBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInRstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInMstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInBadBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutConfigBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutTcnBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutRstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutMstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOperStatus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpMvplsPruneState"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOperProtocol"),
        ("TIMETRA-SERV-MIB", "tlsPipStpPortNum"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiPortRole"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiPortState"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiDesignatedBridge"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiDesignatedPort"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsPipV6v0Group.setStatus("obsolete")

tmnxApipeV3v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 119)
)
tmnxApipeV3v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcApipeInterworking")
)
if mibBuilder.loadTexts:
    tmnxApipeV3v0Group.setStatus("current")

tmnxSvcRoutedCOV5v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 120)
)
tmnxSvcRoutedCOV5v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfParentIf"),
        ("TIMETRA-SERV-MIB", "iesIfFwdServId"),
        ("TIMETRA-SERV-MIB", "iesIfFwdSubIf"),
        ("TIMETRA-SERV-MIB", "iesGrpIfRedInterface"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumStaticHosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDynamicHosts"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV5v0Group.setStatus("obsolete")

tmnxSvcBsxV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 121)
)
tmnxSvcBsxV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLseStateAppProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifyAppProfile"))
)
if mibBuilder.loadTexts:
    tmnxSvcBsxV6v0Group.setStatus("obsolete")

tmnxSvcTlsBackbone6v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 122)
)
tmnxSvcTlsBackbone6v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBackboneSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcISID"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneOperSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneOperVplsSvcISID"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneLDPMacFlush"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneLDPMacFlushNotMine"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneVplsStp"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsBackbone6v1Group.setStatus("current")

tmnxArpHostGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 130)
)
tmnxArpHostGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcArpHostLocale"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapPortId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostSdpId"),
        ("TIMETRA-SERV-MIB", "svcArpHostVcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostStart"),
        ("TIMETRA-SERV-MIB", "svcArpHostLastAuth"),
        ("TIMETRA-SERV-MIB", "svcArpHostRefresh"),
        ("TIMETRA-SERV-MIB", "svcArpHostRemainingTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAppProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAncpString"),
        ("TIMETRA-SERV-MIB", "svcArpHostInterDestId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcArpHostMacAddr"),
        ("TIMETRA-SERV-MIB", "svcArpHostPersistKey"),
        ("TIMETRA-SERV-MIB", "svcArpHostCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfAdminState"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHostsSap"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostDefaultSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtStatus"))
)
if mibBuilder.loadTexts:
    tmnxArpHostGroup.setStatus("obsolete")

svcIgmpTrkGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 131)
)
svcIgmpTrkGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIgmpTrkTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkAdminState"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkExpiryTime"))
)
if mibBuilder.loadTexts:
    svcIgmpTrkGroup.setStatus("current")

svcTlsMacV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 132)
)
svcTlsMacV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsMacMoveNumRetries"),
        ("TIMETRA-SERV-MIB", "svcTlsMacSubNetLen"),
        ("TIMETRA-SERV-MIB", "svcTlsSendFlushOnBVplsFail"),
        ("TIMETRA-SERV-MIB", "svcTlsPropMacFlushFromBVpls"))
)
if mibBuilder.loadTexts:
    svcTlsMacV7v0Group.setStatus("current")

tmnxSvcRoutedCOV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 133)
)
tmnxSvcRoutedCOV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfParentIf"),
        ("TIMETRA-SERV-MIB", "iesIfFwdServId"),
        ("TIMETRA-SERV-MIB", "iesIfFwdSubIf"),
        ("TIMETRA-SERV-MIB", "iesGrpIfRedInterface"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumStaticHosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDynamicHosts"),
        ("TIMETRA-SERV-MIB", "iesIfPrivateRetailSubnets"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDhcpLeaseStates"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumPppoeSessions"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumArpHosts"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV7v0Group.setStatus("obsolete")

svcTlsEndPointV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 134)
)
svcTlsEndPointV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEndPointMCEPId"),
        ("TIMETRA-SERV-MIB", "svcEndPointMCEPPeerAddr"),
        ("TIMETRA-SERV-MIB", "svcEndPointMCEPPeerAddrType"),
        ("TIMETRA-SERV-MIB", "svcEndPointMCEPPeerName"),
        ("TIMETRA-SERV-MIB", "svcEndPointMCEPPsvModeActive"),
        ("TIMETRA-SERV-MIB", "svcEndPointBlockOnMeshFail"),
        ("TIMETRA-SERV-MIB", "svcEpMcEpStatsPktsRxConfig"),
        ("TIMETRA-SERV-MIB", "svcEpMcEpStatsPktsRxState"),
        ("TIMETRA-SERV-MIB", "svcEpMcEpStatsPktsTxConfig"),
        ("TIMETRA-SERV-MIB", "svcEpMcEpStatsPktsTxFailed"),
        ("TIMETRA-SERV-MIB", "svcEpMcEpStatsPktsTxState"))
)
if mibBuilder.loadTexts:
    svcTlsEndPointV7v0Group.setStatus("current")

tmnxSvcIpipeV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 135)
)
tmnxSvcIpipeV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIpipeInfoLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIpipeCeAddressDiscovery"),
        ("TIMETRA-SERV-MIB", "svcIpipeInfoTableLastMgmtChange"))
)
if mibBuilder.loadTexts:
    tmnxSvcIpipeV7v0Group.setStatus("obsolete")

tmnxSvcDhcpBgpV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 136)
)
tmnxSvcDhcpBgpV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPrngPlcyName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpAuthKeyChain"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpMD5AuthKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpImportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpExportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPeerAS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPeeringStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpBgpV7v0Group.setStatus("current")

tmnxSvcTlsPipV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 137)
)
tmnxSvcTlsPipV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsPipStpPortState"),
        ("TIMETRA-SERV-MIB", "tlsPipStpPortRole"),
        ("TIMETRA-SERV-MIB", "tlsPipStpDesignatedBridge"),
        ("TIMETRA-SERV-MIB", "tlsPipStpDesignatedPort"),
        ("TIMETRA-SERV-MIB", "tlsPipStpException"),
        ("TIMETRA-SERV-MIB", "tlsPipStpForwardTransitions"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInConfigBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInTcnBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInRstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInMstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInBadBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutConfigBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutTcnBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutRstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOutMstBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOperStatus"),
        ("TIMETRA-SERV-MIB", "tlsPipStpMvplsPruneState"),
        ("TIMETRA-SERV-MIB", "tlsPipStpOperProtocol"),
        ("TIMETRA-SERV-MIB", "tlsPipStpPortNum"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiPortRole"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiPortState"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiDesignatedBridge"),
        ("TIMETRA-SERV-MIB", "tlsPipMstiDesignatedPort"),
        ("TIMETRA-SERV-MIB", "tlsPipStpInsideRegion"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsPipV7v0Group.setStatus("current")

tmnxArpHostBgpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 138)
)
tmnxArpHostBgpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostBgpPrngPlcyName"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpAuthKeyChain"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpMD5AuthKey"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpImportPolicy"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpExportPolicy"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpPeerAS"),
        ("TIMETRA-SERV-MIB", "svcArpHostBgpPeeringStatus"))
)
if mibBuilder.loadTexts:
    tmnxArpHostBgpGroup.setStatus("current")

tmnxSvcDhcpV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 139)
)
tmnxSvcDhcpV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLseStateLocale"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePortId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSdpId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateVcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRemainLseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOption82"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePersistKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAID"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAIDType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateCiAddrMaskLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMaskTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMask"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouterTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseStart"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLastRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseEnd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginLeaseInfo"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateLeaseSplitActive"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNextHopMacAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNakNextRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySlaProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEvaluateState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifyAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateForceRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV7v0Group.setStatus("obsolete")

tmnxSvcPbbMacV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 140)
)
tmnxSvcPbbMacV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipePbbBvplsDstMacName"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbBvplsOperDstMac"),
        ("TIMETRA-SERV-MIB", "svcMacNameAddr"),
        ("TIMETRA-SERV-MIB", "svcMacNameLastChngd"),
        ("TIMETRA-SERV-MIB", "svcMacNameRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMacNameTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcPbbSrcBVplsMacAddr"),
        ("TIMETRA-SERV-MIB", "svcMacNotifCount"),
        ("TIMETRA-SERV-MIB", "svcMacNotifInterval"),
        ("TIMETRA-SERV-MIB", "svcTlsMacNotifAdminState"),
        ("TIMETRA-SERV-MIB", "svcTlsMacNotifCount"),
        ("TIMETRA-SERV-MIB", "svcTlsMacNotifInterval"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneUseSapBMac"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbIgmpSnpgMRtrRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbIgmpSnpgMRtrLastCh"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneUseEsBMac"))
)
if mibBuilder.loadTexts:
    tmnxSvcPbbMacV7v0Group.setStatus("current")

tmnxSvcTlsFdbV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 141)
)
tmnxSvcTlsFdbV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbMacAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsFdbType"),
        ("TIMETRA-SERV-MIB", "tlsFdbLocale"),
        ("TIMETRA-SERV-MIB", "tlsFdbPortId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsFdbSdpId"),
        ("TIMETRA-SERV-MIB", "tlsFdbVcId"),
        ("TIMETRA-SERV-MIB", "tlsFdbVpnId"),
        ("TIMETRA-SERV-MIB", "tlsFdbCustId"),
        ("TIMETRA-SERV-MIB", "tlsFdbLastStateChange"),
        ("TIMETRA-SERV-MIB", "tlsFdbProtected"),
        ("TIMETRA-SERV-MIB", "tlsFdbBackboneDstMac"),
        ("TIMETRA-SERV-MIB", "tlsFdbNumIVplsMac"),
        ("TIMETRA-SERV-MIB", "tlsFdbEndPointName"),
        ("TIMETRA-SERV-MIB", "tlsFdbEPMacOperSdpId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEPMacOperVcId"),
        ("TIMETRA-SERV-MIB", "tlsFdbPbbNumEpipes"),
        ("TIMETRA-SERV-MIB", "tlsProtMacRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsProtMacLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsProtMacImplCount"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsFdbV7v0Group.setStatus("current")

tmnxSvcV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 142)
)
tmnxSvcV7v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcNumMcStandbySaps")
)
if mibBuilder.loadTexts:
    tmnxSvcV7v0Group.setStatus("current")

tmnxSvcV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 143)
)
tmnxSvcV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcName"),
        ("TIMETRA-SERV-MIB", "svcNameId"),
        ("TIMETRA-SERV-MIB", "svcNameRowStatus"),
        ("TIMETRA-SERV-MIB", "svcNameLastChanged"),
        ("TIMETRA-SERV-MIB", "svcNameTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcNameType"),
        ("TIMETRA-SERV-MIB", "svcEndPointStandbySigMaster"),
        ("TIMETRA-SERV-MIB", "svcTlsPerSvcHashing"),
        ("TIMETRA-SERV-MIB", "svcEpipePerSvcHashing"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneForceQTagFwd"),
        ("TIMETRA-SERV-MIB", "svcEpipeBackboneForceQTagFwd"),
        ("TIMETRA-SERV-MIB", "svcEpipeBackboneLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipeBackboneTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEpipeLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipeTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcHashLabel"))
)
if mibBuilder.loadTexts:
    tmnxSvcV8v0Group.setStatus("current")

tmnxSvcMrpPolicyV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 144)
)
tmnxSvcMrpPolicyV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMrpPlcyTableLastChgd"),
        ("TIMETRA-SERV-MIB", "svcMrpPlcyParamsTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcMrpPlcyParamsISIDTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyDescription"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyScope"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyDefaultAction"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsDescription"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsAction"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsISIDHigh"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsISIDRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMrpPolicyParamsISIDLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSvcMrpPolicyV8v0Group.setStatus("current")

tmnxSvcSiteV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 145)
)
tmnxSvcSiteV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteIdAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdEncapValue"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdPortId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSdpBindId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdShgMeshSdp"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdShgName"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSiteId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdFailedThresh"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDesignatedFwdr"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDfUpTime"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDfChgCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsVeName"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsMaxVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiRD"),
        ("TIMETRA-SERV-MIB", "tlsShgSiteName"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdBootTimer"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSiteActTimer"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdTimerRemain"))
)
if mibBuilder.loadTexts:
    tmnxSvcSiteV8v0Group.setStatus("obsolete")

tmnxSvcRoutedCOV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 146)
)
tmnxSvcRoutedCOV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfParentIf"),
        ("TIMETRA-SERV-MIB", "iesIfFwdServId"),
        ("TIMETRA-SERV-MIB", "iesIfFwdSubIf"),
        ("TIMETRA-SERV-MIB", "iesGrpIfRedInterface"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumStaticHosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDynamicHosts"),
        ("TIMETRA-SERV-MIB", "iesIfPrivateRetailSubnets"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDhcpLeaseStates"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumPppoeSessions"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumArpHosts"),
        ("TIMETRA-SERV-MIB", "iesIfDelegatedPrefixLen"),
        ("TIMETRA-SERV-MIB", "iesIfLns"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultPrimaryDnsIPv4Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultSecondaryDnsIPv4Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultPrimaryDnsIPv6Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultSecondaryDnsIPv6Addr"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6ConfigAllowed"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV8v0Group.setStatus("obsolete")

tmnxArpHostV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 147)
)
tmnxArpHostV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcArpHostLocale"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapPortId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostSdpId"),
        ("TIMETRA-SERV-MIB", "svcArpHostVcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostStart"),
        ("TIMETRA-SERV-MIB", "svcArpHostLastAuth"),
        ("TIMETRA-SERV-MIB", "svcArpHostRefresh"),
        ("TIMETRA-SERV-MIB", "svcArpHostRemainingTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAppProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAncpString"),
        ("TIMETRA-SERV-MIB", "svcArpHostInterDestId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcArpHostMacAddr"),
        ("TIMETRA-SERV-MIB", "svcArpHostPersistKey"),
        ("TIMETRA-SERV-MIB", "svcArpHostCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfAdminState"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHostsSap"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostDefaultSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtStatus"))
)
if mibBuilder.loadTexts:
    tmnxArpHostV8v0Group.setStatus("obsolete")

tmnxSvcTlsBgpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 148)
)
tmnxSvcTlsBgpV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpADTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVplsId"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiPrefix"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcL2MhRteDf"),
        ("TIMETRA-SERV-MIB", "svcL2MhRteState"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsBgpV8v0Group.setStatus("current")

tmnxSvcDhcpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 150)
)
tmnxSvcDhcpV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseLocale"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePortId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSdpId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseVcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRemainLseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOption82"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePersistKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIAID"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIAIDType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrMaskLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseFramedIpNetMaskTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseFramedIpNetMask"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBCastIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBCastIpAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDefaultRouterTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDefaultRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLeaseStart"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLastRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLeaseEnd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpServerAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpServerAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginLeaseInfo"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpClientAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpClientAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseLeaseSplitActive"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseNakNextRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteStatus"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySlaProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseEvaluateState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifyAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseForceRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPrngPlcyName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpAuthKeyChain"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpMD5AuthKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpImportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpExportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPeerAS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPeeringStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV8v0Group.setStatus("obsolete")

tmnxSvcBsxV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 151)
)
tmnxSvcBsxV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseAppProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifyAppProfile"))
)
if mibBuilder.loadTexts:
    tmnxSvcBsxV8v0Group.setStatus("current")

tmnxSvcTlsV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 152)
)
tmnxSvcTlsV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsShcvRetryTimeout"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvRetryCount"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsV7v0Group.setStatus("current")

tmnxSvcIesIfV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 153)
)
tmnxSvcIesIfV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfShcvRetryTimeout"),
        ("TIMETRA-SERV-MIB", "iesIfShcvRetryCount"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV7v0Group.setStatus("current")

tmnxSvcRoutedVplsV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 154)
)
tmnxSvcRoutedVplsV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsAllowIpIfBinding"),
        ("TIMETRA-SERV-MIB", "iesIfVplsName"),
        ("TIMETRA-SERV-MIB", "iesIfVplsStatus"),
        ("TIMETRA-SERV-MIB", "iesIfVplsFailedReason"),
        ("TIMETRA-SERV-MIB", "iesIfSapEgressQosId"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedVplsV8v0Group.setStatus("current")

tmnxSvcMvrpV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 155)
)
tmnxSvcMvrpV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTmplLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTmplMtu"),
        ("TIMETRA-SERV-MIB", "svcTmplRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTmplTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTmplType"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupEnd"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupSapTmplName"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupStart"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupSvcTmplName"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupMvrpControl"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupStartVlanTag"),
        ("TIMETRA-SERV-MIB", "svcTlsTempFloodTime"),
        ("TIMETRA-SERV-MIB", "svcTlsTempFloodActive"),
        ("TIMETRA-SERV-MIB", "svcTlsTempFloodChangeCount"),
        ("TIMETRA-SERV-MIB", "svcTmplSvcCount"),
        ("TIMETRA-SERV-MIB", "svcTmplUsed"),
        ("TIMETRA-SERV-MIB", "svcCtrlSvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpAttributeCount"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTmplUserCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTmplUserCreatorSvcId"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsDiscardUnknownDest"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsFdbLocalAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsFdbRemoteAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsFdbTableFullHighWMark"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsFdbTableFullLowWMark"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsFdbTableSize"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacAgeing"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacLearning"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacMoveAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacMoveMaxRate"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacMoveNumRetries"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsMacMoveRetryTimeout"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsPerSvcHashing"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsPriPortsCumFactor"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsSecPortsCumFactor"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpBridgeForwardDelay"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpBridgeHelloTime"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpBridgeMaxAge"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpHoldCount"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpPriority"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsStpVersion"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsTempFloodTime"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpAttrTblHighWM"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpAttrTblLowWM"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpHoldTime"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpMaxAttributes"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupLastError"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpDeclaredAttrCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpFailedRegCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpRegAttrCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpDeclaredAttrCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpFailedRegCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMvrpRegAttrCnt"),
        ("TIMETRA-SERV-MIB", "svcTmplCustId"))
)
if mibBuilder.loadTexts:
    tmnxSvcMvrpV8v0Group.setStatus("current")

tmnxSvcIpipeV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 156)
)
tmnxSvcIpipeV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIpipeInfoLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIpipeCeAddressDiscovery"),
        ("TIMETRA-SERV-MIB", "svcIpipeInfoTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIpipeIpv6CeAddressDiscovery"),
        ("TIMETRA-SERV-MIB", "svcIpipeStackCapabilitySignaling"))
)
if mibBuilder.loadTexts:
    tmnxSvcIpipeV8v0Group.setStatus("current")

tmnxSvcInterAsV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 157)
)
tmnxSvcInterAsV8v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcInterASMvpn")
)
if mibBuilder.loadTexts:
    tmnxSvcInterAsV8v0Group.setStatus("obsolete")

tmnxSvcPwV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 158)
)
tmnxSvcPwV8v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEndPointStandbySigSlave")
)
if mibBuilder.loadTexts:
    tmnxSvcPwV8v0Group.setStatus("current")

tmnxSvcTlsPipV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 159)
)
tmnxSvcTlsPipV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsPipInTcBitBpdus"),
        ("TIMETRA-SERV-MIB", "tlsPipOutTcBitBpdus"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsPipV8v0Group.setStatus("current")

tmnxSvcIesIfV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 160)
)
tmnxSvcIesIfV8v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesGrpIfPolicyControl")
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV8v0Group.setStatus("current")

tmnxSvcV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 161)
)
tmnxSvcV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcMacFdbRecords"))
)
if mibBuilder.loadTexts:
    tmnxSvcV9v0Group.setStatus("obsolete")

tmnxSvcMSPwPeV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 162)
)
tmnxSvcMSPwPeV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMSPwPeAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeLastChange"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeFecType"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeAiiType"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeAgi"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeAutoConfig"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeEndPoint"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeStandbySigSlave"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeIsICB"),
        ("TIMETRA-SERV-MIB", "svcMSPwPePathName"),
        ("TIMETRA-SERV-MIB", "svcMSPwPePolicyId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPePrecedence"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeRetryCount"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeRetryTimer"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSaiiAcId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSignaling"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiAcId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathHopAddr"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathHopAddrType"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathHopLastChange"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathHopRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathHopTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathLastChange"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtPathTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPrefixLastChange"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPrefixRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPrefixTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcPwRtStaticRtLastChange"),
        ("TIMETRA-SERV-MIB", "svcPwRtStaticRtRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtStaticRtTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiOperSdpBind1"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiOperSdpBind2"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiSvcId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiSaiiAcId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiSaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeTaiiSaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiOperSdpBind1"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiOperSdpBind2"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiSvcId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiTaiiAcId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiTaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcPwSpeSaiiTaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeRetryRemain"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTimeRemain"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeOperSdpBind"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveSdpFec"),
        ("TIMETRA-SERV-MIB", "svcPwRtSpeAddrGlobalId"),
        ("TIMETRA-SERV-MIB", "svcPwRtSpeAddrPrefix"),
        ("TIMETRA-SERV-MIB", "svcEndPointForceSwitchOvrSdpFec"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeRetryExpired"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeLastError"),
        ("TIMETRA-SERV-MIB", "svcPwRtBgpRoutes"),
        ("TIMETRA-SERV-MIB", "svcPwRtBootTimer"),
        ("TIMETRA-SERV-MIB", "svcPwRtHostRoutes"),
        ("TIMETRA-SERV-MIB", "svcPwRtLocalRoutes"),
        ("TIMETRA-SERV-MIB", "svcPwRtRetryCount"),
        ("TIMETRA-SERV-MIB", "svcPwRtRetryTimer"),
        ("TIMETRA-SERV-MIB", "svcPwRtStaticRoutes"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPfxRDCommunity"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPfxRDLastChange"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPfxRDRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPwRtLclPfxRDTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcPwRtBootTimerRemain"))
)
if mibBuilder.loadTexts:
    tmnxSvcMSPwPeV9v0Group.setStatus("current")

tmnxSvcOperGrpV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 163)
)
tmnxSvcOperGrpV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteIdMonitorOperGrp"),
        ("TIMETRA-SERV-MIB", "svcOperGrpCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcOperGrpHoldUpTime"),
        ("TIMETRA-SERV-MIB", "svcOperGrpHoldDownTime"),
        ("TIMETRA-SERV-MIB", "svcOperGrpNumMembers"),
        ("TIMETRA-SERV-MIB", "svcOperGrpNumMonitoring"),
        ("TIMETRA-SERV-MIB", "svcOperGrpLastChange"),
        ("TIMETRA-SERV-MIB", "svcOperGrpOperStatus"),
        ("TIMETRA-SERV-MIB", "svcOperGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "svcOperGrpTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcOperGrpHoldUpTimeRemain"),
        ("TIMETRA-SERV-MIB", "svcOperGrpHoldDownTimeRemain"))
)
if mibBuilder.loadTexts:
    tmnxSvcOperGrpV9v0Group.setStatus("current")

tmnxSvcDhcpV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 164)
)
tmnxSvcDhcpV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseAleDatalink"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAleEncaps1"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAleEncaps2"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrPIR"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrCIR"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrCBS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrMBS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrWrrWeight"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV9v0Group.setStatus("obsolete")

tmnxSvcRoutedCOV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 165)
)
tmnxSvcRoutedCOV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfParentIf"),
        ("TIMETRA-SERV-MIB", "iesIfFwdServId"),
        ("TIMETRA-SERV-MIB", "iesIfFwdSubIf"),
        ("TIMETRA-SERV-MIB", "iesGrpIfRedInterface"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumStaticHosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDynamicHosts"),
        ("TIMETRA-SERV-MIB", "iesIfPrivateRetailSubnets"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumDhcpLeaseStates"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumPppoeSessions"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumArpHosts"),
        ("TIMETRA-SERV-MIB", "iesIfDelegatedPrefixLen"),
        ("TIMETRA-SERV-MIB", "iesIfLns"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultPrimaryDnsIPv4Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultSecondaryDnsIPv4Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultPrimaryDnsIPv6Addr"),
        ("TIMETRA-SERV-MIB", "iesIfDefaultSecondaryDnsIPv6Addr"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6ConfigAllowed"),
        ("TIMETRA-SERV-MIB", "iesIfSrrpRoutingEnabled"),
        ("TIMETRA-SERV-MIB", "iesIfSrrpRoutingHoldTime"),
        ("TIMETRA-SERV-MIB", "iesIfAllowUnmatchingSubnets"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV9v0Group.setStatus("current")

tmnxSvcV9v0R4Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 166)
)
tmnxSvcV9v0R4Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfMonitorOperGrp"),
        ("TIMETRA-SERV-MIB", "svcTlsExtMmrpEndStationOnly"))
)
if mibBuilder.loadTexts:
    tmnxSvcV9v0R4Group.setStatus("current")

tmnxSvcMacReNotifyGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 167)
)
tmnxSvcMacReNotifyGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsExtMacReNotifInterval")
)
if mibBuilder.loadTexts:
    tmnxSvcMacReNotifyGroup.setStatus("current")

tmnxSvcDhcpV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 170)
)
tmnxSvcDhcpV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseWppState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppPortalRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppPortalName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePoolName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseInterfaceId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRemoteId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOption60"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadCalledStationId"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV10v0Group.setStatus("obsolete")

tmnxSvcRoutedCOV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 171)
)
tmnxSvcRoutedCOV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfGroupInterfaceType"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDescription"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefSubProfile"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefSlaProfile"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefAppProfile"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgSubIdentPolicy"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefSubIdent"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefSubIdentString"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgDefFilterProfile"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV10v0Group.setStatus("current")

tmnxSvcV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 172)
)
tmnxSvcV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEndPointRestProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcEndPointRestProtSrcMacAction"),
        ("TIMETRA-SERV-MIB", "svcEndPointAutoLearnMacProtect"),
        ("TIMETRA-SERV-MIB", "tlsShgAutoLearnMacProtect"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdPkts"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdOcts"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SERV-MIB", "custMssIngQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdPkts"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdPktsLo"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdPktsHi"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdOcts"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdOctsLo"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosArbitStatsFwdOctsHi"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdPkts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdPktsLo"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdPktsHi"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdOcts"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdOctsLo"),
        ("TIMETRA-SERV-MIB", "custIngQosPortIdArbitFwdOctsHi"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdPkts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdPktsLo"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdPktsHi"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdOcts"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdOctsLo"),
        ("TIMETRA-SERV-MIB", "custEgrQosPortIdArbitFwdOctsHi"))
)
if mibBuilder.loadTexts:
    tmnxSvcV10v0Group.setStatus("current")

tmnxSvcIesIfV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 173)
)
tmnxSvcIesIfV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfShcvFamily"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6IpoeBridgedModeEnabled"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV10v0Group.setStatus("current")

tmnxArpHostV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 174)
)
tmnxArpHostV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcArpHostLocale"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapPortId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostSdpId"),
        ("TIMETRA-SERV-MIB", "svcArpHostVcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostStart"),
        ("TIMETRA-SERV-MIB", "svcArpHostLastAuth"),
        ("TIMETRA-SERV-MIB", "svcArpHostRefresh"),
        ("TIMETRA-SERV-MIB", "svcArpHostRemainingTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAppProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAncpString"),
        ("TIMETRA-SERV-MIB", "svcArpHostInterDestId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcArpHostMacAddr"),
        ("TIMETRA-SERV-MIB", "svcArpHostPersistKey"),
        ("TIMETRA-SERV-MIB", "svcArpHostCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfAdminState"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHostsSap"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostDefaultSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtStatus"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrPIR"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrCIR"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrCBS"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrMBS"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrWrrWeight"))
)
if mibBuilder.loadTexts:
    tmnxArpHostV10v0Group.setStatus("obsolete")

tmnxSvcIesIfV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 175)
)
tmnxSvcIesIfV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfIPv6AllowUnmatchingPfxs"),
        ("TIMETRA-SERV-MIB", "iesIfMcastNetDomainEgrIfCon"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV11v0Group.setStatus("current")

tmnxSvcIesIfNHV10v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 176)
)
tmnxSvcIesIfNHV10v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfIsaTnlNHTableLastChanged"),
        ("TIMETRA-SERV-MIB", "iesIfIsaTnlNHLastChanged"),
        ("TIMETRA-SERV-MIB", "iesIfIsaTnlNHStaticAddrType"),
        ("TIMETRA-SERV-MIB", "iesIfIsaTnlNHStaticAddr"),
        ("TIMETRA-SERV-MIB", "iesIfIsaTnlNHDynAddrType"),
        ("TIMETRA-SERV-MIB", "iesIfIsaTnlNHDynAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfNHV10v0Group.setStatus("current")

tmnxArpHostV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 177)
)
tmnxArpHostV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcArpHostLocale"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapPortId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostSdpId"),
        ("TIMETRA-SERV-MIB", "svcArpHostVcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostStart"),
        ("TIMETRA-SERV-MIB", "svcArpHostLastAuth"),
        ("TIMETRA-SERV-MIB", "svcArpHostRefresh"),
        ("TIMETRA-SERV-MIB", "svcArpHostRemainingTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcArpHostShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAppProfString"),
        ("TIMETRA-SERV-MIB", "svcArpHostAncpString"),
        ("TIMETRA-SERV-MIB", "svcArpHostInterDestId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcArpHostRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcArpHostMacAddr"),
        ("TIMETRA-SERV-MIB", "svcArpHostPersistKey"),
        ("TIMETRA-SERV-MIB", "svcArpHostCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcArpHostRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfTableLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfAdminState"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMaxNumHostsSap"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "svcArpHostIfNumHosts"),
        ("TIMETRA-SERV-MIB", "svcArpHostDefaultSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtStatus"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtMetric"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtPreference"),
        ("TIMETRA-SERV-MIB", "svcArpHostMRtTag"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrPIR"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrCIR"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrCBS"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrMBS"),
        ("TIMETRA-SERV-MIB", "svcArpHostOvrWrrWeight"))
)
if mibBuilder.loadTexts:
    tmnxArpHostV11v0Group.setStatus("current")

tmnxSvcDhcpV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 178)
)
tmnxSvcDhcpV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseLocale"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePortId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSdpId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseVcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRemainLseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOption82"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePersistKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIAID"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIAIDType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseCiAddrMaskLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseFramedIpNetMaskTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseFramedIpNetMask"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBCastIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBCastIpAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDefaultRouterTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDefaultRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLeaseStart"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLastRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerLeaseEnd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpServerAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpServerAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginLeaseInfo"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpClientAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDhcpClientAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseLeaseSplitActive"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePrimaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSecondaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseNakNextRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteStatus"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteMetric"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRoutePreference"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteTag"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifySlaProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseEvaluateState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseModifyAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseForceRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPrngPlcyName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpAuthKeyChain"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpMD5AuthKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpImportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpExportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPeerAS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseBgpPeeringStatus"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAleDatalink"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAleEncaps1"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseAleEncaps2"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrPIR"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrCIR"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrCBS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrMBS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrWrrWeight"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppPortalRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppPortalName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePoolName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseServerId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseInterfaceId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRemoteId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOption60"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadCalledStationId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseLeaseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSessTimeout"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseUptime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRemainingSessTime"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV11v0Group.setStatus("current")

tmnxSvcRoutedCOV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 179)
)
tmnxSvcRoutedCOV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcWholesalerNumDhcp6LeaseStates"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumSlaacHosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumStatic6Hosts"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumIpoeSessions"),
        ("TIMETRA-SERV-MIB", "svcWholesalerNumIpcpHosts"))
)
if mibBuilder.loadTexts:
    tmnxSvcRoutedCOV13v0Group.setStatus("current")

tmnxSvcNotifyObjsV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 200)
)
tmnxSvcNotifyObjsV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"),
        ("TIMETRA-SERV-MIB", "svcDhcpPacketProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePopulateError"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddrType"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddr"),
        ("TIMETRA-SERV-MIB", "hostConnectivityChAddr"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacIpAddress"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacConflict"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRow"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRowDescr"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuite"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"),
        ("TIMETRA-SERV-MIB", "svcDhcpProxyError"),
        ("TIMETRA-SERV-MIB", "svcDhcpCoAError"),
        ("TIMETRA-SERV-MIB", "svcDhcpSubAuthError"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegFailedReason"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrType"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrValue"),
        ("TIMETRA-SERV-MIB", "svcMstiInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerRootBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOldSdpBindTlsStpPortState"),
        ("TIMETRA-SERV-MIB", "tmnxVcpState"),
        ("TIMETRA-SERV-MIB", "macPinningMacAddress"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRow"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRowDescr"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRow"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRowDescr"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObjsV6v0Group.setStatus("obsolete")

tmnxArpHostNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 201)
)
tmnxArpHostNotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifSapPortId"),
        ("TIMETRA-SERV-MIB", "svcNotifSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostPopulateError"))
)
if mibBuilder.loadTexts:
    tmnxArpHostNotifyObjsGroup.setStatus("current")

tmnxSvcNotifyObjsV7v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 202)
)
tmnxSvcNotifyObjsV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"),
        ("TIMETRA-SERV-MIB", "svcDhcpPacketProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePopulateError"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddrType"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddr"),
        ("TIMETRA-SERV-MIB", "hostConnectivityChAddr"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacIpAddress"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacConflict"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRow"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRowDescr"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuite"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"),
        ("TIMETRA-SERV-MIB", "svcDhcpProxyError"),
        ("TIMETRA-SERV-MIB", "svcDhcpCoAError"),
        ("TIMETRA-SERV-MIB", "svcDhcpSubAuthError"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegFailedReason"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrType"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrValue"),
        ("TIMETRA-SERV-MIB", "svcMstiInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerRootBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOldSdpBindTlsStpPortState"),
        ("TIMETRA-SERV-MIB", "tmnxVcpState"),
        ("TIMETRA-SERV-MIB", "macPinningMacAddress"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRow"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRowDescr"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRow"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRowDescr"),
        ("TIMETRA-SERV-MIB", "svcHostAddrType"),
        ("TIMETRA-SERV-MIB", "svcHostAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObjsV7v0Group.setStatus("obsolete")

tmnxSvcObsoletedV6v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 300)
)
tmnxSvcObsoletedV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsStpHoldTime"),
        ("TIMETRA-SERV-MIB", "tlsMFibInfoFwdOrBlk"),
        ("TIMETRA-SERV-MIB", "tlsMFibInfoSvcId"),
        ("TIMETRA-SERV-MIB", "tlsMFibGrpSrcStatsForwardedPkts"),
        ("TIMETRA-SERV-MIB", "tlsMFibGrpSrcStatsForwardedOctets"),
        ("TIMETRA-SERV-MIB", "tlsDHCPClientLease"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateOldChAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateSvcId"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStatePortId"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateEncapVal"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateProblem"),
        ("TIMETRA-SERV-MIB", "tlsDhcpPacketProblem"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStatePopulateError"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV6v0Group.setStatus("current")

tmnxSvcObsoletedV8v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 301)
)
tmnxSvcObsoletedV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpADVsiRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADVsiImportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateLocale"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePortId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEncapValue"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSdpId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateVcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRemainLseTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOption82"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePersistKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubscrIdent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSubProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSlaProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvOperState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvChecks"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplies"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateShcvReplyTime"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateClientId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAID"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateIAIDType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateCiAddrMaskLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerSvcId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRetailerIf"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMaskTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateFramedIpNetMask"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBCastIpAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouterTp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDefaultRouter"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryDns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseStart"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLastRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateServerLeaseEnd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpServerAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOriginLeaseInfo"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateDhcpClientAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateLeaseSplitActive"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePrimaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbnsType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateSecondaryNbns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNextHopMacAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateCategoryMapName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNakNextRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRadiusClassAttr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubIndent"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifySlaProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateEvaluateState"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModInterDestId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifyAncpString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateForceRenew"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateAppProfString"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateModifyAppProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPrngPlcyName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpAuthKeyChain"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpMD5AuthKey"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpImportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpExportPolicy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPeerAS"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateBgpPeeringStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV8v0Group.setStatus("current")

tmnxSvcObsoletedV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 302)
)
tmnxSvcObsoletedV9v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesIfVpnId")
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV9v0Group.setStatus("current")

tmnxSvcObsoletedV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 303)
)
tmnxSvcObsoletedV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseOriginStrings"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSessionTimeout"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginSubscrId"),
        ("TIMETRA-SERV-MIB", "svcArpHostOriginStrings"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV11v0Group.setStatus("current")

tmnxSvcObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 304)
)
tmnxSvcObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpManagedRouteStatus"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteMetric"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRoutePreference"),
        ("TIMETRA-SERV-MIB", "svcDhcpManagedRouteTag"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpDescription"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpMemberRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsRdntGrpMemberLastMgmtChange"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedGroup.setStatus("current")

tmnxSvcEthCfmGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 407)
)
tmnxSvcEthCfmGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEthCfmTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEthCfmTunnelFaultNotification"),
        ("TIMETRA-SERV-MIB", "svcEthCfmVMepExtensions"))
)
if mibBuilder.loadTexts:
    tmnxSvcEthCfmGroup.setStatus("current")

tmnxSvcApipeInfoV9v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 409)
)
tmnxSvcApipeInfoV9v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcApipeSignaledVllTypeOverride")
)
if mibBuilder.loadTexts:
    tmnxSvcApipeInfoV9v0Group.setStatus("current")

tmnxSvcSpbGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 410)
)
tmnxSvcSpbGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSpbIfEncapValue"),
        ("TIMETRA-SERV-MIB", "svcSpbIfLocale"),
        ("TIMETRA-SERV-MIB", "svcSpbIfPortId"),
        ("TIMETRA-SERV-MIB", "svcSpbIfSdpId"),
        ("TIMETRA-SERV-MIB", "svcSpbIfVcId"),
        ("TIMETRA-SERV-MIB", "svcSpbIfSvcId"),
        ("TIMETRA-SERV-MIB", "svcSpbIfIsisInstance"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMLocale"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMPortId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMSdpId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMState"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbMVcId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMLocale"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMPortId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMSdpId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMVcId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidMFibIsid"),
        ("TIMETRA-SERV-MIB", "tlsSpbMFibState"),
        ("TIMETRA-SERV-MIB", "tlsSpbMFibIsid"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbLocale"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbPortId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbSdpId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbState"),
        ("TIMETRA-SERV-MIB", "tlsSpbFdbVcId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbLocale"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbPortId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbSdpId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbVcId"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbLastUpdate"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidFdbMLastUpdate"),
        ("TIMETRA-SERV-MIB", "tlsSpbFidMFibLastUpdate"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbUserSvcLastUpdate"),
        ("TIMETRA-SERV-MIB", "svcTlsExtSpbmCtrlVpls"),
        ("TIMETRA-SERV-MIB", "svcTlsExtSpbmFid"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbFid"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbIsisInstance"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbL1BridgePriority"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbL1FwdTreeTopoUcast"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbL1FwdTreeTopoMcast"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbL1BridgeId"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbL1McastDesigBridgeId"),
        ("TIMETRA-SERV-MIB", "svcTlsSpbAdminState"))
)
if mibBuilder.loadTexts:
    tmnxSvcSpbGroup.setStatus("current")

tmnxSvcVllBgpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 411)
)
tmnxSvcVllBgpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiRD"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdBootTimer"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDesignatedFwdr"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDfChgCnt"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDfUpTime"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdEncapValue"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdPortId"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdSiteActTimer"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdSiteId"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdTimerRemain"),
        ("TIMETRA-SERV-MIB", "svcVllBgpRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcVllBgpGroup.setStatus("obsolete")

tmnxSvcP2mpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 412)
)
tmnxSvcP2mpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsIPmsiAdminState"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiDataDelayIntvl"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiRemainDataDelayIntvl"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiType"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiRootAndLeaf"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiLspTmpl"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiLspName"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiTableLastChanged"))
)
if mibBuilder.loadTexts:
    tmnxSvcP2mpGroup.setStatus("current")

tmnxSvcV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 415)
)
tmnxSvcV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcDefMeshVcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcAutoBind"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcRadiusUserNameType"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"))
)
if mibBuilder.loadTexts:
    tmnxSvcV11v0Group.setStatus("obsolete")

tmnxSvcPEObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 416)
)
tmnxSvcPEObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRadiusPEDiscPolicy"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscoveryShutdown"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyPassword"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyInterval"),
        ("TIMETRA-SERV-MIB", "svcPEDiscoveryPolicyTimeout"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddressType"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddress"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerSecret"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerPort"))
)
if mibBuilder.loadTexts:
    tmnxSvcPEObsoletedGroup.setStatus("current")

svcBgpVpwsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 419)
)
svcBgpVpwsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEndPointCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsPwTemplateId"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsPwTemplateId"),
        ("TIMETRA-SERV-MIB", "svcL2MhRteVplsPreference"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdPreference"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsRemoteVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsRemoteVeLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsRemoteVeRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsRemoteVeTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsVeName"))
)
if mibBuilder.loadTexts:
    svcBgpVpwsGroup.setStatus("current")

tmnxSvcSchedulerRateV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 420)
)
tmnxSvcSchedulerRateV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custMssIngQosSPIRHi"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSPIRLo"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSCIRHi"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSCIRLo"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSPIRHi"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSPIRLo"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSCIRHi"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSCIRLo"))
)
if mibBuilder.loadTexts:
    tmnxSvcSchedulerRateV11v0Group.setStatus("current")

tmnxSvcSpbV11v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 421)
)
tmnxSvcSpbV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeLow"),
        ("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeHigh"),
        ("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeUseDefMCTree"),
        ("TIMETRA-SERV-MIB", "svcTlsIsidPlcyRangeAdvLocal"))
)
if mibBuilder.loadTexts:
    tmnxSvcSpbV11v0Group.setStatus("current")

tmnxSvcV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 423)
)
tmnxSvcV12v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNumMHStandbySaps"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppRestoreOnDiscon"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppIsTriggered"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppInitialSubProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppInitialSLAProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppInitialAppProfile"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppLocalUserDb"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppAuthPolicy"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6Dhcp6PDManagedRoute"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseMngdRtStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcV12v0Group.setStatus("current")

tmnxSvcMHGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 424)
)
tmnxSvcMHGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteIdActTimerRemain"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdActTimerRemain"))
)
if mibBuilder.loadTexts:
    tmnxSvcMHGroup.setStatus("current")

tmnxSvcCondStaticMacGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 425)
)
tmnxSvcCondStaticMacGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsCondStaticMacLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacTblLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacAddr"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacPreference"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacLocale"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacPortId"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacEncapValue"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacSdpId"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacVcId"),
        ("TIMETRA-SERV-MIB", "tlsCondStaticMacMonitor"))
)
if mibBuilder.loadTexts:
    tmnxSvcCondStaticMacGroup.setStatus("current")

svcTlsFdbMacStatsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 426)
)
svcTlsFdbMacStatsGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsNumEntries")
)
if mibBuilder.loadTexts:
    svcTlsFdbMacStatsGroup.setStatus("current")

svcOperGrpBfdGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 427)
)
svcOperGrpBfdGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcOperGrpBfdTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdRowStatus"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdLastChgd"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdSvcId"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdIfName"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdDestIpType"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdDestIp"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdSrcIpType"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdSrcIp"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdSessOperState"))
)
if mibBuilder.loadTexts:
    svcOperGrpBfdGroup.setStatus("current")

svcTlsEtreeGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 428)
)
svcTlsEtreeGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsModeEtree")
)
if mibBuilder.loadTexts:
    svcTlsEtreeGroup.setStatus("current")

svcVxlanGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 429)
)
svcVxlanGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbVTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbVNI"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumEgrVNIs"),
        ("TIMETRA-SERV-MIB", "svcVTEPOperState"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNINumMACs"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIInMcastList"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIOperState"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNISvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIMcast"))
)
if mibBuilder.loadTexts:
    svcVxlanGroup.setStatus("obsolete")

svcBgpEvpnGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 430)
)
svcBgpEvpnGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvDefaultRoute"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpMacAddr"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumMoves"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetWindow"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetRetry"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumDups"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacAddress"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacTime"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnGroup.setStatus("obsolete")

tmnxSvcV11v4Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 431)
)
tmnxSvcV11v4Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcDefMeshVcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcAutoBind"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"))
)
if mibBuilder.loadTexts:
    tmnxSvcV11v4Group.setStatus("obsolete")

svcBaseInfoObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 432)
)
svcBaseInfoObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRadiusUserName"),
        ("TIMETRA-SERV-MIB", "svcRadiusUserNameType"))
)
if mibBuilder.loadTexts:
    svcBaseInfoObsoletedGroup.setStatus("current")

tmnxIesIfRtrSolicitGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 433)
)
tmnxIesIfRtrSolicitGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolTableLastChanged"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolAdminStatus"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolUserDb"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolInactivityTimer"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6AllowMultiWanAddr"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6Dhcp6OverrideSlaac"))
)
if mibBuilder.loadTexts:
    tmnxIesIfRtrSolicitGroup.setStatus("current")

svcVsdGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 434)
)
svcVsdGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVsdDomainName"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainAdminState"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainDescription"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainType"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainToSvcTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainToSvcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainToSvcCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainLastErrStr"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainVsdLastErrStr"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatCfgChgEvtRcvd"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatLastCfgChgEvt"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatCfgUpdRcvd"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatLastCfgUpdRcvd"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatLastCfgUpdDone"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatCfgSuccess"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainStatCfgFailed"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRecParams"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainExecParams"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRecParams1"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRecParams2"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRecParams3"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainRecParams4"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainExecParams1"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainExecParams2"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainExecParams3"),
        ("TIMETRA-SERV-MIB", "svcVsdDomainExecParams4"))
)
if mibBuilder.loadTexts:
    svcVsdGroup.setStatus("current")

tmnxSvcQosV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 435)
)
tmnxSvcQosV12v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "custMultSvcSiteEgressAggRateLUB")
)
if mibBuilder.loadTexts:
    tmnxSvcQosV12v0Group.setStatus("current")

tmnxSvcCreation12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 436)
)
tmnxSvcCreation12v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNameCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpCreationOrigin"),
        ("TIMETRA-SERV-MIB", "iesIfCreationOrigin"))
)
if mibBuilder.loadTexts:
    tmnxSvcCreation12v0Group.setStatus("obsolete")

tmnxSvcPbbMacV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 439)
)
tmnxSvcPbbMacV12v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsPbbMldSnpgMRtrRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbMldSnpgMRtrLastCh"))
)
if mibBuilder.loadTexts:
    tmnxSvcPbbMacV12v0Group.setStatus("current")

tmnxSvcTestGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 440)
)
tmnxSvcTestGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcIsTestSvc")
)
if mibBuilder.loadTexts:
    tmnxSvcTestGroup.setStatus("current")

svcBgpEvpnIPRouteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 441)
)
svcBgpEvpnIPRouteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfVplsEvpnTunnel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIpRouteAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIpRouteAdverInclHost"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnIPRouteGroup.setStatus("current")

tmnxSvcIesIfIpoeV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 442)
)
tmnxSvcIesIfIpoeV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeTableLastChanged"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeLastChange"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeAdminState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeDescription"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoePolicy"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeUserDb"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeSessionLimit"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeSapSessionLimit"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeMinAuthInterval"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeForceAuth"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfIpoeV13v0Group.setStatus("current")

tmnxSvcIesIfV12v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 443)
)
tmnxSvcIesIfV12v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesIfExportHostRoutes")
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV12v0Group.setStatus("current")

tmnxSvcIpipeFaultPropGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 444)
)
tmnxSvcIpipeFaultPropGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIpipeCeAddressDiscoveryKeep"),
        ("TIMETRA-SERV-MIB", "svcIpipeEthFaultNotifRecTimer"),
        ("TIMETRA-SERV-MIB", "svcIpipeEthFaultNotifAdminState"))
)
if mibBuilder.loadTexts:
    tmnxSvcIpipeFaultPropGroup.setStatus("current")

tmnxSvcQosSchedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 445)
)
tmnxSvcQosSchedV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custMssIngQosSParentWeight"),
        ("TIMETRA-SERV-MIB", "custMssIngQosSParentCIRWeight"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSParentWeight"),
        ("TIMETRA-SERV-MIB", "custMssEgrQosSParentCIRWeight"))
)
if mibBuilder.loadTexts:
    tmnxSvcQosSchedV13v0Group.setStatus("current")

tmnxSvcTlsProxyArpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 446)
)
tmnxSvcTlsProxyArpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgAdminState"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsProxyArpGroup.setStatus("current")

tmnxSvcVprnV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 447)
)
tmnxSvcVprnV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnInfoTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnInfoEntryLastChanged"),
        ("TIMETRA-SERV-MIB", "svcNetIngQosPolicyId"),
        ("TIMETRA-SERV-MIB", "svcNetIngQosFPQGrp"),
        ("TIMETRA-SERV-MIB", "svcNetIngQosFPQGrpInstanceId"),
        ("TIMETRA-SERV-MIB", "svcNetIngIPFilterId"),
        ("TIMETRA-SERV-MIB", "svcNetIngIPv6FilterId"))
)
if mibBuilder.loadTexts:
    tmnxSvcVprnV13v0Group.setStatus("current")

tmnxSvcTlsProxyArpEnhGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 448)
)
tmnxSvcTlsProxyArpEnhGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpDynPopulate"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpSendRefresh"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpAntiSpoofingMac"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpAntiSpoofHoldDown"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDupDetectWindow"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpAntiSpoofNumMoves"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpUnknReqFloodEvpn"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpStaticTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpStaticRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpStaticLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpStaticMac"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpGarpFloodEvpn"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsProxyArpEnhGroup.setStatus("current")

tmnxSvcTlsEvpnProxyArpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 449)
)
tmnxSvcTlsEvpnProxyArpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpType"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpCount"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsEvpnProxyArpGroup.setStatus("current")

tmnxSvcIesIfV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 450)
)
tmnxSvcIesIfV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfSuppressAaSub"),
        ("TIMETRA-SERV-MIB", "iesGrpIfDiameterAuthPolicy"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfIpv6IpoeDhcp6Hosts"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfIpv6PppDhcp6Hosts"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfIpv6PppSLAACHosts"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfIpv6IpoeSLAACHosts"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfIpv6StaticHostsUp"),
        ("TIMETRA-SERV-MIB", "iesIfIpv6Dhcp6UserIdent"),
        ("TIMETRA-SERV-MIB", "iesGrpIfIpv6AutoReply"),
        ("TIMETRA-SERV-MIB", "svcIfSapCfgAntiSpoof"),
        ("TIMETRA-SERV-MIB", "iesIfIPv6Dhcp6PDManagedRouteNH"))
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV13v0Group.setStatus("current")

tmnxSvcVsdGlobalObjsV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 453)
)
tmnxSvcVsdGlobalObjsV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVsdServiceRangeStart"),
        ("TIMETRA-SERV-MIB", "svcVsdServiceRangeEnd"))
)
if mibBuilder.loadTexts:
    tmnxSvcVsdGlobalObjsV13v0Group.setStatus("current")

svcBgpEvpnMplsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 454)
)
svcBgpEvpnMplsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEvi"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceVlanVcFwding"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsShgName"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumEvpnMplsDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESBMacDest"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblInMcastList"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperImportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperExportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressBumLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTunnelType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsAdminState"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsGroup.setStatus("obsolete")

svcBgpEvpnMplsMhGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 455)
)
svcBgpEvpnMplsMhGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAdminState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSvcCarving"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLagId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPortId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSdpId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSourceBMacLSB"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblSize"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTo"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsActTimer"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsEthSegId"),
        ("TIMETRA-SERV-MIB", "svcSysEthSegBMacAddress"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSHGLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPLstChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTunnelType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPTnlType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcNumEvpnMHStandbySaps"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestLstChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnOperRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRDType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMhGroup.setStatus("obsolete")

tmnxSvcTlsMFibV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 458)
)
tmnxSvcTlsMFibV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsMFibNgFwdOrBlk"),
        ("TIMETRA-SERV-MIB", "tlsMFibNgSvcId"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsMFibV13v0Group.setStatus("current")

svcSpiLoadBalGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 459)
)
svcSpiLoadBalGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsExtSpiLoadBalancing"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsSpiLoadBalancing"))
)
if mibBuilder.loadTexts:
    svcSpiLoadBalGroup.setStatus("current")

svcBgpAutoRDGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 460)
)
svcBgpAutoRDGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpAutoRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperRDType"),
        ("TIMETRA-SERV-MIB", "svcVllBgpAutoRD"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperRD"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperRDType"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1IpAddr"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1CommValStart"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1CommValEnd"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1InUse"))
)
if mibBuilder.loadTexts:
    svcBgpAutoRDGroup.setStatus("obsolete")

svcRipListenerGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 461)
)
svcRipListenerGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseRipPlcyName"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRipListenerStatus"),
        ("TIMETRA-SERV-MIB", "svcArpHostRipPlcyName"),
        ("TIMETRA-SERV-MIB", "svcArpHostRipListenerStatus"))
)
if mibBuilder.loadTexts:
    svcRipListenerGroup.setStatus("current")

tmnxSvcQosRateV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 462)
)
tmnxSvcQosRateV13v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "custMultSvcSiteEgrAggRateLimit")
)
if mibBuilder.loadTexts:
    tmnxSvcQosRateV13v0Group.setStatus("current")

tmnxSvcGrpIfGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 463)
)
tmnxSvcGrpIfGroup.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfVRouterId")
)
if mibBuilder.loadTexts:
    tmnxSvcGrpIfGroup.setStatus("current")

svcTeidLoadBalGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 464)
)
svcTeidLoadBalGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsExtTeidLoadBalancing"),
        ("TIMETRA-SERV-MIB", "svcTmplTlsTeidLoadBalancing"))
)
if mibBuilder.loadTexts:
    svcTeidLoadBalGroup.setStatus("current")

svcBgpMHSiteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 465)
)
svcBgpMHSiteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteIdMinDnTimer"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdMinDnTimerRemain"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdMinDnTimer"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdMinDnTimerRemain"))
)
if mibBuilder.loadTexts:
    svcBgpMHSiteGroup.setStatus("current")

svcSiteMinDnTimerNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 466)
)
svcSiteMinDnTimerNotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifSiteName"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimer"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimerRemain"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimerState"))
)
if mibBuilder.loadTexts:
    svcSiteMinDnTimerNotifyObjsGroup.setStatus("current")

tmnxSvcShcvPolicyGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 468)
)
tmnxSvcShcvPolicyGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfShcvPolicy"),
        ("TIMETRA-SERV-MIB", "iesIfShcvPolicyIpv4"),
        ("TIMETRA-SERV-MIB", "iesIfShcvPolicyIpv6"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvPolicyIpv4"))
)
if mibBuilder.loadTexts:
    tmnxSvcShcvPolicyGroup.setStatus("current")

tmnxSvcV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 469)
)
tmnxSvcV13v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcDefMeshVcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseTerminationType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtMetric"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtPreference"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnCfmMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIpoeSessionHost"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePppSession"))
)
if mibBuilder.loadTexts:
    tmnxSvcV13v0Group.setStatus("obsolete")

tmnxSvcObsoletedV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 470)
)
tmnxSvcObsoletedV13v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcAutoBind")
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV13v0Group.setStatus("current")

svcTlsProxyArpNotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 471)
)
svcTlsProxyArpNotifyObjsGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcNotifTlsProxyMacAddr")
)
if mibBuilder.loadTexts:
    svcTlsProxyArpNotifyObjsGroup.setStatus("current")

svcAutoBindTunnelGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 474)
)
svcAutoBindTunnelGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindLastChg"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindLdp"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindSrIsis"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindSrOspf"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindGre"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindTnlStatus"))
)
if mibBuilder.loadTexts:
    svcAutoBindTunnelGroup.setStatus("current")

tmnxSvcTlsProxyNdGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 475)
)
tmnxSvcTlsProxyNdGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyNdDynPopulate"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdSendRefresh"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdAntiSpoofingMac"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdAntiSpoofHoldDown"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDupDetectWindow"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdAntiSpoofNumMoves"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdUnknSolFloodEvpn"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStaticTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStaticRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStaticLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStaticMac"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgAdminState"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdMacAddr"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdType"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdRtrUnSolNAFloodEvpn"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdHstUnSolNAFloodEvpn"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdEvpnNdAdvRouter"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdStaticIsRouter"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdIsRouter"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCount"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsProxyNdGroup.setStatus("current")

svcV13v0NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 477)
)
svcV13v0NotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifyMacAddress"),
        ("TIMETRA-SERV-MIB", "svcNotifyText"))
)
if mibBuilder.loadTexts:
    svcV13v0NotifyObjsGroup.setStatus("current")

tmnxSvcVsdDynamicSvcGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 479)
)
tmnxSvcVsdDynamicSvcGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxVsdRootObjInstance"),
        ("TIMETRA-SERV-MIB", "tmnxVsdRootObjOrphanTime"),
        ("TIMETRA-SERV-MIB", "tmnxVsdRootObjSnippetName"),
        ("TIMETRA-SERV-MIB", "tmnxVsdRootObjSnippetInstance"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptStatsDescr"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptStatsVal"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRefCount"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetDictLength"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRootObjOid"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRefSnipName"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetRefSnipInst"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetResIdType"),
        ("TIMETRA-SERV-MIB", "tmnxVsdScriptSnippetResIdValue"),
        ("TIMETRA-SERV-MIB", "tmnxVsdRootObjTableLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxVsdNonStoredRootObjCount"),
        ("TIMETRA-SERV-MIB", "tmnxVsdSnippetTableLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxVsdSnipRootObjTblLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxVsdSnippetRefTableLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxVsdSnippetResIdTblLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxVsdStatsLastClearedTime"))
)
if mibBuilder.loadTexts:
    tmnxSvcVsdDynamicSvcGroup.setStatus("current")

tmnxSvcV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 481)
)
tmnxSvcV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeRadSessTimeout"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeStatelessRed"))
)
if mibBuilder.loadTexts:
    tmnxSvcV14v0Group.setStatus("current")

svcTlsEsPbrL2Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 482)
)
svcTlsEsPbrL2Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Status"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2NumUsers"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2VTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2VTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2EgrVNI"))
)
if mibBuilder.loadTexts:
    svcTlsEsPbrL2Group.setStatus("current")

svcVprnEsPbrL3Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 483)
)
svcVprnEsPbrL3Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Esi"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3IPIfIndex"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Status"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3NumUsers"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3MAC"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3VTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3VTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3EgrVNI"))
)
if mibBuilder.loadTexts:
    svcVprnEsPbrL3Group.setStatus("current")

tmnxSvcDhcpV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 484)
)
tmnxSvcDhcpV13v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrSummedCIR")
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV13v0Group.setStatus("current")

tmnxArpHostV13v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 485)
)
tmnxArpHostV13v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcArpHostOvrSummedCIR")
)
if mibBuilder.loadTexts:
    tmnxArpHostV13v0Group.setStatus("current")

svcBgpEvpnMplsV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 487)
)
svcBgpEvpnMplsV14v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEntropyLabel")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsV14v0Group.setStatus("current")

tmnxSvcRadClassGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 488)
)
tmnxSvcRadClassGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcDhcpLeaseRadClassAscii"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpLeaseRadClass"),
        ("TIMETRA-SERV-MIB", "tmnxSvcArpHostRadClassAscii"),
        ("TIMETRA-SERV-MIB", "tmnxSvcArpHostRadClass"))
)
if mibBuilder.loadTexts:
    tmnxSvcRadClassGroup.setStatus("current")

svcAutoBindTunnelSRTEGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 489)
)
svcAutoBindTunnelSRTEGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindSrTe")
)
if mibBuilder.loadTexts:
    svcAutoBindTunnelSRTEGroup.setStatus("current")

svcTlsStaticBHGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 490)
)
svcTlsStaticBHGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgStaticBH"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgStaticBH"))
)
if mibBuilder.loadTexts:
    svcTlsStaticBHGroup.setStatus("current")

svcBgpEvpnP2mpMldpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 493)
)
svcBgpEvpnP2mpMldpGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnIngressRepIncMcastAdv"),
        ("TIMETRA-SERV-MIB", "svcTlsIPmsiOwner"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnP2mpMldpGroup.setStatus("current")

svcBgpEvpnMplsMh1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 494)
)
svcBgpEvpnMplsMh1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAdminState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSvcCarving"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLagId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPortId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSdpId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSourceBMacLSB"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblSize"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTo"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsActTimer"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsEthSegId"),
        ("TIMETRA-SERV-MIB", "svcSysEthSegBMacAddress"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSHGLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPLstChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTunnelType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPTnlType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcNumEvpnMHStandbySaps"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestLstChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnOperRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRDType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMh1Group.setStatus("obsolete")

svcBgpEvpnMplsMhObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 495)
)
svcBgpEvpnMplsMhObsoletedGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestNumMacs")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMhObsoletedGroup.setStatus("current")

tmnxSvcVplsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 496)
)
tmnxSvcVplsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosPolicyId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosFPQGrp"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosFPQGrpInstId"))
)
if mibBuilder.loadTexts:
    tmnxSvcVplsGroup.setStatus("obsolete")

svcBgpEvpnAutoBindTnlSRTEGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 497)
)
svcBgpEvpnAutoBindTnlSRTEGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrTe")
)
if mibBuilder.loadTexts:
    svcBgpEvpnAutoBindTnlSRTEGroup.setStatus("obsolete")

tmnxSvcVllBgpEvpnGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 498)
)
tmnxSvcVllBgpEvpnGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLastTblChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLastChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperImportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperExportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperExportRteTarget"))
)
if mibBuilder.loadTexts:
    tmnxSvcVllBgpEvpnGroup.setStatus("obsolete")

tmnxSvcNotifyObjsV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 501)
)
tmnxSvcNotifyObjsV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateOldChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStateNewChAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpClientLease"),
        ("TIMETRA-SERV-MIB", "svcDhcpPacketProblem"),
        ("TIMETRA-SERV-MIB", "svcDhcpLseStatePopulateError"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddrType"),
        ("TIMETRA-SERV-MIB", "hostConnectivityCiAddr"),
        ("TIMETRA-SERV-MIB", "hostConnectivityChAddr"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacIpAddress"),
        ("TIMETRA-SERV-MIB", "staticHostDynamicMacConflict"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"),
        ("TIMETRA-SERV-MIB", "svcDhcpProxyError"),
        ("TIMETRA-SERV-MIB", "svcDhcpCoAError"),
        ("TIMETRA-SERV-MIB", "svcDhcpSubAuthError"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegFailedReason"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrType"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrValue"),
        ("TIMETRA-SERV-MIB", "svcMstiInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxCustomerRootBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOtherBridgeId"),
        ("TIMETRA-SERV-MIB", "tmnxOldSdpBindTlsStpPortState"),
        ("TIMETRA-SERV-MIB", "tmnxVcpState"),
        ("TIMETRA-SERV-MIB", "macPinningMacAddress"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRow"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRowDescr"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRow"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRowDescr"),
        ("TIMETRA-SERV-MIB", "svcHostAddrType"),
        ("TIMETRA-SERV-MIB", "svcHostAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObjsV14v0Group.setStatus("current")

tmnxSvcNotifyObsoletedV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 502)
)
tmnxSvcNotifyObsoletedV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcObjRow"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRowDescr"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuite"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObsoletedV14v0Group.setStatus("current")

svcEpipeBgpEvpnAutoBindTnlGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 505)
)
svcEpipeBgpEvpnAutoBindTnlGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrTe")
)
if mibBuilder.loadTexts:
    svcEpipeBgpEvpnAutoBindTnlGroup.setStatus("obsolete")

tmnxSvcSysVxlanARGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 507)
)
tmnxSvcSysVxlanARGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARIpAddrType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARRepIpAddr"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanAsstdRepl"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARActTime"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtInUse"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtActive"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtPndTime"))
)
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanARGroup.setStatus("obsolete")

svcBgpEvpnMplsRcdSrcMacGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 508)
)
svcBgpEvpnMplsRcdSrcMacGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMacAct"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanResProtSrcMacAct"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsRcdSrcMacGroup.setStatus("obsolete")

svcVxlanV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 509)
)
svcVxlanV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbVTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbVNI"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumEgrVNIs"),
        ("TIMETRA-SERV-MIB", "svcVTEPOperState"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNINumMACs"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIOperState"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNISvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIMcast"))
)
if mibBuilder.loadTexts:
    svcVxlanV14v0Group.setStatus("obsolete")

svcVxlanObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 510)
)
svcVxlanObsoletedGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIInMcastList")
)
if mibBuilder.loadTexts:
    svcVxlanObsoletedGroup.setStatus("current")

svcEpipePwPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 512)
)
svcEpipePwPortGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipePwPortTableLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortId"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortFpeId"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortEgrShapVPort"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortEgrShapIntDestId"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortMonOperGrp"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortAdminStatus"))
)
if mibBuilder.loadTexts:
    svcEpipePwPortGroup.setStatus("current")

tmnxSvcSysVxlanTunTermGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 513)
)
tmnxSvcSysVxlanTunTermGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermTblLstChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermFpeId"),
        ("TIMETRA-SERV-MIB", "svcTlsExtVxlanSrcTepIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsExtVxlanSrcTepIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanTunTermGroup.setStatus("current")

svcTlsPbbV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 514)
)
svcTlsPbbV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnAcceptIvplsEvpnFlush"),
        ("TIMETRA-SERV-MIB", "svcTlsBackboneEvpnFlush"))
)
if mibBuilder.loadTexts:
    svcTlsPbbV14v0Group.setStatus("current")

svcVplsEvpnV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 515)
)
svcVplsEvpnV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanBgpInstance"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsBgpInstance"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiRD"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpVsiImportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpAutoRD"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperRD"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperRDType"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperImportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperExportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpOperExportRteTarget"))
)
if mibBuilder.loadTexts:
    svcVplsEvpnV14v0Group.setStatus("current")

svcBgpEvpnMplsMhAdEviRtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 516)
)
svcBgpEvpnMplsMhAdEviRtGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnAdEsRtTgtType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnADESRDAddrType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnADPerESRDIpAddr"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviOperRD"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMhAdEviRtGroup.setStatus("current")

svcBgpEvpnMacDupDetBHGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 518)
)
svcBgpEvpnMacDupDetBHGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupBlkHoleDupMac")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetBHGroup.setStatus("current")

svcProxyArpNdMacListGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 520)
)
svcProxyArpNdMacListGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcProxyArpNdMacListTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListLastChgd"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListRowStatus"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListMacRowStatus"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListMacLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgMacList"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgResolve"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgMacList"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgResolve"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDynCfgRemResolve"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDynCfgRemResolve"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListNumMacs"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListNumAssocs"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdAssocsLastChgd"))
)
if mibBuilder.loadTexts:
    svcProxyArpNdMacListGroup.setStatus("current")

svcVplsEvpnInclMcastV14v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 521)
)
svcVplsEvpnInclMcastV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnIncMcastOrigAddr"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIncMcastOrigAddrType"))
)
if mibBuilder.loadTexts:
    svcVplsEvpnInclMcastV14v0Group.setStatus("current")

svcVplsIpv6McastV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 522)
)
svcVplsIpv6McastV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsMcastIpv6SnpgScope")
)
if mibBuilder.loadTexts:
    svcVplsIpv6McastV15v0Group.setStatus("current")

tmnxSvcSysVirtualEthSegGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 523)
)
tmnxSvcSysVirtualEthSegGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegQTagRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegQTagRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegQTagRngLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegQTagRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVcIdRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVcIdRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVcIdRngLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVcIdRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegType"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagRngLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagCTagRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagCTagRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagCTagRngLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxESSTagCTagRngTo"))
)
if mibBuilder.loadTexts:
    tmnxSvcSysVirtualEthSegGroup.setStatus("current")

svcAutoBindTunnelV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 525)
)
svcAutoBindTunnelV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindBgp")
)
if mibBuilder.loadTexts:
    svcAutoBindTunnelV15v0Group.setStatus("current")

svcBgpEvpnMplsMhDfPrefGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 526)
)
svcBgpEvpnMplsMhDfPrefGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecTblLstChgd"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecRowStatus"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecPrefMode"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecValue"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysESOperServCarvMode"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysESEviIsidCfgRngsType"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecOperValue"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecDntPreempt"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMhDfPrefGroup.setStatus("current")

svcBgpEvpnEtreeV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 527)
)
svcBgpEvpnEtreeV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnEtreeLeafLabel"),
        ("TIMETRA-SERV-MIB", "tlsFdbIsEvpnEtreeLeaf"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnAllocLeafLabel"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnEtreeV15v0Group.setStatus("current")

tmnxSvcSelectiveUrpfGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 528)
)
tmnxSvcSelectiveUrpfGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcNetIngUrpfCheckState")
)
if mibBuilder.loadTexts:
    tmnxSvcSelectiveUrpfGroup.setStatus("current")

svcBgpEvpnAutoBindUdpTnlGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 529)
)
svcBgpEvpnAutoBindUdpTnlGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMplsoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanSendEvpnEncap"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnAutoBindUdpTnlGroup.setStatus("obsolete")

tmnxSvcEpipeVxlanVtepGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 530)
)
tmnxSvcEpipeVxlanVtepGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVxlanSrcTepIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanSrcTepIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeVxlanVtepGroup.setStatus("current")

tmnxSvcEpipeNatOutsideV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 531)
)
tmnxSvcEpipeNatOutsideV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeNatOSRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeNatOSLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipeNatOSAdminState"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeNatOutsideV15v0Group.setStatus("current")

tmnxSvcEpipeVxlanGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 532)
)
tmnxSvcEpipeVxlanGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVxlanRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpAddr"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpOperGrp"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIOperState"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVxlanType"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeVxlanGroup.setStatus("obsolete")

svcPbbEvpnIsidRtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 533)
)
svcPbbEvpnIsidRtGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtRowStatus"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtLastChgd"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtIsidRngTo"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtTgtType"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtTarget"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtTblLastChgd"))
)
if mibBuilder.loadTexts:
    svcPbbEvpnIsidRtGroup.setStatus("current")

tmnxSvcTlsEgrObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 534)
)
tmnxSvcTlsEgrObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsEgrMcGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpDescription"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpChainLimit"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpEncapType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpDot1qEtherType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpQinqEtherType"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpMacFilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpIpFilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpIpv6FilterId"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpQinqFixedTagPosition"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpOperQinqFixedTagVal"),
        ("TIMETRA-SERV-MIB", "tlsEgrMcGrpAdminQinqFixedTagVal"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsEgrObsoletedGroup.setStatus("current")

tmnxSvcTlsV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 535)
)
tmnxSvcTlsV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsMacLearning"),
        ("TIMETRA-SERV-MIB", "svcTlsDiscardUnknownDest"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumStaticEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbLocalAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbRemoteAgeTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsStpPriority"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTimeSinceTopologyChange"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTopologyChanges"),
        ("TIMETRA-SERV-MIB", "svcTlsStpDesignatedRoot"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRootCost"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRootPort"),
        ("TIMETRA-SERV-MIB", "svcTlsStpMaxAge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpHelloTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpForwardDelay"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeMaxAge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeHelloTime"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeForwardDelay"),
        ("TIMETRA-SERV-MIB", "svcTlsStpOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVirtualRootBridgeStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMacAgeing"),
        ("TIMETRA-SERV-MIB", "svcTlsStpTopologyChangeActive"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsVpnId"),
        ("TIMETRA-SERV-MIB", "svcTlsCustId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVersion"),
        ("TIMETRA-SERV-MIB", "svcTlsStpHoldCount"),
        ("TIMETRA-SERV-MIB", "svcTlsStpPrimaryBridge"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeInstanceId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVcpOperProtocol"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveMaxRate"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveRetryTimeout"),
        ("TIMETRA-SERV-MIB", "svcTlsMacMoveAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMacRelearnOnly"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableSize"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMacFlushOnFail"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRegionName"),
        ("TIMETRA-SERV-MIB", "svcTlsStpRegionRevision"),
        ("TIMETRA-SERV-MIB", "svcTlsStpBridgeMaxHops"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRegionalRoot"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistIntRootCost"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRemainingHopCount"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRegionalRootPort"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumLearnedEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumOamEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumDhcpEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumHostEntries"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvAction"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvSrcIp"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsShcvInterval"),
        ("TIMETRA-SERV-MIB", "svcTlsPriPortsCumulativeFactor"),
        ("TIMETRA-SERV-MIB", "svcTlsSecPortsCumulativeFactor"),
        ("TIMETRA-SERV-MIB", "svcTlsL2ptTermEnabled"),
        ("TIMETRA-SERV-MIB", "svcTlsPropagateMacFlush"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpMaxAttributes"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttributeCount"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpFailedRegisterCount"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpFloodTime"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblHighWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblLowWatermark"),
        ("TIMETRA-SERV-MIB", "svcTlsMcPathMgmtPlcyName"))
)
if mibBuilder.loadTexts:
    tmnxSvcTlsV15v0Group.setStatus("current")

tmnxSvcRateV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 536)
)
tmnxSvcRateV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "custMultSvcSiteEgrAggRateLimitHi")
)
if mibBuilder.loadTexts:
    tmnxSvcRateV15v0Group.setStatus("current")

svcTlsPmsiV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 538)
)
svcTlsPmsiV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsIPmsiOperState")
)
if mibBuilder.loadTexts:
    svcTlsPmsiV15v0Group.setStatus("current")

tmnxSvcDhcpV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 539)
)
tmnxSvcDhcpV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseOvrClassWeight"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadSubIfPfxType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadSubIfPfx"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRadSubIfPfxLen"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseRtrAdvPlcy"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWlanGwBridgeId"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseWppPortalGroupName"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpV15v0Group.setStatus("current")

tmnxArpHostV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 540)
)
tmnxArpHostV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcArpHostOvrClassWeight")
)
if mibBuilder.loadTexts:
    tmnxArpHostV15v0Group.setStatus("current")

svcTlsFdbV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 541)
)
svcTlsFdbV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsSelLearnedFdb")
)
if mibBuilder.loadTexts:
    svcTlsFdbV15v0Group.setStatus("current")

svcVprnWeightedLoadBalanceGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 545)
)
svcVprnWeightedLoadBalanceGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindWeightedEcmp"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindMaxEcmpRoutes"))
)
if mibBuilder.loadTexts:
    svcVprnWeightedLoadBalanceGroup.setStatus("obsolete")

svcVxlanMhV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 546)
)
svcVxlanMhV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstEthSegName"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstEthSegStatus"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstOperFlagsMhStandby"))
)
if mibBuilder.loadTexts:
    svcVxlanMhV15v0Group.setStatus("obsolete")

svcVxlanInstBgpEvpnMhV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 547)
)
svcVxlanInstBgpEvpnMhV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanSendImetIrOnNdf"))
)
if mibBuilder.loadTexts:
    svcVxlanInstBgpEvpnMhV15v0Group.setStatus("obsolete")

svcPbbEvpnEtreeV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 549)
)
svcPbbEvpnEtreeV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcPbbLeafSrcBVplsMacAddr")
)
if mibBuilder.loadTexts:
    svcPbbEvpnEtreeV15v0Group.setStatus("current")

svcSysGreEthBrgdTnlTrmGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 550)
)
svcSysGreEthBrgdTnlTrmGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmTblLstChg"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmRowStatus"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmLastChg"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmFpeId"))
)
if mibBuilder.loadTexts:
    svcSysGreEthBrgdTnlTrmGroup.setStatus("current")

svcVplsProxyArpNdRtmV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 554)
)
svcVplsProxyArpNdRtmV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpCfgRouteTag"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdCfgRouteTag"))
)
if mibBuilder.loadTexts:
    svcVplsProxyArpNdRtmV15v0Group.setStatus("current")

svcVprnBgpAutoBindUdpTnlGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 555)
)
svcVprnBgpAutoBindUdpTnlGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdp")
)
if mibBuilder.loadTexts:
    svcVprnBgpAutoBindUdpTnlGroup.setStatus("current")

svcTlsFdbMacScaleV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 556)
)
svcTlsFdbMacScaleV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbCmplxMap"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbTableSize"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbAllocEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbGlobalEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbRvplsEntriesInUse"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbRvplsEntriesAlloc"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbEsBmacEntriesInUse"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbEsBmacEntriesAlloc"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbNumEntriesInUse"))
)
if mibBuilder.loadTexts:
    svcTlsFdbMacScaleV15v0Group.setStatus("current")

tmnxSvcV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 557)
)
tmnxSvcV15v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcCreationOrigin")
)
if mibBuilder.loadTexts:
    tmnxSvcV15v0Group.setStatus("current")

tmnxSvcV15v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 558)
)
tmnxSvcV15v0ObsoletedGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcMacFdbRecords")
)
if mibBuilder.loadTexts:
    tmnxSvcV15v0ObsoletedGroup.setStatus("current")

tmnxSvcCustomerNameGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 559)
)
tmnxSvcCustomerNameGroup.setObjects(
    ("TIMETRA-SERV-MIB", "custName")
)
if mibBuilder.loadTexts:
    tmnxSvcCustomerNameGroup.setStatus("current")

svcVxlanEcmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 560)
)
svcVxlanEcmpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsExtVxlanIpv4TepEcmp")
)
if mibBuilder.loadTexts:
    svcVxlanEcmpGroup.setStatus("current")

tmnxSvcIesIfV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 561)
)
tmnxSvcIesIfV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesIfIPv6WanMode")
)
if mibBuilder.loadTexts:
    tmnxSvcIesIfV16v0Group.setStatus("current")

tmnxSvcSiteV15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 562)
)
tmnxSvcSiteV15v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteIdAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdEncapValue"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdPortId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSdpBindId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdShgMeshSdp"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdShgName"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSiteId"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdFailedThresh"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDesignatedFwdr"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDfUpTime"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdDfChgCnt"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsVeName"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsMaxVeId"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpVplsTblLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsShgSiteName"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdBootTimer"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdSiteActTimer"),
        ("TIMETRA-SERV-MIB", "svcTlsSiteIdTimerRemain"))
)
if mibBuilder.loadTexts:
    tmnxSvcSiteV15v1Group.setStatus("current")

svcTlsBgpObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 563)
)
svcTlsBgpObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBgpExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiImportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpVsiRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpAutoRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperRD"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperRDType"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperImportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperExportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpOperExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpRowStatus"))
)
if mibBuilder.loadTexts:
    svcTlsBgpObsoletedGroup.setStatus("current")

svcBgpAutoRDV15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 564)
)
svcBgpAutoRDV15v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpAutoRD"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperRD"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperRDType"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1IpAddr"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1CommValStart"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1CommValEnd"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDType1InUse"))
)
if mibBuilder.loadTexts:
    svcBgpAutoRDV15v1Group.setStatus("current")

tmnxSvcCreation15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 565)
)
tmnxSvcCreation15v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNameCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpADCreationOrigin"),
        ("TIMETRA-SERV-MIB", "iesIfCreationOrigin"))
)
if mibBuilder.loadTexts:
    tmnxSvcCreation15v1Group.setStatus("current")

svcBgpEvpnMplsV15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 566)
)
svcBgpEvpnMplsV15v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEvi"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceVlanVcFwding"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsShgName"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumEvpnMplsDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESBMacDest"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblInMcastList"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressBumLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTunnelType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsAdminState"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsV15v1Group.setStatus("obsolete")

tmnxSvcVllBgpV15v1Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 567)
)
tmnxSvcVllBgpV15v1Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpExportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiRD"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdBootTimer"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDesignatedFwdr"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDfChgCnt"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdDfUpTime"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdEncapValue"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdPortId"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdSiteActTimer"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdSiteId"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllSiteIdTimerRemain"),
        ("TIMETRA-SERV-MIB", "svcVllBgpRowStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcVllBgpV15v1Group.setStatus("current")

svcVxlanTermV15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 568)
)
svcVxlanTermV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnVxlanTunTermTableLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnVxlanTunTermRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnVxlanTunTermFpeId"),
        ("TIMETRA-SERV-MIB", "svcVprnVxlanTunTermLastChg"))
)
if mibBuilder.loadTexts:
    svcVxlanTermV15v0Group.setStatus("current")

svcV15v0NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 570)
)
svcV15v0NotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcNotifEvpnMHStandbyStatus"))
)
if mibBuilder.loadTexts:
    svcV15v0NotifyObjsGroup.setStatus("current")

svcV19v0NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 571)
)
svcV19v0NotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifEthSegName"),
        ("TIMETRA-SERV-MIB", "svcNotifInetAddr"),
        ("TIMETRA-SERV-MIB", "svcNotifInetAddrType"))
)
if mibBuilder.loadTexts:
    svcV19v0NotifyObjsGroup.setStatus("current")

svcSrv6NotifyObjsGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 572)
)
svcSrv6NotifyObjsGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSrv6LocatorName"),
        ("TIMETRA-SERV-MIB", "svcSrv6FunctionType"))
)
if mibBuilder.loadTexts:
    svcSrv6NotifyObjsGroup.setStatus("current")

svcBgpEvpnMplsObjectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 572)
)
svcBgpEvpnMplsObjectGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEvi"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceVlanVcFwding"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsShgName"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumEvpnMplsDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESBMacDest"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblInMcastList"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressBumLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsAdminState"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsObjectGroup.setStatus("obsolete")

svcBgpEvpnMplsObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 573)
)
svcBgpEvpnMplsObsoletedGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTunnelType")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsObsoletedGroup.setStatus("current")

svcEvpnMplsBindsTransportGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 574)
)
svcEvpnMplsBindsTransportGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblResType")
)
if mibBuilder.loadTexts:
    svcEvpnMplsBindsTransportGroup.setStatus("obsolete")

svcBgpEvpnMplsMh1V15v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 575)
)
svcBgpEvpnMplsMh1V15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAdminState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSvcCarving"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLagId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPortId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSdpId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSourceBMacLSB"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblSize"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTo"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsActTimer"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsEthSegId"),
        ("TIMETRA-SERV-MIB", "svcSysEthSegBMacAddress"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSHGLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPLstChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTunnelType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcNumEvpnMHStandbySaps"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestLstChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnOperRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRDType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMh1V15v0Group.setStatus("obsolete")

svcBgpEvpnMplsMh1ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 576)
)
svcBgpEvpnMplsMh1ObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTunnelType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPTnlType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMh1ObsoletedGroup.setStatus("current")

svcEvpnMplsMhBindsTransportGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 577)
)
svcEvpnMplsMhBindsTransportGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPResType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPResType"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsMhBindsTransportGroup.setStatus("obsolete")

svcPppoeRedirectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 578)
)
svcPppoeRedirectGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeFwdWhlSalePortId"),
        ("TIMETRA-SERV-MIB", "svcEpipeFwdWhlSaleEncapValue"))
)
if mibBuilder.loadTexts:
    svcPppoeRedirectGroup.setStatus("current")

tmnxSvcV16v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 579)
)
tmnxSvcV16v0ObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIfSapCfgDefFilterProfile"),
        ("TIMETRA-SERV-MIB", "svcEthCfmVMepExtensions"))
)
if mibBuilder.loadTexts:
    tmnxSvcV16v0ObsoletedGroup.setStatus("current")

tmnxSvcInterAsObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 580)
)
tmnxSvcInterAsObsoletedGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcInterASMvpn")
)
if mibBuilder.loadTexts:
    tmnxSvcInterAsObsoletedGroup.setStatus("current")

svcBgpEvpnVxlanGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 581)
)
svcBgpEvpnVxlanGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanESDest"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanNonESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestLastChanged"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanGroup.setStatus("obsolete")

svcBgpEvpnMhEthSegPwPortGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 584)
)
svcBgpEvpnMhEthSegPwPortGroup.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPwPortId")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMhEthSegPwPortGroup.setStatus("current")

svcOperGroupConfigGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 585)
)
svcOperGroupConfigGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcOperGroupConfigLastChange"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigName"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigTblLastChgd"))
)
if mibBuilder.loadTexts:
    svcOperGroupConfigGroup.setStatus("current")

svcVxlanV16v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 586)
)
svcVxlanV16v0ObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVTEPNumEgrVNIs"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNISvcId"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNINumMACs"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIMcast"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIOperState"))
)
if mibBuilder.loadTexts:
    svcVxlanV16v0ObsoletedGroup.setStatus("current")

svcVxlanV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 587)
)
svcVxlanV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbVTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbVNI"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPOperState"))
)
if mibBuilder.loadTexts:
    svcVxlanV16v0Group.setStatus("current")

svcBgpEvpnInstGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 588)
)
svcBgpEvpnInstGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstTableLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAdminState"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanSendEvpnEncap"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanSndImtIrOnNdf"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsFrceVlanVcFwd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsShgName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEntropyLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsRPSMacAct"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEvpnEncapMoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsForceQinqVcFwd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstABTTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrTe"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlTag"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVni"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniNumMACs"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniOperState"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniMcast"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndInUse"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndActive"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndPndTime"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPVni"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPLastChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDestLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosPolicyId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosFPQGrp"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosFPQGrpInst"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstAsstdRepl"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstARActTime"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstResProtSrcMacAct"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVni"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstTableLastChgd"),
        ("TIMETRA-SERV-MIB", "tlsFdbVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniVxlanType"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDestNumMacs"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstGroup.setStatus("obsolete")

tmnxSvcV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 589)
)
tmnxSvcV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseTerminationType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtMetric"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtPreference"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnCfmMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIpoeSessionHost"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePppSession"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMplsoUdp"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanESDest"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanNonESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvDefaultRoute"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpMacAddr"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumMoves"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetWindow"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetRetry"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumDups"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacAddress"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacTime"))
)
if mibBuilder.loadTexts:
    tmnxSvcV16v0Group.setStatus("obsolete")

tmnxSvcObsoletedV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 590)
)
tmnxSvcObsoletedV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDefMeshVcId"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceVlanVcFwding"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsShgName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsAdminState"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEntropyLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMacAct"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsBgpInstance"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMplsoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceQinqVcFwding"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanSendEvpnEncap"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanSendImetIrOnNdf"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcVllBgpEvpnAutoBindTnlSrTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnABTnlTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlSrTe"),
        ("TIMETRA-SERV-MIB", "svcTlsBgpEvpnAutoBindTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosPolicyId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosFPQGrp"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanNetIngQosFPQGrpInstId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanAsstdRepl"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARActTime"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanResProtSrcMacAct"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtInUse"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtActive"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanARLeafReplCndtPndTime"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV16v0Group.setStatus("current")

tmnxSvcAdminTagsV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 591)
)
tmnxSvcAdminTagsV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindAdminTags")
)
if mibBuilder.loadTexts:
    tmnxSvcAdminTagsV16v0Group.setStatus("current")

tmnxSvcEvpnMplsQinqV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 592)
)
tmnxSvcEvpnMplsQinqV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsForceQinqVcFwding")
)
if mibBuilder.loadTexts:
    tmnxSvcEvpnMplsQinqV16v0Group.setStatus("current")

svcMdAutoIdV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 593)
)
svcMdAutoIdV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMdAutoIdSvcRangeStart"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdSvcRangeEnd"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdCustRangeStart"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdCustRangeEnd"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdPwTmplRangeStart"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdPwTmplRangeEnd"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdSvcCount"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdCustCount"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdPwTmplCount"))
)
if mibBuilder.loadTexts:
    svcMdAutoIdV16v0Group.setStatus("current")

tmnxSvcEpipePwPortFlexV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 594)
)
tmnxSvcEpipePwPortFlexV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEpipePwPortOperStatus")
)
if mibBuilder.loadTexts:
    tmnxSvcEpipePwPortFlexV16v0Group.setStatus("current")

svcBgpEvpnMplsV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 595)
)
svcBgpEvpnMplsV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEvi"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumEvpnMplsDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESBMacDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblInMcastList"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblLastChanged"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsV16v0Group.setStatus("obsolete")

tmnxSvcVllBgpEvpnV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 596)
)
tmnxSvcVllBgpEvpnV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLastTblChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLastChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperImportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperImportRteTarget"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperExportRteTgtOrigin"),
        ("TIMETRA-SERV-MIB", "svcVllBgpOperExportRteTarget"))
)
if mibBuilder.loadTexts:
    tmnxSvcVllBgpEvpnV16v0Group.setStatus("current")

tmnxSvcSysPwPortListV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 597)
)
tmnxSvcSysPwPortListV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysPwPortListRowStatus")
)
if mibBuilder.loadTexts:
    tmnxSvcSysPwPortListV16v0Group.setStatus("current")

tmnxSvcSysVxlanARV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 598)
)
tmnxSvcSysVxlanARV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARIpAddrType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARRepIpAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcSysVxlanARV16v0Group.setStatus("current")

svcBgpEvpnMplsRSMV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 599)
)
svcBgpEvpnMplsRSMV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsResProtSrcMacAct"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsRSMV16v0Group.setStatus("current")

svcVxlanMhV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 600)
)
svcVxlanMhV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVxlanInstEthSegName"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstEthSegStatus"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstOperFlagsMhStandby"))
)
if mibBuilder.loadTexts:
    svcVxlanMhV16v0Group.setStatus("current")

svcTlsStaticVxlanV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 602)
)
svcTlsStaticVxlanV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsVxlanInstEgrVTEPRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstSrcVTEPSecurity"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacAgeing"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacLearning"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstDiscardUnknownSource"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacAddressLimit"))
)
if mibBuilder.loadTexts:
    svcTlsStaticVxlanV16v0Group.setStatus("current")

svcEpipeVxInstV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 604)
)
svcEpipeVxInstV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVxInstVni"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstEgrVTEPIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstEgrVTEPIpAddr"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstEgrVTEPIpOperGrp"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstTblLastChgd"))
)
if mibBuilder.loadTexts:
    svcEpipeVxInstV16v0Group.setStatus("current")

svcBgpEvpnDefRtTagV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 605)
)
svcBgpEvpnDefRtTagV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstDefRtTag")
)
if mibBuilder.loadTexts:
    svcBgpEvpnDefRtTagV16v0Group.setStatus("current")

svcBgpEvpnMplsABTV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 606)
)
svcBgpEvpnMplsABTV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrPlcy")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsABTV16v0Group.setStatus("current")

svcVprnAaaTacPlusV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 607)
)
svcVprnAaaTacPlusV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnTacPlusAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusTimeout"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerSecret"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServInetAddrType"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerInetAddress"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerPort"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusServerTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusAccounting"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusAcctRecType"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusAuthorization"),
        ("TIMETRA-SERV-MIB", "svcVprnTacplusUseTemplate"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusInteractiveAuthen"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusAuthorUsePrivLvl"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusPrivLvlRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusPriLvlMapUserProf"),
        ("TIMETRA-SERV-MIB", "svcVprnTPlusPriLvlMpLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnTcPlusPriLvlMpTblLstChgd"))
)
if mibBuilder.loadTexts:
    svcVprnAaaTacPlusV16v0Group.setStatus("current")

svcVprnAaaLdapV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 608)
)
svcVprnAaaLdapV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnLdapAdminState"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapOperState"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapRetryAttempts"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapTimeout"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapUseTemplate"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapPublicKeyAuth"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerTblLstChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerAdminState"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerOperState"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerInetAddressType"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServInetAddr"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerPort"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServBindAuthRtDn"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServBindAuthPwd"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerName"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerSearch"),
        ("TIMETRA-SERV-MIB", "svcVprnLdapServerTlsProf"))
)
if mibBuilder.loadTexts:
    svcVprnAaaLdapV16v0Group.setStatus("current")

svcVprnAaaRadiusV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 609)
)
svcVprnAaaRadiusV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnRadiusServerSecret"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusRetryAttempts"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusAccountingPort"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerInetAddrType"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerInetAddress"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerTblLstChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusUseTemplate"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusAccounting"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusAuthAlgorithm"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusAuthorization"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusInteractiveAuthen"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusPort"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusTimeout"))
)
if mibBuilder.loadTexts:
    svcVprnAaaRadiusV16v0Group.setStatus("current")

svcVprnRibApiV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 610)
)
svcVprnRibApiV16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindRibApi")
)
if mibBuilder.loadTexts:
    svcVprnRibApiV16v0Group.setStatus("current")

svcSysVpnGreSrcIpV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 611)
)
svcSysVpnGreSrcIpV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpAddr"))
)
if mibBuilder.loadTexts:
    svcSysVpnGreSrcIpV16v0Group.setStatus("current")

svcVprnMgmtIfV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 612)
)
svcVprnMgmtIfV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnEnableServers"),
        ("TIMETRA-SERV-MIB", "svcVprnTelnetServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnSSHServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnFTPServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTelnet6ServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlTblLstChgd"))
)
if mibBuilder.loadTexts:
    svcVprnMgmtIfV16v0Group.setStatus("obsolete")

svcMplsFwdPlcyV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 613)
)
svcMplsFwdPlcyV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindMplsFwdPlcy"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstBndTnlMplsFwdPlcy"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindSrPolicy"))
)
if mibBuilder.loadTexts:
    svcMplsFwdPlcyV16v0Group.setStatus("current")

tmnxSvcEvpnVpwsVxlanV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 614)
)
tmnxSvcEvpnVpwsVxlanV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsOrigIpAddrType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsOrigIpAddr"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRouteNxtHopType"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRouteNxtHopAddr"))
)
if mibBuilder.loadTexts:
    tmnxSvcEvpnVpwsVxlanV16v0Group.setStatus("current")

tmnxIesIfVplsEvpnGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 615)
)
tmnxIesIfVplsEvpnGroup.setObjects(
    ("TIMETRA-SERV-MIB", "iesIfVplsEvpnTnlIp6GwAddrType")
)
if mibBuilder.loadTexts:
    tmnxIesIfVplsEvpnGroup.setStatus("current")

svcVplsVxlanRxDiscardGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 616)
)
svcVplsVxlanRxDiscardGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsVxInstRxDiscardOnNdf"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstIgmpSnpgMrouter"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMldSnpgMrouter"))
)
if mibBuilder.loadTexts:
    svcVplsVxlanRxDiscardGroup.setStatus("current")

svcEvpnMplsEPGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 617)
)
svcEvpnMplsEPGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstEndpoint"),
        ("TIMETRA-SERV-MIB", "svcEPTxActiveBgpEvpnMplsInstId"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsEPGroup.setStatus("current")

tmnxSvcEpipeVxlanObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 618)
)
tmnxSvcEpipeVxlanObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpAddr"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanEgrVTEPIpOperGrp"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxlanTblLastChgd"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeVxlanObsoletedGroup.setStatus("current")

tmnxSvcEpipeVxlanV16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 619)
)
tmnxSvcEpipeVxlanV16v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIOperState"),
        ("TIMETRA-SERV-MIB", "svcEpipeVTEPEgrVNIVxlanType"))
)
if mibBuilder.loadTexts:
    tmnxSvcEpipeVxlanV16v0Group.setStatus("current")

svcVplsResFilterV19v5Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 620)
)
svcVplsResFilterV19v5Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstBndTnlRibApi")
)
if mibBuilder.loadTexts:
    svcVplsResFilterV19v5Group.setStatus("current")

tmnxSvcSrOspf3V16v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 621)
)
tmnxSvcSrOspf3V16v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindSrOspf3")
)
if mibBuilder.loadTexts:
    tmnxSvcSrOspf3V16v0Group.setStatus("current")

svcVplsEvpnMplsTnlIdGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 622)
)
svcVplsEvpnMplsTnlIdGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTnlId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTnlResType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPTnlId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTnlId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlLastCh"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlInMcList"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlResType"))
)
if mibBuilder.loadTexts:
    svcVplsEvpnMplsTnlIdGroup.setStatus("obsolete")

svcBgpEvpnOperGrpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 623)
)
svcBgpEvpnOperGrpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstOperGrp")
)
if mibBuilder.loadTexts:
    svcBgpEvpnOperGrpGroup.setStatus("current")

svcBgpEvpnVxlanMhGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 624)
)
svcBgpEvpnVxlanMhGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanAutoDiscRtAdv"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanMhMode"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestNumMacs"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanMhGroup.setStatus("obsolete")

svcSysEthSegOperGrpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 626)
)
svcSysEthSegOperGrpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperGrp")
)
if mibBuilder.loadTexts:
    svcSysEthSegOperGrpGroup.setStatus("current")

svcVllBgpVsiPolicyGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 627)
)
svcVllBgpVsiPolicyGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpVsiExportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiExportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiExportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiExportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiExportPolicy5"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiImportPolicy1"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiImportPolicy2"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiImportPolicy3"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiImportPolicy4"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiImportPolicy5"))
)
if mibBuilder.loadTexts:
    svcVllBgpVsiPolicyGroup.setStatus("current")

svcVprnMgmtIfV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 628)
)
svcVprnMgmtIfV19v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnEnableServers"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlRowStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlLastChanged"),
        ("TIMETRA-SERV-MIB", "svcVprnServerCtlTblLstChgd"))
)
if mibBuilder.loadTexts:
    svcVprnMgmtIfV19v0Group.setStatus("current")

svcVprnMgmtIfV19v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 629)
)
svcVprnMgmtIfV19v0ObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnTelnetServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnSSHServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnFTPServerOperStatus"),
        ("TIMETRA-SERV-MIB", "svcVprnTelnet6ServerOperStatus"))
)
if mibBuilder.loadTexts:
    svcVprnMgmtIfV19v0ObsoletedGroup.setStatus("current")

svcBgpEvpnMplsIpv6Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 630)
)
svcBgpEvpnMplsIpv6Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsRtNHType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsRtNHAddrType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsRtNHAddr"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsIpv6Group.setStatus("current")

svcEvpnOISMGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 631)
)
svcEvpnOISMGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfVplsEvpnTnlSupBcastDomain"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnSelMcastAdvertise"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlSbdMcast"))
)
if mibBuilder.loadTexts:
    svcEvpnOISMGroup.setStatus("obsolete")

svcEvpnRvplsMcastGwGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 632)
)
svcEvpnRvplsMcastGwGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWRowStatus"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWLastChgd"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWAdminState"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWType"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrActTimer"))
)
if mibBuilder.loadTexts:
    svcEvpnRvplsMcastGwGroup.setStatus("current")

svcBgpEvpnAutoBindOspfGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 633)
)
svcBgpEvpnAutoBindOspfGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrOspf3")
)
if mibBuilder.loadTexts:
    svcBgpEvpnAutoBindOspfGroup.setStatus("current")

svcRvplsEvpnHostRouteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 634)
)
svcRvplsEvpnHostRouteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRvplsEvpnArpAdvrtRowStatus"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnArpAdvrtLastChgd"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnArpAdvrtRouteTag"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnArpAdvrtTblLstChg"),
        ("TIMETRA-SERV-MIB", "iesIfRvplsEvpnLastChgd"),
        ("TIMETRA-SERV-MIB", "iesIfRvplsEvpnArpLearnDynamic"),
        ("TIMETRA-SERV-MIB", "iesIfRvplsEvpnFldGarpAndUnknReq"))
)
if mibBuilder.loadTexts:
    svcRvplsEvpnHostRouteGroup.setStatus("current")

svcBgpEvpnABTEcmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 635)
)
svcBgpEvpnABTEcmpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlEcmp")
)
if mibBuilder.loadTexts:
    svcBgpEvpnABTEcmpGroup.setStatus("current")

svcMplsEvpnRvplsEcmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 636)
)
svcMplsEvpnRvplsEcmpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsExtEvpnMplsRvplsEcmp")
)
if mibBuilder.loadTexts:
    svcMplsEvpnRvplsEcmpGroup.setStatus("current")

svcEvpnMcastLabelBlockGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 637)
)
svcEvpnMcastLabelBlockGroup.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnMcastLblBlk")
)
if mibBuilder.loadTexts:
    svcEvpnMcastLabelBlockGroup.setStatus("current")

tmnxSvcV19v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 638)
)
tmnxSvcV19v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcLogServicesAllEvents")
)
if mibBuilder.loadTexts:
    tmnxSvcV19v0Group.setStatus("current")

svcRvplsEvpnNdHostRouteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 639)
)
svcRvplsEvpnNdHostRouteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRvplsEvpnNdAdvrtRowStatus"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnNdAdvrtLastChgd"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnNdAdvrtRouteTag"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnNdAdvrtTblLstChg"),
        ("TIMETRA-SERV-MIB", "iesIfRvplsEvpnNdLearnDynamic"))
)
if mibBuilder.loadTexts:
    svcRvplsEvpnNdHostRouteGroup.setStatus("current")

svcTlsVxInstVTEPEgrVniGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 640)
)
svcTlsVxInstVTEPEgrVniGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniSbdMcast")
)
if mibBuilder.loadTexts:
    svcTlsVxInstVTEPEgrVniGroup.setStatus("current")

tmnxSvcIesGrpIfV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 641)
)
tmnxSvcIesGrpIfV20v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesGrpIfIgnoreDfBit")
)
if mibBuilder.loadTexts:
    tmnxSvcIesGrpIfV20v0Group.setStatus("current")

tmnxSvcV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 642)
)
tmnxSvcV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcNumEntries"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcType"),
        ("TIMETRA-SERV-MIB", "svcCustId"),
        ("TIMETRA-SERV-MIB", "svcIpRouting"),
        ("TIMETRA-SERV-MIB", "svcDescription"),
        ("TIMETRA-SERV-MIB", "svcMtu"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"),
        ("TIMETRA-SERV-MIB", "svcNumSaps"),
        ("TIMETRA-SERV-MIB", "svcNumSdps"),
        ("TIMETRA-SERV-MIB", "svcLastMgmtChange"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcVRouterId"),
        ("TIMETRA-SERV-MIB", "svcLastStatusChange"),
        ("TIMETRA-SERV-MIB", "svcVllType"),
        ("TIMETRA-SERV-MIB", "svcMgmtVpls"),
        ("TIMETRA-SERV-MIB", "svcRadiusDiscovery"),
        ("TIMETRA-SERV-MIB", "svcVcSwitching"),
        ("TIMETRA-SERV-MIB", "svcVplsType"),
        ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries"))
)
if mibBuilder.loadTexts:
    tmnxSvcV20v0Group.setStatus("current")

svcVxlanV20v0ObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 643)
)
svcVxlanV20v0ObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanESDestNumMacs"))
)
if mibBuilder.loadTexts:
    svcVxlanV20v0ObsoletedGroup.setStatus("current")

svcDHCPLeaseV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 644)
)
svcDHCPLeaseV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseTerminationType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseIpoeSessionHost"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeasePppSession"))
)
if mibBuilder.loadTexts:
    svcDHCPLeaseV20v0Group.setStatus("current")

tmnxSvcDhcpMRtV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 645)
)
tmnxSvcDhcpMRtV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtMetric"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtPreference"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtTag"))
)
if mibBuilder.loadTexts:
    tmnxSvcDhcpMRtV20v0Group.setStatus("current")

svcBgpEvpnV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 646)
)
svcBgpEvpnV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnCfmMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsEvpnEncapMplsoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvertisement"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacAdvDefaultRoute"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumMoves"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetWindow"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetRetry"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetNumDups"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacAddress"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDetDupMacTime"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnV20v0Group.setStatus("current")

tmnxVxlanV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 647)
)
tmnxVxlanV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTblLstChd"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegVxlanInstanceId"),
        ("TIMETRA-SERV-MIB", "tmnxESVxlanInstSvcRngLastChgd"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanESDest"),
        ("TIMETRA-SERV-MIB", "svcVTEPNumVxlanNonESDest"))
)
if mibBuilder.loadTexts:
    tmnxVxlanV20v0Group.setStatus("current")

svcTlsProxyV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 648)
)
svcTlsProxyV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpTblLastChngd"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpMacAddr"))
)
if mibBuilder.loadTexts:
    svcTlsProxyV20v0Group.setStatus("current")

svcBgpEvpnVxlanMhV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 649)
)
svcBgpEvpnVxlanMhV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanAutoDiscRtAdv"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanMhMode"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanMhV20v0Group.setStatus("current")

svcVplsMacProtect = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 650)
)
svcVplsMacProtect.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsPbbRestProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbRestProtSrcMacAction"))
)
if mibBuilder.loadTexts:
    svcVplsMacProtect.setStatus("current")

svcEvpnOismV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 651)
)
svcEvpnOismV20v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblMcast")
)
if mibBuilder.loadTexts:
    svcEvpnOismV20v0Group.setStatus("obsolete")

svcMacListV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 653)
)
svcMacListV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMacListTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMacListEntryTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMacListRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMacListLastChanged"),
        ("TIMETRA-SERV-MIB", "svcMacListDescr"),
        ("TIMETRA-SERV-MIB", "svcMacListEntryMask"),
        ("TIMETRA-SERV-MIB", "svcMacListEntryRowStatus"),
        ("TIMETRA-SERV-MIB", "svcMacListEntryLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsShgAutoLearnMacProtectExcList"))
)
if mibBuilder.loadTexts:
    svcMacListV20v0Group.setStatus("current")

svcAutoBindTunnelV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 654)
)
svcAutoBindTunnelV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindFlexAlgoFb"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlFlxAlgFb"))
)
if mibBuilder.loadTexts:
    svcAutoBindTunnelV20v0Group.setStatus("current")

tmnxSvcBgpEvpnV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 655)
)
tmnxSvcBgpEvpnV20v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnMcLeaveSyncProp")
)
if mibBuilder.loadTexts:
    tmnxSvcBgpEvpnV20v0Group.setStatus("current")

svcEvpnMpls2SapV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 656)
)
svcEvpnMpls2SapV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcEndpoint"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcTblLastChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcEndpoint"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsRemoteAcTblLastChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnVpwsLocalAcIngressLabel"))
)
if mibBuilder.loadTexts:
    svcEvpnMpls2SapV20v0Group.setStatus("current")

svcHostSessionLimitV20v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 657)
)
svcHostSessionLimitV20v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostSpiHLimit"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim4"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim4Ppp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim4Dhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim4Arp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6Wan"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6WanPppSlaac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6WanPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6WanIpoeSlaac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6WanIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6Pd"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6PdPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLim6PdIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiHLimLac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimIpoe"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimPppoeLcl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimPppoeLac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimPppoeOvrl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimL2tpLns"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimL2tpLts"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimL2tpOvrl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSpiSLimOvrl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLimit"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim4"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim4Ppp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim4Dhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim4Arp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6Wan"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6WanPppSlaac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6WanPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6WanIpoeSlaac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6WanIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6Pd"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6PdPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLim6PdIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubHLimLac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimIpoe"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimPppoeLcl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimPppoeLac"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimPppoeOvrl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimL2tpLns"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimL2tpLts"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimL2tpOvrl"),
        ("TIMETRA-SERV-MIB", "svcArpHostSubSLimOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLimit"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim4"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim4Ppp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim4Dhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim4Arp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6Wan"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6WanPppSlaac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6WanPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6WanIpoeSlaac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6WanIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6Pd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6PdPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLim6PdIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiHLimLac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimIpoe"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimPppoeLcl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimPppoeLac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimPppoeOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimL2tpLns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimL2tpLts"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimL2tpOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSpiSLimOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLimit"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim4"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim4Ppp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim4Dhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim4Arp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6Wan"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6WanPppSlaac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6WanPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6WanIpoeSlaac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6WanIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6Pd"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6PdPppDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLim6PdIpoeDhcp"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubHLimLac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimIpoe"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimPppoeLcl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimPppoeLac"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimPppoeOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimL2tpLns"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimL2tpLts"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimL2tpOvrl"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseSubSLimOvrl"))
)
if mibBuilder.loadTexts:
    svcHostSessionLimitV20v0Group.setStatus("current")

svcSysBgpEvpnAttrPropV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 670)
)
svcSysBgpEvpnAttrPropV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnIffAttrUnfmProp"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnIffPthSelection"))
)
if mibBuilder.loadTexts:
    svcSysBgpEvpnAttrPropV21v0Group.setStatus("current")

svcSrv6V21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 671)
)
svcSrv6V21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSrv6RowStatus"),
        ("TIMETRA-SERV-MIB", "svcSrv6LastChngd"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorRowStatus"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorLastChngd"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt4"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt6"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt46"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt4StaticValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt6StaticValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorEndDt46StaticValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt4OperValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt4OperState"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt4OperErrorCode"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt4OperSidAddrType"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt4OperSidAddr"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt6OperValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt6OperState"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt6OperErrorCode"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt6OperSidAddrType"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt6OperSidAddr"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt46OperValue"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt46OperState"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt46OperErrorCode"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt46OpSidAddrType"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocEndDt46OpSidAddr"),
        ("TIMETRA-SERV-MIB", "svcSrv6TblLastCh"),
        ("TIMETRA-SERV-MIB", "svcSrv6LocatorTblLastCh"))
)
if mibBuilder.loadTexts:
    svcSrv6V21v0Group.setStatus("current")

svcDhcpLeaseV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 672)
)
svcDhcpLeaseV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpLeaseDnsV4AddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDnsV4Addr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseNbnsV4AddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseNbnsV4Addr"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDnsV6AddrType"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseDnsV6Addr"))
)
if mibBuilder.loadTexts:
    svcDhcpLeaseV21v0Group.setStatus("current")

tmnxSvcVprnIngClassPlcyV21v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 673)
)
tmnxSvcVprnIngClassPlcyV21v0Grp.setObjects(
    ("TIMETRA-SERV-MIB", "svcNetIngIngressClassPlcy")
)
if mibBuilder.loadTexts:
    tmnxSvcVprnIngClassPlcyV21v0Grp.setStatus("current")

tmnxSvcObsoletedV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 674)
)
tmnxSvcObsoletedV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLclAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcEthTag"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsRemAcName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVpwsLastChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstEndpoint"))
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedV21v0Group.setStatus("current")

svcBgpEvpnInstV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 675)
)
svcBgpEvpnInstV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsTnlEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsTnlEncapMoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstTableLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstRowStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAdminState"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstType"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanSendTnlEncap"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanSndImtIrOnNdf"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsFrceVlanVcFwd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsControlWord"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsShgName"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngressLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsIngBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEntropyLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsRPSMacAct"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsForceQinqVcFwd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstABTTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlLastChg"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlLdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlRsvpTe"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrIsis"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrOspf"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlStatus"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlBgp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlSrTe"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstAutoBndTnlTag"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVni"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniNumMACs"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniOperState"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniMcast"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndInUse"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndActive"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanInstARLfRplCndPndTime"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPVni"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDstTEPLastChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDestLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstRowStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstLastChgd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstCreationOrigin"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosPolicyId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosFPQGrp"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstNetIngQosFPQGrpInst"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstAsstdRepl"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstARActTime"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstResProtSrcMac"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstResProtSrcMacAct"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVni"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstTableLastChgd"),
        ("TIMETRA-SERV-MIB", "tlsFdbVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniVxlanType"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxlanInstESDestNumMacs"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnInstV21v0Group.setStatus("current")

svcBgpEvpnObsoletedV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 676)
)
svcBgpEvpnObsoletedV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEvpnEncapMpls"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEvpnEncapMoUdp"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlanSendEvpnEncap"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnObsoletedV21v0Group.setStatus("current")

svcEthSegV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 677)
)
svcEthSegV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAutoEsi"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperEsi"))
)
if mibBuilder.loadTexts:
    svcEthSegV21v0Group.setStatus("current")

svcEthSegEvpnV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 679)
)
svcEthSegEvpnV21v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAcDfCap")
)
if mibBuilder.loadTexts:
    svcEthSegEvpnV21v0Group.setStatus("current")

svcEvpnEtreeLeafLabelV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 681)
)
svcEvpnEtreeLeafLabelV21v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnLeafLabelValue")
)
if mibBuilder.loadTexts:
    svcEvpnEtreeLeafLabelV21v0Group.setStatus("current")

svcIfSubStatsV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 682)
)
svcIfSubStatsV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIfSubStatsLastCleared"),
        ("TIMETRA-SERV-MIB", "svcIfSubStatsIngPkts"),
        ("TIMETRA-SERV-MIB", "svcIfSubStatsIngOctets"),
        ("TIMETRA-SERV-MIB", "svcIfSubStatsEgrPkts"),
        ("TIMETRA-SERV-MIB", "svcIfSubStatsEgrOctets"))
)
if mibBuilder.loadTexts:
    svcIfSubStatsV21v0Group.setStatus("current")

svcEpipeSrv6V21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 683)
)
svcEpipeSrv6V21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorEndDx2"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorEndDx2Static"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocEndDx2Value"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocEndDx2State"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocEndDx2ErrorCode"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocEndDx2SidAddrType"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocEndDx2SidAddr"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6RowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorLastChngd"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6TblLastCh"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6LocatorTblLastCh"))
)
if mibBuilder.loadTexts:
    svcEpipeSrv6V21v0Group.setStatus("current")

svcEpipeEvpnSrv6V21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 684)
)
svcEpipeEvpnSrv6V21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnSrv6TblLastCh"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6LastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstSrv6Instance"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstSrv6DefLocator"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6SrcAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6SrcAddr"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6MaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6ForceVlanVcFwd"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6RtNextHopType"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6RtNextHopAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6RtNextHopAddr"),
        ("TIMETRA-SERV-MIB", "svcSrv6TEPNumNonESDest"),
        ("TIMETRA-SERV-MIB", "svcSrv6TEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstTEPSidNumMACs"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstTEPSidL2EsPbr"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstTEPSidMcast"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstTEPSidSrv6Type"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstTEPSidSbdMcast"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstESDstTEPLastChg"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstESDestLastChgd"),
        ("TIMETRA-SERV-MIB", "svcSrv6InstESDestNumMacs"))
)
if mibBuilder.loadTexts:
    svcEpipeEvpnSrv6V21v0Group.setStatus("current")

iesLastChangeV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 686)
)
iesLastChangeV21v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "iesIfTableLastChanged")
)
if mibBuilder.loadTexts:
    iesLastChangeV21v0Group.setStatus("current")

svcLastChangeV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 687)
)
svcLastChangeV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBaseInfoTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsInfoTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsInfoLastMgmtChange"))
)
if mibBuilder.loadTexts:
    svcLastChangeV21v0Group.setStatus("current")

tmnxSvcSubV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 688)
)
tmnxSvcSubV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSubTableLastChanged"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMcShuntId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMonOperGrpTableLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMonOperGrpRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMonOperGrpLastCh"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMonOperGrpHlthDrop"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubMonOperGrpActHlthDrop"))
)
if mibBuilder.loadTexts:
    tmnxSvcSubV21v0Group.setStatus("current")

svcEvpnRvplsMcastGwV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 691)
)
svcEvpnRvplsMcastGwV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWNonDrAtrtTraf"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrState"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrLstChg"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrCndtIpAdded"),
        ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrActTimeRem"))
)
if mibBuilder.loadTexts:
    svcEvpnRvplsMcastGwV21v0Group.setStatus("current")

svcEpipePbbRedEnhV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 692)
)
svcEpipePbbRedEnhV21v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEpipeBackboneLocalSwitchSvc")
)
if mibBuilder.loadTexts:
    svcEpipePbbRedEnhV21v0Group.setStatus("current")

svcDPathAttrObj21Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 693)
)
svcDPathAttrObj21Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnIpRouteAdvDomainId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnDpathLgthIgnr"),
        ("TIMETRA-SERV-MIB", "svcTlsRvplsIpIfSvcId"),
        ("TIMETRA-SERV-MIB", "svcTlsRvplsIpIfIndex"))
)
if mibBuilder.loadTexts:
    svcDPathAttrObj21Group.setStatus("current")

svcEvpnCandListPrefDataObj21Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 695)
)
svcEvpnCandListPrefDataObj21Grp.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtPEOprVal"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtPEDntPmt"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtPEOprVl"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtPEDtPmt"))
)
if mibBuilder.loadTexts:
    svcEvpnCandListPrefDataObj21Grp.setStatus("current")

svcVprnWeightedEcmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 696)
)
svcVprnWeightedEcmpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindWeightedEcmp")
)
if mibBuilder.loadTexts:
    svcVprnWeightedEcmpGroup.setStatus("current")

svcVprnEcmpGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 697)
)
svcVprnEcmpGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindMaxEcmpRoutes")
)
if mibBuilder.loadTexts:
    svcVprnEcmpGroup.setStatus("current")

svcVplsEvpnMplsV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 698)
)
svcVplsEvpnMplsV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgrLblTnlTblLC"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgrLblTnlLstCh"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgLblTnlNumMAC"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgLblTnlInMLst"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgLblTnlRsType"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgLbTnlSbdMcst"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsTEPEgrLblMcast"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPTblLstCh"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPResType"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTEPTnlId"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcEvpnInstMplsESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsMhMode"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsInstance"))
)
if mibBuilder.loadTexts:
    svcVplsEvpnMplsV21v0Group.setStatus("current")

svcEvpnEvi3ByteAutoRTObj21Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 699)
)
svcEvpnEvi3ByteAutoRTObj21Grp.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnInstVxlnEvi3ByteAutoRT"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsEvi3ByteAutoRT"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6Evi3ByteAutoRT"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi"))
)
if mibBuilder.loadTexts:
    svcEvpnEvi3ByteAutoRTObj21Grp.setStatus("current")

svcVprnRadiusServerV21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 700)
)
svcVprnRadiusServerV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnRadiusServerTLSClientProf"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerSecretErr"),
        ("TIMETRA-SERV-MIB", "svcVprnRadiusServerTLSClntPrfErr"))
)
if mibBuilder.loadTexts:
    svcVprnRadiusServerV21v0Group.setStatus("current")

svcBgpMTUSignalling22v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 701)
)
svcBgpMTUSignalling22v0Grp.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVllBgpAdvServiceMtu"),
        ("TIMETRA-SERV-MIB", "svcVplsBgpAdvServiceMtu"),
        ("TIMETRA-SERV-MIB", "svcTlsExtIgnoreL2VpnMtuMismatch"),
        ("TIMETRA-SERV-MIB", "svcEpipeIgnoreL2VpnMtuMismatch"))
)
if mibBuilder.loadTexts:
    svcBgpMTUSignalling22v0Grp.setStatus("current")

svcLblEthOrIPL4TEID22v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 702)
)
svcLblEthOrIPL4TEID22v0Grp.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEpipeLblEthOrIpL4TEID"),
        ("TIMETRA-SERV-MIB", "svcTlsExtLblEthOrIpL4TEID"))
)
if mibBuilder.loadTexts:
    svcLblEthOrIPL4TEID22v0Grp.setStatus("current")

svcEvpnExtEgLblLmtV22v0Grp = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 703)
)
svcEvpnExtEgLblLmtV22v0Grp.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnInstMplsDynEgrLblLmt")
)
if mibBuilder.loadTexts:
    svcEvpnExtEgLblLmtV22v0Grp.setStatus("current")

svcEvpnESV2v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 705)
)
svcEvpnESV2v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPwPortHeadEnd"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortOprUpOnMhStdby"),
        ("TIMETRA-SERV-MIB", "svcEvpnHdEndMHEthSegPwPortId"),
        ("TIMETRA-SERV-MIB", "svcEvpnPwPortHdEndMHEthSegName"),
        ("TIMETRA-SERV-MIB", "svcEvpnPwPortHdEndMHEthSegStatus"))
)
if mibBuilder.loadTexts:
    svcEvpnESV2v0Group.setStatus("current")

svcBgpEvpnMplsMh1V22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 707)
)
svcBgpEvpnMplsMh1V22v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIngressRepBumLabel"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMaxEcmpRoutes"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegRowStatus"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLastChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegAdminState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSvcCarving"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegLagId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegPortId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSdpId"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSourceBMacLSB"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblSize"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegBMacTblEntries"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperMultiHoming"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegTblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTblLastChgd"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvEviRngTo"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngRowStatus"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngLastChg"),
        ("TIMETRA-SERV-MIB", "svcEthSegCarvIsidRngTo"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsActTimer"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidIsDF"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidActTimRem"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidSvcId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFLastChanged"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsEthSegId"),
        ("TIMETRA-SERV-MIB", "svcSysEthSegBMacAddress"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegOperState"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegSHGLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPLstChg"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidDFCndtAdded"),
        ("TIMETRA-SERV-MIB", "svcNumEvpnMHStandbySaps"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESegDestLstChg"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnOperRD"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysBgpEvpnRDType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsMh1V22v0Group.setStatus("current")

svcBgpEvpnObsoletedV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 708)
)
svcBgpEvpnObsoletedV22v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsESDestNumMacs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTunnelType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPResType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnObsoletedV22v0Group.setStatus("current")

svcEvpnMplsMhBindsV22Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 709)
)
svcEvpnMplsMhBindsV22Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPResType")
)
if mibBuilder.loadTexts:
    svcEvpnMplsMhBindsV22Group.setStatus("current")

svcEvpnMplsTnlIdObsoletedGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 710)
)
svcEvpnMplsTnlIdObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsESDestTEPTnlId"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlLastCh"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlInMcList"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlResType"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsTnlIdObsoletedGroup.setStatus("current")

svcVplsEvpnMplsTnlIdV22Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 711)
)
svcVplsEvpnMplsTnlIdV22Group.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTnlId"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTnlResType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsPbbESDestTEPTnlId"))
)
if mibBuilder.loadTexts:
    svcVplsEvpnMplsTnlIdV22Group.setStatus("current")

svcEvpnOISMObsoleteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 712)
)
svcEvpnOISMObsoleteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTnlSbdMcast"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblMcast"))
)
if mibBuilder.loadTexts:
    svcEvpnOISMObsoleteGroup.setStatus("current")

svcEvpnOISMV22Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 713)
)
svcEvpnOISMV22Group.setObjects(
      *(("TIMETRA-SERV-MIB", "iesIfVplsEvpnTnlSupBcastDomain"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnSelMcastAdvertise"))
)
if mibBuilder.loadTexts:
    svcEvpnOISMV22Group.setStatus("current")

svcBgpEvpnMplsObsoleteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 714)
)
svcBgpEvpnMplsObsoleteGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblTEPLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblNumMACs"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblInMcastList"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblLastChanged"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrLblResType"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsObsoleteGroup.setStatus("current")

svcBgpEvpnMplsV22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 715)
)
svcBgpEvpnMplsV22v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMplsTableLastChanged"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEvi"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsTEPAddr"),
        ("TIMETRA-SERV-MIB", "tlsFdbEvpnMplsLabel"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumEvpnMplsDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESDest"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPNumESBMacDest"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnMplsV22v0Group.setStatus("current")

svcEpipePwPortTldp22v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 717)
)
svcEpipePwPortTldp22v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEpipePwPortDnPeerTldpFault")
)
if mibBuilder.loadTexts:
    svcEpipePwPortTldp22v0Group.setStatus("current")

svcVprnTacPlusAccCmdOp21v0Group = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 718)
)
svcVprnTacPlusAccCmdOp21v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVprnTacPlusAccessOpCmd1")
)
if mibBuilder.loadTexts:
    svcVprnTacPlusAccCmdOp21v0Group.setStatus("current")


# Notification objects

custCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1, 0, 1)
)
custCreated.setObjects(
    ("TIMETRA-SERV-MIB", "custId")
)
if mibBuilder.loadTexts:
    custCreated.setStatus(
        "obsolete"
    )

custDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1, 0, 2)
)
custDeleted.setObjects(
    ("TIMETRA-SERV-MIB", "custId")
)
if mibBuilder.loadTexts:
    custDeleted.setStatus(
        "obsolete"
    )

custMultSvcSiteCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1, 0, 3)
)
custMultSvcSiteCreated.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"))
)
if mibBuilder.loadTexts:
    custMultSvcSiteCreated.setStatus(
        "obsolete"
    )

custMultSvcSiteDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 1, 0, 4)
)
custMultSvcSiteDeleted.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteName"))
)
if mibBuilder.loadTexts:
    custMultSvcSiteDeleted.setStatus(
        "obsolete"
    )

svcCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 1)
)
svcCreated.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcType"))
)
if mibBuilder.loadTexts:
    svcCreated.setStatus(
        "obsolete"
    )

svcDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 2)
)
svcDeleted.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcDeleted.setStatus(
        "obsolete"
    )

svcStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 3)
)
svcStatusChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcAdminStatus"),
        ("TIMETRA-SERV-MIB", "svcOperStatus"))
)
if mibBuilder.loadTexts:
    svcStatusChanged.setStatus(
        "current"
    )

svcTlsFdbTableFullAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 4)
)
svcTlsFdbTableFullAlarmRaised.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsFdbTableFullAlarmRaised.setStatus(
        "current"
    )

svcTlsFdbTableFullAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 5)
)
svcTlsFdbTableFullAlarmCleared.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsFdbTableFullAlarmCleared.setStatus(
        "current"
    )

iesIfCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 6)
)
iesIfCreated.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "iesIfIndex"))
)
if mibBuilder.loadTexts:
    iesIfCreated.setStatus(
        "obsolete"
    )

iesIfDeleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 7)
)
iesIfDeleted.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "iesIfIndex"))
)
if mibBuilder.loadTexts:
    iesIfDeleted.setStatus(
        "obsolete"
    )

iesIfStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 8)
)
iesIfStatusChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "iesIfIndex"),
        ("TIMETRA-SERV-MIB", "iesIfAdminStatus"),
        ("TIMETRA-SERV-MIB", "iesIfOperStatus"))
)
if mibBuilder.loadTexts:
    iesIfStatusChanged.setStatus(
        "current"
    )

svcTlsMfibTableFullAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 9)
)
svcTlsMfibTableFullAlarmRaised.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsMfibTableFullAlarmRaised.setStatus(
        "current"
    )

svcTlsMfibTableFullAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 10)
)
svcTlsMfibTableFullAlarmCleared.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsMfibTableFullAlarmCleared.setStatus(
        "current"
    )

svcTlsMacPinningViolation = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 11)
)
svcTlsMacPinningViolation.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "macPinningMacAddress"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRow"),
        ("TIMETRA-SERV-MIB", "macPinningPinnedRowDescr"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRow"),
        ("TIMETRA-SERV-MIB", "macPinningViolatingRowDescr"))
)
if mibBuilder.loadTexts:
    svcTlsMacPinningViolation.setStatus(
        "current"
    )

svcTlsDHCPLseStRestoreProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 12)
)
svcTlsDHCPLseStRestoreProblem.setObjects(
      *(("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateSvcId"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStatePortId"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateEncapVal"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "tlsDhcpRestoreLseStateProblem"))
)
if mibBuilder.loadTexts:
    svcTlsDHCPLseStRestoreProblem.setStatus(
        "obsolete"
    )

svcTlsDHCPLseStatePopulateErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 13)
)
svcTlsDHCPLseStatePopulateErr.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "tlsDhcpLseStatePopulateError"))
)
if mibBuilder.loadTexts:
    svcTlsDHCPLseStatePopulateErr.setStatus(
        "obsolete"
    )

svcDHCPLseStateRestoreProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 14)
)
svcDHCPLseStateRestoreProblem.setObjects(
      *(("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateCiAddr"),
        ("TIMETRA-SERV-MIB", "svcDhcpRestoreLseStateProblem"))
)
if mibBuilder.loadTexts:
    svcDHCPLseStateRestoreProblem.setStatus(
        "current"
    )

tmnxSvcObjTodSuiteApplicFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 15)
)
tmnxSvcObjTodSuiteApplicFailed.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcObjRow"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjRowDescr"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuite"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"))
)
if mibBuilder.loadTexts:
    tmnxSvcObjTodSuiteApplicFailed.setStatus(
        "obsolete"
    )

tmnxEndPointTxActiveChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 16)
)
tmnxEndPointTxActiveChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEndPointTxActiveType"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActivePortId"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveEncap"),
        ("TIMETRA-SERV-MIB", "svcEndPointTxActiveSdpId"),
        ("TIMETRA-SERV-MIB", "svcEPTxActiveBgpEvpnMplsInstId"))
)
if mibBuilder.loadTexts:
    tmnxEndPointTxActiveChanged.setStatus(
        "current"
    )

tmnxSvcPEDiscPolServOperStatChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 17)
)
tmnxSvcPEDiscPolServOperStatChg.setObjects(
      *(("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddressType"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerAddress"),
        ("TIMETRA-SERV-MIB", "svcPEDiscPolServerOperStatus"))
)
if mibBuilder.loadTexts:
    tmnxSvcPEDiscPolServOperStatChg.setStatus(
        "obsolete"
    )

svcEndPointMacLimitAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 18)
)
svcEndPointMacLimitAlarmRaised.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimit"))
)
if mibBuilder.loadTexts:
    svcEndPointMacLimitAlarmRaised.setStatus(
        "current"
    )

svcEndPointMacLimitAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 19)
)
svcEndPointMacLimitAlarmCleared.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimit"))
)
if mibBuilder.loadTexts:
    svcEndPointMacLimitAlarmCleared.setStatus(
        "current"
    )

svcTlsMrpAttrRegistrationFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 20)
)
svcTlsMrpAttrRegistrationFailed.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegFailedReason"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrType"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrValue"))
)
if mibBuilder.loadTexts:
    svcTlsMrpAttrRegistrationFailed.setStatus(
        "current"
    )

svcFdbMimDestTblFullAlrm = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 21)
)
svcFdbMimDestTblFullAlrm.setObjects(
    ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries")
)
if mibBuilder.loadTexts:
    svcFdbMimDestTblFullAlrm.setStatus(
        "current"
    )

svcFdbMimDestTblFullAlrmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 22)
)
svcFdbMimDestTblFullAlrmCleared.setObjects(
    ("TIMETRA-SERV-MIB", "svcTotalFdbMimDestIdxEntries")
)
if mibBuilder.loadTexts:
    svcFdbMimDestTblFullAlrmCleared.setStatus(
        "current"
    )

svcDHCPMiscellaneousProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 23)
)
svcDHCPMiscellaneousProblem.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxFailureDescription")
)
if mibBuilder.loadTexts:
    svcDHCPMiscellaneousProblem.setStatus(
        "current"
    )

svcPersistencyProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 24)
)
svcPersistencyProblem.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"))
)
if mibBuilder.loadTexts:
    svcPersistencyProblem.setStatus(
        "current"
    )

svcTlsMrpAttrTblFullAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 25)
)
svcTlsMrpAttrTblFullAlarmRaised.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsMrpAttrTblFullAlarmRaised.setStatus(
        "current"
    )

svcTlsMrpAttrTblFullAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 26)
)
svcTlsMrpAttrTblFullAlarmCleared.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"))
)
if mibBuilder.loadTexts:
    svcTlsMrpAttrTblFullAlarmCleared.setStatus(
        "current"
    )

svcArpHostPopulateErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 27)
)
svcArpHostPopulateErr.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcNotifSapPortId"),
        ("TIMETRA-SERV-MIB", "svcNotifSapEncapValue"),
        ("TIMETRA-SERV-MIB", "svcArpHostPopulateError"))
)
if mibBuilder.loadTexts:
    svcArpHostPopulateErr.setStatus(
        "current"
    )

svcEpipePbbOperStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 28)
)
svcEpipePbbOperStatusChanged.setObjects(
    ("TIMETRA-SERV-MIB", "svcEpipePbbOperState")
)
if mibBuilder.loadTexts:
    svcEpipePbbOperStatusChanged.setStatus(
        "current"
    )

svcEPMCEPConfigMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 29)
)
svcEPMCEPConfigMismatch.setObjects(
    ("TIMETRA-SERV-MIB", "svcEndPointMCEPId")
)
if mibBuilder.loadTexts:
    svcEPMCEPConfigMismatch.setStatus(
        "current"
    )

svcEPMCEPConfigMismatchResolved = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 30)
)
svcEPMCEPConfigMismatchResolved.setObjects(
    ("TIMETRA-SERV-MIB", "svcEndPointMCEPId")
)
if mibBuilder.loadTexts:
    svcEPMCEPConfigMismatchResolved.setStatus(
        "current"
    )

svcEPMCEPPassiveModeActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 31)
)
svcEPMCEPPassiveModeActive.setObjects(
    ("TIMETRA-SERV-MIB", "svcEndPointMCEPId")
)
if mibBuilder.loadTexts:
    svcEPMCEPPassiveModeActive.setStatus(
        "current"
    )

svcEPMCEPPassiveModePassive = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 32)
)
svcEPMCEPPassiveModePassive.setObjects(
    ("TIMETRA-SERV-MIB", "svcEndPointMCEPId")
)
if mibBuilder.loadTexts:
    svcEPMCEPPassiveModePassive.setStatus(
        "current"
    )

svcRestoreHostProblem = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 33)
)
svcRestoreHostProblem.setObjects(
      *(("TIMETRA-SERV-MIB", "svcHostAddrType"),
        ("TIMETRA-SERV-MIB", "svcHostAddr"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"))
)
if mibBuilder.loadTexts:
    svcRestoreHostProblem.setStatus(
        "current"
    )

svcTlsSiteDesigFwdrChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 34)
)
svcTlsSiteDesigFwdrChg.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsSiteIdDesignatedFwdr")
)
if mibBuilder.loadTexts:
    svcTlsSiteDesigFwdrChg.setStatus(
        "current"
    )

svcTlsGroupOperStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 35)
)
svcTlsGroupOperStatusChanged.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsGroupOperStatus"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupLastError"))
)
if mibBuilder.loadTexts:
    svcTlsGroupOperStatusChanged.setStatus(
        "current"
    )

svcMacFdbTblFullAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 36)
)
svcMacFdbTblFullAlarm.setObjects(
    ("TIMETRA-SERV-MIB", "svcMacFdbRecords")
)
if mibBuilder.loadTexts:
    svcMacFdbTblFullAlarm.setStatus(
        "obsolete"
    )

svcMacFdbTblFullAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 37)
)
svcMacFdbTblFullAlarmCleared.setObjects(
    ("TIMETRA-SERV-MIB", "svcMacFdbRecords")
)
if mibBuilder.loadTexts:
    svcMacFdbTblFullAlarmCleared.setStatus(
        "obsolete"
    )

svcMSPwRtMisconfig = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 38)
)
svcMSPwRtMisconfig.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMSPwPeSaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeSaiiAcId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiGlobalId"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiPrefix"),
        ("TIMETRA-SERV-MIB", "svcMSPwPeTaiiAcId"))
)
if mibBuilder.loadTexts:
    svcMSPwRtMisconfig.setStatus(
        "current"
    )

svcOperGrpOperStatusChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 39)
)
svcOperGrpOperStatusChanged.setObjects(
    ("TIMETRA-SERV-MIB", "svcOperGrpOperStatus")
)
if mibBuilder.loadTexts:
    svcOperGrpOperStatusChanged.setStatus(
        "current"
    )

svcMSPwRetryExpiredNotif = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 40)
)
svcMSPwRetryExpiredNotif.setObjects(
    ("TIMETRA-SERV-MIB", "svcMSPwPeRetryExpired")
)
if mibBuilder.loadTexts:
    svcMSPwRetryExpiredNotif.setStatus(
        "current"
    )

svcVllSiteDesigFwdrChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 41)
)
svcVllSiteDesigFwdrChg.setObjects(
    ("TIMETRA-SERV-MIB", "svcVllSiteIdDesignatedFwdr")
)
if mibBuilder.loadTexts:
    svcVllSiteDesigFwdrChg.setStatus(
        "current"
    )

svcBgpEvpnDupMacAddrsDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 42)
)
svcBgpEvpnDupMacAddrsDetected.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcBgpEvpnDupMacAddrsDetected.setStatus(
        "current"
    )

svcBgpEvpnDupMacAddrsCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 43)
)
svcBgpEvpnDupMacAddrsCleared.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcBgpEvpnDupMacAddrsCleared.setStatus(
        "current"
    )

svcTlsDupVTEPEgrVNIDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 44)
)
svcTlsDupVTEPEgrVNIDetected.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"))
)
if mibBuilder.loadTexts:
    svcTlsDupVTEPEgrVNIDetected.setStatus(
        "obsolete"
    )

svcTlsDupVTEPEgrVNICleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 45)
)
svcTlsDupVTEPEgrVNICleared.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcVTEPEgrVNIEgrVNI"))
)
if mibBuilder.loadTexts:
    svcTlsDupVTEPEgrVNICleared.setStatus(
        "obsolete"
    )

svcTlsVTEPHiUsageAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 46)
)
if mibBuilder.loadTexts:
    svcTlsVTEPHiUsageAlarmRaised.setStatus(
        "current"
    )

svcTlsVTEPHiUsageAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 47)
)
if mibBuilder.loadTexts:
    svcTlsVTEPHiUsageAlarmCleared.setStatus(
        "current"
    )

svcTlsVTEPEgrVniSysHiUsgAlarmSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 48)
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVniSysHiUsgAlarmSet.setStatus(
        "current"
    )

svcTlsVTEPEgrVniSysHiUsgAlarmClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 49)
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVniSysHiUsgAlarmClr.setStatus(
        "current"
    )

svcTlsVTEPEgrVniSvcHiUsgAlarmSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 50)
)
svcTlsVTEPEgrVniSvcHiUsgAlarmSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVniSvcHiUsgAlarmSet.setStatus(
        "current"
    )

svcTlsVTEPEgrVniSvcHiUsgAlarmClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 51)
)
svcTlsVTEPEgrVniSvcHiUsgAlarmClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsVTEPEgrVniSvcHiUsgAlarmClr.setStatus(
        "current"
    )

svcBindSysHiUsageAlarmRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 52)
)
if mibBuilder.loadTexts:
    svcBindSysHiUsageAlarmRaised.setStatus(
        "current"
    )

svcBindSysHiUsageAlarmCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 53)
)
if mibBuilder.loadTexts:
    svcBindSysHiUsageAlarmCleared.setStatus(
        "current"
    )

svcTlsRvplsEgrVniSysHiUsgAlrmSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 54)
)
if mibBuilder.loadTexts:
    svcTlsRvplsEgrVniSysHiUsgAlrmSet.setStatus(
        "obsolete"
    )

svcTlsRvplsEgrVniSysHiUsgAlrmClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 55)
)
if mibBuilder.loadTexts:
    svcTlsRvplsEgrVniSysHiUsgAlrmClr.setStatus(
        "obsolete"
    )

svcTlsProxyArpDupDetect = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 56)
)
svcTlsProxyArpDupDetect.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpMacAddr"),
        ("TIMETRA-SERV-MIB", "svcNotifTlsProxyMacAddr"))
)
if mibBuilder.loadTexts:
    svcTlsProxyArpDupDetect.setStatus(
        "current"
    )

svcTlsProxyArpDupClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 57)
)
svcTlsProxyArpDupClear.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsProxyArpMacAddr")
)
if mibBuilder.loadTexts:
    svcTlsProxyArpDupClear.setStatus(
        "current"
    )

svcTlsProxyNdDupDetect = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 58)
)
svcTlsProxyNdDupDetect.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyNdMacAddr"),
        ("TIMETRA-SERV-MIB", "svcNotifTlsProxyMacAddr"))
)
if mibBuilder.loadTexts:
    svcTlsProxyNdDupDetect.setStatus(
        "current"
    )

svcTlsProxyNdDupClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 59)
)
svcTlsProxyNdDupClear.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsProxyNdMacAddr")
)
if mibBuilder.loadTexts:
    svcTlsProxyNdDupClear.setStatus(
        "current"
    )

svcTlsEvpnTunnNHopHiUsgAlarmSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 60)
)
svcTlsEvpnTunnNHopHiUsgAlarmSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsEvpnTunnNHopHiUsgAlarmSet.setStatus(
        "current"
    )

svcTlsEvpnTunnNHopHiUsgAlarmClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 61)
)
svcTlsEvpnTunnNHopHiUsgAlarmClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsEvpnTunnNHopHiUsgAlarmClr.setStatus(
        "current"
    )

svcEvpnMplsTEPHiUsageRaised = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 62)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPHiUsageRaised.setStatus(
        "current"
    )

svcEvpnMplsTEPHiUsageCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 63)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPHiUsageCleared.setStatus(
        "current"
    )

svcEvpnMplsTEPEgrBndSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 64)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrBndSysHiUsgSet.setStatus(
        "current"
    )

svcEvpnMplsTEPEgrBndSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 65)
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrBndSysHiUsgClr.setStatus(
        "current"
    )

svcEvpnMplsTEPEgrBndSvcHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 66)
)
svcEvpnMplsTEPEgrBndSvcHiUsgSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrBndSvcHiUsgSet.setStatus(
        "current"
    )

svcEvpnMplsTEPEgrBndSvcHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 67)
)
svcEvpnMplsTEPEgrBndSvcHiUsgClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPEgrBndSvcHiUsgClr.setStatus(
        "current"
    )

svcTlsProxyArpSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 68)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpSysHiUsgSet.setStatus(
        "current"
    )

svcTlsProxyArpSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 69)
)
if mibBuilder.loadTexts:
    svcTlsProxyArpSysHiUsgClr.setStatus(
        "current"
    )

svcTlsProxyArpSvcHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 70)
)
svcTlsProxyArpSvcHiUsgSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsProxyArpSvcHiUsgSet.setStatus(
        "current"
    )

svcTlsProxyArpSvcHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 71)
)
svcTlsProxyArpSvcHiUsgClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsProxyArpSvcHiUsgClr.setStatus(
        "current"
    )

svcTlsProxyNdSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 72)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdSysHiUsgSet.setStatus(
        "current"
    )

svcTlsProxyNdSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 73)
)
if mibBuilder.loadTexts:
    svcTlsProxyNdSysHiUsgClr.setStatus(
        "current"
    )

svcTlsProxyNdSvcHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 74)
)
svcTlsProxyNdSvcHiUsgSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsProxyNdSvcHiUsgSet.setStatus(
        "current"
    )

svcTlsProxyNdSvcHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 75)
)
svcTlsProxyNdSvcHiUsgClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcTlsProxyNdSvcHiUsgClr.setStatus(
        "current"
    )

svcSiteMinDnTimerStateChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 76)
)
svcSiteMinDnTimerStateChg.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteName"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimerState"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimer"),
        ("TIMETRA-SERV-MIB", "svcNotifSiteMinDnTimerRemain"))
)
if mibBuilder.loadTexts:
    svcSiteMinDnTimerStateChg.setStatus(
        "current"
    )

svcArpHostOverride = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 77)
)
svcArpHostOverride.setObjects(
      *(("TIMETRA-SERV-MIB", "svcArpHostMacAddr"),
        ("TIMETRA-SERV-MIB", "svcNotifyMacAddress"))
)
if mibBuilder.loadTexts:
    svcArpHostOverride.setStatus(
        "current"
    )

svcEvpnDestSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 78)
)
if mibBuilder.loadTexts:
    svcEvpnDestSysHiUsgSet.setStatus(
        "obsolete"
    )

svcEvpnDestSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 79)
)
if mibBuilder.loadTexts:
    svcEvpnDestSysHiUsgClr.setStatus(
        "obsolete"
    )

svcEvpnMHEsEviDFStateChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 80)
)
svcEvpnMHEsEviDFStateChgd.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegEviIsDF")
)
if mibBuilder.loadTexts:
    svcEvpnMHEsEviDFStateChgd.setStatus(
        "current"
    )

svcEvpnMHEsIsidDFStateChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 81)
)
svcEvpnMHEsIsidDFStateChgd.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMHEthSegIsidIsDF")
)
if mibBuilder.loadTexts:
    svcEvpnMHEsIsidDFStateChgd.setStatus(
        "current"
    )

svcEvpnRcvdProtSrcMac = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 82)
)
svcEvpnRcvdProtSrcMac.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"))
)
if mibBuilder.loadTexts:
    svcEvpnRcvdProtSrcMac.setStatus(
        "current"
    )

svcBgpEvpnBHDupMacAddrsDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 83)
)
svcBgpEvpnBHDupMacAddrsDetected.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "tlsFdbMacAddr"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnBHDupMacAddrsDetected.setStatus(
        "current"
    )

svcTlsVxlanReplicatorChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 84)
)
svcTlsVxlanReplicatorChgd.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVNIEgrVNI"),
        ("TIMETRA-SERV-MIB", "svcNotifVxlanInstance"))
)
if mibBuilder.loadTexts:
    svcTlsVxlanReplicatorChgd.setStatus(
        "obsolete"
    )

svcEvpnEtreeBumLabelSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 85)
)
if mibBuilder.loadTexts:
    svcEvpnEtreeBumLabelSysHiUsgSet.setStatus(
        "current"
    )

svcEvpnEtreeBumLabelSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 86)
)
if mibBuilder.loadTexts:
    svcEvpnEtreeBumLabelSysHiUsgClr.setStatus(
        "current"
    )

svcVxlanEvpnMplsDestSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 87)
)
if mibBuilder.loadTexts:
    svcVxlanEvpnMplsDestSysHiUsgSet.setStatus(
        "current"
    )

svcVxlanEvpnMplsDestSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 88)
)
if mibBuilder.loadTexts:
    svcVxlanEvpnMplsDestSysHiUsgClr.setStatus(
        "current"
    )

svcSysEvpnESDfPrefOperValChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 89)
)
svcSysEvpnESDfPrefOperValChange.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecOperValue"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefElecDntPreempt"))
)
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefOperValChange.setStatus(
        "current"
    )

tmnxSvcSysFdbTableHighUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 90)
)
tmnxSvcSysFdbTableHighUsgSet.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbAllocEntries")
)
if mibBuilder.loadTexts:
    tmnxSvcSysFdbTableHighUsgSet.setStatus(
        "current"
    )

tmnxSvcSysFdbTableHighUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 91)
)
tmnxSvcSysFdbTableHighUsgClr.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbAllocEntries")
)
if mibBuilder.loadTexts:
    tmnxSvcSysFdbTableHighUsgClr.setStatus(
        "current"
    )

svcEvpnMHStandbyStatusChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 92)
)
svcEvpnMHStandbyStatusChg.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcNotifVxlanInstance"),
        ("TIMETRA-SERV-MIB", "svcNotifEvpnMHStandbyStatus"))
)
if mibBuilder.loadTexts:
    svcEvpnMHStandbyStatusChg.setStatus(
        "current"
    )

svcTlsVxInstReplicatorChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 93)
)
svcTlsVxInstReplicatorChgd.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddrType"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPAddress"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVni"),
        ("TIMETRA-SERV-MIB", "svcNotifVxlanInstance"))
)
if mibBuilder.loadTexts:
    svcTlsVxInstReplicatorChgd.setStatus(
        "current"
    )

svcTlsVxInstMacAdrLimitAlrmRsd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 94)
)
svcTlsVxInstMacAdrLimitAlrmRsd.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacAddressLimit"))
)
if mibBuilder.loadTexts:
    svcTlsVxInstMacAdrLimitAlrmRsd.setStatus(
        "current"
    )

svcTlsVxInstMacAdrLimitAlrmClrd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 95)
)
svcTlsVxInstMacAdrLimitAlrmClrd.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcVpnId"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacAddressLimit"))
)
if mibBuilder.loadTexts:
    svcTlsVxInstMacAdrLimitAlrmClrd.setStatus(
        "current"
    )

svcEvpnVxVTepLclBiasAddFailSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 96)
)
svcEvpnVxVTepLclBiasAddFailSet.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifInetAddrType"),
        ("TIMETRA-SERV-MIB", "svcNotifInetAddr"))
)
if mibBuilder.loadTexts:
    svcEvpnVxVTepLclBiasAddFailSet.setStatus(
        "current"
    )

svcEvpnESVxVTepLclBiasAddFailSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 97)
)
svcEvpnESVxVTepLclBiasAddFailSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcNotifEthSegName")
)
if mibBuilder.loadTexts:
    svcEvpnESVxVTepLclBiasAddFailSet.setStatus(
        "current"
    )

svcEvpnVxVTepLclBiasAddFailClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 98)
)
svcEvpnVxVTepLclBiasAddFailClr.setObjects(
      *(("TIMETRA-SERV-MIB", "svcNotifInetAddrType"),
        ("TIMETRA-SERV-MIB", "svcNotifInetAddr"))
)
if mibBuilder.loadTexts:
    svcEvpnVxVTepLclBiasAddFailClr.setStatus(
        "current"
    )

svcEvpnESVxVTepLclBiasAddFailClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 99)
)
svcEvpnESVxVTepLclBiasAddFailClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcNotifEthSegName")
)
if mibBuilder.loadTexts:
    svcEvpnESVxVTepLclBiasAddFailClr.setStatus(
        "current"
    )

svcEvpnRcvdPbbProtSrcMac = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 100)
)
svcEvpnRcvdPbbProtSrcMac.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsBackboneVplsSvcId"),
        ("TIMETRA-SERV-MIB", "protectedMacForNotify"))
)
if mibBuilder.loadTexts:
    svcEvpnRcvdPbbProtSrcMac.setStatus(
        "current"
    )

svcEvpnMplsTEPIpSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 101)
)
svcEvpnMplsTEPIpSysHiUsgSet.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPIpSysHiUsgSet.setStatus(
        "current"
    )

svcEvpnMplsTEPIpSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 102)
)
svcEvpnMplsTEPIpSysHiUsgClr.setObjects(
    ("TIMETRA-SERV-MIB", "svcId")
)
if mibBuilder.loadTexts:
    svcEvpnMplsTEPIpSysHiUsgClr.setStatus(
        "current"
    )

svcEvpnMHAutoEsiCreated = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 103)
)
svcEvpnMHAutoEsiCreated.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi")
)
if mibBuilder.loadTexts:
    svcEvpnMHAutoEsiCreated.setStatus(
        "current"
    )

svcEvpnMHAutoEsiConflict = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 104)
)
svcEvpnMHAutoEsiConflict.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcSysEthSegEsi")
)
if mibBuilder.loadTexts:
    svcEvpnMHAutoEsiConflict.setStatus(
        "current"
    )

svcSrv6TEPEgrBndSysHiUsgSet = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 105)
)
if mibBuilder.loadTexts:
    svcSrv6TEPEgrBndSysHiUsgSet.setStatus(
        "current"
    )

svcSrv6TEPEgrBndSysHiUsgClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 106)
)
if mibBuilder.loadTexts:
    svcSrv6TEPEgrBndSysHiUsgClr.setStatus(
        "current"
    )

svcSrv6FunctionExhaustion = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 107)
)
svcSrv6FunctionExhaustion.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSrv6LocatorName"),
        ("TIMETRA-SERV-MIB", "svcSrv6FunctionType"),
        ("TIMETRA-SERV-MIB", "svcType"))
)
if mibBuilder.loadTexts:
    svcSrv6FunctionExhaustion.setStatus(
        "current"
    )

svcIfSubForwardingStatsDisNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 108)
)
svcIfSubForwardingStatsDisNotify.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "iesIfIndex"),
        ("TIMETRA-SERV-MIB", "tmnxFailureDescription"))
)
if mibBuilder.loadTexts:
    svcIfSubForwardingStatsDisNotify.setStatus(
        "current"
    )

svcIfSubForwardingStatsEnNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 109)
)
svcIfSubForwardingStatsEnNotify.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "iesIfIndex"))
)
if mibBuilder.loadTexts:
    svcIfSubForwardingStatsEnNotify.setStatus(
        "current"
    )

svcRoutedVplsEvpnGWDrStateChgd = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 2, 0, 110)
)
svcRoutedVplsEvpnGWDrStateChgd.setObjects(
    ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrState")
)
if mibBuilder.loadTexts:
    svcRoutedVplsEvpnGWDrStateChgd.setStatus(
        "current"
    )

topologyChangeVcpState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 3)
)
topologyChangeVcpState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "tmnxVcpState"))
)
if mibBuilder.loadTexts:
    topologyChangeVcpState.setStatus(
        "current"
    )

newRootVcpState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 4)
)
newRootVcpState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"))
)
if mibBuilder.loadTexts:
    newRootVcpState.setStatus(
        "current"
    )

newRootBridge = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 7)
)
newRootBridge.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"))
)
if mibBuilder.loadTexts:
    newRootBridge.setStatus(
        "current"
    )

vcpActiveProtocolChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 32)
)
vcpActiveProtocolChange.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpVcpOperProtocol"))
)
if mibBuilder.loadTexts:
    vcpActiveProtocolChange.setStatus(
        "current"
    )

tmnxNewCistRegionalRootBridge = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 33)
)
tmnxNewCistRegionalRootBridge.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcTlsStpCistRegionalRoot"))
)
if mibBuilder.loadTexts:
    tmnxNewCistRegionalRootBridge.setStatus(
        "current"
    )

tmnxNewMstiRegionalRootBridge = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 34)
)
tmnxNewMstiRegionalRootBridge.setObjects(
      *(("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "svcMstiInstanceId"),
        ("TIMETRA-SERV-MIB", "tlsMstiRegionalRoot"))
)
if mibBuilder.loadTexts:
    tmnxNewMstiRegionalRootBridge.setStatus(
        "current"
    )

topologyChangePipMajorState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 39)
)
topologyChangePipMajorState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"))
)
if mibBuilder.loadTexts:
    topologyChangePipMajorState.setStatus(
        "current"
    )

topologyChangePipState = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 40)
)
topologyChangePipState.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"))
)
if mibBuilder.loadTexts:
    topologyChangePipState.setStatus(
        "current"
    )

tmnxPipStpExcepCondStateChng = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 41)
)
tmnxPipStpExcepCondStateChng.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"),
        ("TIMETRA-SERV-MIB", "tlsPipStpException"))
)
if mibBuilder.loadTexts:
    tmnxPipStpExcepCondStateChng.setStatus(
        "current"
    )

pipActiveProtocolChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 4, 5, 0, 42)
)
pipActiveProtocolChange.setObjects(
      *(("TIMETRA-SERV-MIB", "custId"),
        ("TIMETRA-SERV-MIB", "svcId"))
)
if mibBuilder.loadTexts:
    pipActiveProtocolChange.setStatus(
        "current"
    )


# Notifications groups

tmnxSvcNotifyV6v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 401)
)
tmnxSvcNotifyV6v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "iesIfStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMacPinningViolation"),
        ("TIMETRA-SERV-MIB", "svcDHCPLseStateRestoreProblem"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuiteApplicFailed"),
        ("TIMETRA-SERV-MIB", "tmnxEndPointTxActiveChanged"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEDiscPolServOperStatChg"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegistrationFailed"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbOperStatusChanged"),
        ("TIMETRA-SERV-MIB", "topologyChangeVcpState"),
        ("TIMETRA-SERV-MIB", "newRootVcpState"),
        ("TIMETRA-SERV-MIB", "newRootBridge"),
        ("TIMETRA-SERV-MIB", "vcpActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "tmnxNewCistRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "tmnxNewMstiRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "topologyChangePipMajorState"),
        ("TIMETRA-SERV-MIB", "topologyChangePipState"),
        ("TIMETRA-SERV-MIB", "tmnxPipStpExcepCondStateChng"),
        ("TIMETRA-SERV-MIB", "pipActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrm"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrmCleared"),
        ("TIMETRA-SERV-MIB", "svcDHCPMiscellaneousProblem"),
        ("TIMETRA-SERV-MIB", "svcPersistencyProblem"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV6v0Group.setStatus(
        "obsolete"
    )

tmnxSvcNotifyObsoletedGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 402)
)
tmnxSvcNotifyObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "custCreated"),
        ("TIMETRA-SERV-MIB", "custDeleted"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteCreated"),
        ("TIMETRA-SERV-MIB", "custMultSvcSiteDeleted"),
        ("TIMETRA-SERV-MIB", "svcCreated"),
        ("TIMETRA-SERV-MIB", "svcDeleted"),
        ("TIMETRA-SERV-MIB", "iesIfCreated"),
        ("TIMETRA-SERV-MIB", "iesIfDeleted"),
        ("TIMETRA-SERV-MIB", "svcTlsDHCPLseStRestoreProblem"),
        ("TIMETRA-SERV-MIB", "svcTlsDHCPLseStatePopulateErr"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObsoletedGroup.setStatus(
        "current"
    )

tmnxArpHostNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 403)
)
tmnxArpHostNotifyGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcArpHostPopulateErr")
)
if mibBuilder.loadTexts:
    tmnxArpHostNotifyGroup.setStatus(
        "current"
    )

tmnxSvcMCEPNotifyGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 404)
)
tmnxSvcMCEPNotifyGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEPMCEPConfigMismatch"),
        ("TIMETRA-SERV-MIB", "svcEPMCEPConfigMismatchResolved"),
        ("TIMETRA-SERV-MIB", "svcEPMCEPPassiveModeActive"),
        ("TIMETRA-SERV-MIB", "svcEPMCEPPassiveModePassive"))
)
if mibBuilder.loadTexts:
    tmnxSvcMCEPNotifyGroup.setStatus(
        "current"
    )

tmnxSvcNotifyV7v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 405)
)
tmnxSvcNotifyV7v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "iesIfStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMacPinningViolation"),
        ("TIMETRA-SERV-MIB", "svcDHCPLseStateRestoreProblem"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuiteApplicFailed"),
        ("TIMETRA-SERV-MIB", "tmnxEndPointTxActiveChanged"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEDiscPolServOperStatChg"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegistrationFailed"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbOperStatusChanged"),
        ("TIMETRA-SERV-MIB", "topologyChangeVcpState"),
        ("TIMETRA-SERV-MIB", "newRootVcpState"),
        ("TIMETRA-SERV-MIB", "newRootBridge"),
        ("TIMETRA-SERV-MIB", "vcpActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "tmnxNewCistRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "tmnxNewMstiRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "topologyChangePipMajorState"),
        ("TIMETRA-SERV-MIB", "topologyChangePipState"),
        ("TIMETRA-SERV-MIB", "tmnxPipStpExcepCondStateChng"),
        ("TIMETRA-SERV-MIB", "pipActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrm"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrmCleared"),
        ("TIMETRA-SERV-MIB", "svcDHCPMiscellaneousProblem"),
        ("TIMETRA-SERV-MIB", "svcPersistencyProblem"),
        ("TIMETRA-SERV-MIB", "svcRestoreHostProblem"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV7v0Group.setStatus(
        "obsolete"
    )

tmnxSvcNotifyV8v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 406)
)
tmnxSvcNotifyV8v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsSiteDesigFwdrChg"),
        ("TIMETRA-SERV-MIB", "svcTlsGroupOperStatusChanged"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV8v0Group.setStatus(
        "current"
    )

tmnxSvcNotifyV9v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 408)
)
tmnxSvcNotifyV9v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMSPwRtMisconfig"),
        ("TIMETRA-SERV-MIB", "svcMSPwRetryExpiredNotif"),
        ("TIMETRA-SERV-MIB", "svcMacFdbTblFullAlarm"),
        ("TIMETRA-SERV-MIB", "svcMacFdbTblFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcOperGrpOperStatusChanged"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV9v0Group.setStatus(
        "obsolete"
    )

tmnxSvcNotifyV10v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 413)
)
tmnxSvcNotifyV10v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcVllSiteDesigFwdrChg")
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV10v0Group.setStatus(
        "current"
    )

tmnxSvcNotifyObsoletedV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 417)
)
tmnxSvcNotifyObsoletedV11v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcPEDiscPolServOperStatChg")
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyObsoletedV11v0Group.setStatus(
        "current"
    )

tmnxSvcNotifyV11v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 418)
)
tmnxSvcNotifyV11v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "iesIfStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMacPinningViolation"),
        ("TIMETRA-SERV-MIB", "svcDHCPLseStateRestoreProblem"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuiteApplicFailed"),
        ("TIMETRA-SERV-MIB", "tmnxEndPointTxActiveChanged"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegistrationFailed"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbOperStatusChanged"),
        ("TIMETRA-SERV-MIB", "topologyChangeVcpState"),
        ("TIMETRA-SERV-MIB", "newRootVcpState"),
        ("TIMETRA-SERV-MIB", "newRootBridge"),
        ("TIMETRA-SERV-MIB", "vcpActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "tmnxNewCistRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "tmnxNewMstiRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "topologyChangePipMajorState"),
        ("TIMETRA-SERV-MIB", "topologyChangePipState"),
        ("TIMETRA-SERV-MIB", "tmnxPipStpExcepCondStateChng"),
        ("TIMETRA-SERV-MIB", "pipActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrm"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrmCleared"),
        ("TIMETRA-SERV-MIB", "svcDHCPMiscellaneousProblem"),
        ("TIMETRA-SERV-MIB", "svcPersistencyProblem"),
        ("TIMETRA-SERV-MIB", "svcRestoreHostProblem"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV11v0Group.setStatus(
        "obsolete"
    )

svcBgpEvpnNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 437)
)
svcBgpEvpnNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnDupMacAddrsDetected"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDupMacAddrsCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsEvpnTunnNHopHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsEvpnTunnNHopHiUsgAlarmClr"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnNotifGroup.setStatus(
        "current"
    )

svcVxlanNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 438)
)
svcVxlanNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNIDetected"),
        ("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNICleared"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsRvplsEgrVniSysHiUsgAlrmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsRvplsEgrVniSysHiUsgAlrmClr"))
)
if mibBuilder.loadTexts:
    svcVxlanNotifGroup.setStatus(
        "obsolete"
    )

svcTlsProxyArpNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 452)
)
svcTlsProxyArpNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyArpDupDetect"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpDupClear"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpSysHiUsgClr"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpSvcHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpSvcHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcTlsProxyArpNotifGroup.setStatus(
        "current"
    )

svcEvpnMplsNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 457)
)
svcEvpnMplsNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsTEPHiUsageRaised"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPHiUsageCleared"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrBndSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrBndSysHiUsgClr"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrBndSvcHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPEgrBndSvcHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsNotifGroup.setStatus(
        "current"
    )

svcSiteMinDnTimerNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 467)
)
svcSiteMinDnTimerNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerStateChg")
)
if mibBuilder.loadTexts:
    svcSiteMinDnTimerNotifGroup.setStatus(
        "current"
    )

svcTlsProxyNdNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 476)
)
svcTlsProxyNdNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsProxyNdDupDetect"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdDupClear"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdSysHiUsgClr"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdSvcHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdSvcHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcTlsProxyNdNotifGroup.setStatus(
        "current"
    )

svcArpHostNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 478)
)
svcArpHostNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcArpHostOverride")
)
if mibBuilder.loadTexts:
    svcArpHostNotifGroup.setStatus(
        "current"
    )

svcEvpnDestNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 480)
)
svcEvpnDestNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnDestSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnDestSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcEvpnDestNotifGroup.setStatus(
        "obsolete"
    )

svcEvpnMhEsDFNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 486)
)
svcEvpnMhEsDFNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMHEsEviDFStateChgd"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHEsIsidDFStateChgd"))
)
if mibBuilder.loadTexts:
    svcEvpnMhEsDFNotifGroup.setStatus(
        "current"
    )

svcVxlanObsoletedNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 491)
)
svcVxlanObsoletedNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsRvplsEgrVniSysHiUsgAlrmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsRvplsEgrVniSysHiUsgAlrmClr"))
)
if mibBuilder.loadTexts:
    svcVxlanObsoletedNotifGroup.setStatus(
        "current"
    )

svcVxlan14v0NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 492)
)
svcVxlan14v0NotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNIDetected"),
        ("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNICleared"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmCleared"))
)
if mibBuilder.loadTexts:
    svcVxlan14v0NotifGroup.setStatus(
        "obsolete"
    )

tmnxSvcNotifyV14v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 499)
)
tmnxSvcNotifyV14v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "iesIfStatusChanged"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMfibTableFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMacPinningViolation"),
        ("TIMETRA-SERV-MIB", "svcDHCPLseStateRestoreProblem"),
        ("TIMETRA-SERV-MIB", "tmnxEndPointTxActiveChanged"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcEndPointMacLimitAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrRegistrationFailed"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsMrpAttrTblFullAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbOperStatusChanged"),
        ("TIMETRA-SERV-MIB", "topologyChangeVcpState"),
        ("TIMETRA-SERV-MIB", "newRootVcpState"),
        ("TIMETRA-SERV-MIB", "newRootBridge"),
        ("TIMETRA-SERV-MIB", "vcpActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "tmnxNewCistRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "tmnxNewMstiRegionalRootBridge"),
        ("TIMETRA-SERV-MIB", "topologyChangePipMajorState"),
        ("TIMETRA-SERV-MIB", "topologyChangePipState"),
        ("TIMETRA-SERV-MIB", "tmnxPipStpExcepCondStateChng"),
        ("TIMETRA-SERV-MIB", "pipActiveProtocolChange"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrm"),
        ("TIMETRA-SERV-MIB", "svcFdbMimDestTblFullAlrmCleared"),
        ("TIMETRA-SERV-MIB", "svcDHCPMiscellaneousProblem"),
        ("TIMETRA-SERV-MIB", "svcPersistencyProblem"),
        ("TIMETRA-SERV-MIB", "svcRestoreHostProblem"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV14v0Group.setStatus(
        "current"
    )

tmnxSvcObsoletedNotifsGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 500)
)
tmnxSvcObsoletedNotifsGroup.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxSvcObjTodSuiteApplicFailed")
)
if mibBuilder.loadTexts:
    tmnxSvcObsoletedNotifsGroup.setStatus(
        "current"
    )

svcEvpnAlmpNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 506)
)
svcEvpnAlmpNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnRcvdProtSrcMac")
)
if mibBuilder.loadTexts:
    svcEvpnAlmpNotifGroup.setStatus(
        "current"
    )

svcBgpEvpnMacDupDetBHNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 519)
)
svcBgpEvpnMacDupDetBHNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcBgpEvpnBHDupMacAddrsDetected")
)
if mibBuilder.loadTexts:
    svcBgpEvpnMacDupDetBHNotifGroup.setStatus(
        "current"
    )

svcTlsVxlanReplicatorNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 524)
)
svcTlsVxlanReplicatorNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsVxlanReplicatorChgd")
)
if mibBuilder.loadTexts:
    svcTlsVxlanReplicatorNotifGroup.setStatus(
        "obsolete"
    )

svcBgpEvpnEtreeNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 537)
)
svcBgpEvpnEtreeNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnEtreeBumLabelSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnEtreeBumLabelSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnEtreeNotifGroup.setStatus(
        "current"
    )

svcVxlanEvpnMplsDestNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 542)
)
svcVxlanEvpnMplsDestNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcVxlanEvpnMplsDestNotifGroup.setStatus(
        "current"
    )

svcEvpnDestObsoletedNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 543)
)
svcEvpnDestObsoletedNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnDestSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnDestSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcEvpnDestObsoletedNotifGroup.setStatus(
        "current"
    )

svcSysEvpnESDfPrefNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 544)
)
svcSysEvpnESDfPrefNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefOperValChange")
)
if mibBuilder.loadTexts:
    svcSysEvpnESDfPrefNotifGroup.setStatus(
        "current"
    )

tmnxSvcSysFdbUsgNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 548)
)
tmnxSvcSysFdbUsgNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcSysFdbTableHighUsgSet"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbTableHighUsgClr"))
)
if mibBuilder.loadTexts:
    tmnxSvcSysFdbUsgNotifGroup.setStatus(
        "current"
    )

tmnxSvcNotifyV15v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 552)
)
tmnxSvcNotifyV15v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMSPwRtMisconfig"),
        ("TIMETRA-SERV-MIB", "svcMSPwRetryExpiredNotif"),
        ("TIMETRA-SERV-MIB", "svcOperGrpOperStatusChanged"))
)
if mibBuilder.loadTexts:
    tmnxSvcNotifyV15v0Group.setStatus(
        "current"
    )

tmnxSvcMacScaleObsoletedGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 553)
)
tmnxSvcMacScaleObsoletedGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcMacFdbTblFullAlarm"),
        ("TIMETRA-SERV-MIB", "svcMacFdbTblFullAlarmCleared"))
)
if mibBuilder.loadTexts:
    tmnxSvcMacScaleObsoletedGroup.setStatus(
        "current"
    )

svcEvpnMHStandbyNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 2, 569)
)
svcEvpnMHStandbyNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyStatusChg")
)
if mibBuilder.loadTexts:
    svcEvpnMHStandbyNotifGroup.setStatus(
        "current"
    )

svcVxlan16v0NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 582)
)
svcVxlan16v0NotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPHiUsageAlarmCleared"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSysHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmSet"),
        ("TIMETRA-SERV-MIB", "svcTlsVTEPEgrVniSvcHiUsgAlarmClr"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmRaised"),
        ("TIMETRA-SERV-MIB", "svcBindSysHiUsageAlarmCleared"))
)
if mibBuilder.loadTexts:
    svcVxlan16v0NotifGroup.setStatus(
        "current"
    )

svcVxlan16v0ObsoletedNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 583)
)
svcVxlan16v0ObsoletedNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNIDetected"),
        ("TIMETRA-SERV-MIB", "svcTlsDupVTEPEgrVNICleared"))
)
if mibBuilder.loadTexts:
    svcVxlan16v0ObsoletedNotifGroup.setStatus(
        "current"
    )

svcTlsVxInstReplicatorNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 601)
)
svcTlsVxInstReplicatorNotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcTlsVxInstReplicatorChgd")
)
if mibBuilder.loadTexts:
    svcTlsVxInstReplicatorNotifGroup.setStatus(
        "current"
    )

svcTlsStaticVxlanNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 603)
)
svcTlsStaticVxlanNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcTlsVxInstMacAdrLimitAlrmRsd"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstMacAdrLimitAlrmClrd"))
)
if mibBuilder.loadTexts:
    svcTlsStaticVxlanNotifGroup.setStatus(
        "current"
    )

svcBgpEvpnVxlanMhNotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 625)
)
svcBgpEvpnVxlanMhNotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnVxVTepLclBiasAddFailSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnESVxVTepLclBiasAddFailSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnVxVTepLclBiasAddFailClr"),
        ("TIMETRA-SERV-MIB", "svcEvpnESVxVTepLclBiasAddFailClr"))
)
if mibBuilder.loadTexts:
    svcBgpEvpnVxlanMhNotifGroup.setStatus(
        "current"
    )

svcNotifyV20v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 652)
)
svcNotifyV20v0Group.setObjects(
    ("TIMETRA-SERV-MIB", "svcEvpnRcvdPbbProtSrcMac")
)
if mibBuilder.loadTexts:
    svcNotifyV20v0Group.setStatus(
        "current"
    )

svcEvpnMplsV20v0NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 658)
)
svcEvpnMplsV20v0NotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMplsTEPIpSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsTEPIpSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcEvpnMplsV20v0NotifGroup.setStatus(
        "current"
    )

svcEvpnMHAutoEsiV21v0Group = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 680)
)
svcEvpnMHAutoEsiV21v0Group.setObjects(
      *(("TIMETRA-SERV-MIB", "svcEvpnMHAutoEsiCreated"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHAutoEsiConflict"))
)
if mibBuilder.loadTexts:
    svcEvpnMHAutoEsiV21v0Group.setStatus(
        "current"
    )

svcEvpnSrv6NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 689)
)
svcEvpnSrv6NotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSrv6TEPEgrBndSysHiUsgSet"),
        ("TIMETRA-SERV-MIB", "svcSrv6TEPEgrBndSysHiUsgClr"))
)
if mibBuilder.loadTexts:
    svcEvpnSrv6NotifGroup.setStatus(
        "current"
    )

svcSrv6NotificationGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 690)
)
svcSrv6NotificationGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcSrv6FunctionExhaustion")
)
if mibBuilder.loadTexts:
    svcSrv6NotificationGroup.setStatus(
        "current"
    )

svcSubStatsV22v0NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 694)
)
svcSubStatsV22v0NotifGroup.setObjects(
      *(("TIMETRA-SERV-MIB", "svcIfSubForwardingStatsDisNotify"),
        ("TIMETRA-SERV-MIB", "svcIfSubForwardingStatsEnNotify"))
)
if mibBuilder.loadTexts:
    svcSubStatsV22v0NotifGroup.setStatus(
        "current"
    )

svcRtdVplsEvpnGWV22v0NotifGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 704)
)
svcRtdVplsEvpnGWV22v0NotifGroup.setObjects(
    ("TIMETRA-SERV-MIB", "svcRoutedVplsEvpnGWDrStateChgd")
)
if mibBuilder.loadTexts:
    svcRtdVplsEvpnGWV22v0NotifGroup.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance

tmnxCustCompliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 1, 100)
)
tmnxCustCompliance.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxCustV6v0Group")
)
if mibBuilder.loadTexts:
    tmnxCustCompliance.setStatus(
        "obsolete"
    )

tmnxCustV8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 1, 101)
)
tmnxCustV8v0Compliance.setObjects(
    ("TIMETRA-SERV-MIB", "tmnxCustV8v0Group")
)
if mibBuilder.loadTexts:
    tmnxCustV8v0Compliance.setStatus(
        "obsolete"
    )

tmnxCustV9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 1, 102)
)
tmnxCustV9v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxCustV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"))
)
if mibBuilder.loadTexts:
    tmnxCustV9v0Compliance.setStatus(
        "obsolete"
    )

tmnxCustV11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 1, 1, 103)
)
tmnxCustV11v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV11v0Group"))
)
if mibBuilder.loadTexts:
    tmnxCustV11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 100)
)
tmnxSvc7450V6v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 101)
)
tmnxSvc7750V6v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV5v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V6v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 102)
)
tmnxSvc7710V6v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV5v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V6v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 103)
)
tmnxSvc7450V6v1Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 104)
)
tmnxSvc7750V6v1Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV5v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V6v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 105)
)
tmnxSvc7710V6v1Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV5v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V6v1Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 106)
)
tmnxSvc7450V7v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 107)
)
tmnxSvc7750V7v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V7v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 108)
)
tmnxSvc7710V7v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V7v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 109)
)
tmnxSvc7450V8v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 110)
)
tmnxSvc7750V8v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V8v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 111)
)
tmnxSvc7710V8v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V8v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 112)
)
tmnxSvc7450V9v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 113)
)
tmnxSvc7750V9v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V9v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 114)
)
tmnxSvc7710V9v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V9v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 115)
)
tmnxSvc7450V10v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 116)
)
tmnxSvc7750V10v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V10v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 117)
)
tmnxSvc7710V10v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V10v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 118)
)
tmnxSvc7450V11v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 119)
)
tmnxSvc7750V11v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V11v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 120)
)
tmnxSvc7710V11v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V11v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 121)
)
tmnxSvc7450V12v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 122)
)
tmnxSvc7750V12v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V12v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 123)
)
tmnxSvc7710V12v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation12v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V12v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7450V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 124)
)
tmnxSvc7450V13v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxCustV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvc7450V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7750V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 125)
)
tmnxSvc7750V13v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDGroup"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxCustV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7750V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvc7710V13v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 126)
)
tmnxSvc7710V13v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRdntV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEgrV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDGroup"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxCustV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"))
)
if mibBuilder.loadTexts:
    tmnxSvc7710V13v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV14v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 127)
)
tmnxSvcV14v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlan14v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDGroup"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVplsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnAutoBindTnlSRTEGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRcdSrcMacGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxlanReplicatorNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvcV14v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV15v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 128)
)
tmnxSvcV15v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedLoadBalanceGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanInstBgpEvpnMhV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvcV15v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV15v1Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 129)
)
tmnxSvcV15v1Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDV15v1Group"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRSMV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedLoadBalanceGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanTermV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1V15v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsMhBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsObsoletedGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvcV15v1Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV16v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 130)
)
tmnxSvcV16v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDV15v1Group"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRSMV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedLoadBalanceGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanTermV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1V15v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsMhBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcPppoeRedirectGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV16v0ObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlan16v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMhEthSegPwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcAdminTagsV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnMplsQinqV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipePwPortFlexV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysPwPortListV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstReplicatorNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDefRtTagV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsABTV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaTacPlusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaLdapV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaRadiusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnRibApiV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnMgmtIfV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMplsFwdPlcyV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnVpwsVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfVplsEvpnGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsVxlanRxDiscardGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsEPGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSrOspf3V16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnMplsTnlIdGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvcV16v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV19v5Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 131)
)
tmnxSvcV19v5Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "tmnxSvcV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDV15v1Group"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRSMV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedLoadBalanceGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanTermV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1V15v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsMhBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcPppoeRedirectGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV16v0ObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlan16v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMhEthSegPwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcAdminTagsV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnMplsQinqV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipePwPortFlexV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysPwPortListV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstReplicatorNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDefRtTagV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsABTV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaTacPlusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaLdapV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaRadiusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnRibApiV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMplsFwdPlcyV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnVpwsVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfVplsEvpnGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsVxlanRxDiscardGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsEPGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSrOspf3V16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnMplsTnlIdGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsResFilterV19v5Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnOperGrpGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhGroup"),
        ("TIMETRA-SERV-MIB", "svcV19v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnMgmtIfV19v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvcV19v5Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV19v10Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 132)
)
tmnxSvcV19v10Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "svcSysEthSegOperGrpGroup"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIpv6Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnOISMGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnRvplsMcastGwGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnAutoBindOspfGroup"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnHostRouteGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnABTEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcMplsEvpnRvplsEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMcastLabelBlockGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV19v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvcV19v10Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV20v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 133)
)
tmnxSvcV20v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRvplsEvpnNdHostRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcPppoeRedirectGroup"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV16v0ObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcAdminTagsV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnMplsQinqV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipePwPortFlexV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysPwPortListV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnVpwsVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSrOspf3V16v0Group"),
        ("TIMETRA-SERV-MIB", "svcV19v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesGrpIfV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstReplicatorNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsVxlanRxDiscardGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnMplsTnlIdGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsResFilterV19v5Group"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfVplsEvpnGroup"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDV15v1Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRSMV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1V15v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsMhBindsTransportGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMhEthSegPwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDefRtTagV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsABTV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsEPGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnOperGrpGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaTacPlusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaLdapV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaRadiusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnRibApiV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnMgmtIfV19v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanTermV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlan16v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxVxlanV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMplsFwdPlcyV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcDHCPLeaseV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsMacProtect"),
        ("TIMETRA-SERV-MIB", "svcEvpnOismV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcNotifyV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcMacListV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBgpEvpnV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMpls2SapV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcHostSessionLimitV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsV20v0NotifGroup"))
)
if mibBuilder.loadTexts:
    tmnxSvcV20v0Compliance.setStatus(
        "obsolete"
    )

tmnxSvcV21v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 134)
)
tmnxSvcV21v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "svcVprnRadiusServerV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysBgpEvpnAttrPropV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcSrv6V21v0Group"),
        ("TIMETRA-SERV-MIB", "svcDhcpLeaseV21v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnIngClassPlcyV21v0Grp"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnInstV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEthSegV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEthSegEvpnV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHAutoEsiV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnEtreeLeafLabelV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcIfSubStatsV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipeSrv6V21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipeEvpnSrv6V21v0Group"),
        ("TIMETRA-SERV-MIB", "iesLastChangeV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcLastChangeV21v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSubV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnSrv6NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSrv6NotificationGroup"),
        ("TIMETRA-SERV-MIB", "svcSrv6NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnRvplsMcastGwV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePbbRedEnhV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcDPathAttrObj21Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnCandListPrefDataObj21Grp"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnMplsV21v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnEvi3ByteAutoRTObj21Grp"),
        ("TIMETRA-SERV-MIB", "svcRtdVplsEvpnGWV22v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnTacPlusAccCmdOp21v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvcV21v0Compliance.setStatus(
        "current"
    )

tmnxSvcV22v0Compliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 4, 2, 1, 135)
)
tmnxSvcV22v0Compliance.setObjects(
      *(("TIMETRA-SERV-MIB", "svcRvplsEvpnNdHostRouteGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsFdbV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsShgV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMFibV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsMstiV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEndPointV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIfDHCP6V6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBackbone6v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsBgpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV6v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedCOV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBsxV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMCEPNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpBgpV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPbbMacV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMrpPolicyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSiteV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcObsoletedV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRoutedVplsV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPwV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMvrpV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsPipV8v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcOperGrpV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEthCfmGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV9v0R4Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMSPwPeV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcApipeInfoV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMacReNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpV15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfNHV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcP2mpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV10v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcPEObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObsoletedV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSpbV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCondStaticMacGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSchedulerRateV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcMHGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosV12v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTestGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCreation15v1Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfIpoeV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIpipeFaultPropGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosSchedV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyNdGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsProxyArpEnhGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsEvpnProxyArpGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVprnV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdGlobalObjsV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcQosRateV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcGrpIfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcShcvPolicyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVsdDynamicSvcGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRadClassGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcVllBgpEvpnV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyObjsV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanARV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVxlanTunTermGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysVirtualEthSegGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSelectiveUrpfGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanVtepGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeNatOutsideV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcTlsV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcRateV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysFdbUsgNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcNotifyV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV15v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcCustomerNameGroup"),
        ("TIMETRA-SERV-MIB", "svcV15v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcInterAsObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipeVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesIfV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcPppoeRedirectGroup"),
        ("TIMETRA-SERV-MIB", "svcSysGreEthBrgdTnlTrmGroup"),
        ("TIMETRA-SERV-MIB", "svcSysEvpnESDfPrefNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV16v0ObsoletedGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcAdminTagsV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnMplsQinqV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEpipePwPortFlexV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSysPwPortListV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcSysVpnGreSrcIpV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcEvpnVpwsVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcSrOspf3V16v0Group"),
        ("TIMETRA-SERV-MIB", "svcV19v0NotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "tmnxCustV9v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxCustV14v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxApipeV3v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV11v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV13v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostNotifyGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostBgpGroup"),
        ("TIMETRA-SERV-MIB", "svcArpHostNotifGroup"),
        ("TIMETRA-SERV-MIB", "tmnxArpHostV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcIgmpTrkGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsMacV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsEndPointV7v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacStatsGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEtreeGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyNdNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyArpNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsEsPbrL2Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticBHGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsPbbV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnInclMcastV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsIpv6McastV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsPmsiV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsProxyArpNdRtmV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsFdbMacScaleV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstVTEPEgrVniGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcIesGrpIfV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsVxInstReplicatorNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcTlsStaticVxlanNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsVxlanRxDiscardGroup"),
        ("TIMETRA-SERV-MIB", "svcVplsResFilterV19v5Group"),
        ("TIMETRA-SERV-MIB", "svcOperGrpBfdGroup"),
        ("TIMETRA-SERV-MIB", "svcOperGroupConfigGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfRtrSolicitGroup"),
        ("TIMETRA-SERV-MIB", "tmnxIesIfVplsEvpnGroup"),
        ("TIMETRA-SERV-MIB", "svcVsdGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnIPRouteGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpAutoRDV15v1Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpVpwsGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMHSiteGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV14v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMhEsDFNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelSRTEGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnP2mpMldpGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnAlmpNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsRSMV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhAdEviRtGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMacDupDetBHNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMhDfPrefGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnEtreeNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMHStandbyNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsV22v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMhEthSegPwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnDefRtTagV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsABTV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsEPGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnOperGrpGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnVxlanMhV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcSpiLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcTeidLoadBalGroup"),
        ("TIMETRA-SERV-MIB", "svcRipListenerGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifyObjsGroup"),
        ("TIMETRA-SERV-MIB", "svcSiteMinDnTimerNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnEsPbrL3Group"),
        ("TIMETRA-SERV-MIB", "svcVprnWeightedEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnBgpAutoBindUdpTnlGroup"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaTacPlusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaLdapV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnAaaRadiusV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnRibApiV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVprnMgmtIfV19v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortGroup"),
        ("TIMETRA-SERV-MIB", "svcEpipeVxInstV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcProxyArpNdMacListGroup"),
        ("TIMETRA-SERV-MIB", "svcTlsProxyV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnIsidRtGroup"),
        ("TIMETRA-SERV-MIB", "svcPbbEvpnEtreeV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEvpnMplsDestNotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanMhV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlanEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanTermV15v0Group"),
        ("TIMETRA-SERV-MIB", "svcVxlan16v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcVxlanV16v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxVxlanV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcMdAutoIdV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcMplsFwdPlcyV16v0Group"),
        ("TIMETRA-SERV-MIB", "svcDHCPLeaseV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcDhcpMRtV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsMacProtect"),
        ("TIMETRA-SERV-MIB", "svcNotifyV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcMacListV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcAutoBindTunnelV20v0Group"),
        ("TIMETRA-SERV-MIB", "tmnxSvcBgpEvpnV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMpls2SapV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcHostSessionLimitV20v0Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsV20v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcSubStatsV22v0NotifGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpMTUSignalling22v0Grp"),
        ("TIMETRA-SERV-MIB", "svcLblEthOrIPL4TEID22v0Grp"),
        ("TIMETRA-SERV-MIB", "svcEvpnExtEgLblLmtV22v0Grp"),
        ("TIMETRA-SERV-MIB", "svcEvpnESV2v0Group"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsMh1V22v0Group"),
        ("TIMETRA-SERV-MIB", "svcVplsEvpnMplsTnlIdV22Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnMplsMhBindsV22Group"),
        ("TIMETRA-SERV-MIB", "svcSysEthSegOperGrpGroup"),
        ("TIMETRA-SERV-MIB", "svcVllBgpVsiPolicyGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnMplsIpv6Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnOISMV22Group"),
        ("TIMETRA-SERV-MIB", "svcEvpnRvplsMcastGwGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnAutoBindOspfGroup"),
        ("TIMETRA-SERV-MIB", "svcRvplsEvpnHostRouteGroup"),
        ("TIMETRA-SERV-MIB", "svcBgpEvpnABTEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcMplsEvpnRvplsEcmpGroup"),
        ("TIMETRA-SERV-MIB", "svcEvpnMcastLabelBlockGroup"),
        ("TIMETRA-SERV-MIB", "tmnxSvcV19v0Group"),
        ("TIMETRA-SERV-MIB", "svcEpipePwPortTldp22v0Group"))
)
if mibBuilder.loadTexts:
    tmnxSvcV22v0Compliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "TIMETRA-SERV-MIB",
    **{"ArpHostInfoOrigin": ArpHostInfoOrigin,
       "ServObjName": ServObjName,
       "ServObjDesc": ServObjDesc,
       "ServObjLongDesc": ServObjLongDesc,
       "ServType": ServType,
       "VpnId": VpnId,
       "SdpId": SdpId,
       "SdpTemplateId": SdpTemplateId,
       "PWTemplateId": PWTemplateId,
       "PWTemplateIdNoZero": PWTemplateIdNoZero,
       "SecretError": SecretError,
       "TlsBpduTranslation": TlsBpduTranslation,
       "TlsLimitMacMoveLevel": TlsLimitMacMoveLevel,
       "TlsLimitMacMove": TlsLimitMacMove,
       "TlsClientProfileError": TlsClientProfileError,
       "SdpBindVcType": SdpBindVcType,
       "StpExceptionCondition": StpExceptionCondition,
       "LspIdList": LspIdList,
       "BridgeId": BridgeId,
       "TSapIngQueueId": TSapIngQueueId,
       "TSapEgrQueueId": TSapEgrQueueId,
       "TStpPortState": TStpPortState,
       "StpPortRole": StpPortRole,
       "StpProtocol": StpProtocol,
       "MfibLocation": MfibLocation,
       "MfibGrpSrcFwdOrBlk": MfibGrpSrcFwdOrBlk,
       "MvplsPruneState": MvplsPruneState,
       "TQosQueueAttribute": TQosQueueAttribute,
       "TVirtSchedAttribute": TVirtSchedAttribute,
       "MstiInstanceId": MstiInstanceId,
       "MstiInstanceIdOrZero": MstiInstanceIdOrZero,
       "DhcpLseStateInfoOrigin": DhcpLseStateInfoOrigin,
       "IAIDType": IAIDType,
       "TdmOptionsSigPkts": TdmOptionsSigPkts,
       "TdmOptionsCasTrunkFraming": TdmOptionsCasTrunkFraming,
       "CemSapReportAlarm": CemSapReportAlarm,
       "CemSapEcid": CemSapEcid,
       "SdpBFHundredthsOfPercent": SdpBFHundredthsOfPercent,
       "SdpBindBandwidth": SdpBindBandwidth,
       "L2ptProtocols": L2ptProtocols,
       "ConfigStatus": ConfigStatus,
       "ServAccessLocation": ServAccessLocation,
       "ServShcvOperState": ServShcvOperState,
       "TMrpPolicyDefaultAction": TMrpPolicyDefaultAction,
       "TMrpPolicyAction": TMrpPolicyAction,
       "TmnxSiteId": TmnxSiteId,
       "TmnxSiteIdOrEmpty": TmnxSiteIdOrEmpty,
       "TmnxSVlanEncapVal": TmnxSVlanEncapVal,
       "timetraServicesMIBModule": timetraServicesMIBModule,
       "tmnxServConformance": tmnxServConformance,
       "tmnxCustConformance": tmnxCustConformance,
       "tmnxCustCompliances": tmnxCustCompliances,
       "tmnxCustCompliance": tmnxCustCompliance,
       "tmnxCustV8v0Compliance": tmnxCustV8v0Compliance,
       "tmnxCustV9v0Compliance": tmnxCustV9v0Compliance,
       "tmnxCustV11v0Compliance": tmnxCustV11v0Compliance,
       "tmnxCustGroups": tmnxCustGroups,
       "tmnxCustV6v0Group": tmnxCustV6v0Group,
       "tmnxCustV8v0Group": tmnxCustV8v0Group,
       "tmnxCustV9v0Group": tmnxCustV9v0Group,
       "tmnxCustV11v0Group": tmnxCustV11v0Group,
       "tmnxCustObsoletedV11v0Group": tmnxCustObsoletedV11v0Group,
       "tmnxCustV13v0Group": tmnxCustV13v0Group,
       "tmnxCustObsoletedV13v0Group": tmnxCustObsoletedV13v0Group,
       "tmnxCustV14v0Group": tmnxCustV14v0Group,
       "tmnxCustObsoletedV14v0Group": tmnxCustObsoletedV14v0Group,
       "tmnxSvcConformance": tmnxSvcConformance,
       "tmnxSvcCompliances": tmnxSvcCompliances,
       "tmnxSvc7450V6v0Compliance": tmnxSvc7450V6v0Compliance,
       "tmnxSvc7750V6v0Compliance": tmnxSvc7750V6v0Compliance,
       "tmnxSvc7710V6v0Compliance": tmnxSvc7710V6v0Compliance,
       "tmnxSvc7450V6v1Compliance": tmnxSvc7450V6v1Compliance,
       "tmnxSvc7750V6v1Compliance": tmnxSvc7750V6v1Compliance,
       "tmnxSvc7710V6v1Compliance": tmnxSvc7710V6v1Compliance,
       "tmnxSvc7450V7v0Compliance": tmnxSvc7450V7v0Compliance,
       "tmnxSvc7750V7v0Compliance": tmnxSvc7750V7v0Compliance,
       "tmnxSvc7710V7v0Compliance": tmnxSvc7710V7v0Compliance,
       "tmnxSvc7450V8v0Compliance": tmnxSvc7450V8v0Compliance,
       "tmnxSvc7750V8v0Compliance": tmnxSvc7750V8v0Compliance,
       "tmnxSvc7710V8v0Compliance": tmnxSvc7710V8v0Compliance,
       "tmnxSvc7450V9v0Compliance": tmnxSvc7450V9v0Compliance,
       "tmnxSvc7750V9v0Compliance": tmnxSvc7750V9v0Compliance,
       "tmnxSvc7710V9v0Compliance": tmnxSvc7710V9v0Compliance,
       "tmnxSvc7450V10v0Compliance": tmnxSvc7450V10v0Compliance,
       "tmnxSvc7750V10v0Compliance": tmnxSvc7750V10v0Compliance,
       "tmnxSvc7710V10v0Compliance": tmnxSvc7710V10v0Compliance,
       "tmnxSvc7450V11v0Compliance": tmnxSvc7450V11v0Compliance,
       "tmnxSvc7750V11v0Compliance": tmnxSvc7750V11v0Compliance,
       "tmnxSvc7710V11v0Compliance": tmnxSvc7710V11v0Compliance,
       "tmnxSvc7450V12v0Compliance": tmnxSvc7450V12v0Compliance,
       "tmnxSvc7750V12v0Compliance": tmnxSvc7750V12v0Compliance,
       "tmnxSvc7710V12v0Compliance": tmnxSvc7710V12v0Compliance,
       "tmnxSvc7450V13v0Compliance": tmnxSvc7450V13v0Compliance,
       "tmnxSvc7750V13v0Compliance": tmnxSvc7750V13v0Compliance,
       "tmnxSvc7710V13v0Compliance": tmnxSvc7710V13v0Compliance,
       "tmnxSvcV14v0Compliance": tmnxSvcV14v0Compliance,
       "tmnxSvcV15v0Compliance": tmnxSvcV15v0Compliance,
       "tmnxSvcV15v1Compliance": tmnxSvcV15v1Compliance,
       "tmnxSvcV16v0Compliance": tmnxSvcV16v0Compliance,
       "tmnxSvcV19v5Compliance": tmnxSvcV19v5Compliance,
       "tmnxSvcV19v10Compliance": tmnxSvcV19v10Compliance,
       "tmnxSvcV20v0Compliance": tmnxSvcV20v0Compliance,
       "tmnxSvcV21v0Compliance": tmnxSvcV21v0Compliance,
       "tmnxSvcV22v0Compliance": tmnxSvcV22v0Compliance,
       "tmnxSvcGroups": tmnxSvcGroups,
       "tmnxSvcV6v0Group": tmnxSvcV6v0Group,
       "tmnxSvcTlsV6v0Group": tmnxSvcTlsV6v0Group,
       "tmnxSvcTlsFdbV6v0Group": tmnxSvcTlsFdbV6v0Group,
       "tmnxSvcIesIfV6v0Group": tmnxSvcIesIfV6v0Group,
       "tmnxSvcTlsShgV6v0Group": tmnxSvcTlsShgV6v0Group,
       "tmnxSvcTlsMFibV6v0Group": tmnxSvcTlsMFibV6v0Group,
       "tmnxSvcRdntV6v0Group": tmnxSvcRdntV6v0Group,
       "tmnxSvcTlsMstiV6v0Group": tmnxSvcTlsMstiV6v0Group,
       "tmnxSvcTlsEgrV6v0Group": tmnxSvcTlsEgrV6v0Group,
       "tmnxSvcDhcpV6v0Group": tmnxSvcDhcpV6v0Group,
       "tmnxSvcEndPointV6v0Group": tmnxSvcEndPointV6v0Group,
       "tmnxSvcPEV6v0Group": tmnxSvcPEV6v0Group,
       "tmnxSvcIfDHCP6V6v0Group": tmnxSvcIfDHCP6V6v0Group,
       "tmnxSvcTlsBackbone6v0Group": tmnxSvcTlsBackbone6v0Group,
       "tmnxSvcTlsBgpV6v0Group": tmnxSvcTlsBgpV6v0Group,
       "tmnxSvcEpipeV6v0Group": tmnxSvcEpipeV6v0Group,
       "tmnxSvcTlsPipV6v0Group": tmnxSvcTlsPipV6v0Group,
       "tmnxApipeV3v0Group": tmnxApipeV3v0Group,
       "tmnxSvcRoutedCOV5v0Group": tmnxSvcRoutedCOV5v0Group,
       "tmnxSvcBsxV6v0Group": tmnxSvcBsxV6v0Group,
       "tmnxSvcTlsBackbone6v1Group": tmnxSvcTlsBackbone6v1Group,
       "tmnxArpHostGroup": tmnxArpHostGroup,
       "svcIgmpTrkGroup": svcIgmpTrkGroup,
       "svcTlsMacV7v0Group": svcTlsMacV7v0Group,
       "tmnxSvcRoutedCOV7v0Group": tmnxSvcRoutedCOV7v0Group,
       "svcTlsEndPointV7v0Group": svcTlsEndPointV7v0Group,
       "tmnxSvcIpipeV7v0Group": tmnxSvcIpipeV7v0Group,
       "tmnxSvcDhcpBgpV7v0Group": tmnxSvcDhcpBgpV7v0Group,
       "tmnxSvcTlsPipV7v0Group": tmnxSvcTlsPipV7v0Group,
       "tmnxArpHostBgpGroup": tmnxArpHostBgpGroup,
       "tmnxSvcDhcpV7v0Group": tmnxSvcDhcpV7v0Group,
       "tmnxSvcPbbMacV7v0Group": tmnxSvcPbbMacV7v0Group,
       "tmnxSvcTlsFdbV7v0Group": tmnxSvcTlsFdbV7v0Group,
       "tmnxSvcV7v0Group": tmnxSvcV7v0Group,
       "tmnxSvcV8v0Group": tmnxSvcV8v0Group,
       "tmnxSvcMrpPolicyV8v0Group": tmnxSvcMrpPolicyV8v0Group,
       "tmnxSvcSiteV8v0Group": tmnxSvcSiteV8v0Group,
       "tmnxSvcRoutedCOV8v0Group": tmnxSvcRoutedCOV8v0Group,
       "tmnxArpHostV8v0Group": tmnxArpHostV8v0Group,
       "tmnxSvcTlsBgpV8v0Group": tmnxSvcTlsBgpV8v0Group,
       "tmnxSvcDhcpV8v0Group": tmnxSvcDhcpV8v0Group,
       "tmnxSvcBsxV8v0Group": tmnxSvcBsxV8v0Group,
       "tmnxSvcTlsV7v0Group": tmnxSvcTlsV7v0Group,
       "tmnxSvcIesIfV7v0Group": tmnxSvcIesIfV7v0Group,
       "tmnxSvcRoutedVplsV8v0Group": tmnxSvcRoutedVplsV8v0Group,
       "tmnxSvcMvrpV8v0Group": tmnxSvcMvrpV8v0Group,
       "tmnxSvcIpipeV8v0Group": tmnxSvcIpipeV8v0Group,
       "tmnxSvcInterAsV8v0Group": tmnxSvcInterAsV8v0Group,
       "tmnxSvcPwV8v0Group": tmnxSvcPwV8v0Group,
       "tmnxSvcTlsPipV8v0Group": tmnxSvcTlsPipV8v0Group,
       "tmnxSvcIesIfV8v0Group": tmnxSvcIesIfV8v0Group,
       "tmnxSvcV9v0Group": tmnxSvcV9v0Group,
       "tmnxSvcMSPwPeV9v0Group": tmnxSvcMSPwPeV9v0Group,
       "tmnxSvcOperGrpV9v0Group": tmnxSvcOperGrpV9v0Group,
       "tmnxSvcDhcpV9v0Group": tmnxSvcDhcpV9v0Group,
       "tmnxSvcRoutedCOV9v0Group": tmnxSvcRoutedCOV9v0Group,
       "tmnxSvcV9v0R4Group": tmnxSvcV9v0R4Group,
       "tmnxSvcMacReNotifyGroup": tmnxSvcMacReNotifyGroup,
       "tmnxSvcDhcpV10v0Group": tmnxSvcDhcpV10v0Group,
       "tmnxSvcRoutedCOV10v0Group": tmnxSvcRoutedCOV10v0Group,
       "tmnxSvcV10v0Group": tmnxSvcV10v0Group,
       "tmnxSvcIesIfV10v0Group": tmnxSvcIesIfV10v0Group,
       "tmnxArpHostV10v0Group": tmnxArpHostV10v0Group,
       "tmnxSvcIesIfV11v0Group": tmnxSvcIesIfV11v0Group,
       "tmnxSvcIesIfNHV10v0Group": tmnxSvcIesIfNHV10v0Group,
       "tmnxArpHostV11v0Group": tmnxArpHostV11v0Group,
       "tmnxSvcDhcpV11v0Group": tmnxSvcDhcpV11v0Group,
       "tmnxSvcRoutedCOV13v0Group": tmnxSvcRoutedCOV13v0Group,
       "tmnxSvcNotifyObjsV6v0Group": tmnxSvcNotifyObjsV6v0Group,
       "tmnxArpHostNotifyObjsGroup": tmnxArpHostNotifyObjsGroup,
       "tmnxSvcNotifyObjsV7v0Group": tmnxSvcNotifyObjsV7v0Group,
       "tmnxSvcObsoletedV6v0Group": tmnxSvcObsoletedV6v0Group,
       "tmnxSvcObsoletedV8v0Group": tmnxSvcObsoletedV8v0Group,
       "tmnxSvcObsoletedV9v0Group": tmnxSvcObsoletedV9v0Group,
       "tmnxSvcObsoletedV11v0Group": tmnxSvcObsoletedV11v0Group,
       "tmnxSvcObsoletedGroup": tmnxSvcObsoletedGroup,
       "tmnxSvcNotifyV6v0Group": tmnxSvcNotifyV6v0Group,
       "tmnxSvcNotifyObsoletedGroup": tmnxSvcNotifyObsoletedGroup,
       "tmnxArpHostNotifyGroup": tmnxArpHostNotifyGroup,
       "tmnxSvcMCEPNotifyGroup": tmnxSvcMCEPNotifyGroup,
       "tmnxSvcNotifyV7v0Group": tmnxSvcNotifyV7v0Group,
       "tmnxSvcNotifyV8v0Group": tmnxSvcNotifyV8v0Group,
       "tmnxSvcEthCfmGroup": tmnxSvcEthCfmGroup,
       "tmnxSvcNotifyV9v0Group": tmnxSvcNotifyV9v0Group,
       "tmnxSvcApipeInfoV9v0Group": tmnxSvcApipeInfoV9v0Group,
       "tmnxSvcSpbGroup": tmnxSvcSpbGroup,
       "tmnxSvcVllBgpGroup": tmnxSvcVllBgpGroup,
       "tmnxSvcP2mpGroup": tmnxSvcP2mpGroup,
       "tmnxSvcNotifyV10v0Group": tmnxSvcNotifyV10v0Group,
       "tmnxSvcV11v0Group": tmnxSvcV11v0Group,
       "tmnxSvcPEObsoletedGroup": tmnxSvcPEObsoletedGroup,
       "tmnxSvcNotifyObsoletedV11v0Group": tmnxSvcNotifyObsoletedV11v0Group,
       "tmnxSvcNotifyV11v0Group": tmnxSvcNotifyV11v0Group,
       "svcBgpVpwsGroup": svcBgpVpwsGroup,
       "tmnxSvcSchedulerRateV11v0Group": tmnxSvcSchedulerRateV11v0Group,
       "tmnxSvcSpbV11v0Group": tmnxSvcSpbV11v0Group,
       "tmnxSvcV12v0Group": tmnxSvcV12v0Group,
       "tmnxSvcMHGroup": tmnxSvcMHGroup,
       "tmnxSvcCondStaticMacGroup": tmnxSvcCondStaticMacGroup,
       "svcTlsFdbMacStatsGroup": svcTlsFdbMacStatsGroup,
       "svcOperGrpBfdGroup": svcOperGrpBfdGroup,
       "svcTlsEtreeGroup": svcTlsEtreeGroup,
       "svcVxlanGroup": svcVxlanGroup,
       "svcBgpEvpnGroup": svcBgpEvpnGroup,
       "tmnxSvcV11v4Group": tmnxSvcV11v4Group,
       "svcBaseInfoObsoletedGroup": svcBaseInfoObsoletedGroup,
       "tmnxIesIfRtrSolicitGroup": tmnxIesIfRtrSolicitGroup,
       "svcVsdGroup": svcVsdGroup,
       "tmnxSvcQosV12v0Group": tmnxSvcQosV12v0Group,
       "tmnxSvcCreation12v0Group": tmnxSvcCreation12v0Group,
       "svcBgpEvpnNotifGroup": svcBgpEvpnNotifGroup,
       "svcVxlanNotifGroup": svcVxlanNotifGroup,
       "tmnxSvcPbbMacV12v0Group": tmnxSvcPbbMacV12v0Group,
       "tmnxSvcTestGroup": tmnxSvcTestGroup,
       "svcBgpEvpnIPRouteGroup": svcBgpEvpnIPRouteGroup,
       "tmnxSvcIesIfIpoeV13v0Group": tmnxSvcIesIfIpoeV13v0Group,
       "tmnxSvcIesIfV12v0Group": tmnxSvcIesIfV12v0Group,
       "tmnxSvcIpipeFaultPropGroup": tmnxSvcIpipeFaultPropGroup,
       "tmnxSvcQosSchedV13v0Group": tmnxSvcQosSchedV13v0Group,
       "tmnxSvcTlsProxyArpGroup": tmnxSvcTlsProxyArpGroup,
       "tmnxSvcVprnV13v0Group": tmnxSvcVprnV13v0Group,
       "tmnxSvcTlsProxyArpEnhGroup": tmnxSvcTlsProxyArpEnhGroup,
       "tmnxSvcTlsEvpnProxyArpGroup": tmnxSvcTlsEvpnProxyArpGroup,
       "tmnxSvcIesIfV13v0Group": tmnxSvcIesIfV13v0Group,
       "svcTlsProxyArpNotifGroup": svcTlsProxyArpNotifGroup,
       "tmnxSvcVsdGlobalObjsV13v0Group": tmnxSvcVsdGlobalObjsV13v0Group,
       "svcBgpEvpnMplsGroup": svcBgpEvpnMplsGroup,
       "svcBgpEvpnMplsMhGroup": svcBgpEvpnMplsMhGroup,
       "svcEvpnMplsNotifGroup": svcEvpnMplsNotifGroup,
       "tmnxSvcTlsMFibV13v0Group": tmnxSvcTlsMFibV13v0Group,
       "svcSpiLoadBalGroup": svcSpiLoadBalGroup,
       "svcBgpAutoRDGroup": svcBgpAutoRDGroup,
       "svcRipListenerGroup": svcRipListenerGroup,
       "tmnxSvcQosRateV13v0Group": tmnxSvcQosRateV13v0Group,
       "tmnxSvcGrpIfGroup": tmnxSvcGrpIfGroup,
       "svcTeidLoadBalGroup": svcTeidLoadBalGroup,
       "svcBgpMHSiteGroup": svcBgpMHSiteGroup,
       "svcSiteMinDnTimerNotifyObjsGroup": svcSiteMinDnTimerNotifyObjsGroup,
       "svcSiteMinDnTimerNotifGroup": svcSiteMinDnTimerNotifGroup,
       "tmnxSvcShcvPolicyGroup": tmnxSvcShcvPolicyGroup,
       "tmnxSvcV13v0Group": tmnxSvcV13v0Group,
       "tmnxSvcObsoletedV13v0Group": tmnxSvcObsoletedV13v0Group,
       "svcTlsProxyArpNotifyObjsGroup": svcTlsProxyArpNotifyObjsGroup,
       "svcAutoBindTunnelGroup": svcAutoBindTunnelGroup,
       "tmnxSvcTlsProxyNdGroup": tmnxSvcTlsProxyNdGroup,
       "svcTlsProxyNdNotifGroup": svcTlsProxyNdNotifGroup,
       "svcV13v0NotifyObjsGroup": svcV13v0NotifyObjsGroup,
       "svcArpHostNotifGroup": svcArpHostNotifGroup,
       "tmnxSvcVsdDynamicSvcGroup": tmnxSvcVsdDynamicSvcGroup,
       "svcEvpnDestNotifGroup": svcEvpnDestNotifGroup,
       "tmnxSvcV14v0Group": tmnxSvcV14v0Group,
       "svcTlsEsPbrL2Group": svcTlsEsPbrL2Group,
       "svcVprnEsPbrL3Group": svcVprnEsPbrL3Group,
       "tmnxSvcDhcpV13v0Group": tmnxSvcDhcpV13v0Group,
       "tmnxArpHostV13v0Group": tmnxArpHostV13v0Group,
       "svcEvpnMhEsDFNotifGroup": svcEvpnMhEsDFNotifGroup,
       "svcBgpEvpnMplsV14v0Group": svcBgpEvpnMplsV14v0Group,
       "tmnxSvcRadClassGroup": tmnxSvcRadClassGroup,
       "svcAutoBindTunnelSRTEGroup": svcAutoBindTunnelSRTEGroup,
       "svcTlsStaticBHGroup": svcTlsStaticBHGroup,
       "svcVxlanObsoletedNotifGroup": svcVxlanObsoletedNotifGroup,
       "svcVxlan14v0NotifGroup": svcVxlan14v0NotifGroup,
       "svcBgpEvpnP2mpMldpGroup": svcBgpEvpnP2mpMldpGroup,
       "svcBgpEvpnMplsMh1Group": svcBgpEvpnMplsMh1Group,
       "svcBgpEvpnMplsMhObsoletedGroup": svcBgpEvpnMplsMhObsoletedGroup,
       "tmnxSvcVplsGroup": tmnxSvcVplsGroup,
       "svcBgpEvpnAutoBindTnlSRTEGroup": svcBgpEvpnAutoBindTnlSRTEGroup,
       "tmnxSvcVllBgpEvpnGroup": tmnxSvcVllBgpEvpnGroup,
       "tmnxSvcNotifyV14v0Group": tmnxSvcNotifyV14v0Group,
       "tmnxSvcObsoletedNotifsGroup": tmnxSvcObsoletedNotifsGroup,
       "tmnxSvcNotifyObjsV14v0Group": tmnxSvcNotifyObjsV14v0Group,
       "tmnxSvcNotifyObsoletedV14v0Group": tmnxSvcNotifyObsoletedV14v0Group,
       "svcEpipeBgpEvpnAutoBindTnlGroup": svcEpipeBgpEvpnAutoBindTnlGroup,
       "svcEvpnAlmpNotifGroup": svcEvpnAlmpNotifGroup,
       "tmnxSvcSysVxlanARGroup": tmnxSvcSysVxlanARGroup,
       "svcBgpEvpnMplsRcdSrcMacGroup": svcBgpEvpnMplsRcdSrcMacGroup,
       "svcVxlanV14v0Group": svcVxlanV14v0Group,
       "svcVxlanObsoletedGroup": svcVxlanObsoletedGroup,
       "svcEpipePwPortGroup": svcEpipePwPortGroup,
       "tmnxSvcSysVxlanTunTermGroup": tmnxSvcSysVxlanTunTermGroup,
       "svcTlsPbbV14v0Group": svcTlsPbbV14v0Group,
       "svcVplsEvpnV14v0Group": svcVplsEvpnV14v0Group,
       "svcBgpEvpnMplsMhAdEviRtGroup": svcBgpEvpnMplsMhAdEviRtGroup,
       "svcBgpEvpnMacDupDetBHGroup": svcBgpEvpnMacDupDetBHGroup,
       "svcBgpEvpnMacDupDetBHNotifGroup": svcBgpEvpnMacDupDetBHNotifGroup,
       "svcProxyArpNdMacListGroup": svcProxyArpNdMacListGroup,
       "svcVplsEvpnInclMcastV14v0Group": svcVplsEvpnInclMcastV14v0Group,
       "svcVplsIpv6McastV15v0Group": svcVplsIpv6McastV15v0Group,
       "tmnxSvcSysVirtualEthSegGroup": tmnxSvcSysVirtualEthSegGroup,
       "svcTlsVxlanReplicatorNotifGroup": svcTlsVxlanReplicatorNotifGroup,
       "svcAutoBindTunnelV15v0Group": svcAutoBindTunnelV15v0Group,
       "svcBgpEvpnMplsMhDfPrefGroup": svcBgpEvpnMplsMhDfPrefGroup,
       "svcBgpEvpnEtreeV15v0Group": svcBgpEvpnEtreeV15v0Group,
       "tmnxSvcSelectiveUrpfGroup": tmnxSvcSelectiveUrpfGroup,
       "svcBgpEvpnAutoBindUdpTnlGroup": svcBgpEvpnAutoBindUdpTnlGroup,
       "tmnxSvcEpipeVxlanVtepGroup": tmnxSvcEpipeVxlanVtepGroup,
       "tmnxSvcEpipeNatOutsideV15v0Group": tmnxSvcEpipeNatOutsideV15v0Group,
       "tmnxSvcEpipeVxlanGroup": tmnxSvcEpipeVxlanGroup,
       "svcPbbEvpnIsidRtGroup": svcPbbEvpnIsidRtGroup,
       "tmnxSvcTlsEgrObsoletedGroup": tmnxSvcTlsEgrObsoletedGroup,
       "tmnxSvcTlsV15v0Group": tmnxSvcTlsV15v0Group,
       "tmnxSvcRateV15v0Group": tmnxSvcRateV15v0Group,
       "svcBgpEvpnEtreeNotifGroup": svcBgpEvpnEtreeNotifGroup,
       "svcTlsPmsiV15v0Group": svcTlsPmsiV15v0Group,
       "tmnxSvcDhcpV15v0Group": tmnxSvcDhcpV15v0Group,
       "tmnxArpHostV15v0Group": tmnxArpHostV15v0Group,
       "svcTlsFdbV15v0Group": svcTlsFdbV15v0Group,
       "svcVxlanEvpnMplsDestNotifGroup": svcVxlanEvpnMplsDestNotifGroup,
       "svcEvpnDestObsoletedNotifGroup": svcEvpnDestObsoletedNotifGroup,
       "svcSysEvpnESDfPrefNotifGroup": svcSysEvpnESDfPrefNotifGroup,
       "svcVprnWeightedLoadBalanceGroup": svcVprnWeightedLoadBalanceGroup,
       "svcVxlanMhV15v0Group": svcVxlanMhV15v0Group,
       "svcVxlanInstBgpEvpnMhV15v0Group": svcVxlanInstBgpEvpnMhV15v0Group,
       "tmnxSvcSysFdbUsgNotifGroup": tmnxSvcSysFdbUsgNotifGroup,
       "svcPbbEvpnEtreeV15v0Group": svcPbbEvpnEtreeV15v0Group,
       "svcSysGreEthBrgdTnlTrmGroup": svcSysGreEthBrgdTnlTrmGroup,
       "tmnxSvcNotifyV15v0Group": tmnxSvcNotifyV15v0Group,
       "tmnxSvcMacScaleObsoletedGroup": tmnxSvcMacScaleObsoletedGroup,
       "svcVplsProxyArpNdRtmV15v0Group": svcVplsProxyArpNdRtmV15v0Group,
       "svcVprnBgpAutoBindUdpTnlGroup": svcVprnBgpAutoBindUdpTnlGroup,
       "svcTlsFdbMacScaleV15v0Group": svcTlsFdbMacScaleV15v0Group,
       "tmnxSvcV15v0Group": tmnxSvcV15v0Group,
       "tmnxSvcV15v0ObsoletedGroup": tmnxSvcV15v0ObsoletedGroup,
       "tmnxSvcCustomerNameGroup": tmnxSvcCustomerNameGroup,
       "svcVxlanEcmpGroup": svcVxlanEcmpGroup,
       "tmnxSvcIesIfV16v0Group": tmnxSvcIesIfV16v0Group,
       "tmnxSvcSiteV15v1Group": tmnxSvcSiteV15v1Group,
       "svcTlsBgpObsoletedGroup": svcTlsBgpObsoletedGroup,
       "svcBgpAutoRDV15v1Group": svcBgpAutoRDV15v1Group,
       "tmnxSvcCreation15v1Group": tmnxSvcCreation15v1Group,
       "svcBgpEvpnMplsV15v1Group": svcBgpEvpnMplsV15v1Group,
       "tmnxSvcVllBgpV15v1Group": tmnxSvcVllBgpV15v1Group,
       "svcVxlanTermV15v0Group": svcVxlanTermV15v0Group,
       "svcEvpnMHStandbyNotifGroup": svcEvpnMHStandbyNotifGroup,
       "svcV15v0NotifyObjsGroup": svcV15v0NotifyObjsGroup,
       "svcV19v0NotifyObjsGroup": svcV19v0NotifyObjsGroup,
       "svcSrv6NotifyObjsGroup": svcSrv6NotifyObjsGroup,
       "svcBgpEvpnMplsObjectGroup": svcBgpEvpnMplsObjectGroup,
       "svcBgpEvpnMplsObsoletedGroup": svcBgpEvpnMplsObsoletedGroup,
       "svcEvpnMplsBindsTransportGroup": svcEvpnMplsBindsTransportGroup,
       "svcBgpEvpnMplsMh1V15v0Group": svcBgpEvpnMplsMh1V15v0Group,
       "svcBgpEvpnMplsMh1ObsoletedGroup": svcBgpEvpnMplsMh1ObsoletedGroup,
       "svcEvpnMplsMhBindsTransportGroup": svcEvpnMplsMhBindsTransportGroup,
       "svcPppoeRedirectGroup": svcPppoeRedirectGroup,
       "tmnxSvcV16v0ObsoletedGroup": tmnxSvcV16v0ObsoletedGroup,
       "tmnxSvcInterAsObsoletedGroup": tmnxSvcInterAsObsoletedGroup,
       "svcBgpEvpnVxlanGroup": svcBgpEvpnVxlanGroup,
       "svcVxlan16v0NotifGroup": svcVxlan16v0NotifGroup,
       "svcVxlan16v0ObsoletedNotifGroup": svcVxlan16v0ObsoletedNotifGroup,
       "svcBgpEvpnMhEthSegPwPortGroup": svcBgpEvpnMhEthSegPwPortGroup,
       "svcOperGroupConfigGroup": svcOperGroupConfigGroup,
       "svcVxlanV16v0ObsoletedGroup": svcVxlanV16v0ObsoletedGroup,
       "svcVxlanV16v0Group": svcVxlanV16v0Group,
       "svcBgpEvpnInstGroup": svcBgpEvpnInstGroup,
       "tmnxSvcV16v0Group": tmnxSvcV16v0Group,
       "tmnxSvcObsoletedV16v0Group": tmnxSvcObsoletedV16v0Group,
       "tmnxSvcAdminTagsV16v0Group": tmnxSvcAdminTagsV16v0Group,
       "tmnxSvcEvpnMplsQinqV16v0Group": tmnxSvcEvpnMplsQinqV16v0Group,
       "svcMdAutoIdV16v0Group": svcMdAutoIdV16v0Group,
       "tmnxSvcEpipePwPortFlexV16v0Group": tmnxSvcEpipePwPortFlexV16v0Group,
       "svcBgpEvpnMplsV16v0Group": svcBgpEvpnMplsV16v0Group,
       "tmnxSvcVllBgpEvpnV16v0Group": tmnxSvcVllBgpEvpnV16v0Group,
       "tmnxSvcSysPwPortListV16v0Group": tmnxSvcSysPwPortListV16v0Group,
       "tmnxSvcSysVxlanARV16v0Group": tmnxSvcSysVxlanARV16v0Group,
       "svcBgpEvpnMplsRSMV16v0Group": svcBgpEvpnMplsRSMV16v0Group,
       "svcVxlanMhV16v0Group": svcVxlanMhV16v0Group,
       "svcTlsVxInstReplicatorNotifGroup": svcTlsVxInstReplicatorNotifGroup,
       "svcTlsStaticVxlanV16v0Group": svcTlsStaticVxlanV16v0Group,
       "svcTlsStaticVxlanNotifGroup": svcTlsStaticVxlanNotifGroup,
       "svcEpipeVxInstV16v0Group": svcEpipeVxInstV16v0Group,
       "svcBgpEvpnDefRtTagV16v0Group": svcBgpEvpnDefRtTagV16v0Group,
       "svcBgpEvpnMplsABTV16v0Group": svcBgpEvpnMplsABTV16v0Group,
       "svcVprnAaaTacPlusV16v0Group": svcVprnAaaTacPlusV16v0Group,
       "svcVprnAaaLdapV16v0Group": svcVprnAaaLdapV16v0Group,
       "svcVprnAaaRadiusV16v0Group": svcVprnAaaRadiusV16v0Group,
       "svcVprnRibApiV16v0Group": svcVprnRibApiV16v0Group,
       "svcSysVpnGreSrcIpV16v0Group": svcSysVpnGreSrcIpV16v0Group,
       "svcVprnMgmtIfV16v0Group": svcVprnMgmtIfV16v0Group,
       "svcMplsFwdPlcyV16v0Group": svcMplsFwdPlcyV16v0Group,
       "tmnxSvcEvpnVpwsVxlanV16v0Group": tmnxSvcEvpnVpwsVxlanV16v0Group,
       "tmnxIesIfVplsEvpnGroup": tmnxIesIfVplsEvpnGroup,
       "svcVplsVxlanRxDiscardGroup": svcVplsVxlanRxDiscardGroup,
       "svcEvpnMplsEPGroup": svcEvpnMplsEPGroup,
       "tmnxSvcEpipeVxlanObsoletedGroup": tmnxSvcEpipeVxlanObsoletedGroup,
       "tmnxSvcEpipeVxlanV16v0Group": tmnxSvcEpipeVxlanV16v0Group,
       "svcVplsResFilterV19v5Group": svcVplsResFilterV19v5Group,
       "tmnxSvcSrOspf3V16v0Group": tmnxSvcSrOspf3V16v0Group,
       "svcVplsEvpnMplsTnlIdGroup": svcVplsEvpnMplsTnlIdGroup,
       "svcBgpEvpnOperGrpGroup": svcBgpEvpnOperGrpGroup,
       "svcBgpEvpnVxlanMhGroup": svcBgpEvpnVxlanMhGroup,
       "svcBgpEvpnVxlanMhNotifGroup": svcBgpEvpnVxlanMhNotifGroup,
       "svcSysEthSegOperGrpGroup": svcSysEthSegOperGrpGroup,
       "svcVllBgpVsiPolicyGroup": svcVllBgpVsiPolicyGroup,
       "svcVprnMgmtIfV19v0Group": svcVprnMgmtIfV19v0Group,
       "svcVprnMgmtIfV19v0ObsoletedGroup": svcVprnMgmtIfV19v0ObsoletedGroup,
       "svcBgpEvpnMplsIpv6Group": svcBgpEvpnMplsIpv6Group,
       "svcEvpnOISMGroup": svcEvpnOISMGroup,
       "svcEvpnRvplsMcastGwGroup": svcEvpnRvplsMcastGwGroup,
       "svcBgpEvpnAutoBindOspfGroup": svcBgpEvpnAutoBindOspfGroup,
       "svcRvplsEvpnHostRouteGroup": svcRvplsEvpnHostRouteGroup,
       "svcBgpEvpnABTEcmpGroup": svcBgpEvpnABTEcmpGroup,
       "svcMplsEvpnRvplsEcmpGroup": svcMplsEvpnRvplsEcmpGroup,
       "svcEvpnMcastLabelBlockGroup": svcEvpnMcastLabelBlockGroup,
       "tmnxSvcV19v0Group": tmnxSvcV19v0Group,
       "svcRvplsEvpnNdHostRouteGroup": svcRvplsEvpnNdHostRouteGroup,
       "svcTlsVxInstVTEPEgrVniGroup": svcTlsVxInstVTEPEgrVniGroup,
       "tmnxSvcIesGrpIfV20v0Group": tmnxSvcIesGrpIfV20v0Group,
       "tmnxSvcV20v0Group": tmnxSvcV20v0Group,
       "svcVxlanV20v0ObsoletedGroup": svcVxlanV20v0ObsoletedGroup,
       "svcDHCPLeaseV20v0Group": svcDHCPLeaseV20v0Group,
       "tmnxSvcDhcpMRtV20v0Group": tmnxSvcDhcpMRtV20v0Group,
       "svcBgpEvpnV20v0Group": svcBgpEvpnV20v0Group,
       "tmnxVxlanV20v0Group": tmnxVxlanV20v0Group,
       "svcTlsProxyV20v0Group": svcTlsProxyV20v0Group,
       "svcBgpEvpnVxlanMhV20v0Group": svcBgpEvpnVxlanMhV20v0Group,
       "svcVplsMacProtect": svcVplsMacProtect,
       "svcEvpnOismV20v0Group": svcEvpnOismV20v0Group,
       "svcNotifyV20v0Group": svcNotifyV20v0Group,
       "svcMacListV20v0Group": svcMacListV20v0Group,
       "svcAutoBindTunnelV20v0Group": svcAutoBindTunnelV20v0Group,
       "tmnxSvcBgpEvpnV20v0Group": tmnxSvcBgpEvpnV20v0Group,
       "svcEvpnMpls2SapV20v0Group": svcEvpnMpls2SapV20v0Group,
       "svcHostSessionLimitV20v0Group": svcHostSessionLimitV20v0Group,
       "svcEvpnMplsV20v0NotifGroup": svcEvpnMplsV20v0NotifGroup,
       "svcSysBgpEvpnAttrPropV21v0Group": svcSysBgpEvpnAttrPropV21v0Group,
       "svcSrv6V21v0Group": svcSrv6V21v0Group,
       "svcDhcpLeaseV21v0Group": svcDhcpLeaseV21v0Group,
       "tmnxSvcVprnIngClassPlcyV21v0Grp": tmnxSvcVprnIngClassPlcyV21v0Grp,
       "tmnxSvcObsoletedV21v0Group": tmnxSvcObsoletedV21v0Group,
       "svcBgpEvpnInstV21v0Group": svcBgpEvpnInstV21v0Group,
       "svcBgpEvpnObsoletedV21v0Group": svcBgpEvpnObsoletedV21v0Group,
       "svcEthSegV21v0Group": svcEthSegV21v0Group,
       "svcEthSegEvpnV21v0Group": svcEthSegEvpnV21v0Group,
       "svcEvpnMHAutoEsiV21v0Group": svcEvpnMHAutoEsiV21v0Group,
       "svcEvpnEtreeLeafLabelV21v0Group": svcEvpnEtreeLeafLabelV21v0Group,
       "svcIfSubStatsV21v0Group": svcIfSubStatsV21v0Group,
       "svcEpipeSrv6V21v0Group": svcEpipeSrv6V21v0Group,
       "svcEpipeEvpnSrv6V21v0Group": svcEpipeEvpnSrv6V21v0Group,
       "iesLastChangeV21v0Group": iesLastChangeV21v0Group,
       "svcLastChangeV21v0Group": svcLastChangeV21v0Group,
       "tmnxSvcSubV21v0Group": tmnxSvcSubV21v0Group,
       "svcEvpnSrv6NotifGroup": svcEvpnSrv6NotifGroup,
       "svcSrv6NotificationGroup": svcSrv6NotificationGroup,
       "svcEvpnRvplsMcastGwV21v0Group": svcEvpnRvplsMcastGwV21v0Group,
       "svcEpipePbbRedEnhV21v0Group": svcEpipePbbRedEnhV21v0Group,
       "svcDPathAttrObj21Group": svcDPathAttrObj21Group,
       "svcSubStatsV22v0NotifGroup": svcSubStatsV22v0NotifGroup,
       "svcEvpnCandListPrefDataObj21Grp": svcEvpnCandListPrefDataObj21Grp,
       "svcVprnWeightedEcmpGroup": svcVprnWeightedEcmpGroup,
       "svcVprnEcmpGroup": svcVprnEcmpGroup,
       "svcVplsEvpnMplsV21v0Group": svcVplsEvpnMplsV21v0Group,
       "svcEvpnEvi3ByteAutoRTObj21Grp": svcEvpnEvi3ByteAutoRTObj21Grp,
       "svcVprnRadiusServerV21v0Group": svcVprnRadiusServerV21v0Group,
       "svcBgpMTUSignalling22v0Grp": svcBgpMTUSignalling22v0Grp,
       "svcLblEthOrIPL4TEID22v0Grp": svcLblEthOrIPL4TEID22v0Grp,
       "svcEvpnExtEgLblLmtV22v0Grp": svcEvpnExtEgLblLmtV22v0Grp,
       "svcRtdVplsEvpnGWV22v0NotifGroup": svcRtdVplsEvpnGWV22v0NotifGroup,
       "svcEvpnESV2v0Group": svcEvpnESV2v0Group,
       "svcBgpEvpnMplsMh1V22v0Group": svcBgpEvpnMplsMh1V22v0Group,
       "svcBgpEvpnObsoletedV22v0Group": svcBgpEvpnObsoletedV22v0Group,
       "svcEvpnMplsMhBindsV22Group": svcEvpnMplsMhBindsV22Group,
       "svcEvpnMplsTnlIdObsoletedGroup": svcEvpnMplsTnlIdObsoletedGroup,
       "svcVplsEvpnMplsTnlIdV22Group": svcVplsEvpnMplsTnlIdV22Group,
       "svcEvpnOISMObsoleteGroup": svcEvpnOISMObsoleteGroup,
       "svcEvpnOISMV22Group": svcEvpnOISMV22Group,
       "svcBgpEvpnMplsObsoleteGroup": svcBgpEvpnMplsObsoleteGroup,
       "svcBgpEvpnMplsV22v0Group": svcBgpEvpnMplsV22v0Group,
       "svcEpipePwPortTldp22v0Group": svcEpipePwPortTldp22v0Group,
       "svcVprnTacPlusAccCmdOp21v0Group": svcVprnTacPlusAccCmdOp21v0Group,
       "tmnxTstpConformance": tmnxTstpConformance,
       "tmnxTstpCompliances": tmnxTstpCompliances,
       "tmnxTstpGroups": tmnxTstpGroups,
       "tmnxServObjs": tmnxServObjs,
       "tmnxCustObjs": tmnxCustObjs,
       "custNumEntries": custNumEntries,
       "custNextFreeId": custNextFreeId,
       "custInfoTable": custInfoTable,
       "custInfoEntry": custInfoEntry,
       "custId": custId,
       "custRowStatus": custRowStatus,
       "custDescription": custDescription,
       "custContact": custContact,
       "custPhone": custPhone,
       "custLastMgmtChange": custLastMgmtChange,
       "custCreationOrigin": custCreationOrigin,
       "custName": custName,
       "custMultiServiceSiteTable": custMultiServiceSiteTable,
       "custMultiServiceSiteEntry": custMultiServiceSiteEntry,
       "custMultSvcSiteName": custMultSvcSiteName,
       "custMultSvcSiteRowStatus": custMultSvcSiteRowStatus,
       "custMultSvcSiteDescription": custMultSvcSiteDescription,
       "custMultSvcSiteScope": custMultSvcSiteScope,
       "custMultSvcSiteAssignment": custMultSvcSiteAssignment,
       "custMultSvcSiteIngressSchedulerPolicy": custMultSvcSiteIngressSchedulerPolicy,
       "custMultSvcSiteEgressSchedulerPolicy": custMultSvcSiteEgressSchedulerPolicy,
       "custMultSvcSiteLastMgmtChange": custMultSvcSiteLastMgmtChange,
       "custMultSvcSiteTodSuite": custMultSvcSiteTodSuite,
       "custMultSvcSiteCurrentIngrSchedPlcy": custMultSvcSiteCurrentIngrSchedPlcy,
       "custMultSvcSiteCurrentEgrSchedPlcy": custMultSvcSiteCurrentEgrSchedPlcy,
       "custMultSvcSiteEgressAggRateLimit": custMultSvcSiteEgressAggRateLimit,
       "custMultSvcSiteIntendedIngrSchedPlcy": custMultSvcSiteIntendedIngrSchedPlcy,
       "custMultSvcSiteIntendedEgrSchedPlcy": custMultSvcSiteIntendedEgrSchedPlcy,
       "custMultSvcSiteFrameBasedAccnt": custMultSvcSiteFrameBasedAccnt,
       "custMultSvcSiteSubscriberMss": custMultSvcSiteSubscriberMss,
       "custMultSvcSiteIngPolcrCtrlPolcy": custMultSvcSiteIngPolcrCtrlPolcy,
       "custMultSvcSiteEgrPolcrCtrlPolcy": custMultSvcSiteEgrPolcrCtrlPolcy,
       "custMultSvcSiteEgressAggRateLUB": custMultSvcSiteEgressAggRateLUB,
       "custMultSvcSiteEgrAggRateLimitHi": custMultSvcSiteEgrAggRateLimitHi,
       "custMultSvcSiteEgrAggRateLimit": custMultSvcSiteEgrAggRateLimit,
       "custMultiSvcSiteIngStatsTable": custMultiSvcSiteIngStatsTable,
       "custMultiSvcSiteIngStatsEntry": custMultiSvcSiteIngStatsEntry,
       "custIngQosSchedName": custIngQosSchedName,
       "custIngQosSchedStatsForwardedPackets": custIngQosSchedStatsForwardedPackets,
       "custIngQosSchedStatsForwardedOctets": custIngQosSchedStatsForwardedOctets,
       "custMultiSvcSiteEgrStatsTable": custMultiSvcSiteEgrStatsTable,
       "custMultiSvcSiteEgrStatsEntry": custMultiSvcSiteEgrStatsEntry,
       "custEgrQosSchedName": custEgrQosSchedName,
       "custEgrQosSchedStatsForwardedPackets": custEgrQosSchedStatsForwardedPackets,
       "custEgrQosSchedStatsForwardedOctets": custEgrQosSchedStatsForwardedOctets,
       "custIngQosPortIdSchedStatsTable": custIngQosPortIdSchedStatsTable,
       "custIngQosPortIdSchedStatsEntry": custIngQosPortIdSchedStatsEntry,
       "custIngQosPortIdSchedName": custIngQosPortIdSchedName,
       "custIngQosAssignmentPortId": custIngQosAssignmentPortId,
       "custIngQosPortSchedFwdPkts": custIngQosPortSchedFwdPkts,
       "custIngQosPortSchedFwdOctets": custIngQosPortSchedFwdOctets,
       "custEgrQosPortIdSchedStatsTable": custEgrQosPortIdSchedStatsTable,
       "custEgrQosPortIdSchedStatsEntry": custEgrQosPortIdSchedStatsEntry,
       "custEgrQosPortIdSchedName": custEgrQosPortIdSchedName,
       "custEgrQosAssignmentPortId": custEgrQosAssignmentPortId,
       "custEgrQosPortSchedFwdPkts": custEgrQosPortSchedFwdPkts,
       "custEgrQosPortSchedFwdOctets": custEgrQosPortSchedFwdOctets,
       "custMssIngQosSchedInfoTable": custMssIngQosSchedInfoTable,
       "custMssIngQosSchedInfoEntry": custMssIngQosSchedInfoEntry,
       "custMssIngQosSName": custMssIngQosSName,
       "custMssIngQosSRowStatus": custMssIngQosSRowStatus,
       "custMssIngQosSLastMgmtChange": custMssIngQosSLastMgmtChange,
       "custMssIngQosSOverrideFlags": custMssIngQosSOverrideFlags,
       "custMssIngQosSPIR": custMssIngQosSPIR,
       "custMssIngQosSCIR": custMssIngQosSCIR,
       "custMssIngQosSSummedCIR": custMssIngQosSSummedCIR,
       "custMssIngQosSPIRHi": custMssIngQosSPIRHi,
       "custMssIngQosSPIRLo": custMssIngQosSPIRLo,
       "custMssIngQosSCIRHi": custMssIngQosSCIRHi,
       "custMssIngQosSCIRLo": custMssIngQosSCIRLo,
       "custMssIngQosSParentWeight": custMssIngQosSParentWeight,
       "custMssIngQosSParentCIRWeight": custMssIngQosSParentCIRWeight,
       "custMssEgrQosSchedInfoTable": custMssEgrQosSchedInfoTable,
       "custMssEgrQosSchedInfoEntry": custMssEgrQosSchedInfoEntry,
       "custMssEgrQosSName": custMssEgrQosSName,
       "custMssEgrQosSRowStatus": custMssEgrQosSRowStatus,
       "custMssEgrQosSLastMgmtChange": custMssEgrQosSLastMgmtChange,
       "custMssEgrQosSOverrideFlags": custMssEgrQosSOverrideFlags,
       "custMssEgrQosSPIR": custMssEgrQosSPIR,
       "custMssEgrQosSCIR": custMssEgrQosSCIR,
       "custMssEgrQosSSummedCIR": custMssEgrQosSSummedCIR,
       "custMssEgrQosSPIRHi": custMssEgrQosSPIRHi,
       "custMssEgrQosSPIRLo": custMssEgrQosSPIRLo,
       "custMssEgrQosSCIRHi": custMssEgrQosSCIRHi,
       "custMssEgrQosSCIRLo": custMssEgrQosSCIRLo,
       "custMssEgrQosSParentWeight": custMssEgrQosSParentWeight,
       "custMssEgrQosSParentCIRWeight": custMssEgrQosSParentCIRWeight,
       "custMultiSvcSiteIngSchedPlcyStatsTable": custMultiSvcSiteIngSchedPlcyStatsTable,
       "custMultiSvcSiteIngSchedPlcyStatsEntry": custMultiSvcSiteIngSchedPlcyStatsEntry,
       "custIngSchedPlcyStatsFwdPkt": custIngSchedPlcyStatsFwdPkt,
       "custIngSchedPlcyStatsFwdOct": custIngSchedPlcyStatsFwdOct,
       "custMultiSvcSiteEgrSchedPlcyStatsTable": custMultiSvcSiteEgrSchedPlcyStatsTable,
       "custMultiSvcSiteEgrSchedPlcyStatsEntry": custMultiSvcSiteEgrSchedPlcyStatsEntry,
       "custEgrSchedPlcyStatsFwdPkt": custEgrSchedPlcyStatsFwdPkt,
       "custEgrSchedPlcyStatsFwdOct": custEgrSchedPlcyStatsFwdOct,
       "custMultiSvcSiteIngSchedPlcyPortStatsTable": custMultiSvcSiteIngSchedPlcyPortStatsTable,
       "custMultiSvcSiteIngSchedPlcyPortStatsEntry": custMultiSvcSiteIngSchedPlcyPortStatsEntry,
       "custIngSchedPlcyPortStatsPort": custIngSchedPlcyPortStatsPort,
       "custIngSchedPlcyPortStatsFwdPkt": custIngSchedPlcyPortStatsFwdPkt,
       "custIngSchedPlcyPortStatsFwdOct": custIngSchedPlcyPortStatsFwdOct,
       "custMultiSvcSiteEgrSchedPlcyPortStatsTable": custMultiSvcSiteEgrSchedPlcyPortStatsTable,
       "custMultiSvcSiteEgrSchedPlcyPortStatsEntry": custMultiSvcSiteEgrSchedPlcyPortStatsEntry,
       "custEgrSchedPlcyPortStatsPort": custEgrSchedPlcyPortStatsPort,
       "custEgrSchedPlcyPortStatsFwdPkt": custEgrSchedPlcyPortStatsFwdPkt,
       "custEgrSchedPlcyPortStatsFwdOct": custEgrSchedPlcyPortStatsFwdOct,
       "custMssIngQosArbitStatsTable": custMssIngQosArbitStatsTable,
       "custMssIngQosArbitStatsEntry": custMssIngQosArbitStatsEntry,
       "custMssIngQosArbitName": custMssIngQosArbitName,
       "custMssIngQosArbitStatsFwdPkts": custMssIngQosArbitStatsFwdPkts,
       "custMssIngQosArbitStatsFwdPktsLo": custMssIngQosArbitStatsFwdPktsLo,
       "custMssIngQosArbitStatsFwdPktsHi": custMssIngQosArbitStatsFwdPktsHi,
       "custMssIngQosArbitStatsFwdOcts": custMssIngQosArbitStatsFwdOcts,
       "custMssIngQosArbitStatsFwdOctsLo": custMssIngQosArbitStatsFwdOctsLo,
       "custMssIngQosArbitStatsFwdOctsHi": custMssIngQosArbitStatsFwdOctsHi,
       "custMssEgrQosArbitStatsTable": custMssEgrQosArbitStatsTable,
       "custMssEgrQosArbitStatsEntry": custMssEgrQosArbitStatsEntry,
       "custMssEgrQosArbitName": custMssEgrQosArbitName,
       "custMssEgrQosArbitStatsFwdPkts": custMssEgrQosArbitStatsFwdPkts,
       "custMssEgrQosArbitStatsFwdPktsLo": custMssEgrQosArbitStatsFwdPktsLo,
       "custMssEgrQosArbitStatsFwdPktsHi": custMssEgrQosArbitStatsFwdPktsHi,
       "custMssEgrQosArbitStatsFwdOcts": custMssEgrQosArbitStatsFwdOcts,
       "custMssEgrQosArbitStatsFwdOctsLo": custMssEgrQosArbitStatsFwdOctsLo,
       "custMssEgrQosArbitStatsFwdOctsHi": custMssEgrQosArbitStatsFwdOctsHi,
       "custIngQosPortIdArbitStatsTable": custIngQosPortIdArbitStatsTable,
       "custIngQosPortIdArbitStatsEntry": custIngQosPortIdArbitStatsEntry,
       "custIngQosPortIdArbitName": custIngQosPortIdArbitName,
       "custIngQosPortIdArbitFwdPkts": custIngQosPortIdArbitFwdPkts,
       "custIngQosPortIdArbitFwdPktsLo": custIngQosPortIdArbitFwdPktsLo,
       "custIngQosPortIdArbitFwdPktsHi": custIngQosPortIdArbitFwdPktsHi,
       "custIngQosPortIdArbitFwdOcts": custIngQosPortIdArbitFwdOcts,
       "custIngQosPortIdArbitFwdOctsLo": custIngQosPortIdArbitFwdOctsLo,
       "custIngQosPortIdArbitFwdOctsHi": custIngQosPortIdArbitFwdOctsHi,
       "custEgrQosPortIdArbitStatsTable": custEgrQosPortIdArbitStatsTable,
       "custEgrQosPortIdArbitStatsEntry": custEgrQosPortIdArbitStatsEntry,
       "custEgrQosPortIdArbitName": custEgrQosPortIdArbitName,
       "custEgrQosPortIdArbitFwdPkts": custEgrQosPortIdArbitFwdPkts,
       "custEgrQosPortIdArbitFwdPktsLo": custEgrQosPortIdArbitFwdPktsLo,
       "custEgrQosPortIdArbitFwdPktsHi": custEgrQosPortIdArbitFwdPktsHi,
       "custEgrQosPortIdArbitFwdOcts": custEgrQosPortIdArbitFwdOcts,
       "custEgrQosPortIdArbitFwdOctsLo": custEgrQosPortIdArbitFwdOctsLo,
       "custEgrQosPortIdArbitFwdOctsHi": custEgrQosPortIdArbitFwdOctsHi,
       "tmnxSvcObjs": tmnxSvcObjs,
       "svcNumEntries": svcNumEntries,
       "svcBaseInfoTable": svcBaseInfoTable,
       "svcBaseInfoEntry": svcBaseInfoEntry,
       "svcId": svcId,
       "svcRowStatus": svcRowStatus,
       "svcType": svcType,
       "svcCustId": svcCustId,
       "svcIpRouting": svcIpRouting,
       "svcDescription": svcDescription,
       "svcMtu": svcMtu,
       "svcAdminStatus": svcAdminStatus,
       "svcOperStatus": svcOperStatus,
       "svcNumSaps": svcNumSaps,
       "svcNumSdps": svcNumSdps,
       "svcLastMgmtChange": svcLastMgmtChange,
       "svcDefMeshVcId": svcDefMeshVcId,
       "svcVpnId": svcVpnId,
       "svcVRouterId": svcVRouterId,
       "svcAutoBind": svcAutoBind,
       "svcLastStatusChange": svcLastStatusChange,
       "svcVllType": svcVllType,
       "svcMgmtVpls": svcMgmtVpls,
       "svcRadiusDiscovery": svcRadiusDiscovery,
       "svcRadiusUserNameType": svcRadiusUserNameType,
       "svcRadiusUserName": svcRadiusUserName,
       "svcVcSwitching": svcVcSwitching,
       "svcRadiusPEDiscPolicy": svcRadiusPEDiscPolicy,
       "svcRadiusDiscoveryShutdown": svcRadiusDiscoveryShutdown,
       "svcVplsType": svcVplsType,
       "svcNumMcStandbySaps": svcNumMcStandbySaps,
       "svcName": svcName,
       "svcInterASMvpn": svcInterASMvpn,
       "svcHashLabel": svcHashLabel,
       "svcTmplUsed": svcTmplUsed,
       "svcCtrlSvcId": svcCtrlSvcId,
       "svcCreationOrigin": svcCreationOrigin,
       "svcNumMHStandbySaps": svcNumMHStandbySaps,
       "svcVsdDomainName": svcVsdDomainName,
       "svcIsTestSvc": svcIsTestSvc,
       "svcTlsModeEtree": svcTlsModeEtree,
       "svcNumEvpnMHStandbySaps": svcNumEvpnMHStandbySaps,
       "svcLogServicesAllEvents": svcLogServicesAllEvents,
       "svcTlsInfoTable": svcTlsInfoTable,
       "svcTlsInfoEntry": svcTlsInfoEntry,
       "svcTlsMacLearning": svcTlsMacLearning,
       "svcTlsDiscardUnknownDest": svcTlsDiscardUnknownDest,
       "svcTlsFdbTableSize": svcTlsFdbTableSize,
       "svcTlsFdbNumEntries": svcTlsFdbNumEntries,
       "svcTlsFdbNumStaticEntries": svcTlsFdbNumStaticEntries,
       "svcTlsFdbLocalAgeTime": svcTlsFdbLocalAgeTime,
       "svcTlsFdbRemoteAgeTime": svcTlsFdbRemoteAgeTime,
       "svcTlsStpAdminStatus": svcTlsStpAdminStatus,
       "svcTlsStpPriority": svcTlsStpPriority,
       "svcTlsStpBridgeAddress": svcTlsStpBridgeAddress,
       "svcTlsStpTimeSinceTopologyChange": svcTlsStpTimeSinceTopologyChange,
       "svcTlsStpTopologyChanges": svcTlsStpTopologyChanges,
       "svcTlsStpDesignatedRoot": svcTlsStpDesignatedRoot,
       "svcTlsStpRootCost": svcTlsStpRootCost,
       "svcTlsStpRootPort": svcTlsStpRootPort,
       "svcTlsStpMaxAge": svcTlsStpMaxAge,
       "svcTlsStpHelloTime": svcTlsStpHelloTime,
       "svcTlsStpHoldTime": svcTlsStpHoldTime,
       "svcTlsStpForwardDelay": svcTlsStpForwardDelay,
       "svcTlsStpBridgeMaxAge": svcTlsStpBridgeMaxAge,
       "svcTlsStpBridgeHelloTime": svcTlsStpBridgeHelloTime,
       "svcTlsStpBridgeForwardDelay": svcTlsStpBridgeForwardDelay,
       "svcTlsStpOperStatus": svcTlsStpOperStatus,
       "svcTlsStpVirtualRootBridgeStatus": svcTlsStpVirtualRootBridgeStatus,
       "svcTlsMacAgeing": svcTlsMacAgeing,
       "svcTlsStpTopologyChangeActive": svcTlsStpTopologyChangeActive,
       "svcTlsFdbTableFullHighWatermark": svcTlsFdbTableFullHighWatermark,
       "svcTlsFdbTableFullLowWatermark": svcTlsFdbTableFullLowWatermark,
       "svcTlsVpnId": svcTlsVpnId,
       "svcTlsCustId": svcTlsCustId,
       "svcTlsStpVersion": svcTlsStpVersion,
       "svcTlsStpHoldCount": svcTlsStpHoldCount,
       "svcTlsStpPrimaryBridge": svcTlsStpPrimaryBridge,
       "svcTlsStpBridgeInstanceId": svcTlsStpBridgeInstanceId,
       "svcTlsStpVcpOperProtocol": svcTlsStpVcpOperProtocol,
       "svcTlsMacMoveMaxRate": svcTlsMacMoveMaxRate,
       "svcTlsMacMoveRetryTimeout": svcTlsMacMoveRetryTimeout,
       "svcTlsMacMoveAdminStatus": svcTlsMacMoveAdminStatus,
       "svcTlsMacRelearnOnly": svcTlsMacRelearnOnly,
       "svcTlsMfibTableSize": svcTlsMfibTableSize,
       "svcTlsMfibTableFullHighWatermark": svcTlsMfibTableFullHighWatermark,
       "svcTlsMfibTableFullLowWatermark": svcTlsMfibTableFullLowWatermark,
       "svcTlsMacFlushOnFail": svcTlsMacFlushOnFail,
       "svcTlsStpRegionName": svcTlsStpRegionName,
       "svcTlsStpRegionRevision": svcTlsStpRegionRevision,
       "svcTlsStpBridgeMaxHops": svcTlsStpBridgeMaxHops,
       "svcTlsStpCistRegionalRoot": svcTlsStpCistRegionalRoot,
       "svcTlsStpCistIntRootCost": svcTlsStpCistIntRootCost,
       "svcTlsStpCistRemainingHopCount": svcTlsStpCistRemainingHopCount,
       "svcTlsStpCistRegionalRootPort": svcTlsStpCistRegionalRootPort,
       "svcTlsFdbNumLearnedEntries": svcTlsFdbNumLearnedEntries,
       "svcTlsFdbNumOamEntries": svcTlsFdbNumOamEntries,
       "svcTlsFdbNumDhcpEntries": svcTlsFdbNumDhcpEntries,
       "svcTlsFdbNumHostEntries": svcTlsFdbNumHostEntries,
       "svcTlsShcvAction": svcTlsShcvAction,
       "svcTlsShcvSrcIp": svcTlsShcvSrcIp,
       "svcTlsShcvSrcMac": svcTlsShcvSrcMac,
       "svcTlsShcvInterval": svcTlsShcvInterval,
       "svcTlsPriPortsCumulativeFactor": svcTlsPriPortsCumulativeFactor,
       "svcTlsSecPortsCumulativeFactor": svcTlsSecPortsCumulativeFactor,
       "svcTlsL2ptTermEnabled": svcTlsL2ptTermEnabled,
       "svcTlsPropagateMacFlush": svcTlsPropagateMacFlush,
       "svcTlsMrpAdminStatus": svcTlsMrpAdminStatus,
       "svcTlsMrpMaxAttributes": svcTlsMrpMaxAttributes,
       "svcTlsMrpAttributeCount": svcTlsMrpAttributeCount,
       "svcTlsMrpFailedRegisterCount": svcTlsMrpFailedRegisterCount,
       "svcTlsMcPathMgmtPlcyName": svcTlsMcPathMgmtPlcyName,
       "svcTlsMrpFloodTime": svcTlsMrpFloodTime,
       "svcTlsMrpAttrTblHighWatermark": svcTlsMrpAttrTblHighWatermark,
       "svcTlsMrpAttrTblLowWatermark": svcTlsMrpAttrTblLowWatermark,
       "svcTlsMacMoveNumRetries": svcTlsMacMoveNumRetries,
       "svcTlsMacSubNetLen": svcTlsMacSubNetLen,
       "svcTlsSendFlushOnBVplsFail": svcTlsSendFlushOnBVplsFail,
       "svcTlsPropMacFlushFromBVpls": svcTlsPropMacFlushFromBVpls,
       "svcTlsMacNotifInterval": svcTlsMacNotifInterval,
       "svcTlsMacNotifCount": svcTlsMacNotifCount,
       "svcTlsMacNotifAdminState": svcTlsMacNotifAdminState,
       "svcTlsPerSvcHashing": svcTlsPerSvcHashing,
       "svcTlsAllowIpIfBinding": svcTlsAllowIpIfBinding,
       "svcTlsShcvRetryTimeout": svcTlsShcvRetryTimeout,
       "svcTlsShcvRetryCount": svcTlsShcvRetryCount,
       "svcTlsTempFloodTime": svcTlsTempFloodTime,
       "svcTlsTempFloodActive": svcTlsTempFloodActive,
       "svcTlsTempFloodChangeCount": svcTlsTempFloodChangeCount,
       "svcTlsShcvPolicyIpv4": svcTlsShcvPolicyIpv4,
       "svcTlsMcastIpv6SnpgScope": svcTlsMcastIpv6SnpgScope,
       "svcTlsSelLearnedFdb": svcTlsSelLearnedFdb,
       "svcTlsFdbNumEntriesInUse": svcTlsFdbNumEntriesInUse,
       "svcTlsInfoLastMgmtChange": svcTlsInfoLastMgmtChange,
       "svcTlsRvplsIpIfSvcId": svcTlsRvplsIpIfSvcId,
       "svcTlsRvplsIpIfIndex": svcTlsRvplsIpIfIndex,
       "tlsFdbInfoTable": tlsFdbInfoTable,
       "tlsFdbInfoEntry": tlsFdbInfoEntry,
       "tlsFdbMacAddr": tlsFdbMacAddr,
       "tlsFdbRowStatus": tlsFdbRowStatus,
       "tlsFdbType": tlsFdbType,
       "tlsFdbLocale": tlsFdbLocale,
       "tlsFdbPortId": tlsFdbPortId,
       "tlsFdbEncapValue": tlsFdbEncapValue,
       "tlsFdbSdpId": tlsFdbSdpId,
       "tlsFdbVcId": tlsFdbVcId,
       "tlsFdbVpnId": tlsFdbVpnId,
       "tlsFdbCustId": tlsFdbCustId,
       "tlsFdbLastStateChange": tlsFdbLastStateChange,
       "tlsFdbProtected": tlsFdbProtected,
       "tlsFdbBackboneDstMac": tlsFdbBackboneDstMac,
       "tlsFdbNumIVplsMac": tlsFdbNumIVplsMac,
       "tlsFdbEndPointName": tlsFdbEndPointName,
       "tlsFdbEPMacOperSdpId": tlsFdbEPMacOperSdpId,
       "tlsFdbEPMacOperVcId": tlsFdbEPMacOperVcId,
       "tlsFdbPbbNumEpipes": tlsFdbPbbNumEpipes,
       "tlsFdbVTEPAddrType": tlsFdbVTEPAddrType,
       "tlsFdbVTEPAddr": tlsFdbVTEPAddr,
       "tlsFdbVNI": tlsFdbVNI,
       "tlsFdbEvpnMplsTEPAddrType": tlsFdbEvpnMplsTEPAddrType,
       "tlsFdbEvpnMplsTEPAddr": tlsFdbEvpnMplsTEPAddr,
       "tlsFdbEvpnMplsLabel": tlsFdbEvpnMplsLabel,
       "tlsFdbEvpnMplsEthSegId": tlsFdbEvpnMplsEthSegId,
       "tlsFdbIsEvpnEtreeLeaf": tlsFdbIsEvpnEtreeLeaf,
       "tlsFdbCmplxMap": tlsFdbCmplxMap,
       "tlsFdbVxlanInstance": tlsFdbVxlanInstance,
       "tlsFdbEvpnMplsTnlId": tlsFdbEvpnMplsTnlId,
       "tlsFdbEvpnMplsTnlResType": tlsFdbEvpnMplsTnlResType,
       "tlsFdbEvpnMplsInstance": tlsFdbEvpnMplsInstance,
       "iesIfTable": iesIfTable,
       "iesIfEntry": iesIfEntry,
       "iesIfIndex": iesIfIndex,
       "iesIfRowStatus": iesIfRowStatus,
       "iesIfName": iesIfName,
       "iesIfDescription": iesIfDescription,
       "iesIfAdminStatus": iesIfAdminStatus,
       "iesIfOperStatus": iesIfOperStatus,
       "iesIfLastMgmtChange": iesIfLastMgmtChange,
       "iesIfVpnId": iesIfVpnId,
       "iesIfCustId": iesIfCustId,
       "iesIfLoopback": iesIfLoopback,
       "iesIfLastStatusChange": iesIfLastStatusChange,
       "iesIfType": iesIfType,
       "iesIfParentIf": iesIfParentIf,
       "iesIfShcvSource": iesIfShcvSource,
       "iesIfShcvAction": iesIfShcvAction,
       "iesIfShcvInterval": iesIfShcvInterval,
       "iesIfFwdServId": iesIfFwdServId,
       "iesIfFwdSubIf": iesIfFwdSubIf,
       "iesIfPrivateRetailSubnets": iesIfPrivateRetailSubnets,
       "iesIfDelegatedPrefixLen": iesIfDelegatedPrefixLen,
       "iesIfLns": iesIfLns,
       "iesIfVplsName": iesIfVplsName,
       "iesIfVplsStatus": iesIfVplsStatus,
       "iesIfVplsFailedReason": iesIfVplsFailedReason,
       "iesIfShcvRetryTimeout": iesIfShcvRetryTimeout,
       "iesIfShcvRetryCount": iesIfShcvRetryCount,
       "iesIfSapEgressQosId": iesIfSapEgressQosId,
       "iesIfDefaultPrimaryDnsIPv4Addr": iesIfDefaultPrimaryDnsIPv4Addr,
       "iesIfDefaultSecondaryDnsIPv4Addr": iesIfDefaultSecondaryDnsIPv4Addr,
       "iesIfDefaultPrimaryDnsIPv6Addr": iesIfDefaultPrimaryDnsIPv6Addr,
       "iesIfDefaultSecondaryDnsIPv6Addr": iesIfDefaultSecondaryDnsIPv6Addr,
       "iesIfIPv6ConfigAllowed": iesIfIPv6ConfigAllowed,
       "iesIfSrrpRoutingEnabled": iesIfSrrpRoutingEnabled,
       "iesIfSrrpRoutingHoldTime": iesIfSrrpRoutingHoldTime,
       "iesIfMonitorOperGrp": iesIfMonitorOperGrp,
       "iesIfAllowUnmatchingSubnets": iesIfAllowUnmatchingSubnets,
       "iesIfGroupInterfaceType": iesIfGroupInterfaceType,
       "iesIfShcvFamily": iesIfShcvFamily,
       "iesIfIPv6IpoeBridgedModeEnabled": iesIfIPv6IpoeBridgedModeEnabled,
       "iesIfIPv6AllowUnmatchingPfxs": iesIfIPv6AllowUnmatchingPfxs,
       "iesIfMcastNetDomainEgrIfCon": iesIfMcastNetDomainEgrIfCon,
       "iesIfIPv6AllowMultiWanAddr": iesIfIPv6AllowMultiWanAddr,
       "iesIfIPv6Dhcp6OverrideSlaac": iesIfIPv6Dhcp6OverrideSlaac,
       "iesIfCreationOrigin": iesIfCreationOrigin,
       "iesIfIPv6Dhcp6PDManagedRoute": iesIfIPv6Dhcp6PDManagedRoute,
       "iesIfVplsEvpnTunnel": iesIfVplsEvpnTunnel,
       "iesIfExportHostRoutes": iesIfExportHostRoutes,
       "iesIfSuppressAaSub": iesIfSuppressAaSub,
       "iesIfShcvPolicy": iesIfShcvPolicy,
       "iesIfShcvPolicyIpv4": iesIfShcvPolicyIpv4,
       "iesIfShcvPolicyIpv6": iesIfShcvPolicyIpv6,
       "iesIfIpv6Dhcp6UserIdent": iesIfIpv6Dhcp6UserIdent,
       "iesIfIPv6Dhcp6PDManagedRouteNH": iesIfIPv6Dhcp6PDManagedRouteNH,
       "iesIfIPv6WanMode": iesIfIPv6WanMode,
       "iesIfVplsEvpnTnlIp6GwAddrType": iesIfVplsEvpnTnlIp6GwAddrType,
       "iesIfVplsEvpnTnlSupBcastDomain": iesIfVplsEvpnTnlSupBcastDomain,
       "tlsShgInfoTable": tlsShgInfoTable,
       "tlsShgInfoEntry": tlsShgInfoEntry,
       "tlsShgName": tlsShgName,
       "tlsShgRowStatus": tlsShgRowStatus,
       "tlsShgCustId": tlsShgCustId,
       "tlsShgInstanceId": tlsShgInstanceId,
       "tlsShgDescription": tlsShgDescription,
       "tlsShgLastMgmtChange": tlsShgLastMgmtChange,
       "tlsShgResidential": tlsShgResidential,
       "tlsShgRestProtSrcMac": tlsShgRestProtSrcMac,
       "tlsShgRestUnprotDstMac": tlsShgRestUnprotDstMac,
       "tlsShgRestProtSrcMacAction": tlsShgRestProtSrcMacAction,
       "tlsShgCreationOrigin": tlsShgCreationOrigin,
       "tlsShgSiteName": tlsShgSiteName,
       "tlsShgAutoLearnMacProtect": tlsShgAutoLearnMacProtect,
       "tlsShgAutoLearnMacProtectExcList": tlsShgAutoLearnMacProtectExcList,
       "svcApipeInfoTable": svcApipeInfoTable,
       "svcApipeInfoEntry": svcApipeInfoEntry,
       "svcApipeInterworking": svcApipeInterworking,
       "svcApipeSignaledVllTypeOverride": svcApipeSignaledVllTypeOverride,
       "tlsMFibInfoTable": tlsMFibInfoTable,
       "tlsMFibInfoEntry": tlsMFibInfoEntry,
       "tlsMFibInfoGrpAddr": tlsMFibInfoGrpAddr,
       "tlsMFibInfoSrcAddr": tlsMFibInfoSrcAddr,
       "tlsMFibInfoLocale": tlsMFibInfoLocale,
       "tlsMFibInfoPortId": tlsMFibInfoPortId,
       "tlsMFibInfoEncapValue": tlsMFibInfoEncapValue,
       "tlsMFibInfoSdpId": tlsMFibInfoSdpId,
       "tlsMFibInfoVcId": tlsMFibInfoVcId,
       "tlsMFibInfoFwdOrBlk": tlsMFibInfoFwdOrBlk,
       "tlsMFibInfoSvcId": tlsMFibInfoSvcId,
       "tlsMFibGrpSrcStatsTable": tlsMFibGrpSrcStatsTable,
       "tlsMFibGrpSrcStatsEntry": tlsMFibGrpSrcStatsEntry,
       "tlsMFibGrpSrcStatsGrpAddr": tlsMFibGrpSrcStatsGrpAddr,
       "tlsMFibGrpSrcStatsSrcAddr": tlsMFibGrpSrcStatsSrcAddr,
       "tlsMFibGrpSrcStatsForwardedPkts": tlsMFibGrpSrcStatsForwardedPkts,
       "tlsMFibGrpSrcStatsForwardedOctets": tlsMFibGrpSrcStatsForwardedOctets,
       "tlsRdntGrpTable": tlsRdntGrpTable,
       "tlsRdntGrpEntry": tlsRdntGrpEntry,
       "tlsRdntGrpName": tlsRdntGrpName,
       "tlsRdntGrpRowStatus": tlsRdntGrpRowStatus,
       "tlsRdntGrpDescription": tlsRdntGrpDescription,
       "tlsRdntGrpLastMgmtChange": tlsRdntGrpLastMgmtChange,
       "tlsRdntGrpMemberTable": tlsRdntGrpMemberTable,
       "tlsRdntGrpMemberEntry": tlsRdntGrpMemberEntry,
       "tlsRdntGrpMemberRemoteNodeAddrTp": tlsRdntGrpMemberRemoteNodeAddrTp,
       "tlsRdntGrpMemberRemoteNodeAddr": tlsRdntGrpMemberRemoteNodeAddr,
       "tlsRdntGrpMemberIsSap": tlsRdntGrpMemberIsSap,
       "tlsRdntGrpMemberPort": tlsRdntGrpMemberPort,
       "tlsRdntGrpMemberEncap": tlsRdntGrpMemberEncap,
       "tlsRdntGrpMemberRowStatus": tlsRdntGrpMemberRowStatus,
       "tlsRdntGrpMemberLastMgmtChange": tlsRdntGrpMemberLastMgmtChange,
       "tlsMstiTable": tlsMstiTable,
       "tlsMstiEntry": tlsMstiEntry,
       "tlsMstiInstanceId": tlsMstiInstanceId,
       "tlsMstiRowStatus": tlsMstiRowStatus,
       "tlsMstiPriority": tlsMstiPriority,
       "tlsMstiLastMgmtChange": tlsMstiLastMgmtChange,
       "tlsMstiRegionalRoot": tlsMstiRegionalRoot,
       "tlsMstiIntRootCost": tlsMstiIntRootCost,
       "tlsMstiRemainingHopCount": tlsMstiRemainingHopCount,
       "tlsMstiRegionalRootPort": tlsMstiRegionalRootPort,
       "tlsMstiManagedVlanListTable": tlsMstiManagedVlanListTable,
       "tlsMstiManagedVlanListEntry": tlsMstiManagedVlanListEntry,
       "tlsMstiMvplsMinVlanTag": tlsMstiMvplsMinVlanTag,
       "tlsMstiMvplsMaxVlanTag": tlsMstiMvplsMaxVlanTag,
       "tlsMstiMvplsRowStatus": tlsMstiMvplsRowStatus,
       "tlsEgressMulticastGroupTable": tlsEgressMulticastGroupTable,
       "tlsEgressMulticastGroupEntry": tlsEgressMulticastGroupEntry,
       "tlsEgrMcGrpName": tlsEgrMcGrpName,
       "tlsEgrMcGrpRowStatus": tlsEgrMcGrpRowStatus,
       "tlsEgrMcGrpLastMgmtChange": tlsEgrMcGrpLastMgmtChange,
       "tlsEgrMcGrpDescription": tlsEgrMcGrpDescription,
       "tlsEgrMcGrpChainLimit": tlsEgrMcGrpChainLimit,
       "tlsEgrMcGrpEncapType": tlsEgrMcGrpEncapType,
       "tlsEgrMcGrpDot1qEtherType": tlsEgrMcGrpDot1qEtherType,
       "tlsEgrMcGrpMacFilterId": tlsEgrMcGrpMacFilterId,
       "tlsEgrMcGrpIpFilterId": tlsEgrMcGrpIpFilterId,
       "tlsEgrMcGrpIpv6FilterId": tlsEgrMcGrpIpv6FilterId,
       "tlsEgrMcGrpQinqEtherType": tlsEgrMcGrpQinqEtherType,
       "tlsEgrMcGrpQinqFixedTagPosition": tlsEgrMcGrpQinqFixedTagPosition,
       "tlsEgrMcGrpAdminQinqFixedTagVal": tlsEgrMcGrpAdminQinqFixedTagVal,
       "tlsEgrMcGrpOperQinqFixedTagVal": tlsEgrMcGrpOperQinqFixedTagVal,
       "svcDhcpLeaseStateTable": svcDhcpLeaseStateTable,
       "svcDhcpLeaseStateEntry": svcDhcpLeaseStateEntry,
       "svcDhcpLseStateCiAddrType": svcDhcpLseStateCiAddrType,
       "svcDhcpLseStateCiAddr": svcDhcpLseStateCiAddr,
       "svcDhcpLseStateLocale": svcDhcpLseStateLocale,
       "svcDhcpLseStatePortId": svcDhcpLseStatePortId,
       "svcDhcpLseStateEncapValue": svcDhcpLseStateEncapValue,
       "svcDhcpLseStateSdpId": svcDhcpLseStateSdpId,
       "svcDhcpLseStateVcId": svcDhcpLseStateVcId,
       "svcDhcpLseStateChAddr": svcDhcpLseStateChAddr,
       "svcDhcpLseStateRemainLseTime": svcDhcpLseStateRemainLseTime,
       "svcDhcpLseStateOption82": svcDhcpLseStateOption82,
       "svcDhcpLseStatePersistKey": svcDhcpLseStatePersistKey,
       "svcDhcpLseStateSubscrIdent": svcDhcpLseStateSubscrIdent,
       "svcDhcpLseStateSubProfString": svcDhcpLseStateSubProfString,
       "svcDhcpLseStateSlaProfString": svcDhcpLseStateSlaProfString,
       "svcDhcpLseStateShcvOperState": svcDhcpLseStateShcvOperState,
       "svcDhcpLseStateShcvChecks": svcDhcpLseStateShcvChecks,
       "svcDhcpLseStateShcvReplies": svcDhcpLseStateShcvReplies,
       "svcDhcpLseStateShcvReplyTime": svcDhcpLseStateShcvReplyTime,
       "svcDhcpLseStateClientId": svcDhcpLseStateClientId,
       "svcDhcpLseStateIAID": svcDhcpLseStateIAID,
       "svcDhcpLseStateIAIDType": svcDhcpLseStateIAIDType,
       "svcDhcpLseStateCiAddrMaskLen": svcDhcpLseStateCiAddrMaskLen,
       "svcDhcpLseStateRetailerSvcId": svcDhcpLseStateRetailerSvcId,
       "svcDhcpLseStateRetailerIf": svcDhcpLseStateRetailerIf,
       "svcDhcpLseStateAncpString": svcDhcpLseStateAncpString,
       "svcDhcpLseStateFramedIpNetMaskTp": svcDhcpLseStateFramedIpNetMaskTp,
       "svcDhcpLseStateFramedIpNetMask": svcDhcpLseStateFramedIpNetMask,
       "svcDhcpLseStateBCastIpAddrType": svcDhcpLseStateBCastIpAddrType,
       "svcDhcpLseStateBCastIpAddr": svcDhcpLseStateBCastIpAddr,
       "svcDhcpLseStateDefaultRouterTp": svcDhcpLseStateDefaultRouterTp,
       "svcDhcpLseStateDefaultRouter": svcDhcpLseStateDefaultRouter,
       "svcDhcpLseStatePrimaryDnsType": svcDhcpLseStatePrimaryDnsType,
       "svcDhcpLseStatePrimaryDns": svcDhcpLseStatePrimaryDns,
       "svcDhcpLseStateSecondaryDnsType": svcDhcpLseStateSecondaryDnsType,
       "svcDhcpLseStateSecondaryDns": svcDhcpLseStateSecondaryDns,
       "svcDhcpLseStateSessionTimeout": svcDhcpLseStateSessionTimeout,
       "svcDhcpLseStateServerLeaseStart": svcDhcpLseStateServerLeaseStart,
       "svcDhcpLseStateServerLastRenew": svcDhcpLseStateServerLastRenew,
       "svcDhcpLseStateServerLeaseEnd": svcDhcpLseStateServerLeaseEnd,
       "svcDhcpLseStateDhcpServerAddrType": svcDhcpLseStateDhcpServerAddrType,
       "svcDhcpLseStateDhcpServerAddr": svcDhcpLseStateDhcpServerAddr,
       "svcDhcpLseStateOriginSubscrId": svcDhcpLseStateOriginSubscrId,
       "svcDhcpLseStateOriginStrings": svcDhcpLseStateOriginStrings,
       "svcDhcpLseStateOriginLeaseInfo": svcDhcpLseStateOriginLeaseInfo,
       "svcDhcpLseStateDhcpClientAddrType": svcDhcpLseStateDhcpClientAddrType,
       "svcDhcpLseStateDhcpClientAddr": svcDhcpLseStateDhcpClientAddr,
       "svcDhcpLseStateLeaseSplitActive": svcDhcpLseStateLeaseSplitActive,
       "svcDhcpLseStateInterDestId": svcDhcpLseStateInterDestId,
       "svcDhcpLseStatePrimaryNbnsType": svcDhcpLseStatePrimaryNbnsType,
       "svcDhcpLseStatePrimaryNbns": svcDhcpLseStatePrimaryNbns,
       "svcDhcpLseStateSecondaryNbnsType": svcDhcpLseStateSecondaryNbnsType,
       "svcDhcpLseStateSecondaryNbns": svcDhcpLseStateSecondaryNbns,
       "svcDhcpLseStateAppProfString": svcDhcpLseStateAppProfString,
       "svcDhcpLseStateNextHopMacAddr": svcDhcpLseStateNextHopMacAddr,
       "svcDhcpLseStateCategoryMapName": svcDhcpLseStateCategoryMapName,
       "svcDhcpLseStateNakNextRenew": svcDhcpLseStateNakNextRenew,
       "svcDhcpLseStateRadiusClassAttr": svcDhcpLseStateRadiusClassAttr,
       "svcDhcpLseStateRadiusUserName": svcDhcpLseStateRadiusUserName,
       "tlsProtectedMacTable": tlsProtectedMacTable,
       "tlsProtectedMacEntry": tlsProtectedMacEntry,
       "tlsProtMacAddress": tlsProtMacAddress,
       "tlsProtMacRowStatus": tlsProtMacRowStatus,
       "tlsProtMacLastMgmtChange": tlsProtMacLastMgmtChange,
       "svcDhcpLeaseStateModifyTable": svcDhcpLeaseStateModifyTable,
       "svcDhcpLeaseStateModifyEntry": svcDhcpLeaseStateModifyEntry,
       "svcDhcpLseStateModifySubIndent": svcDhcpLseStateModifySubIndent,
       "svcDhcpLseStateModifySubProfile": svcDhcpLseStateModifySubProfile,
       "svcDhcpLseStateModifySlaProfile": svcDhcpLseStateModifySlaProfile,
       "svcDhcpLseStateEvaluateState": svcDhcpLseStateEvaluateState,
       "svcDhcpLseStateModInterDestId": svcDhcpLseStateModInterDestId,
       "svcDhcpLseStateModifyAncpString": svcDhcpLseStateModifyAncpString,
       "svcDhcpLseStateModifyAppProfile": svcDhcpLseStateModifyAppProfile,
       "svcEndPointTable": svcEndPointTable,
       "svcEndPointEntry": svcEndPointEntry,
       "svcEndPointName": svcEndPointName,
       "svcEndPointRowStatus": svcEndPointRowStatus,
       "svcEndPointDescription": svcEndPointDescription,
       "svcEndPointRevertTime": svcEndPointRevertTime,
       "svcEndPointTxActiveType": svcEndPointTxActiveType,
       "svcEndPointTxActivePortId": svcEndPointTxActivePortId,
       "svcEndPointTxActiveEncap": svcEndPointTxActiveEncap,
       "svcEndPointTxActiveSdpId": svcEndPointTxActiveSdpId,
       "svcEndPointForceSwitchOver": svcEndPointForceSwitchOver,
       "svcEndPointForceSwitchOverSdpId": svcEndPointForceSwitchOverSdpId,
       "svcEndPointActiveHoldDelay": svcEndPointActiveHoldDelay,
       "svcEndPointIgnoreStandbySig": svcEndPointIgnoreStandbySig,
       "svcEndPointMacPinning": svcEndPointMacPinning,
       "svcEndPointMacLimit": svcEndPointMacLimit,
       "svcEndPointSuppressStandbySig": svcEndPointSuppressStandbySig,
       "svcEndPointRevertTimeCountDn": svcEndPointRevertTimeCountDn,
       "svcEndPointTxActiveChangeCount": svcEndPointTxActiveChangeCount,
       "svcEndPointTxActiveLastChange": svcEndPointTxActiveLastChange,
       "svcEndPointTxActiveUpTime": svcEndPointTxActiveUpTime,
       "svcEndPointMCEPId": svcEndPointMCEPId,
       "svcEndPointMCEPPeerAddrType": svcEndPointMCEPPeerAddrType,
       "svcEndPointMCEPPeerAddr": svcEndPointMCEPPeerAddr,
       "svcEndPointMCEPPeerName": svcEndPointMCEPPeerName,
       "svcEndPointBlockOnMeshFail": svcEndPointBlockOnMeshFail,
       "svcEndPointMCEPPsvModeActive": svcEndPointMCEPPsvModeActive,
       "svcEndPointStandbySigMaster": svcEndPointStandbySigMaster,
       "svcEndPointStandbySigSlave": svcEndPointStandbySigSlave,
       "svcEndPointForceSwitchOvrSdpFec": svcEndPointForceSwitchOvrSdpFec,
       "svcEndPointTxActiveSdpFec": svcEndPointTxActiveSdpFec,
       "svcEndPointRestProtSrcMac": svcEndPointRestProtSrcMac,
       "svcEndPointRestProtSrcMacAction": svcEndPointRestProtSrcMacAction,
       "svcEndPointAutoLearnMacProtect": svcEndPointAutoLearnMacProtect,
       "svcEndPointCreationOrigin": svcEndPointCreationOrigin,
       "svcEPTxActiveBgpEvpnMplsInstId": svcEPTxActiveBgpEvpnMplsInstId,
       "iesGrpIfTable": iesGrpIfTable,
       "iesGrpIfEntry": iesGrpIfEntry,
       "iesGrpIfRedInterface": iesGrpIfRedInterface,
       "iesGrpIfOperUpWhileEmpty": iesGrpIfOperUpWhileEmpty,
       "iesGrpIfPolicyControl": iesGrpIfPolicyControl,
       "iesGrpIfDiameterAuthPolicy": iesGrpIfDiameterAuthPolicy,
       "iesGrpIfIpv6AutoReply": iesGrpIfIpv6AutoReply,
       "iesGrpIfIgnoreDfBit": iesGrpIfIgnoreDfBit,
       "svcPEDiscoveryPolicyTable": svcPEDiscoveryPolicyTable,
       "svcPEDiscoveryPolicyEntry": svcPEDiscoveryPolicyEntry,
       "svcPEDiscoveryPolicyName": svcPEDiscoveryPolicyName,
       "svcPEDiscoveryPolicyRowStatus": svcPEDiscoveryPolicyRowStatus,
       "svcPEDiscoveryPolicyPassword": svcPEDiscoveryPolicyPassword,
       "svcPEDiscoveryPolicyInterval": svcPEDiscoveryPolicyInterval,
       "svcPEDiscoveryPolicyTimeout": svcPEDiscoveryPolicyTimeout,
       "svcPEDiscPolServerTable": svcPEDiscPolServerTable,
       "svcPEDiscPolServerEntry": svcPEDiscPolServerEntry,
       "svcPEDiscPolServerIndex": svcPEDiscPolServerIndex,
       "svcPEDiscPolServerRowStatus": svcPEDiscPolServerRowStatus,
       "svcPEDiscPolServerAddressType": svcPEDiscPolServerAddressType,
       "svcPEDiscPolServerAddress": svcPEDiscPolServerAddress,
       "svcPEDiscPolServerSecret": svcPEDiscPolServerSecret,
       "svcPEDiscPolServerOperStatus": svcPEDiscPolServerOperStatus,
       "svcPEDiscPolServerPort": svcPEDiscPolServerPort,
       "svcWholesalerInfoTable": svcWholesalerInfoTable,
       "svcWholesalerInfoEntry": svcWholesalerInfoEntry,
       "svcWholesalerID": svcWholesalerID,
       "svcWholesalerNumStaticHosts": svcWholesalerNumStaticHosts,
       "svcWholesalerNumDynamicHosts": svcWholesalerNumDynamicHosts,
       "svcWholesalerNumDhcpLeaseStates": svcWholesalerNumDhcpLeaseStates,
       "svcWholesalerNumPppoeSessions": svcWholesalerNumPppoeSessions,
       "svcWholesalerNumArpHosts": svcWholesalerNumArpHosts,
       "svcWholesalerNumDhcp6LeaseStates": svcWholesalerNumDhcp6LeaseStates,
       "svcWholesalerNumSlaacHosts": svcWholesalerNumSlaacHosts,
       "svcWholesalerNumStatic6Hosts": svcWholesalerNumStatic6Hosts,
       "svcWholesalerNumIpoeSessions": svcWholesalerNumIpoeSessions,
       "svcWholesalerNumIpcpHosts": svcWholesalerNumIpcpHosts,
       "svcDhcpLeaseStateActionTable": svcDhcpLeaseStateActionTable,
       "svcDhcpLeaseStateActionEntry": svcDhcpLeaseStateActionEntry,
       "svcDhcpLseStateForceRenew": svcDhcpLseStateForceRenew,
       "svcIfDHCP6MsgStatTable": svcIfDHCP6MsgStatTable,
       "svcIfDHCP6MsgStatEntry": svcIfDHCP6MsgStatEntry,
       "svcIfDHCP6MsgStatsLstClrd": svcIfDHCP6MsgStatsLstClrd,
       "svcIfDHCP6MsgStatsRcvd": svcIfDHCP6MsgStatsRcvd,
       "svcIfDHCP6MsgStatsSent": svcIfDHCP6MsgStatsSent,
       "svcIfDHCP6MsgStatsDropped": svcIfDHCP6MsgStatsDropped,
       "svcTlsBackboneInfoTable": svcTlsBackboneInfoTable,
       "svcTlsBackboneInfoEntry": svcTlsBackboneInfoEntry,
       "svcTlsBackboneSrcMac": svcTlsBackboneSrcMac,
       "svcTlsBackboneVplsSvcId": svcTlsBackboneVplsSvcId,
       "svcTlsBackboneVplsSvcISID": svcTlsBackboneVplsSvcISID,
       "svcTlsBackboneOperSrcMac": svcTlsBackboneOperSrcMac,
       "svcTlsBackboneOperVplsSvcISID": svcTlsBackboneOperVplsSvcISID,
       "svcTlsBackboneLDPMacFlush": svcTlsBackboneLDPMacFlush,
       "svcTlsBackboneVplsStp": svcTlsBackboneVplsStp,
       "svcTlsBackboneLDPMacFlushNotMine": svcTlsBackboneLDPMacFlushNotMine,
       "svcTlsBackboneUseSapBMac": svcTlsBackboneUseSapBMac,
       "svcTlsBackboneForceQTagFwd": svcTlsBackboneForceQTagFwd,
       "svcTlsBackboneUseEsBMac": svcTlsBackboneUseEsBMac,
       "svcTlsBackboneEvpnFlush": svcTlsBackboneEvpnFlush,
       "tlsMFibTable": tlsMFibTable,
       "tlsMFibEntry": tlsMFibEntry,
       "tlsMFibEntryType": tlsMFibEntryType,
       "tlsMFibGrpMacAddr": tlsMFibGrpMacAddr,
       "tlsMFibGrpInetAddrType": tlsMFibGrpInetAddrType,
       "tlsMFibGrpInetAddr": tlsMFibGrpInetAddr,
       "tlsMFibSrcInetAddrType": tlsMFibSrcInetAddrType,
       "tlsMFibSrcInetAddr": tlsMFibSrcInetAddr,
       "tlsMFibLocale": tlsMFibLocale,
       "tlsMFibPortId": tlsMFibPortId,
       "tlsMFibEncapValue": tlsMFibEncapValue,
       "tlsMFibSdpId": tlsMFibSdpId,
       "tlsMFibVcId": tlsMFibVcId,
       "tlsMFibFwdOrBlk": tlsMFibFwdOrBlk,
       "tlsMFibSvcId": tlsMFibSvcId,
       "tlsMFibStatsTable": tlsMFibStatsTable,
       "tlsMFibStatsEntry": tlsMFibStatsEntry,
       "tlsMFibStatsEntryType": tlsMFibStatsEntryType,
       "tlsMFibStatsGrpMacAddr": tlsMFibStatsGrpMacAddr,
       "tlsMFibStatsGrpInetAddrType": tlsMFibStatsGrpInetAddrType,
       "tlsMFibStatsGrpInetAddr": tlsMFibStatsGrpInetAddr,
       "tlsMFibStatsSrcInetAddrType": tlsMFibStatsSrcInetAddrType,
       "tlsMFibStatsSrcInetAddr": tlsMFibStatsSrcInetAddr,
       "tlsMFibStatsForwardedPkts": tlsMFibStatsForwardedPkts,
       "tlsMFibStatsForwardedOctets": tlsMFibStatsForwardedOctets,
       "svcTlsBgpADTableLastChanged": svcTlsBgpADTableLastChanged,
       "svcTlsBgpADTable": svcTlsBgpADTable,
       "svcTlsBgpADEntry": svcTlsBgpADEntry,
       "svcTlsBgpADRowStatus": svcTlsBgpADRowStatus,
       "svcTlsBgpADLastChanged": svcTlsBgpADLastChanged,
       "svcTlsBgpADVplsId": svcTlsBgpADVplsId,
       "svcTlsBgpADVsiPrefix": svcTlsBgpADVsiPrefix,
       "svcTlsBgpADVsiRD": svcTlsBgpADVsiRD,
       "svcTlsBgpADExportRteTarget": svcTlsBgpADExportRteTarget,
       "svcTlsBgpADVsiExportPolicy1": svcTlsBgpADVsiExportPolicy1,
       "svcTlsBgpADVsiExportPolicy2": svcTlsBgpADVsiExportPolicy2,
       "svcTlsBgpADVsiExportPolicy3": svcTlsBgpADVsiExportPolicy3,
       "svcTlsBgpADVsiExportPolicy4": svcTlsBgpADVsiExportPolicy4,
       "svcTlsBgpADVsiExportPolicy5": svcTlsBgpADVsiExportPolicy5,
       "svcTlsBgpADImportRteTarget": svcTlsBgpADImportRteTarget,
       "svcTlsBgpADVsiImportPolicy1": svcTlsBgpADVsiImportPolicy1,
       "svcTlsBgpADVsiImportPolicy2": svcTlsBgpADVsiImportPolicy2,
       "svcTlsBgpADVsiImportPolicy3": svcTlsBgpADVsiImportPolicy3,
       "svcTlsBgpADVsiImportPolicy4": svcTlsBgpADVsiImportPolicy4,
       "svcTlsBgpADVsiImportPolicy5": svcTlsBgpADVsiImportPolicy5,
       "svcTlsBgpADAdminStatus": svcTlsBgpADAdminStatus,
       "svcTlsBgpADCreationOrigin": svcTlsBgpADCreationOrigin,
       "svcEpipePbbTableLastChanged": svcEpipePbbTableLastChanged,
       "svcEpipePbbTable": svcEpipePbbTable,
       "svcEpipePbbEntry": svcEpipePbbEntry,
       "svcEpipePbbRowStatus": svcEpipePbbRowStatus,
       "svcEpipePbbLastChngd": svcEpipePbbLastChngd,
       "svcEpipePbbBvplsSvcId": svcEpipePbbBvplsSvcId,
       "svcEpipePbbBvplsDstMac": svcEpipePbbBvplsDstMac,
       "svcEpipePbbSvcISID": svcEpipePbbSvcISID,
       "svcEpipePbbOperState": svcEpipePbbOperState,
       "svcEpipePbbFlooding": svcEpipePbbFlooding,
       "svcEpipePbbLastStatusChange": svcEpipePbbLastStatusChange,
       "svcEpipePbbBvplsOperDstMac": svcEpipePbbBvplsOperDstMac,
       "svcEpipePbbBvplsDstMacName": svcEpipePbbBvplsDstMacName,
       "tlsPipInfoTable": tlsPipInfoTable,
       "tlsPipInfoEntry": tlsPipInfoEntry,
       "tlsPipStpPortState": tlsPipStpPortState,
       "tlsPipStpPortRole": tlsPipStpPortRole,
       "tlsPipStpDesignatedBridge": tlsPipStpDesignatedBridge,
       "tlsPipStpDesignatedPort": tlsPipStpDesignatedPort,
       "tlsPipStpException": tlsPipStpException,
       "tlsPipStpForwardTransitions": tlsPipStpForwardTransitions,
       "tlsPipStpInConfigBpdus": tlsPipStpInConfigBpdus,
       "tlsPipStpInTcnBpdus": tlsPipStpInTcnBpdus,
       "tlsPipStpInRstBpdus": tlsPipStpInRstBpdus,
       "tlsPipStpInMstBpdus": tlsPipStpInMstBpdus,
       "tlsPipStpInBadBpdus": tlsPipStpInBadBpdus,
       "tlsPipStpOutConfigBpdus": tlsPipStpOutConfigBpdus,
       "tlsPipStpOutTcnBpdus": tlsPipStpOutTcnBpdus,
       "tlsPipStpOutRstBpdus": tlsPipStpOutRstBpdus,
       "tlsPipStpOutMstBpdus": tlsPipStpOutMstBpdus,
       "tlsPipStpOperStatus": tlsPipStpOperStatus,
       "tlsPipStpMvplsPruneState": tlsPipStpMvplsPruneState,
       "tlsPipStpOperProtocol": tlsPipStpOperProtocol,
       "tlsPipStpPortNum": tlsPipStpPortNum,
       "tlsPipStpInsideRegion": tlsPipStpInsideRegion,
       "tlsPipInTcBitBpdus": tlsPipInTcBitBpdus,
       "tlsPipOutTcBitBpdus": tlsPipOutTcBitBpdus,
       "tlsPipMstiTable": tlsPipMstiTable,
       "tlsPipMstiEntry": tlsPipMstiEntry,
       "tlsPipMstiPortRole": tlsPipMstiPortRole,
       "tlsPipMstiPortState": tlsPipMstiPortState,
       "tlsPipMstiDesignatedBridge": tlsPipMstiDesignatedBridge,
       "tlsPipMstiDesignatedPort": tlsPipMstiDesignatedPort,
       "svcTotalFdbMimDestIdxEntries": svcTotalFdbMimDestIdxEntries,
       "svcDhcpManagedRouteTable": svcDhcpManagedRouteTable,
       "svcDhcpManagedRouteEntry": svcDhcpManagedRouteEntry,
       "svcDhcpManagedRouteInetAddrType": svcDhcpManagedRouteInetAddrType,
       "svcDhcpManagedRouteInetAddr": svcDhcpManagedRouteInetAddr,
       "svcDhcpManagedRoutePrefixLen": svcDhcpManagedRoutePrefixLen,
       "svcDhcpManagedRouteStatus": svcDhcpManagedRouteStatus,
       "svcDhcpManagedRouteMetric": svcDhcpManagedRouteMetric,
       "svcDhcpManagedRoutePreference": svcDhcpManagedRoutePreference,
       "svcDhcpManagedRouteTag": svcDhcpManagedRouteTag,
       "svcArpHostTableLastChanged": svcArpHostTableLastChanged,
       "svcArpHostTable": svcArpHostTable,
       "svcArpHostEntry": svcArpHostEntry,
       "svcArpHostIpAddrType": svcArpHostIpAddrType,
       "svcArpHostIpAddr": svcArpHostIpAddr,
       "svcArpHostLocale": svcArpHostLocale,
       "svcArpHostSapPortId": svcArpHostSapPortId,
       "svcArpHostSapEncapValue": svcArpHostSapEncapValue,
       "svcArpHostSdpId": svcArpHostSdpId,
       "svcArpHostVcId": svcArpHostVcId,
       "svcArpHostSessionTimeout": svcArpHostSessionTimeout,
       "svcArpHostStart": svcArpHostStart,
       "svcArpHostLastAuth": svcArpHostLastAuth,
       "svcArpHostRefresh": svcArpHostRefresh,
       "svcArpHostRemainingTime": svcArpHostRemainingTime,
       "svcArpHostShcvOperState": svcArpHostShcvOperState,
       "svcArpHostShcvChecks": svcArpHostShcvChecks,
       "svcArpHostShcvReplies": svcArpHostShcvReplies,
       "svcArpHostShcvReplyTime": svcArpHostShcvReplyTime,
       "svcArpHostSubscrIdent": svcArpHostSubscrIdent,
       "svcArpHostSubProfString": svcArpHostSubProfString,
       "svcArpHostSlaProfString": svcArpHostSlaProfString,
       "svcArpHostAppProfString": svcArpHostAppProfString,
       "svcArpHostAncpString": svcArpHostAncpString,
       "svcArpHostInterDestId": svcArpHostInterDestId,
       "svcArpHostRetailerSvcId": svcArpHostRetailerSvcId,
       "svcArpHostRetailerIf": svcArpHostRetailerIf,
       "svcArpHostMacAddr": svcArpHostMacAddr,
       "svcArpHostPersistKey": svcArpHostPersistKey,
       "svcArpHostCategoryMapName": svcArpHostCategoryMapName,
       "svcArpHostRadiusClassAttr": svcArpHostRadiusClassAttr,
       "svcArpHostRadiusUserName": svcArpHostRadiusUserName,
       "svcArpHostOriginSubscrId": svcArpHostOriginSubscrId,
       "svcArpHostOriginStrings": svcArpHostOriginStrings,
       "svcArpHostIfTableLastMgmtChange": svcArpHostIfTableLastMgmtChange,
       "svcArpHostIfTable": svcArpHostIfTable,
       "svcArpHostIfEntry": svcArpHostIfEntry,
       "svcArpHostIfLastMgmtChange": svcArpHostIfLastMgmtChange,
       "svcArpHostIfAdminState": svcArpHostIfAdminState,
       "svcArpHostIfMaxNumHosts": svcArpHostIfMaxNumHosts,
       "svcArpHostIfMaxNumHostsSap": svcArpHostIfMaxNumHostsSap,
       "svcArpHostIfMinAuthInterval": svcArpHostIfMinAuthInterval,
       "svcArpHostIfNumHosts": svcArpHostIfNumHosts,
       "svcArpHostDefaultSessionTimeout": svcArpHostDefaultSessionTimeout,
       "svcIgmpTrkTableLastMgmtChange": svcIgmpTrkTableLastMgmtChange,
       "svcIgmpTrkTable": svcIgmpTrkTable,
       "svcIgmpTrkEntry": svcIgmpTrkEntry,
       "svcIgmpTrkLastMgmtChange": svcIgmpTrkLastMgmtChange,
       "svcIgmpTrkAdminState": svcIgmpTrkAdminState,
       "svcIgmpTrkExpiryTime": svcIgmpTrkExpiryTime,
       "svcIpipeInfoTableLastMgmtChange": svcIpipeInfoTableLastMgmtChange,
       "svcIpipeInfoTable": svcIpipeInfoTable,
       "svcIpipeInfoEntry": svcIpipeInfoEntry,
       "svcIpipeInfoLastMgmtChange": svcIpipeInfoLastMgmtChange,
       "svcIpipeCeAddressDiscovery": svcIpipeCeAddressDiscovery,
       "svcIpipeIpv6CeAddressDiscovery": svcIpipeIpv6CeAddressDiscovery,
       "svcIpipeStackCapabilitySignaling": svcIpipeStackCapabilitySignaling,
       "svcIpipeCeAddressDiscoveryKeep": svcIpipeCeAddressDiscoveryKeep,
       "svcIpipeEthFaultNotifRecTimer": svcIpipeEthFaultNotifRecTimer,
       "svcIpipeEthFaultNotifAdminState": svcIpipeEthFaultNotifAdminState,
       "svcDhcpLeaseStateBgpTable": svcDhcpLeaseStateBgpTable,
       "svcDhcpLeaseStateBgpEntry": svcDhcpLeaseStateBgpEntry,
       "svcDhcpLseStateBgpPrngPlcyName": svcDhcpLseStateBgpPrngPlcyName,
       "svcDhcpLseStateBgpAuthKeyChain": svcDhcpLseStateBgpAuthKeyChain,
       "svcDhcpLseStateBgpMD5AuthKey": svcDhcpLseStateBgpMD5AuthKey,
       "svcDhcpLseStateBgpImportPolicy": svcDhcpLseStateBgpImportPolicy,
       "svcDhcpLseStateBgpExportPolicy": svcDhcpLseStateBgpExportPolicy,
       "svcDhcpLseStateBgpPeerAS": svcDhcpLseStateBgpPeerAS,
       "svcDhcpLseStateBgpPeeringStatus": svcDhcpLseStateBgpPeeringStatus,
       "svcArpHostMRtTable": svcArpHostMRtTable,
       "svcArpHostMRtEntry": svcArpHostMRtEntry,
       "svcArpHostMRtAddrType": svcArpHostMRtAddrType,
       "svcArpHostMRtAddr": svcArpHostMRtAddr,
       "svcArpHostMRtPrefixLen": svcArpHostMRtPrefixLen,
       "svcArpHostMRtStatus": svcArpHostMRtStatus,
       "svcArpHostMRtMetric": svcArpHostMRtMetric,
       "svcArpHostMRtPreference": svcArpHostMRtPreference,
       "svcArpHostMRtTag": svcArpHostMRtTag,
       "svcArpHostBgpTable": svcArpHostBgpTable,
       "svcArpHostBgpEntry": svcArpHostBgpEntry,
       "svcArpHostBgpPrngPlcyName": svcArpHostBgpPrngPlcyName,
       "svcArpHostBgpAuthKeyChain": svcArpHostBgpAuthKeyChain,
       "svcArpHostBgpMD5AuthKey": svcArpHostBgpMD5AuthKey,
       "svcArpHostBgpImportPolicy": svcArpHostBgpImportPolicy,
       "svcArpHostBgpExportPolicy": svcArpHostBgpExportPolicy,
       "svcArpHostBgpPeerAS": svcArpHostBgpPeerAS,
       "svcArpHostBgpPeeringStatus": svcArpHostBgpPeeringStatus,
       "svcEpMcEpStatsTable": svcEpMcEpStatsTable,
       "svcEpMcEpStatsEntry": svcEpMcEpStatsEntry,
       "svcEpMcEpStatsPktsRxConfig": svcEpMcEpStatsPktsRxConfig,
       "svcEpMcEpStatsPktsRxState": svcEpMcEpStatsPktsRxState,
       "svcEpMcEpStatsPktsTxConfig": svcEpMcEpStatsPktsTxConfig,
       "svcEpMcEpStatsPktsTxState": svcEpMcEpStatsPktsTxState,
       "svcEpMcEpStatsPktsTxFailed": svcEpMcEpStatsPktsTxFailed,
       "svcPbbSrcBVplsMacAddr": svcPbbSrcBVplsMacAddr,
       "svcMacNameTableLastChanged": svcMacNameTableLastChanged,
       "svcMacNameTable": svcMacNameTable,
       "svcMacNameEntry": svcMacNameEntry,
       "svcMacName": svcMacName,
       "svcMacNameRowStatus": svcMacNameRowStatus,
       "svcMacNameLastChngd": svcMacNameLastChngd,
       "svcMacNameAddr": svcMacNameAddr,
       "svcMacNotificationGroup": svcMacNotificationGroup,
       "svcMacNotifInterval": svcMacNotifInterval,
       "svcMacNotifCount": svcMacNotifCount,
       "tlsProtMacImplTable": tlsProtMacImplTable,
       "tlsProtMacImplEntry": tlsProtMacImplEntry,
       "tlsProtMacImplMacAddr": tlsProtMacImplMacAddr,
       "tlsProtMacImplLocale": tlsProtMacImplLocale,
       "tlsProtMacImplPortId": tlsProtMacImplPortId,
       "tlsProtMacImplEncapValue": tlsProtMacImplEncapValue,
       "tlsProtMacImplSdpBindId": tlsProtMacImplSdpBindId,
       "tlsProtMacImplCount": tlsProtMacImplCount,
       "svcNameTableLastChanged": svcNameTableLastChanged,
       "svcNameTable": svcNameTable,
       "svcNameEntry": svcNameEntry,
       "svcNameId": svcNameId,
       "svcNameRowStatus": svcNameRowStatus,
       "svcNameLastChanged": svcNameLastChanged,
       "svcNameType": svcNameType,
       "svcNameCreationOrigin": svcNameCreationOrigin,
       "svcMrpPlcyTableLastChgd": svcMrpPlcyTableLastChgd,
       "svcMrpPolicyTable": svcMrpPolicyTable,
       "svcMrpPolicyEntry": svcMrpPolicyEntry,
       "svcMrpPolicyName": svcMrpPolicyName,
       "svcMrpPolicyRowStatus": svcMrpPolicyRowStatus,
       "svcMrpPolicyLastChanged": svcMrpPolicyLastChanged,
       "svcMrpPolicyDescription": svcMrpPolicyDescription,
       "svcMrpPolicyScope": svcMrpPolicyScope,
       "svcMrpPolicyDefaultAction": svcMrpPolicyDefaultAction,
       "svcMrpPlcyParamsTblLastChgd": svcMrpPlcyParamsTblLastChgd,
       "svcMrpPolicyParamsTable": svcMrpPolicyParamsTable,
       "svcMrpPolicyParamsEntry": svcMrpPolicyParamsEntry,
       "svcMrpPolicyParamsEntryId": svcMrpPolicyParamsEntryId,
       "svcMrpPolicyParamsRowStatus": svcMrpPolicyParamsRowStatus,
       "svcMrpPolicyParamsLastChanged": svcMrpPolicyParamsLastChanged,
       "svcMrpPolicyParamsDescription": svcMrpPolicyParamsDescription,
       "svcMrpPolicyParamsAction": svcMrpPolicyParamsAction,
       "svcMrpPlcyParamsISIDTblLastChgd": svcMrpPlcyParamsISIDTblLastChgd,
       "svcMrpPolicyParamsISIDTable": svcMrpPolicyParamsISIDTable,
       "svcMrpPolicyParamsISIDEntry": svcMrpPolicyParamsISIDEntry,
       "svcMrpPolicyParamsISIDLow": svcMrpPolicyParamsISIDLow,
       "svcMrpPolicyParamsISIDHigh": svcMrpPolicyParamsISIDHigh,
       "svcMrpPolicyParamsISIDRowStatus": svcMrpPolicyParamsISIDRowStatus,
       "svcMrpPolicyParamsISIDLastChgd": svcMrpPolicyParamsISIDLastChgd,
       "svcEpipeTableLastChanged": svcEpipeTableLastChanged,
       "svcEpipeTable": svcEpipeTable,
       "svcEpipeEntry": svcEpipeEntry,
       "svcEpipeLastChngd": svcEpipeLastChngd,
       "svcEpipePerSvcHashing": svcEpipePerSvcHashing,
       "svcEpipeVxlanSrcTepIpAddrType": svcEpipeVxlanSrcTepIpAddrType,
       "svcEpipeVxlanSrcTepIpAddr": svcEpipeVxlanSrcTepIpAddr,
       "svcEpipeFwdWhlSalePortId": svcEpipeFwdWhlSalePortId,
       "svcEpipeFwdWhlSaleEncapValue": svcEpipeFwdWhlSaleEncapValue,
       "svcEpipeIgnoreL2VpnMtuMismatch": svcEpipeIgnoreL2VpnMtuMismatch,
       "svcEpipeLblEthOrIpL4TEID": svcEpipeLblEthOrIpL4TEID,
       "svcEpipeBackboneTableLastChanged": svcEpipeBackboneTableLastChanged,
       "svcEpipeBackboneTable": svcEpipeBackboneTable,
       "svcEpipeBackboneEntry": svcEpipeBackboneEntry,
       "svcEpipeBackboneLastChngd": svcEpipeBackboneLastChngd,
       "svcEpipeBackboneForceQTagFwd": svcEpipeBackboneForceQTagFwd,
       "svcEpipeBackboneLocalSwitchSvc": svcEpipeBackboneLocalSwitchSvc,
       "svcTlsSiteIdTblLastChanged": svcTlsSiteIdTblLastChanged,
       "svcTlsSiteIdTable": svcTlsSiteIdTable,
       "svcTlsSiteIdEntry": svcTlsSiteIdEntry,
       "svcTlsSiteIdName": svcTlsSiteIdName,
       "svcTlsSiteIdRowStatus": svcTlsSiteIdRowStatus,
       "svcTlsSiteIdLastChanged": svcTlsSiteIdLastChanged,
       "svcTlsSiteIdAdminStatus": svcTlsSiteIdAdminStatus,
       "svcTlsSiteIdSiteId": svcTlsSiteIdSiteId,
       "svcTlsSiteIdPortId": svcTlsSiteIdPortId,
       "svcTlsSiteIdEncapValue": svcTlsSiteIdEncapValue,
       "svcTlsSiteIdSdpBindId": svcTlsSiteIdSdpBindId,
       "svcTlsSiteIdShgName": svcTlsSiteIdShgName,
       "svcTlsSiteIdShgMeshSdp": svcTlsSiteIdShgMeshSdp,
       "svcTlsSiteIdFailedThresh": svcTlsSiteIdFailedThresh,
       "svcTlsSiteIdOperStatus": svcTlsSiteIdOperStatus,
       "svcTlsSiteIdDesignatedFwdr": svcTlsSiteIdDesignatedFwdr,
       "svcTlsSiteIdBootTimer": svcTlsSiteIdBootTimer,
       "svcTlsSiteIdSiteActTimer": svcTlsSiteIdSiteActTimer,
       "svcTlsSiteIdDfUpTime": svcTlsSiteIdDfUpTime,
       "svcTlsSiteIdDfChgCnt": svcTlsSiteIdDfChgCnt,
       "svcTlsSiteIdTimerRemain": svcTlsSiteIdTimerRemain,
       "svcTlsSiteIdMonitorOperGrp": svcTlsSiteIdMonitorOperGrp,
       "svcTlsSiteIdActTimerRemain": svcTlsSiteIdActTimerRemain,
       "svcTlsSiteIdMinDnTimer": svcTlsSiteIdMinDnTimer,
       "svcTlsSiteIdMinDnTimerRemain": svcTlsSiteIdMinDnTimerRemain,
       "svcBgpVplsTblLastChanged": svcBgpVplsTblLastChanged,
       "svcBgpVplsTable": svcBgpVplsTable,
       "svcBgpVplsEntry": svcBgpVplsEntry,
       "svcBgpVplsRowStatus": svcBgpVplsRowStatus,
       "svcBgpVplsLastChanged": svcBgpVplsLastChanged,
       "svcBgpVplsMaxVeId": svcBgpVplsMaxVeId,
       "svcBgpVplsAdminStatus": svcBgpVplsAdminStatus,
       "svcBgpVplsVeName": svcBgpVplsVeName,
       "svcBgpVplsVeId": svcBgpVplsVeId,
       "svcBgpVplsPwTemplateId": svcBgpVplsPwTemplateId,
       "svcTlsBgpTableLastChanged": svcTlsBgpTableLastChanged,
       "svcTlsBgpTable": svcTlsBgpTable,
       "svcTlsBgpEntry": svcTlsBgpEntry,
       "svcTlsBgpLastChanged": svcTlsBgpLastChanged,
       "svcTlsBgpVsiRD": svcTlsBgpVsiRD,
       "svcTlsBgpExportRteTarget": svcTlsBgpExportRteTarget,
       "svcTlsBgpVsiExportPolicy1": svcTlsBgpVsiExportPolicy1,
       "svcTlsBgpVsiExportPolicy2": svcTlsBgpVsiExportPolicy2,
       "svcTlsBgpVsiExportPolicy3": svcTlsBgpVsiExportPolicy3,
       "svcTlsBgpVsiExportPolicy4": svcTlsBgpVsiExportPolicy4,
       "svcTlsBgpVsiExportPolicy5": svcTlsBgpVsiExportPolicy5,
       "svcTlsBgpImportRteTarget": svcTlsBgpImportRteTarget,
       "svcTlsBgpVsiImportPolicy1": svcTlsBgpVsiImportPolicy1,
       "svcTlsBgpVsiImportPolicy2": svcTlsBgpVsiImportPolicy2,
       "svcTlsBgpVsiImportPolicy3": svcTlsBgpVsiImportPolicy3,
       "svcTlsBgpVsiImportPolicy4": svcTlsBgpVsiImportPolicy4,
       "svcTlsBgpVsiImportPolicy5": svcTlsBgpVsiImportPolicy5,
       "svcTlsBgpRowStatus": svcTlsBgpRowStatus,
       "svcTlsBgpCreationOrigin": svcTlsBgpCreationOrigin,
       "svcTlsBgpAutoRD": svcTlsBgpAutoRD,
       "svcTlsBgpOperRD": svcTlsBgpOperRD,
       "svcTlsBgpOperRDType": svcTlsBgpOperRDType,
       "svcTlsBgpOperImportRteTgtOrigin": svcTlsBgpOperImportRteTgtOrigin,
       "svcTlsBgpOperImportRteTarget": svcTlsBgpOperImportRteTarget,
       "svcTlsBgpOperExportRteTgtOrigin": svcTlsBgpOperExportRteTgtOrigin,
       "svcTlsBgpOperExportRteTarget": svcTlsBgpOperExportRteTarget,
       "svcTlsPbbIgmpSnpgMRtrTable": svcTlsPbbIgmpSnpgMRtrTable,
       "svcTlsPbbIgmpSnpgMRtrEntry": svcTlsPbbIgmpSnpgMRtrEntry,
       "svcTlsPbbIgmpSnpgMRtrSvcIdIVpls": svcTlsPbbIgmpSnpgMRtrSvcIdIVpls,
       "svcTlsPbbIgmpSnpgMRtrSvcIdBVpls": svcTlsPbbIgmpSnpgMRtrSvcIdBVpls,
       "svcTlsPbbIgmpSnpgMRtrMacName": svcTlsPbbIgmpSnpgMRtrMacName,
       "svcTlsPbbIgmpSnpgMRtrRowStatus": svcTlsPbbIgmpSnpgMRtrRowStatus,
       "svcTlsPbbIgmpSnpgMRtrLastCh": svcTlsPbbIgmpSnpgMRtrLastCh,
       "svcL2MhRteTable": svcL2MhRteTable,
       "svcL2MhRteEntry": svcL2MhRteEntry,
       "svcL2MhRteSiteId": svcL2MhRteSiteId,
       "svcL2MhRteRouteDistinguisher": svcL2MhRteRouteDistinguisher,
       "svcL2MhRteNextHopType": svcL2MhRteNextHopType,
       "svcL2MhRteNextHop": svcL2MhRteNextHop,
       "svcL2MhRteState": svcL2MhRteState,
       "svcL2MhRteDf": svcL2MhRteDf,
       "svcL2MhRteVplsPreference": svcL2MhRteVplsPreference,
       "svcTmplTblLastChanged": svcTmplTblLastChanged,
       "svcTmplTable": svcTmplTable,
       "svcTmplEntry": svcTmplEntry,
       "svcTmplName": svcTmplName,
       "svcTmplRowStatus": svcTmplRowStatus,
       "svcTmplLastChanged": svcTmplLastChanged,
       "svcTmplSvcCount": svcTmplSvcCount,
       "svcTmplType": svcTmplType,
       "svcTmplMtu": svcTmplMtu,
       "svcTmplCustId": svcTmplCustId,
       "svcTlsGroupTblLastChanged": svcTlsGroupTblLastChanged,
       "svcTlsGroupTable": svcTlsGroupTable,
       "svcTlsGroupEntry": svcTlsGroupEntry,
       "svcTlsGroupId": svcTlsGroupId,
       "svcTlsGroupRowStatus": svcTlsGroupRowStatus,
       "svcTlsGroupLastChanged": svcTlsGroupLastChanged,
       "svcTlsGroupAdminStatus": svcTlsGroupAdminStatus,
       "svcTlsGroupStart": svcTlsGroupStart,
       "svcTlsGroupEnd": svcTlsGroupEnd,
       "svcTlsGroupStartVlanTag": svcTlsGroupStartVlanTag,
       "svcTlsGroupSvcTmplName": svcTlsGroupSvcTmplName,
       "svcTlsGroupSapTmplName": svcTlsGroupSapTmplName,
       "svcTlsGroupMvrpControl": svcTlsGroupMvrpControl,
       "svcTlsGroupOperStatus": svcTlsGroupOperStatus,
       "svcTlsGroupLastError": svcTlsGroupLastError,
       "svcDhcpLeaseTable": svcDhcpLeaseTable,
       "svcDhcpLeaseEntry": svcDhcpLeaseEntry,
       "svcDhcpLeaseCiAddrType": svcDhcpLeaseCiAddrType,
       "svcDhcpLeaseCiAddr": svcDhcpLeaseCiAddr,
       "svcDhcpLeaseNextHopMacAddr": svcDhcpLeaseNextHopMacAddr,
       "svcDhcpLeaseChAddr": svcDhcpLeaseChAddr,
       "svcDhcpLeaseLocale": svcDhcpLeaseLocale,
       "svcDhcpLeasePortId": svcDhcpLeasePortId,
       "svcDhcpLeaseEncapValue": svcDhcpLeaseEncapValue,
       "svcDhcpLeaseSdpId": svcDhcpLeaseSdpId,
       "svcDhcpLeaseVcId": svcDhcpLeaseVcId,
       "svcDhcpLeaseRemainLseTime": svcDhcpLeaseRemainLseTime,
       "svcDhcpLeaseOption82": svcDhcpLeaseOption82,
       "svcDhcpLeasePersistKey": svcDhcpLeasePersistKey,
       "svcDhcpLeaseSubscrIdent": svcDhcpLeaseSubscrIdent,
       "svcDhcpLeaseSubProfString": svcDhcpLeaseSubProfString,
       "svcDhcpLeaseSlaProfString": svcDhcpLeaseSlaProfString,
       "svcDhcpLeaseShcvOperState": svcDhcpLeaseShcvOperState,
       "svcDhcpLeaseShcvChecks": svcDhcpLeaseShcvChecks,
       "svcDhcpLeaseShcvReplies": svcDhcpLeaseShcvReplies,
       "svcDhcpLeaseShcvReplyTime": svcDhcpLeaseShcvReplyTime,
       "svcDhcpLeaseClientId": svcDhcpLeaseClientId,
       "svcDhcpLeaseIAID": svcDhcpLeaseIAID,
       "svcDhcpLeaseIAIDType": svcDhcpLeaseIAIDType,
       "svcDhcpLeaseCiAddrMaskLen": svcDhcpLeaseCiAddrMaskLen,
       "svcDhcpLeaseRetailerSvcId": svcDhcpLeaseRetailerSvcId,
       "svcDhcpLeaseRetailerIf": svcDhcpLeaseRetailerIf,
       "svcDhcpLeaseAncpString": svcDhcpLeaseAncpString,
       "svcDhcpLeaseFramedIpNetMaskTp": svcDhcpLeaseFramedIpNetMaskTp,
       "svcDhcpLeaseFramedIpNetMask": svcDhcpLeaseFramedIpNetMask,
       "svcDhcpLeaseBCastIpAddrType": svcDhcpLeaseBCastIpAddrType,
       "svcDhcpLeaseBCastIpAddr": svcDhcpLeaseBCastIpAddr,
       "svcDhcpLeaseDefaultRouterTp": svcDhcpLeaseDefaultRouterTp,
       "svcDhcpLeaseDefaultRouter": svcDhcpLeaseDefaultRouter,
       "svcDhcpLeasePrimaryDnsType": svcDhcpLeasePrimaryDnsType,
       "svcDhcpLeasePrimaryDns": svcDhcpLeasePrimaryDns,
       "svcDhcpLeaseSecondaryDnsType": svcDhcpLeaseSecondaryDnsType,
       "svcDhcpLeaseSecondaryDns": svcDhcpLeaseSecondaryDns,
       "svcDhcpLeaseSessionTimeout": svcDhcpLeaseSessionTimeout,
       "svcDhcpLeaseServerLeaseStart": svcDhcpLeaseServerLeaseStart,
       "svcDhcpLeaseServerLastRenew": svcDhcpLeaseServerLastRenew,
       "svcDhcpLeaseServerLeaseEnd": svcDhcpLeaseServerLeaseEnd,
       "svcDhcpLeaseDhcpServerAddrType": svcDhcpLeaseDhcpServerAddrType,
       "svcDhcpLeaseDhcpServerAddr": svcDhcpLeaseDhcpServerAddr,
       "svcDhcpLeaseOriginSubscrId": svcDhcpLeaseOriginSubscrId,
       "svcDhcpLeaseOriginStrings": svcDhcpLeaseOriginStrings,
       "svcDhcpLeaseOriginLeaseInfo": svcDhcpLeaseOriginLeaseInfo,
       "svcDhcpLeaseDhcpClientAddrType": svcDhcpLeaseDhcpClientAddrType,
       "svcDhcpLeaseDhcpClientAddr": svcDhcpLeaseDhcpClientAddr,
       "svcDhcpLeaseLeaseSplitActive": svcDhcpLeaseLeaseSplitActive,
       "svcDhcpLeaseInterDestId": svcDhcpLeaseInterDestId,
       "svcDhcpLeasePrimaryNbnsType": svcDhcpLeasePrimaryNbnsType,
       "svcDhcpLeasePrimaryNbns": svcDhcpLeasePrimaryNbns,
       "svcDhcpLeaseSecondaryNbnsType": svcDhcpLeaseSecondaryNbnsType,
       "svcDhcpLeaseSecondaryNbns": svcDhcpLeaseSecondaryNbns,
       "svcDhcpLeaseAppProfString": svcDhcpLeaseAppProfString,
       "svcDhcpLeaseCategoryMapName": svcDhcpLeaseCategoryMapName,
       "svcDhcpLeaseNakNextRenew": svcDhcpLeaseNakNextRenew,
       "svcDhcpLeaseRadiusClassAttr": svcDhcpLeaseRadiusClassAttr,
       "svcDhcpLeaseRadiusUserName": svcDhcpLeaseRadiusUserName,
       "svcDhcpLeasePoolName": svcDhcpLeasePoolName,
       "svcDhcpLeaseServerId": svcDhcpLeaseServerId,
       "svcDhcpLeaseInterfaceId": svcDhcpLeaseInterfaceId,
       "svcDhcpLeaseRemoteId": svcDhcpLeaseRemoteId,
       "svcDhcpLeaseOption60": svcDhcpLeaseOption60,
       "svcDhcpLeaseRadCalledStationId": svcDhcpLeaseRadCalledStationId,
       "svcDhcpLeaseLeaseTime": svcDhcpLeaseLeaseTime,
       "svcDhcpLeaseSessTimeout": svcDhcpLeaseSessTimeout,
       "svcDhcpLeaseUptime": svcDhcpLeaseUptime,
       "svcDhcpLeaseRemainingSessTime": svcDhcpLeaseRemainingSessTime,
       "svcDhcpLeaseMngdRtStatus": svcDhcpLeaseMngdRtStatus,
       "svcDhcpLeaseTerminationType": svcDhcpLeaseTerminationType,
       "svcDhcpLeaseIpoeSessionHost": svcDhcpLeaseIpoeSessionHost,
       "svcDhcpLeasePppSession": svcDhcpLeasePppSession,
       "svcDhcpLeaseRadSubIfPfxType": svcDhcpLeaseRadSubIfPfxType,
       "svcDhcpLeaseRadSubIfPfx": svcDhcpLeaseRadSubIfPfx,
       "svcDhcpLeaseRadSubIfPfxLen": svcDhcpLeaseRadSubIfPfxLen,
       "svcDhcpLeaseRtrAdvPlcy": svcDhcpLeaseRtrAdvPlcy,
       "svcDhcpLeaseWlanGwBridgeId": svcDhcpLeaseWlanGwBridgeId,
       "svcDhcpLeaseModifyTable": svcDhcpLeaseModifyTable,
       "svcDhcpLeaseModifyEntry": svcDhcpLeaseModifyEntry,
       "svcDhcpLeaseModifySubIndent": svcDhcpLeaseModifySubIndent,
       "svcDhcpLeaseModifySubProfile": svcDhcpLeaseModifySubProfile,
       "svcDhcpLeaseModifySlaProfile": svcDhcpLeaseModifySlaProfile,
       "svcDhcpLeaseEvaluateState": svcDhcpLeaseEvaluateState,
       "svcDhcpLeaseModInterDestId": svcDhcpLeaseModInterDestId,
       "svcDhcpLeaseModifyAncpString": svcDhcpLeaseModifyAncpString,
       "svcDhcpLeaseModifyAppProfile": svcDhcpLeaseModifyAppProfile,
       "svcDhcpLeaseActionTable": svcDhcpLeaseActionTable,
       "svcDhcpLeaseActionEntry": svcDhcpLeaseActionEntry,
       "svcDhcpLeaseForceRenew": svcDhcpLeaseForceRenew,
       "svcDhcpLeaseBgpTable": svcDhcpLeaseBgpTable,
       "svcDhcpLeaseBgpEntry": svcDhcpLeaseBgpEntry,
       "svcDhcpLeaseBgpPrngPlcyName": svcDhcpLeaseBgpPrngPlcyName,
       "svcDhcpLeaseBgpAuthKeyChain": svcDhcpLeaseBgpAuthKeyChain,
       "svcDhcpLeaseBgpMD5AuthKey": svcDhcpLeaseBgpMD5AuthKey,
       "svcDhcpLeaseBgpImportPolicy": svcDhcpLeaseBgpImportPolicy,
       "svcDhcpLeaseBgpExportPolicy": svcDhcpLeaseBgpExportPolicy,
       "svcDhcpLeaseBgpPeerAS": svcDhcpLeaseBgpPeerAS,
       "svcDhcpLeaseBgpPeeringStatus": svcDhcpLeaseBgpPeeringStatus,
       "svcTmplTlsTblLastChanged": svcTmplTlsTblLastChanged,
       "svcTmplTlsTable": svcTmplTlsTable,
       "svcTmplTlsEntry": svcTmplTlsEntry,
       "svcTmplTlsLastChanged": svcTmplTlsLastChanged,
       "svcTmplTlsMacLearning": svcTmplTlsMacLearning,
       "svcTmplTlsDiscardUnknownDest": svcTmplTlsDiscardUnknownDest,
       "svcTmplTlsFdbTableSize": svcTmplTlsFdbTableSize,
       "svcTmplTlsFdbLocalAgeTime": svcTmplTlsFdbLocalAgeTime,
       "svcTmplTlsFdbRemoteAgeTime": svcTmplTlsFdbRemoteAgeTime,
       "svcTmplTlsStpAdminStatus": svcTmplTlsStpAdminStatus,
       "svcTmplTlsStpPriority": svcTmplTlsStpPriority,
       "svcTmplTlsStpBridgeMaxAge": svcTmplTlsStpBridgeMaxAge,
       "svcTmplTlsStpBridgeHelloTime": svcTmplTlsStpBridgeHelloTime,
       "svcTmplTlsStpBridgeForwardDelay": svcTmplTlsStpBridgeForwardDelay,
       "svcTmplTlsMacAgeing": svcTmplTlsMacAgeing,
       "svcTmplTlsFdbTableFullHighWMark": svcTmplTlsFdbTableFullHighWMark,
       "svcTmplTlsFdbTableFullLowWMark": svcTmplTlsFdbTableFullLowWMark,
       "svcTmplTlsStpVersion": svcTmplTlsStpVersion,
       "svcTmplTlsStpHoldCount": svcTmplTlsStpHoldCount,
       "svcTmplTlsPerSvcHashing": svcTmplTlsPerSvcHashing,
       "svcTmplTlsTempFloodTime": svcTmplTlsTempFloodTime,
       "svcTmplTlsMacMoveMaxRate": svcTmplTlsMacMoveMaxRate,
       "svcTmplTlsMacMoveRetryTimeout": svcTmplTlsMacMoveRetryTimeout,
       "svcTmplTlsMacMoveAdminStatus": svcTmplTlsMacMoveAdminStatus,
       "svcTmplTlsPriPortsCumFactor": svcTmplTlsPriPortsCumFactor,
       "svcTmplTlsSecPortsCumFactor": svcTmplTlsSecPortsCumFactor,
       "svcTmplTlsMacMoveNumRetries": svcTmplTlsMacMoveNumRetries,
       "svcTmplTlsSpiLoadBalancing": svcTmplTlsSpiLoadBalancing,
       "svcTmplTlsTeidLoadBalancing": svcTmplTlsTeidLoadBalancing,
       "svcTmplUserTable": svcTmplUserTable,
       "svcTmplUserEntry": svcTmplUserEntry,
       "svcTmplUserCreationOrigin": svcTmplUserCreationOrigin,
       "svcTmplUserCreatorSvcId": svcTmplUserCreatorSvcId,
       "svcTlsExtTable": svcTlsExtTable,
       "svcTlsExtEntry": svcTlsExtEntry,
       "svcTlsExtMvrpMaxAttributes": svcTlsExtMvrpMaxAttributes,
       "svcTlsExtMvrpRegAttrCnt": svcTlsExtMvrpRegAttrCnt,
       "svcTlsExtMvrpDeclaredAttrCnt": svcTlsExtMvrpDeclaredAttrCnt,
       "svcTlsExtMvrpFailedRegCnt": svcTlsExtMvrpFailedRegCnt,
       "svcTlsExtMvrpAttrTblHighWM": svcTlsExtMvrpAttrTblHighWM,
       "svcTlsExtMvrpAttrTblLowWM": svcTlsExtMvrpAttrTblLowWM,
       "svcTlsExtMvrpHoldTime": svcTlsExtMvrpHoldTime,
       "svcTlsExtMvrpAdminStatus": svcTlsExtMvrpAdminStatus,
       "svcTlsExtMvrpOperStatus": svcTlsExtMvrpOperStatus,
       "svcTlsExtMmrpAdminStatus": svcTlsExtMmrpAdminStatus,
       "svcTlsExtMmrpOperStatus": svcTlsExtMmrpOperStatus,
       "svcTlsExtMmrpRegAttrCnt": svcTlsExtMmrpRegAttrCnt,
       "svcTlsExtMmrpDeclaredAttrCnt": svcTlsExtMmrpDeclaredAttrCnt,
       "svcTlsExtMmrpFailedRegCnt": svcTlsExtMmrpFailedRegCnt,
       "svcTlsExtMvrpAttributeCount": svcTlsExtMvrpAttributeCount,
       "svcTlsExtMmrpEndStationOnly": svcTlsExtMmrpEndStationOnly,
       "svcTlsExtMacReNotifInterval": svcTlsExtMacReNotifInterval,
       "svcTlsExtSpbmCtrlVpls": svcTlsExtSpbmCtrlVpls,
       "svcTlsExtSpbmFid": svcTlsExtSpbmFid,
       "svcTlsExtSpiLoadBalancing": svcTlsExtSpiLoadBalancing,
       "svcTlsExtTeidLoadBalancing": svcTlsExtTeidLoadBalancing,
       "svcTlsExtVxlanSrcTepIpAddrType": svcTlsExtVxlanSrcTepIpAddrType,
       "svcTlsExtVxlanSrcTepIpAddr": svcTlsExtVxlanSrcTepIpAddr,
       "svcTlsExtVxlanIpv4TepEcmp": svcTlsExtVxlanIpv4TepEcmp,
       "svcTlsExtEvpnMplsRvplsEcmp": svcTlsExtEvpnMplsRvplsEcmp,
       "svcTlsPbbRestProtSrcMac": svcTlsPbbRestProtSrcMac,
       "svcTlsPbbRestProtSrcMacAction": svcTlsPbbRestProtSrcMacAction,
       "svcTlsExtIgnoreL2VpnMtuMismatch": svcTlsExtIgnoreL2VpnMtuMismatch,
       "svcTlsExtLblEthOrIpL4TEID": svcTlsExtLblEthOrIpL4TEID,
       "svcPwRtLclPrefixTblLastChanged": svcPwRtLclPrefixTblLastChanged,
       "svcPwRtLclPrefixTable": svcPwRtLclPrefixTable,
       "svcPwRtLclPrefixEntry": svcPwRtLclPrefixEntry,
       "svcPwRtLclPrefixGlobalId": svcPwRtLclPrefixGlobalId,
       "svcPwRtLclPrefix": svcPwRtLclPrefix,
       "svcPwRtLclPrefixRowStatus": svcPwRtLclPrefixRowStatus,
       "svcPwRtLclPrefixLastChange": svcPwRtLclPrefixLastChange,
       "svcPwRtPathTblLastChanged": svcPwRtPathTblLastChanged,
       "svcPwRtPathTable": svcPwRtPathTable,
       "svcPwRtPathEntry": svcPwRtPathEntry,
       "svcPwRtPathName": svcPwRtPathName,
       "svcPwRtPathRowStatus": svcPwRtPathRowStatus,
       "svcPwRtPathLastChange": svcPwRtPathLastChange,
       "svcPwRtPathAdminStatus": svcPwRtPathAdminStatus,
       "svcPwRtPathHopTblLastChgd": svcPwRtPathHopTblLastChgd,
       "svcPwRtPathHopTable": svcPwRtPathHopTable,
       "svcPwRtPathHopEntry": svcPwRtPathHopEntry,
       "svcPwRtPathHopIndex": svcPwRtPathHopIndex,
       "svcPwRtPathHopRowStatus": svcPwRtPathHopRowStatus,
       "svcPwRtPathHopLastChange": svcPwRtPathHopLastChange,
       "svcPwRtPathHopAddrType": svcPwRtPathHopAddrType,
       "svcPwRtPathHopAddr": svcPwRtPathHopAddr,
       "svcPwRtStaticRtTblLastChgd": svcPwRtStaticRtTblLastChgd,
       "svcPwRtStaticRtTable": svcPwRtStaticRtTable,
       "svcPwRtStaticRtEntry": svcPwRtStaticRtEntry,
       "svcPwRtStaticRtDstGlobalId": svcPwRtStaticRtDstGlobalId,
       "svcPwRtStaticRtDstPrefix": svcPwRtStaticRtDstPrefix,
       "svcPwRtStaticRtDstAddrType": svcPwRtStaticRtDstAddrType,
       "svcPwRtStaticRtDstAddr": svcPwRtStaticRtDstAddr,
       "svcPwRtStaticRtRowStatus": svcPwRtStaticRtRowStatus,
       "svcPwRtStaticRtLastChange": svcPwRtStaticRtLastChange,
       "svcMSPwPeTblLastChanged": svcMSPwPeTblLastChanged,
       "svcMSPwPeTable": svcMSPwPeTable,
       "svcMSPwPeEntry": svcMSPwPeEntry,
       "svcMSPwPeId": svcMSPwPeId,
       "svcMSPwPeRowStatus": svcMSPwPeRowStatus,
       "svcMSPwPeLastChange": svcMSPwPeLastChange,
       "svcMSPwPeAdminStatus": svcMSPwPeAdminStatus,
       "svcMSPwPeFecType": svcMSPwPeFecType,
       "svcMSPwPeAiiType": svcMSPwPeAiiType,
       "svcMSPwPeSignaling": svcMSPwPeSignaling,
       "svcMSPwPeAutoConfig": svcMSPwPeAutoConfig,
       "svcMSPwPeAgi": svcMSPwPeAgi,
       "svcMSPwPePolicyId": svcMSPwPePolicyId,
       "svcMSPwPePrecedence": svcMSPwPePrecedence,
       "svcMSPwPeRetryTimer": svcMSPwPeRetryTimer,
       "svcMSPwPeRetryCount": svcMSPwPeRetryCount,
       "svcMSPwPeSaiiGlobalId": svcMSPwPeSaiiGlobalId,
       "svcMSPwPeSaiiPrefix": svcMSPwPeSaiiPrefix,
       "svcMSPwPeSaiiAcId": svcMSPwPeSaiiAcId,
       "svcMSPwPeTaiiGlobalId": svcMSPwPeTaiiGlobalId,
       "svcMSPwPeTaiiPrefix": svcMSPwPeTaiiPrefix,
       "svcMSPwPeTaiiAcId": svcMSPwPeTaiiAcId,
       "svcMSPwPePathName": svcMSPwPePathName,
       "svcMSPwPeEndPoint": svcMSPwPeEndPoint,
       "svcMSPwPeStandbySigSlave": svcMSPwPeStandbySigSlave,
       "svcMSPwPeIsICB": svcMSPwPeIsICB,
       "svcMSPwPeTimeRemain": svcMSPwPeTimeRemain,
       "svcMSPwPeRetryRemain": svcMSPwPeRetryRemain,
       "svcMSPwPeOperSdpBind": svcMSPwPeOperSdpBind,
       "svcMSPwPeRetryExpired": svcMSPwPeRetryExpired,
       "svcMSPwPeLastError": svcMSPwPeLastError,
       "svcOperGrpTblLastChanged": svcOperGrpTblLastChanged,
       "svcOperGrpTable": svcOperGrpTable,
       "svcOperGrpEntry": svcOperGrpEntry,
       "svcOperGrpName": svcOperGrpName,
       "svcOperGrpRowStatus": svcOperGrpRowStatus,
       "svcOperGrpLastChange": svcOperGrpLastChange,
       "svcOperGrpOperStatus": svcOperGrpOperStatus,
       "svcOperGrpHoldDownTime": svcOperGrpHoldDownTime,
       "svcOperGrpCreationOrigin": svcOperGrpCreationOrigin,
       "svcOperGrpHoldUpTime": svcOperGrpHoldUpTime,
       "svcOperGrpHoldUpTimeRemain": svcOperGrpHoldUpTimeRemain,
       "svcOperGrpHoldDownTimeRemain": svcOperGrpHoldDownTimeRemain,
       "svcOperGrpNumMembers": svcOperGrpNumMembers,
       "svcOperGrpNumMonitoring": svcOperGrpNumMonitoring,
       "svcDhcpLeaseAleTable": svcDhcpLeaseAleTable,
       "svcDhcpLeaseAleEntry": svcDhcpLeaseAleEntry,
       "svcDhcpLeaseAleDatalink": svcDhcpLeaseAleDatalink,
       "svcDhcpLeaseAleEncaps1": svcDhcpLeaseAleEncaps1,
       "svcDhcpLeaseAleEncaps2": svcDhcpLeaseAleEncaps2,
       "svcEthCfmTblLastChanged": svcEthCfmTblLastChanged,
       "svcEthCfmTable": svcEthCfmTable,
       "svcEthCfmEntry": svcEthCfmEntry,
       "svcEthCfmTunnelFaultNotification": svcEthCfmTunnelFaultNotification,
       "svcEthCfmVMepExtensions": svcEthCfmVMepExtensions,
       "tmnxSvcGrpObjs": tmnxSvcGrpObjs,
       "svcMacFdbRecords": svcMacFdbRecords,
       "svcPwRtSpeAddrGlobalId": svcPwRtSpeAddrGlobalId,
       "svcPwRtSpeAddrPrefix": svcPwRtSpeAddrPrefix,
       "svcPwRtBootTimer": svcPwRtBootTimer,
       "svcPwRtRetryTimer": svcPwRtRetryTimer,
       "svcPwRtRetryCount": svcPwRtRetryCount,
       "svcPwRtBgpRoutes": svcPwRtBgpRoutes,
       "svcPwRtStaticRoutes": svcPwRtStaticRoutes,
       "svcPwRtLocalRoutes": svcPwRtLocalRoutes,
       "svcPwRtHostRoutes": svcPwRtHostRoutes,
       "svcPwRtBootTimerRemain": svcPwRtBootTimerRemain,
       "svcPwRtLclPfxRDTblLastChanged": svcPwRtLclPfxRDTblLastChanged,
       "svcPwRtLclPfxRDTable": svcPwRtLclPfxRDTable,
       "svcPwRtLclPfxRDEntry": svcPwRtLclPfxRDEntry,
       "svcPwRtLclPfxRD": svcPwRtLclPfxRD,
       "svcPwRtLclPfxRDRowStatus": svcPwRtLclPfxRDRowStatus,
       "svcPwRtLclPfxRDLastChange": svcPwRtLclPfxRDLastChange,
       "svcPwRtLclPfxRDCommunity": svcPwRtLclPfxRDCommunity,
       "svcPwSpeSaiiTable": svcPwSpeSaiiTable,
       "svcPwSpeSaiiEntry": svcPwSpeSaiiEntry,
       "svcPwSpeSaiiTaiiGlobalId": svcPwSpeSaiiTaiiGlobalId,
       "svcPwSpeSaiiTaiiPrefix": svcPwSpeSaiiTaiiPrefix,
       "svcPwSpeSaiiTaiiAcId": svcPwSpeSaiiTaiiAcId,
       "svcPwSpeSaiiSvcId": svcPwSpeSaiiSvcId,
       "svcPwSpeSaiiOperSdpBind1": svcPwSpeSaiiOperSdpBind1,
       "svcPwSpeSaiiOperSdpBind2": svcPwSpeSaiiOperSdpBind2,
       "svcPwSpeTaiiTable": svcPwSpeTaiiTable,
       "svcPwSpeTaiiEntry": svcPwSpeTaiiEntry,
       "svcPwSpeTaiiSaiiGlobalId": svcPwSpeTaiiSaiiGlobalId,
       "svcPwSpeTaiiSaiiPrefix": svcPwSpeTaiiSaiiPrefix,
       "svcPwSpeTaiiSaiiAcId": svcPwSpeTaiiSaiiAcId,
       "svcPwSpeTaiiSvcId": svcPwSpeTaiiSvcId,
       "svcPwSpeTaiiOperSdpBind1": svcPwSpeTaiiOperSdpBind1,
       "svcPwSpeTaiiOperSdpBind2": svcPwSpeTaiiOperSdpBind2,
       "svcDhcpLeaseOvrTable": svcDhcpLeaseOvrTable,
       "svcDhcpLeaseOvrEntry": svcDhcpLeaseOvrEntry,
       "svcDhcpLeaseOvrDirection": svcDhcpLeaseOvrDirection,
       "svcDhcpLeaseOvrType": svcDhcpLeaseOvrType,
       "svcDhcpLeaseOvrTypeId": svcDhcpLeaseOvrTypeId,
       "svcDhcpLeaseOvrTypeName": svcDhcpLeaseOvrTypeName,
       "svcDhcpLeaseOvrPIR": svcDhcpLeaseOvrPIR,
       "svcDhcpLeaseOvrCIR": svcDhcpLeaseOvrCIR,
       "svcDhcpLeaseOvrCBS": svcDhcpLeaseOvrCBS,
       "svcDhcpLeaseOvrMBS": svcDhcpLeaseOvrMBS,
       "svcDhcpLeaseOvrWrrWeight": svcDhcpLeaseOvrWrrWeight,
       "svcDhcpLeaseOvrSummedCIR": svcDhcpLeaseOvrSummedCIR,
       "svcDhcpLeaseOvrClassWeight": svcDhcpLeaseOvrClassWeight,
       "svcTlsSpbTableLastChanged": svcTlsSpbTableLastChanged,
       "svcTlsSpbTable": svcTlsSpbTable,
       "svcTlsSpbEntry": svcTlsSpbEntry,
       "svcTlsSpbRowStatus": svcTlsSpbRowStatus,
       "svcTlsSpbLastChanged": svcTlsSpbLastChanged,
       "svcTlsSpbIsisInstance": svcTlsSpbIsisInstance,
       "svcTlsSpbFid": svcTlsSpbFid,
       "svcTlsSpbL1BridgePriority": svcTlsSpbL1BridgePriority,
       "svcTlsSpbL1FwdTreeTopoUcast": svcTlsSpbL1FwdTreeTopoUcast,
       "svcTlsSpbAdminState": svcTlsSpbAdminState,
       "svcTlsSpbL1FwdTreeTopoMcast": svcTlsSpbL1FwdTreeTopoMcast,
       "svcTlsSpbL1BridgeId": svcTlsSpbL1BridgeId,
       "svcTlsSpbL1McastDesigBridgeId": svcTlsSpbL1McastDesigBridgeId,
       "svcVllBgpTableLastChanged": svcVllBgpTableLastChanged,
       "svcVllBgpTable": svcVllBgpTable,
       "svcVllBgpEntry": svcVllBgpEntry,
       "svcVllBgpRowStatus": svcVllBgpRowStatus,
       "svcVllBgpLastChanged": svcVllBgpLastChanged,
       "svcVllBgpVsiRD": svcVllBgpVsiRD,
       "svcVllBgpExportRteTarget": svcVllBgpExportRteTarget,
       "svcVllBgpImportRteTarget": svcVllBgpImportRteTarget,
       "svcVllBgpAutoRD": svcVllBgpAutoRD,
       "svcVllBgpOperRD": svcVllBgpOperRD,
       "svcVllBgpOperRDType": svcVllBgpOperRDType,
       "svcVllBgpOperImportRteTgtOrigin": svcVllBgpOperImportRteTgtOrigin,
       "svcVllBgpOperImportRteTarget": svcVllBgpOperImportRteTarget,
       "svcVllBgpOperExportRteTgtOrigin": svcVllBgpOperExportRteTgtOrigin,
       "svcVllBgpOperExportRteTarget": svcVllBgpOperExportRteTarget,
       "svcVllBgpVsiExportPolicy1": svcVllBgpVsiExportPolicy1,
       "svcVllBgpVsiExportPolicy2": svcVllBgpVsiExportPolicy2,
       "svcVllBgpVsiExportPolicy3": svcVllBgpVsiExportPolicy3,
       "svcVllBgpVsiExportPolicy4": svcVllBgpVsiExportPolicy4,
       "svcVllBgpVsiExportPolicy5": svcVllBgpVsiExportPolicy5,
       "svcVllBgpVsiImportPolicy1": svcVllBgpVsiImportPolicy1,
       "svcVllBgpVsiImportPolicy2": svcVllBgpVsiImportPolicy2,
       "svcVllBgpVsiImportPolicy3": svcVllBgpVsiImportPolicy3,
       "svcVllBgpVsiImportPolicy4": svcVllBgpVsiImportPolicy4,
       "svcVllBgpVsiImportPolicy5": svcVllBgpVsiImportPolicy5,
       "svcVllBgpAdvServiceMtu": svcVllBgpAdvServiceMtu,
       "svcVllSiteIdTblLastChanged": svcVllSiteIdTblLastChanged,
       "svcVllSiteIdTable": svcVllSiteIdTable,
       "svcVllSiteIdEntry": svcVllSiteIdEntry,
       "svcVllSiteIdName": svcVllSiteIdName,
       "svcVllSiteIdRowStatus": svcVllSiteIdRowStatus,
       "svcVllSiteIdLastChanged": svcVllSiteIdLastChanged,
       "svcVllSiteIdAdminStatus": svcVllSiteIdAdminStatus,
       "svcVllSiteIdSiteId": svcVllSiteIdSiteId,
       "svcVllSiteIdPortId": svcVllSiteIdPortId,
       "svcVllSiteIdEncapValue": svcVllSiteIdEncapValue,
       "svcVllSiteIdOperStatus": svcVllSiteIdOperStatus,
       "svcVllSiteIdDesignatedFwdr": svcVllSiteIdDesignatedFwdr,
       "svcVllSiteIdBootTimer": svcVllSiteIdBootTimer,
       "svcVllSiteIdSiteActTimer": svcVllSiteIdSiteActTimer,
       "svcVllSiteIdDfUpTime": svcVllSiteIdDfUpTime,
       "svcVllSiteIdDfChgCnt": svcVllSiteIdDfChgCnt,
       "svcVllSiteIdTimerRemain": svcVllSiteIdTimerRemain,
       "svcVllSiteIdPreference": svcVllSiteIdPreference,
       "svcVllSiteIdActTimerRemain": svcVllSiteIdActTimerRemain,
       "svcVllSiteIdMinDnTimer": svcVllSiteIdMinDnTimer,
       "svcVllSiteIdMinDnTimerRemain": svcVllSiteIdMinDnTimerRemain,
       "svcTlsPmsiTableLastChanged": svcTlsPmsiTableLastChanged,
       "svcTlsPmsiTable": svcTlsPmsiTable,
       "svcTlsPmsiEntry": svcTlsPmsiEntry,
       "svcTlsPmsiRowStatus": svcTlsPmsiRowStatus,
       "svcTlsPmsiLastChanged": svcTlsPmsiLastChanged,
       "svcTlsIPmsiAdminState": svcTlsIPmsiAdminState,
       "svcTlsIPmsiDataDelayIntvl": svcTlsIPmsiDataDelayIntvl,
       "svcTlsIPmsiType": svcTlsIPmsiType,
       "svcTlsIPmsiLspTmpl": svcTlsIPmsiLspTmpl,
       "svcTlsIPmsiRootAndLeaf": svcTlsIPmsiRootAndLeaf,
       "svcTlsIPmsiRemainDataDelayIntvl": svcTlsIPmsiRemainDataDelayIntvl,
       "svcTlsIPmsiLspName": svcTlsIPmsiLspName,
       "svcTlsIPmsiOwner": svcTlsIPmsiOwner,
       "svcTlsIPmsiOperState": svcTlsIPmsiOperState,
       "svcDhcpLeaseWppTable": svcDhcpLeaseWppTable,
       "svcDhcpLeaseWppEntry": svcDhcpLeaseWppEntry,
       "svcDhcpLeaseWppState": svcDhcpLeaseWppState,
       "svcDhcpLeaseWppPortalRouter": svcDhcpLeaseWppPortalRouter,
       "svcDhcpLeaseWppPortalName": svcDhcpLeaseWppPortalName,
       "svcDhcpLeaseWppRestoreOnDiscon": svcDhcpLeaseWppRestoreOnDiscon,
       "svcDhcpLeaseWppIsTriggered": svcDhcpLeaseWppIsTriggered,
       "svcDhcpLeaseWppInitialSubProfile": svcDhcpLeaseWppInitialSubProfile,
       "svcDhcpLeaseWppInitialSLAProfile": svcDhcpLeaseWppInitialSLAProfile,
       "svcDhcpLeaseWppInitialAppProfile": svcDhcpLeaseWppInitialAppProfile,
       "svcDhcpLeaseWppLocalUserDb": svcDhcpLeaseWppLocalUserDb,
       "svcDhcpLeaseWppAuthPolicy": svcDhcpLeaseWppAuthPolicy,
       "svcDhcpLeaseWppPortalGroupName": svcDhcpLeaseWppPortalGroupName,
       "svcIfSapCfgTableLastChanged": svcIfSapCfgTableLastChanged,
       "svcIfSapCfgTable": svcIfSapCfgTable,
       "svcIfSapCfgEntry": svcIfSapCfgEntry,
       "svcIfSapCfgLastMgmtChange": svcIfSapCfgLastMgmtChange,
       "svcIfSapCfgDescription": svcIfSapCfgDescription,
       "svcIfSapCfgDefSubProfile": svcIfSapCfgDefSubProfile,
       "svcIfSapCfgDefSlaProfile": svcIfSapCfgDefSlaProfile,
       "svcIfSapCfgDefAppProfile": svcIfSapCfgDefAppProfile,
       "svcIfSapCfgSubIdentPolicy": svcIfSapCfgSubIdentPolicy,
       "svcIfSapCfgDefSubIdent": svcIfSapCfgDefSubIdent,
       "svcIfSapCfgDefSubIdentString": svcIfSapCfgDefSubIdentString,
       "svcIfSapCfgDefFilterProfile": svcIfSapCfgDefFilterProfile,
       "svcIfSapCfgAntiSpoof": svcIfSapCfgAntiSpoof,
       "svcTlsSpbUserSvcTable": svcTlsSpbUserSvcTable,
       "svcTlsSpbUserSvcEntry": svcTlsSpbUserSvcEntry,
       "svcTlsSpbUserSvcId": svcTlsSpbUserSvcId,
       "svcTlsSpbUserSvcLastUpdate": svcTlsSpbUserSvcLastUpdate,
       "tlsSpbFdbTable": tlsSpbFdbTable,
       "tlsSpbFdbEntry": tlsSpbFdbEntry,
       "tlsSpbFdbMacAddr": tlsSpbFdbMacAddr,
       "tlsSpbFdbLocale": tlsSpbFdbLocale,
       "tlsSpbFdbPortId": tlsSpbFdbPortId,
       "tlsSpbFdbEncapValue": tlsSpbFdbEncapValue,
       "tlsSpbFdbSdpId": tlsSpbFdbSdpId,
       "tlsSpbFdbVcId": tlsSpbFdbVcId,
       "tlsSpbFdbState": tlsSpbFdbState,
       "tlsSpbFdbMLocale": tlsSpbFdbMLocale,
       "tlsSpbFdbMPortId": tlsSpbFdbMPortId,
       "tlsSpbFdbMEncapValue": tlsSpbFdbMEncapValue,
       "tlsSpbFdbMSdpId": tlsSpbFdbMSdpId,
       "tlsSpbFdbMVcId": tlsSpbFdbMVcId,
       "tlsSpbFdbMState": tlsSpbFdbMState,
       "tlsSpbFidFdbTable": tlsSpbFidFdbTable,
       "tlsSpbFidFdbEntry": tlsSpbFidFdbEntry,
       "tlsSpbFidFdbMacAddr": tlsSpbFidFdbMacAddr,
       "tlsSpbFidFdbLocale": tlsSpbFidFdbLocale,
       "tlsSpbFidFdbPortId": tlsSpbFidFdbPortId,
       "tlsSpbFidFdbEncapValue": tlsSpbFidFdbEncapValue,
       "tlsSpbFidFdbSdpId": tlsSpbFidFdbSdpId,
       "tlsSpbFidFdbVcId": tlsSpbFidFdbVcId,
       "tlsSpbFidFdbMLocale": tlsSpbFidFdbMLocale,
       "tlsSpbFidFdbMPortId": tlsSpbFidFdbMPortId,
       "tlsSpbFidFdbMEncapValue": tlsSpbFidFdbMEncapValue,
       "tlsSpbFidFdbMSdpId": tlsSpbFidFdbMSdpId,
       "tlsSpbFidFdbMVcId": tlsSpbFidFdbMVcId,
       "tlsSpbFidFdbLastUpdate": tlsSpbFidFdbLastUpdate,
       "tlsSpbFidFdbMLastUpdate": tlsSpbFidFdbMLastUpdate,
       "tlsSpbMFibTable": tlsSpbMFibTable,
       "tlsSpbMFibEntry": tlsSpbMFibEntry,
       "tlsSpbMFibMacAddr": tlsSpbMFibMacAddr,
       "tlsSpbMFibIsid": tlsSpbMFibIsid,
       "tlsSpbMFibState": tlsSpbMFibState,
       "tlsSpbFidMFibTable": tlsSpbFidMFibTable,
       "tlsSpbFidMFibEntry": tlsSpbFidMFibEntry,
       "tlsSpbFidMFibMacAddr": tlsSpbFidMFibMacAddr,
       "tlsSpbFidMFibLocale": tlsSpbFidMFibLocale,
       "tlsSpbFidMFibPortId": tlsSpbFidMFibPortId,
       "tlsSpbFidMFibEncapValue": tlsSpbFidMFibEncapValue,
       "tlsSpbFidMFibSdpId": tlsSpbFidMFibSdpId,
       "tlsSpbFidMFibVcId": tlsSpbFidMFibVcId,
       "tlsSpbFidMFibIsid": tlsSpbFidMFibIsid,
       "tlsSpbFidMFibLastUpdate": tlsSpbFidMFibLastUpdate,
       "svcSpbIfTable": svcSpbIfTable,
       "svcSpbIfEntry": svcSpbIfEntry,
       "svcSpbIfIndex": svcSpbIfIndex,
       "svcSpbIfLocale": svcSpbIfLocale,
       "svcSpbIfPortId": svcSpbIfPortId,
       "svcSpbIfEncapValue": svcSpbIfEncapValue,
       "svcSpbIfSdpId": svcSpbIfSdpId,
       "svcSpbIfVcId": svcSpbIfVcId,
       "svcSpbIfSvcId": svcSpbIfSvcId,
       "svcSpbIfIsisInstance": svcSpbIfIsisInstance,
       "svcArpHostOvrTable": svcArpHostOvrTable,
       "svcArpHostOvrEntry": svcArpHostOvrEntry,
       "svcArpHostOvrDirection": svcArpHostOvrDirection,
       "svcArpHostOvrType": svcArpHostOvrType,
       "svcArpHostOvrTypeId": svcArpHostOvrTypeId,
       "svcArpHostOvrTypeName": svcArpHostOvrTypeName,
       "svcArpHostOvrPIR": svcArpHostOvrPIR,
       "svcArpHostOvrCIR": svcArpHostOvrCIR,
       "svcArpHostOvrCBS": svcArpHostOvrCBS,
       "svcArpHostOvrMBS": svcArpHostOvrMBS,
       "svcArpHostOvrWrrWeight": svcArpHostOvrWrrWeight,
       "svcArpHostOvrSummedCIR": svcArpHostOvrSummedCIR,
       "svcArpHostOvrClassWeight": svcArpHostOvrClassWeight,
       "iesIfIsaTnlNHTableLastChanged": iesIfIsaTnlNHTableLastChanged,
       "iesIfIsaTnlNHTable": iesIfIsaTnlNHTable,
       "iesIfIsaTnlNHEntry": iesIfIsaTnlNHEntry,
       "iesIfIsaTnlNHLastChanged": iesIfIsaTnlNHLastChanged,
       "iesIfIsaTnlNHStaticAddrType": iesIfIsaTnlNHStaticAddrType,
       "iesIfIsaTnlNHStaticAddr": iesIfIsaTnlNHStaticAddr,
       "iesIfIsaTnlNHDynAddrType": iesIfIsaTnlNHDynAddrType,
       "iesIfIsaTnlNHDynAddr": iesIfIsaTnlNHDynAddr,
       "svcBgpVpwsTblLastChanged": svcBgpVpwsTblLastChanged,
       "svcBgpVpwsTable": svcBgpVpwsTable,
       "svcBgpVpwsEntry": svcBgpVpwsEntry,
       "svcBgpVpwsRowStatus": svcBgpVpwsRowStatus,
       "svcBgpVpwsLastChanged": svcBgpVpwsLastChanged,
       "svcBgpVpwsAdminStatus": svcBgpVpwsAdminStatus,
       "svcBgpVpwsVeName": svcBgpVpwsVeName,
       "svcBgpVpwsVeId": svcBgpVpwsVeId,
       "svcBgpVpwsPwTemplateId": svcBgpVpwsPwTemplateId,
       "svcBgpVpwsRemoteVeTblLastChanged": svcBgpVpwsRemoteVeTblLastChanged,
       "svcBgpVpwsRemoteVeTable": svcBgpVpwsRemoteVeTable,
       "svcBgpVpwsRemoteVeEntry": svcBgpVpwsRemoteVeEntry,
       "svcBgpVpwsRemoteVeName": svcBgpVpwsRemoteVeName,
       "svcBgpVpwsRemoteVeRowStatus": svcBgpVpwsRemoteVeRowStatus,
       "svcBgpVpwsRemoteVeLastChanged": svcBgpVpwsRemoteVeLastChanged,
       "svcBgpVpwsRemoteVeId": svcBgpVpwsRemoteVeId,
       "svcTlsIsidPlcyRangeTable": svcTlsIsidPlcyRangeTable,
       "svcTlsIsidPlcyRangeEntry": svcTlsIsidPlcyRangeEntry,
       "svcTlsIsidPlcyRangeId": svcTlsIsidPlcyRangeId,
       "svcTlsIsidPlcyRangeRowStatus": svcTlsIsidPlcyRangeRowStatus,
       "svcTlsIsidPlcyRangeLastChanged": svcTlsIsidPlcyRangeLastChanged,
       "svcTlsIsidPlcyRangeLow": svcTlsIsidPlcyRangeLow,
       "svcTlsIsidPlcyRangeHigh": svcTlsIsidPlcyRangeHigh,
       "svcTlsIsidPlcyRangeUseDefMCTree": svcTlsIsidPlcyRangeUseDefMCTree,
       "svcTlsIsidPlcyRangeAdvLocal": svcTlsIsidPlcyRangeAdvLocal,
       "tlsCondStaticMacTable": tlsCondStaticMacTable,
       "tlsCondStaticMacEntry": tlsCondStaticMacEntry,
       "tlsCondStaticMacAddr": tlsCondStaticMacAddr,
       "tlsCondStaticMacPreference": tlsCondStaticMacPreference,
       "tlsCondStaticMacRowStatus": tlsCondStaticMacRowStatus,
       "tlsCondStaticMacLastChanged": tlsCondStaticMacLastChanged,
       "tlsCondStaticMacLocale": tlsCondStaticMacLocale,
       "tlsCondStaticMacPortId": tlsCondStaticMacPortId,
       "tlsCondStaticMacEncapValue": tlsCondStaticMacEncapValue,
       "tlsCondStaticMacSdpId": tlsCondStaticMacSdpId,
       "tlsCondStaticMacVcId": tlsCondStaticMacVcId,
       "tlsCondStaticMacMonitor": tlsCondStaticMacMonitor,
       "svcTlsFdbMacStatsTable": svcTlsFdbMacStatsTable,
       "svcTlsFdbMacStatsEntry": svcTlsFdbMacStatsEntry,
       "svcTlsFdbMacStatsNumEntries": svcTlsFdbMacStatsNumEntries,
       "svcOperGrpBfdTable": svcOperGrpBfdTable,
       "svcOperGrpBfdEntry": svcOperGrpBfdEntry,
       "svcOperGrpBfdRowStatus": svcOperGrpBfdRowStatus,
       "svcOperGrpBfdLastChgd": svcOperGrpBfdLastChgd,
       "svcOperGrpBfdSvcId": svcOperGrpBfdSvcId,
       "svcOperGrpBfdIfName": svcOperGrpBfdIfName,
       "svcOperGrpBfdDestIpType": svcOperGrpBfdDestIpType,
       "svcOperGrpBfdDestIp": svcOperGrpBfdDestIp,
       "svcOperGrpBfdSrcIpType": svcOperGrpBfdSrcIpType,
       "svcOperGrpBfdSrcIp": svcOperGrpBfdSrcIp,
       "svcOperGrpBfdSessOperState": svcOperGrpBfdSessOperState,
       "svcTlsVxlanTable": svcTlsVxlanTable,
       "svcTlsVxlanEntry": svcTlsVxlanEntry,
       "svcTlsVxlanVni": svcTlsVxlanVni,
       "svcTlsVxlanRowStatus": svcTlsVxlanRowStatus,
       "svcTlsVxlanLastChgd": svcTlsVxlanLastChgd,
       "svcTlsVxlanCreationOrigin": svcTlsVxlanCreationOrigin,
       "svcTlsVxlanNetIngQosPolicyId": svcTlsVxlanNetIngQosPolicyId,
       "svcTlsVxlanNetIngQosFPQGrp": svcTlsVxlanNetIngQosFPQGrp,
       "svcTlsVxlanNetIngQosFPQGrpInstId": svcTlsVxlanNetIngQosFPQGrpInstId,
       "svcTlsVxlanAsstdRepl": svcTlsVxlanAsstdRepl,
       "svcTlsVxlanARActTime": svcTlsVxlanARActTime,
       "svcTlsVxlanResProtSrcMac": svcTlsVxlanResProtSrcMac,
       "svcTlsVxlanResProtSrcMacAct": svcTlsVxlanResProtSrcMacAct,
       "svcTlsVxlanInstanceId": svcTlsVxlanInstanceId,
       "svcBgpEvpnTable": svcBgpEvpnTable,
       "svcBgpEvpnEntry": svcBgpEvpnEntry,
       "svcBgpEvpnRowStatus": svcBgpEvpnRowStatus,
       "svcBgpEvpnLastChanged": svcBgpEvpnLastChanged,
       "svcBgpEvpnMacAdvertisement": svcBgpEvpnMacAdvertisement,
       "svcBgpEvpnMacAdvDefaultRoute": svcBgpEvpnMacAdvDefaultRoute,
       "svcBgpEvpnVxlanAdminStatus": svcBgpEvpnVxlanAdminStatus,
       "svcBgpEvpnCreationOrigin": svcBgpEvpnCreationOrigin,
       "svcBgpEvpnMacDupDetNumMoves": svcBgpEvpnMacDupDetNumMoves,
       "svcBgpEvpnMacDupDetWindow": svcBgpEvpnMacDupDetWindow,
       "svcBgpEvpnMacDupDetRetry": svcBgpEvpnMacDupDetRetry,
       "svcBgpEvpnMacDupDetNumDups": svcBgpEvpnMacDupDetNumDups,
       "svcBgpEvpnIpRouteAdvertisement": svcBgpEvpnIpRouteAdvertisement,
       "svcBgpEvpnIpRouteAdverInclHost": svcBgpEvpnIpRouteAdverInclHost,
       "svcBgpEvpnEvi": svcBgpEvpnEvi,
       "svcBgpEvpnCfmMacAdvertisement": svcBgpEvpnCfmMacAdvertisement,
       "svcBgpEvpnIngressRepIncMcastAdv": svcBgpEvpnIngressRepIncMcastAdv,
       "svcBgpEvpnVxlanBgpInstance": svcBgpEvpnVxlanBgpInstance,
       "svcBgpEvpnIncMcastOrigAddrType": svcBgpEvpnIncMcastOrigAddrType,
       "svcBgpEvpnIncMcastOrigAddr": svcBgpEvpnIncMcastOrigAddr,
       "svcBgpEvpnAcceptIvplsEvpnFlush": svcBgpEvpnAcceptIvplsEvpnFlush,
       "svcBgpEvpnMacDupBlkHoleDupMac": svcBgpEvpnMacDupBlkHoleDupMac,
       "svcBgpEvpnVxlanSendEvpnEncap": svcBgpEvpnVxlanSendEvpnEncap,
       "svcBgpEvpnVxlanSendImetIrOnNdf": svcBgpEvpnVxlanSendImetIrOnNdf,
       "svcBgpEvpnVxlanMaxEcmpRoutes": svcBgpEvpnVxlanMaxEcmpRoutes,
       "svcBgpEvpnSelMcastAdvertise": svcBgpEvpnSelMcastAdvertise,
       "svcBgpEvpnIpRouteAdvDomainId": svcBgpEvpnIpRouteAdvDomainId,
       "tmnxIesIfRtrSolicitTable": tmnxIesIfRtrSolicitTable,
       "tmnxIesIfRtrSolicitEntry": tmnxIesIfRtrSolicitEntry,
       "tmnxIesIfRtrSolLastMgmtChange": tmnxIesIfRtrSolLastMgmtChange,
       "tmnxIesIfRtrSolAdminStatus": tmnxIesIfRtrSolAdminStatus,
       "tmnxIesIfRtrSolUserDb": tmnxIesIfRtrSolUserDb,
       "tmnxIesIfRtrSolMinAuthInterval": tmnxIesIfRtrSolMinAuthInterval,
       "tmnxIesIfRtrSolInactivityTimer": tmnxIesIfRtrSolInactivityTimer,
       "svcVsdDomainTable": svcVsdDomainTable,
       "svcVsdDomainEntry": svcVsdDomainEntry,
       "svcVsdDomainRowStatus": svcVsdDomainRowStatus,
       "svcVsdDomainDescription": svcVsdDomainDescription,
       "svcVsdDomainType": svcVsdDomainType,
       "svcVsdDomainAdminState": svcVsdDomainAdminState,
       "svcVsdDomainCreationOrigin": svcVsdDomainCreationOrigin,
       "svcVsdDomainLastErrStr": svcVsdDomainLastErrStr,
       "svcVsdDomainVsdLastErrStr": svcVsdDomainVsdLastErrStr,
       "svcVsdDomainRecParams": svcVsdDomainRecParams,
       "svcVsdDomainExecParams": svcVsdDomainExecParams,
       "svcTlsProxyArpTable": svcTlsProxyArpTable,
       "svcTlsProxyArpEntry": svcTlsProxyArpEntry,
       "svcTlsProxyArpIpAddrType": svcTlsProxyArpIpAddrType,
       "svcTlsProxyArpIpAddr": svcTlsProxyArpIpAddr,
       "svcTlsProxyArpMacAddr": svcTlsProxyArpMacAddr,
       "svcTlsProxyArpType": svcTlsProxyArpType,
       "svcTlsProxyArpLastChgd": svcTlsProxyArpLastChgd,
       "svcTlsProxyArpStatus": svcTlsProxyArpStatus,
       "svcVsdDomainToSvcTable": svcVsdDomainToSvcTable,
       "svcVsdDomainToSvcEntry": svcVsdDomainToSvcEntry,
       "svcVsdDomainToSvcRowStatus": svcVsdDomainToSvcRowStatus,
       "svcVsdDomainToSvcCreationOrigin": svcVsdDomainToSvcCreationOrigin,
       "svcBgpEvpnDetDupMacTable": svcBgpEvpnDetDupMacTable,
       "svcBgpEvpnDetDupMacEntry": svcBgpEvpnDetDupMacEntry,
       "svcBgpEvpnDetDupMacAddress": svcBgpEvpnDetDupMacAddress,
       "svcBgpEvpnDetDupMacTime": svcBgpEvpnDetDupMacTime,
       "svcVTEPTable": svcVTEPTable,
       "svcVTEPEntry": svcVTEPEntry,
       "svcVTEPAddrType": svcVTEPAddrType,
       "svcVTEPAddress": svcVTEPAddress,
       "svcVTEPNumEgrVNIs": svcVTEPNumEgrVNIs,
       "svcVTEPOperState": svcVTEPOperState,
       "svcVTEPNumVxlanESDest": svcVTEPNumVxlanESDest,
       "svcVTEPNumVxlanNonESDest": svcVTEPNumVxlanNonESDest,
       "svcTlsVTEPEgrVNITable": svcTlsVTEPEgrVNITable,
       "svcTlsVTEPEgrVNIEntry": svcTlsVTEPEgrVNIEntry,
       "svcTlsVTEPEgrVNIVTEPAddrType": svcTlsVTEPEgrVNIVTEPAddrType,
       "svcTlsVTEPEgrVNIVTEPAddress": svcTlsVTEPEgrVNIVTEPAddress,
       "svcTlsVTEPEgrVNIEgrVNI": svcTlsVTEPEgrVNIEgrVNI,
       "svcTlsVTEPEgrVNINumMACs": svcTlsVTEPEgrVNINumMACs,
       "svcTlsVTEPEgrVNIInMcastList": svcTlsVTEPEgrVNIInMcastList,
       "svcTlsVTEPEgrVNIOperState": svcTlsVTEPEgrVNIOperState,
       "svcTlsVTEPEgrVNIL2EsPbr": svcTlsVTEPEgrVNIL2EsPbr,
       "svcTlsVTEPEgrVNIMcast": svcTlsVTEPEgrVNIMcast,
       "svcVTEPEgrVNITable": svcVTEPEgrVNITable,
       "svcVTEPEgrVNIEntry": svcVTEPEgrVNIEntry,
       "svcVTEPEgrVNIVTEPAddrType": svcVTEPEgrVNIVTEPAddrType,
       "svcVTEPEgrVNIVTEPAddress": svcVTEPEgrVNIVTEPAddress,
       "svcVTEPEgrVNIEgrVNI": svcVTEPEgrVNIEgrVNI,
       "svcVTEPEgrVNISvcId": svcVTEPEgrVNISvcId,
       "svcTlsPbbMldSnpgMRtrTable": svcTlsPbbMldSnpgMRtrTable,
       "svcTlsPbbMldSnpgMRtrEntry": svcTlsPbbMldSnpgMRtrEntry,
       "svcTlsPbbMldSnpgMRtrSvcIdIVpls": svcTlsPbbMldSnpgMRtrSvcIdIVpls,
       "svcTlsPbbMldSnpgMRtrSvcIdBVpls": svcTlsPbbMldSnpgMRtrSvcIdBVpls,
       "svcTlsPbbMldSnpgMRtrMacName": svcTlsPbbMldSnpgMRtrMacName,
       "svcTlsPbbMldSnpgMRtrRowStatus": svcTlsPbbMldSnpgMRtrRowStatus,
       "svcTlsPbbMldSnpgMRtrLastCh": svcTlsPbbMldSnpgMRtrLastCh,
       "tmnxSvcIesIfIpoeTable": tmnxSvcIesIfIpoeTable,
       "tmnxSvcIesIfIpoeEntry": tmnxSvcIesIfIpoeEntry,
       "tmnxSvcIesIfIpoeLastChange": tmnxSvcIesIfIpoeLastChange,
       "tmnxSvcIesIfIpoeAdminState": tmnxSvcIesIfIpoeAdminState,
       "tmnxSvcIesIfIpoeDescription": tmnxSvcIesIfIpoeDescription,
       "tmnxSvcIesIfIpoePolicy": tmnxSvcIesIfIpoePolicy,
       "tmnxSvcIesIfIpoeUserDb": tmnxSvcIesIfIpoeUserDb,
       "tmnxSvcIesIfIpoeSessionLimit": tmnxSvcIesIfIpoeSessionLimit,
       "tmnxSvcIesIfIpoeSapSessionLimit": tmnxSvcIesIfIpoeSapSessionLimit,
       "tmnxSvcIesIfIpoeMinAuthInterval": tmnxSvcIesIfIpoeMinAuthInterval,
       "tmnxSvcIesIfIpoeForceAuth": tmnxSvcIesIfIpoeForceAuth,
       "tmnxSvcIesIfIpoeRadSessTimeout": tmnxSvcIesIfIpoeRadSessTimeout,
       "tmnxSvcIesIfIpoeStatelessRed": tmnxSvcIesIfIpoeStatelessRed,
       "svcVsdDomainStatTable": svcVsdDomainStatTable,
       "svcVsdDomainStatEntry": svcVsdDomainStatEntry,
       "svcVsdDomainStatCfgChgEvtRcvd": svcVsdDomainStatCfgChgEvtRcvd,
       "svcVsdDomainStatLastCfgChgEvt": svcVsdDomainStatLastCfgChgEvt,
       "svcVsdDomainStatCfgUpdRcvd": svcVsdDomainStatCfgUpdRcvd,
       "svcVsdDomainStatLastCfgUpdRcvd": svcVsdDomainStatLastCfgUpdRcvd,
       "svcVsdDomainStatLastCfgUpdDone": svcVsdDomainStatLastCfgUpdDone,
       "svcVsdDomainStatCfgSuccess": svcVsdDomainStatCfgSuccess,
       "svcVsdDomainStatCfgFailed": svcVsdDomainStatCfgFailed,
       "svcTlsProxyArpCfgTable": svcTlsProxyArpCfgTable,
       "svcTlsProxyArpCfgEntry": svcTlsProxyArpCfgEntry,
       "svcTlsProxyArpCfgRowStatus": svcTlsProxyArpCfgRowStatus,
       "svcTlsProxyArpCfgLastChgd": svcTlsProxyArpCfgLastChgd,
       "svcTlsProxyArpCfgAdminState": svcTlsProxyArpCfgAdminState,
       "svcTlsProxyArpDynPopulate": svcTlsProxyArpDynPopulate,
       "svcTlsProxyArpAgeTime": svcTlsProxyArpAgeTime,
       "svcTlsProxyArpSendRefresh": svcTlsProxyArpSendRefresh,
       "svcTlsProxyArpAntiSpoofingMac": svcTlsProxyArpAntiSpoofingMac,
       "svcTlsProxyArpDupDetectWindow": svcTlsProxyArpDupDetectWindow,
       "svcTlsProxyArpAntiSpoofNumMoves": svcTlsProxyArpAntiSpoofNumMoves,
       "svcTlsProxyArpAntiSpoofHoldDown": svcTlsProxyArpAntiSpoofHoldDown,
       "svcTlsProxyArpUnknReqFloodEvpn": svcTlsProxyArpUnknReqFloodEvpn,
       "svcTlsProxyArpTableSize": svcTlsProxyArpTableSize,
       "svcTlsProxyArpGarpFloodEvpn": svcTlsProxyArpGarpFloodEvpn,
       "svcTlsProxyArpCfgStaticBH": svcTlsProxyArpCfgStaticBH,
       "svcTlsProxyArpCfgRouteTag": svcTlsProxyArpCfgRouteTag,
       "svcVprnInfoTable": svcVprnInfoTable,
       "svcVprnInfoEntry": svcVprnInfoEntry,
       "svcVprnInfoEntryLastChanged": svcVprnInfoEntryLastChanged,
       "svcNetIngQosPolicyId": svcNetIngQosPolicyId,
       "svcNetIngQosFPQGrp": svcNetIngQosFPQGrp,
       "svcNetIngQosFPQGrpInstanceId": svcNetIngQosFPQGrpInstanceId,
       "svcNetIngIPFilterId": svcNetIngIPFilterId,
       "svcNetIngIPv6FilterId": svcNetIngIPv6FilterId,
       "svcNetIngUrpfCheckState": svcNetIngUrpfCheckState,
       "svcNetIngIngressClassPlcy": svcNetIngIngressClassPlcy,
       "svcTlsProxyArpStaticTable": svcTlsProxyArpStaticTable,
       "svcTlsProxyArpStaticEntry": svcTlsProxyArpStaticEntry,
       "svcTlsProxyArpStaticInetAddrType": svcTlsProxyArpStaticInetAddrType,
       "svcTlsProxyArpStaticInetAddress": svcTlsProxyArpStaticInetAddress,
       "svcTlsProxyArpStaticRowStatus": svcTlsProxyArpStaticRowStatus,
       "svcTlsProxyArpStaticLastChgd": svcTlsProxyArpStaticLastChgd,
       "svcTlsProxyArpStaticMac": svcTlsProxyArpStaticMac,
       "svcTlsProxyNdCfgTable": svcTlsProxyNdCfgTable,
       "svcTlsProxyNdCfgEntry": svcTlsProxyNdCfgEntry,
       "svcTlsProxyNdCfgRowStatus": svcTlsProxyNdCfgRowStatus,
       "svcTlsProxyNdCfgLastChgd": svcTlsProxyNdCfgLastChgd,
       "svcTlsProxyNdCfgAdminState": svcTlsProxyNdCfgAdminState,
       "svcTlsProxyNdDynPopulate": svcTlsProxyNdDynPopulate,
       "svcTlsProxyNdAgeTime": svcTlsProxyNdAgeTime,
       "svcTlsProxyNdSendRefresh": svcTlsProxyNdSendRefresh,
       "svcTlsProxyNdAntiSpoofingMac": svcTlsProxyNdAntiSpoofingMac,
       "svcTlsProxyNdDupDetectWindow": svcTlsProxyNdDupDetectWindow,
       "svcTlsProxyNdAntiSpoofNumMoves": svcTlsProxyNdAntiSpoofNumMoves,
       "svcTlsProxyNdAntiSpoofHoldDown": svcTlsProxyNdAntiSpoofHoldDown,
       "svcTlsProxyNdUnknSolFloodEvpn": svcTlsProxyNdUnknSolFloodEvpn,
       "svcTlsProxyNdTableSize": svcTlsProxyNdTableSize,
       "svcTlsProxyNdRtrUnSolNAFloodEvpn": svcTlsProxyNdRtrUnSolNAFloodEvpn,
       "svcTlsProxyNdHstUnSolNAFloodEvpn": svcTlsProxyNdHstUnSolNAFloodEvpn,
       "svcTlsProxyNdEvpnNdAdvRouter": svcTlsProxyNdEvpnNdAdvRouter,
       "svcTlsProxyNdCfgStaticBH": svcTlsProxyNdCfgStaticBH,
       "svcTlsProxyNdCfgRouteTag": svcTlsProxyNdCfgRouteTag,
       "svcTlsProxyNdStaticTable": svcTlsProxyNdStaticTable,
       "svcTlsProxyNdStaticEntry": svcTlsProxyNdStaticEntry,
       "svcTlsProxyNdStaticInetAddrType": svcTlsProxyNdStaticInetAddrType,
       "svcTlsProxyNdStaticInetAddress": svcTlsProxyNdStaticInetAddress,
       "svcTlsProxyNdStaticRowStatus": svcTlsProxyNdStaticRowStatus,
       "svcTlsProxyNdStaticLastChgd": svcTlsProxyNdStaticLastChgd,
       "svcTlsProxyNdStaticMac": svcTlsProxyNdStaticMac,
       "svcTlsProxyNdStaticIsRouter": svcTlsProxyNdStaticIsRouter,
       "svcTlsProxyNdTable": svcTlsProxyNdTable,
       "svcTlsProxyNdEntry": svcTlsProxyNdEntry,
       "svcTlsProxyNdIpAddrType": svcTlsProxyNdIpAddrType,
       "svcTlsProxyNdIpAddr": svcTlsProxyNdIpAddr,
       "svcTlsProxyNdMacAddr": svcTlsProxyNdMacAddr,
       "svcTlsProxyNdType": svcTlsProxyNdType,
       "svcTlsProxyNdLastChgd": svcTlsProxyNdLastChgd,
       "svcTlsProxyNdStatus": svcTlsProxyNdStatus,
       "svcTlsProxyNdIsRouter": svcTlsProxyNdIsRouter,
       "svcVsdGlobalObjs": svcVsdGlobalObjs,
       "svcVsdServiceRangeStart": svcVsdServiceRangeStart,
       "svcVsdServiceRangeEnd": svcVsdServiceRangeEnd,
       "svcBgpEvpnMplsTable": svcBgpEvpnMplsTable,
       "svcBgpEvpnMplsEntry": svcBgpEvpnMplsEntry,
       "svcBgpEvpnMplsLastChanged": svcBgpEvpnMplsLastChanged,
       "svcBgpEvpnMplsForceVlanVcFwding": svcBgpEvpnMplsForceVlanVcFwding,
       "svcBgpEvpnMplsControlWord": svcBgpEvpnMplsControlWord,
       "svcBgpEvpnMplsShgName": svcBgpEvpnMplsShgName,
       "svcBgpEvpnMplsIngressRepBumLabel": svcBgpEvpnMplsIngressRepBumLabel,
       "svcBgpEvpnMplsMaxEcmpRoutes": svcBgpEvpnMplsMaxEcmpRoutes,
       "svcBgpEvpnMplsIngressLabel": svcBgpEvpnMplsIngressLabel,
       "svcBgpEvpnMplsIngressBumLabel": svcBgpEvpnMplsIngressBumLabel,
       "svcBgpEvpnMplsAdminState": svcBgpEvpnMplsAdminState,
       "svcBgpEvpnMplsEntropyLabel": svcBgpEvpnMplsEntropyLabel,
       "svcBgpEvpnMplsResProtSrcMac": svcBgpEvpnMplsResProtSrcMac,
       "svcBgpEvpnMplsResProtSrcMacAct": svcBgpEvpnMplsResProtSrcMacAct,
       "svcBgpEvpnMplsBgpInstance": svcBgpEvpnMplsBgpInstance,
       "svcBgpEvpnMplsEvpnEncapMpls": svcBgpEvpnMplsEvpnEncapMpls,
       "svcBgpEvpnMplsEvpnEncapMplsoUdp": svcBgpEvpnMplsEvpnEncapMplsoUdp,
       "svcBgpEvpnMplsForceQinqVcFwding": svcBgpEvpnMplsForceQinqVcFwding,
       "svcEvpnMplsTEPTable": svcEvpnMplsTEPTable,
       "svcEvpnMplsTEPEntry": svcEvpnMplsTEPEntry,
       "svcEvpnMplsTEPAddrType": svcEvpnMplsTEPAddrType,
       "svcEvpnMplsTEPAddress": svcEvpnMplsTEPAddress,
       "svcEvpnMplsTEPNumEvpnMplsDest": svcEvpnMplsTEPNumEvpnMplsDest,
       "svcEvpnMplsTEPNumESDest": svcEvpnMplsTEPNumESDest,
       "svcEvpnMplsTEPNumESBMacDest": svcEvpnMplsTEPNumESBMacDest,
       "svcTlsBgpEvpnAutoBindTnlTable": svcTlsBgpEvpnAutoBindTnlTable,
       "svcTlsBgpEvpnAutoBindTnlEntry": svcTlsBgpEvpnAutoBindTnlEntry,
       "svcTlsBgpEvpnAutoBindTnlLastChg": svcTlsBgpEvpnAutoBindTnlLastChg,
       "svcTlsBgpEvpnAutoBindTnlLdp": svcTlsBgpEvpnAutoBindTnlLdp,
       "svcTlsBgpEvpnAutoBindTnlRsvpTe": svcTlsBgpEvpnAutoBindTnlRsvpTe,
       "svcTlsBgpEvpnAutoBindTnlSrIsis": svcTlsBgpEvpnAutoBindTnlSrIsis,
       "svcTlsBgpEvpnAutoBindTnlSrOspf": svcTlsBgpEvpnAutoBindTnlSrOspf,
       "svcTlsBgpEvpnAutoBndTnlStatus": svcTlsBgpEvpnAutoBndTnlStatus,
       "svcTlsBgpEvpnAutoBindTnlBgp": svcTlsBgpEvpnAutoBindTnlBgp,
       "svcTlsBgpEvpnAutoBindTnlSrTe": svcTlsBgpEvpnAutoBindTnlSrTe,
       "svcTlsBgpEvpnAutoBindTnlUdp": svcTlsBgpEvpnAutoBindTnlUdp,
       "svcVprnBgpAutoBindTable": svcVprnBgpAutoBindTable,
       "svcVprnBgpAutoBindEntry": svcVprnBgpAutoBindEntry,
       "svcVprnBgpAutoBindLastChg": svcVprnBgpAutoBindLastChg,
       "svcVprnBgpAutoBindLdp": svcVprnBgpAutoBindLdp,
       "svcVprnBgpAutoBindRsvpTe": svcVprnBgpAutoBindRsvpTe,
       "svcVprnBgpAutoBindSrIsis": svcVprnBgpAutoBindSrIsis,
       "svcVprnBgpAutoBindSrOspf": svcVprnBgpAutoBindSrOspf,
       "svcVprnBgpAutoBindGre": svcVprnBgpAutoBindGre,
       "svcVprnBgpAutoBindTnlStatus": svcVprnBgpAutoBindTnlStatus,
       "svcVprnBgpAutoBindSrTe": svcVprnBgpAutoBindSrTe,
       "svcVprnBgpAutoBindBgp": svcVprnBgpAutoBindBgp,
       "svcVprnBgpAutoBindUdp": svcVprnBgpAutoBindUdp,
       "svcVprnBgpAutoBindWeightedEcmp": svcVprnBgpAutoBindWeightedEcmp,
       "svcVprnBgpAutoBindMaxEcmpRoutes": svcVprnBgpAutoBindMaxEcmpRoutes,
       "svcVprnBgpAutoBindAdminTags": svcVprnBgpAutoBindAdminTags,
       "svcVprnBgpAutoBindRibApi": svcVprnBgpAutoBindRibApi,
       "svcVprnBgpAutoBindMplsFwdPlcy": svcVprnBgpAutoBindMplsFwdPlcy,
       "svcVprnBgpAutoBindSrPolicy": svcVprnBgpAutoBindSrPolicy,
       "svcVprnBgpAutoBindSrOspf3": svcVprnBgpAutoBindSrOspf3,
       "svcVprnBgpAutoBindFlexAlgoFb": svcVprnBgpAutoBindFlexAlgoFb,
       "tlsMFibNgTable": tlsMFibNgTable,
       "tlsMFibNgEntry": tlsMFibNgEntry,
       "tlsMFibNgEntryType": tlsMFibNgEntryType,
       "tlsMFibNgGrpMacAddr": tlsMFibNgGrpMacAddr,
       "tlsMFibNgGrpInetAddrType": tlsMFibNgGrpInetAddrType,
       "tlsMFibNgGrpInetAddr": tlsMFibNgGrpInetAddr,
       "tlsMFibNgSrcInetAddrType": tlsMFibNgSrcInetAddrType,
       "tlsMFibNgSrcInetAddr": tlsMFibNgSrcInetAddr,
       "tlsMFibNgLocale": tlsMFibNgLocale,
       "tlsMFibNgLocaleId": tlsMFibNgLocaleId,
       "tlsMFibNgFwdOrBlk": tlsMFibNgFwdOrBlk,
       "tlsMFibNgSvcId": tlsMFibNgSvcId,
       "svcBgpAutoRDType1Group": svcBgpAutoRDType1Group,
       "svcBgpAutoRDType1IpAddr": svcBgpAutoRDType1IpAddr,
       "svcBgpAutoRDType1CommValStart": svcBgpAutoRDType1CommValStart,
       "svcBgpAutoRDType1CommValEnd": svcBgpAutoRDType1CommValEnd,
       "svcBgpAutoRDType1InUse": svcBgpAutoRDType1InUse,
       "svcDhcpLeaseRipTable": svcDhcpLeaseRipTable,
       "svcDhcpLeaseRipEntry": svcDhcpLeaseRipEntry,
       "svcDhcpLeaseRipPlcyName": svcDhcpLeaseRipPlcyName,
       "svcDhcpLeaseRipListenerStatus": svcDhcpLeaseRipListenerStatus,
       "svcArpHostRipTable": svcArpHostRipTable,
       "svcArpHostRipEntry": svcArpHostRipEntry,
       "svcArpHostRipPlcyName": svcArpHostRipPlcyName,
       "svcArpHostRipListenerStatus": svcArpHostRipListenerStatus,
       "svcEvpnMplsTEPEgrLblTable": svcEvpnMplsTEPEgrLblTable,
       "svcEvpnMplsTEPEgrLblEntry": svcEvpnMplsTEPEgrLblEntry,
       "svcEvpnMplsTEPEgrLblTEPAddrType": svcEvpnMplsTEPEgrLblTEPAddrType,
       "svcEvpnMplsTEPEgrLblTEPAddress": svcEvpnMplsTEPEgrLblTEPAddress,
       "svcEvpnMplsTEPEgrLblTEPLabel": svcEvpnMplsTEPEgrLblTEPLabel,
       "svcEvpnMplsTEPEgrLblNumMACs": svcEvpnMplsTEPEgrLblNumMACs,
       "svcEvpnMplsTEPEgrLblInMcastList": svcEvpnMplsTEPEgrLblInMcastList,
       "svcEvpnMplsTEPEgrLblLastChanged": svcEvpnMplsTEPEgrLblLastChanged,
       "svcEvpnMplsTEPEgrLblTunnelType": svcEvpnMplsTEPEgrLblTunnelType,
       "svcEvpnMplsTEPEgrLblResType": svcEvpnMplsTEPEgrLblResType,
       "tmnxSvcGrpIfTable": tmnxSvcGrpIfTable,
       "tmnxSvcGrpIfEntry": tmnxSvcGrpIfEntry,
       "tmnxSvcGrpIfParentIfIndex": tmnxSvcGrpIfParentIfIndex,
       "tmnxSvcGrpIfIndex": tmnxSvcGrpIfIndex,
       "tmnxSvcGrpIfVRouterId": tmnxSvcGrpIfVRouterId,
       "tmnxSvcSysBgpEvpnObjs": tmnxSvcSysBgpEvpnObjs,
       "tmnxSvcSysBgpEvpnRD": tmnxSvcSysBgpEvpnRD,
       "tmnxSvcSysBgpEvpnOperRD": tmnxSvcSysBgpEvpnOperRD,
       "tmnxSvcSysBgpEvpnRDType": tmnxSvcSysBgpEvpnRDType,
       "tmnxSvcSysBgpEvpnAdEsRtTgtType": tmnxSvcSysBgpEvpnAdEsRtTgtType,
       "tmnxSvcSysBgpEvpnADESRDAddrType": tmnxSvcSysBgpEvpnADESRDAddrType,
       "tmnxSvcSysBgpEvpnADPerESRDIpAddr": tmnxSvcSysBgpEvpnADPerESRDIpAddr,
       "tmnxSvcSysBgpEvpnEtreeLeafLabel": tmnxSvcSysBgpEvpnEtreeLeafLabel,
       "tmnxSvcSysBgpEvpnAllocLeafLabel": tmnxSvcSysBgpEvpnAllocLeafLabel,
       "tmnxSvcSysBgpEvpnMcastLblBlk": tmnxSvcSysBgpEvpnMcastLblBlk,
       "tmnxSvcSysBgpEvpnMcLeaveSyncProp": tmnxSvcSysBgpEvpnMcLeaveSyncProp,
       "tmnxSvcSysBgpEvpnIffAttrUnfmProp": tmnxSvcSysBgpEvpnIffAttrUnfmProp,
       "tmnxSvcSysBgpEvpnIffPthSelection": tmnxSvcSysBgpEvpnIffPthSelection,
       "tmnxSvcSysBgpEvpnLeafLabelValue": tmnxSvcSysBgpEvpnLeafLabelValue,
       "tmnxSvcSysBgpEvpnDpathLgthIgnr": tmnxSvcSysBgpEvpnDpathLgthIgnr,
       "tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi": tmnxSvcSysBgpEvpnAdEsRtTgtExtEvi,
       "tmnxSvcSysEthSegTable": tmnxSvcSysEthSegTable,
       "tmnxSvcSysEthSegEntry": tmnxSvcSysEthSegEntry,
       "tmnxSvcSysEthSegName": tmnxSvcSysEthSegName,
       "tmnxSvcSysEthSegRowStatus": tmnxSvcSysEthSegRowStatus,
       "tmnxSvcSysEthSegLastChg": tmnxSvcSysEthSegLastChg,
       "tmnxSvcSysEthSegAdminState": tmnxSvcSysEthSegAdminState,
       "tmnxSvcSysEthSegEsi": tmnxSvcSysEthSegEsi,
       "tmnxSvcSysEthSegMultiHoming": tmnxSvcSysEthSegMultiHoming,
       "tmnxSvcSysEthSegSvcCarving": tmnxSvcSysEthSegSvcCarving,
       "tmnxSvcSysEthSegLagId": tmnxSvcSysEthSegLagId,
       "tmnxSvcSysEthSegPortId": tmnxSvcSysEthSegPortId,
       "tmnxSvcSysEthSegSdpId": tmnxSvcSysEthSegSdpId,
       "tmnxSvcSysEthSegEsActTimer": tmnxSvcSysEthSegEsActTimer,
       "tmnxSvcSysEthSegSourceBMacLSB": tmnxSvcSysEthSegSourceBMacLSB,
       "tmnxSvcSysEthSegBMacTblSize": tmnxSvcSysEthSegBMacTblSize,
       "tmnxSvcSysEthSegBMacTblEntries": tmnxSvcSysEthSegBMacTblEntries,
       "tmnxSvcSysEthSegOperMultiHoming": tmnxSvcSysEthSegOperMultiHoming,
       "tmnxSvcSysEthSegOperState": tmnxSvcSysEthSegOperState,
       "tmnxSvcSysEthSegSHGLabel": tmnxSvcSysEthSegSHGLabel,
       "tmnxSvcSysEthSegType": tmnxSvcSysEthSegType,
       "tmnxSvcSysESOperServCarvMode": tmnxSvcSysESOperServCarvMode,
       "tmnxSvcSysESEviIsidCfgRngsType": tmnxSvcSysESEviIsidCfgRngsType,
       "tmnxSvcSysEthSegVxlanInstanceId": tmnxSvcSysEthSegVxlanInstanceId,
       "tmnxSvcSysEthSegPwPortId": tmnxSvcSysEthSegPwPortId,
       "tmnxSvcSysEthSegEsOrigIpAddrType": tmnxSvcSysEthSegEsOrigIpAddrType,
       "tmnxSvcSysEthSegEsOrigIpAddr": tmnxSvcSysEthSegEsOrigIpAddr,
       "tmnxSvcSysEthSegRouteNxtHopType": tmnxSvcSysEthSegRouteNxtHopType,
       "tmnxSvcSysEthSegRouteNxtHopAddr": tmnxSvcSysEthSegRouteNxtHopAddr,
       "tmnxSvcSysEthSegOperGrp": tmnxSvcSysEthSegOperGrp,
       "tmnxSvcSysEthSegAutoEsi": tmnxSvcSysEthSegAutoEsi,
       "tmnxSvcSysEthSegOperEsi": tmnxSvcSysEthSegOperEsi,
       "tmnxSvcSysEthSegAcDfCap": tmnxSvcSysEthSegAcDfCap,
       "tmnxSvcSysEthSegPwPortHeadEnd": tmnxSvcSysEthSegPwPortHeadEnd,
       "tmnxIesIfIpv6HostInfoTable": tmnxIesIfIpv6HostInfoTable,
       "tmnxIesIfIpv6HostInfoEntry": tmnxIesIfIpv6HostInfoEntry,
       "tmnxIesIfIpv6IpoeDhcp6Hosts": tmnxIesIfIpv6IpoeDhcp6Hosts,
       "tmnxIesIfIpv6PppDhcp6Hosts": tmnxIesIfIpv6PppDhcp6Hosts,
       "tmnxIesIfIpv6PppSLAACHosts": tmnxIesIfIpv6PppSLAACHosts,
       "tmnxIesIfIpv6IpoeSLAACHosts": tmnxIesIfIpv6IpoeSLAACHosts,
       "tmnxIesIfIpv6StaticHostsUp": tmnxIesIfIpv6StaticHostsUp,
       "svcEthSegCarvEviRngTable": svcEthSegCarvEviRngTable,
       "svcEthSegCarvEviRngEntry": svcEthSegCarvEviRngEntry,
       "svcEthSegCarvEviRngFrom": svcEthSegCarvEviRngFrom,
       "svcEthSegCarvEviRngRowStatus": svcEthSegCarvEviRngRowStatus,
       "svcEthSegCarvEviRngLastChg": svcEthSegCarvEviRngLastChg,
       "svcEthSegCarvEviRngTo": svcEthSegCarvEviRngTo,
       "svcEthSegCarvIsidRngTable": svcEthSegCarvIsidRngTable,
       "svcEthSegCarvIsidRngEntry": svcEthSegCarvIsidRngEntry,
       "svcEthSegCarvIsidRngFrom": svcEthSegCarvIsidRngFrom,
       "svcEthSegCarvIsidRngRowStatus": svcEthSegCarvIsidRngRowStatus,
       "svcEthSegCarvIsidRngLastChg": svcEthSegCarvIsidRngLastChg,
       "svcEthSegCarvIsidRngTo": svcEthSegCarvIsidRngTo,
       "svcEvpnMHEthSegEviTable": svcEvpnMHEthSegEviTable,
       "svcEvpnMHEthSegEviEntry": svcEvpnMHEthSegEviEntry,
       "svcEvpnMHEthSegEvi": svcEvpnMHEthSegEvi,
       "svcEvpnMHEthSegEviIsDF": svcEvpnMHEthSegEviIsDF,
       "svcEvpnMHEthSegEviActTimRem": svcEvpnMHEthSegEviActTimRem,
       "svcEvpnMHEthSegEviSvcId": svcEvpnMHEthSegEviSvcId,
       "svcEvpnMHEthSegEviDFLastChanged": svcEvpnMHEthSegEviDFLastChanged,
       "svcEvpnMHEthSegEviOperRD": svcEvpnMHEthSegEviOperRD,
       "svcEvpnMHEthSegEviDFCndtTable": svcEvpnMHEthSegEviDFCndtTable,
       "svcEvpnMHEthSegEviDFCndtEntry": svcEvpnMHEthSegEviDFCndtEntry,
       "svcEvpnMHEthSegEviDFCndtAddrType": svcEvpnMHEthSegEviDFCndtAddrType,
       "svcEvpnMHEthSegEviDFCndtAddress": svcEvpnMHEthSegEviDFCndtAddress,
       "svcEvpnMHEthSegEviDFCndtAdded": svcEvpnMHEthSegEviDFCndtAdded,
       "svcEvpnMHEthSegEviDFCndtPEOprVal": svcEvpnMHEthSegEviDFCndtPEOprVal,
       "svcEvpnMHEthSegEviDFCndtPEDntPmt": svcEvpnMHEthSegEviDFCndtPEDntPmt,
       "svcTlsProxyArpCountTable": svcTlsProxyArpCountTable,
       "svcTlsProxyArpCountEntry": svcTlsProxyArpCountEntry,
       "svcTlsProxyArpCount": svcTlsProxyArpCount,
       "svcTlsProxyNdCountTable": svcTlsProxyNdCountTable,
       "svcTlsProxyNdCountEntry": svcTlsProxyNdCountEntry,
       "svcTlsProxyNdCount": svcTlsProxyNdCount,
       "tmnxSvcDhcpMRtTable": tmnxSvcDhcpMRtTable,
       "tmnxSvcDhcpMRtEntry": tmnxSvcDhcpMRtEntry,
       "tmnxSvcDhcpMRtInetAddrType": tmnxSvcDhcpMRtInetAddrType,
       "tmnxSvcDhcpMRtInetAddr": tmnxSvcDhcpMRtInetAddr,
       "tmnxSvcDhcpMRtPrefixLen": tmnxSvcDhcpMRtPrefixLen,
       "tmnxSvcDhcpMRtStatus": tmnxSvcDhcpMRtStatus,
       "tmnxSvcDhcpMRtMetric": tmnxSvcDhcpMRtMetric,
       "tmnxSvcDhcpMRtPreference": tmnxSvcDhcpMRtPreference,
       "tmnxSvcDhcpMRtTag": tmnxSvcDhcpMRtTag,
       "svcVsdDynamicSvcObjs": svcVsdDynamicSvcObjs,
       "tmnxVsdRootObjTable": tmnxVsdRootObjTable,
       "tmnxVsdRootObjEntry": tmnxVsdRootObjEntry,
       "tmnxVsdRootObjIndex": tmnxVsdRootObjIndex,
       "tmnxVsdRootObjInstance": tmnxVsdRootObjInstance,
       "tmnxVsdRootObjOrphanTime": tmnxVsdRootObjOrphanTime,
       "tmnxVsdRootObjSnippetName": tmnxVsdRootObjSnippetName,
       "tmnxVsdRootObjSnippetInstance": tmnxVsdRootObjSnippetInstance,
       "tmnxVsdScriptStatsTable": tmnxVsdScriptStatsTable,
       "tmnxVsdScriptStatsEntry": tmnxVsdScriptStatsEntry,
       "tmnxVsdScriptStatsId": tmnxVsdScriptStatsId,
       "tmnxVsdScriptStatsDescr": tmnxVsdScriptStatsDescr,
       "tmnxVsdScriptStatsVal": tmnxVsdScriptStatsVal,
       "tmnxVsdScriptSnippetTable": tmnxVsdScriptSnippetTable,
       "tmnxVsdScriptSnippetEntry": tmnxVsdScriptSnippetEntry,
       "tmnxVsdScriptSnippetName": tmnxVsdScriptSnippetName,
       "tmnxVsdScriptSnippetInstance": tmnxVsdScriptSnippetInstance,
       "tmnxVsdScriptSnippetRefCount": tmnxVsdScriptSnippetRefCount,
       "tmnxVsdScriptSnippetDictLength": tmnxVsdScriptSnippetDictLength,
       "tmnxVsdScriptSnippetRootObjTable": tmnxVsdScriptSnippetRootObjTable,
       "tmnxVsdScriptSnippetRootObjEntry": tmnxVsdScriptSnippetRootObjEntry,
       "tmnxVsdScriptSnippetRootObjIdx": tmnxVsdScriptSnippetRootObjIdx,
       "tmnxVsdScriptSnippetRootObjOid": tmnxVsdScriptSnippetRootObjOid,
       "tmnxVsdScriptSnippetRefTable": tmnxVsdScriptSnippetRefTable,
       "tmnxVsdScriptSnippetRefEntry": tmnxVsdScriptSnippetRefEntry,
       "tmnxVsdScriptSnippetRefIdx": tmnxVsdScriptSnippetRefIdx,
       "tmnxVsdScriptSnippetRefSnipName": tmnxVsdScriptSnippetRefSnipName,
       "tmnxVsdScriptSnippetRefSnipInst": tmnxVsdScriptSnippetRefSnipInst,
       "tmnxVsdScriptSnippetResIdTable": tmnxVsdScriptSnippetResIdTable,
       "tmnxVsdScriptSnippetResIdEntry": tmnxVsdScriptSnippetResIdEntry,
       "tmnxVsdScriptSnippetResIdIdx": tmnxVsdScriptSnippetResIdIdx,
       "tmnxVsdScriptSnippetResIdType": tmnxVsdScriptSnippetResIdType,
       "tmnxVsdScriptSnippetResIdValue": tmnxVsdScriptSnippetResIdValue,
       "tmnxVsdRootObjTableLastCh": tmnxVsdRootObjTableLastCh,
       "tmnxVsdNonStoredRootObjCount": tmnxVsdNonStoredRootObjCount,
       "tmnxVsdSnippetTableLastCh": tmnxVsdSnippetTableLastCh,
       "tmnxVsdSnipRootObjTblLastCh": tmnxVsdSnipRootObjTblLastCh,
       "tmnxVsdSnippetRefTableLastCh": tmnxVsdSnippetRefTableLastCh,
       "tmnxVsdSnippetResIdTblLastCh": tmnxVsdSnippetResIdTblLastCh,
       "tmnxVsdStatsLastClearedTime": tmnxVsdStatsLastClearedTime,
       "svcEvpnMplsESDestTEPTable": svcEvpnMplsESDestTEPTable,
       "svcEvpnMplsESDestTEPEntry": svcEvpnMplsESDestTEPEntry,
       "svcEvpnMplsESDestTEPAddrType": svcEvpnMplsESDestTEPAddrType,
       "svcEvpnMplsESDestTEPAddress": svcEvpnMplsESDestTEPAddress,
       "svcEvpnMplsESDestTEPLabel": svcEvpnMplsESDestTEPLabel,
       "svcEvpnMplsESDestTEPLastChanged": svcEvpnMplsESDestTEPLastChanged,
       "svcEvpnMplsESDestTEPTunnelType": svcEvpnMplsESDestTEPTunnelType,
       "svcEvpnMplsESDestTEPResType": svcEvpnMplsESDestTEPResType,
       "svcEvpnMplsESDestTEPTnlId": svcEvpnMplsESDestTEPTnlId,
       "svcEvpnMHEthSegIsidTable": svcEvpnMHEthSegIsidTable,
       "svcEvpnMHEthSegIsidEntry": svcEvpnMHEthSegIsidEntry,
       "svcEvpnMHEthSegIsid": svcEvpnMHEthSegIsid,
       "svcEvpnMHEthSegIsidIsDF": svcEvpnMHEthSegIsidIsDF,
       "svcEvpnMHEthSegIsidActTimRem": svcEvpnMHEthSegIsidActTimRem,
       "svcEvpnMHEthSegIsidSvcId": svcEvpnMHEthSegIsidSvcId,
       "svcEvpnMHEthSegIsidDFLastChanged": svcEvpnMHEthSegIsidDFLastChanged,
       "svcEvpnMHEthSegIsidDFCndtTable": svcEvpnMHEthSegIsidDFCndtTable,
       "svcEvpnMHEthSegIsidDFCndtEntry": svcEvpnMHEthSegIsidDFCndtEntry,
       "svcEvpnMHEthSegIsidDFCndtAdType": svcEvpnMHEthSegIsidDFCndtAdType,
       "svcEvpnMHEthSegIsidDFCndtAddress": svcEvpnMHEthSegIsidDFCndtAddress,
       "svcEvpnMHEthSegIsidDFCndtAdded": svcEvpnMHEthSegIsidDFCndtAdded,
       "svcEvpnMHEthSegIsidDFCndtPEOprVl": svcEvpnMHEthSegIsidDFCndtPEOprVl,
       "svcEvpnMHEthSegIsidDFCndtPEDtPmt": svcEvpnMHEthSegIsidDFCndtPEDtPmt,
       "svcTlsEsPbrL2Table": svcTlsEsPbrL2Table,
       "svcTlsEsPbrL2Entry": svcTlsEsPbrL2Entry,
       "svcTlsEsPbrL2Esi": svcTlsEsPbrL2Esi,
       "svcTlsEsPbrL2Status": svcTlsEsPbrL2Status,
       "svcTlsEsPbrL2NumUsers": svcTlsEsPbrL2NumUsers,
       "svcTlsEsPbrL2VTEPAddrType": svcTlsEsPbrL2VTEPAddrType,
       "svcTlsEsPbrL2VTEPAddress": svcTlsEsPbrL2VTEPAddress,
       "svcTlsEsPbrL2EgrVNI": svcTlsEsPbrL2EgrVNI,
       "svcEvpnMplsPbbESDestTEPTable": svcEvpnMplsPbbESDestTEPTable,
       "svcEvpnMplsPbbESDestTEPEntry": svcEvpnMplsPbbESDestTEPEntry,
       "svcEvpnMplsPbbESDestTEPBMac": svcEvpnMplsPbbESDestTEPBMac,
       "svcEvpnMplsPbbESDestTEPAddrType": svcEvpnMplsPbbESDestTEPAddrType,
       "svcEvpnMplsPbbESDestTEPAddress": svcEvpnMplsPbbESDestTEPAddress,
       "svcEvpnMplsPbbESDestTEPLabel": svcEvpnMplsPbbESDestTEPLabel,
       "svcEvpnMplsPbbESDestTEPLstChg": svcEvpnMplsPbbESDestTEPLstChg,
       "svcEvpnMplsPbbESDestTEPTnlType": svcEvpnMplsPbbESDestTEPTnlType,
       "svcEvpnMplsPbbESDestTEPResType": svcEvpnMplsPbbESDestTEPResType,
       "svcEvpnMplsPbbESDestTEPTnlId": svcEvpnMplsPbbESDestTEPTnlId,
       "svcSysEthSegBMacTable": svcSysEthSegBMacTable,
       "svcSysEthSegBMacEntry": svcSysEthSegBMacEntry,
       "svcSysEthSegBMacAddress": svcSysEthSegBMacAddress,
       "tmnxSvcDCObjs": tmnxSvcDCObjs,
       "svcVprnEsPbrL3Table": svcVprnEsPbrL3Table,
       "svcVprnEsPbrL3Entry": svcVprnEsPbrL3Entry,
       "svcVprnEsPbrL3SFIpAddrType": svcVprnEsPbrL3SFIpAddrType,
       "svcVprnEsPbrL3SFIpAddr": svcVprnEsPbrL3SFIpAddr,
       "svcVprnEsPbrL3Esi": svcVprnEsPbrL3Esi,
       "svcVprnEsPbrL3IPIfIndex": svcVprnEsPbrL3IPIfIndex,
       "svcVprnEsPbrL3Status": svcVprnEsPbrL3Status,
       "svcVprnEsPbrL3NumUsers": svcVprnEsPbrL3NumUsers,
       "svcVprnEsPbrL3MAC": svcVprnEsPbrL3MAC,
       "svcVprnEsPbrL3VTEPAddrType": svcVprnEsPbrL3VTEPAddrType,
       "svcVprnEsPbrL3VTEPAddress": svcVprnEsPbrL3VTEPAddress,
       "svcVprnEsPbrL3EgrVNI": svcVprnEsPbrL3EgrVNI,
       "svcEvpnMplsESDestTable": svcEvpnMplsESDestTable,
       "svcEvpnMplsESDestEntry": svcEvpnMplsESDestEntry,
       "svcEvpnMplsESDestNumMacs": svcEvpnMplsESDestNumMacs,
       "svcEvpnMplsESDestLastChanged": svcEvpnMplsESDestLastChanged,
       "svcEvpnMplsPbbESegDestTable": svcEvpnMplsPbbESegDestTable,
       "svcEvpnMplsPbbESegDestEntry": svcEvpnMplsPbbESegDestEntry,
       "svcEvpnMplsPbbESegDestNumMacs": svcEvpnMplsPbbESegDestNumMacs,
       "svcEvpnMplsPbbESegDestLstChg": svcEvpnMplsPbbESegDestLstChg,
       "tmnxSvcDhcpLeaseRadClassTable": tmnxSvcDhcpLeaseRadClassTable,
       "tmnxSvcDhcpLeaseRadClassEntry": tmnxSvcDhcpLeaseRadClassEntry,
       "tmnxSvcDhcpLeaseRadClassIndex": tmnxSvcDhcpLeaseRadClassIndex,
       "tmnxSvcDhcpLeaseRadClassAscii": tmnxSvcDhcpLeaseRadClassAscii,
       "tmnxSvcDhcpLeaseRadClass": tmnxSvcDhcpLeaseRadClass,
       "svcVllBgpEvpnAutoBindTnlTable": svcVllBgpEvpnAutoBindTnlTable,
       "svcVllBgpEvpnAutoBindTnlEntry": svcVllBgpEvpnAutoBindTnlEntry,
       "svcVllBgpEvpnAutoBindTnlLastChg": svcVllBgpEvpnAutoBindTnlLastChg,
       "svcVllBgpEvpnAutoBindTnlLdp": svcVllBgpEvpnAutoBindTnlLdp,
       "svcVllBgpEvpnAutoBindTnlRsvpTe": svcVllBgpEvpnAutoBindTnlRsvpTe,
       "svcVllBgpEvpnAutoBindTnlSrIsis": svcVllBgpEvpnAutoBindTnlSrIsis,
       "svcVllBgpEvpnAutoBindTnlSrOspf": svcVllBgpEvpnAutoBindTnlSrOspf,
       "svcVllBgpEvpnAutoBndTnlStatus": svcVllBgpEvpnAutoBndTnlStatus,
       "svcVllBgpEvpnAutoBindTnlBgp": svcVllBgpEvpnAutoBindTnlBgp,
       "svcVllBgpEvpnAutoBindTnlSrTe": svcVllBgpEvpnAutoBindTnlSrTe,
       "svcVllBgpEvpnAutoBindTnlUdp": svcVllBgpEvpnAutoBindTnlUdp,
       "svcBgpEvpnVpwsTable": svcBgpEvpnVpwsTable,
       "svcBgpEvpnVpwsEntry": svcBgpEvpnVpwsEntry,
       "svcBgpEvpnVpwsLastChg": svcBgpEvpnVpwsLastChg,
       "svcBgpEvpnVpwsLclAcName": svcBgpEvpnVpwsLclAcName,
       "svcBgpEvpnVpwsLclAcEthTag": svcBgpEvpnVpwsLclAcEthTag,
       "svcBgpEvpnVpwsRemAcName": svcBgpEvpnVpwsRemAcName,
       "svcBgpEvpnVpwsRemAcEthTag": svcBgpEvpnVpwsRemAcEthTag,
       "tmnxSvcArpHostRadClassTable": tmnxSvcArpHostRadClassTable,
       "tmnxSvcArpHostRadClassEntry": tmnxSvcArpHostRadClassEntry,
       "tmnxSvcArpHostRadClassIndex": tmnxSvcArpHostRadClassIndex,
       "tmnxSvcArpHostRadClassAscii": tmnxSvcArpHostRadClassAscii,
       "tmnxSvcArpHostRadClass": tmnxSvcArpHostRadClass,
       "tmnxSvcSysVxlanObjs": tmnxSvcSysVxlanObjs,
       "tmnxSvcSysVxlanARIpAddrType": tmnxSvcSysVxlanARIpAddrType,
       "tmnxSvcSysVxlanARRepIpAddr": tmnxSvcSysVxlanARRepIpAddr,
       "svcTlsVxlanARLeafReplCndtTable": svcTlsVxlanARLeafReplCndtTable,
       "svcTlsVxlanARLeafReplCndtEntry": svcTlsVxlanARLeafReplCndtEntry,
       "svcTlsVxlanARLeafReplCndtInUse": svcTlsVxlanARLeafReplCndtInUse,
       "svcTlsVxlanARLeafReplCndtActive": svcTlsVxlanARLeafReplCndtActive,
       "svcTlsVxlanARLeafReplCndtPndTime": svcTlsVxlanARLeafReplCndtPndTime,
       "svcEpipePwPortTable": svcEpipePwPortTable,
       "svcEpipePwPortEntry": svcEpipePwPortEntry,
       "svcEpipePwPortRowStatus": svcEpipePwPortRowStatus,
       "svcEpipePwPortLastChngd": svcEpipePwPortLastChngd,
       "svcEpipePwPortId": svcEpipePwPortId,
       "svcEpipePwPortFpeId": svcEpipePwPortFpeId,
       "svcEpipePwPortEgrShapVPort": svcEpipePwPortEgrShapVPort,
       "svcEpipePwPortEgrShapIntDestId": svcEpipePwPortEgrShapIntDestId,
       "svcEpipePwPortMonOperGrp": svcEpipePwPortMonOperGrp,
       "svcEpipePwPortAdminStatus": svcEpipePwPortAdminStatus,
       "svcEpipePwPortOperStatus": svcEpipePwPortOperStatus,
       "svcEpipePwPortDnPeerTldpFault": svcEpipePwPortDnPeerTldpFault,
       "svcEpipePwPortOprUpOnMhStdby": svcEpipePwPortOprUpOnMhStdby,
       "tmnxSvcSysVxlanTunTermTable": tmnxSvcSysVxlanTunTermTable,
       "tmnxSvcSysVxlanTunTermEntry": tmnxSvcSysVxlanTunTermEntry,
       "tmnxSvcSysVxlanTunTermIpAddrType": tmnxSvcSysVxlanTunTermIpAddrType,
       "tmnxSvcSysVxlanTunTermIpAddr": tmnxSvcSysVxlanTunTermIpAddr,
       "tmnxSvcSysVxlanTunTermRowStatus": tmnxSvcSysVxlanTunTermRowStatus,
       "tmnxSvcSysVxlanTunTermLastChg": tmnxSvcSysVxlanTunTermLastChg,
       "tmnxSvcSysVxlanTunTermFpeId": tmnxSvcSysVxlanTunTermFpeId,
       "svcVplsBgpTable": svcVplsBgpTable,
       "svcVplsBgpEntry": svcVplsBgpEntry,
       "svcVplsBgpInstance": svcVplsBgpInstance,
       "svcVplsBgpLastChanged": svcVplsBgpLastChanged,
       "svcVplsBgpVsiRD": svcVplsBgpVsiRD,
       "svcVplsBgpExportRteTarget": svcVplsBgpExportRteTarget,
       "svcVplsBgpVsiExportPolicy1": svcVplsBgpVsiExportPolicy1,
       "svcVplsBgpVsiExportPolicy2": svcVplsBgpVsiExportPolicy2,
       "svcVplsBgpVsiExportPolicy3": svcVplsBgpVsiExportPolicy3,
       "svcVplsBgpVsiExportPolicy4": svcVplsBgpVsiExportPolicy4,
       "svcVplsBgpVsiExportPolicy5": svcVplsBgpVsiExportPolicy5,
       "svcVplsBgpImportRteTarget": svcVplsBgpImportRteTarget,
       "svcVplsBgpVsiImportPolicy1": svcVplsBgpVsiImportPolicy1,
       "svcVplsBgpVsiImportPolicy2": svcVplsBgpVsiImportPolicy2,
       "svcVplsBgpVsiImportPolicy3": svcVplsBgpVsiImportPolicy3,
       "svcVplsBgpVsiImportPolicy4": svcVplsBgpVsiImportPolicy4,
       "svcVplsBgpVsiImportPolicy5": svcVplsBgpVsiImportPolicy5,
       "svcVplsBgpRowStatus": svcVplsBgpRowStatus,
       "svcVplsBgpCreationOrigin": svcVplsBgpCreationOrigin,
       "svcVplsBgpAutoRD": svcVplsBgpAutoRD,
       "svcVplsBgpOperRD": svcVplsBgpOperRD,
       "svcVplsBgpOperRDType": svcVplsBgpOperRDType,
       "svcVplsBgpOperImportRteTgtOrigin": svcVplsBgpOperImportRteTgtOrigin,
       "svcVplsBgpOperImportRteTarget": svcVplsBgpOperImportRteTarget,
       "svcVplsBgpOperExportRteTgtOrigin": svcVplsBgpOperExportRteTgtOrigin,
       "svcVplsBgpOperExportRteTarget": svcVplsBgpOperExportRteTarget,
       "svcVplsBgpAdvServiceMtu": svcVplsBgpAdvServiceMtu,
       "svcProxyArpNdMacListTable": svcProxyArpNdMacListTable,
       "svcProxyArpNdMacListEntry": svcProxyArpNdMacListEntry,
       "svcProxyArpNdMacListName": svcProxyArpNdMacListName,
       "svcProxyArpNdMacListRowStatus": svcProxyArpNdMacListRowStatus,
       "svcProxyArpNdMacListLastChgd": svcProxyArpNdMacListLastChgd,
       "svcProxyArpNdMacListNumMacs": svcProxyArpNdMacListNumMacs,
       "svcProxyArpNdMacListNumAssocs": svcProxyArpNdMacListNumAssocs,
       "svcProxyArpNdMacListMacTable": svcProxyArpNdMacListMacTable,
       "svcProxyArpNdMacListMacEntry": svcProxyArpNdMacListMacEntry,
       "svcProxyArpNdMacListMacAddr": svcProxyArpNdMacListMacAddr,
       "svcProxyArpNdMacListMacRowStatus": svcProxyArpNdMacListMacRowStatus,
       "svcProxyArpNdMacListMacLastChgd": svcProxyArpNdMacListMacLastChgd,
       "svcTlsProxyArpDynCfgTable": svcTlsProxyArpDynCfgTable,
       "svcTlsProxyArpDynCfgEntry": svcTlsProxyArpDynCfgEntry,
       "svcTlsProxyArpDynCfgIpAddrType": svcTlsProxyArpDynCfgIpAddrType,
       "svcTlsProxyArpDynCfgIpAddr": svcTlsProxyArpDynCfgIpAddr,
       "svcTlsProxyArpDynCfgRowStatus": svcTlsProxyArpDynCfgRowStatus,
       "svcTlsProxyArpDynCfgMacList": svcTlsProxyArpDynCfgMacList,
       "svcTlsProxyArpDynCfgResolve": svcTlsProxyArpDynCfgResolve,
       "svcTlsProxyArpDynCfgRemResolve": svcTlsProxyArpDynCfgRemResolve,
       "svcTlsProxyNdDynCfgTable": svcTlsProxyNdDynCfgTable,
       "svcTlsProxyNdDynCfgEntry": svcTlsProxyNdDynCfgEntry,
       "svcTlsProxyNdDynCfgIpAddrType": svcTlsProxyNdDynCfgIpAddrType,
       "svcTlsProxyNdDynCfgIpAddr": svcTlsProxyNdDynCfgIpAddr,
       "svcTlsProxyNdDynCfgRowStatus": svcTlsProxyNdDynCfgRowStatus,
       "svcTlsProxyNdDynCfgMacList": svcTlsProxyNdDynCfgMacList,
       "svcTlsProxyNdDynCfgResolve": svcTlsProxyNdDynCfgResolve,
       "svcTlsProxyNdDynCfgRemResolve": svcTlsProxyNdDynCfgRemResolve,
       "tmnxSvcSysEthSegQTagRngTable": tmnxSvcSysEthSegQTagRngTable,
       "tmnxSvcSysEthSegQTagRngEntry": tmnxSvcSysEthSegQTagRngEntry,
       "tmnxSvcSysEthSegQTagRngFrom": tmnxSvcSysEthSegQTagRngFrom,
       "tmnxSvcSysEthSegQTagRngRowStatus": tmnxSvcSysEthSegQTagRngRowStatus,
       "tmnxSvcSysEthSegQTagRngLastChg": tmnxSvcSysEthSegQTagRngLastChg,
       "tmnxSvcSysEthSegQTagRngTo": tmnxSvcSysEthSegQTagRngTo,
       "tmnxSvcSysEthSegVcIdRngTable": tmnxSvcSysEthSegVcIdRngTable,
       "tmnxSvcSysEthSegVcIdRngEntry": tmnxSvcSysEthSegVcIdRngEntry,
       "tmnxSvcSysEthSegVcIdRngFrom": tmnxSvcSysEthSegVcIdRngFrom,
       "tmnxSvcSysEthSegVcIdRngRowStatus": tmnxSvcSysEthSegVcIdRngRowStatus,
       "tmnxSvcSysEthSegVcIdRngLastChg": tmnxSvcSysEthSegVcIdRngLastChg,
       "tmnxSvcSysEthSegVcIdRngTo": tmnxSvcSysEthSegVcIdRngTo,
       "tmnxESSTagRngTable": tmnxESSTagRngTable,
       "tmnxESSTagRngEntry": tmnxESSTagRngEntry,
       "tmnxESSTagRngFrom": tmnxESSTagRngFrom,
       "tmnxESSTagRngRowStatus": tmnxESSTagRngRowStatus,
       "tmnxESSTagRngLastChg": tmnxESSTagRngLastChg,
       "tmnxESSTagRngTo": tmnxESSTagRngTo,
       "tmnxESSTagCTagRngTable": tmnxESSTagCTagRngTable,
       "tmnxESSTagCTagRngEntry": tmnxESSTagCTagRngEntry,
       "tmnxESSTagCTagRngSTag": tmnxESSTagCTagRngSTag,
       "tmnxESSTagCTagRngFrom": tmnxESSTagCTagRngFrom,
       "tmnxESSTagCTagRngRowStatus": tmnxESSTagCTagRngRowStatus,
       "tmnxESSTagCTagRngLastChg": tmnxESSTagCTagRngLastChg,
       "tmnxESSTagCTagRngTo": tmnxESSTagCTagRngTo,
       "svcSysEvpnESDfPrefElecTable": svcSysEvpnESDfPrefElecTable,
       "svcSysEvpnESDfPrefElecEntry": svcSysEvpnESDfPrefElecEntry,
       "svcSysEvpnESDfPrefElecRowStatus": svcSysEvpnESDfPrefElecRowStatus,
       "svcSysEvpnESDfPrefElecPrefMode": svcSysEvpnESDfPrefElecPrefMode,
       "svcSysEvpnESDfPrefElecValue": svcSysEvpnESDfPrefElecValue,
       "svcSysEvpnESDfPrefElecLastChg": svcSysEvpnESDfPrefElecLastChg,
       "svcSysEvpnESDfPrefElecOperValue": svcSysEvpnESDfPrefElecOperValue,
       "svcSysEvpnESDfPrefElecDntPreempt": svcSysEvpnESDfPrefElecDntPreempt,
       "svcVsdDomainParamsExtTable": svcVsdDomainParamsExtTable,
       "svcVsdDomainParamsExtEntry": svcVsdDomainParamsExtEntry,
       "svcVsdDomainRecParams1": svcVsdDomainRecParams1,
       "svcVsdDomainRecParams2": svcVsdDomainRecParams2,
       "svcVsdDomainRecParams3": svcVsdDomainRecParams3,
       "svcVsdDomainRecParams4": svcVsdDomainRecParams4,
       "svcVsdDomainExecParams1": svcVsdDomainExecParams1,
       "svcVsdDomainExecParams2": svcVsdDomainExecParams2,
       "svcVsdDomainExecParams3": svcVsdDomainExecParams3,
       "svcVsdDomainExecParams4": svcVsdDomainExecParams4,
       "svcEpipeVxlanTable": svcEpipeVxlanTable,
       "svcEpipeVxlanEntry": svcEpipeVxlanEntry,
       "svcEpipeVxlanVni": svcEpipeVxlanVni,
       "svcEpipeVxlanRowStatus": svcEpipeVxlanRowStatus,
       "svcEpipeVxlanLastChgd": svcEpipeVxlanLastChgd,
       "svcEpipeVxlanCreationOrigin": svcEpipeVxlanCreationOrigin,
       "svcEpipeVxlanEgrVTEPIpAddrType": svcEpipeVxlanEgrVTEPIpAddrType,
       "svcEpipeVxlanEgrVTEPIpAddr": svcEpipeVxlanEgrVTEPIpAddr,
       "svcEpipeVxlanEgrVTEPIpOperGrp": svcEpipeVxlanEgrVTEPIpOperGrp,
       "svcEpipeVxlanInstanceId": svcEpipeVxlanInstanceId,
       "svcEpipeVTEPEgrVNITable": svcEpipeVTEPEgrVNITable,
       "svcEpipeVTEPEgrVNIEntry": svcEpipeVTEPEgrVNIEntry,
       "svcEpipeVTEPEgrVNIVTEPAddrType": svcEpipeVTEPEgrVNIVTEPAddrType,
       "svcEpipeVTEPEgrVNIVTEPAddress": svcEpipeVTEPEgrVNIVTEPAddress,
       "svcEpipeVTEPEgrVNIEgrVNI": svcEpipeVTEPEgrVNIEgrVNI,
       "svcEpipeVTEPEgrVNIOperState": svcEpipeVTEPEgrVNIOperState,
       "svcEpipeVTEPEgrVNIVxlanType": svcEpipeVTEPEgrVNIVxlanType,
       "svcEpipeNatOutsideTable": svcEpipeNatOutsideTable,
       "svcEpipeNatOutsideEntry": svcEpipeNatOutsideEntry,
       "svcEpipeNatOSNatGrp": svcEpipeNatOSNatGrp,
       "svcEpipeNatOSRowStatus": svcEpipeNatOSRowStatus,
       "svcEpipeNatOSLastChngd": svcEpipeNatOSLastChngd,
       "svcEpipeNatOSAdminState": svcEpipeNatOSAdminState,
       "svcPbbEvpnIsidRtTable": svcPbbEvpnIsidRtTable,
       "svcPbbEvpnIsidRtEntry": svcPbbEvpnIsidRtEntry,
       "svcPbbEvpnIsidRtIsidRngFrm": svcPbbEvpnIsidRtIsidRngFrm,
       "svcPbbEvpnIsidRtRowStatus": svcPbbEvpnIsidRtRowStatus,
       "svcPbbEvpnIsidRtLastChgd": svcPbbEvpnIsidRtLastChgd,
       "svcPbbEvpnIsidRtIsidRngTo": svcPbbEvpnIsidRtIsidRngTo,
       "svcPbbEvpnIsidRtTgtType": svcPbbEvpnIsidRtTgtType,
       "svcPbbEvpnIsidRtTarget": svcPbbEvpnIsidRtTarget,
       "svcProxyArpNdAssocsTable": svcProxyArpNdAssocsTable,
       "svcProxyArpNdAssocsEntry": svcProxyArpNdAssocsEntry,
       "svcProxyArpNdAssocsIpAddrType": svcProxyArpNdAssocsIpAddrType,
       "svcProxyArpNdAssocsIpAddr": svcProxyArpNdAssocsIpAddr,
       "svcProxyArpNdAssocsLastChgd": svcProxyArpNdAssocsLastChgd,
       "tmnxSvcSysFdbObjs": tmnxSvcSysFdbObjs,
       "tmnxSvcSysFdbTableSize": tmnxSvcSysFdbTableSize,
       "tmnxSvcSysFdbAllocEntries": tmnxSvcSysFdbAllocEntries,
       "tmnxSvcSysFdbGlobalEntries": tmnxSvcSysFdbGlobalEntries,
       "tmnxSvcSysFdbRvplsEntriesInUse": tmnxSvcSysFdbRvplsEntriesInUse,
       "tmnxSvcSysFdbRvplsEntriesAlloc": tmnxSvcSysFdbRvplsEntriesAlloc,
       "tmnxSvcSysFdbEsBmacEntriesInUse": tmnxSvcSysFdbEsBmacEntriesInUse,
       "tmnxSvcSysFdbEsBmacEntriesAlloc": tmnxSvcSysFdbEsBmacEntriesAlloc,
       "tmnxESVxlanInstSvcRngTable": tmnxESVxlanInstSvcRngTable,
       "tmnxESVxlanInstSvcRngEntry": tmnxESVxlanInstSvcRngEntry,
       "tmnxESVxlanInstSvcRngFrm": tmnxESVxlanInstSvcRngFrm,
       "tmnxESVxlanInstSvcRngRowStatus": tmnxESVxlanInstSvcRngRowStatus,
       "tmnxESVxlanInstSvcRngTo": tmnxESVxlanInstSvcRngTo,
       "tmnxESVxlanInstSvcRngLastChgd": tmnxESVxlanInstSvcRngLastChgd,
       "svcSysGreEthBrgdTnlTrmTable": svcSysGreEthBrgdTnlTrmTable,
       "svcSysGreEthBrgdTnlTrmEntry": svcSysGreEthBrgdTnlTrmEntry,
       "svcSysGreEthBrgdTnlTrmIpAddrType": svcSysGreEthBrgdTnlTrmIpAddrType,
       "svcSysGreEthBrgdTnlTrmIpAddr": svcSysGreEthBrgdTnlTrmIpAddr,
       "svcSysGreEthBrgdTnlTrmRowStatus": svcSysGreEthBrgdTnlTrmRowStatus,
       "svcSysGreEthBrgdTnlTrmLastChg": svcSysGreEthBrgdTnlTrmLastChg,
       "svcSysGreEthBrgdTnlTrmFpeId": svcSysGreEthBrgdTnlTrmFpeId,
       "svcPbbLeafSrcBVplsMacAddr": svcPbbLeafSrcBVplsMacAddr,
       "svcVxlanInstEthSegTable": svcVxlanInstEthSegTable,
       "svcVxlanInstEthSegEntry": svcVxlanInstEthSegEntry,
       "svcVxlanInstanceId": svcVxlanInstanceId,
       "svcVxlanInstEthSegName": svcVxlanInstEthSegName,
       "svcVxlanInstEthSegStatus": svcVxlanInstEthSegStatus,
       "svcVxlanInstOperFlagsTable": svcVxlanInstOperFlagsTable,
       "svcVxlanInstOperFlagsEntry": svcVxlanInstOperFlagsEntry,
       "svcVxlanInstOperFlagsInstance": svcVxlanInstOperFlagsInstance,
       "svcVxlanInstOperFlagsMhStandby": svcVxlanInstOperFlagsMhStandby,
       "svcVprnVxlanTunTermTable": svcVprnVxlanTunTermTable,
       "svcVprnVxlanTunTermEntry": svcVprnVxlanTunTermEntry,
       "svcVprnVxlanTunTermIpAddrType": svcVprnVxlanTunTermIpAddrType,
       "svcVprnVxlanTunTermIpAddr": svcVprnVxlanTunTermIpAddr,
       "svcVprnVxlanTunTermRowStatus": svcVprnVxlanTunTermRowStatus,
       "svcVprnVxlanTunTermLastChg": svcVprnVxlanTunTermLastChg,
       "svcVprnVxlanTunTermFpeId": svcVprnVxlanTunTermFpeId,
       "svcEvpnVxlanESDestTEPTable": svcEvpnVxlanESDestTEPTable,
       "svcEvpnVxlanESDestTEPEntry": svcEvpnVxlanESDestTEPEntry,
       "svcEvpnVxlanESDestTEPAddrType": svcEvpnVxlanESDestTEPAddrType,
       "svcEvpnVxlanESDestTEPAddress": svcEvpnVxlanESDestTEPAddress,
       "svcEvpnVxlanESDestTEPVni": svcEvpnVxlanESDestTEPVni,
       "svcEvpnVxlanESDestTEPLastChanged": svcEvpnVxlanESDestTEPLastChanged,
       "svcOperGroupConfigTable": svcOperGroupConfigTable,
       "svcOperGroupConfigEntry": svcOperGroupConfigEntry,
       "svcOperGroupConfigLastChange": svcOperGroupConfigLastChange,
       "svcOperGroupConfigName": svcOperGroupConfigName,
       "svcEvpnVxlanESDestTable": svcEvpnVxlanESDestTable,
       "svcEvpnVxlanESDestEntry": svcEvpnVxlanESDestEntry,
       "svcEvpnVxlanESDestLastChanged": svcEvpnVxlanESDestLastChanged,
       "svcEvpnVxlanESDestNumMacs": svcEvpnVxlanESDestNumMacs,
       "svcBgpEvpnInstTable": svcBgpEvpnInstTable,
       "svcBgpEvpnInstEntry": svcBgpEvpnInstEntry,
       "svcBgpEvpnInstance": svcBgpEvpnInstance,
       "svcBgpEvpnInstRowStatus": svcBgpEvpnInstRowStatus,
       "svcBgpEvpnInstLastChanged": svcBgpEvpnInstLastChanged,
       "svcBgpEvpnInstAdminState": svcBgpEvpnInstAdminState,
       "svcBgpEvpnInstCreationOrigin": svcBgpEvpnInstCreationOrigin,
       "svcBgpEvpnInstType": svcBgpEvpnInstType,
       "svcBgpEvpnVxlanInstance": svcBgpEvpnVxlanInstance,
       "svcBgpEvpnInstDefRtTag": svcBgpEvpnInstDefRtTag,
       "svcBgpEvpnInstEndpoint": svcBgpEvpnInstEndpoint,
       "svcBgpEvpnInstOperGrp": svcBgpEvpnInstOperGrp,
       "svcBgpEvpnInstSrv6Instance": svcBgpEvpnInstSrv6Instance,
       "svcBgpEvpnInstSrv6DefLocator": svcBgpEvpnInstSrv6DefLocator,
       "svcBgpEvpnInstVxlanTable": svcBgpEvpnInstVxlanTable,
       "svcBgpEvpnInstVxlanEntry": svcBgpEvpnInstVxlanEntry,
       "svcBgpEvpnInstVxlanLastChanged": svcBgpEvpnInstVxlanLastChanged,
       "svcBgpEvpnInstVxlanSendEvpnEncap": svcBgpEvpnInstVxlanSendEvpnEncap,
       "svcBgpEvpnInstVxlanSndImtIrOnNdf": svcBgpEvpnInstVxlanSndImtIrOnNdf,
       "svcBgpEvpnInstVxlanMaxEcmpRoutes": svcBgpEvpnInstVxlanMaxEcmpRoutes,
       "svcBgpEvpnInstVxlanMhMode": svcBgpEvpnInstVxlanMhMode,
       "svcBgpEvpnInstVxlanAutoDiscRtAdv": svcBgpEvpnInstVxlanAutoDiscRtAdv,
       "svcBgpEvpnInstVxlanSendTnlEncap": svcBgpEvpnInstVxlanSendTnlEncap,
       "svcBgpEvpnInstVxlnEvi3ByteAutoRT": svcBgpEvpnInstVxlnEvi3ByteAutoRT,
       "svcBgpEvpnInstMplsTable": svcBgpEvpnInstMplsTable,
       "svcBgpEvpnInstMplsEntry": svcBgpEvpnInstMplsEntry,
       "svcBgpEvpnInstMplsLastChanged": svcBgpEvpnInstMplsLastChanged,
       "svcBgpEvpnInstMplsFrceVlanVcFwd": svcBgpEvpnInstMplsFrceVlanVcFwd,
       "svcBgpEvpnInstMplsControlWord": svcBgpEvpnInstMplsControlWord,
       "svcBgpEvpnInstMplsShgName": svcBgpEvpnInstMplsShgName,
       "svcBgpEvpnInstMplsIngRepBumLabel": svcBgpEvpnInstMplsIngRepBumLabel,
       "svcBgpEvpnInstMplsMaxEcmpRoutes": svcBgpEvpnInstMplsMaxEcmpRoutes,
       "svcBgpEvpnInstMplsIngressLabel": svcBgpEvpnInstMplsIngressLabel,
       "svcBgpEvpnInstMplsIngBumLabel": svcBgpEvpnInstMplsIngBumLabel,
       "svcBgpEvpnInstMplsEntropyLabel": svcBgpEvpnInstMplsEntropyLabel,
       "svcBgpEvpnInstMplsResProtSrcMac": svcBgpEvpnInstMplsResProtSrcMac,
       "svcBgpEvpnInstMplsRPSMacAct": svcBgpEvpnInstMplsRPSMacAct,
       "svcBgpEvpnInstMplsEvpnEncapMpls": svcBgpEvpnInstMplsEvpnEncapMpls,
       "svcBgpEvpnInstMplsEvpnEncapMoUdp": svcBgpEvpnInstMplsEvpnEncapMoUdp,
       "svcBgpEvpnInstMplsForceQinqVcFwd": svcBgpEvpnInstMplsForceQinqVcFwd,
       "svcBgpEvpnInstMplsRtNHType": svcBgpEvpnInstMplsRtNHType,
       "svcBgpEvpnInstMplsRtNHAddrType": svcBgpEvpnInstMplsRtNHAddrType,
       "svcBgpEvpnInstMplsRtNHAddr": svcBgpEvpnInstMplsRtNHAddr,
       "svcBgpEvpnInstMplsTnlEncapMpls": svcBgpEvpnInstMplsTnlEncapMpls,
       "svcBgpEvpnInstMplsTnlEncapMoUdp": svcBgpEvpnInstMplsTnlEncapMoUdp,
       "svcBgpEvpnInstMplsEvi3ByteAutoRT": svcBgpEvpnInstMplsEvi3ByteAutoRT,
       "svcBgpEvpnInstMplsMhMode": svcBgpEvpnInstMplsMhMode,
       "svcBgpEvpnInstMplsDynEgrLblLmt": svcBgpEvpnInstMplsDynEgrLblLmt,
       "svcBgpEvpnInstAutoBndTnlTable": svcBgpEvpnInstAutoBndTnlTable,
       "svcBgpEvpnInstAutoBndTnlEntry": svcBgpEvpnInstAutoBndTnlEntry,
       "svcBgpEvpnInstAutoBndTnlLastChg": svcBgpEvpnInstAutoBndTnlLastChg,
       "svcBgpEvpnInstAutoBndTnlLdp": svcBgpEvpnInstAutoBndTnlLdp,
       "svcBgpEvpnInstAutoBndTnlRsvpTe": svcBgpEvpnInstAutoBndTnlRsvpTe,
       "svcBgpEvpnInstAutoBndTnlSrIsis": svcBgpEvpnInstAutoBndTnlSrIsis,
       "svcBgpEvpnInstAutoBndTnlSrOspf": svcBgpEvpnInstAutoBndTnlSrOspf,
       "svcBgpEvpnInstAutoBndTnlStatus": svcBgpEvpnInstAutoBndTnlStatus,
       "svcBgpEvpnInstAutoBndTnlBgp": svcBgpEvpnInstAutoBndTnlBgp,
       "svcBgpEvpnInstAutoBndTnlSrTe": svcBgpEvpnInstAutoBndTnlSrTe,
       "svcBgpEvpnInstAutoBndTnlUdp": svcBgpEvpnInstAutoBndTnlUdp,
       "svcBgpEvpnInstAutoBndTnlTag": svcBgpEvpnInstAutoBndTnlTag,
       "svcBgpEvpnInstAutoBndTnlSrPlcy": svcBgpEvpnInstAutoBndTnlSrPlcy,
       "svcBgpEvpnInstBndTnlMplsFwdPlcy": svcBgpEvpnInstBndTnlMplsFwdPlcy,
       "svcBgpEvpnInstBndTnlRibApi": svcBgpEvpnInstBndTnlRibApi,
       "svcBgpEvpnInstAutoBndTnlSrOspf3": svcBgpEvpnInstAutoBndTnlSrOspf3,
       "svcBgpEvpnInstAutoBndTnlEcmp": svcBgpEvpnInstAutoBndTnlEcmp,
       "svcBgpEvpnInstAutoBndTnlFlxAlgFb": svcBgpEvpnInstAutoBndTnlFlxAlgFb,
       "svcTlsVxInstVTEPEgrVniTable": svcTlsVxInstVTEPEgrVniTable,
       "svcTlsVxInstVTEPEgrVniEntry": svcTlsVxInstVTEPEgrVniEntry,
       "svcTlsVxInstVTEPAddrType": svcTlsVxInstVTEPAddrType,
       "svcTlsVxInstVTEPAddress": svcTlsVxInstVTEPAddress,
       "svcTlsVxInstVTEPEgrVni": svcTlsVxInstVTEPEgrVni,
       "svcTlsVxInstVTEPEgrVniNumMACs": svcTlsVxInstVTEPEgrVniNumMACs,
       "svcTlsVxInstVTEPEgrVniOperState": svcTlsVxInstVTEPEgrVniOperState,
       "svcTlsVxInstVTEPEgrVniL2EsPbr": svcTlsVxInstVTEPEgrVniL2EsPbr,
       "svcTlsVxInstVTEPEgrVniMcast": svcTlsVxInstVTEPEgrVniMcast,
       "svcTlsVxInstVTEPEgrVniVxlanType": svcTlsVxInstVTEPEgrVniVxlanType,
       "svcTlsVxInstVTEPEgrVniSbdMcast": svcTlsVxInstVTEPEgrVniSbdMcast,
       "svcTlsVxlanInstARLfRplCndTable": svcTlsVxlanInstARLfRplCndTable,
       "svcTlsVxlanInstARLfRplCndEntry": svcTlsVxlanInstARLfRplCndEntry,
       "svcTlsVxlanInstARLfRplCndInUse": svcTlsVxlanInstARLfRplCndInUse,
       "svcTlsVxlanInstARLfRplCndActive": svcTlsVxlanInstARLfRplCndActive,
       "svcTlsVxlanInstARLfRplCndPndTime": svcTlsVxlanInstARLfRplCndPndTime,
       "svcEvpnVxlanInstESDstTEPTable": svcEvpnVxlanInstESDstTEPTable,
       "svcEvpnVxlanInstESDstTEPEntry": svcEvpnVxlanInstESDstTEPEntry,
       "svcEvpnVxlanInstESDstTEPAddrType": svcEvpnVxlanInstESDstTEPAddrType,
       "svcEvpnVxlanInstESDstTEPAddress": svcEvpnVxlanInstESDstTEPAddress,
       "svcEvpnVxlanInstESDstTEPVni": svcEvpnVxlanInstESDstTEPVni,
       "svcEvpnVxlanInstESDstTEPLastChg": svcEvpnVxlanInstESDstTEPLastChg,
       "svcEvpnVxlanInstESDestTable": svcEvpnVxlanInstESDestTable,
       "svcEvpnVxlanInstESDestEntry": svcEvpnVxlanInstESDestEntry,
       "svcEvpnVxlanInstESDestLastChgd": svcEvpnVxlanInstESDestLastChgd,
       "svcEvpnVxlanInstESDestNumMacs": svcEvpnVxlanInstESDestNumMacs,
       "svcTlsVxInstTable": svcTlsVxInstTable,
       "svcTlsVxInstEntry": svcTlsVxInstEntry,
       "svcTlsVxInstRowStatus": svcTlsVxInstRowStatus,
       "svcTlsVxInstLastChgd": svcTlsVxInstLastChgd,
       "svcTlsVxInstCreationOrigin": svcTlsVxInstCreationOrigin,
       "svcTlsVxInstNetIngQosPolicyId": svcTlsVxInstNetIngQosPolicyId,
       "svcTlsVxInstNetIngQosFPQGrp": svcTlsVxInstNetIngQosFPQGrp,
       "svcTlsVxInstNetIngQosFPQGrpInst": svcTlsVxInstNetIngQosFPQGrpInst,
       "svcTlsVxInstAsstdRepl": svcTlsVxInstAsstdRepl,
       "svcTlsVxInstARActTime": svcTlsVxInstARActTime,
       "svcTlsVxInstResProtSrcMac": svcTlsVxInstResProtSrcMac,
       "svcTlsVxInstResProtSrcMacAct": svcTlsVxInstResProtSrcMacAct,
       "svcTlsVxInstVni": svcTlsVxInstVni,
       "svcTlsVxInstSrcVTEPSecurity": svcTlsVxInstSrcVTEPSecurity,
       "svcTlsVxInstMacLearning": svcTlsVxInstMacLearning,
       "svcTlsVxInstMacAgeing": svcTlsVxInstMacAgeing,
       "svcTlsVxInstDiscardUnknownSource": svcTlsVxInstDiscardUnknownSource,
       "svcTlsVxInstMacAddressLimit": svcTlsVxInstMacAddressLimit,
       "svcTlsVxInstRxDiscardOnNdf": svcTlsVxInstRxDiscardOnNdf,
       "svcTlsVxInstIgmpSnpgMrouter": svcTlsVxInstIgmpSnpgMrouter,
       "svcTlsVxInstMldSnpgMrouter": svcTlsVxInstMldSnpgMrouter,
       "svcMdAutoIdGroup": svcMdAutoIdGroup,
       "svcMdAutoIdSvcRangeStart": svcMdAutoIdSvcRangeStart,
       "svcMdAutoIdSvcRangeEnd": svcMdAutoIdSvcRangeEnd,
       "svcMdAutoIdCustRangeStart": svcMdAutoIdCustRangeStart,
       "svcMdAutoIdCustRangeEnd": svcMdAutoIdCustRangeEnd,
       "svcMdAutoIdPwTmplRangeStart": svcMdAutoIdPwTmplRangeStart,
       "svcMdAutoIdPwTmplRangeEnd": svcMdAutoIdPwTmplRangeEnd,
       "svcMdAutoIdSvcCount": svcMdAutoIdSvcCount,
       "svcMdAutoIdCustCount": svcMdAutoIdCustCount,
       "svcMdAutoIdPwTmplCount": svcMdAutoIdPwTmplCount,
       "tmnxSvcSysPwPortListTable": tmnxSvcSysPwPortListTable,
       "tmnxSvcSysPwPortListEntry": tmnxSvcSysPwPortListEntry,
       "tmnxSvcSysPwPortListRowStatus": tmnxSvcSysPwPortListRowStatus,
       "svcTlsVxlanInstEgrVTEPTable": svcTlsVxlanInstEgrVTEPTable,
       "svcTlsVxlanInstEgrVTEPEntry": svcTlsVxlanInstEgrVTEPEntry,
       "svcTlsVxlanInstEgrVTEPIpAddrType": svcTlsVxlanInstEgrVTEPIpAddrType,
       "svcTlsVxlanInstEgrVTEPIpAddr": svcTlsVxlanInstEgrVTEPIpAddr,
       "svcTlsVxlanInstEgrVTEPRowStatus": svcTlsVxlanInstEgrVTEPRowStatus,
       "svcEpipeVxInstTable": svcEpipeVxInstTable,
       "svcEpipeVxInstEntry": svcEpipeVxInstEntry,
       "svcEpipeVxInstVni": svcEpipeVxInstVni,
       "svcEpipeVxInstRowStatus": svcEpipeVxInstRowStatus,
       "svcEpipeVxInstLastChgd": svcEpipeVxInstLastChgd,
       "svcEpipeVxInstCreationOrigin": svcEpipeVxInstCreationOrigin,
       "svcEpipeVxInstEgrVTEPIpAddrType": svcEpipeVxInstEgrVTEPIpAddrType,
       "svcEpipeVxInstEgrVTEPIpAddr": svcEpipeVxInstEgrVTEPIpAddr,
       "svcEpipeVxInstEgrVTEPIpOperGrp": svcEpipeVxInstEgrVTEPIpOperGrp,
       "svcVprnAaaObjs": svcVprnAaaObjs,
       "svcVprnTacPlusTable": svcVprnTacPlusTable,
       "svcVprnTacPlusEntry": svcVprnTacPlusEntry,
       "svcVprnTacPlusAdminStatus": svcVprnTacPlusAdminStatus,
       "svcVprnTacPlusRowStatus": svcVprnTacPlusRowStatus,
       "svcVprnTacPlusTimeout": svcVprnTacPlusTimeout,
       "svcVprnTacPlusAccounting": svcVprnTacPlusAccounting,
       "svcVprnTacPlusAcctRecType": svcVprnTacPlusAcctRecType,
       "svcVprnTacPlusAuthorization": svcVprnTacPlusAuthorization,
       "svcVprnTacplusUseTemplate": svcVprnTacplusUseTemplate,
       "svcVprnTacPlusInteractiveAuthen": svcVprnTacPlusInteractiveAuthen,
       "svcVprnTacPlusAuthorUsePrivLvl": svcVprnTacPlusAuthorUsePrivLvl,
       "svcVprnTacPlusLastChanged": svcVprnTacPlusLastChanged,
       "svcVprnTacPlusAccessOpCmd1": svcVprnTacPlusAccessOpCmd1,
       "svcVprnTacPlusServerTable": svcVprnTacPlusServerTable,
       "svcVprnTacPlusServerEntry": svcVprnTacPlusServerEntry,
       "svcVprnTacPlusServerIndex": svcVprnTacPlusServerIndex,
       "svcVprnTacPlusServerSecret": svcVprnTacPlusServerSecret,
       "svcVprnTacPlusServerRowStatus": svcVprnTacPlusServerRowStatus,
       "svcVprnTacPlusServerOperStatus": svcVprnTacPlusServerOperStatus,
       "svcVprnTacPlusServInetAddrType": svcVprnTacPlusServInetAddrType,
       "svcVprnTacPlusServerInetAddress": svcVprnTacPlusServerInetAddress,
       "svcVprnTacPlusServerPort": svcVprnTacPlusServerPort,
       "svcVprnTacPlusServerLastChanged": svcVprnTacPlusServerLastChanged,
       "svcVprnTacPlusPrivLvlMapTable": svcVprnTacPlusPrivLvlMapTable,
       "svcVprnTacPlusPrivLvlMapEntry": svcVprnTacPlusPrivLvlMapEntry,
       "svcVprnTacPlusPrivLvlMapPrivLvl": svcVprnTacPlusPrivLvlMapPrivLvl,
       "svcVprnTacPlusPrivLvlRowStatus": svcVprnTacPlusPrivLvlRowStatus,
       "svcVprnTacPlusPriLvlMapUserProf": svcVprnTacPlusPriLvlMapUserProf,
       "svcVprnTPlusPriLvlMpLastChanged": svcVprnTPlusPriLvlMpLastChanged,
       "svcVprnLdapTable": svcVprnLdapTable,
       "svcVprnLdapConfigEntry": svcVprnLdapConfigEntry,
       "svcVprnLdapAdminState": svcVprnLdapAdminState,
       "svcVprnLdapRowStatus": svcVprnLdapRowStatus,
       "svcVprnLdapOperState": svcVprnLdapOperState,
       "svcVprnLdapRetryAttempts": svcVprnLdapRetryAttempts,
       "svcVprnLdapTimeout": svcVprnLdapTimeout,
       "svcVprnLdapUseTemplate": svcVprnLdapUseTemplate,
       "svcVprnLdapPublicKeyAuth": svcVprnLdapPublicKeyAuth,
       "svcVprnLdapLastChanged": svcVprnLdapLastChanged,
       "svcVprnLdapServerTable": svcVprnLdapServerTable,
       "svcVprnLdapServerEntry": svcVprnLdapServerEntry,
       "svcVprnLdapServerIndex": svcVprnLdapServerIndex,
       "svcVprnLdapServerLastChanged": svcVprnLdapServerLastChanged,
       "svcVprnLdapServerRowStatus": svcVprnLdapServerRowStatus,
       "svcVprnLdapServerAdminState": svcVprnLdapServerAdminState,
       "svcVprnLdapServerOperState": svcVprnLdapServerOperState,
       "svcVprnLdapServerInetAddressType": svcVprnLdapServerInetAddressType,
       "svcVprnLdapServInetAddr": svcVprnLdapServInetAddr,
       "svcVprnLdapServerPort": svcVprnLdapServerPort,
       "svcVprnLdapServBindAuthRtDn": svcVprnLdapServBindAuthRtDn,
       "svcVprnLdapServBindAuthPwd": svcVprnLdapServBindAuthPwd,
       "svcVprnLdapServerName": svcVprnLdapServerName,
       "svcVprnLdapServerSearch": svcVprnLdapServerSearch,
       "svcVprnLdapServerTlsProf": svcVprnLdapServerTlsProf,
       "svcVprnRadiusTable": svcVprnRadiusTable,
       "svcVprnRadiusEntry": svcVprnRadiusEntry,
       "svcVprnRadiusAdminStatus": svcVprnRadiusAdminStatus,
       "svcVprnRadiusRowStatus": svcVprnRadiusRowStatus,
       "svcVprnRadiusAccounting": svcVprnRadiusAccounting,
       "svcVprnRadiusAuthorization": svcVprnRadiusAuthorization,
       "svcVprnRadiusRetryAttempts": svcVprnRadiusRetryAttempts,
       "svcVprnRadiusTimeout": svcVprnRadiusTimeout,
       "svcVprnRadiusPort": svcVprnRadiusPort,
       "svcVprnRadiusAccountingPort": svcVprnRadiusAccountingPort,
       "svcVprnRadiusUseTemplate": svcVprnRadiusUseTemplate,
       "svcVprnRadiusAuthAlgorithm": svcVprnRadiusAuthAlgorithm,
       "svcVprnRadiusInteractiveAuthen": svcVprnRadiusInteractiveAuthen,
       "svcVprnRadiusLastChanged": svcVprnRadiusLastChanged,
       "svcVprnRadiusServerTable": svcVprnRadiusServerTable,
       "svcVprnRadiusServerEntry": svcVprnRadiusServerEntry,
       "svcVprnRadiusServerIndex": svcVprnRadiusServerIndex,
       "svcVprnRadiusServerSecret": svcVprnRadiusServerSecret,
       "svcVprnRadiusServerOperStatus": svcVprnRadiusServerOperStatus,
       "svcVprnRadiusServerRowStatus": svcVprnRadiusServerRowStatus,
       "svcVprnRadiusServerInetAddrType": svcVprnRadiusServerInetAddrType,
       "svcVprnRadiusServerInetAddress": svcVprnRadiusServerInetAddress,
       "svcVprnRadiusServerLastChanged": svcVprnRadiusServerLastChanged,
       "svcVprnRadiusServerTLSClientProf": svcVprnRadiusServerTLSClientProf,
       "svcVprnRadiusServerSecretErr": svcVprnRadiusServerSecretErr,
       "svcVprnRadiusServerTLSClntPrfErr": svcVprnRadiusServerTLSClntPrfErr,
       "svcSysVpnGreSrcIpObjs": svcSysVpnGreSrcIpObjs,
       "svcSysVpnGreSrcIpAddrType": svcSysVpnGreSrcIpAddrType,
       "svcSysVpnGreSrcIpAddr": svcSysVpnGreSrcIpAddr,
       "svcVprnMgmtObjs": svcVprnMgmtObjs,
       "svcVprnServerCtlTable": svcVprnServerCtlTable,
       "svcVprnServerCtlEntry": svcVprnServerCtlEntry,
       "svcVprnEnableServers": svcVprnEnableServers,
       "svcVprnTelnetServerOperStatus": svcVprnTelnetServerOperStatus,
       "svcVprnSSHServerOperStatus": svcVprnSSHServerOperStatus,
       "svcVprnFTPServerOperStatus": svcVprnFTPServerOperStatus,
       "svcVprnTelnet6ServerOperStatus": svcVprnTelnet6ServerOperStatus,
       "svcVprnServerCtlRowStatus": svcVprnServerCtlRowStatus,
       "svcVprnServerCtlLastChanged": svcVprnServerCtlLastChanged,
       "svcEvpnMplsTEPEgrLblTnlTable": svcEvpnMplsTEPEgrLblTnlTable,
       "svcEvpnMplsTEPEgrLblTnlEntry": svcEvpnMplsTEPEgrLblTnlEntry,
       "svcEvpnMplsTEPEgrLblTEPTnlId": svcEvpnMplsTEPEgrLblTEPTnlId,
       "svcEvpnMplsTEPEgrLblTnlLastCh": svcEvpnMplsTEPEgrLblTnlLastCh,
       "svcEvpnMplsTEPEgrLblTnlNumMACs": svcEvpnMplsTEPEgrLblTnlNumMACs,
       "svcEvpnMplsTEPEgrLblTnlInMcList": svcEvpnMplsTEPEgrLblTnlInMcList,
       "svcEvpnMplsTEPEgrLblTnlResType": svcEvpnMplsTEPEgrLblTnlResType,
       "svcEvpnMplsTEPEgrLblTnlSbdMcast": svcEvpnMplsTEPEgrLblTnlSbdMcast,
       "svcEvpnMplsTEPEgrLblMcast": svcEvpnMplsTEPEgrLblMcast,
       "svcRoutedVplsEvpnGWTable": svcRoutedVplsEvpnGWTable,
       "svcRoutedVplsEvpnGWEntry": svcRoutedVplsEvpnGWEntry,
       "svcRoutedVplsEvpnGWRowStatus": svcRoutedVplsEvpnGWRowStatus,
       "svcRoutedVplsEvpnGWLastChgd": svcRoutedVplsEvpnGWLastChgd,
       "svcRoutedVplsEvpnGWAdminState": svcRoutedVplsEvpnGWAdminState,
       "svcRoutedVplsEvpnGWType": svcRoutedVplsEvpnGWType,
       "svcRoutedVplsEvpnGWDrActTimer": svcRoutedVplsEvpnGWDrActTimer,
       "svcRoutedVplsEvpnGWNonDrAtrtTraf": svcRoutedVplsEvpnGWNonDrAtrtTraf,
       "svcRoutedVplsEvpnGWDrState": svcRoutedVplsEvpnGWDrState,
       "svcRoutedVplsEvpnGWDrLstChg": svcRoutedVplsEvpnGWDrLstChg,
       "svcRoutedVplsEvpnGWDrActTimeRem": svcRoutedVplsEvpnGWDrActTimeRem,
       "svcRvplsEvpnArpAdvrtTable": svcRvplsEvpnArpAdvrtTable,
       "svcRvplsEvpnArpAdvrtEntry": svcRvplsEvpnArpAdvrtEntry,
       "svcRvplsEvpnArpAdvrtType": svcRvplsEvpnArpAdvrtType,
       "svcRvplsEvpnArpAdvrtRowStatus": svcRvplsEvpnArpAdvrtRowStatus,
       "svcRvplsEvpnArpAdvrtLastChgd": svcRvplsEvpnArpAdvrtLastChgd,
       "svcRvplsEvpnArpAdvrtRouteTag": svcRvplsEvpnArpAdvrtRouteTag,
       "svcRvplsEvpnNdAdvrtTable": svcRvplsEvpnNdAdvrtTable,
       "svcRvplsEvpnNdAdvrtEntry": svcRvplsEvpnNdAdvrtEntry,
       "svcRvplsEvpnNdAdvrtType": svcRvplsEvpnNdAdvrtType,
       "svcRvplsEvpnNdAdvrtRowStatus": svcRvplsEvpnNdAdvrtRowStatus,
       "svcRvplsEvpnNdAdvrtLastChgd": svcRvplsEvpnNdAdvrtLastChgd,
       "svcRvplsEvpnNdAdvrtRouteTag": svcRvplsEvpnNdAdvrtRouteTag,
       "iesIfRvplsEvpnTable": iesIfRvplsEvpnTable,
       "iesIfRvplsEvpnEntry": iesIfRvplsEvpnEntry,
       "iesIfRvplsEvpnLastChgd": iesIfRvplsEvpnLastChgd,
       "iesIfRvplsEvpnArpLearnDynamic": iesIfRvplsEvpnArpLearnDynamic,
       "iesIfRvplsEvpnNdLearnDynamic": iesIfRvplsEvpnNdLearnDynamic,
       "iesIfRvplsEvpnFldGarpAndUnknReq": iesIfRvplsEvpnFldGarpAndUnknReq,
       "svcMacListTable": svcMacListTable,
       "svcMacListEntry": svcMacListEntry,
       "svcMacListName": svcMacListName,
       "svcMacListRowStatus": svcMacListRowStatus,
       "svcMacListLastChanged": svcMacListLastChanged,
       "svcMacListDescr": svcMacListDescr,
       "svcMacListEntryTable": svcMacListEntryTable,
       "svcMacListEntryEntry": svcMacListEntryEntry,
       "svcMacListEntryAddr": svcMacListEntryAddr,
       "svcMacListEntryRowStatus": svcMacListEntryRowStatus,
       "svcMacListEntryLastChanged": svcMacListEntryLastChanged,
       "svcMacListEntryMask": svcMacListEntryMask,
       "svcEvpnVpwsLocalAcTable": svcEvpnVpwsLocalAcTable,
       "svcEvpnVpwsLocalAcEntry": svcEvpnVpwsLocalAcEntry,
       "svcEvpnVpwsLocalAcName": svcEvpnVpwsLocalAcName,
       "svcEvpnVpwsLocalAcRowStatus": svcEvpnVpwsLocalAcRowStatus,
       "svcEvpnVpwsLocalAcLastChanged": svcEvpnVpwsLocalAcLastChanged,
       "svcEvpnVpwsLocalAcEthTag": svcEvpnVpwsLocalAcEthTag,
       "svcEvpnVpwsLocalAcEndpoint": svcEvpnVpwsLocalAcEndpoint,
       "svcEvpnVpwsLocalAcIngressLabel": svcEvpnVpwsLocalAcIngressLabel,
       "svcEvpnVpwsRemoteAcTable": svcEvpnVpwsRemoteAcTable,
       "svcEvpnVpwsRemoteAcEntry": svcEvpnVpwsRemoteAcEntry,
       "svcEvpnVpwsRemoteAcName": svcEvpnVpwsRemoteAcName,
       "svcEvpnVpwsRemoteAcRowStatus": svcEvpnVpwsRemoteAcRowStatus,
       "svcEvpnVpwsRemoteAcLastChanged": svcEvpnVpwsRemoteAcLastChanged,
       "svcEvpnVpwsRemoteAcEthTag": svcEvpnVpwsRemoteAcEthTag,
       "svcEvpnVpwsRemoteAcEndpoint": svcEvpnVpwsRemoteAcEndpoint,
       "svcDhcpLeaseExTable": svcDhcpLeaseExTable,
       "svcDhcpLeaseExEntry": svcDhcpLeaseExEntry,
       "svcDhcpLeaseSpiHLimit": svcDhcpLeaseSpiHLimit,
       "svcDhcpLeaseSpiHLim4": svcDhcpLeaseSpiHLim4,
       "svcDhcpLeaseSpiHLim4Ppp": svcDhcpLeaseSpiHLim4Ppp,
       "svcDhcpLeaseSpiHLim4Dhcp": svcDhcpLeaseSpiHLim4Dhcp,
       "svcDhcpLeaseSpiHLim4Arp": svcDhcpLeaseSpiHLim4Arp,
       "svcDhcpLeaseSpiHLim6": svcDhcpLeaseSpiHLim6,
       "svcDhcpLeaseSpiHLim6Wan": svcDhcpLeaseSpiHLim6Wan,
       "svcDhcpLeaseSpiHLim6WanPppSlaac": svcDhcpLeaseSpiHLim6WanPppSlaac,
       "svcDhcpLeaseSpiHLim6WanPppDhcp": svcDhcpLeaseSpiHLim6WanPppDhcp,
       "svcDhcpLeaseSpiHLim6WanIpoeSlaac": svcDhcpLeaseSpiHLim6WanIpoeSlaac,
       "svcDhcpLeaseSpiHLim6WanIpoeDhcp": svcDhcpLeaseSpiHLim6WanIpoeDhcp,
       "svcDhcpLeaseSpiHLim6Pd": svcDhcpLeaseSpiHLim6Pd,
       "svcDhcpLeaseSpiHLim6PdPppDhcp": svcDhcpLeaseSpiHLim6PdPppDhcp,
       "svcDhcpLeaseSpiHLim6PdIpoeDhcp": svcDhcpLeaseSpiHLim6PdIpoeDhcp,
       "svcDhcpLeaseSpiHLimLac": svcDhcpLeaseSpiHLimLac,
       "svcDhcpLeaseSpiSLimIpoe": svcDhcpLeaseSpiSLimIpoe,
       "svcDhcpLeaseSpiSLimPppoeLcl": svcDhcpLeaseSpiSLimPppoeLcl,
       "svcDhcpLeaseSpiSLimPppoeLac": svcDhcpLeaseSpiSLimPppoeLac,
       "svcDhcpLeaseSpiSLimPppoeOvrl": svcDhcpLeaseSpiSLimPppoeOvrl,
       "svcDhcpLeaseSpiSLimL2tpLns": svcDhcpLeaseSpiSLimL2tpLns,
       "svcDhcpLeaseSpiSLimL2tpLts": svcDhcpLeaseSpiSLimL2tpLts,
       "svcDhcpLeaseSpiSLimL2tpOvrl": svcDhcpLeaseSpiSLimL2tpOvrl,
       "svcDhcpLeaseSpiSLimOvrl": svcDhcpLeaseSpiSLimOvrl,
       "svcDhcpLeaseSubHLimit": svcDhcpLeaseSubHLimit,
       "svcDhcpLeaseSubHLim4": svcDhcpLeaseSubHLim4,
       "svcDhcpLeaseSubHLim4Ppp": svcDhcpLeaseSubHLim4Ppp,
       "svcDhcpLeaseSubHLim4Dhcp": svcDhcpLeaseSubHLim4Dhcp,
       "svcDhcpLeaseSubHLim4Arp": svcDhcpLeaseSubHLim4Arp,
       "svcDhcpLeaseSubHLim6": svcDhcpLeaseSubHLim6,
       "svcDhcpLeaseSubHLim6Wan": svcDhcpLeaseSubHLim6Wan,
       "svcDhcpLeaseSubHLim6WanPppSlaac": svcDhcpLeaseSubHLim6WanPppSlaac,
       "svcDhcpLeaseSubHLim6WanPppDhcp": svcDhcpLeaseSubHLim6WanPppDhcp,
       "svcDhcpLeaseSubHLim6WanIpoeSlaac": svcDhcpLeaseSubHLim6WanIpoeSlaac,
       "svcDhcpLeaseSubHLim6WanIpoeDhcp": svcDhcpLeaseSubHLim6WanIpoeDhcp,
       "svcDhcpLeaseSubHLim6Pd": svcDhcpLeaseSubHLim6Pd,
       "svcDhcpLeaseSubHLim6PdPppDhcp": svcDhcpLeaseSubHLim6PdPppDhcp,
       "svcDhcpLeaseSubHLim6PdIpoeDhcp": svcDhcpLeaseSubHLim6PdIpoeDhcp,
       "svcDhcpLeaseSubHLimLac": svcDhcpLeaseSubHLimLac,
       "svcDhcpLeaseSubSLimIpoe": svcDhcpLeaseSubSLimIpoe,
       "svcDhcpLeaseSubSLimPppoeLcl": svcDhcpLeaseSubSLimPppoeLcl,
       "svcDhcpLeaseSubSLimPppoeLac": svcDhcpLeaseSubSLimPppoeLac,
       "svcDhcpLeaseSubSLimPppoeOvrl": svcDhcpLeaseSubSLimPppoeOvrl,
       "svcDhcpLeaseSubSLimL2tpLns": svcDhcpLeaseSubSLimL2tpLns,
       "svcDhcpLeaseSubSLimL2tpLts": svcDhcpLeaseSubSLimL2tpLts,
       "svcDhcpLeaseSubSLimL2tpOvrl": svcDhcpLeaseSubSLimL2tpOvrl,
       "svcDhcpLeaseSubSLimOvrl": svcDhcpLeaseSubSLimOvrl,
       "svcArpHostExTable": svcArpHostExTable,
       "svcArpHostExEntry": svcArpHostExEntry,
       "svcArpHostSpiHLimit": svcArpHostSpiHLimit,
       "svcArpHostSpiHLim4": svcArpHostSpiHLim4,
       "svcArpHostSpiHLim4Ppp": svcArpHostSpiHLim4Ppp,
       "svcArpHostSpiHLim4Dhcp": svcArpHostSpiHLim4Dhcp,
       "svcArpHostSpiHLim4Arp": svcArpHostSpiHLim4Arp,
       "svcArpHostSpiHLim6": svcArpHostSpiHLim6,
       "svcArpHostSpiHLim6Wan": svcArpHostSpiHLim6Wan,
       "svcArpHostSpiHLim6WanPppSlaac": svcArpHostSpiHLim6WanPppSlaac,
       "svcArpHostSpiHLim6WanPppDhcp": svcArpHostSpiHLim6WanPppDhcp,
       "svcArpHostSpiHLim6WanIpoeSlaac": svcArpHostSpiHLim6WanIpoeSlaac,
       "svcArpHostSpiHLim6WanIpoeDhcp": svcArpHostSpiHLim6WanIpoeDhcp,
       "svcArpHostSpiHLim6Pd": svcArpHostSpiHLim6Pd,
       "svcArpHostSpiHLim6PdPppDhcp": svcArpHostSpiHLim6PdPppDhcp,
       "svcArpHostSpiHLim6PdIpoeDhcp": svcArpHostSpiHLim6PdIpoeDhcp,
       "svcArpHostSpiHLimLac": svcArpHostSpiHLimLac,
       "svcArpHostSpiSLimIpoe": svcArpHostSpiSLimIpoe,
       "svcArpHostSpiSLimPppoeLcl": svcArpHostSpiSLimPppoeLcl,
       "svcArpHostSpiSLimPppoeLac": svcArpHostSpiSLimPppoeLac,
       "svcArpHostSpiSLimPppoeOvrl": svcArpHostSpiSLimPppoeOvrl,
       "svcArpHostSpiSLimL2tpLns": svcArpHostSpiSLimL2tpLns,
       "svcArpHostSpiSLimL2tpLts": svcArpHostSpiSLimL2tpLts,
       "svcArpHostSpiSLimL2tpOvrl": svcArpHostSpiSLimL2tpOvrl,
       "svcArpHostSpiSLimOvrl": svcArpHostSpiSLimOvrl,
       "svcArpHostSubHLimit": svcArpHostSubHLimit,
       "svcArpHostSubHLim4": svcArpHostSubHLim4,
       "svcArpHostSubHLim4Ppp": svcArpHostSubHLim4Ppp,
       "svcArpHostSubHLim4Dhcp": svcArpHostSubHLim4Dhcp,
       "svcArpHostSubHLim4Arp": svcArpHostSubHLim4Arp,
       "svcArpHostSubHLim6": svcArpHostSubHLim6,
       "svcArpHostSubHLim6Wan": svcArpHostSubHLim6Wan,
       "svcArpHostSubHLim6WanPppSlaac": svcArpHostSubHLim6WanPppSlaac,
       "svcArpHostSubHLim6WanPppDhcp": svcArpHostSubHLim6WanPppDhcp,
       "svcArpHostSubHLim6WanIpoeSlaac": svcArpHostSubHLim6WanIpoeSlaac,
       "svcArpHostSubHLim6WanIpoeDhcp": svcArpHostSubHLim6WanIpoeDhcp,
       "svcArpHostSubHLim6Pd": svcArpHostSubHLim6Pd,
       "svcArpHostSubHLim6PdPppDhcp": svcArpHostSubHLim6PdPppDhcp,
       "svcArpHostSubHLim6PdIpoeDhcp": svcArpHostSubHLim6PdIpoeDhcp,
       "svcArpHostSubHLimLac": svcArpHostSubHLimLac,
       "svcArpHostSubSLimIpoe": svcArpHostSubSLimIpoe,
       "svcArpHostSubSLimPppoeLcl": svcArpHostSubSLimPppoeLcl,
       "svcArpHostSubSLimPppoeLac": svcArpHostSubSLimPppoeLac,
       "svcArpHostSubSLimPppoeOvrl": svcArpHostSubSLimPppoeOvrl,
       "svcArpHostSubSLimL2tpLns": svcArpHostSubSLimL2tpLns,
       "svcArpHostSubSLimL2tpLts": svcArpHostSubSLimL2tpLts,
       "svcArpHostSubSLimL2tpOvrl": svcArpHostSubSLimL2tpOvrl,
       "svcArpHostSubSLimOvrl": svcArpHostSubSLimOvrl,
       "svcSrv6Objs": svcSrv6Objs,
       "svcSrv6TblLastCh": svcSrv6TblLastCh,
       "svcSrv6Table": svcSrv6Table,
       "svcSrv6Entry": svcSrv6Entry,
       "svcSrv6Instance": svcSrv6Instance,
       "svcSrv6RowStatus": svcSrv6RowStatus,
       "svcSrv6LastChngd": svcSrv6LastChngd,
       "svcSrv6LocatorTblLastCh": svcSrv6LocatorTblLastCh,
       "svcSrv6LocatorTable": svcSrv6LocatorTable,
       "svcSrv6LocatorEntry": svcSrv6LocatorEntry,
       "svcSrv6LocatorName": svcSrv6LocatorName,
       "svcSrv6LocatorRowStatus": svcSrv6LocatorRowStatus,
       "svcSrv6LocatorLastChngd": svcSrv6LocatorLastChngd,
       "svcSrv6LocatorEndDt4": svcSrv6LocatorEndDt4,
       "svcSrv6LocatorEndDt4StaticValue": svcSrv6LocatorEndDt4StaticValue,
       "svcSrv6LocatorEndDt6": svcSrv6LocatorEndDt6,
       "svcSrv6LocatorEndDt6StaticValue": svcSrv6LocatorEndDt6StaticValue,
       "svcSrv6LocatorEndDt46": svcSrv6LocatorEndDt46,
       "svcSrv6LocatorEndDt46StaticValue": svcSrv6LocatorEndDt46StaticValue,
       "svcSrv6LocEndDt4OperValue": svcSrv6LocEndDt4OperValue,
       "svcSrv6LocEndDt4OperState": svcSrv6LocEndDt4OperState,
       "svcSrv6LocEndDt4OperErrorCode": svcSrv6LocEndDt4OperErrorCode,
       "svcSrv6LocEndDt4OperSidAddrType": svcSrv6LocEndDt4OperSidAddrType,
       "svcSrv6LocEndDt4OperSidAddr": svcSrv6LocEndDt4OperSidAddr,
       "svcSrv6LocEndDt6OperValue": svcSrv6LocEndDt6OperValue,
       "svcSrv6LocEndDt6OperState": svcSrv6LocEndDt6OperState,
       "svcSrv6LocEndDt6OperErrorCode": svcSrv6LocEndDt6OperErrorCode,
       "svcSrv6LocEndDt6OperSidAddrType": svcSrv6LocEndDt6OperSidAddrType,
       "svcSrv6LocEndDt6OperSidAddr": svcSrv6LocEndDt6OperSidAddr,
       "svcSrv6LocEndDt46OperValue": svcSrv6LocEndDt46OperValue,
       "svcSrv6LocEndDt46OperState": svcSrv6LocEndDt46OperState,
       "svcSrv6LocEndDt46OperErrorCode": svcSrv6LocEndDt46OperErrorCode,
       "svcSrv6LocEndDt46OpSidAddrType": svcSrv6LocEndDt46OpSidAddrType,
       "svcSrv6LocEndDt46OpSidAddr": svcSrv6LocEndDt46OpSidAddr,
       "svcEvpnSrv6TblLastCh": svcEvpnSrv6TblLastCh,
       "svcEvpnSrv6Table": svcEvpnSrv6Table,
       "svcEvpnSrv6Entry": svcEvpnSrv6Entry,
       "svcEvpnSrv6BgpInstance": svcEvpnSrv6BgpInstance,
       "svcEvpnSrv6LastChanged": svcEvpnSrv6LastChanged,
       "svcEvpnSrv6SrcAddrType": svcEvpnSrv6SrcAddrType,
       "svcEvpnSrv6SrcAddr": svcEvpnSrv6SrcAddr,
       "svcEvpnSrv6MaxEcmpRoutes": svcEvpnSrv6MaxEcmpRoutes,
       "svcEvpnSrv6ForceVlanVcFwd": svcEvpnSrv6ForceVlanVcFwd,
       "svcEvpnSrv6RtNextHopType": svcEvpnSrv6RtNextHopType,
       "svcEvpnSrv6RtNextHopAddrType": svcEvpnSrv6RtNextHopAddrType,
       "svcEvpnSrv6RtNextHopAddr": svcEvpnSrv6RtNextHopAddr,
       "svcEvpnSrv6Evi3ByteAutoRT": svcEvpnSrv6Evi3ByteAutoRT,
       "svcEpipeSrv6TblLastCh": svcEpipeSrv6TblLastCh,
       "svcEpipeSrv6Table": svcEpipeSrv6Table,
       "svcEpipeSrv6Entry": svcEpipeSrv6Entry,
       "svcEpipeSrv6Instance": svcEpipeSrv6Instance,
       "svcEpipeSrv6RowStatus": svcEpipeSrv6RowStatus,
       "svcEpipeSrv6LastChngd": svcEpipeSrv6LastChngd,
       "svcEpipeSrv6LocatorTblLastCh": svcEpipeSrv6LocatorTblLastCh,
       "svcEpipeSrv6LocatorTable": svcEpipeSrv6LocatorTable,
       "svcEpipeSrv6LocatorEntry": svcEpipeSrv6LocatorEntry,
       "svcEpipeSrv6LocatorName": svcEpipeSrv6LocatorName,
       "svcEpipeSrv6LocatorRowStatus": svcEpipeSrv6LocatorRowStatus,
       "svcEpipeSrv6LocatorLastChngd": svcEpipeSrv6LocatorLastChngd,
       "svcEpipeSrv6LocatorEndDx2": svcEpipeSrv6LocatorEndDx2,
       "svcEpipeSrv6LocatorEndDx2Static": svcEpipeSrv6LocatorEndDx2Static,
       "svcEpipeSrv6LocEndDx2Value": svcEpipeSrv6LocEndDx2Value,
       "svcEpipeSrv6LocEndDx2State": svcEpipeSrv6LocEndDx2State,
       "svcEpipeSrv6LocEndDx2ErrorCode": svcEpipeSrv6LocEndDx2ErrorCode,
       "svcEpipeSrv6LocEndDx2SidAddrType": svcEpipeSrv6LocEndDx2SidAddrType,
       "svcEpipeSrv6LocEndDx2SidAddr": svcEpipeSrv6LocEndDx2SidAddr,
       "svcSrv6TEPTable": svcSrv6TEPTable,
       "svcSrv6TEPEntry": svcSrv6TEPEntry,
       "svcSrv6TEPAddrType": svcSrv6TEPAddrType,
       "svcSrv6TEPAddress": svcSrv6TEPAddress,
       "svcSrv6TEPNumNonESDest": svcSrv6TEPNumNonESDest,
       "svcSrv6TEPNumESDest": svcSrv6TEPNumESDest,
       "svcSrv6InstTEPSidTable": svcSrv6InstTEPSidTable,
       "svcSrv6InstTEPSidEntry": svcSrv6InstTEPSidEntry,
       "svcSrv6InstTEPAddrType": svcSrv6InstTEPAddrType,
       "svcSrv6InstTEPAddress": svcSrv6InstTEPAddress,
       "svcSrv6InstTEPSidAddrType": svcSrv6InstTEPSidAddrType,
       "svcSrv6InstTEPSidAddr": svcSrv6InstTEPSidAddr,
       "svcSrv6InstTEPSidNumMACs": svcSrv6InstTEPSidNumMACs,
       "svcSrv6InstTEPSidL2EsPbr": svcSrv6InstTEPSidL2EsPbr,
       "svcSrv6InstTEPSidMcast": svcSrv6InstTEPSidMcast,
       "svcSrv6InstTEPSidSrv6Type": svcSrv6InstTEPSidSrv6Type,
       "svcSrv6InstTEPSidSbdMcast": svcSrv6InstTEPSidSbdMcast,
       "svcSrv6InstESDstTEPTable": svcSrv6InstESDstTEPTable,
       "svcSrv6InstESDstTEPEntry": svcSrv6InstESDstTEPEntry,
       "svcSrv6InstESDstTEPAddrType": svcSrv6InstESDstTEPAddrType,
       "svcSrv6InstESDstTEPAddress": svcSrv6InstESDstTEPAddress,
       "svcSrv6InstESDstTEPSidAddrType": svcSrv6InstESDstTEPSidAddrType,
       "svcSrv6InstESDstTEPSidAddr": svcSrv6InstESDstTEPSidAddr,
       "svcSrv6InstESDstTEPLastChg": svcSrv6InstESDstTEPLastChg,
       "svcSrv6InstESDestTable": svcSrv6InstESDestTable,
       "svcSrv6InstESDestEntry": svcSrv6InstESDestEntry,
       "svcSrv6InstESDestLastChgd": svcSrv6InstESDestLastChgd,
       "svcSrv6InstESDestNumMacs": svcSrv6InstESDestNumMacs,
       "svcDhcpLeaseDnsNbnsTable": svcDhcpLeaseDnsNbnsTable,
       "svcDhcpLeaseDnsNbnsEntry": svcDhcpLeaseDnsNbnsEntry,
       "svcDhcpLeaseDnsNbnsAddrIndex": svcDhcpLeaseDnsNbnsAddrIndex,
       "svcDhcpLeaseDnsV4AddrType": svcDhcpLeaseDnsV4AddrType,
       "svcDhcpLeaseDnsV4Addr": svcDhcpLeaseDnsV4Addr,
       "svcDhcpLeaseNbnsV4AddrType": svcDhcpLeaseNbnsV4AddrType,
       "svcDhcpLeaseNbnsV4Addr": svcDhcpLeaseNbnsV4Addr,
       "svcDhcpLeaseDnsV6AddrType": svcDhcpLeaseDnsV6AddrType,
       "svcDhcpLeaseDnsV6Addr": svcDhcpLeaseDnsV6Addr,
       "svcIfSubStatsTable": svcIfSubStatsTable,
       "svcIfSubStatsEntry": svcIfSubStatsEntry,
       "svcIfSubStatsLastCleared": svcIfSubStatsLastCleared,
       "svcIfSubStatsIngPkts": svcIfSubStatsIngPkts,
       "svcIfSubStatsIngOctets": svcIfSubStatsIngOctets,
       "svcIfSubStatsEgrPkts": svcIfSubStatsEgrPkts,
       "svcIfSubStatsEgrOctets": svcIfSubStatsEgrOctets,
       "tmnxSvcSubTable": tmnxSvcSubTable,
       "tmnxSvcSubEntry": tmnxSvcSubEntry,
       "tmnxSvcSubLastCh": tmnxSvcSubLastCh,
       "tmnxSvcSubMcShuntId": tmnxSvcSubMcShuntId,
       "tmnxSvcSubMonOperGrpTable": tmnxSvcSubMonOperGrpTable,
       "tmnxSvcSubMonOperGrpEntry": tmnxSvcSubMonOperGrpEntry,
       "tmnxSvcSubMonOperGrpRowStatus": tmnxSvcSubMonOperGrpRowStatus,
       "tmnxSvcSubMonOperGrpLastCh": tmnxSvcSubMonOperGrpLastCh,
       "tmnxSvcSubMonOperGrpHlthDrop": tmnxSvcSubMonOperGrpHlthDrop,
       "tmnxSvcSubMonOperGrpActHlthDrop": tmnxSvcSubMonOperGrpActHlthDrop,
       "svcRoutedVplsEvpnGWDrTable": svcRoutedVplsEvpnGWDrTable,
       "svcRoutedVplsEvpnGWDrEntry": svcRoutedVplsEvpnGWDrEntry,
       "svcRoutedVplsEvpnGWDrCndtIpType": svcRoutedVplsEvpnGWDrCndtIpType,
       "svcRoutedVplsEvpnGWDrCndtIp": svcRoutedVplsEvpnGWDrCndtIp,
       "svcRoutedVplsEvpnGWDrCndtIpAdded": svcRoutedVplsEvpnGWDrCndtIpAdded,
       "svcEvpnInstMplsTEPEgrLblTnlTable": svcEvpnInstMplsTEPEgrLblTnlTable,
       "svcEvpnInstMplsTEPEgrLblTnlEntry": svcEvpnInstMplsTEPEgrLblTnlEntry,
       "svcEvpnInstMplsTEPEgrLblTEPTnlId": svcEvpnInstMplsTEPEgrLblTEPTnlId,
       "svcEvpnInstMplsTEPEgrLblTnlLstCh": svcEvpnInstMplsTEPEgrLblTnlLstCh,
       "svcEvpnInstMplsTEPEgLblTnlNumMAC": svcEvpnInstMplsTEPEgLblTnlNumMAC,
       "svcEvpnInstMplsTEPEgLblTnlInMLst": svcEvpnInstMplsTEPEgLblTnlInMLst,
       "svcEvpnInstMplsTEPEgLblTnlRsType": svcEvpnInstMplsTEPEgLblTnlRsType,
       "svcEvpnInstMplsTEPEgLbTnlSbdMcst": svcEvpnInstMplsTEPEgLbTnlSbdMcst,
       "svcEvpnInstMplsTEPEgrLblMcast": svcEvpnInstMplsTEPEgrLblMcast,
       "svcEvpnInstMplsESDestTEPTable": svcEvpnInstMplsESDestTEPTable,
       "svcEvpnInstMplsESDestTEPEntry": svcEvpnInstMplsESDestTEPEntry,
       "svcEvpnInstMplsESDestTEPAddrType": svcEvpnInstMplsESDestTEPAddrType,
       "svcEvpnInstMplsESDestTEPAddress": svcEvpnInstMplsESDestTEPAddress,
       "svcEvpnInstMplsESDestTEPLabel": svcEvpnInstMplsESDestTEPLabel,
       "svcEvpnInstMplsESDestTEPLastChgd": svcEvpnInstMplsESDestTEPLastChgd,
       "svcEvpnInstMplsESDestTEPResType": svcEvpnInstMplsESDestTEPResType,
       "svcEvpnInstMplsESDestTEPTnlId": svcEvpnInstMplsESDestTEPTnlId,
       "svcEvpnInstMplsESDestTable": svcEvpnInstMplsESDestTable,
       "svcEvpnInstMplsESDestEntry": svcEvpnInstMplsESDestEntry,
       "svcEvpnInstMplsESDestNumMacs": svcEvpnInstMplsESDestNumMacs,
       "svcEvpnInstMplsESDestLastChanged": svcEvpnInstMplsESDestLastChanged,
       "svcEvpnPwPortHdEndMHEthSegTable": svcEvpnPwPortHdEndMHEthSegTable,
       "svcEvpnPwPortHdEndMHEthSegEntry": svcEvpnPwPortHdEndMHEthSegEntry,
       "svcEvpnHdEndMHEthSegPwPortId": svcEvpnHdEndMHEthSegPwPortId,
       "svcEvpnPwPortHdEndMHEthSegName": svcEvpnPwPortHdEndMHEthSegName,
       "svcEvpnPwPortHdEndMHEthSegStatus": svcEvpnPwPortHdEndMHEthSegStatus,
       "tmnxTstpNotifyObjs": tmnxTstpNotifyObjs,
       "tmnxCustomerBridgeId": tmnxCustomerBridgeId,
       "tmnxCustomerRootBridgeId": tmnxCustomerRootBridgeId,
       "tmnxOtherBridgeId": tmnxOtherBridgeId,
       "tmnxOldSdpBindTlsStpPortState": tmnxOldSdpBindTlsStpPortState,
       "tmnxVcpState": tmnxVcpState,
       "tmnxSvcNotifyObjs": tmnxSvcNotifyObjs,
       "macPinningMacAddress": macPinningMacAddress,
       "macPinningPinnedRow": macPinningPinnedRow,
       "macPinningPinnedRowDescr": macPinningPinnedRowDescr,
       "macPinningViolatingRow": macPinningViolatingRow,
       "macPinningViolatingRowDescr": macPinningViolatingRowDescr,
       "tlsDHCPClientLease": tlsDHCPClientLease,
       "tlsDhcpLseStateOldCiAddr": tlsDhcpLseStateOldCiAddr,
       "tlsDhcpLseStateOldChAddr": tlsDhcpLseStateOldChAddr,
       "tlsDhcpLseStateNewCiAddr": tlsDhcpLseStateNewCiAddr,
       "tlsDhcpLseStateNewChAddr": tlsDhcpLseStateNewChAddr,
       "tlsDhcpRestoreLseStateCiAddr": tlsDhcpRestoreLseStateCiAddr,
       "tlsDhcpRestoreLseStateSvcId": tlsDhcpRestoreLseStateSvcId,
       "tlsDhcpRestoreLseStatePortId": tlsDhcpRestoreLseStatePortId,
       "tlsDhcpRestoreLseStateEncapVal": tlsDhcpRestoreLseStateEncapVal,
       "tlsDhcpRestoreLseStateProblem": tlsDhcpRestoreLseStateProblem,
       "tlsDhcpPacketProblem": tlsDhcpPacketProblem,
       "tlsDhcpLseStatePopulateError": tlsDhcpLseStatePopulateError,
       "svcDhcpRestoreLseStateCiAddr": svcDhcpRestoreLseStateCiAddr,
       "svcDhcpRestoreLseStateProblem": svcDhcpRestoreLseStateProblem,
       "svcDhcpLseStateOldCiAddr": svcDhcpLseStateOldCiAddr,
       "svcDhcpLseStateOldChAddr": svcDhcpLseStateOldChAddr,
       "svcDhcpLseStateNewCiAddr": svcDhcpLseStateNewCiAddr,
       "svcDhcpLseStateNewChAddr": svcDhcpLseStateNewChAddr,
       "svcDhcpClientLease": svcDhcpClientLease,
       "svcDhcpPacketProblem": svcDhcpPacketProblem,
       "svcDhcpLseStatePopulateError": svcDhcpLseStatePopulateError,
       "hostConnectivityCiAddrType": hostConnectivityCiAddrType,
       "hostConnectivityCiAddr": hostConnectivityCiAddr,
       "hostConnectivityChAddr": hostConnectivityChAddr,
       "protectedMacForNotify": protectedMacForNotify,
       "staticHostDynamicMacIpAddress": staticHostDynamicMacIpAddress,
       "staticHostDynamicMacConflict": staticHostDynamicMacConflict,
       "tmnxSvcObjRow": tmnxSvcObjRow,
       "tmnxSvcObjRowDescr": tmnxSvcObjRowDescr,
       "tmnxSvcObjTodSuite": tmnxSvcObjTodSuite,
       "tmnxFailureDescription": tmnxFailureDescription,
       "svcDhcpProxyError": svcDhcpProxyError,
       "svcDhcpCoAError": svcDhcpCoAError,
       "svcDhcpSubAuthError": svcDhcpSubAuthError,
       "svcTlsMrpAttrRegFailedReason": svcTlsMrpAttrRegFailedReason,
       "svcTlsMrpAttrType": svcTlsMrpAttrType,
       "svcTlsMrpAttrValue": svcTlsMrpAttrValue,
       "svcMstiInstanceId": svcMstiInstanceId,
       "svcNotifSapPortId": svcNotifSapPortId,
       "svcNotifSapEncapValue": svcNotifSapEncapValue,
       "svcArpHostPopulateError": svcArpHostPopulateError,
       "svcHostAddrType": svcHostAddrType,
       "svcHostAddr": svcHostAddr,
       "svcNotifSiteName": svcNotifSiteName,
       "svcNotifSiteMinDnTimerState": svcNotifSiteMinDnTimerState,
       "svcNotifSiteMinDnTimer": svcNotifSiteMinDnTimer,
       "svcNotifSiteMinDnTimerRemain": svcNotifSiteMinDnTimerRemain,
       "svcNotifTlsProxyMacAddr": svcNotifTlsProxyMacAddr,
       "svcNotifyMacAddress": svcNotifyMacAddress,
       "svcNotifyText": svcNotifyText,
       "svcNotifVxlanInstance": svcNotifVxlanInstance,
       "svcNotifEvpnMHStandbyStatus": svcNotifEvpnMHStandbyStatus,
       "svcNotifEthSegName": svcNotifEthSegName,
       "svcNotifInetAddrType": svcNotifInetAddrType,
       "svcNotifInetAddr": svcNotifInetAddr,
       "svcSrv6FunctionType": svcSrv6FunctionType,
       "tmnxSvcTimeObjs": tmnxSvcTimeObjs,
       "tlsCondStaticMacTblLastChanged": tlsCondStaticMacTblLastChanged,
       "svcOperGrpBfdTblLastChgd": svcOperGrpBfdTblLastChgd,
       "svcTlsVxlanTblLastChgd": svcTlsVxlanTblLastChgd,
       "svcBgpEvpnTableLastChanged": svcBgpEvpnTableLastChanged,
       "tmnxIesIfRtrSolTableLastChanged": tmnxIesIfRtrSolTableLastChanged,
       "svcVsdDomainTblLastChngd": svcVsdDomainTblLastChngd,
       "svcTlsProxyArpTblLastChngd": svcTlsProxyArpTblLastChngd,
       "svcVsdDomainToSvcTblLastChngd": svcVsdDomainToSvcTblLastChngd,
       "tmnxSvcIesIfIpoeTableLastChanged": tmnxSvcIesIfIpoeTableLastChanged,
       "svcTlsProxyArpCfgTblLastChngd": svcTlsProxyArpCfgTblLastChngd,
       "svcVprnInfoTableLastChanged": svcVprnInfoTableLastChanged,
       "svcTlsProxyArpStaticTblLastChngd": svcTlsProxyArpStaticTblLastChngd,
       "svcTlsProxyNdCfgTblLastChngd": svcTlsProxyNdCfgTblLastChngd,
       "svcTlsProxyNdStaticTblLastChngd": svcTlsProxyNdStaticTblLastChngd,
       "svcTlsProxyNdTblLastChngd": svcTlsProxyNdTblLastChngd,
       "svcBgpEvpnMplsTableLastChanged": svcBgpEvpnMplsTableLastChanged,
       "svcTlsBgpEvpnABTnlTblLastChanged": svcTlsBgpEvpnABTnlTblLastChanged,
       "svcVprnBgpAutoBindTblLastChgd": svcVprnBgpAutoBindTblLastChgd,
       "tmnxSvcSysEthSegTblLastChanged": tmnxSvcSysEthSegTblLastChanged,
       "svcEthSegCarvEviRngTblLastChgd": svcEthSegCarvEviRngTblLastChgd,
       "svcEthSegCarvIsidRngTblLastChgd": svcEthSegCarvIsidRngTblLastChgd,
       "svcVllBgpEvpnABTnlTblLastChanged": svcVllBgpEvpnABTnlTblLastChanged,
       "svcBgpEvpnVpwsLastTblChg": svcBgpEvpnVpwsLastTblChg,
       "svcEpipePwPortTableLastChgd": svcEpipePwPortTableLastChgd,
       "tmnxSvcSysVxlanTunTermTblLstChg": tmnxSvcSysVxlanTunTermTblLstChg,
       "svcVplsBgpTableLastChanged": svcVplsBgpTableLastChanged,
       "svcProxyArpNdMacListTblLastChngd": svcProxyArpNdMacListTblLastChngd,
       "svcTlsProxyArpDynCfgTblLastChgd": svcTlsProxyArpDynCfgTblLastChgd,
       "svcTlsProxyNdDynCfgTblLastChgd": svcTlsProxyNdDynCfgTblLastChgd,
       "tmnxSvcSysEthSegQTagRngTblLstChd": tmnxSvcSysEthSegQTagRngTblLstChd,
       "tmnxSvcSysEthSegVcIdRngTblLstChd": tmnxSvcSysEthSegVcIdRngTblLstChd,
       "tmnxESSTagRngTblLstChd": tmnxESSTagRngTblLstChd,
       "tmnxESSTagCTagRngTblLstChd": tmnxESSTagCTagRngTblLstChd,
       "svcSysEvpnESDfPrefElecTblLstChgd": svcSysEvpnESDfPrefElecTblLstChgd,
       "svcEpipeVxlanTblLastChgd": svcEpipeVxlanTblLastChgd,
       "svcPbbEvpnIsidRtTblLastChgd": svcPbbEvpnIsidRtTblLastChgd,
       "tmnxESVxlanInstSvcRngTblLstChd": tmnxESVxlanInstSvcRngTblLstChd,
       "svcSysGreEthBrgdTnlTrmTblLstChg": svcSysGreEthBrgdTnlTrmTblLstChg,
       "svcVprnVxlanTunTermTableLastChgd": svcVprnVxlanTunTermTableLastChgd,
       "svcOperGroupConfigTblLastChgd": svcOperGroupConfigTblLastChgd,
       "svcBgpEvpnInstTableLastChgd": svcBgpEvpnInstTableLastChgd,
       "svcBgpEvpnInstVxlanTblLastChgd": svcBgpEvpnInstVxlanTblLastChgd,
       "svcBgpEvpnInstMplsTblLastChgd": svcBgpEvpnInstMplsTblLastChgd,
       "svcBgpEvpnInstABTTblLastChgd": svcBgpEvpnInstABTTblLastChgd,
       "svcTlsVxInstTableLastChgd": svcTlsVxInstTableLastChgd,
       "svcEpipeVxInstTblLastChgd": svcEpipeVxInstTblLastChgd,
       "svcVprnTacPlusTblLastChgd": svcVprnTacPlusTblLastChgd,
       "svcVprnTacPlusServerTblLastChgd": svcVprnTacPlusServerTblLastChgd,
       "svcVprnTcPlusPriLvlMpTblLstChgd": svcVprnTcPlusPriLvlMpTblLstChgd,
       "svcVprnLdapTblLastChgd": svcVprnLdapTblLastChgd,
       "svcVprnLdapServerTblLstChgd": svcVprnLdapServerTblLstChgd,
       "svcVprnRadiusTblLastChgd": svcVprnRadiusTblLastChgd,
       "svcVprnRadiusServerTblLstChgd": svcVprnRadiusServerTblLstChgd,
       "svcVprnServerCtlTblLstChgd": svcVprnServerCtlTblLstChgd,
       "svcRoutedVplsEvpnGWTblLastChgd": svcRoutedVplsEvpnGWTblLastChgd,
       "svcRvplsEvpnArpAdvrtTblLstChg": svcRvplsEvpnArpAdvrtTblLstChg,
       "svcRvplsEvpnNdAdvrtTblLstChg": svcRvplsEvpnNdAdvrtTblLstChg,
       "svcMacListTableLastChanged": svcMacListTableLastChanged,
       "svcMacListEntryTableLastChanged": svcMacListEntryTableLastChanged,
       "svcEvpnVpwsLocalAcTblLastChg": svcEvpnVpwsLocalAcTblLastChg,
       "svcEvpnVpwsRemoteAcTblLastChg": svcEvpnVpwsRemoteAcTblLastChg,
       "iesIfTableLastChanged": iesIfTableLastChanged,
       "svcBaseInfoTableLastChanged": svcBaseInfoTableLastChanged,
       "svcTlsInfoTableLastChanged": svcTlsInfoTableLastChanged,
       "tmnxSvcSubTableLastChanged": tmnxSvcSubTableLastChanged,
       "tmnxSvcSubMonOperGrpTableLastCh": tmnxSvcSubMonOperGrpTableLastCh,
       "svcRoutedVplsEvpnGWDrTblLastChgd": svcRoutedVplsEvpnGWDrTblLastChgd,
       "svcEvpnInstMplsTEPEgrLblTnlTblLC": svcEvpnInstMplsTEPEgrLblTnlTblLC,
       "svcEvpnInstMplsESDestTEPTblLstCh": svcEvpnInstMplsESDestTEPTblLstCh,
       "svcEvpnInstMplsESDestTblLastChgd": svcEvpnInstMplsESDestTblLastChgd,
       "tmnxServNotifications": tmnxServNotifications,
       "custTrapsPrefix": custTrapsPrefix,
       "custTraps": custTraps,
       "custCreated": custCreated,
       "custDeleted": custDeleted,
       "custMultSvcSiteCreated": custMultSvcSiteCreated,
       "custMultSvcSiteDeleted": custMultSvcSiteDeleted,
       "svcTrapsPrefix": svcTrapsPrefix,
       "svcTraps": svcTraps,
       "svcCreated": svcCreated,
       "svcDeleted": svcDeleted,
       "svcStatusChanged": svcStatusChanged,
       "svcTlsFdbTableFullAlarmRaised": svcTlsFdbTableFullAlarmRaised,
       "svcTlsFdbTableFullAlarmCleared": svcTlsFdbTableFullAlarmCleared,
       "iesIfCreated": iesIfCreated,
       "iesIfDeleted": iesIfDeleted,
       "iesIfStatusChanged": iesIfStatusChanged,
       "svcTlsMfibTableFullAlarmRaised": svcTlsMfibTableFullAlarmRaised,
       "svcTlsMfibTableFullAlarmCleared": svcTlsMfibTableFullAlarmCleared,
       "svcTlsMacPinningViolation": svcTlsMacPinningViolation,
       "svcTlsDHCPLseStRestoreProblem": svcTlsDHCPLseStRestoreProblem,
       "svcTlsDHCPLseStatePopulateErr": svcTlsDHCPLseStatePopulateErr,
       "svcDHCPLseStateRestoreProblem": svcDHCPLseStateRestoreProblem,
       "tmnxSvcObjTodSuiteApplicFailed": tmnxSvcObjTodSuiteApplicFailed,
       "tmnxEndPointTxActiveChanged": tmnxEndPointTxActiveChanged,
       "tmnxSvcPEDiscPolServOperStatChg": tmnxSvcPEDiscPolServOperStatChg,
       "svcEndPointMacLimitAlarmRaised": svcEndPointMacLimitAlarmRaised,
       "svcEndPointMacLimitAlarmCleared": svcEndPointMacLimitAlarmCleared,
       "svcTlsMrpAttrRegistrationFailed": svcTlsMrpAttrRegistrationFailed,
       "svcFdbMimDestTblFullAlrm": svcFdbMimDestTblFullAlrm,
       "svcFdbMimDestTblFullAlrmCleared": svcFdbMimDestTblFullAlrmCleared,
       "svcDHCPMiscellaneousProblem": svcDHCPMiscellaneousProblem,
       "svcPersistencyProblem": svcPersistencyProblem,
       "svcTlsMrpAttrTblFullAlarmRaised": svcTlsMrpAttrTblFullAlarmRaised,
       "svcTlsMrpAttrTblFullAlarmCleared": svcTlsMrpAttrTblFullAlarmCleared,
       "svcArpHostPopulateErr": svcArpHostPopulateErr,
       "svcEpipePbbOperStatusChanged": svcEpipePbbOperStatusChanged,
       "svcEPMCEPConfigMismatch": svcEPMCEPConfigMismatch,
       "svcEPMCEPConfigMismatchResolved": svcEPMCEPConfigMismatchResolved,
       "svcEPMCEPPassiveModeActive": svcEPMCEPPassiveModeActive,
       "svcEPMCEPPassiveModePassive": svcEPMCEPPassiveModePassive,
       "svcRestoreHostProblem": svcRestoreHostProblem,
       "svcTlsSiteDesigFwdrChg": svcTlsSiteDesigFwdrChg,
       "svcTlsGroupOperStatusChanged": svcTlsGroupOperStatusChanged,
       "svcMacFdbTblFullAlarm": svcMacFdbTblFullAlarm,
       "svcMacFdbTblFullAlarmCleared": svcMacFdbTblFullAlarmCleared,
       "svcMSPwRtMisconfig": svcMSPwRtMisconfig,
       "svcOperGrpOperStatusChanged": svcOperGrpOperStatusChanged,
       "svcMSPwRetryExpiredNotif": svcMSPwRetryExpiredNotif,
       "svcVllSiteDesigFwdrChg": svcVllSiteDesigFwdrChg,
       "svcBgpEvpnDupMacAddrsDetected": svcBgpEvpnDupMacAddrsDetected,
       "svcBgpEvpnDupMacAddrsCleared": svcBgpEvpnDupMacAddrsCleared,
       "svcTlsDupVTEPEgrVNIDetected": svcTlsDupVTEPEgrVNIDetected,
       "svcTlsDupVTEPEgrVNICleared": svcTlsDupVTEPEgrVNICleared,
       "svcTlsVTEPHiUsageAlarmRaised": svcTlsVTEPHiUsageAlarmRaised,
       "svcTlsVTEPHiUsageAlarmCleared": svcTlsVTEPHiUsageAlarmCleared,
       "svcTlsVTEPEgrVniSysHiUsgAlarmSet": svcTlsVTEPEgrVniSysHiUsgAlarmSet,
       "svcTlsVTEPEgrVniSysHiUsgAlarmClr": svcTlsVTEPEgrVniSysHiUsgAlarmClr,
       "svcTlsVTEPEgrVniSvcHiUsgAlarmSet": svcTlsVTEPEgrVniSvcHiUsgAlarmSet,
       "svcTlsVTEPEgrVniSvcHiUsgAlarmClr": svcTlsVTEPEgrVniSvcHiUsgAlarmClr,
       "svcBindSysHiUsageAlarmRaised": svcBindSysHiUsageAlarmRaised,
       "svcBindSysHiUsageAlarmCleared": svcBindSysHiUsageAlarmCleared,
       "svcTlsRvplsEgrVniSysHiUsgAlrmSet": svcTlsRvplsEgrVniSysHiUsgAlrmSet,
       "svcTlsRvplsEgrVniSysHiUsgAlrmClr": svcTlsRvplsEgrVniSysHiUsgAlrmClr,
       "svcTlsProxyArpDupDetect": svcTlsProxyArpDupDetect,
       "svcTlsProxyArpDupClear": svcTlsProxyArpDupClear,
       "svcTlsProxyNdDupDetect": svcTlsProxyNdDupDetect,
       "svcTlsProxyNdDupClear": svcTlsProxyNdDupClear,
       "svcTlsEvpnTunnNHopHiUsgAlarmSet": svcTlsEvpnTunnNHopHiUsgAlarmSet,
       "svcTlsEvpnTunnNHopHiUsgAlarmClr": svcTlsEvpnTunnNHopHiUsgAlarmClr,
       "svcEvpnMplsTEPHiUsageRaised": svcEvpnMplsTEPHiUsageRaised,
       "svcEvpnMplsTEPHiUsageCleared": svcEvpnMplsTEPHiUsageCleared,
       "svcEvpnMplsTEPEgrBndSysHiUsgSet": svcEvpnMplsTEPEgrBndSysHiUsgSet,
       "svcEvpnMplsTEPEgrBndSysHiUsgClr": svcEvpnMplsTEPEgrBndSysHiUsgClr,
       "svcEvpnMplsTEPEgrBndSvcHiUsgSet": svcEvpnMplsTEPEgrBndSvcHiUsgSet,
       "svcEvpnMplsTEPEgrBndSvcHiUsgClr": svcEvpnMplsTEPEgrBndSvcHiUsgClr,
       "svcTlsProxyArpSysHiUsgSet": svcTlsProxyArpSysHiUsgSet,
       "svcTlsProxyArpSysHiUsgClr": svcTlsProxyArpSysHiUsgClr,
       "svcTlsProxyArpSvcHiUsgSet": svcTlsProxyArpSvcHiUsgSet,
       "svcTlsProxyArpSvcHiUsgClr": svcTlsProxyArpSvcHiUsgClr,
       "svcTlsProxyNdSysHiUsgSet": svcTlsProxyNdSysHiUsgSet,
       "svcTlsProxyNdSysHiUsgClr": svcTlsProxyNdSysHiUsgClr,
       "svcTlsProxyNdSvcHiUsgSet": svcTlsProxyNdSvcHiUsgSet,
       "svcTlsProxyNdSvcHiUsgClr": svcTlsProxyNdSvcHiUsgClr,
       "svcSiteMinDnTimerStateChg": svcSiteMinDnTimerStateChg,
       "svcArpHostOverride": svcArpHostOverride,
       "svcEvpnDestSysHiUsgSet": svcEvpnDestSysHiUsgSet,
       "svcEvpnDestSysHiUsgClr": svcEvpnDestSysHiUsgClr,
       "svcEvpnMHEsEviDFStateChgd": svcEvpnMHEsEviDFStateChgd,
       "svcEvpnMHEsIsidDFStateChgd": svcEvpnMHEsIsidDFStateChgd,
       "svcEvpnRcvdProtSrcMac": svcEvpnRcvdProtSrcMac,
       "svcBgpEvpnBHDupMacAddrsDetected": svcBgpEvpnBHDupMacAddrsDetected,
       "svcTlsVxlanReplicatorChgd": svcTlsVxlanReplicatorChgd,
       "svcEvpnEtreeBumLabelSysHiUsgSet": svcEvpnEtreeBumLabelSysHiUsgSet,
       "svcEvpnEtreeBumLabelSysHiUsgClr": svcEvpnEtreeBumLabelSysHiUsgClr,
       "svcVxlanEvpnMplsDestSysHiUsgSet": svcVxlanEvpnMplsDestSysHiUsgSet,
       "svcVxlanEvpnMplsDestSysHiUsgClr": svcVxlanEvpnMplsDestSysHiUsgClr,
       "svcSysEvpnESDfPrefOperValChange": svcSysEvpnESDfPrefOperValChange,
       "tmnxSvcSysFdbTableHighUsgSet": tmnxSvcSysFdbTableHighUsgSet,
       "tmnxSvcSysFdbTableHighUsgClr": tmnxSvcSysFdbTableHighUsgClr,
       "svcEvpnMHStandbyStatusChg": svcEvpnMHStandbyStatusChg,
       "svcTlsVxInstReplicatorChgd": svcTlsVxInstReplicatorChgd,
       "svcTlsVxInstMacAdrLimitAlrmRsd": svcTlsVxInstMacAdrLimitAlrmRsd,
       "svcTlsVxInstMacAdrLimitAlrmClrd": svcTlsVxInstMacAdrLimitAlrmClrd,
       "svcEvpnVxVTepLclBiasAddFailSet": svcEvpnVxVTepLclBiasAddFailSet,
       "svcEvpnESVxVTepLclBiasAddFailSet": svcEvpnESVxVTepLclBiasAddFailSet,
       "svcEvpnVxVTepLclBiasAddFailClr": svcEvpnVxVTepLclBiasAddFailClr,
       "svcEvpnESVxVTepLclBiasAddFailClr": svcEvpnESVxVTepLclBiasAddFailClr,
       "svcEvpnRcvdPbbProtSrcMac": svcEvpnRcvdPbbProtSrcMac,
       "svcEvpnMplsTEPIpSysHiUsgSet": svcEvpnMplsTEPIpSysHiUsgSet,
       "svcEvpnMplsTEPIpSysHiUsgClr": svcEvpnMplsTEPIpSysHiUsgClr,
       "svcEvpnMHAutoEsiCreated": svcEvpnMHAutoEsiCreated,
       "svcEvpnMHAutoEsiConflict": svcEvpnMHAutoEsiConflict,
       "svcSrv6TEPEgrBndSysHiUsgSet": svcSrv6TEPEgrBndSysHiUsgSet,
       "svcSrv6TEPEgrBndSysHiUsgClr": svcSrv6TEPEgrBndSysHiUsgClr,
       "svcSrv6FunctionExhaustion": svcSrv6FunctionExhaustion,
       "svcIfSubForwardingStatsDisNotify": svcIfSubForwardingStatsDisNotify,
       "svcIfSubForwardingStatsEnNotify": svcIfSubForwardingStatsEnNotify,
       "svcRoutedVplsEvpnGWDrStateChgd": svcRoutedVplsEvpnGWDrStateChgd,
       "tstpTrapsPrefix": tstpTrapsPrefix,
       "tstpTraps": tstpTraps,
       "topologyChangeVcpState": topologyChangeVcpState,
       "newRootVcpState": newRootVcpState,
       "newRootBridge": newRootBridge,
       "vcpActiveProtocolChange": vcpActiveProtocolChange,
       "tmnxNewCistRegionalRootBridge": tmnxNewCistRegionalRootBridge,
       "tmnxNewMstiRegionalRootBridge": tmnxNewMstiRegionalRootBridge,
       "topologyChangePipMajorState": topologyChangePipMajorState,
       "topologyChangePipState": topologyChangePipState,
       "tmnxPipStpExcepCondStateChng": tmnxPipStpExcepCondStateChng,
       "pipActiveProtocolChange": pipActiveProtocolChange}
)
