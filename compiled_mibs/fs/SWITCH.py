# SNMP MIB module (SWITCH) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file://mibs\fs\SWITCH
# Produced by pysmi-1.6.2 at Thu Oct  2 11:45:40 2025
# On host DESKTOP-ORUUBP9 platform Windows version 11 by user speterman
# Using Python version 3.12.8 (tags/v3.12.8:2dc476b, Dec  3 2024, 19:30:04) [MSC v.1942 64 bit (AMD64)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(InterfaceIndex,
 InterfaceIndexOrZero,
 ifIndex) = mibBuilder.importSymbols(
    "IF-MIB",
    "InterfaceIndex",
    "InterfaceIndexOrZero",
    "ifIndex")

(InetAddress,
 InetAddressPrefixLength,
 InetAddressType) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressPrefixLength",
    "InetAddressType")

(OwnerString,) = mibBuilder.importSymbols(
    "RMON-MIB",
    "OwnerString")

(SnmpAdminString,) = mibBuilder.importSymbols(
    "SNMP-FRAMEWORK-MIB",
    "SnmpAdminString")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso,
 mib_2) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso",
    "mib-2")

(AutonomousType,
 DateAndTime,
 DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention,
 TestAndIncr,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "AutonomousType",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention",
    "TestAndIncr",
    "TimeStamp",
    "TruthValue")

(VrId,) = mibBuilder.importSymbols(
    "VRRP-MIB",
    "VrId")


# MODULE-IDENTITY

switch = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 27975)
)


# Types definitions


# TEXTUAL-CONVENTIONS



class ErrorFlag(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noError", 0),
          ("error", 1))
    )



class FlashOperationStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("opInProgress", 1),
          ("opSuccess", 2),
          ("opInvalid", 3),
          ("opInvalidProtocol", 4),
          ("opInvalidSourceName", 5),
          ("opInvalidDestName", 6),
          ("opInvalidServerAddress", 7),
          ("opDeviceBusy", 8),
          ("opDeviceOpenError", 9),
          ("opDeviceError", 10),
          ("opDeviceNotProgrammable", 11),
          ("opDeviceFull", 12),
          ("opFileOpenError", 13),
          ("opFileTransferError", 14),
          ("opFileChecksumError", 15),
          ("opNoMemory", 16),
          ("opAuthFail", 17),
          ("opTimeout", 18),
          ("opUnknownFailure", 19),
          ("opDeleteFileOpenError", 20),
          ("opDeleteInvalidDevice", 21),
          ("opDeleteInvalidFunction", 22),
          ("opDeleteOperationError", 23),
          ("opDeleteInvalidFileName", 24),
          ("opDeleteDeviceBusy", 25),
          ("opDeleteParaError", 26),
          ("opDeleteInvalidPath", 27))
    )



class CfOperationStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("opInProgress", 1),
          ("opSuccess", 2),
          ("opInvalid", 3),
          ("opInvalidProtocol", 4),
          ("opInvalidSourceName", 5),
          ("opInvalidDestName", 6),
          ("opInvalidServerAddress", 7),
          ("opDeviceBusy", 8),
          ("opDeviceOpenError", 9),
          ("opDeviceError", 10),
          ("opDeviceNotProgrammable", 11),
          ("opDeviceFull", 12),
          ("opFileOpenError", 13),
          ("opFileTransferError", 14),
          ("opFileChecksumError", 15),
          ("opNoMemory", 16),
          ("opAuthFail", 17),
          ("opTimeout", 18),
          ("opUnknownFailure", 19),
          ("opDeleteFileOpenError", 20),
          ("opDeleteInvalidDevice", 21),
          ("opDeleteInvalidFunction", 22),
          ("opDeleteOperationError", 23),
          ("opDeleteInvalidFileName", 24),
          ("opDeleteDeviceBusy", 25),
          ("opDeleteParaError", 26),
          ("opDeleteInvalidPath", 27))
    )



class MessageLevelType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("emergency", 0),
          ("alert", 1),
          ("critical", 2),
          ("error", 3),
          ("warning", 4),
          ("notice", 5),
          ("informational", 6),
          ("debug", 7))
    )



class MessageTrapLevelType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("high", 0),
          ("middle", 1),
          ("lower", 2),
          ("minor", 3))
    )



class TimeStampFormatType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bsd", 0),
          ("iso", 1),
          ("full", 2),
          ("null", 3))
    )



class FacilityType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("kernel", 0),
          ("userLevel", 1),
          ("mailSystem", 2),
          ("systemDaemons", 3),
          ("securityAuthorization", 4),
          ("syslog", 5),
          ("linePrinter", 6),
          ("networkNews", 7),
          ("uucp", 8),
          ("cron", 9),
          ("securityAuthorization2", 10),
          ("ftpDaemon", 11),
          ("ntp", 12),
          ("logAudit", 13),
          ("logAlert", 14),
          ("clockDaemon2", 15),
          ("local0", 16),
          ("local1", 17),
          ("local2", 18),
          ("local3", 19),
          ("local4", 20),
          ("local5", 21),
          ("local6", 22),
          ("local7", 23))
    )



class RuleAction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("permit", 1),
          ("deny", 2))
    )



class CounterClear(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("nouse", 2))
    )



class PortOp(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eq", 0),
          ("gt", 2),
          ("lt", 3),
          ("range", 4),
          ("invalid", 5))
    )



class PrecedenceValue(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
        ValueRangeConstraint(255, 255),
    )



class DSCPValue(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )



class ColorType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("red", 1),
          ("yellow", 2),
          ("green", 3))
    )



class PriMapType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cos", 1),
          ("dscp", 2),
          ("exp", 3),
          ("ipPre", 4))
    )



class IfQueueId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )



class DirectionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inbound", 1),
          ("outbound", 2))
    )



class EnableType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )



class QosStatsClear(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 0),
          ("nouse", 1))
    )



class EnabledStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )



class VlanIndex(TextualConvention, Unsigned32):
    status = "current"
    displayHint = "d        "


class VlanList(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )



class VlanClassRuleIndex(TextualConvention, Integer32):
    status = "current"
    displayHint = "d        "
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )



class VlanClassGroupIndex(TextualConvention, Integer32):
    status = "current"
    displayHint = "d        "
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )



class VlanClassProtocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("ipv4", 2),
          ("ipv6", 3),
          ("mpls", 4),
          ("mplsmcast", 5),
          ("arp", 6),
          ("rarp", 7),
          ("pppoe", 11))
    )



class VlanClassEnableBase(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mac", 1),
          ("ip", 2),
          ("protocol", 4))
    )



class VlanClassIpv6Address(TextualConvention, OctetString):
    status = "current"
    displayHint = "2x:"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16



class BridgeId(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )
    fixed_length = 8



class SysmonBootType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("hold", 0),
          ("reload", 1))
    )



class HBMReactivateType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("warning", 0),
          ("shutdown", 1),
          ("reload", 2))
    )



class ArpType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("request", 1),
          ("response", 2),
          ("all", 3))
    )



class LoginType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nologin", 1),
          ("login", 2),
          ("loginlocal", 3))
    )



class IpSourceGuardType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("ip", 1),
          ("ipMac", 2),
          ("ip-vlan", 3),
          ("ipMacVlan", 4))
    )



class PrefixListType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 1),
          ("permit", 2))
    )



class PrefixListClearValue(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clear", 1)
    )



# MIB Managed Objects in the order of their OIDs

_System_ObjectIdentity = ObjectIdentity
system = _System_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1)
)
_Memory_ObjectIdentity = ObjectIdentity
memory = _Memory_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 1)
)
_MemIndex_Type = Integer32
_MemIndex_Object = MibScalar
memIndex = _MemIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 1, 1),
    _MemIndex_Type()
)
memIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memIndex.setStatus("current")
_MemTotalReal_Type = Integer32
_MemTotalReal_Object = MibScalar
memTotalReal = _MemTotalReal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 1, 5),
    _MemTotalReal_Type()
)
memTotalReal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memTotalReal.setStatus("current")
if mibBuilder.loadTexts:
    memTotalReal.setUnits("kB")
_MemTotalFree_Type = Integer32
_MemTotalFree_Object = MibScalar
memTotalFree = _MemTotalFree_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 1, 11),
    _MemTotalFree_Type()
)
memTotalFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memTotalFree.setStatus("current")
if mibBuilder.loadTexts:
    memTotalFree.setUnits("kB")
_MemTotalUsed_Type = Integer32
_MemTotalUsed_Object = MibScalar
memTotalUsed = _MemTotalUsed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 1, 12),
    _MemTotalUsed_Type()
)
memTotalUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memTotalUsed.setStatus("current")
if mibBuilder.loadTexts:
    memTotalUsed.setUnits("kB")
_SystemStats_ObjectIdentity = ObjectIdentity
systemStats = _SystemStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2)
)
_SsIndex_Type = Integer32
_SsIndex_Object = MibScalar
ssIndex = _SsIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 1),
    _SsIndex_Type()
)
ssIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssIndex.setStatus("current")
_SsCpuIdle_Type = Integer32
_SsCpuIdle_Object = MibScalar
ssCpuIdle = _SsCpuIdle_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 11),
    _SsCpuIdle_Type()
)
ssCpuIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ssCpuIdle.setStatus("current")
_SysProcessTable_Object = MibTable
sysProcessTable = _SysProcessTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 100)
)
if mibBuilder.loadTexts:
    sysProcessTable.setStatus("current")
_SysProcessEntry_Object = MibTableRow
sysProcessEntry = _SysProcessEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 100, 1)
)
sysProcessEntry.setIndexNames(
    (0, "SWITCH", "sysProcessIndex"),
)
if mibBuilder.loadTexts:
    sysProcessEntry.setStatus("current")


class _SysProcessIndex_Type(Integer32):
    """Custom type sysProcessIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_SysProcessIndex_Type.__name__ = "Integer32"
_SysProcessIndex_Object = MibTableColumn
sysProcessIndex = _SysProcessIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 100, 1, 1),
    _SysProcessIndex_Type()
)
sysProcessIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sysProcessIndex.setStatus("current")


class _SysProcessName_Type(OctetString):
    """Custom type sysProcessName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysProcessName_Type.__name__ = "OctetString"
_SysProcessName_Object = MibTableColumn
sysProcessName = _SysProcessName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 2, 100, 1, 2),
    _SysProcessName_Type()
)
sysProcessName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysProcessName.setStatus("current")
_Operate_ObjectIdentity = ObjectIdentity
operate = _Operate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3)
)


class _ConfigSave_Type(Integer32):
    """Custom type configSave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_ConfigSave_Type.__name__ = "Integer32"
_ConfigSave_Object = MibScalar
configSave = _ConfigSave_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 1),
    _ConfigSave_Type()
)
configSave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    configSave.setStatus("current")


class _Reload_Type(Integer32):
    """Custom type reload based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("rebootWithoutSave", 1),
          ("saveAndReboot", 2))
    )


_Reload_Type.__name__ = "Integer32"
_Reload_Object = MibScalar
reload = _Reload_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 2),
    _Reload_Type()
)
reload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    reload.setStatus("current")


class _RebootAt_Type(OctetString):
    """Custom type rebootAt based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_RebootAt_Type.__name__ = "OctetString"
_RebootAt_Object = MibScalar
rebootAt = _RebootAt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 3),
    _RebootAt_Type()
)
rebootAt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rebootAt.setStatus("current")


class _RebootDelay_Type(OctetString):
    """Custom type rebootDelay based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 3),
    )


_RebootDelay_Type.__name__ = "OctetString"
_RebootDelay_Object = MibScalar
rebootDelay = _RebootDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 4),
    _RebootDelay_Type()
)
rebootDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rebootDelay.setStatus("current")


class _Version_Type(OctetString):
    """Custom type version based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_Version_Type.__name__ = "OctetString"
_Version_Object = MibScalar
version = _Version_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 5),
    _Version_Type()
)
version.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    version.setStatus("current")


class _ServiceTelnet_Type(Integer32):
    """Custom type serviceTelnet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_ServiceTelnet_Type.__name__ = "Integer32"
_ServiceTelnet_Object = MibScalar
serviceTelnet = _ServiceTelnet_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 6),
    _ServiceTelnet_Type()
)
serviceTelnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceTelnet.setStatus("current")
_LoginFail_Type = Integer32
_LoginFail_Object = MibScalar
loginFail = _LoginFail_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 7),
    _LoginFail_Type()
)
loginFail.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    loginFail.setStatus("current")


class _LastCommand_Type(OctetString):
    """Custom type lastCommand based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_LastCommand_Type.__name__ = "OctetString"
_LastCommand_Object = MibScalar
lastCommand = _LastCommand_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 8),
    _LastCommand_Type()
)
lastCommand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lastCommand.setStatus("current")


class _CurrentRunningImage_Type(OctetString):
    """Custom type currentRunningImage based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CurrentRunningImage_Type.__name__ = "OctetString"
_CurrentRunningImage_Object = MibScalar
currentRunningImage = _CurrentRunningImage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 9),
    _CurrentRunningImage_Type()
)
currentRunningImage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentRunningImage.setStatus("current")
_SysStartUpTime_Type = TimeTicks
_SysStartUpTime_Object = MibScalar
sysStartUpTime = _SysStartUpTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 3, 10),
    _SysStartUpTime_Type()
)
sysStartUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysStartUpTime.setStatus("current")
_SysImageTable_Object = MibTable
sysImageTable = _SysImageTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4)
)
if mibBuilder.loadTexts:
    sysImageTable.setStatus("current")
_SysImageEntry_Object = MibTableRow
sysImageEntry = _SysImageEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1)
)
sysImageEntry.setIndexNames(
    (0, "SWITCH", "sysImageIndex"),
)
if mibBuilder.loadTexts:
    sysImageEntry.setStatus("current")


class _SysImageIndex_Type(Integer32):
    """Custom type sysImageIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_SysImageIndex_Type.__name__ = "Integer32"
_SysImageIndex_Object = MibTableColumn
sysImageIndex = _SysImageIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 1),
    _SysImageIndex_Type()
)
sysImageIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sysImageIndex.setStatus("current")


class _SysImageName_Type(OctetString):
    """Custom type sysImageName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysImageName_Type.__name__ = "OctetString"
_SysImageName_Object = MibTableColumn
sysImageName = _SysImageName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 2),
    _SysImageName_Type()
)
sysImageName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysImageName.setStatus("current")


class _SysImageCreateTime_Type(OctetString):
    """Custom type sysImageCreateTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysImageCreateTime_Type.__name__ = "OctetString"
_SysImageCreateTime_Object = MibTableColumn
sysImageCreateTime = _SysImageCreateTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 3),
    _SysImageCreateTime_Type()
)
sysImageCreateTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysImageCreateTime.setStatus("current")


class _SysImageVersion_Type(OctetString):
    """Custom type sysImageVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysImageVersion_Type.__name__ = "OctetString"
_SysImageVersion_Object = MibTableColumn
sysImageVersion = _SysImageVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 4),
    _SysImageVersion_Type()
)
sysImageVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysImageVersion.setStatus("current")


class _SysImageSize_Type(OctetString):
    """Custom type sysImageSize based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysImageSize_Type.__name__ = "OctetString"
_SysImageSize_Object = MibTableColumn
sysImageSize = _SysImageSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 5),
    _SysImageSize_Type()
)
sysImageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysImageSize.setStatus("current")


class _SysImageDir_Type(OctetString):
    """Custom type sysImageDir based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SysImageDir_Type.__name__ = "OctetString"
_SysImageDir_Object = MibTableColumn
sysImageDir = _SysImageDir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 6),
    _SysImageDir_Type()
)
sysImageDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysImageDir.setStatus("current")
_SysImageIsBoot_Type = TruthValue
_SysImageIsBoot_Object = MibTableColumn
sysImageIsBoot = _SysImageIsBoot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 4, 1, 7),
    _SysImageIsBoot_Type()
)
sysImageIsBoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysImageIsBoot.setStatus("current")
_Flash_ObjectIdentity = ObjectIdentity
flash = _Flash_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5)
)
_FlashManMIBObjects_ObjectIdentity = ObjectIdentity
flashManMIBObjects = _FlashManMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1)
)
_FlashDevice_ObjectIdentity = ObjectIdentity
flashDevice = _FlashDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1)
)
_FlashTable_Object = MibTable
flashTable = _FlashTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1)
)
if mibBuilder.loadTexts:
    flashTable.setStatus("current")
_FlashEntry_Object = MibTableRow
flashEntry = _FlashEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1)
)
flashEntry.setIndexNames(
    (0, "SWITCH", "flhIndex"),
)
if mibBuilder.loadTexts:
    flashEntry.setStatus("current")


class _FlhIndex_Type(Integer32):
    """Custom type flhIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_FlhIndex_Type.__name__ = "Integer32"
_FlhIndex_Object = MibTableColumn
flhIndex = _FlhIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1, 1),
    _FlhIndex_Type()
)
flhIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    flhIndex.setStatus("current")


class _FlhSize_Type(OctetString):
    """Custom type flhSize based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FlhSize_Type.__name__ = "OctetString"
_FlhSize_Object = MibTableColumn
flhSize = _FlhSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1, 2),
    _FlhSize_Type()
)
flhSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhSize.setStatus("current")
if mibBuilder.loadTexts:
    flhSize.setUnits("bytes")


class _FlhFree_Type(OctetString):
    """Custom type flhFree based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FlhFree_Type.__name__ = "OctetString"
_FlhFree_Object = MibTableColumn
flhFree = _FlhFree_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1, 3),
    _FlhFree_Type()
)
flhFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhFree.setStatus("current")
if mibBuilder.loadTexts:
    flhFree.setUnits("bytes")


class _FlhName_Type(OctetString):
    """Custom type flhName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_FlhName_Type.__name__ = "OctetString"
_FlhName_Object = MibTableColumn
flhName = _FlhName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1, 4),
    _FlhName_Type()
)
flhName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhName.setStatus("current")


class _FlhDescr_Type(OctetString):
    """Custom type flhDescr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_FlhDescr_Type.__name__ = "OctetString"
_FlhDescr_Object = MibTableColumn
flhDescr = _FlhDescr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 1, 1, 6),
    _FlhDescr_Type()
)
flhDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhDescr.setStatus("current")
_FlhFiles_ObjectIdentity = ObjectIdentity
flhFiles = _FlhFiles_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2)
)
_FlhFileTable_Object = MibTable
flhFileTable = _FlhFileTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1)
)
if mibBuilder.loadTexts:
    flhFileTable.setStatus("current")
_FlhFileEntry_Object = MibTableRow
flhFileEntry = _FlhFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1, 1)
)
flhFileEntry.setIndexNames(
    (0, "SWITCH", "flhFileIndex"),
)
if mibBuilder.loadTexts:
    flhFileEntry.setStatus("current")


class _FlhFileIndex_Type(Integer32):
    """Custom type flhFileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_FlhFileIndex_Type.__name__ = "Integer32"
_FlhFileIndex_Object = MibTableColumn
flhFileIndex = _FlhFileIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1, 1, 1),
    _FlhFileIndex_Type()
)
flhFileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    flhFileIndex.setStatus("current")


class _FlhFileName_Type(OctetString):
    """Custom type flhFileName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FlhFileName_Type.__name__ = "OctetString"
_FlhFileName_Object = MibTableColumn
flhFileName = _FlhFileName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1, 1, 2),
    _FlhFileName_Type()
)
flhFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhFileName.setStatus("current")
_FlhFileSize_Type = Integer32
_FlhFileSize_Object = MibTableColumn
flhFileSize = _FlhFileSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1, 1, 3),
    _FlhFileSize_Type()
)
flhFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhFileSize.setStatus("current")


class _FlhFileTime_Type(OctetString):
    """Custom type flhFileTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_FlhFileTime_Type.__name__ = "OctetString"
_FlhFileTime_Object = MibTableColumn
flhFileTime = _FlhFileTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 1, 2, 1, 1, 4),
    _FlhFileTime_Type()
)
flhFileTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhFileTime.setStatus("current")
_FlashOperate_ObjectIdentity = ObjectIdentity
flashOperate = _FlashOperate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2)
)
_FlhOpTable_Object = MibTable
flhOpTable = _FlhOpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1)
)
if mibBuilder.loadTexts:
    flhOpTable.setStatus("current")
_FlhOpEntry_Object = MibTableRow
flhOpEntry = _FlhOpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1)
)
flhOpEntry.setIndexNames(
    (0, "SWITCH", "flhOperIndex"),
)
if mibBuilder.loadTexts:
    flhOpEntry.setStatus("current")


class _FlhOperIndex_Type(Integer32):
    """Custom type flhOperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_FlhOperIndex_Type.__name__ = "Integer32"
_FlhOperIndex_Object = MibTableColumn
flhOperIndex = _FlhOperIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 1),
    _FlhOperIndex_Type()
)
flhOperIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    flhOperIndex.setStatus("current")


class _FlhOperType_Type(Integer32):
    """Custom type flhOperType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("flash2Flash", 1),
          ("net2Flash", 2),
          ("flash2Net", 3),
          ("delete", 4),
          ("rename", 5))
    )


_FlhOperType_Type.__name__ = "Integer32"
_FlhOperType_Object = MibTableColumn
flhOperType = _FlhOperType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 2),
    _FlhOperType_Type()
)
flhOperType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperType.setStatus("current")


class _FlhOperProtocol_Type(Integer32):
    """Custom type flhOperProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ftp", 1),
          ("tftp", 2))
    )


_FlhOperProtocol_Type.__name__ = "Integer32"
_FlhOperProtocol_Object = MibTableColumn
flhOperProtocol = _FlhOperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 3),
    _FlhOperProtocol_Type()
)
flhOperProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperProtocol.setStatus("current")
_FlhOperServerAddress_Type = IpAddress
_FlhOperServerAddress_Object = MibTableColumn
flhOperServerAddress = _FlhOperServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 4),
    _FlhOperServerAddress_Type()
)
flhOperServerAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperServerAddress.setStatus("current")


class _FlhOperServerUser_Type(OctetString):
    """Custom type flhOperServerUser based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FlhOperServerUser_Type.__name__ = "OctetString"
_FlhOperServerUser_Object = MibTableColumn
flhOperServerUser = _FlhOperServerUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 5),
    _FlhOperServerUser_Type()
)
flhOperServerUser.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperServerUser.setStatus("current")


class _FlhOperPassword_Type(OctetString):
    """Custom type flhOperPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FlhOperPassword_Type.__name__ = "OctetString"
_FlhOperPassword_Object = MibTableColumn
flhOperPassword = _FlhOperPassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 6),
    _FlhOperPassword_Type()
)
flhOperPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperPassword.setStatus("current")


class _FlhOperSourceFile_Type(OctetString):
    """Custom type flhOperSourceFile based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FlhOperSourceFile_Type.__name__ = "OctetString"
_FlhOperSourceFile_Object = MibTableColumn
flhOperSourceFile = _FlhOperSourceFile_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 7),
    _FlhOperSourceFile_Type()
)
flhOperSourceFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperSourceFile.setStatus("current")


class _FlhOperDestinationFile_Type(OctetString):
    """Custom type flhOperDestinationFile based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_FlhOperDestinationFile_Type.__name__ = "OctetString"
_FlhOperDestinationFile_Object = MibTableColumn
flhOperDestinationFile = _FlhOperDestinationFile_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 8),
    _FlhOperDestinationFile_Type()
)
flhOperDestinationFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperDestinationFile.setStatus("current")
_FlhOperStatus_Type = FlashOperationStatus
_FlhOperStatus_Object = MibTableColumn
flhOperStatus = _FlhOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 9),
    _FlhOperStatus_Type()
)
flhOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    flhOperStatus.setStatus("current")
_FlhOperIsManagementIf_Type = TruthValue
_FlhOperIsManagementIf_Object = MibTableColumn
flhOperIsManagementIf = _FlhOperIsManagementIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 12),
    _FlhOperIsManagementIf_Type()
)
flhOperIsManagementIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperIsManagementIf.setStatus("current")
_FlhOperRowStatus_Type = RowStatus
_FlhOperRowStatus_Object = MibTableColumn
flhOperRowStatus = _FlhOperRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 5, 1, 2, 1, 1, 13),
    _FlhOperRowStatus_Type()
)
flhOperRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    flhOperRowStatus.setStatus("current")
_Cf_ObjectIdentity = ObjectIdentity
cf = _Cf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6)
)
_CfManMIBObjects_ObjectIdentity = ObjectIdentity
cfManMIBObjects = _CfManMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1)
)
_CfDevice_ObjectIdentity = ObjectIdentity
cfDevice = _CfDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1)
)
_CfTable_Object = MibTable
cfTable = _CfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1)
)
if mibBuilder.loadTexts:
    cfTable.setStatus("current")
_CfEntry_Object = MibTableRow
cfEntry = _CfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1)
)
cfEntry.setIndexNames(
    (0, "SWITCH", "cfIndex"),
)
if mibBuilder.loadTexts:
    cfEntry.setStatus("current")


class _CfIndex_Type(Integer32):
    """Custom type cfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CfIndex_Type.__name__ = "Integer32"
_CfIndex_Object = MibTableColumn
cfIndex = _CfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1, 1),
    _CfIndex_Type()
)
cfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfIndex.setStatus("current")


class _CfSize_Type(OctetString):
    """Custom type cfSize based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CfSize_Type.__name__ = "OctetString"
_CfSize_Object = MibTableColumn
cfSize = _CfSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1, 2),
    _CfSize_Type()
)
cfSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfSize.setStatus("current")
if mibBuilder.loadTexts:
    cfSize.setUnits("bytes")


class _CfFree_Type(OctetString):
    """Custom type cfFree based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CfFree_Type.__name__ = "OctetString"
_CfFree_Object = MibTableColumn
cfFree = _CfFree_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1, 3),
    _CfFree_Type()
)
cfFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfFree.setStatus("current")
if mibBuilder.loadTexts:
    cfFree.setUnits("bytes")


class _CfName_Type(OctetString):
    """Custom type cfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CfName_Type.__name__ = "OctetString"
_CfName_Object = MibTableColumn
cfName = _CfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1, 4),
    _CfName_Type()
)
cfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfName.setStatus("current")


class _CfDescr_Type(OctetString):
    """Custom type cfDescr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CfDescr_Type.__name__ = "OctetString"
_CfDescr_Object = MibTableColumn
cfDescr = _CfDescr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 1, 1, 6),
    _CfDescr_Type()
)
cfDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfDescr.setStatus("current")
_CfFiles_ObjectIdentity = ObjectIdentity
cfFiles = _CfFiles_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2)
)
_CfFileTable_Object = MibTable
cfFileTable = _CfFileTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1)
)
if mibBuilder.loadTexts:
    cfFileTable.setStatus("current")
_CfFileEntry_Object = MibTableRow
cfFileEntry = _CfFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1, 1)
)
cfFileEntry.setIndexNames(
    (0, "SWITCH", "cfFileIndex"),
)
if mibBuilder.loadTexts:
    cfFileEntry.setStatus("current")


class _CfFileIndex_Type(Integer32):
    """Custom type cfFileIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CfFileIndex_Type.__name__ = "Integer32"
_CfFileIndex_Object = MibTableColumn
cfFileIndex = _CfFileIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1, 1, 1),
    _CfFileIndex_Type()
)
cfFileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfFileIndex.setStatus("current")


class _CfFileName_Type(OctetString):
    """Custom type cfFileName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_CfFileName_Type.__name__ = "OctetString"
_CfFileName_Object = MibTableColumn
cfFileName = _CfFileName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1, 1, 2),
    _CfFileName_Type()
)
cfFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfFileName.setStatus("current")
_CfFileSize_Type = Integer32
_CfFileSize_Object = MibTableColumn
cfFileSize = _CfFileSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1, 1, 3),
    _CfFileSize_Type()
)
cfFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfFileSize.setStatus("current")


class _CfFileTime_Type(OctetString):
    """Custom type cfFileTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_CfFileTime_Type.__name__ = "OctetString"
_CfFileTime_Object = MibTableColumn
cfFileTime = _CfFileTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 1, 2, 1, 1, 4),
    _CfFileTime_Type()
)
cfFileTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfFileTime.setStatus("current")
_CfOperate_ObjectIdentity = ObjectIdentity
cfOperate = _CfOperate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2)
)
_CfOpTable_Object = MibTable
cfOpTable = _CfOpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1)
)
if mibBuilder.loadTexts:
    cfOpTable.setStatus("current")
_CfOpEntry_Object = MibTableRow
cfOpEntry = _CfOpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1)
)
cfOpEntry.setIndexNames(
    (0, "SWITCH", "cfOperIndex"),
)
if mibBuilder.loadTexts:
    cfOpEntry.setStatus("current")


class _CfOperIndex_Type(Integer32):
    """Custom type cfOperIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CfOperIndex_Type.__name__ = "Integer32"
_CfOperIndex_Object = MibTableColumn
cfOperIndex = _CfOperIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 1),
    _CfOperIndex_Type()
)
cfOperIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfOperIndex.setStatus("current")


class _CfOperType_Type(Integer32):
    """Custom type cfOperType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cf2Cf", 1),
          ("net2Cf", 2),
          ("cf2Net", 3),
          ("delete", 4),
          ("rename", 5))
    )


_CfOperType_Type.__name__ = "Integer32"
_CfOperType_Object = MibTableColumn
cfOperType = _CfOperType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 2),
    _CfOperType_Type()
)
cfOperType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperType.setStatus("current")


class _CfOperProtocol_Type(Integer32):
    """Custom type cfOperProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ftp", 1),
          ("tftp", 2))
    )


_CfOperProtocol_Type.__name__ = "Integer32"
_CfOperProtocol_Object = MibTableColumn
cfOperProtocol = _CfOperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 3),
    _CfOperProtocol_Type()
)
cfOperProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperProtocol.setStatus("current")
_CfOperServerAddress_Type = IpAddress
_CfOperServerAddress_Object = MibTableColumn
cfOperServerAddress = _CfOperServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 4),
    _CfOperServerAddress_Type()
)
cfOperServerAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperServerAddress.setStatus("current")


class _CfOperServerUser_Type(OctetString):
    """Custom type cfOperServerUser based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_CfOperServerUser_Type.__name__ = "OctetString"
_CfOperServerUser_Object = MibTableColumn
cfOperServerUser = _CfOperServerUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 5),
    _CfOperServerUser_Type()
)
cfOperServerUser.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperServerUser.setStatus("current")


class _CfOperPassword_Type(OctetString):
    """Custom type cfOperPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_CfOperPassword_Type.__name__ = "OctetString"
_CfOperPassword_Object = MibTableColumn
cfOperPassword = _CfOperPassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 6),
    _CfOperPassword_Type()
)
cfOperPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperPassword.setStatus("current")


class _CfOperSourceFile_Type(OctetString):
    """Custom type cfOperSourceFile based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CfOperSourceFile_Type.__name__ = "OctetString"
_CfOperSourceFile_Object = MibTableColumn
cfOperSourceFile = _CfOperSourceFile_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 7),
    _CfOperSourceFile_Type()
)
cfOperSourceFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperSourceFile.setStatus("current")


class _CfOperDestinationFile_Type(OctetString):
    """Custom type cfOperDestinationFile based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CfOperDestinationFile_Type.__name__ = "OctetString"
_CfOperDestinationFile_Object = MibTableColumn
cfOperDestinationFile = _CfOperDestinationFile_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 8),
    _CfOperDestinationFile_Type()
)
cfOperDestinationFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperDestinationFile.setStatus("current")
_CfOperStatus_Type = CfOperationStatus
_CfOperStatus_Object = MibTableColumn
cfOperStatus = _CfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 9),
    _CfOperStatus_Type()
)
cfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfOperStatus.setStatus("current")
_CfOperIsManagementIf_Type = TruthValue
_CfOperIsManagementIf_Object = MibTableColumn
cfOperIsManagementIf = _CfOperIsManagementIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 12),
    _CfOperIsManagementIf_Type()
)
cfOperIsManagementIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfOperIsManagementIf.setStatus("current")
_CfOperRowStatus_Type = RowStatus
_CfOperRowStatus_Object = MibTableColumn
cfOperRowStatus = _CfOperRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 6, 1, 2, 1, 1, 13),
    _CfOperRowStatus_Type()
)
cfOperRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfOperRowStatus.setStatus("current")
_SysTrap_ObjectIdentity = ObjectIdentity
sysTrap = _SysTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7)
)
_Time_ObjectIdentity = ObjectIdentity
time = _Time_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8)
)
_TimeSet_ObjectIdentity = ObjectIdentity
timeSet = _TimeSet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 1)
)


class _TimeSetClock_Type(OctetString):
    """Custom type timeSetClock based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TimeSetClock_Type.__name__ = "OctetString"
_TimeSetClock_Object = MibScalar
timeSetClock = _TimeSetClock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 1, 1),
    _TimeSetClock_Type()
)
timeSetClock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSetClock.setStatus("current")
_TimeSetMonth_Type = Integer32
_TimeSetMonth_Object = MibScalar
timeSetMonth = _TimeSetMonth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 1, 2),
    _TimeSetMonth_Type()
)
timeSetMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSetMonth.setStatus("current")
_TimeSetDay_Type = Integer32
_TimeSetDay_Object = MibScalar
timeSetDay = _TimeSetDay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 1, 3),
    _TimeSetDay_Type()
)
timeSetDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSetDay.setStatus("current")
_TimeSetYear_Type = Integer32
_TimeSetYear_Object = MibScalar
timeSetYear = _TimeSetYear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 1, 4),
    _TimeSetYear_Type()
)
timeSetYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSetYear.setStatus("current")
_TimezoneSetTable_Object = MibTable
timezoneSetTable = _TimezoneSetTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2)
)
if mibBuilder.loadTexts:
    timezoneSetTable.setStatus("current")
_TimezoneSetEntry_Object = MibTableRow
timezoneSetEntry = _TimezoneSetEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1)
)
timezoneSetEntry.setIndexNames(
    (0, "SWITCH", "timezoneSetZoneName"),
)
if mibBuilder.loadTexts:
    timezoneSetEntry.setStatus("current")


class _TimezoneSetZoneName_Type(OctetString):
    """Custom type timezoneSetZoneName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TimezoneSetZoneName_Type.__name__ = "OctetString"
_TimezoneSetZoneName_Object = MibTableColumn
timezoneSetZoneName = _TimezoneSetZoneName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 1),
    _TimezoneSetZoneName_Type()
)
timezoneSetZoneName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetZoneName.setStatus("current")
_TimezoneSetType_Type = Integer32
_TimezoneSetType_Object = MibTableColumn
timezoneSetType = _TimezoneSetType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 2),
    _TimezoneSetType_Type()
)
timezoneSetType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetType.setStatus("current")
_TimezoneSetHours_Type = Integer32
_TimezoneSetHours_Object = MibTableColumn
timezoneSetHours = _TimezoneSetHours_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 3),
    _TimezoneSetHours_Type()
)
timezoneSetHours.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetHours.setStatus("current")
_TimezoneSetMinutes_Type = Integer32
_TimezoneSetMinutes_Object = MibTableColumn
timezoneSetMinutes = _TimezoneSetMinutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 4),
    _TimezoneSetMinutes_Type()
)
timezoneSetMinutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetMinutes.setStatus("current")
_TimezoneSetSeconds_Type = Integer32
_TimezoneSetSeconds_Object = MibTableColumn
timezoneSetSeconds = _TimezoneSetSeconds_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 5),
    _TimezoneSetSeconds_Type()
)
timezoneSetSeconds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetSeconds.setStatus("current")
_TimezoneSetState_Type = RowStatus
_TimezoneSetState_Object = MibTableColumn
timezoneSetState = _TimezoneSetState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 2, 1, 6),
    _TimezoneSetState_Type()
)
timezoneSetState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timezoneSetState.setStatus("current")
_RecurrentSummerTimeTable_Object = MibTable
recurrentSummerTimeTable = _RecurrentSummerTimeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3)
)
if mibBuilder.loadTexts:
    recurrentSummerTimeTable.setStatus("current")
_RecurrentSummerTimeEntry_Object = MibTableRow
recurrentSummerTimeEntry = _RecurrentSummerTimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1)
)
recurrentSummerTimeEntry.setIndexNames(
    (0, "SWITCH", "recurrentSummerTimeZoneName"),
)
if mibBuilder.loadTexts:
    recurrentSummerTimeEntry.setStatus("current")


class _RecurrentSummerTimeZoneName_Type(OctetString):
    """Custom type recurrentSummerTimeZoneName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RecurrentSummerTimeZoneName_Type.__name__ = "OctetString"
_RecurrentSummerTimeZoneName_Object = MibTableColumn
recurrentSummerTimeZoneName = _RecurrentSummerTimeZoneName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 1),
    _RecurrentSummerTimeZoneName_Type()
)
recurrentSummerTimeZoneName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeZoneName.setStatus("current")
_RecurrentSummerTimeStartMonth_Type = Integer32
_RecurrentSummerTimeStartMonth_Object = MibTableColumn
recurrentSummerTimeStartMonth = _RecurrentSummerTimeStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 2),
    _RecurrentSummerTimeStartMonth_Type()
)
recurrentSummerTimeStartMonth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeStartMonth.setStatus("current")
_RecurrentSummerTimeStartDay_Type = Integer32
_RecurrentSummerTimeStartDay_Object = MibTableColumn
recurrentSummerTimeStartDay = _RecurrentSummerTimeStartDay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 3),
    _RecurrentSummerTimeStartDay_Type()
)
recurrentSummerTimeStartDay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeStartDay.setStatus("current")


class _RecurrentSummerTimeStartClock_Type(OctetString):
    """Custom type recurrentSummerTimeStartClock based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_RecurrentSummerTimeStartClock_Type.__name__ = "OctetString"
_RecurrentSummerTimeStartClock_Object = MibTableColumn
recurrentSummerTimeStartClock = _RecurrentSummerTimeStartClock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 4),
    _RecurrentSummerTimeStartClock_Type()
)
recurrentSummerTimeStartClock.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeStartClock.setStatus("current")
_RecurrentSummerTimeEndMonth_Type = Integer32
_RecurrentSummerTimeEndMonth_Object = MibTableColumn
recurrentSummerTimeEndMonth = _RecurrentSummerTimeEndMonth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 5),
    _RecurrentSummerTimeEndMonth_Type()
)
recurrentSummerTimeEndMonth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeEndMonth.setStatus("current")
_RecurrentSummerTimeEndDay_Type = Integer32
_RecurrentSummerTimeEndDay_Object = MibTableColumn
recurrentSummerTimeEndDay = _RecurrentSummerTimeEndDay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 6),
    _RecurrentSummerTimeEndDay_Type()
)
recurrentSummerTimeEndDay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeEndDay.setStatus("current")


class _RecurrentSummerTimeEndClock_Type(OctetString):
    """Custom type recurrentSummerTimeEndClock based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_RecurrentSummerTimeEndClock_Type.__name__ = "OctetString"
_RecurrentSummerTimeEndClock_Object = MibTableColumn
recurrentSummerTimeEndClock = _RecurrentSummerTimeEndClock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 7),
    _RecurrentSummerTimeEndClock_Type()
)
recurrentSummerTimeEndClock.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeEndClock.setStatus("current")
_RecurrentSummerTimeOffset_Type = Integer32
_RecurrentSummerTimeOffset_Object = MibTableColumn
recurrentSummerTimeOffset = _RecurrentSummerTimeOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 8),
    _RecurrentSummerTimeOffset_Type()
)
recurrentSummerTimeOffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeOffset.setStatus("current")
_RecurrentSummerTimeState_Type = RowStatus
_RecurrentSummerTimeState_Object = MibTableColumn
recurrentSummerTimeState = _RecurrentSummerTimeState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 3, 1, 9),
    _RecurrentSummerTimeState_Type()
)
recurrentSummerTimeState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    recurrentSummerTimeState.setStatus("current")
_SummerTimeTable_Object = MibTable
summerTimeTable = _SummerTimeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4)
)
if mibBuilder.loadTexts:
    summerTimeTable.setStatus("current")
_SummerTimeEntry_Object = MibTableRow
summerTimeEntry = _SummerTimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1)
)
summerTimeEntry.setIndexNames(
    (0, "SWITCH", "summerTimeZoneName"),
)
if mibBuilder.loadTexts:
    summerTimeEntry.setStatus("current")


class _SummerTimeZoneName_Type(OctetString):
    """Custom type summerTimeZoneName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SummerTimeZoneName_Type.__name__ = "OctetString"
_SummerTimeZoneName_Object = MibTableColumn
summerTimeZoneName = _SummerTimeZoneName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 1),
    _SummerTimeZoneName_Type()
)
summerTimeZoneName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeZoneName.setStatus("current")
_SummerTimeStartMonth_Type = Integer32
_SummerTimeStartMonth_Object = MibTableColumn
summerTimeStartMonth = _SummerTimeStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 2),
    _SummerTimeStartMonth_Type()
)
summerTimeStartMonth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeStartMonth.setStatus("current")
_SummerTimeStartDay_Type = Integer32
_SummerTimeStartDay_Object = MibTableColumn
summerTimeStartDay = _SummerTimeStartDay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 3),
    _SummerTimeStartDay_Type()
)
summerTimeStartDay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeStartDay.setStatus("current")
_SummerTimeStartYear_Type = Integer32
_SummerTimeStartYear_Object = MibTableColumn
summerTimeStartYear = _SummerTimeStartYear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 4),
    _SummerTimeStartYear_Type()
)
summerTimeStartYear.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeStartYear.setStatus("current")


class _SummerTimeStartClock_Type(OctetString):
    """Custom type summerTimeStartClock based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SummerTimeStartClock_Type.__name__ = "OctetString"
_SummerTimeStartClock_Object = MibTableColumn
summerTimeStartClock = _SummerTimeStartClock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 5),
    _SummerTimeStartClock_Type()
)
summerTimeStartClock.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeStartClock.setStatus("current")
_SummerTimeEndMonth_Type = Integer32
_SummerTimeEndMonth_Object = MibTableColumn
summerTimeEndMonth = _SummerTimeEndMonth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 6),
    _SummerTimeEndMonth_Type()
)
summerTimeEndMonth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeEndMonth.setStatus("current")
_SummerTimeEndDay_Type = Integer32
_SummerTimeEndDay_Object = MibTableColumn
summerTimeEndDay = _SummerTimeEndDay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 7),
    _SummerTimeEndDay_Type()
)
summerTimeEndDay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeEndDay.setStatus("current")
_SummerTimeEndYear_Type = Integer32
_SummerTimeEndYear_Object = MibTableColumn
summerTimeEndYear = _SummerTimeEndYear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 8),
    _SummerTimeEndYear_Type()
)
summerTimeEndYear.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeEndYear.setStatus("current")


class _SummerTimeEndClock_Type(OctetString):
    """Custom type summerTimeEndClock based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SummerTimeEndClock_Type.__name__ = "OctetString"
_SummerTimeEndClock_Object = MibTableColumn
summerTimeEndClock = _SummerTimeEndClock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 9),
    _SummerTimeEndClock_Type()
)
summerTimeEndClock.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeEndClock.setStatus("current")
_SummerTimeOffset_Type = Integer32
_SummerTimeOffset_Object = MibTableColumn
summerTimeOffset = _SummerTimeOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 10),
    _SummerTimeOffset_Type()
)
summerTimeOffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeOffset.setStatus("current")
_SummerTimeState_Type = RowStatus
_SummerTimeState_Object = MibTableColumn
summerTimeState = _SummerTimeState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 8, 4, 1, 11),
    _SummerTimeState_Type()
)
summerTimeState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    summerTimeState.setStatus("current")
_CpuUsage_ObjectIdentity = ObjectIdentity
cpuUsage = _CpuUsage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 1, 9)
)


class _FiveSeconds_Type(OctetString):
    """Custom type fiveSeconds based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FiveSeconds_Type.__name__ = "OctetString"
_FiveSeconds_Object = MibScalar
fiveSeconds = _FiveSeconds_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 9, 1),
    _FiveSeconds_Type()
)
fiveSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fiveSeconds.setStatus("current")


class _OneMinute_Type(OctetString):
    """Custom type oneMinute based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OneMinute_Type.__name__ = "OctetString"
_OneMinute_Object = MibScalar
oneMinute = _OneMinute_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 9, 2),
    _OneMinute_Type()
)
oneMinute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oneMinute.setStatus("current")


class _FiveMinutes_Type(OctetString):
    """Custom type fiveMinutes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FiveMinutes_Type.__name__ = "OctetString"
_FiveMinutes_Object = MibScalar
fiveMinutes = _FiveMinutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 1, 9, 3),
    _FiveMinutes_Type()
)
fiveMinutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fiveMinutes.setStatus("current")
_Syslog_ObjectIdentity = ObjectIdentity
syslog = _Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2)
)
_SyslogTimestamp_Type = TimeStampFormatType
_SyslogTimestamp_Object = MibScalar
syslogTimestamp = _SyslogTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 1),
    _SyslogTimestamp_Type()
)
syslogTimestamp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTimestamp.setStatus("current")
_SyslogOperateLogEnable_Type = TruthValue
_SyslogOperateLogEnable_Object = MibScalar
syslogOperateLogEnable = _SyslogOperateLogEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 2),
    _SyslogOperateLogEnable_Type()
)
syslogOperateLogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogOperateLogEnable.setStatus("current")
_SyslogBuffer_ObjectIdentity = ObjectIdentity
syslogBuffer = _SyslogBuffer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2, 3)
)


class _SyslogBufferMaxSize_Type(Integer32):
    """Custom type syslogBufferMaxSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_SyslogBufferMaxSize_Type.__name__ = "Integer32"
_SyslogBufferMaxSize_Object = MibScalar
syslogBufferMaxSize = _SyslogBufferMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 3, 1),
    _SyslogBufferMaxSize_Type()
)
syslogBufferMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogBufferMaxSize.setStatus("current")
_SyslogbufferSeverity_Type = MessageLevelType
_SyslogbufferSeverity_Object = MibScalar
syslogbufferSeverity = _SyslogbufferSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 3, 2),
    _SyslogbufferSeverity_Type()
)
syslogbufferSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogbufferSeverity.setStatus("current")
_SyslogBuffercurrentMessages_Type = Unsigned32
_SyslogBuffercurrentMessages_Object = MibScalar
syslogBuffercurrentMessages = _SyslogBuffercurrentMessages_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 3, 3),
    _SyslogBuffercurrentMessages_Type()
)
syslogBuffercurrentMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogBuffercurrentMessages.setStatus("current")
_SyslogBufferDroppedMessages_Type = Counter32
_SyslogBufferDroppedMessages_Object = MibScalar
syslogBufferDroppedMessages = _SyslogBufferDroppedMessages_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 3, 4),
    _SyslogBufferDroppedMessages_Type()
)
syslogBufferDroppedMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogBufferDroppedMessages.setStatus("current")
_SyslogFile_ObjectIdentity = ObjectIdentity
syslogFile = _SyslogFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2, 4)
)
_SyslogFileEnable_Type = TruthValue
_SyslogFileEnable_Object = MibScalar
syslogFileEnable = _SyslogFileEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 4, 1),
    _SyslogFileEnable_Type()
)
syslogFileEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogFileEnable.setStatus("current")
_SyslogFileSeverity_Type = MessageLevelType
_SyslogFileSeverity_Object = MibScalar
syslogFileSeverity = _SyslogFileSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 4, 2),
    _SyslogFileSeverity_Type()
)
syslogFileSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogFileSeverity.setStatus("current")
_SyslogServer_ObjectIdentity = ObjectIdentity
syslogServer = _SyslogServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5)
)
_SyslogServerEnable_Type = TruthValue
_SyslogServerEnable_Object = MibScalar
syslogServerEnable = _SyslogServerEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 1),
    _SyslogServerEnable_Type()
)
syslogServerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerEnable.setStatus("current")
_SyslogServerFacility_Type = FacilityType
_SyslogServerFacility_Object = MibScalar
syslogServerFacility = _SyslogServerFacility_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 2),
    _SyslogServerFacility_Type()
)
syslogServerFacility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerFacility.setStatus("current")
_SyslogServerSeverity_Type = MessageLevelType
_SyslogServerSeverity_Object = MibScalar
syslogServerSeverity = _SyslogServerSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 3),
    _SyslogServerSeverity_Type()
)
syslogServerSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogServerSeverity.setStatus("current")
_SyslogServerTable_Object = MibTable
syslogServerTable = _SyslogServerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 4)
)
if mibBuilder.loadTexts:
    syslogServerTable.setStatus("current")
_SyslogServerEntry_Object = MibTableRow
syslogServerEntry = _SyslogServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 4, 1)
)
syslogServerEntry.setIndexNames(
    (0, "SWITCH", "syslogServerIpaddress"),
    (0, "SWITCH", "syslogServerMgmtIf"),
)
if mibBuilder.loadTexts:
    syslogServerEntry.setStatus("current")
_SyslogServerIpaddress_Type = IpAddress
_SyslogServerIpaddress_Object = MibTableColumn
syslogServerIpaddress = _SyslogServerIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 4, 1, 1),
    _SyslogServerIpaddress_Type()
)
syslogServerIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogServerIpaddress.setStatus("current")


class _SyslogServerMgmtIf_Type(Integer32):
    """Custom type syslogServerMgmtIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 1),
          ("useMgmtIf", 2))
    )


_SyslogServerMgmtIf_Type.__name__ = "Integer32"
_SyslogServerMgmtIf_Object = MibTableColumn
syslogServerMgmtIf = _SyslogServerMgmtIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 4, 1, 2),
    _SyslogServerMgmtIf_Type()
)
syslogServerMgmtIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogServerMgmtIf.setStatus("current")
_SyslogServerRowStatus_Type = RowStatus
_SyslogServerRowStatus_Object = MibTableColumn
syslogServerRowStatus = _SyslogServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 5, 4, 1, 3),
    _SyslogServerRowStatus_Type()
)
syslogServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    syslogServerRowStatus.setStatus("current")
_SyslogTrap_ObjectIdentity = ObjectIdentity
syslogTrap = _SyslogTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2, 6)
)
_SyslogTrapEnable_Type = TruthValue
_SyslogTrapEnable_Object = MibScalar
syslogTrapEnable = _SyslogTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 6, 1),
    _SyslogTrapEnable_Type()
)
syslogTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTrapEnable.setStatus("current")
_SyslogTrapSeverity_Type = MessageTrapLevelType
_SyslogTrapSeverity_Object = MibScalar
syslogTrapSeverity = _SyslogTrapSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 6, 2),
    _SyslogTrapSeverity_Type()
)
syslogTrapSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogTrapSeverity.setStatus("current")
_SyslogMerge_ObjectIdentity = ObjectIdentity
syslogMerge = _SyslogMerge_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 2, 7)
)
_SyslogMergeEnable_Type = TruthValue
_SyslogMergeEnable_Object = MibScalar
syslogMergeEnable = _SyslogMergeEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 7, 1),
    _SyslogMergeEnable_Type()
)
syslogMergeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogMergeEnable.setStatus("current")


class _SyslogMergeFifoSize_Type(Integer32):
    """Custom type syslogMergeFifoSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 10240),
    )


_SyslogMergeFifoSize_Type.__name__ = "Integer32"
_SyslogMergeFifoSize_Object = MibScalar
syslogMergeFifoSize = _SyslogMergeFifoSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 7, 2),
    _SyslogMergeFifoSize_Type()
)
syslogMergeFifoSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogMergeFifoSize.setStatus("current")


class _SyslogMergeTimeout_Type(Integer32):
    """Custom type syslogMergeTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_SyslogMergeTimeout_Type.__name__ = "Integer32"
_SyslogMergeTimeout_Object = MibScalar
syslogMergeTimeout = _SyslogMergeTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 7, 3),
    _SyslogMergeTimeout_Type()
)
syslogMergeTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogMergeTimeout.setStatus("current")
_SyslogSync_Type = Integer32
_SyslogSync_Object = MibScalar
syslogSync = _SyslogSync_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 8),
    _SyslogSync_Type()
)
syslogSync.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSync.setStatus("current")
_SyslogClearLogBuff_Type = Integer32
_SyslogClearLogBuff_Object = MibScalar
syslogClearLogBuff = _SyslogClearLogBuff_Object(
    (1, 3, 6, 1, 4, 1, 27975, 2, 9),
    _SyslogClearLogBuff_Type()
)
syslogClearLogBuff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogClearLogBuff.setStatus("current")
_Mirror_ObjectIdentity = ObjectIdentity
mirror = _Mirror_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 3)
)
_MSSrcIfTable_Object = MibTable
mSSrcIfTable = _MSSrcIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1)
)
if mibBuilder.loadTexts:
    mSSrcIfTable.setStatus("current")
_MSSrcIfEntry_Object = MibTableRow
mSSrcIfEntry = _MSSrcIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1, 1)
)
mSSrcIfEntry.setIndexNames(
    (0, "SWITCH", "mSSrcIfID"),
    (0, "SWITCH", "mSSrcIfIndex"),
)
if mibBuilder.loadTexts:
    mSSrcIfEntry.setStatus("current")


class _MSSrcIfID_Type(Integer32):
    """Custom type mSSrcIfID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_MSSrcIfID_Type.__name__ = "Integer32"
_MSSrcIfID_Object = MibTableColumn
mSSrcIfID = _MSSrcIfID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1, 1, 1),
    _MSSrcIfID_Type()
)
mSSrcIfID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSSrcIfID.setStatus("current")


class _MSSrcIfIndex_Type(Integer32):
    """Custom type mSSrcIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MSSrcIfIndex_Type.__name__ = "Integer32"
_MSSrcIfIndex_Object = MibTableColumn
mSSrcIfIndex = _MSSrcIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1, 1, 2),
    _MSSrcIfIndex_Type()
)
mSSrcIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSSrcIfIndex.setStatus("current")


class _MSSrcIfDirection_Type(Integer32):
    """Custom type mSSrcIfDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("rx", 1),
          ("tx", 2),
          ("both", 3))
    )


_MSSrcIfDirection_Type.__name__ = "Integer32"
_MSSrcIfDirection_Object = MibTableColumn
mSSrcIfDirection = _MSSrcIfDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1, 1, 3),
    _MSSrcIfDirection_Type()
)
mSSrcIfDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSSrcIfDirection.setStatus("current")
_MSSrcIfRowStatus_Type = RowStatus
_MSSrcIfRowStatus_Object = MibTableColumn
mSSrcIfRowStatus = _MSSrcIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 1, 1, 4),
    _MSSrcIfRowStatus_Type()
)
mSSrcIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSSrcIfRowStatus.setStatus("current")
_MSSrcVlanTable_Object = MibTable
mSSrcVlanTable = _MSSrcVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2)
)
if mibBuilder.loadTexts:
    mSSrcVlanTable.setStatus("current")
_MSSrcVlanEntry_Object = MibTableRow
mSSrcVlanEntry = _MSSrcVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2, 1)
)
mSSrcVlanEntry.setIndexNames(
    (0, "SWITCH", "mSSrcVlanID"),
    (0, "SWITCH", "mSSrcVlanNum"),
)
if mibBuilder.loadTexts:
    mSSrcVlanEntry.setStatus("current")


class _MSSrcVlanID_Type(Integer32):
    """Custom type mSSrcVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_MSSrcVlanID_Type.__name__ = "Integer32"
_MSSrcVlanID_Object = MibTableColumn
mSSrcVlanID = _MSSrcVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2, 1, 1),
    _MSSrcVlanID_Type()
)
mSSrcVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSSrcVlanID.setStatus("current")


class _MSSrcVlanNum_Type(Integer32):
    """Custom type mSSrcVlanNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MSSrcVlanNum_Type.__name__ = "Integer32"
_MSSrcVlanNum_Object = MibTableColumn
mSSrcVlanNum = _MSSrcVlanNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2, 1, 2),
    _MSSrcVlanNum_Type()
)
mSSrcVlanNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSSrcVlanNum.setStatus("current")


class _MSSrcVlanDirection_Type(Integer32):
    """Custom type mSSrcVlanDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("rx", 1),
          ("tx", 2),
          ("both", 3))
    )


_MSSrcVlanDirection_Type.__name__ = "Integer32"
_MSSrcVlanDirection_Object = MibTableColumn
mSSrcVlanDirection = _MSSrcVlanDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2, 1, 3),
    _MSSrcVlanDirection_Type()
)
mSSrcVlanDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSSrcVlanDirection.setStatus("current")
_MSSrcVlanRowStatus_Type = RowStatus
_MSSrcVlanRowStatus_Object = MibTableColumn
mSSrcVlanRowStatus = _MSSrcVlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 2, 1, 4),
    _MSSrcVlanRowStatus_Type()
)
mSSrcVlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSSrcVlanRowStatus.setStatus("current")
_MSDestIfTable_Object = MibTable
mSDestIfTable = _MSDestIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3)
)
if mibBuilder.loadTexts:
    mSDestIfTable.setStatus("current")
_MSDestIfEntry_Object = MibTableRow
mSDestIfEntry = _MSDestIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1)
)
mSDestIfEntry.setIndexNames(
    (0, "SWITCH", "mSDestIfID"),
)
if mibBuilder.loadTexts:
    mSDestIfEntry.setStatus("current")


class _MSDestIfID_Type(Integer32):
    """Custom type mSDestIfID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_MSDestIfID_Type.__name__ = "Integer32"
_MSDestIfID_Object = MibTableColumn
mSDestIfID = _MSDestIfID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1, 1),
    _MSDestIfID_Type()
)
mSDestIfID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSDestIfID.setStatus("current")


class _MSDestIfIndex_Type(Integer32):
    """Custom type mSDestIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_MSDestIfIndex_Type.__name__ = "Integer32"
_MSDestIfIndex_Object = MibTableColumn
mSDestIfIndex = _MSDestIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1, 2),
    _MSDestIfIndex_Type()
)
mSDestIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSDestIfIndex.setStatus("current")


class _MSSessionType_Type(Integer32):
    """Custom type mSSessionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("remote", 2))
    )


_MSSessionType_Type.__name__ = "Integer32"
_MSSessionType_Object = MibTableColumn
mSSessionType = _MSSessionType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1, 3),
    _MSSessionType_Type()
)
mSSessionType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSSessionType.setStatus("current")


class _MSDestVlanID_Type(Integer32):
    """Custom type mSDestVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4094),
    )


_MSDestVlanID_Type.__name__ = "Integer32"
_MSDestVlanID_Object = MibTableColumn
mSDestVlanID = _MSDestVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1, 4),
    _MSDestVlanID_Type()
)
mSDestVlanID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSDestVlanID.setStatus("current")
_MSDestIfRowStatus_Type = RowStatus
_MSDestIfRowStatus_Object = MibTableColumn
mSDestIfRowStatus = _MSDestIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 3, 1, 5),
    _MSDestIfRowStatus_Type()
)
mSDestIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSDestIfRowStatus.setStatus("current")
_MSTable_Object = MibTable
mSTable = _MSTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4)
)
if mibBuilder.loadTexts:
    mSTable.setStatus("current")
_MSEntry_Object = MibTableRow
mSEntry = _MSEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4, 1)
)
mSEntry.setIndexNames(
    (0, "SWITCH", "mSID"),
)
if mibBuilder.loadTexts:
    mSEntry.setStatus("current")


class _MSID_Type(Integer32):
    """Custom type mSID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MSID_Type.__name__ = "Integer32"
_MSID_Object = MibTableColumn
mSID = _MSID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4, 1, 1),
    _MSID_Type()
)
mSID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSID.setStatus("current")


class _MSType_Type(Integer32):
    """Custom type mSType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("remote", 2))
    )


_MSType_Type.__name__ = "Integer32"
_MSType_Object = MibTableColumn
mSType = _MSType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4, 1, 2),
    _MSType_Type()
)
mSType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mSType.setStatus("current")


class _MSStatus_Type(Integer32):
    """Custom type mSStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MSStatus_Type.__name__ = "Integer32"
_MSStatus_Object = MibTableColumn
mSStatus = _MSStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4, 1, 3),
    _MSStatus_Type()
)
mSStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mSStatus.setStatus("current")
_MSRowStatus_Type = RowStatus
_MSRowStatus_Object = MibTableColumn
mSRowStatus = _MSRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 4, 1, 4),
    _MSRowStatus_Type()
)
mSRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSRowStatus.setStatus("current")
_MSEscapeMacTable_Object = MibTable
mSEscapeMacTable = _MSEscapeMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5)
)
if mibBuilder.loadTexts:
    mSEscapeMacTable.setStatus("current")
_MSEscapeMacEntry_Object = MibTableRow
mSEscapeMacEntry = _MSEscapeMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5, 1)
)
mSEscapeMacEntry.setIndexNames(
    (0, "SWITCH", "mSEscapeMacIndex"),
)
if mibBuilder.loadTexts:
    mSEscapeMacEntry.setStatus("current")


class _MSEscapeMacIndex_Type(Integer32):
    """Custom type mSEscapeMacIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_MSEscapeMacIndex_Type.__name__ = "Integer32"
_MSEscapeMacIndex_Object = MibTableColumn
mSEscapeMacIndex = _MSEscapeMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5, 1, 1),
    _MSEscapeMacIndex_Type()
)
mSEscapeMacIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mSEscapeMacIndex.setStatus("current")


class _MSEscapeMacAddress_Type(OctetString):
    """Custom type mSEscapeMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 15),
    )


_MSEscapeMacAddress_Type.__name__ = "OctetString"
_MSEscapeMacAddress_Object = MibTableColumn
mSEscapeMacAddress = _MSEscapeMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5, 1, 2),
    _MSEscapeMacAddress_Type()
)
mSEscapeMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSEscapeMacAddress.setStatus("current")


class _MSEscapeMacMask_Type(OctetString):
    """Custom type mSEscapeMacMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 15),
    )


_MSEscapeMacMask_Type.__name__ = "OctetString"
_MSEscapeMacMask_Object = MibTableColumn
mSEscapeMacMask = _MSEscapeMacMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5, 1, 3),
    _MSEscapeMacMask_Type()
)
mSEscapeMacMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSEscapeMacMask.setStatus("current")
_MSEscapeMacRowStatus_Type = RowStatus
_MSEscapeMacRowStatus_Object = MibTableColumn
mSEscapeMacRowStatus = _MSEscapeMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 3, 5, 1, 4),
    _MSEscapeMacRowStatus_Type()
)
mSEscapeMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mSEscapeMacRowStatus.setStatus("current")
_PortSecurity_ObjectIdentity = ObjectIdentity
portSecurity = _PortSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 4)
)
_PortSecurityObject_ObjectIdentity = ObjectIdentity
portSecurityObject = _PortSecurityObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1)
)
_PortSecurityPortTable_Object = MibTable
portSecurityPortTable = _PortSecurityPortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1)
)
if mibBuilder.loadTexts:
    portSecurityPortTable.setStatus("current")
_PortSecurityPortEntry_Object = MibTableRow
portSecurityPortEntry = _PortSecurityPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1, 1)
)
portSecurityPortEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    portSecurityPortEntry.setStatus("current")


class _PortSecurityEnable_Type(Integer32):
    """Custom type portSecurityEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_PortSecurityEnable_Type.__name__ = "Integer32"
_PortSecurityEnable_Object = MibTableColumn
portSecurityEnable = _PortSecurityEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1, 1, 1),
    _PortSecurityEnable_Type()
)
portSecurityEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portSecurityEnable.setStatus("current")


class _PortSecurityViolationMode_Type(Integer32):
    """Custom type portSecurityViolationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("protect", 0),
          ("restrict", 1),
          ("shutdown", 2))
    )


_PortSecurityViolationMode_Type.__name__ = "Integer32"
_PortSecurityViolationMode_Object = MibTableColumn
portSecurityViolationMode = _PortSecurityViolationMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1, 1, 2),
    _PortSecurityViolationMode_Type()
)
portSecurityViolationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portSecurityViolationMode.setStatus("current")
_PortSecurityMaximumNumberOfMacAddresses_Type = Integer32
_PortSecurityMaximumNumberOfMacAddresses_Object = MibTableColumn
portSecurityMaximumNumberOfMacAddresses = _PortSecurityMaximumNumberOfMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1, 1, 3),
    _PortSecurityMaximumNumberOfMacAddresses_Type()
)
portSecurityMaximumNumberOfMacAddresses.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portSecurityMaximumNumberOfMacAddresses.setStatus("current")
_PortSecurityCurrentNumberOfMacAddresses_Type = Integer32
_PortSecurityCurrentNumberOfMacAddresses_Object = MibTableColumn
portSecurityCurrentNumberOfMacAddresses = _PortSecurityCurrentNumberOfMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 1, 1, 4),
    _PortSecurityCurrentNumberOfMacAddresses_Type()
)
portSecurityCurrentNumberOfMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portSecurityCurrentNumberOfMacAddresses.setStatus("current")
_PortSecurityStaticAddressTable_Object = MibTable
portSecurityStaticAddressTable = _PortSecurityStaticAddressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2)
)
if mibBuilder.loadTexts:
    portSecurityStaticAddressTable.setStatus("current")
_PortSecurityStaticAddressEntry_Object = MibTableRow
portSecurityStaticAddressEntry = _PortSecurityStaticAddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2, 1)
)
portSecurityStaticAddressEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "portSecurityStaticMacAddress"),
    (0, "SWITCH", "portSecurityStaticVlanId"),
)
if mibBuilder.loadTexts:
    portSecurityStaticAddressEntry.setStatus("current")
_PortSecurityStaticPortIndex_Type = Integer32
_PortSecurityStaticPortIndex_Object = MibTableColumn
portSecurityStaticPortIndex = _PortSecurityStaticPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2, 1, 1),
    _PortSecurityStaticPortIndex_Type()
)
portSecurityStaticPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    portSecurityStaticPortIndex.setStatus("current")
_PortSecurityStaticVlanId_Type = Integer32
_PortSecurityStaticVlanId_Object = MibTableColumn
portSecurityStaticVlanId = _PortSecurityStaticVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2, 1, 2),
    _PortSecurityStaticVlanId_Type()
)
portSecurityStaticVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    portSecurityStaticVlanId.setStatus("current")
_PortSecurityStaticMacAddress_Type = Integer32
_PortSecurityStaticMacAddress_Object = MibTableColumn
portSecurityStaticMacAddress = _PortSecurityStaticMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2, 1, 3),
    _PortSecurityStaticMacAddress_Type()
)
portSecurityStaticMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    portSecurityStaticMacAddress.setStatus("current")
_PortSecurityStaticRowStatus_Type = RowStatus
_PortSecurityStaticRowStatus_Object = MibTableColumn
portSecurityStaticRowStatus = _PortSecurityStaticRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 2, 1, 4),
    _PortSecurityStaticRowStatus_Type()
)
portSecurityStaticRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    portSecurityStaticRowStatus.setStatus("current")
_PortSecurityDynamicAddressTable_Object = MibTable
portSecurityDynamicAddressTable = _PortSecurityDynamicAddressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 3)
)
if mibBuilder.loadTexts:
    portSecurityDynamicAddressTable.setStatus("current")
_PortSecurityDynamicAddressEntry_Object = MibTableRow
portSecurityDynamicAddressEntry = _PortSecurityDynamicAddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 3, 1)
)
portSecurityDynamicAddressEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "portSecurityDynamicMacAddress"),
    (0, "SWITCH", "portSecurityDynamicVlanId"),
)
if mibBuilder.loadTexts:
    portSecurityDynamicAddressEntry.setStatus("current")


class _PortSecurityDynamicVlanId_Type(Integer32):
    """Custom type portSecurityDynamicVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PortSecurityDynamicVlanId_Type.__name__ = "Integer32"
_PortSecurityDynamicVlanId_Object = MibTableColumn
portSecurityDynamicVlanId = _PortSecurityDynamicVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 3, 1, 1),
    _PortSecurityDynamicVlanId_Type()
)
portSecurityDynamicVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portSecurityDynamicVlanId.setStatus("current")
_PortSecurityDynamicMacAddress_Type = MacAddress
_PortSecurityDynamicMacAddress_Object = MibTableColumn
portSecurityDynamicMacAddress = _PortSecurityDynamicMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 3, 1, 2),
    _PortSecurityDynamicMacAddress_Type()
)
portSecurityDynamicMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portSecurityDynamicMacAddress.setStatus("current")


class _PortSecurityDynamicPortName_Type(OctetString):
    """Custom type portSecurityDynamicPortName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 10),
    )


_PortSecurityDynamicPortName_Type.__name__ = "OctetString"
_PortSecurityDynamicPortName_Object = MibTableColumn
portSecurityDynamicPortName = _PortSecurityDynamicPortName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 4, 1, 3, 1, 3),
    _PortSecurityDynamicPortName_Type()
)
portSecurityDynamicPortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portSecurityDynamicPortName.setStatus("current")
_StormControl_ObjectIdentity = ObjectIdentity
stormControl = _StormControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 5)
)
_StormControlObject_ObjectIdentity = ObjectIdentity
stormControlObject = _StormControlObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1)
)
_StormControlUnicastTable_Object = MibTable
stormControlUnicastTable = _StormControlUnicastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1)
)
if mibBuilder.loadTexts:
    stormControlUnicastTable.setStatus("current")
_StormControlUnicastEntry_Object = MibTableRow
stormControlUnicastEntry = _StormControlUnicastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1)
)
stormControlUnicastEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    stormControlUnicastEntry.setStatus("current")


class _StormControlUnicastPortName_Type(OctetString):
    """Custom type stormControlUnicastPortName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StormControlUnicastPortName_Type.__name__ = "OctetString"
_StormControlUnicastPortName_Object = MibTableColumn
stormControlUnicastPortName = _StormControlUnicastPortName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1, 1),
    _StormControlUnicastPortName_Type()
)
stormControlUnicastPortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stormControlUnicastPortName.setStatus("current")


class _StormControlUnicastMode_Type(Integer32):
    """Custom type stormControlUnicastMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("packetPerSecond", 1),
          ("level", 2))
    )


_StormControlUnicastMode_Type.__name__ = "Integer32"
_StormControlUnicastMode_Object = MibTableColumn
stormControlUnicastMode = _StormControlUnicastMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1, 2),
    _StormControlUnicastMode_Type()
)
stormControlUnicastMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlUnicastMode.setStatus("current")


class _StormControlUnicastLevel_Type(OctetString):
    """Custom type stormControlUnicastLevel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_StormControlUnicastLevel_Type.__name__ = "OctetString"
_StormControlUnicastLevel_Object = MibTableColumn
stormControlUnicastLevel = _StormControlUnicastLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1, 3),
    _StormControlUnicastLevel_Type()
)
stormControlUnicastLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlUnicastLevel.setStatus("current")


class _StormControlUnicastPps_Type(Integer32):
    """Custom type stormControlUnicastPps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_StormControlUnicastPps_Type.__name__ = "Integer32"
_StormControlUnicastPps_Object = MibTableColumn
stormControlUnicastPps = _StormControlUnicastPps_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1, 4),
    _StormControlUnicastPps_Type()
)
stormControlUnicastPps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlUnicastPps.setStatus("current")
_StormControlUnicastRowStatus_Type = RowStatus
_StormControlUnicastRowStatus_Object = MibTableColumn
stormControlUnicastRowStatus = _StormControlUnicastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 1, 1, 5),
    _StormControlUnicastRowStatus_Type()
)
stormControlUnicastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlUnicastRowStatus.setStatus("current")
_StormControlBroadcastTable_Object = MibTable
stormControlBroadcastTable = _StormControlBroadcastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2)
)
if mibBuilder.loadTexts:
    stormControlBroadcastTable.setStatus("current")
_StormControlBroadcastEntry_Object = MibTableRow
stormControlBroadcastEntry = _StormControlBroadcastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1)
)
stormControlBroadcastEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    stormControlBroadcastEntry.setStatus("current")


class _StormControlBroadcastPortName_Type(OctetString):
    """Custom type stormControlBroadcastPortName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StormControlBroadcastPortName_Type.__name__ = "OctetString"
_StormControlBroadcastPortName_Object = MibTableColumn
stormControlBroadcastPortName = _StormControlBroadcastPortName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1, 1),
    _StormControlBroadcastPortName_Type()
)
stormControlBroadcastPortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stormControlBroadcastPortName.setStatus("current")


class _StormControlBroadcastMode_Type(Integer32):
    """Custom type stormControlBroadcastMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("packetPerSecond", 1),
          ("level", 2))
    )


_StormControlBroadcastMode_Type.__name__ = "Integer32"
_StormControlBroadcastMode_Object = MibTableColumn
stormControlBroadcastMode = _StormControlBroadcastMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1, 2),
    _StormControlBroadcastMode_Type()
)
stormControlBroadcastMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlBroadcastMode.setStatus("current")


class _StormControlBroadcastLevel_Type(OctetString):
    """Custom type stormControlBroadcastLevel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_StormControlBroadcastLevel_Type.__name__ = "OctetString"
_StormControlBroadcastLevel_Object = MibTableColumn
stormControlBroadcastLevel = _StormControlBroadcastLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1, 3),
    _StormControlBroadcastLevel_Type()
)
stormControlBroadcastLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlBroadcastLevel.setStatus("current")


class _StormControlBroadcastPps_Type(Integer32):
    """Custom type stormControlBroadcastPps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_StormControlBroadcastPps_Type.__name__ = "Integer32"
_StormControlBroadcastPps_Object = MibTableColumn
stormControlBroadcastPps = _StormControlBroadcastPps_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1, 4),
    _StormControlBroadcastPps_Type()
)
stormControlBroadcastPps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlBroadcastPps.setStatus("current")
_StormControlBroadcastRowStatus_Type = RowStatus
_StormControlBroadcastRowStatus_Object = MibTableColumn
stormControlBroadcastRowStatus = _StormControlBroadcastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 2, 1, 5),
    _StormControlBroadcastRowStatus_Type()
)
stormControlBroadcastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlBroadcastRowStatus.setStatus("current")
_StormControlMulticastTable_Object = MibTable
stormControlMulticastTable = _StormControlMulticastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3)
)
if mibBuilder.loadTexts:
    stormControlMulticastTable.setStatus("current")
_StormControlMulticastEntry_Object = MibTableRow
stormControlMulticastEntry = _StormControlMulticastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1)
)
stormControlMulticastEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    stormControlMulticastEntry.setStatus("current")


class _StormControlMulticastPortName_Type(OctetString):
    """Custom type stormControlMulticastPortName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StormControlMulticastPortName_Type.__name__ = "OctetString"
_StormControlMulticastPortName_Object = MibTableColumn
stormControlMulticastPortName = _StormControlMulticastPortName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1, 1),
    _StormControlMulticastPortName_Type()
)
stormControlMulticastPortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stormControlMulticastPortName.setStatus("current")


class _StormControlMulticastMode_Type(Integer32):
    """Custom type stormControlMulticastMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("packetPerSecond", 1),
          ("level", 2))
    )


_StormControlMulticastMode_Type.__name__ = "Integer32"
_StormControlMulticastMode_Object = MibTableColumn
stormControlMulticastMode = _StormControlMulticastMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1, 2),
    _StormControlMulticastMode_Type()
)
stormControlMulticastMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlMulticastMode.setStatus("current")


class _StormControlMulticastLevel_Type(OctetString):
    """Custom type stormControlMulticastLevel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_StormControlMulticastLevel_Type.__name__ = "OctetString"
_StormControlMulticastLevel_Object = MibTableColumn
stormControlMulticastLevel = _StormControlMulticastLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1, 3),
    _StormControlMulticastLevel_Type()
)
stormControlMulticastLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlMulticastLevel.setStatus("current")


class _StormControlMulticastPps_Type(Integer32):
    """Custom type stormControlMulticastPps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_StormControlMulticastPps_Type.__name__ = "Integer32"
_StormControlMulticastPps_Object = MibTableColumn
stormControlMulticastPps = _StormControlMulticastPps_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1, 4),
    _StormControlMulticastPps_Type()
)
stormControlMulticastPps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlMulticastPps.setStatus("current")
_StormControlMulticastRowStatus_Type = RowStatus
_StormControlMulticastRowStatus_Object = MibTableColumn
stormControlMulticastRowStatus = _StormControlMulticastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 5, 1, 3, 1, 5),
    _StormControlMulticastRowStatus_Type()
)
stormControlMulticastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    stormControlMulticastRowStatus.setStatus("current")
_Ntp_ObjectIdentity = ObjectIdentity
ntp = _Ntp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 6)
)
_NtpObject_ObjectIdentity = ObjectIdentity
ntpObject = _NtpObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1)
)


class _NtpStratum_Type(OctetString):
    """Custom type ntpStratum based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpStratum_Type.__name__ = "OctetString"
_NtpStratum_Object = MibScalar
ntpStratum = _NtpStratum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 1),
    _NtpStratum_Type()
)
ntpStratum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpStratum.setStatus("current")
_NtpReferenceClockIp_Type = IpAddress
_NtpReferenceClockIp_Object = MibScalar
ntpReferenceClockIp = _NtpReferenceClockIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 2),
    _NtpReferenceClockIp_Type()
)
ntpReferenceClockIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpReferenceClockIp.setStatus("current")


class _NtpFrequency_Type(OctetString):
    """Custom type ntpFrequency based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpFrequency_Type.__name__ = "OctetString"
_NtpFrequency_Object = MibScalar
ntpFrequency = _NtpFrequency_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 3),
    _NtpFrequency_Type()
)
ntpFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpFrequency.setStatus("current")


class _NtpPrecision_Type(OctetString):
    """Custom type ntpPrecision based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpPrecision_Type.__name__ = "OctetString"
_NtpPrecision_Object = MibScalar
ntpPrecision = _NtpPrecision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 4),
    _NtpPrecision_Type()
)
ntpPrecision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpPrecision.setStatus("current")


class _NtpReferenceTime_Type(OctetString):
    """Custom type ntpReferenceTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpReferenceTime_Type.__name__ = "OctetString"
_NtpReferenceTime_Object = MibScalar
ntpReferenceTime = _NtpReferenceTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 5),
    _NtpReferenceTime_Type()
)
ntpReferenceTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpReferenceTime.setStatus("current")


class _NtpRootDelay_Type(OctetString):
    """Custom type ntpRootDelay based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpRootDelay_Type.__name__ = "OctetString"
_NtpRootDelay_Object = MibScalar
ntpRootDelay = _NtpRootDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 6),
    _NtpRootDelay_Type()
)
ntpRootDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRootDelay.setStatus("current")


class _NtpRootDispersion_Type(OctetString):
    """Custom type ntpRootDispersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpRootDispersion_Type.__name__ = "OctetString"
_NtpRootDispersion_Object = MibScalar
ntpRootDispersion = _NtpRootDispersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 7),
    _NtpRootDispersion_Type()
)
ntpRootDispersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRootDispersion.setStatus("current")


class _NtpPeerDispersion_Type(OctetString):
    """Custom type ntpPeerDispersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpPeerDispersion_Type.__name__ = "OctetString"
_NtpPeerDispersion_Object = MibScalar
ntpPeerDispersion = _NtpPeerDispersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 8),
    _NtpPeerDispersion_Type()
)
ntpPeerDispersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpPeerDispersion.setStatus("current")


class _NtpClockOffset_Type(OctetString):
    """Custom type ntpClockOffset based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpClockOffset_Type.__name__ = "OctetString"
_NtpClockOffset_Object = MibScalar
ntpClockOffset = _NtpClockOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 9),
    _NtpClockOffset_Type()
)
ntpClockOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpClockOffset.setStatus("current")


class _NtpStability_Type(OctetString):
    """Custom type ntpStability based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpStability_Type.__name__ = "OctetString"
_NtpStability_Object = MibScalar
ntpStability = _NtpStability_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 10),
    _NtpStability_Type()
)
ntpStability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpStability.setStatus("current")
_NtpAssoTable_Object = MibTable
ntpAssoTable = _NtpAssoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11)
)
if mibBuilder.loadTexts:
    ntpAssoTable.setStatus("current")
_NtpAssoEntry_Object = MibTableRow
ntpAssoEntry = _NtpAssoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1)
)
ntpAssoEntry.setIndexNames(
    (0, "SWITCH", "ntpAssoRemoteIpAddress"),
)
if mibBuilder.loadTexts:
    ntpAssoEntry.setStatus("current")
_NtpAssoRemoteIpAddress_Type = IpAddress
_NtpAssoRemoteIpAddress_Object = MibTableColumn
ntpAssoRemoteIpAddress = _NtpAssoRemoteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 1),
    _NtpAssoRemoteIpAddress_Type()
)
ntpAssoRemoteIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoRemoteIpAddress.setStatus("current")


class _NtpAssoRefId_Type(OctetString):
    """Custom type ntpAssoRefId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoRefId_Type.__name__ = "OctetString"
_NtpAssoRefId_Object = MibTableColumn
ntpAssoRefId = _NtpAssoRefId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 2),
    _NtpAssoRefId_Type()
)
ntpAssoRefId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoRefId.setStatus("current")


class _NtpAssoStratum_Type(OctetString):
    """Custom type ntpAssoStratum based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoStratum_Type.__name__ = "OctetString"
_NtpAssoStratum_Object = MibTableColumn
ntpAssoStratum = _NtpAssoStratum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 3),
    _NtpAssoStratum_Type()
)
ntpAssoStratum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoStratum.setStatus("current")


class _NtpAssoWhen_Type(OctetString):
    """Custom type ntpAssoWhen based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoWhen_Type.__name__ = "OctetString"
_NtpAssoWhen_Object = MibTableColumn
ntpAssoWhen = _NtpAssoWhen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 4),
    _NtpAssoWhen_Type()
)
ntpAssoWhen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoWhen.setStatus("current")


class _NtpAssoPoll_Type(OctetString):
    """Custom type ntpAssoPoll based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoPoll_Type.__name__ = "OctetString"
_NtpAssoPoll_Object = MibTableColumn
ntpAssoPoll = _NtpAssoPoll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 5),
    _NtpAssoPoll_Type()
)
ntpAssoPoll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoPoll.setStatus("current")


class _NtpAssoReach_Type(OctetString):
    """Custom type ntpAssoReach based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoReach_Type.__name__ = "OctetString"
_NtpAssoReach_Object = MibTableColumn
ntpAssoReach = _NtpAssoReach_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 6),
    _NtpAssoReach_Type()
)
ntpAssoReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoReach.setStatus("current")


class _NtpAssoDelay_Type(OctetString):
    """Custom type ntpAssoDelay based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoDelay_Type.__name__ = "OctetString"
_NtpAssoDelay_Object = MibTableColumn
ntpAssoDelay = _NtpAssoDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 7),
    _NtpAssoDelay_Type()
)
ntpAssoDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoDelay.setStatus("current")


class _NtpAssoOffset_Type(OctetString):
    """Custom type ntpAssoOffset based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoOffset_Type.__name__ = "OctetString"
_NtpAssoOffset_Object = MibTableColumn
ntpAssoOffset = _NtpAssoOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 8),
    _NtpAssoOffset_Type()
)
ntpAssoOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoOffset.setStatus("current")


class _NtpAssoDispersion_Type(OctetString):
    """Custom type ntpAssoDispersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_NtpAssoDispersion_Type.__name__ = "OctetString"
_NtpAssoDispersion_Object = MibTableColumn
ntpAssoDispersion = _NtpAssoDispersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 11, 1, 9),
    _NtpAssoDispersion_Type()
)
ntpAssoDispersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpAssoDispersion.setStatus("current")
_NtpUniPeerTable_Object = MibTable
ntpUniPeerTable = _NtpUniPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12)
)
if mibBuilder.loadTexts:
    ntpUniPeerTable.setStatus("current")
_NtpUniPeerEntry_Object = MibTableRow
ntpUniPeerEntry = _NtpUniPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1)
)
ntpUniPeerEntry.setIndexNames(
    (0, "SWITCH", "ntpUnicastPeerIpAddress"),
)
if mibBuilder.loadTexts:
    ntpUniPeerEntry.setStatus("current")
_NtpUnicastPeerIpAddress_Type = IpAddress
_NtpUnicastPeerIpAddress_Object = MibTableColumn
ntpUnicastPeerIpAddress = _NtpUnicastPeerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1, 1),
    _NtpUnicastPeerIpAddress_Type()
)
ntpUnicastPeerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpUnicastPeerIpAddress.setStatus("current")
_NtpUnicastPeerKey_Type = Integer32
_NtpUnicastPeerKey_Object = MibTableColumn
ntpUnicastPeerKey = _NtpUnicastPeerKey_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1, 2),
    _NtpUnicastPeerKey_Type()
)
ntpUnicastPeerKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastPeerKey.setStatus("current")
_NtpUnicastPeerVersion_Type = Integer32
_NtpUnicastPeerVersion_Object = MibTableColumn
ntpUnicastPeerVersion = _NtpUnicastPeerVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1, 3),
    _NtpUnicastPeerVersion_Type()
)
ntpUnicastPeerVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastPeerVersion.setStatus("current")


class _NtpUnicastPeerPrefer_Type(Integer32):
    """Custom type ntpUnicastPeerPrefer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("prefer", 1),
          ("noPrefer", 2))
    )


_NtpUnicastPeerPrefer_Type.__name__ = "Integer32"
_NtpUnicastPeerPrefer_Object = MibTableColumn
ntpUnicastPeerPrefer = _NtpUnicastPeerPrefer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1, 4),
    _NtpUnicastPeerPrefer_Type()
)
ntpUnicastPeerPrefer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastPeerPrefer.setStatus("current")
_NtpUnicastPeerRowStatus_Type = RowStatus
_NtpUnicastPeerRowStatus_Object = MibTableColumn
ntpUnicastPeerRowStatus = _NtpUnicastPeerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 12, 1, 5),
    _NtpUnicastPeerRowStatus_Type()
)
ntpUnicastPeerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpUnicastPeerRowStatus.setStatus("current")
_NtpUniServerTable_Object = MibTable
ntpUniServerTable = _NtpUniServerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13)
)
if mibBuilder.loadTexts:
    ntpUniServerTable.setStatus("current")
_NtpUniServerEntry_Object = MibTableRow
ntpUniServerEntry = _NtpUniServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1)
)
ntpUniServerEntry.setIndexNames(
    (0, "SWITCH", "ntpUnicastServerIpAddress"),
)
if mibBuilder.loadTexts:
    ntpUniServerEntry.setStatus("current")
_NtpUnicastServerIpAddress_Type = IpAddress
_NtpUnicastServerIpAddress_Object = MibTableColumn
ntpUnicastServerIpAddress = _NtpUnicastServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1, 1),
    _NtpUnicastServerIpAddress_Type()
)
ntpUnicastServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpUnicastServerIpAddress.setStatus("current")
_NtpUnicastServerKey_Type = Integer32
_NtpUnicastServerKey_Object = MibTableColumn
ntpUnicastServerKey = _NtpUnicastServerKey_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1, 2),
    _NtpUnicastServerKey_Type()
)
ntpUnicastServerKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastServerKey.setStatus("current")
_NtpUnicastServerVersion_Type = Integer32
_NtpUnicastServerVersion_Object = MibTableColumn
ntpUnicastServerVersion = _NtpUnicastServerVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1, 3),
    _NtpUnicastServerVersion_Type()
)
ntpUnicastServerVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastServerVersion.setStatus("current")


class _NtpUnicastServerPrefer_Type(Integer32):
    """Custom type ntpUnicastServerPrefer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("prefer", 1),
          ("noPrefer", 2))
    )


_NtpUnicastServerPrefer_Type.__name__ = "Integer32"
_NtpUnicastServerPrefer_Object = MibTableColumn
ntpUnicastServerPrefer = _NtpUnicastServerPrefer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1, 4),
    _NtpUnicastServerPrefer_Type()
)
ntpUnicastServerPrefer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpUnicastServerPrefer.setStatus("current")
_NtpUnicastServerRowStatus_Type = RowStatus
_NtpUnicastServerRowStatus_Object = MibTableColumn
ntpUnicastServerRowStatus = _NtpUnicastServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 13, 1, 5),
    _NtpUnicastServerRowStatus_Type()
)
ntpUnicastServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpUnicastServerRowStatus.setStatus("current")


class _NtpLocalRefClockStratum_Type(Integer32):
    """Custom type ntpLocalRefClockStratum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_NtpLocalRefClockStratum_Type.__name__ = "Integer32"
_NtpLocalRefClockStratum_Object = MibScalar
ntpLocalRefClockStratum = _NtpLocalRefClockStratum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 14),
    _NtpLocalRefClockStratum_Type()
)
ntpLocalRefClockStratum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpLocalRefClockStratum.setStatus("current")


class _NtpSysAuthenticate_Type(Integer32):
    """Custom type ntpSysAuthenticate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noAuthenticate", 0),
          ("authenticate", 1))
    )


_NtpSysAuthenticate_Type.__name__ = "Integer32"
_NtpSysAuthenticate_Object = MibScalar
ntpSysAuthenticate = _NtpSysAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 15),
    _NtpSysAuthenticate_Type()
)
ntpSysAuthenticate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSysAuthenticate.setStatus("current")


class _NtpBroadcastDelay_Type(Integer32):
    """Custom type ntpBroadcastDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_NtpBroadcastDelay_Type.__name__ = "Integer32"
_NtpBroadcastDelay_Object = MibScalar
ntpBroadcastDelay = _NtpBroadcastDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 16),
    _NtpBroadcastDelay_Type()
)
ntpBroadcastDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpBroadcastDelay.setStatus("current")
_NtpKeyTable_Object = MibTable
ntpKeyTable = _NtpKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 17)
)
if mibBuilder.loadTexts:
    ntpKeyTable.setStatus("current")
_NtpKeyEntry_Object = MibTableRow
ntpKeyEntry = _NtpKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 17, 1)
)
ntpKeyEntry.setIndexNames(
    (0, "SWITCH", "ntpKeyID"),
)
if mibBuilder.loadTexts:
    ntpKeyEntry.setStatus("current")


class _NtpKeyID_Type(Integer32):
    """Custom type ntpKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64000),
    )


_NtpKeyID_Type.__name__ = "Integer32"
_NtpKeyID_Object = MibTableColumn
ntpKeyID = _NtpKeyID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 17, 1, 1),
    _NtpKeyID_Type()
)
ntpKeyID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpKeyID.setStatus("current")


class _NtpKeyPair_Type(OctetString):
    """Custom type ntpKeyPair based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_NtpKeyPair_Type.__name__ = "OctetString"
_NtpKeyPair_Object = MibTableColumn
ntpKeyPair = _NtpKeyPair_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 17, 1, 2),
    _NtpKeyPair_Type()
)
ntpKeyPair.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpKeyPair.setStatus("current")
_NtpKeyRowStatus_Type = RowStatus
_NtpKeyRowStatus_Object = MibTableColumn
ntpKeyRowStatus = _NtpKeyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 17, 1, 3),
    _NtpKeyRowStatus_Type()
)
ntpKeyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpKeyRowStatus.setStatus("current")
_NtpTrustKeyTable_Object = MibTable
ntpTrustKeyTable = _NtpTrustKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 18)
)
if mibBuilder.loadTexts:
    ntpTrustKeyTable.setStatus("current")
_NtpTrustKeyEntry_Object = MibTableRow
ntpTrustKeyEntry = _NtpTrustKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 18, 1)
)
ntpTrustKeyEntry.setIndexNames(
    (0, "SWITCH", "ntpKeyID"),
)
if mibBuilder.loadTexts:
    ntpTrustKeyEntry.setStatus("current")


class _NtpTrustKeyID_Type(Integer32):
    """Custom type ntpTrustKeyID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64000),
    )


_NtpTrustKeyID_Type.__name__ = "Integer32"
_NtpTrustKeyID_Object = MibTableColumn
ntpTrustKeyID = _NtpTrustKeyID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 18, 1, 1),
    _NtpTrustKeyID_Type()
)
ntpTrustKeyID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpTrustKeyID.setStatus("current")
_NtpTrustKeyTrust_Type = Integer32
_NtpTrustKeyTrust_Object = MibTableColumn
ntpTrustKeyTrust = _NtpTrustKeyTrust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 18, 1, 2),
    _NtpTrustKeyTrust_Type()
)
ntpTrustKeyTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpTrustKeyTrust.setStatus("current")


class _NtpInterfaceReload_Type(Integer32):
    """Custom type ntpInterfaceReload based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reloadInterface", 1)
    )


_NtpInterfaceReload_Type.__name__ = "Integer32"
_NtpInterfaceReload_Object = MibScalar
ntpInterfaceReload = _NtpInterfaceReload_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 19),
    _NtpInterfaceReload_Type()
)
ntpInterfaceReload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpInterfaceReload.setStatus("current")
_NtpTimeResetStatistic_Type = Integer32
_NtpTimeResetStatistic_Object = MibScalar
ntpTimeResetStatistic = _NtpTimeResetStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 20),
    _NtpTimeResetStatistic_Type()
)
ntpTimeResetStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpTimeResetStatistic.setStatus("current")
_NtpRcvBufferStatistic_Type = Integer32
_NtpRcvBufferStatistic_Object = MibScalar
ntpRcvBufferStatistic = _NtpRcvBufferStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 21),
    _NtpRcvBufferStatistic_Type()
)
ntpRcvBufferStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRcvBufferStatistic.setStatus("current")
_NtpFreeRcvBufferStatistic_Type = Integer32
_NtpFreeRcvBufferStatistic_Object = MibScalar
ntpFreeRcvBufferStatistic = _NtpFreeRcvBufferStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 22),
    _NtpFreeRcvBufferStatistic_Type()
)
ntpFreeRcvBufferStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpFreeRcvBufferStatistic.setStatus("current")
_NtpUsedRcvBufferStatistic_Type = Integer32
_NtpUsedRcvBufferStatistic_Object = MibScalar
ntpUsedRcvBufferStatistic = _NtpUsedRcvBufferStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 23),
    _NtpUsedRcvBufferStatistic_Type()
)
ntpUsedRcvBufferStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpUsedRcvBufferStatistic.setStatus("current")
_NtpLowWaterRefillStatistic_Type = Integer32
_NtpLowWaterRefillStatistic_Object = MibScalar
ntpLowWaterRefillStatistic = _NtpLowWaterRefillStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 24),
    _NtpLowWaterRefillStatistic_Type()
)
ntpLowWaterRefillStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpLowWaterRefillStatistic.setStatus("current")
_NtpDroppedPktStatistic_Type = Integer32
_NtpDroppedPktStatistic_Object = MibScalar
ntpDroppedPktStatistic = _NtpDroppedPktStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 25),
    _NtpDroppedPktStatistic_Type()
)
ntpDroppedPktStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpDroppedPktStatistic.setStatus("current")
_NtpIgnoredPktStatistic_Type = Integer32
_NtpIgnoredPktStatistic_Object = MibScalar
ntpIgnoredPktStatistic = _NtpIgnoredPktStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 26),
    _NtpIgnoredPktStatistic_Type()
)
ntpIgnoredPktStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpIgnoredPktStatistic.setStatus("current")
_NtpReceivedPktStatistic_Type = Integer32
_NtpReceivedPktStatistic_Object = MibScalar
ntpReceivedPktStatistic = _NtpReceivedPktStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 27),
    _NtpReceivedPktStatistic_Type()
)
ntpReceivedPktStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpReceivedPktStatistic.setStatus("current")
_NtpPktSentStatistic_Type = Integer32
_NtpPktSentStatistic_Object = MibScalar
ntpPktSentStatistic = _NtpPktSentStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 28),
    _NtpPktSentStatistic_Type()
)
ntpPktSentStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpPktSentStatistic.setStatus("current")
_NtpPktNotSentStatistic_Type = Integer32
_NtpPktNotSentStatistic_Object = MibScalar
ntpPktNotSentStatistic = _NtpPktNotSentStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 29),
    _NtpPktNotSentStatistic_Type()
)
ntpPktNotSentStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpPktNotSentStatistic.setStatus("current")
_NtpInterruptsHandledStatistic_Type = Integer32
_NtpInterruptsHandledStatistic_Object = MibScalar
ntpInterruptsHandledStatistic = _NtpInterruptsHandledStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 30),
    _NtpInterruptsHandledStatistic_Type()
)
ntpInterruptsHandledStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpInterruptsHandledStatistic.setStatus("current")
_NtpReceivedByIntStatistic_Type = Integer32
_NtpReceivedByIntStatistic_Object = MibScalar
ntpReceivedByIntStatistic = _NtpReceivedByIntStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 31),
    _NtpReceivedByIntStatistic_Type()
)
ntpReceivedByIntStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpReceivedByIntStatistic.setStatus("current")
_NtpAceTable_Object = MibTable
ntpAceTable = _NtpAceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32)
)
if mibBuilder.loadTexts:
    ntpAceTable.setStatus("current")
_NtpAceEntry_Object = MibTableRow
ntpAceEntry = _NtpAceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1)
)
ntpAceEntry.setIndexNames(
    (0, "SWITCH", "ntpAceIndex"),
)
if mibBuilder.loadTexts:
    ntpAceEntry.setStatus("current")
_NtpAceIndex_Type = Integer32
_NtpAceIndex_Object = MibTableColumn
ntpAceIndex = _NtpAceIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 1),
    _NtpAceIndex_Type()
)
ntpAceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpAceIndex.setStatus("current")


class _NtpAceAddress_Type(OctetString):
    """Custom type ntpAceAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_NtpAceAddress_Type.__name__ = "OctetString"
_NtpAceAddress_Object = MibTableColumn
ntpAceAddress = _NtpAceAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 2),
    _NtpAceAddress_Type()
)
ntpAceAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceAddress.setStatus("current")


class _NtpAceMask_Type(OctetString):
    """Custom type ntpAceMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(7, 15),
    )


_NtpAceMask_Type.__name__ = "OctetString"
_NtpAceMask_Object = MibTableColumn
ntpAceMask = _NtpAceMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 3),
    _NtpAceMask_Type()
)
ntpAceMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceMask.setStatus("current")


class _NtpAceVersion_Type(Integer32):
    """Custom type ntpAceVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceVersion_Type.__name__ = "Integer32"
_NtpAceVersion_Object = MibTableColumn
ntpAceVersion = _NtpAceVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 4),
    _NtpAceVersion_Type()
)
ntpAceVersion.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceVersion.setStatus("current")


class _NtpAceKod_Type(Integer32):
    """Custom type ntpAceKod based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceKod_Type.__name__ = "Integer32"
_NtpAceKod_Object = MibTableColumn
ntpAceKod = _NtpAceKod_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 5),
    _NtpAceKod_Type()
)
ntpAceKod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceKod.setStatus("current")


class _NtpAceIgnore_Type(Integer32):
    """Custom type ntpAceIgnore based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceIgnore_Type.__name__ = "Integer32"
_NtpAceIgnore_Object = MibTableColumn
ntpAceIgnore = _NtpAceIgnore_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 6),
    _NtpAceIgnore_Type()
)
ntpAceIgnore.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceIgnore.setStatus("current")


class _NtpAceNoquery_Type(Integer32):
    """Custom type ntpAceNoquery based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNoquery_Type.__name__ = "Integer32"
_NtpAceNoquery_Object = MibTableColumn
ntpAceNoquery = _NtpAceNoquery_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 7),
    _NtpAceNoquery_Type()
)
ntpAceNoquery.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNoquery.setStatus("current")


class _NtpAceNomodify_Type(Integer32):
    """Custom type ntpAceNomodify based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNomodify_Type.__name__ = "Integer32"
_NtpAceNomodify_Object = MibTableColumn
ntpAceNomodify = _NtpAceNomodify_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 8),
    _NtpAceNomodify_Type()
)
ntpAceNomodify.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNomodify.setStatus("current")


class _NtpAceNotrap_Type(Integer32):
    """Custom type ntpAceNotrap based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNotrap_Type.__name__ = "Integer32"
_NtpAceNotrap_Object = MibTableColumn
ntpAceNotrap = _NtpAceNotrap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 9),
    _NtpAceNotrap_Type()
)
ntpAceNotrap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNotrap.setStatus("current")


class _NtpAceNoserver_Type(Integer32):
    """Custom type ntpAceNoserver based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNoserver_Type.__name__ = "Integer32"
_NtpAceNoserver_Object = MibTableColumn
ntpAceNoserver = _NtpAceNoserver_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 10),
    _NtpAceNoserver_Type()
)
ntpAceNoserver.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNoserver.setStatus("current")


class _NtpAceNopeer_Type(Integer32):
    """Custom type ntpAceNopeer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNopeer_Type.__name__ = "Integer32"
_NtpAceNopeer_Object = MibTableColumn
ntpAceNopeer = _NtpAceNopeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 11),
    _NtpAceNopeer_Type()
)
ntpAceNopeer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNopeer.setStatus("current")


class _NtpAceNotrust_Type(Integer32):
    """Custom type ntpAceNotrust based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceNotrust_Type.__name__ = "Integer32"
_NtpAceNotrust_Object = MibTableColumn
ntpAceNotrust = _NtpAceNotrust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 12),
    _NtpAceNotrust_Type()
)
ntpAceNotrust.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceNotrust.setStatus("current")


class _NtpAceLimited_Type(Integer32):
    """Custom type ntpAceLimited based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_NtpAceLimited_Type.__name__ = "Integer32"
_NtpAceLimited_Object = MibTableColumn
ntpAceLimited = _NtpAceLimited_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 13),
    _NtpAceLimited_Type()
)
ntpAceLimited.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceLimited.setStatus("current")
_NtpAceRowStatus_Type = RowStatus
_NtpAceRowStatus_Object = MibTableColumn
ntpAceRowStatus = _NtpAceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 32, 1, 20),
    _NtpAceRowStatus_Type()
)
ntpAceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ntpAceRowStatus.setStatus("current")
_NtpRestrictTable_Object = MibTable
ntpRestrictTable = _NtpRestrictTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33)
)
if mibBuilder.loadTexts:
    ntpRestrictTable.setStatus("current")
_NtpRestrictEntry_Object = MibTableRow
ntpRestrictEntry = _NtpRestrictEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1)
)
ntpRestrictEntry.setIndexNames(
    (0, "SWITCH", "ntpRestrictIndex"),
)
if mibBuilder.loadTexts:
    ntpRestrictEntry.setStatus("current")
_NtpRestrictIndex_Type = Integer32
_NtpRestrictIndex_Object = MibTableColumn
ntpRestrictIndex = _NtpRestrictIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1, 1),
    _NtpRestrictIndex_Type()
)
ntpRestrictIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpRestrictIndex.setStatus("current")


class _NtpRestrictAddress_Type(OctetString):
    """Custom type ntpRestrictAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NtpRestrictAddress_Type.__name__ = "OctetString"
_NtpRestrictAddress_Object = MibTableColumn
ntpRestrictAddress = _NtpRestrictAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1, 2),
    _NtpRestrictAddress_Type()
)
ntpRestrictAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRestrictAddress.setStatus("current")


class _NtpRestrictMask_Type(OctetString):
    """Custom type ntpRestrictMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NtpRestrictMask_Type.__name__ = "OctetString"
_NtpRestrictMask_Object = MibTableColumn
ntpRestrictMask = _NtpRestrictMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1, 3),
    _NtpRestrictMask_Type()
)
ntpRestrictMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRestrictMask.setStatus("current")
_NtpRestrictCount_Type = Integer32
_NtpRestrictCount_Object = MibTableColumn
ntpRestrictCount = _NtpRestrictCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1, 4),
    _NtpRestrictCount_Type()
)
ntpRestrictCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRestrictCount.setStatus("current")


class _NtpRestrictFlag_Type(OctetString):
    """Custom type ntpRestrictFlag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_NtpRestrictFlag_Type.__name__ = "OctetString"
_NtpRestrictFlag_Object = MibTableColumn
ntpRestrictFlag = _NtpRestrictFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 6, 1, 33, 1, 5),
    _NtpRestrictFlag_Type()
)
ntpRestrictFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpRestrictFlag.setStatus("current")
_Acl_ObjectIdentity = ObjectIdentity
acl = _Acl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 7)
)
_AclData_ObjectIdentity = ObjectIdentity
aclData = _AclData_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1)
)
_AclGroupTable_Object = MibTable
aclGroupTable = _AclGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1)
)
if mibBuilder.loadTexts:
    aclGroupTable.setStatus("current")
_AclGroupEntry_Object = MibTableRow
aclGroupEntry = _AclGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1)
)
aclGroupEntry.setIndexNames(
    (0, "SWITCH", "aclGroupIndex"),
)
if mibBuilder.loadTexts:
    aclGroupEntry.setStatus("current")


class _AclGroupIndex_Type(Integer32):
    """Custom type aclGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10001, 80000),
    )


_AclGroupIndex_Type.__name__ = "Integer32"
_AclGroupIndex_Object = MibTableColumn
aclGroupIndex = _AclGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1, 1),
    _AclGroupIndex_Type()
)
aclGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclGroupIndex.setStatus("current")


class _AclGroupName_Type(OctetString):
    """Custom type aclGroupName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclGroupName_Type.__name__ = "OctetString"
_AclGroupName_Object = MibTableColumn
aclGroupName = _AclGroupName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1, 2),
    _AclGroupName_Type()
)
aclGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclGroupName.setStatus("current")
_AclGroupRuleNum_Type = Unsigned32
_AclGroupRuleNum_Object = MibTableColumn
aclGroupRuleNum = _AclGroupRuleNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1, 3),
    _AclGroupRuleNum_Type()
)
aclGroupRuleNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aclGroupRuleNum.setStatus("current")
_AclGroupRowStatus_Type = RowStatus
_AclGroupRowStatus_Object = MibTableColumn
aclGroupRowStatus = _AclGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1, 4),
    _AclGroupRowStatus_Type()
)
aclGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclGroupRowStatus.setStatus("current")


class _AclGroupDescription_Type(OctetString):
    """Custom type aclGroupDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_AclGroupDescription_Type.__name__ = "OctetString"
_AclGroupDescription_Object = MibTableColumn
aclGroupDescription = _AclGroupDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 1, 1, 5),
    _AclGroupDescription_Type()
)
aclGroupDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclGroupDescription.setStatus("current")
_AclMacRuleTable_Object = MibTable
aclMacRuleTable = _AclMacRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2)
)
if mibBuilder.loadTexts:
    aclMacRuleTable.setStatus("current")
_AclMacRuleEntry_Object = MibTableRow
aclMacRuleEntry = _AclMacRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1)
)
aclMacRuleEntry.setIndexNames(
    (0, "SWITCH", "aclMacGroupIndex"),
    (0, "SWITCH", "aclMacRuleIndex"),
)
if mibBuilder.loadTexts:
    aclMacRuleEntry.setStatus("current")


class _AclMacGroupIndex_Type(Integer32):
    """Custom type aclMacGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10001, 30000),
        ValueRangeConstraint(50001, 60000),
    )


_AclMacGroupIndex_Type.__name__ = "Integer32"
_AclMacGroupIndex_Object = MibTableColumn
aclMacGroupIndex = _AclMacGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 1),
    _AclMacGroupIndex_Type()
)
aclMacGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMacGroupIndex.setStatus("current")


class _AclMacRuleIndex_Type(Integer32):
    """Custom type aclMacRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclMacRuleIndex_Type.__name__ = "Integer32"
_AclMacRuleIndex_Object = MibTableColumn
aclMacRuleIndex = _AclMacRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 2),
    _AclMacRuleIndex_Type()
)
aclMacRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMacRuleIndex.setStatus("current")
_AclMacAct_Type = RuleAction
_AclMacAct_Object = MibTableColumn
aclMacAct = _AclMacAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 3),
    _AclMacAct_Type()
)
aclMacAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacAct.setStatus("current")
_AclMacSrcMac_Type = MacAddress
_AclMacSrcMac_Object = MibTableColumn
aclMacSrcMac = _AclMacSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 4),
    _AclMacSrcMac_Type()
)
aclMacSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacSrcMac.setStatus("current")
_AclMacSrcMacWild_Type = MacAddress
_AclMacSrcMacWild_Object = MibTableColumn
aclMacSrcMacWild = _AclMacSrcMacWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 5),
    _AclMacSrcMacWild_Type()
)
aclMacSrcMacWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacSrcMacWild.setStatus("current")
_AclMacDestMac_Type = MacAddress
_AclMacDestMac_Object = MibTableColumn
aclMacDestMac = _AclMacDestMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 6),
    _AclMacDestMac_Type()
)
aclMacDestMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacDestMac.setStatus("current")
_AclMacDestMacWild_Type = MacAddress
_AclMacDestMacWild_Object = MibTableColumn
aclMacDestMacWild = _AclMacDestMacWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 7),
    _AclMacDestMacWild_Type()
)
aclMacDestMacWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacDestMacWild.setStatus("current")


class _AclMacProtocol_Type(OctetString):
    """Custom type aclMacProtocol based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_AclMacProtocol_Type.__name__ = "OctetString"
_AclMacProtocol_Object = MibTableColumn
aclMacProtocol = _AclMacProtocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 8),
    _AclMacProtocol_Type()
)
aclMacProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacProtocol.setStatus("current")


class _AclMacProtocolWild_Type(OctetString):
    """Custom type aclMacProtocolWild based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_AclMacProtocolWild_Type.__name__ = "OctetString"
_AclMacProtocolWild_Object = MibTableColumn
aclMacProtocolWild = _AclMacProtocolWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 9),
    _AclMacProtocolWild_Type()
)
aclMacProtocolWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacProtocolWild.setStatus("current")


class _AclMacType_Type(Integer32):
    """Custom type aclMacType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AclMacType_Type.__name__ = "Integer32"
_AclMacType_Object = MibTableColumn
aclMacType = _AclMacType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 10),
    _AclMacType_Type()
)
aclMacType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacType.setStatus("obsolete")


class _AclMacVlanId_Type(Integer32):
    """Custom type aclMacVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_AclMacVlanId_Type.__name__ = "Integer32"
_AclMacVlanId_Object = MibTableColumn
aclMacVlanId = _AclMacVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 11),
    _AclMacVlanId_Type()
)
aclMacVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacVlanId.setStatus("current")


class _AclMacInnerVlanId_Type(Integer32):
    """Custom type aclMacInnerVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_AclMacInnerVlanId_Type.__name__ = "Integer32"
_AclMacInnerVlanId_Object = MibTableColumn
aclMacInnerVlanId = _AclMacInnerVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 12),
    _AclMacInnerVlanId_Type()
)
aclMacInnerVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacInnerVlanId.setStatus("current")


class _AclMacCos_Type(Integer32):
    """Custom type aclMacCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMacCos_Type.__name__ = "Integer32"
_AclMacCos_Object = MibTableColumn
aclMacCos = _AclMacCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 13),
    _AclMacCos_Type()
)
aclMacCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacCos.setStatus("current")


class _AclMacInnerCos_Type(Integer32):
    """Custom type aclMacInnerCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMacInnerCos_Type.__name__ = "Integer32"
_AclMacInnerCos_Object = MibTableColumn
aclMacInnerCos = _AclMacInnerCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 14),
    _AclMacInnerCos_Type()
)
aclMacInnerCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacInnerCos.setStatus("current")


class _AclMacTimeRangeName_Type(OctetString):
    """Custom type aclMacTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclMacTimeRangeName_Type.__name__ = "OctetString"
_AclMacTimeRangeName_Object = MibTableColumn
aclMacTimeRangeName = _AclMacTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 15),
    _AclMacTimeRangeName_Type()
)
aclMacTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacTimeRangeName.setStatus("current")
_AclMacRowStatus_Type = RowStatus
_AclMacRowStatus_Object = MibTableColumn
aclMacRowStatus = _AclMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 2, 1, 30),
    _AclMacRowStatus_Type()
)
aclMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMacRowStatus.setStatus("current")
_AclIpRuleTable_Object = MibTable
aclIpRuleTable = _AclIpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3)
)
if mibBuilder.loadTexts:
    aclIpRuleTable.setStatus("current")
_AclIpRuleEntry_Object = MibTableRow
aclIpRuleEntry = _AclIpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1)
)
aclIpRuleEntry.setIndexNames(
    (0, "SWITCH", "aclIpGroupIndex"),
    (0, "SWITCH", "aclIpRuleIndex"),
)
if mibBuilder.loadTexts:
    aclIpRuleEntry.setStatus("current")


class _AclIpGroupIndex_Type(Integer32):
    """Custom type aclIpGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20001, 40000),
    )


_AclIpGroupIndex_Type.__name__ = "Integer32"
_AclIpGroupIndex_Object = MibTableColumn
aclIpGroupIndex = _AclIpGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 1),
    _AclIpGroupIndex_Type()
)
aclIpGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIpGroupIndex.setStatus("current")


class _AclIpRuleIndex_Type(Integer32):
    """Custom type aclIpRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclIpRuleIndex_Type.__name__ = "Integer32"
_AclIpRuleIndex_Object = MibTableColumn
aclIpRuleIndex = _AclIpRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 2),
    _AclIpRuleIndex_Type()
)
aclIpRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIpRuleIndex.setStatus("current")
_AclIpAct_Type = RuleAction
_AclIpAct_Object = MibTableColumn
aclIpAct = _AclIpAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 3),
    _AclIpAct_Type()
)
aclIpAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpAct.setStatus("current")


class _AclIpProtocol_Type(Integer32):
    """Custom type aclIpProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIpProtocol_Type.__name__ = "Integer32"
_AclIpProtocol_Object = MibTableColumn
aclIpProtocol = _AclIpProtocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 4),
    _AclIpProtocol_Type()
)
aclIpProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpProtocol.setStatus("current")
_AclIpSrcIp_Type = IpAddress
_AclIpSrcIp_Object = MibTableColumn
aclIpSrcIp = _AclIpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 5),
    _AclIpSrcIp_Type()
)
aclIpSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpSrcIp.setStatus("current")
_AclIpSrcWild_Type = IpAddress
_AclIpSrcWild_Object = MibTableColumn
aclIpSrcWild = _AclIpSrcWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 6),
    _AclIpSrcWild_Type()
)
aclIpSrcWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpSrcWild.setStatus("current")
_AclIpDestIp_Type = IpAddress
_AclIpDestIp_Object = MibTableColumn
aclIpDestIp = _AclIpDestIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 7),
    _AclIpDestIp_Type()
)
aclIpDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpDestIp.setStatus("current")
_AclIpDestWild_Type = IpAddress
_AclIpDestWild_Object = MibTableColumn
aclIpDestWild = _AclIpDestWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 8),
    _AclIpDestWild_Type()
)
aclIpDestWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpDestWild.setStatus("current")


class _AclIpPrecedence_Type(Integer32):
    """Custom type aclIpPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclIpPrecedence_Type.__name__ = "Integer32"
_AclIpPrecedence_Object = MibTableColumn
aclIpPrecedence = _AclIpPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 9),
    _AclIpPrecedence_Type()
)
aclIpPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpPrecedence.setStatus("current")
_AclIpDscp_Type = DSCPValue
_AclIpDscp_Object = MibTableColumn
aclIpDscp = _AclIpDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 10),
    _AclIpDscp_Type()
)
aclIpDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpDscp.setStatus("current")
_AclIpFragments_Type = TruthValue
_AclIpFragments_Object = MibTableColumn
aclIpFragments = _AclIpFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 11),
    _AclIpFragments_Type()
)
aclIpFragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpFragments.setStatus("current")
_AclIpRouted_Type = TruthValue
_AclIpRouted_Object = MibTableColumn
aclIpRouted = _AclIpRouted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 12),
    _AclIpRouted_Type()
)
aclIpRouted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpRouted.setStatus("current")
_AclIpOptions_Type = TruthValue
_AclIpOptions_Object = MibTableColumn
aclIpOptions = _AclIpOptions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 13),
    _AclIpOptions_Type()
)
aclIpOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpOptions.setStatus("current")


class _AclIpTimeRangeName_Type(OctetString):
    """Custom type aclIpTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclIpTimeRangeName_Type.__name__ = "OctetString"
_AclIpTimeRangeName_Object = MibTableColumn
aclIpTimeRangeName = _AclIpTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 14),
    _AclIpTimeRangeName_Type()
)
aclIpTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpTimeRangeName.setStatus("current")
_AclIpRowStatus_Type = RowStatus
_AclIpRowStatus_Object = MibTableColumn
aclIpRowStatus = _AclIpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 3, 1, 16),
    _AclIpRowStatus_Type()
)
aclIpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpRowStatus.setStatus("current")
_AclTcpRuleTable_Object = MibTable
aclTcpRuleTable = _AclTcpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4)
)
if mibBuilder.loadTexts:
    aclTcpRuleTable.setStatus("current")
_AclTcpRuleEntry_Object = MibTableRow
aclTcpRuleEntry = _AclTcpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1)
)
aclTcpRuleEntry.setIndexNames(
    (0, "SWITCH", "aclTcpGroupIndex"),
    (0, "SWITCH", "aclTcpRuleIndex"),
)
if mibBuilder.loadTexts:
    aclTcpRuleEntry.setStatus("current")


class _AclTcpGroupIndex_Type(Integer32):
    """Custom type aclTcpGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20001, 40000),
    )


_AclTcpGroupIndex_Type.__name__ = "Integer32"
_AclTcpGroupIndex_Object = MibTableColumn
aclTcpGroupIndex = _AclTcpGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 1),
    _AclTcpGroupIndex_Type()
)
aclTcpGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclTcpGroupIndex.setStatus("current")


class _AclTcpRuleIndex_Type(Integer32):
    """Custom type aclTcpRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclTcpRuleIndex_Type.__name__ = "Integer32"
_AclTcpRuleIndex_Object = MibTableColumn
aclTcpRuleIndex = _AclTcpRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 2),
    _AclTcpRuleIndex_Type()
)
aclTcpRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclTcpRuleIndex.setStatus("current")
_AclTcpAct_Type = RuleAction
_AclTcpAct_Object = MibTableColumn
aclTcpAct = _AclTcpAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 3),
    _AclTcpAct_Type()
)
aclTcpAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpAct.setStatus("current")
_AclTcpSrcIp_Type = IpAddress
_AclTcpSrcIp_Object = MibTableColumn
aclTcpSrcIp = _AclTcpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 4),
    _AclTcpSrcIp_Type()
)
aclTcpSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpSrcIp.setStatus("current")
_AclTcpSrcWild_Type = IpAddress
_AclTcpSrcWild_Object = MibTableColumn
aclTcpSrcWild = _AclTcpSrcWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 5),
    _AclTcpSrcWild_Type()
)
aclTcpSrcWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpSrcWild.setStatus("current")
_AclTcpDestIp_Type = IpAddress
_AclTcpDestIp_Object = MibTableColumn
aclTcpDestIp = _AclTcpDestIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 6),
    _AclTcpDestIp_Type()
)
aclTcpDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDestIp.setStatus("current")
_AclTcpDestWild_Type = IpAddress
_AclTcpDestWild_Object = MibTableColumn
aclTcpDestWild = _AclTcpDestWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 7),
    _AclTcpDestWild_Type()
)
aclTcpDestWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDestWild.setStatus("current")


class _AclTcpPrecedence_Type(Integer32):
    """Custom type aclTcpPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclTcpPrecedence_Type.__name__ = "Integer32"
_AclTcpPrecedence_Object = MibTableColumn
aclTcpPrecedence = _AclTcpPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 8),
    _AclTcpPrecedence_Type()
)
aclTcpPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpPrecedence.setStatus("current")
_AclTcpDscp_Type = DSCPValue
_AclTcpDscp_Object = MibTableColumn
aclTcpDscp = _AclTcpDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 9),
    _AclTcpDscp_Type()
)
aclTcpDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDscp.setStatus("current")
_AclTcpFragments_Type = TruthValue
_AclTcpFragments_Object = MibTableColumn
aclTcpFragments = _AclTcpFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 10),
    _AclTcpFragments_Type()
)
aclTcpFragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFragments.setStatus("current")
_AclTcpRouted_Type = TruthValue
_AclTcpRouted_Object = MibTableColumn
aclTcpRouted = _AclTcpRouted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 11),
    _AclTcpRouted_Type()
)
aclTcpRouted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpRouted.setStatus("current")
_AclTcpOptions_Type = TruthValue
_AclTcpOptions_Object = MibTableColumn
aclTcpOptions = _AclTcpOptions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 12),
    _AclTcpOptions_Type()
)
aclTcpOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpOptions.setStatus("current")
_AclTcpSrcOp_Type = PortOp
_AclTcpSrcOp_Object = MibTableColumn
aclTcpSrcOp = _AclTcpSrcOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 13),
    _AclTcpSrcOp_Type()
)
aclTcpSrcOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpSrcOp.setStatus("current")


class _AclTcpSrcPort1_Type(Integer32):
    """Custom type aclTcpSrcPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcpSrcPort1_Type.__name__ = "Integer32"
_AclTcpSrcPort1_Object = MibTableColumn
aclTcpSrcPort1 = _AclTcpSrcPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 14),
    _AclTcpSrcPort1_Type()
)
aclTcpSrcPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpSrcPort1.setStatus("current")


class _AclTcpSrcPort2_Type(Integer32):
    """Custom type aclTcpSrcPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcpSrcPort2_Type.__name__ = "Integer32"
_AclTcpSrcPort2_Object = MibTableColumn
aclTcpSrcPort2 = _AclTcpSrcPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 15),
    _AclTcpSrcPort2_Type()
)
aclTcpSrcPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpSrcPort2.setStatus("current")
_AclTcpDestOp_Type = PortOp
_AclTcpDestOp_Object = MibTableColumn
aclTcpDestOp = _AclTcpDestOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 16),
    _AclTcpDestOp_Type()
)
aclTcpDestOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDestOp.setStatus("current")


class _AclTcpDestPort1_Type(Integer32):
    """Custom type aclTcpDestPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcpDestPort1_Type.__name__ = "Integer32"
_AclTcpDestPort1_Object = MibTableColumn
aclTcpDestPort1 = _AclTcpDestPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 17),
    _AclTcpDestPort1_Type()
)
aclTcpDestPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDestPort1.setStatus("current")


class _AclTcpDestPort2_Type(Integer32):
    """Custom type aclTcpDestPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcpDestPort2_Type.__name__ = "Integer32"
_AclTcpDestPort2_Object = MibTableColumn
aclTcpDestPort2 = _AclTcpDestPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 18),
    _AclTcpDestPort2_Type()
)
aclTcpDestPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpDestPort2.setStatus("current")


class _AclTcpFlagOp_Type(Integer32):
    """Custom type aclTcpFlagOp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("matchAny", 0),
          ("matchAll", 1),
          ("invalid", 2))
    )


_AclTcpFlagOp_Type.__name__ = "Integer32"
_AclTcpFlagOp_Object = MibTableColumn
aclTcpFlagOp = _AclTcpFlagOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 19),
    _AclTcpFlagOp_Type()
)
aclTcpFlagOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagOp.setStatus("current")
_AclTcpFlagUrg_Type = TruthValue
_AclTcpFlagUrg_Object = MibTableColumn
aclTcpFlagUrg = _AclTcpFlagUrg_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 20),
    _AclTcpFlagUrg_Type()
)
aclTcpFlagUrg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagUrg.setStatus("current")
_AclTcpFlagAck_Type = TruthValue
_AclTcpFlagAck_Object = MibTableColumn
aclTcpFlagAck = _AclTcpFlagAck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 21),
    _AclTcpFlagAck_Type()
)
aclTcpFlagAck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagAck.setStatus("current")
_AclTcpFlagPsh_Type = TruthValue
_AclTcpFlagPsh_Object = MibTableColumn
aclTcpFlagPsh = _AclTcpFlagPsh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 22),
    _AclTcpFlagPsh_Type()
)
aclTcpFlagPsh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagPsh.setStatus("current")
_AclTcpFlagRst_Type = TruthValue
_AclTcpFlagRst_Object = MibTableColumn
aclTcpFlagRst = _AclTcpFlagRst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 23),
    _AclTcpFlagRst_Type()
)
aclTcpFlagRst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagRst.setStatus("current")
_AclTcpFlagSyn_Type = TruthValue
_AclTcpFlagSyn_Object = MibTableColumn
aclTcpFlagSyn = _AclTcpFlagSyn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 24),
    _AclTcpFlagSyn_Type()
)
aclTcpFlagSyn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagSyn.setStatus("current")
_AclTcpFlagFin_Type = TruthValue
_AclTcpFlagFin_Object = MibTableColumn
aclTcpFlagFin = _AclTcpFlagFin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 25),
    _AclTcpFlagFin_Type()
)
aclTcpFlagFin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpFlagFin.setStatus("current")


class _AclTcpTimeRangeName_Type(OctetString):
    """Custom type aclTcpTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclTcpTimeRangeName_Type.__name__ = "OctetString"
_AclTcpTimeRangeName_Object = MibTableColumn
aclTcpTimeRangeName = _AclTcpTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 26),
    _AclTcpTimeRangeName_Type()
)
aclTcpTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpTimeRangeName.setStatus("current")
_AclTcpRowStatus_Type = RowStatus
_AclTcpRowStatus_Object = MibTableColumn
aclTcpRowStatus = _AclTcpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 4, 1, 28),
    _AclTcpRowStatus_Type()
)
aclTcpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcpRowStatus.setStatus("current")
_AclUdpRuleTable_Object = MibTable
aclUdpRuleTable = _AclUdpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5)
)
if mibBuilder.loadTexts:
    aclUdpRuleTable.setStatus("current")
_AclUdpRuleEntry_Object = MibTableRow
aclUdpRuleEntry = _AclUdpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1)
)
aclUdpRuleEntry.setIndexNames(
    (0, "SWITCH", "aclUdpGroupIndex"),
    (0, "SWITCH", "aclUdpRuleIndex"),
)
if mibBuilder.loadTexts:
    aclUdpRuleEntry.setStatus("current")


class _AclUdpGroupIndex_Type(Integer32):
    """Custom type aclUdpGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20001, 40000),
    )


_AclUdpGroupIndex_Type.__name__ = "Integer32"
_AclUdpGroupIndex_Object = MibTableColumn
aclUdpGroupIndex = _AclUdpGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 1),
    _AclUdpGroupIndex_Type()
)
aclUdpGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclUdpGroupIndex.setStatus("current")


class _AclUdpRuleIndex_Type(Integer32):
    """Custom type aclUdpRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclUdpRuleIndex_Type.__name__ = "Integer32"
_AclUdpRuleIndex_Object = MibTableColumn
aclUdpRuleIndex = _AclUdpRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 2),
    _AclUdpRuleIndex_Type()
)
aclUdpRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclUdpRuleIndex.setStatus("current")
_AclUdpAct_Type = RuleAction
_AclUdpAct_Object = MibTableColumn
aclUdpAct = _AclUdpAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 3),
    _AclUdpAct_Type()
)
aclUdpAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpAct.setStatus("current")
_AclUdpSrcIp_Type = IpAddress
_AclUdpSrcIp_Object = MibTableColumn
aclUdpSrcIp = _AclUdpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 4),
    _AclUdpSrcIp_Type()
)
aclUdpSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpSrcIp.setStatus("current")
_AclUdpSrcWild_Type = IpAddress
_AclUdpSrcWild_Object = MibTableColumn
aclUdpSrcWild = _AclUdpSrcWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 5),
    _AclUdpSrcWild_Type()
)
aclUdpSrcWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpSrcWild.setStatus("current")
_AclUdpDestIp_Type = IpAddress
_AclUdpDestIp_Object = MibTableColumn
aclUdpDestIp = _AclUdpDestIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 6),
    _AclUdpDestIp_Type()
)
aclUdpDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDestIp.setStatus("current")
_AclUdpDestWild_Type = IpAddress
_AclUdpDestWild_Object = MibTableColumn
aclUdpDestWild = _AclUdpDestWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 7),
    _AclUdpDestWild_Type()
)
aclUdpDestWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDestWild.setStatus("current")


class _AclUdpPrecedence_Type(Integer32):
    """Custom type aclUdpPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclUdpPrecedence_Type.__name__ = "Integer32"
_AclUdpPrecedence_Object = MibTableColumn
aclUdpPrecedence = _AclUdpPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 8),
    _AclUdpPrecedence_Type()
)
aclUdpPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpPrecedence.setStatus("current")
_AclUdpDscp_Type = DSCPValue
_AclUdpDscp_Object = MibTableColumn
aclUdpDscp = _AclUdpDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 9),
    _AclUdpDscp_Type()
)
aclUdpDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDscp.setStatus("current")
_AclUdpFragments_Type = TruthValue
_AclUdpFragments_Object = MibTableColumn
aclUdpFragments = _AclUdpFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 10),
    _AclUdpFragments_Type()
)
aclUdpFragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpFragments.setStatus("current")
_AclUdpRouted_Type = TruthValue
_AclUdpRouted_Object = MibTableColumn
aclUdpRouted = _AclUdpRouted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 11),
    _AclUdpRouted_Type()
)
aclUdpRouted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpRouted.setStatus("current")
_AclUdpOptions_Type = TruthValue
_AclUdpOptions_Object = MibTableColumn
aclUdpOptions = _AclUdpOptions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 12),
    _AclUdpOptions_Type()
)
aclUdpOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpOptions.setStatus("current")
_AclUdpSrcOp_Type = PortOp
_AclUdpSrcOp_Object = MibTableColumn
aclUdpSrcOp = _AclUdpSrcOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 13),
    _AclUdpSrcOp_Type()
)
aclUdpSrcOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpSrcOp.setStatus("current")


class _AclUdpSrcPort1_Type(Integer32):
    """Custom type aclUdpSrcPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdpSrcPort1_Type.__name__ = "Integer32"
_AclUdpSrcPort1_Object = MibTableColumn
aclUdpSrcPort1 = _AclUdpSrcPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 14),
    _AclUdpSrcPort1_Type()
)
aclUdpSrcPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpSrcPort1.setStatus("current")


class _AclUdpSrcPort2_Type(Integer32):
    """Custom type aclUdpSrcPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdpSrcPort2_Type.__name__ = "Integer32"
_AclUdpSrcPort2_Object = MibTableColumn
aclUdpSrcPort2 = _AclUdpSrcPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 15),
    _AclUdpSrcPort2_Type()
)
aclUdpSrcPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpSrcPort2.setStatus("current")
_AclUdpDestOp_Type = PortOp
_AclUdpDestOp_Object = MibTableColumn
aclUdpDestOp = _AclUdpDestOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 16),
    _AclUdpDestOp_Type()
)
aclUdpDestOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDestOp.setStatus("current")


class _AclUdpDestPort1_Type(Integer32):
    """Custom type aclUdpDestPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdpDestPort1_Type.__name__ = "Integer32"
_AclUdpDestPort1_Object = MibTableColumn
aclUdpDestPort1 = _AclUdpDestPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 17),
    _AclUdpDestPort1_Type()
)
aclUdpDestPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDestPort1.setStatus("current")


class _AclUdpDestPort2_Type(Integer32):
    """Custom type aclUdpDestPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdpDestPort2_Type.__name__ = "Integer32"
_AclUdpDestPort2_Object = MibTableColumn
aclUdpDestPort2 = _AclUdpDestPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 18),
    _AclUdpDestPort2_Type()
)
aclUdpDestPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpDestPort2.setStatus("current")


class _AclUdpTimeRangeName_Type(OctetString):
    """Custom type aclUdpTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclUdpTimeRangeName_Type.__name__ = "OctetString"
_AclUdpTimeRangeName_Object = MibTableColumn
aclUdpTimeRangeName = _AclUdpTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 19),
    _AclUdpTimeRangeName_Type()
)
aclUdpTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpTimeRangeName.setStatus("current")
_AclUdpRowStatus_Type = RowStatus
_AclUdpRowStatus_Object = MibTableColumn
aclUdpRowStatus = _AclUdpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 5, 1, 21),
    _AclUdpRowStatus_Type()
)
aclUdpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdpRowStatus.setStatus("current")
_AclIcmpRuleTable_Object = MibTable
aclIcmpRuleTable = _AclIcmpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6)
)
if mibBuilder.loadTexts:
    aclIcmpRuleTable.setStatus("current")
_AclIcmpRuleEntry_Object = MibTableRow
aclIcmpRuleEntry = _AclIcmpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1)
)
aclIcmpRuleEntry.setIndexNames(
    (0, "SWITCH", "aclIcmpGroupIndex"),
    (0, "SWITCH", "aclIcmpRuleIndex"),
)
if mibBuilder.loadTexts:
    aclIcmpRuleEntry.setStatus("current")


class _AclIcmpGroupIndex_Type(Integer32):
    """Custom type aclIcmpGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20001, 40000),
    )


_AclIcmpGroupIndex_Type.__name__ = "Integer32"
_AclIcmpGroupIndex_Object = MibTableColumn
aclIcmpGroupIndex = _AclIcmpGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 1),
    _AclIcmpGroupIndex_Type()
)
aclIcmpGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIcmpGroupIndex.setStatus("current")


class _AclIcmpRuleIndex_Type(Integer32):
    """Custom type aclIcmpRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclIcmpRuleIndex_Type.__name__ = "Integer32"
_AclIcmpRuleIndex_Object = MibTableColumn
aclIcmpRuleIndex = _AclIcmpRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 2),
    _AclIcmpRuleIndex_Type()
)
aclIcmpRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIcmpRuleIndex.setStatus("current")
_AclIcmpAct_Type = RuleAction
_AclIcmpAct_Object = MibTableColumn
aclIcmpAct = _AclIcmpAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 3),
    _AclIcmpAct_Type()
)
aclIcmpAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpAct.setStatus("current")
_AclIcmpSrcIp_Type = IpAddress
_AclIcmpSrcIp_Object = MibTableColumn
aclIcmpSrcIp = _AclIcmpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 4),
    _AclIcmpSrcIp_Type()
)
aclIcmpSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpSrcIp.setStatus("current")
_AclIcmpSrcWild_Type = IpAddress
_AclIcmpSrcWild_Object = MibTableColumn
aclIcmpSrcWild = _AclIcmpSrcWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 5),
    _AclIcmpSrcWild_Type()
)
aclIcmpSrcWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpSrcWild.setStatus("current")
_AclIcmpDestIp_Type = IpAddress
_AclIcmpDestIp_Object = MibTableColumn
aclIcmpDestIp = _AclIcmpDestIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 6),
    _AclIcmpDestIp_Type()
)
aclIcmpDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpDestIp.setStatus("current")
_AclIcmpDestWild_Type = IpAddress
_AclIcmpDestWild_Object = MibTableColumn
aclIcmpDestWild = _AclIcmpDestWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 7),
    _AclIcmpDestWild_Type()
)
aclIcmpDestWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpDestWild.setStatus("current")


class _AclIcmpPrecedence_Type(Integer32):
    """Custom type aclIcmpPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclIcmpPrecedence_Type.__name__ = "Integer32"
_AclIcmpPrecedence_Object = MibTableColumn
aclIcmpPrecedence = _AclIcmpPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 8),
    _AclIcmpPrecedence_Type()
)
aclIcmpPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpPrecedence.setStatus("current")
_AclIcmpDscp_Type = DSCPValue
_AclIcmpDscp_Object = MibTableColumn
aclIcmpDscp = _AclIcmpDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 9),
    _AclIcmpDscp_Type()
)
aclIcmpDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpDscp.setStatus("current")
_AclIcmpFragments_Type = TruthValue
_AclIcmpFragments_Object = MibTableColumn
aclIcmpFragments = _AclIcmpFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 10),
    _AclIcmpFragments_Type()
)
aclIcmpFragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpFragments.setStatus("current")
_AclIcmpRouted_Type = TruthValue
_AclIcmpRouted_Object = MibTableColumn
aclIcmpRouted = _AclIcmpRouted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 11),
    _AclIcmpRouted_Type()
)
aclIcmpRouted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpRouted.setStatus("current")
_AclIcmpOptions_Type = TruthValue
_AclIcmpOptions_Object = MibTableColumn
aclIcmpOptions = _AclIcmpOptions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 12),
    _AclIcmpOptions_Type()
)
aclIcmpOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpOptions.setStatus("current")


class _AclIcmpType_Type(Integer32):
    """Custom type aclIcmpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIcmpType_Type.__name__ = "Integer32"
_AclIcmpType_Object = MibTableColumn
aclIcmpType = _AclIcmpType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 13),
    _AclIcmpType_Type()
)
aclIcmpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpType.setStatus("current")


class _AclIcmpCode_Type(Integer32):
    """Custom type aclIcmpCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIcmpCode_Type.__name__ = "Integer32"
_AclIcmpCode_Object = MibTableColumn
aclIcmpCode = _AclIcmpCode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 14),
    _AclIcmpCode_Type()
)
aclIcmpCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpCode.setStatus("current")


class _AclIcmpTimeRangeName_Type(OctetString):
    """Custom type aclIcmpTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclIcmpTimeRangeName_Type.__name__ = "OctetString"
_AclIcmpTimeRangeName_Object = MibTableColumn
aclIcmpTimeRangeName = _AclIcmpTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 15),
    _AclIcmpTimeRangeName_Type()
)
aclIcmpTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpTimeRangeName.setStatus("current")
_AclIcmpRowStatus_Type = RowStatus
_AclIcmpRowStatus_Object = MibTableColumn
aclIcmpRowStatus = _AclIcmpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 6, 1, 17),
    _AclIcmpRowStatus_Type()
)
aclIcmpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmpRowStatus.setStatus("current")
_AclIgmpRuleTable_Object = MibTable
aclIgmpRuleTable = _AclIgmpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7)
)
if mibBuilder.loadTexts:
    aclIgmpRuleTable.setStatus("current")
_AclIgmpRuleEntry_Object = MibTableRow
aclIgmpRuleEntry = _AclIgmpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1)
)
aclIgmpRuleEntry.setIndexNames(
    (0, "SWITCH", "aclIgmpGroupIndex"),
    (0, "SWITCH", "aclIgmpRuleIndex"),
)
if mibBuilder.loadTexts:
    aclIgmpRuleEntry.setStatus("current")


class _AclIgmpGroupIndex_Type(Integer32):
    """Custom type aclIgmpGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20001, 40000),
    )


_AclIgmpGroupIndex_Type.__name__ = "Integer32"
_AclIgmpGroupIndex_Object = MibTableColumn
aclIgmpGroupIndex = _AclIgmpGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 1),
    _AclIgmpGroupIndex_Type()
)
aclIgmpGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIgmpGroupIndex.setStatus("current")


class _AclIgmpRuleIndex_Type(Integer32):
    """Custom type aclIgmpRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclIgmpRuleIndex_Type.__name__ = "Integer32"
_AclIgmpRuleIndex_Object = MibTableColumn
aclIgmpRuleIndex = _AclIgmpRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 2),
    _AclIgmpRuleIndex_Type()
)
aclIgmpRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIgmpRuleIndex.setStatus("current")
_AclIgmpAct_Type = RuleAction
_AclIgmpAct_Object = MibTableColumn
aclIgmpAct = _AclIgmpAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 3),
    _AclIgmpAct_Type()
)
aclIgmpAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpAct.setStatus("current")
_AclIgmpSrcIp_Type = IpAddress
_AclIgmpSrcIp_Object = MibTableColumn
aclIgmpSrcIp = _AclIgmpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 4),
    _AclIgmpSrcIp_Type()
)
aclIgmpSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpSrcIp.setStatus("current")
_AclIgmpSrcWild_Type = IpAddress
_AclIgmpSrcWild_Object = MibTableColumn
aclIgmpSrcWild = _AclIgmpSrcWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 5),
    _AclIgmpSrcWild_Type()
)
aclIgmpSrcWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpSrcWild.setStatus("current")
_AclIgmpDestIp_Type = IpAddress
_AclIgmpDestIp_Object = MibTableColumn
aclIgmpDestIp = _AclIgmpDestIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 6),
    _AclIgmpDestIp_Type()
)
aclIgmpDestIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpDestIp.setStatus("current")
_AclIgmpDestWild_Type = IpAddress
_AclIgmpDestWild_Object = MibTableColumn
aclIgmpDestWild = _AclIgmpDestWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 7),
    _AclIgmpDestWild_Type()
)
aclIgmpDestWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpDestWild.setStatus("current")


class _AclIgmpPrecedence_Type(Integer32):
    """Custom type aclIgmpPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclIgmpPrecedence_Type.__name__ = "Integer32"
_AclIgmpPrecedence_Object = MibTableColumn
aclIgmpPrecedence = _AclIgmpPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 8),
    _AclIgmpPrecedence_Type()
)
aclIgmpPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpPrecedence.setStatus("current")
_AclIgmpDscp_Type = DSCPValue
_AclIgmpDscp_Object = MibTableColumn
aclIgmpDscp = _AclIgmpDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 9),
    _AclIgmpDscp_Type()
)
aclIgmpDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpDscp.setStatus("current")
_AclIgmpFragments_Type = TruthValue
_AclIgmpFragments_Object = MibTableColumn
aclIgmpFragments = _AclIgmpFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 10),
    _AclIgmpFragments_Type()
)
aclIgmpFragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpFragments.setStatus("current")
_AclIgmpRouted_Type = TruthValue
_AclIgmpRouted_Object = MibTableColumn
aclIgmpRouted = _AclIgmpRouted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 11),
    _AclIgmpRouted_Type()
)
aclIgmpRouted.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpRouted.setStatus("current")
_AclIgmpOptions_Type = TruthValue
_AclIgmpOptions_Object = MibTableColumn
aclIgmpOptions = _AclIgmpOptions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 12),
    _AclIgmpOptions_Type()
)
aclIgmpOptions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpOptions.setStatus("current")


class _AclIgmpType_Type(Integer32):
    """Custom type aclIgmpType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              30,
              31,
              34,
              256)
        )
    )
    namedValues = NamedValues(
        *(("precedence", 0),
          ("hostQuery", 17),
          ("hostReport", 18),
          ("dvmrp", 19),
          ("pim", 20),
          ("trace", 21),
          ("v2Report", 22),
          ("v2Leave", 23),
          ("mtraceResponse", 30),
          ("mtrace", 31),
          ("v3Report", 34),
          ("invalid", 256))
    )


_AclIgmpType_Type.__name__ = "Integer32"
_AclIgmpType_Object = MibTableColumn
aclIgmpType = _AclIgmpType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 13),
    _AclIgmpType_Type()
)
aclIgmpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpType.setStatus("current")


class _AclIgmpTimeRangeName_Type(OctetString):
    """Custom type aclIgmpTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclIgmpTimeRangeName_Type.__name__ = "OctetString"
_AclIgmpTimeRangeName_Object = MibTableColumn
aclIgmpTimeRangeName = _AclIgmpTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 14),
    _AclIgmpTimeRangeName_Type()
)
aclIgmpTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpTimeRangeName.setStatus("current")
_AclIgmpRowStatus_Type = RowStatus
_AclIgmpRowStatus_Object = MibTableColumn
aclIgmpRowStatus = _AclIgmpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 7, 1, 16),
    _AclIgmpRowStatus_Type()
)
aclIgmpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIgmpRowStatus.setStatus("current")
_AclMplsMacRuleTable_Object = MibTable
aclMplsMacRuleTable = _AclMplsMacRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8)
)
if mibBuilder.loadTexts:
    aclMplsMacRuleTable.setStatus("current")
_AclMplsMacRuleEntry_Object = MibTableRow
aclMplsMacRuleEntry = _AclMplsMacRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1)
)
aclMplsMacRuleEntry.setIndexNames(
    (0, "SWITCH", "aclMplsMacGroupIndex"),
    (0, "SWITCH", "aclMplsMacRuleIndex"),
)
if mibBuilder.loadTexts:
    aclMplsMacRuleEntry.setStatus("current")


class _AclMplsMacGroupIndex_Type(Integer32):
    """Custom type aclMplsMacGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(70001, 80000),
    )


_AclMplsMacGroupIndex_Type.__name__ = "Integer32"
_AclMplsMacGroupIndex_Object = MibTableColumn
aclMplsMacGroupIndex = _AclMplsMacGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 1),
    _AclMplsMacGroupIndex_Type()
)
aclMplsMacGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMplsMacGroupIndex.setStatus("current")


class _AclMplsMacRuleIndex_Type(Integer32):
    """Custom type aclMplsMacRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclMplsMacRuleIndex_Type.__name__ = "Integer32"
_AclMplsMacRuleIndex_Object = MibTableColumn
aclMplsMacRuleIndex = _AclMplsMacRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 2),
    _AclMplsMacRuleIndex_Type()
)
aclMplsMacRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMplsMacRuleIndex.setStatus("current")
_AclMplsMacAct_Type = RuleAction
_AclMplsMacAct_Object = MibTableColumn
aclMplsMacAct = _AclMplsMacAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 3),
    _AclMplsMacAct_Type()
)
aclMplsMacAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacAct.setStatus("current")
_AclMplsMacSrcMac_Type = MacAddress
_AclMplsMacSrcMac_Object = MibTableColumn
aclMplsMacSrcMac = _AclMplsMacSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 4),
    _AclMplsMacSrcMac_Type()
)
aclMplsMacSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacSrcMac.setStatus("current")
_AclMplsMacSrcMacWild_Type = MacAddress
_AclMplsMacSrcMacWild_Object = MibTableColumn
aclMplsMacSrcMacWild = _AclMplsMacSrcMacWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 5),
    _AclMplsMacSrcMacWild_Type()
)
aclMplsMacSrcMacWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacSrcMacWild.setStatus("current")
_AclMplsMacDestMac_Type = MacAddress
_AclMplsMacDestMac_Object = MibTableColumn
aclMplsMacDestMac = _AclMplsMacDestMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 6),
    _AclMplsMacDestMac_Type()
)
aclMplsMacDestMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacDestMac.setStatus("current")
_AclMplsMacDestMacWild_Type = MacAddress
_AclMplsMacDestMacWild_Object = MibTableColumn
aclMplsMacDestMacWild = _AclMplsMacDestMacWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 7),
    _AclMplsMacDestMacWild_Type()
)
aclMplsMacDestMacWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacDestMacWild.setStatus("current")


class _AclMplsMacType_Type(Integer32):
    """Custom type aclMplsMacType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AclMplsMacType_Type.__name__ = "Integer32"
_AclMplsMacType_Object = MibTableColumn
aclMplsMacType = _AclMplsMacType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 8),
    _AclMplsMacType_Type()
)
aclMplsMacType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacType.setStatus("current")


class _AclMplsMacVlanId_Type(Integer32):
    """Custom type aclMplsMacVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_AclMplsMacVlanId_Type.__name__ = "Integer32"
_AclMplsMacVlanId_Object = MibTableColumn
aclMplsMacVlanId = _AclMplsMacVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 9),
    _AclMplsMacVlanId_Type()
)
aclMplsMacVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacVlanId.setStatus("current")


class _AclMplsMacInnerVlanId_Type(Integer32):
    """Custom type aclMplsMacInnerVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_AclMplsMacInnerVlanId_Type.__name__ = "Integer32"
_AclMplsMacInnerVlanId_Object = MibTableColumn
aclMplsMacInnerVlanId = _AclMplsMacInnerVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 10),
    _AclMplsMacInnerVlanId_Type()
)
aclMplsMacInnerVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacInnerVlanId.setStatus("current")


class _AclMplsMacCos_Type(Integer32):
    """Custom type aclMplsMacCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsMacCos_Type.__name__ = "Integer32"
_AclMplsMacCos_Object = MibTableColumn
aclMplsMacCos = _AclMplsMacCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 11),
    _AclMplsMacCos_Type()
)
aclMplsMacCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacCos.setStatus("current")


class _AclMplsMacInnerCos_Type(Integer32):
    """Custom type aclMplsMacInnerCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsMacInnerCos_Type.__name__ = "Integer32"
_AclMplsMacInnerCos_Object = MibTableColumn
aclMplsMacInnerCos = _AclMplsMacInnerCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 12),
    _AclMplsMacInnerCos_Type()
)
aclMplsMacInnerCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacInnerCos.setStatus("current")


class _AclMplsMacTimeRangeName_Type(OctetString):
    """Custom type aclMplsMacTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclMplsMacTimeRangeName_Type.__name__ = "OctetString"
_AclMplsMacTimeRangeName_Object = MibTableColumn
aclMplsMacTimeRangeName = _AclMplsMacTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 13),
    _AclMplsMacTimeRangeName_Type()
)
aclMplsMacTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacTimeRangeName.setStatus("current")
_AclMplsMacRowStatus_Type = RowStatus
_AclMplsMacRowStatus_Object = MibTableColumn
aclMplsMacRowStatus = _AclMplsMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 8, 1, 20),
    _AclMplsMacRowStatus_Type()
)
aclMplsMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsMacRowStatus.setStatus("current")
_AclMplsLabelRuleTable_Object = MibTable
aclMplsLabelRuleTable = _AclMplsLabelRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9)
)
if mibBuilder.loadTexts:
    aclMplsLabelRuleTable.setStatus("current")
_AclMplsLabelRuleEntry_Object = MibTableRow
aclMplsLabelRuleEntry = _AclMplsLabelRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1)
)
aclMplsLabelRuleEntry.setIndexNames(
    (0, "SWITCH", "aclMplsLabelGroupIndex"),
    (0, "SWITCH", "aclMplsLabelRuleIndex"),
)
if mibBuilder.loadTexts:
    aclMplsLabelRuleEntry.setStatus("current")


class _AclMplsLabelGroupIndex_Type(Integer32):
    """Custom type aclMplsLabelGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60001, 80000),
    )


_AclMplsLabelGroupIndex_Type.__name__ = "Integer32"
_AclMplsLabelGroupIndex_Object = MibTableColumn
aclMplsLabelGroupIndex = _AclMplsLabelGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 1),
    _AclMplsLabelGroupIndex_Type()
)
aclMplsLabelGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMplsLabelGroupIndex.setStatus("current")


class _AclMplsLabelRuleIndex_Type(Integer32):
    """Custom type aclMplsLabelRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclMplsLabelRuleIndex_Type.__name__ = "Integer32"
_AclMplsLabelRuleIndex_Object = MibTableColumn
aclMplsLabelRuleIndex = _AclMplsLabelRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 2),
    _AclMplsLabelRuleIndex_Type()
)
aclMplsLabelRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclMplsLabelRuleIndex.setStatus("current")
_AclMplsLabelAct_Type = RuleAction
_AclMplsLabelAct_Object = MibTableColumn
aclMplsLabelAct = _AclMplsLabelAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 3),
    _AclMplsLabelAct_Type()
)
aclMplsLabelAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabelAct.setStatus("current")


class _AclMplsLabelLayer_Type(Integer32):
    """Custom type aclMplsLabelLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AclMplsLabelLayer_Type.__name__ = "Integer32"
_AclMplsLabelLayer_Object = MibTableColumn
aclMplsLabelLayer = _AclMplsLabelLayer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 4),
    _AclMplsLabelLayer_Type()
)
aclMplsLabelLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabelLayer.setStatus("current")


class _AclMplsLabel1Value_Type(Integer32):
    """Custom type aclMplsLabel1Value based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048575),
    )


_AclMplsLabel1Value_Type.__name__ = "Integer32"
_AclMplsLabel1Value_Object = MibTableColumn
aclMplsLabel1Value = _AclMplsLabel1Value_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 5),
    _AclMplsLabel1Value_Type()
)
aclMplsLabel1Value.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel1Value.setStatus("current")


class _AclMplsLabel1Wild_Type(OctetString):
    """Custom type aclMplsLabel1Wild based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_AclMplsLabel1Wild_Type.__name__ = "OctetString"
_AclMplsLabel1Wild_Object = MibTableColumn
aclMplsLabel1Wild = _AclMplsLabel1Wild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 6),
    _AclMplsLabel1Wild_Type()
)
aclMplsLabel1Wild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel1Wild.setStatus("current")


class _AclMplsLabel1Exp_Type(Integer32):
    """Custom type aclMplsLabel1Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsLabel1Exp_Type.__name__ = "Integer32"
_AclMplsLabel1Exp_Object = MibTableColumn
aclMplsLabel1Exp = _AclMplsLabel1Exp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 7),
    _AclMplsLabel1Exp_Type()
)
aclMplsLabel1Exp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel1Exp.setStatus("current")


class _AclMplsLabel1Ttl_Type(Integer32):
    """Custom type aclMplsLabel1Ttl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclMplsLabel1Ttl_Type.__name__ = "Integer32"
_AclMplsLabel1Ttl_Object = MibTableColumn
aclMplsLabel1Ttl = _AclMplsLabel1Ttl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 8),
    _AclMplsLabel1Ttl_Type()
)
aclMplsLabel1Ttl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel1Ttl.setStatus("current")


class _AclMplsLabel2Value_Type(Integer32):
    """Custom type aclMplsLabel2Value based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048575),
    )


_AclMplsLabel2Value_Type.__name__ = "Integer32"
_AclMplsLabel2Value_Object = MibTableColumn
aclMplsLabel2Value = _AclMplsLabel2Value_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 9),
    _AclMplsLabel2Value_Type()
)
aclMplsLabel2Value.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel2Value.setStatus("current")


class _AclMplsLabel2Wild_Type(OctetString):
    """Custom type aclMplsLabel2Wild based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_AclMplsLabel2Wild_Type.__name__ = "OctetString"
_AclMplsLabel2Wild_Object = MibTableColumn
aclMplsLabel2Wild = _AclMplsLabel2Wild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 10),
    _AclMplsLabel2Wild_Type()
)
aclMplsLabel2Wild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel2Wild.setStatus("current")


class _AclMplsLabel2Exp_Type(Integer32):
    """Custom type aclMplsLabel2Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsLabel2Exp_Type.__name__ = "Integer32"
_AclMplsLabel2Exp_Object = MibTableColumn
aclMplsLabel2Exp = _AclMplsLabel2Exp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 11),
    _AclMplsLabel2Exp_Type()
)
aclMplsLabel2Exp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel2Exp.setStatus("current")


class _AclMplsLabel2Ttl_Type(Integer32):
    """Custom type aclMplsLabel2Ttl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclMplsLabel2Ttl_Type.__name__ = "Integer32"
_AclMplsLabel2Ttl_Object = MibTableColumn
aclMplsLabel2Ttl = _AclMplsLabel2Ttl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 12),
    _AclMplsLabel2Ttl_Type()
)
aclMplsLabel2Ttl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel2Ttl.setStatus("current")


class _AclMplsLabel3Value_Type(Integer32):
    """Custom type aclMplsLabel3Value based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048575),
    )


_AclMplsLabel3Value_Type.__name__ = "Integer32"
_AclMplsLabel3Value_Object = MibTableColumn
aclMplsLabel3Value = _AclMplsLabel3Value_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 13),
    _AclMplsLabel3Value_Type()
)
aclMplsLabel3Value.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel3Value.setStatus("current")


class _AclMplsLabel3Wild_Type(OctetString):
    """Custom type aclMplsLabel3Wild based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_AclMplsLabel3Wild_Type.__name__ = "OctetString"
_AclMplsLabel3Wild_Object = MibTableColumn
aclMplsLabel3Wild = _AclMplsLabel3Wild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 14),
    _AclMplsLabel3Wild_Type()
)
aclMplsLabel3Wild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel3Wild.setStatus("current")


class _AclMplsLabel3Exp_Type(Integer32):
    """Custom type aclMplsLabel3Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsLabel3Exp_Type.__name__ = "Integer32"
_AclMplsLabel3Exp_Object = MibTableColumn
aclMplsLabel3Exp = _AclMplsLabel3Exp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 15),
    _AclMplsLabel3Exp_Type()
)
aclMplsLabel3Exp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel3Exp.setStatus("current")


class _AclMplsLabel3Ttl_Type(Integer32):
    """Custom type aclMplsLabel3Ttl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclMplsLabel3Ttl_Type.__name__ = "Integer32"
_AclMplsLabel3Ttl_Object = MibTableColumn
aclMplsLabel3Ttl = _AclMplsLabel3Ttl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 16),
    _AclMplsLabel3Ttl_Type()
)
aclMplsLabel3Ttl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel3Ttl.setStatus("current")


class _AclMplsLabel4Value_Type(Integer32):
    """Custom type aclMplsLabel4Value based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048575),
    )


_AclMplsLabel4Value_Type.__name__ = "Integer32"
_AclMplsLabel4Value_Object = MibTableColumn
aclMplsLabel4Value = _AclMplsLabel4Value_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 17),
    _AclMplsLabel4Value_Type()
)
aclMplsLabel4Value.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel4Value.setStatus("current")


class _AclMplsLabel4Wild_Type(OctetString):
    """Custom type aclMplsLabel4Wild based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_AclMplsLabel4Wild_Type.__name__ = "OctetString"
_AclMplsLabel4Wild_Object = MibTableColumn
aclMplsLabel4Wild = _AclMplsLabel4Wild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 18),
    _AclMplsLabel4Wild_Type()
)
aclMplsLabel4Wild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel4Wild.setStatus("current")


class _AclMplsLabel4Exp_Type(Integer32):
    """Custom type aclMplsLabel4Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AclMplsLabel4Exp_Type.__name__ = "Integer32"
_AclMplsLabel4Exp_Object = MibTableColumn
aclMplsLabel4Exp = _AclMplsLabel4Exp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 19),
    _AclMplsLabel4Exp_Type()
)
aclMplsLabel4Exp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel4Exp.setStatus("current")


class _AclMplsLabel4Ttl_Type(Integer32):
    """Custom type aclMplsLabel4Ttl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclMplsLabel4Ttl_Type.__name__ = "Integer32"
_AclMplsLabel4Ttl_Object = MibTableColumn
aclMplsLabel4Ttl = _AclMplsLabel4Ttl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 20),
    _AclMplsLabel4Ttl_Type()
)
aclMplsLabel4Ttl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabel4Ttl.setStatus("current")
_AclMplsLabelSkBottom_Type = TruthValue
_AclMplsLabelSkBottom_Object = MibTableColumn
aclMplsLabelSkBottom = _AclMplsLabelSkBottom_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 21),
    _AclMplsLabelSkBottom_Type()
)
aclMplsLabelSkBottom.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabelSkBottom.setStatus("current")


class _AclMplsLabelTimeRangeName_Type(OctetString):
    """Custom type aclMplsLabelTimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclMplsLabelTimeRangeName_Type.__name__ = "OctetString"
_AclMplsLabelTimeRangeName_Object = MibTableColumn
aclMplsLabelTimeRangeName = _AclMplsLabelTimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 22),
    _AclMplsLabelTimeRangeName_Type()
)
aclMplsLabelTimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabelTimeRangeName.setStatus("current")
_AclMplsLabelRowStatus_Type = RowStatus
_AclMplsLabelRowStatus_Object = MibTableColumn
aclMplsLabelRowStatus = _AclMplsLabelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 9, 1, 25),
    _AclMplsLabelRowStatus_Type()
)
aclMplsLabelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclMplsLabelRowStatus.setStatus("current")
_AclIpv6RuleTable_Object = MibTable
aclIpv6RuleTable = _AclIpv6RuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10)
)
if mibBuilder.loadTexts:
    aclIpv6RuleTable.setStatus("current")
_AclIpv6RuleEntry_Object = MibTableRow
aclIpv6RuleEntry = _AclIpv6RuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1)
)
aclIpv6RuleEntry.setIndexNames(
    (0, "SWITCH", "aclIpv6GroupIndex"),
    (0, "SWITCH", "aclIpv6RuleIndex"),
)
if mibBuilder.loadTexts:
    aclIpv6RuleEntry.setStatus("current")


class _AclIpv6GroupIndex_Type(Integer32):
    """Custom type aclIpv6GroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(40001, 60000),
    )


_AclIpv6GroupIndex_Type.__name__ = "Integer32"
_AclIpv6GroupIndex_Object = MibTableColumn
aclIpv6GroupIndex = _AclIpv6GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 1),
    _AclIpv6GroupIndex_Type()
)
aclIpv6GroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIpv6GroupIndex.setStatus("current")


class _AclIpv6RuleIndex_Type(Integer32):
    """Custom type aclIpv6RuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclIpv6RuleIndex_Type.__name__ = "Integer32"
_AclIpv6RuleIndex_Object = MibTableColumn
aclIpv6RuleIndex = _AclIpv6RuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 2),
    _AclIpv6RuleIndex_Type()
)
aclIpv6RuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIpv6RuleIndex.setStatus("current")
_AclIpv6Act_Type = RuleAction
_AclIpv6Act_Object = MibTableColumn
aclIpv6Act = _AclIpv6Act_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 3),
    _AclIpv6Act_Type()
)
aclIpv6Act.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Act.setStatus("current")


class _AclIpv6Protocol_Type(Integer32):
    """Custom type aclIpv6Protocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIpv6Protocol_Type.__name__ = "Integer32"
_AclIpv6Protocol_Object = MibTableColumn
aclIpv6Protocol = _AclIpv6Protocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 4),
    _AclIpv6Protocol_Type()
)
aclIpv6Protocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Protocol.setStatus("current")


class _AclIpv6SrcIpv6_Type(OctetString):
    """Custom type aclIpv6SrcIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclIpv6SrcIpv6_Type.__name__ = "OctetString"
_AclIpv6SrcIpv6_Object = MibTableColumn
aclIpv6SrcIpv6 = _AclIpv6SrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 5),
    _AclIpv6SrcIpv6_Type()
)
aclIpv6SrcIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6SrcIpv6.setStatus("current")


class _AclIpv6SrcPrefixLen_Type(Integer32):
    """Custom type aclIpv6SrcPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclIpv6SrcPrefixLen_Type.__name__ = "Integer32"
_AclIpv6SrcPrefixLen_Object = MibTableColumn
aclIpv6SrcPrefixLen = _AclIpv6SrcPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 6),
    _AclIpv6SrcPrefixLen_Type()
)
aclIpv6SrcPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6SrcPrefixLen.setStatus("current")


class _AclIpv6DestIpv6_Type(OctetString):
    """Custom type aclIpv6DestIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclIpv6DestIpv6_Type.__name__ = "OctetString"
_AclIpv6DestIpv6_Object = MibTableColumn
aclIpv6DestIpv6 = _AclIpv6DestIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 7),
    _AclIpv6DestIpv6_Type()
)
aclIpv6DestIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6DestIpv6.setStatus("current")


class _AclIpv6DestPrefixLen_Type(Integer32):
    """Custom type aclIpv6DestPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclIpv6DestPrefixLen_Type.__name__ = "Integer32"
_AclIpv6DestPrefixLen_Object = MibTableColumn
aclIpv6DestPrefixLen = _AclIpv6DestPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 8),
    _AclIpv6DestPrefixLen_Type()
)
aclIpv6DestPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6DestPrefixLen.setStatus("current")


class _AclIpv6FlowLabel_Type(Integer32):
    """Custom type aclIpv6FlowLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_AclIpv6FlowLabel_Type.__name__ = "Integer32"
_AclIpv6FlowLabel_Object = MibTableColumn
aclIpv6FlowLabel = _AclIpv6FlowLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 9),
    _AclIpv6FlowLabel_Type()
)
aclIpv6FlowLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6FlowLabel.setStatus("current")
_AclIpv6Dscp_Type = DSCPValue
_AclIpv6Dscp_Object = MibTableColumn
aclIpv6Dscp = _AclIpv6Dscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 10),
    _AclIpv6Dscp_Type()
)
aclIpv6Dscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Dscp.setStatus("current")
_AclIpv6Fragments_Type = TruthValue
_AclIpv6Fragments_Object = MibTableColumn
aclIpv6Fragments = _AclIpv6Fragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 11),
    _AclIpv6Fragments_Type()
)
aclIpv6Fragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Fragments.setStatus("current")
_AclIpv6Routed_Type = TruthValue
_AclIpv6Routed_Object = MibTableColumn
aclIpv6Routed = _AclIpv6Routed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 12),
    _AclIpv6Routed_Type()
)
aclIpv6Routed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Routed.setStatus("current")
_AclIpv6Options_Type = TruthValue
_AclIpv6Options_Object = MibTableColumn
aclIpv6Options = _AclIpv6Options_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 13),
    _AclIpv6Options_Type()
)
aclIpv6Options.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6Options.setStatus("obsolete")


class _AclIpv6TimeRangeName_Type(OctetString):
    """Custom type aclIpv6TimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclIpv6TimeRangeName_Type.__name__ = "OctetString"
_AclIpv6TimeRangeName_Object = MibTableColumn
aclIpv6TimeRangeName = _AclIpv6TimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 14),
    _AclIpv6TimeRangeName_Type()
)
aclIpv6TimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6TimeRangeName.setStatus("current")
_AclIpv6RowStatus_Type = RowStatus
_AclIpv6RowStatus_Object = MibTableColumn
aclIpv6RowStatus = _AclIpv6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 10, 1, 16),
    _AclIpv6RowStatus_Type()
)
aclIpv6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIpv6RowStatus.setStatus("current")
_AclTcp6RuleTable_Object = MibTable
aclTcp6RuleTable = _AclTcp6RuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11)
)
if mibBuilder.loadTexts:
    aclTcp6RuleTable.setStatus("current")
_AclTcp6RuleEntry_Object = MibTableRow
aclTcp6RuleEntry = _AclTcp6RuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1)
)
aclTcp6RuleEntry.setIndexNames(
    (0, "SWITCH", "aclTcp6GroupIndex"),
    (0, "SWITCH", "aclTcp6RuleIndex"),
)
if mibBuilder.loadTexts:
    aclTcp6RuleEntry.setStatus("current")


class _AclTcp6GroupIndex_Type(Integer32):
    """Custom type aclTcp6GroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(40001, 60000),
    )


_AclTcp6GroupIndex_Type.__name__ = "Integer32"
_AclTcp6GroupIndex_Object = MibTableColumn
aclTcp6GroupIndex = _AclTcp6GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 1),
    _AclTcp6GroupIndex_Type()
)
aclTcp6GroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclTcp6GroupIndex.setStatus("current")


class _AclTcp6RuleIndex_Type(Integer32):
    """Custom type aclTcp6RuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclTcp6RuleIndex_Type.__name__ = "Integer32"
_AclTcp6RuleIndex_Object = MibTableColumn
aclTcp6RuleIndex = _AclTcp6RuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 2),
    _AclTcp6RuleIndex_Type()
)
aclTcp6RuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclTcp6RuleIndex.setStatus("current")
_AclTcp6Act_Type = RuleAction
_AclTcp6Act_Object = MibTableColumn
aclTcp6Act = _AclTcp6Act_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 3),
    _AclTcp6Act_Type()
)
aclTcp6Act.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6Act.setStatus("current")


class _AclTcp6SrcIpv6_Type(OctetString):
    """Custom type aclTcp6SrcIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclTcp6SrcIpv6_Type.__name__ = "OctetString"
_AclTcp6SrcIpv6_Object = MibTableColumn
aclTcp6SrcIpv6 = _AclTcp6SrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 4),
    _AclTcp6SrcIpv6_Type()
)
aclTcp6SrcIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6SrcIpv6.setStatus("current")


class _AclTcp6SrcPrefixLen_Type(Integer32):
    """Custom type aclTcp6SrcPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclTcp6SrcPrefixLen_Type.__name__ = "Integer32"
_AclTcp6SrcPrefixLen_Object = MibTableColumn
aclTcp6SrcPrefixLen = _AclTcp6SrcPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 5),
    _AclTcp6SrcPrefixLen_Type()
)
aclTcp6SrcPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6SrcPrefixLen.setStatus("current")


class _AclTcp6DestIpv6_Type(OctetString):
    """Custom type aclTcp6DestIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclTcp6DestIpv6_Type.__name__ = "OctetString"
_AclTcp6DestIpv6_Object = MibTableColumn
aclTcp6DestIpv6 = _AclTcp6DestIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 6),
    _AclTcp6DestIpv6_Type()
)
aclTcp6DestIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6DestIpv6.setStatus("current")


class _AclTcp6DestPrefixLen_Type(Integer32):
    """Custom type aclTcp6DestPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclTcp6DestPrefixLen_Type.__name__ = "Integer32"
_AclTcp6DestPrefixLen_Object = MibTableColumn
aclTcp6DestPrefixLen = _AclTcp6DestPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 7),
    _AclTcp6DestPrefixLen_Type()
)
aclTcp6DestPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6DestPrefixLen.setStatus("current")


class _AclTcp6FlowLabel_Type(Integer32):
    """Custom type aclTcp6FlowLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_AclTcp6FlowLabel_Type.__name__ = "Integer32"
_AclTcp6FlowLabel_Object = MibTableColumn
aclTcp6FlowLabel = _AclTcp6FlowLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 8),
    _AclTcp6FlowLabel_Type()
)
aclTcp6FlowLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlowLabel.setStatus("current")
_AclTcp6Dscp_Type = DSCPValue
_AclTcp6Dscp_Object = MibTableColumn
aclTcp6Dscp = _AclTcp6Dscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 9),
    _AclTcp6Dscp_Type()
)
aclTcp6Dscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6Dscp.setStatus("current")
_AclTcp6Fragments_Type = TruthValue
_AclTcp6Fragments_Object = MibTableColumn
aclTcp6Fragments = _AclTcp6Fragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 10),
    _AclTcp6Fragments_Type()
)
aclTcp6Fragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6Fragments.setStatus("current")
_AclTcp6Routed_Type = TruthValue
_AclTcp6Routed_Object = MibTableColumn
aclTcp6Routed = _AclTcp6Routed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 11),
    _AclTcp6Routed_Type()
)
aclTcp6Routed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6Routed.setStatus("current")
_AclTcp6Options_Type = TruthValue
_AclTcp6Options_Object = MibTableColumn
aclTcp6Options = _AclTcp6Options_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 12),
    _AclTcp6Options_Type()
)
aclTcp6Options.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6Options.setStatus("obsolete")
_AclTcp6SrcOp_Type = PortOp
_AclTcp6SrcOp_Object = MibTableColumn
aclTcp6SrcOp = _AclTcp6SrcOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 13),
    _AclTcp6SrcOp_Type()
)
aclTcp6SrcOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6SrcOp.setStatus("current")


class _AclTcp6SrcPort1_Type(Integer32):
    """Custom type aclTcp6SrcPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcp6SrcPort1_Type.__name__ = "Integer32"
_AclTcp6SrcPort1_Object = MibTableColumn
aclTcp6SrcPort1 = _AclTcp6SrcPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 14),
    _AclTcp6SrcPort1_Type()
)
aclTcp6SrcPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6SrcPort1.setStatus("current")


class _AclTcp6SrcPort2_Type(Integer32):
    """Custom type aclTcp6SrcPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcp6SrcPort2_Type.__name__ = "Integer32"
_AclTcp6SrcPort2_Object = MibTableColumn
aclTcp6SrcPort2 = _AclTcp6SrcPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 15),
    _AclTcp6SrcPort2_Type()
)
aclTcp6SrcPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6SrcPort2.setStatus("current")
_AclTcp6DestOp_Type = PortOp
_AclTcp6DestOp_Object = MibTableColumn
aclTcp6DestOp = _AclTcp6DestOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 16),
    _AclTcp6DestOp_Type()
)
aclTcp6DestOp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclTcp6DestOp.setStatus("current")


class _AclTcp6DestPort1_Type(Integer32):
    """Custom type aclTcp6DestPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcp6DestPort1_Type.__name__ = "Integer32"
_AclTcp6DestPort1_Object = MibTableColumn
aclTcp6DestPort1 = _AclTcp6DestPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 17),
    _AclTcp6DestPort1_Type()
)
aclTcp6DestPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6DestPort1.setStatus("current")


class _AclTcp6DestPort2_Type(Integer32):
    """Custom type aclTcp6DestPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclTcp6DestPort2_Type.__name__ = "Integer32"
_AclTcp6DestPort2_Object = MibTableColumn
aclTcp6DestPort2 = _AclTcp6DestPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 18),
    _AclTcp6DestPort2_Type()
)
aclTcp6DestPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6DestPort2.setStatus("current")


class _AclTcp6FlagOp_Type(Integer32):
    """Custom type aclTcp6FlagOp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("matchAny", 0),
          ("matchAll", 1),
          ("invalid", 2))
    )


_AclTcp6FlagOp_Type.__name__ = "Integer32"
_AclTcp6FlagOp_Object = MibTableColumn
aclTcp6FlagOp = _AclTcp6FlagOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 19),
    _AclTcp6FlagOp_Type()
)
aclTcp6FlagOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagOp.setStatus("current")
_AclTcp6FlagUrg_Type = TruthValue
_AclTcp6FlagUrg_Object = MibTableColumn
aclTcp6FlagUrg = _AclTcp6FlagUrg_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 20),
    _AclTcp6FlagUrg_Type()
)
aclTcp6FlagUrg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagUrg.setStatus("current")
_AclTcp6FlagAck_Type = TruthValue
_AclTcp6FlagAck_Object = MibTableColumn
aclTcp6FlagAck = _AclTcp6FlagAck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 21),
    _AclTcp6FlagAck_Type()
)
aclTcp6FlagAck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagAck.setStatus("current")
_AclTcp6FlagPsh_Type = TruthValue
_AclTcp6FlagPsh_Object = MibTableColumn
aclTcp6FlagPsh = _AclTcp6FlagPsh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 22),
    _AclTcp6FlagPsh_Type()
)
aclTcp6FlagPsh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagPsh.setStatus("current")
_AclTcp6FlagRst_Type = TruthValue
_AclTcp6FlagRst_Object = MibTableColumn
aclTcp6FlagRst = _AclTcp6FlagRst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 23),
    _AclTcp6FlagRst_Type()
)
aclTcp6FlagRst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagRst.setStatus("current")
_AclTcp6FlagSyn_Type = TruthValue
_AclTcp6FlagSyn_Object = MibTableColumn
aclTcp6FlagSyn = _AclTcp6FlagSyn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 24),
    _AclTcp6FlagSyn_Type()
)
aclTcp6FlagSyn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagSyn.setStatus("current")
_AclTcp6FlagFin_Type = TruthValue
_AclTcp6FlagFin_Object = MibTableColumn
aclTcp6FlagFin = _AclTcp6FlagFin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 25),
    _AclTcp6FlagFin_Type()
)
aclTcp6FlagFin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6FlagFin.setStatus("current")


class _AclTcp6TimeRangeName_Type(OctetString):
    """Custom type aclTcp6TimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclTcp6TimeRangeName_Type.__name__ = "OctetString"
_AclTcp6TimeRangeName_Object = MibTableColumn
aclTcp6TimeRangeName = _AclTcp6TimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 26),
    _AclTcp6TimeRangeName_Type()
)
aclTcp6TimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6TimeRangeName.setStatus("current")
_AclTcp6RowStatus_Type = RowStatus
_AclTcp6RowStatus_Object = MibTableColumn
aclTcp6RowStatus = _AclTcp6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 11, 1, 28),
    _AclTcp6RowStatus_Type()
)
aclTcp6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclTcp6RowStatus.setStatus("current")
_AclUdp6RuleTable_Object = MibTable
aclUdp6RuleTable = _AclUdp6RuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12)
)
if mibBuilder.loadTexts:
    aclUdp6RuleTable.setStatus("current")
_AclUdp6RuleEntry_Object = MibTableRow
aclUdp6RuleEntry = _AclUdp6RuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1)
)
aclUdp6RuleEntry.setIndexNames(
    (0, "SWITCH", "aclUdp6GroupIndex"),
    (0, "SWITCH", "aclUdp6RuleIndex"),
)
if mibBuilder.loadTexts:
    aclUdp6RuleEntry.setStatus("current")


class _AclUdp6GroupIndex_Type(Integer32):
    """Custom type aclUdp6GroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(40001, 60000),
    )


_AclUdp6GroupIndex_Type.__name__ = "Integer32"
_AclUdp6GroupIndex_Object = MibTableColumn
aclUdp6GroupIndex = _AclUdp6GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 1),
    _AclUdp6GroupIndex_Type()
)
aclUdp6GroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclUdp6GroupIndex.setStatus("current")


class _AclUdp6RuleIndex_Type(Integer32):
    """Custom type aclUdp6RuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclUdp6RuleIndex_Type.__name__ = "Integer32"
_AclUdp6RuleIndex_Object = MibTableColumn
aclUdp6RuleIndex = _AclUdp6RuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 2),
    _AclUdp6RuleIndex_Type()
)
aclUdp6RuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclUdp6RuleIndex.setStatus("current")
_AclUdp6Act_Type = RuleAction
_AclUdp6Act_Object = MibTableColumn
aclUdp6Act = _AclUdp6Act_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 3),
    _AclUdp6Act_Type()
)
aclUdp6Act.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6Act.setStatus("current")


class _AclUdp6SrcIpv6_Type(OctetString):
    """Custom type aclUdp6SrcIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclUdp6SrcIpv6_Type.__name__ = "OctetString"
_AclUdp6SrcIpv6_Object = MibTableColumn
aclUdp6SrcIpv6 = _AclUdp6SrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 4),
    _AclUdp6SrcIpv6_Type()
)
aclUdp6SrcIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6SrcIpv6.setStatus("current")


class _AclUdp6SrcPrefixLen_Type(Integer32):
    """Custom type aclUdp6SrcPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclUdp6SrcPrefixLen_Type.__name__ = "Integer32"
_AclUdp6SrcPrefixLen_Object = MibTableColumn
aclUdp6SrcPrefixLen = _AclUdp6SrcPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 5),
    _AclUdp6SrcPrefixLen_Type()
)
aclUdp6SrcPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6SrcPrefixLen.setStatus("current")


class _AclUdp6DestIpv6_Type(OctetString):
    """Custom type aclUdp6DestIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclUdp6DestIpv6_Type.__name__ = "OctetString"
_AclUdp6DestIpv6_Object = MibTableColumn
aclUdp6DestIpv6 = _AclUdp6DestIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 6),
    _AclUdp6DestIpv6_Type()
)
aclUdp6DestIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6DestIpv6.setStatus("current")


class _AclUdp6DestPrefixLen_Type(Integer32):
    """Custom type aclUdp6DestPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclUdp6DestPrefixLen_Type.__name__ = "Integer32"
_AclUdp6DestPrefixLen_Object = MibTableColumn
aclUdp6DestPrefixLen = _AclUdp6DestPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 7),
    _AclUdp6DestPrefixLen_Type()
)
aclUdp6DestPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6DestPrefixLen.setStatus("current")


class _AclUdp6FlowLabel_Type(Integer32):
    """Custom type aclUdp6FlowLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_AclUdp6FlowLabel_Type.__name__ = "Integer32"
_AclUdp6FlowLabel_Object = MibTableColumn
aclUdp6FlowLabel = _AclUdp6FlowLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 8),
    _AclUdp6FlowLabel_Type()
)
aclUdp6FlowLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6FlowLabel.setStatus("current")
_AclUdp6Dscp_Type = DSCPValue
_AclUdp6Dscp_Object = MibTableColumn
aclUdp6Dscp = _AclUdp6Dscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 9),
    _AclUdp6Dscp_Type()
)
aclUdp6Dscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6Dscp.setStatus("current")
_AclUdp6Fragments_Type = TruthValue
_AclUdp6Fragments_Object = MibTableColumn
aclUdp6Fragments = _AclUdp6Fragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 10),
    _AclUdp6Fragments_Type()
)
aclUdp6Fragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6Fragments.setStatus("current")
_AclUdp6Routed_Type = TruthValue
_AclUdp6Routed_Object = MibTableColumn
aclUdp6Routed = _AclUdp6Routed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 11),
    _AclUdp6Routed_Type()
)
aclUdp6Routed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6Routed.setStatus("current")
_AclUdp6Options_Type = TruthValue
_AclUdp6Options_Object = MibTableColumn
aclUdp6Options = _AclUdp6Options_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 12),
    _AclUdp6Options_Type()
)
aclUdp6Options.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6Options.setStatus("obsolete")
_AclUdp6SrcOp_Type = PortOp
_AclUdp6SrcOp_Object = MibTableColumn
aclUdp6SrcOp = _AclUdp6SrcOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 13),
    _AclUdp6SrcOp_Type()
)
aclUdp6SrcOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6SrcOp.setStatus("current")


class _AclUdp6SrcPort1_Type(Integer32):
    """Custom type aclUdp6SrcPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdp6SrcPort1_Type.__name__ = "Integer32"
_AclUdp6SrcPort1_Object = MibTableColumn
aclUdp6SrcPort1 = _AclUdp6SrcPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 14),
    _AclUdp6SrcPort1_Type()
)
aclUdp6SrcPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6SrcPort1.setStatus("current")


class _AclUdp6SrcPort2_Type(Integer32):
    """Custom type aclUdp6SrcPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdp6SrcPort2_Type.__name__ = "Integer32"
_AclUdp6SrcPort2_Object = MibTableColumn
aclUdp6SrcPort2 = _AclUdp6SrcPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 15),
    _AclUdp6SrcPort2_Type()
)
aclUdp6SrcPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6SrcPort2.setStatus("current")
_AclUdp6DestOp_Type = PortOp
_AclUdp6DestOp_Object = MibTableColumn
aclUdp6DestOp = _AclUdp6DestOp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 16),
    _AclUdp6DestOp_Type()
)
aclUdp6DestOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6DestOp.setStatus("current")


class _AclUdp6DestPort1_Type(Integer32):
    """Custom type aclUdp6DestPort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdp6DestPort1_Type.__name__ = "Integer32"
_AclUdp6DestPort1_Object = MibTableColumn
aclUdp6DestPort1 = _AclUdp6DestPort1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 17),
    _AclUdp6DestPort1_Type()
)
aclUdp6DestPort1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6DestPort1.setStatus("current")


class _AclUdp6DestPort2_Type(Integer32):
    """Custom type aclUdp6DestPort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AclUdp6DestPort2_Type.__name__ = "Integer32"
_AclUdp6DestPort2_Object = MibTableColumn
aclUdp6DestPort2 = _AclUdp6DestPort2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 18),
    _AclUdp6DestPort2_Type()
)
aclUdp6DestPort2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6DestPort2.setStatus("current")


class _AclUdp6TimeRangeName_Type(OctetString):
    """Custom type aclUdp6TimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclUdp6TimeRangeName_Type.__name__ = "OctetString"
_AclUdp6TimeRangeName_Object = MibTableColumn
aclUdp6TimeRangeName = _AclUdp6TimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 19),
    _AclUdp6TimeRangeName_Type()
)
aclUdp6TimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6TimeRangeName.setStatus("current")
_AclUdp6RowStatus_Type = RowStatus
_AclUdp6RowStatus_Object = MibTableColumn
aclUdp6RowStatus = _AclUdp6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 12, 1, 21),
    _AclUdp6RowStatus_Type()
)
aclUdp6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclUdp6RowStatus.setStatus("current")
_AclIcmp6RuleTable_Object = MibTable
aclIcmp6RuleTable = _AclIcmp6RuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13)
)
if mibBuilder.loadTexts:
    aclIcmp6RuleTable.setStatus("current")
_AclIcmp6RuleEntry_Object = MibTableRow
aclIcmp6RuleEntry = _AclIcmp6RuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1)
)
aclIcmp6RuleEntry.setIndexNames(
    (0, "SWITCH", "aclIcmp6GroupIndex"),
    (0, "SWITCH", "aclIcmp6RuleIndex"),
)
if mibBuilder.loadTexts:
    aclIcmp6RuleEntry.setStatus("current")


class _AclIcmp6GroupIndex_Type(Integer32):
    """Custom type aclIcmp6GroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(40001, 60000),
    )


_AclIcmp6GroupIndex_Type.__name__ = "Integer32"
_AclIcmp6GroupIndex_Object = MibTableColumn
aclIcmp6GroupIndex = _AclIcmp6GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 1),
    _AclIcmp6GroupIndex_Type()
)
aclIcmp6GroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIcmp6GroupIndex.setStatus("current")


class _AclIcmp6RuleIndex_Type(Integer32):
    """Custom type aclIcmp6RuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_AclIcmp6RuleIndex_Type.__name__ = "Integer32"
_AclIcmp6RuleIndex_Object = MibTableColumn
aclIcmp6RuleIndex = _AclIcmp6RuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 2),
    _AclIcmp6RuleIndex_Type()
)
aclIcmp6RuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aclIcmp6RuleIndex.setStatus("current")
_AclIcmp6Act_Type = RuleAction
_AclIcmp6Act_Object = MibTableColumn
aclIcmp6Act = _AclIcmp6Act_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 3),
    _AclIcmp6Act_Type()
)
aclIcmp6Act.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Act.setStatus("current")


class _AclIcmp6SrcIpv6_Type(OctetString):
    """Custom type aclIcmp6SrcIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclIcmp6SrcIpv6_Type.__name__ = "OctetString"
_AclIcmp6SrcIpv6_Object = MibTableColumn
aclIcmp6SrcIpv6 = _AclIcmp6SrcIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 4),
    _AclIcmp6SrcIpv6_Type()
)
aclIcmp6SrcIpv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aclIcmp6SrcIpv6.setStatus("current")


class _AclIcmp6SrcPrefixLen_Type(Integer32):
    """Custom type aclIcmp6SrcPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclIcmp6SrcPrefixLen_Type.__name__ = "Integer32"
_AclIcmp6SrcPrefixLen_Object = MibTableColumn
aclIcmp6SrcPrefixLen = _AclIcmp6SrcPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 5),
    _AclIcmp6SrcPrefixLen_Type()
)
aclIcmp6SrcPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6SrcPrefixLen.setStatus("current")


class _AclIcmp6DestIpv6_Type(OctetString):
    """Custom type aclIcmp6DestIpv6 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_AclIcmp6DestIpv6_Type.__name__ = "OctetString"
_AclIcmp6DestIpv6_Object = MibTableColumn
aclIcmp6DestIpv6 = _AclIcmp6DestIpv6_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 6),
    _AclIcmp6DestIpv6_Type()
)
aclIcmp6DestIpv6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6DestIpv6.setStatus("current")


class _AclIcmp6DestPrefixLen_Type(Integer32):
    """Custom type aclIcmp6DestPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_AclIcmp6DestPrefixLen_Type.__name__ = "Integer32"
_AclIcmp6DestPrefixLen_Object = MibTableColumn
aclIcmp6DestPrefixLen = _AclIcmp6DestPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 7),
    _AclIcmp6DestPrefixLen_Type()
)
aclIcmp6DestPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6DestPrefixLen.setStatus("current")


class _AclIcmp6FlowLabel_Type(Integer32):
    """Custom type aclIcmp6FlowLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1048576),
    )


_AclIcmp6FlowLabel_Type.__name__ = "Integer32"
_AclIcmp6FlowLabel_Object = MibTableColumn
aclIcmp6FlowLabel = _AclIcmp6FlowLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 8),
    _AclIcmp6FlowLabel_Type()
)
aclIcmp6FlowLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6FlowLabel.setStatus("current")
_AclIcmp6Dscp_Type = DSCPValue
_AclIcmp6Dscp_Object = MibTableColumn
aclIcmp6Dscp = _AclIcmp6Dscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 9),
    _AclIcmp6Dscp_Type()
)
aclIcmp6Dscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Dscp.setStatus("current")
_AclIcmp6Fragments_Type = TruthValue
_AclIcmp6Fragments_Object = MibTableColumn
aclIcmp6Fragments = _AclIcmp6Fragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 10),
    _AclIcmp6Fragments_Type()
)
aclIcmp6Fragments.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Fragments.setStatus("current")
_AclIcmp6Routed_Type = TruthValue
_AclIcmp6Routed_Object = MibTableColumn
aclIcmp6Routed = _AclIcmp6Routed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 11),
    _AclIcmp6Routed_Type()
)
aclIcmp6Routed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Routed.setStatus("current")
_AclIcmp6Options_Type = TruthValue
_AclIcmp6Options_Object = MibTableColumn
aclIcmp6Options = _AclIcmp6Options_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 12),
    _AclIcmp6Options_Type()
)
aclIcmp6Options.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Options.setStatus("obsolete")


class _AclIcmp6Type_Type(Integer32):
    """Custom type aclIcmp6Type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIcmp6Type_Type.__name__ = "Integer32"
_AclIcmp6Type_Object = MibTableColumn
aclIcmp6Type = _AclIcmp6Type_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 13),
    _AclIcmp6Type_Type()
)
aclIcmp6Type.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Type.setStatus("current")


class _AclIcmp6Code_Type(Integer32):
    """Custom type aclIcmp6Code based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_AclIcmp6Code_Type.__name__ = "Integer32"
_AclIcmp6Code_Object = MibTableColumn
aclIcmp6Code = _AclIcmp6Code_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 14),
    _AclIcmp6Code_Type()
)
aclIcmp6Code.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6Code.setStatus("current")


class _AclIcmp6TimeRangeName_Type(OctetString):
    """Custom type aclIcmp6TimeRangeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_AclIcmp6TimeRangeName_Type.__name__ = "OctetString"
_AclIcmp6TimeRangeName_Object = MibTableColumn
aclIcmp6TimeRangeName = _AclIcmp6TimeRangeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 15),
    _AclIcmp6TimeRangeName_Type()
)
aclIcmp6TimeRangeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6TimeRangeName.setStatus("current")
_AclIcmp6RowStatus_Type = RowStatus
_AclIcmp6RowStatus_Object = MibTableColumn
aclIcmp6RowStatus = _AclIcmp6RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 7, 1, 13, 1, 17),
    _AclIcmp6RowStatus_Type()
)
aclIcmp6RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    aclIcmp6RowStatus.setStatus("current")
_Qos_ObjectIdentity = ObjectIdentity
qos = _Qos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8)
)
_GlobalQos_ObjectIdentity = ObjectIdentity
globalQos = _GlobalQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1)
)


class _GlobalQosEnable_Type(Integer32):
    """Custom type globalQosEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_GlobalQosEnable_Type.__name__ = "Integer32"
_GlobalQosEnable_Object = MibScalar
globalQosEnable = _GlobalQosEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 1),
    _GlobalQosEnable_Type()
)
globalQosEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosEnable.setStatus("current")


class _GlobalQosFlowFirst_Type(Integer32):
    """Custom type globalQosFlowFirst based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_GlobalQosFlowFirst_Type.__name__ = "Integer32"
_GlobalQosFlowFirst_Object = MibScalar
globalQosFlowFirst = _GlobalQosFlowFirst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 2),
    _GlobalQosFlowFirst_Type()
)
globalQosFlowFirst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosFlowFirst.setStatus("current")
_GlobalQosResetMapObjects_ObjectIdentity = ObjectIdentity
globalQosResetMapObjects = _GlobalQosResetMapObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3)
)
_GlobalQosResetDomainMapTable_Object = MibTable
globalQosResetDomainMapTable = _GlobalQosResetDomainMapTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3, 1)
)
if mibBuilder.loadTexts:
    globalQosResetDomainMapTable.setStatus("current")
_GlobalQosResetDomainMapEntry_Object = MibTableRow
globalQosResetDomainMapEntry = _GlobalQosResetDomainMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3, 1, 1)
)
globalQosResetDomainMapEntry.setIndexNames(
    (0, "SWITCH", "globalQosResetDomainMapDomain"),
)
if mibBuilder.loadTexts:
    globalQosResetDomainMapEntry.setStatus("current")


class _GlobalQosResetDomainMapDomain_Type(Integer32):
    """Custom type globalQosResetDomainMapDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosResetDomainMapDomain_Type.__name__ = "Integer32"
_GlobalQosResetDomainMapDomain_Object = MibTableColumn
globalQosResetDomainMapDomain = _GlobalQosResetDomainMapDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3, 1, 1, 1),
    _GlobalQosResetDomainMapDomain_Type()
)
globalQosResetDomainMapDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosResetDomainMapDomain.setStatus("current")


class _GlobalQosResetDomainMapType_Type(Integer32):
    """Custom type globalQosResetDomainMapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("cosPriColor", 1),
          ("dscpPriColor", 2),
          ("expPriColor", 3),
          ("ipPrecPriColor", 4),
          ("priColorCos", 5),
          ("priColorDscp", 6),
          ("priColorExp", 7))
    )


_GlobalQosResetDomainMapType_Type.__name__ = "Integer32"
_GlobalQosResetDomainMapType_Object = MibTableColumn
globalQosResetDomainMapType = _GlobalQosResetDomainMapType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3, 1, 1, 2),
    _GlobalQosResetDomainMapType_Type()
)
globalQosResetDomainMapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosResetDomainMapType.setStatus("current")


class _GlobalQosResetPriColorQidTid_Type(Integer32):
    """Custom type globalQosResetPriColorQidTid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_GlobalQosResetPriColorQidTid_Type.__name__ = "Integer32"
_GlobalQosResetPriColorQidTid_Object = MibScalar
globalQosResetPriColorQidTid = _GlobalQosResetPriColorQidTid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 3, 2),
    _GlobalQosResetPriColorQidTid_Type()
)
globalQosResetPriColorQidTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosResetPriColorQidTid.setStatus("current")
_GlobalQosMapObjects_ObjectIdentity = ObjectIdentity
globalQosMapObjects = _GlobalQosMapObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4)
)
_GlobalQosMapIngressTable_Object = MibTable
globalQosMapIngressTable = _GlobalQosMapIngressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1)
)
if mibBuilder.loadTexts:
    globalQosMapIngressTable.setStatus("current")
_GlobalQosMapIngressEntry_Object = MibTableRow
globalQosMapIngressEntry = _GlobalQosMapIngressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1)
)
globalQosMapIngressEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapIngressType"),
    (0, "SWITCH", "globalQosMapIngressDomain"),
    (0, "SWITCH", "globalQosMapIngressValue"),
)
if mibBuilder.loadTexts:
    globalQosMapIngressEntry.setStatus("current")
_GlobalQosMapIngressType_Type = PriMapType
_GlobalQosMapIngressType_Object = MibTableColumn
globalQosMapIngressType = _GlobalQosMapIngressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1, 1),
    _GlobalQosMapIngressType_Type()
)
globalQosMapIngressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressType.setStatus("current")


class _GlobalQosMapIngressDomain_Type(Integer32):
    """Custom type globalQosMapIngressDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosMapIngressDomain_Type.__name__ = "Integer32"
_GlobalQosMapIngressDomain_Object = MibTableColumn
globalQosMapIngressDomain = _GlobalQosMapIngressDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1, 2),
    _GlobalQosMapIngressDomain_Type()
)
globalQosMapIngressDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressDomain.setStatus("current")


class _GlobalQosMapIngressValue_Type(Integer32):
    """Custom type globalQosMapIngressValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_GlobalQosMapIngressValue_Type.__name__ = "Integer32"
_GlobalQosMapIngressValue_Object = MibTableColumn
globalQosMapIngressValue = _GlobalQosMapIngressValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1, 3),
    _GlobalQosMapIngressValue_Type()
)
globalQosMapIngressValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressValue.setStatus("current")


class _GlobalQosMapIngressToPriority_Type(Integer32):
    """Custom type globalQosMapIngressToPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapIngressToPriority_Type.__name__ = "Integer32"
_GlobalQosMapIngressToPriority_Object = MibTableColumn
globalQosMapIngressToPriority = _GlobalQosMapIngressToPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1, 4),
    _GlobalQosMapIngressToPriority_Type()
)
globalQosMapIngressToPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosMapIngressToPriority.setStatus("current")
_GlobalQosMapIngressToColor_Type = ColorType
_GlobalQosMapIngressToColor_Object = MibTableColumn
globalQosMapIngressToColor = _GlobalQosMapIngressToColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 1, 1, 5),
    _GlobalQosMapIngressToColor_Type()
)
globalQosMapIngressToColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosMapIngressToColor.setStatus("current")
_GlobalQosMapEgressTable_Object = MibTable
globalQosMapEgressTable = _GlobalQosMapEgressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2)
)
if mibBuilder.loadTexts:
    globalQosMapEgressTable.setStatus("current")
_GlobalQosMapEgressEntry_Object = MibTableRow
globalQosMapEgressEntry = _GlobalQosMapEgressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1)
)
globalQosMapEgressEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapEgressType"),
    (0, "SWITCH", "globalQosMapEgressDomain"),
    (0, "SWITCH", "globalQosMapEgressPriority"),
    (0, "SWITCH", "globalQosMapEgressColor"),
)
if mibBuilder.loadTexts:
    globalQosMapEgressEntry.setStatus("current")
_GlobalQosMapEgressType_Type = PriMapType
_GlobalQosMapEgressType_Object = MibTableColumn
globalQosMapEgressType = _GlobalQosMapEgressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1, 1),
    _GlobalQosMapEgressType_Type()
)
globalQosMapEgressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressType.setStatus("current")


class _GlobalQosMapEgressDomain_Type(Integer32):
    """Custom type globalQosMapEgressDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosMapEgressDomain_Type.__name__ = "Integer32"
_GlobalQosMapEgressDomain_Object = MibTableColumn
globalQosMapEgressDomain = _GlobalQosMapEgressDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1, 2),
    _GlobalQosMapEgressDomain_Type()
)
globalQosMapEgressDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressDomain.setStatus("current")


class _GlobalQosMapEgressPriority_Type(Integer32):
    """Custom type globalQosMapEgressPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapEgressPriority_Type.__name__ = "Integer32"
_GlobalQosMapEgressPriority_Object = MibTableColumn
globalQosMapEgressPriority = _GlobalQosMapEgressPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1, 3),
    _GlobalQosMapEgressPriority_Type()
)
globalQosMapEgressPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressPriority.setStatus("current")
_GlobalQosMapEgressColor_Type = ColorType
_GlobalQosMapEgressColor_Object = MibTableColumn
globalQosMapEgressColor = _GlobalQosMapEgressColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1, 4),
    _GlobalQosMapEgressColor_Type()
)
globalQosMapEgressColor.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressColor.setStatus("current")
_GlobalQosMapEgressValue_Type = Integer32
_GlobalQosMapEgressValue_Object = MibTableColumn
globalQosMapEgressValue = _GlobalQosMapEgressValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 2, 1, 5),
    _GlobalQosMapEgressValue_Type()
)
globalQosMapEgressValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosMapEgressValue.setStatus("current")
_GlobalQosMapPriColorQidTidTable_Object = MibTable
globalQosMapPriColorQidTidTable = _GlobalQosMapPriColorQidTidTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3)
)
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidTable.setStatus("current")
_GlobalQosMapPriColorQidTidEntry_Object = MibTableRow
globalQosMapPriColorQidTidEntry = _GlobalQosMapPriColorQidTidEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3, 1)
)
globalQosMapPriColorQidTidEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapPriColorQidTidPriority"),
    (0, "SWITCH", "globalQosMapPriColorQidTidColor"),
)
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidEntry.setStatus("current")


class _GlobalQosMapPriColorQidTidPriority_Type(Integer32):
    """Custom type globalQosMapPriColorQidTidPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapPriColorQidTidPriority_Type.__name__ = "Integer32"
_GlobalQosMapPriColorQidTidPriority_Object = MibTableColumn
globalQosMapPriColorQidTidPriority = _GlobalQosMapPriColorQidTidPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3, 1, 1),
    _GlobalQosMapPriColorQidTidPriority_Type()
)
globalQosMapPriColorQidTidPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidPriority.setStatus("current")
_GlobalQosMapPriColorQidTidColor_Type = ColorType
_GlobalQosMapPriColorQidTidColor_Object = MibTableColumn
globalQosMapPriColorQidTidColor = _GlobalQosMapPriColorQidTidColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3, 1, 2),
    _GlobalQosMapPriColorQidTidColor_Type()
)
globalQosMapPriColorQidTidColor.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidColor.setStatus("current")
_GlobalQosMapPriColorQidTidQueueId_Type = IfQueueId
_GlobalQosMapPriColorQidTidQueueId_Object = MibTableColumn
globalQosMapPriColorQidTidQueueId = _GlobalQosMapPriColorQidTidQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3, 1, 3),
    _GlobalQosMapPriColorQidTidQueueId_Type()
)
globalQosMapPriColorQidTidQueueId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidQueueId.setStatus("current")


class _GlobalQosMapPriColorQidTidThresholdId_Type(Integer32):
    """Custom type globalQosMapPriColorQidTidThresholdId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_GlobalQosMapPriColorQidTidThresholdId_Type.__name__ = "Integer32"
_GlobalQosMapPriColorQidTidThresholdId_Object = MibTableColumn
globalQosMapPriColorQidTidThresholdId = _GlobalQosMapPriColorQidTidThresholdId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 3, 1, 4),
    _GlobalQosMapPriColorQidTidThresholdId_Type()
)
globalQosMapPriColorQidTidThresholdId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidThresholdId.setStatus("current")
_GlobalQosMapIngressDefaultTable_Object = MibTable
globalQosMapIngressDefaultTable = _GlobalQosMapIngressDefaultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4)
)
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultTable.setStatus("current")
_GlobalQosMapIngressDefaultEntry_Object = MibTableRow
globalQosMapIngressDefaultEntry = _GlobalQosMapIngressDefaultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1)
)
globalQosMapIngressDefaultEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapIngressDefaultType"),
    (0, "SWITCH", "globalQosMapIngressDefaultDomain"),
    (0, "SWITCH", "globalQosMapIngressDefaultValue"),
)
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultEntry.setStatus("current")
_GlobalQosMapIngressDefaultType_Type = PriMapType
_GlobalQosMapIngressDefaultType_Object = MibTableColumn
globalQosMapIngressDefaultType = _GlobalQosMapIngressDefaultType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1, 1),
    _GlobalQosMapIngressDefaultType_Type()
)
globalQosMapIngressDefaultType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultType.setStatus("current")


class _GlobalQosMapIngressDefaultDomain_Type(Integer32):
    """Custom type globalQosMapIngressDefaultDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosMapIngressDefaultDomain_Type.__name__ = "Integer32"
_GlobalQosMapIngressDefaultDomain_Object = MibTableColumn
globalQosMapIngressDefaultDomain = _GlobalQosMapIngressDefaultDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1, 2),
    _GlobalQosMapIngressDefaultDomain_Type()
)
globalQosMapIngressDefaultDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultDomain.setStatus("current")


class _GlobalQosMapIngressDefaultValue_Type(Integer32):
    """Custom type globalQosMapIngressDefaultValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_GlobalQosMapIngressDefaultValue_Type.__name__ = "Integer32"
_GlobalQosMapIngressDefaultValue_Object = MibTableColumn
globalQosMapIngressDefaultValue = _GlobalQosMapIngressDefaultValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1, 3),
    _GlobalQosMapIngressDefaultValue_Type()
)
globalQosMapIngressDefaultValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultValue.setStatus("current")


class _GlobalQosMapIngressDefaultToPriority_Type(Integer32):
    """Custom type globalQosMapIngressDefaultToPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapIngressDefaultToPriority_Type.__name__ = "Integer32"
_GlobalQosMapIngressDefaultToPriority_Object = MibTableColumn
globalQosMapIngressDefaultToPriority = _GlobalQosMapIngressDefaultToPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1, 4),
    _GlobalQosMapIngressDefaultToPriority_Type()
)
globalQosMapIngressDefaultToPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultToPriority.setStatus("current")
_GlobalQosMapIngressDefaultToColor_Type = ColorType
_GlobalQosMapIngressDefaultToColor_Object = MibTableColumn
globalQosMapIngressDefaultToColor = _GlobalQosMapIngressDefaultToColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 4, 1, 5),
    _GlobalQosMapIngressDefaultToColor_Type()
)
globalQosMapIngressDefaultToColor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalQosMapIngressDefaultToColor.setStatus("current")
_GlobalQosMapEgressDefaultTable_Object = MibTable
globalQosMapEgressDefaultTable = _GlobalQosMapEgressDefaultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5)
)
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultTable.setStatus("current")
_GlobalQosMapEgressDefaultEntry_Object = MibTableRow
globalQosMapEgressDefaultEntry = _GlobalQosMapEgressDefaultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1)
)
globalQosMapEgressDefaultEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapEgressDefaultType"),
    (0, "SWITCH", "globalQosMapEgressDefaultDomain"),
    (0, "SWITCH", "globalQosMapEgressDefaultPriority"),
    (0, "SWITCH", "globalQosMapEgressDefaultColor"),
)
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultEntry.setStatus("current")
_GlobalQosMapEgressDefaultType_Type = PriMapType
_GlobalQosMapEgressDefaultType_Object = MibTableColumn
globalQosMapEgressDefaultType = _GlobalQosMapEgressDefaultType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1, 1),
    _GlobalQosMapEgressDefaultType_Type()
)
globalQosMapEgressDefaultType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultType.setStatus("current")


class _GlobalQosMapEgressDefaultDomain_Type(Integer32):
    """Custom type globalQosMapEgressDefaultDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosMapEgressDefaultDomain_Type.__name__ = "Integer32"
_GlobalQosMapEgressDefaultDomain_Object = MibTableColumn
globalQosMapEgressDefaultDomain = _GlobalQosMapEgressDefaultDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1, 2),
    _GlobalQosMapEgressDefaultDomain_Type()
)
globalQosMapEgressDefaultDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultDomain.setStatus("current")


class _GlobalQosMapEgressDefaultPriority_Type(Integer32):
    """Custom type globalQosMapEgressDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapEgressDefaultPriority_Type.__name__ = "Integer32"
_GlobalQosMapEgressDefaultPriority_Object = MibTableColumn
globalQosMapEgressDefaultPriority = _GlobalQosMapEgressDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1, 3),
    _GlobalQosMapEgressDefaultPriority_Type()
)
globalQosMapEgressDefaultPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultPriority.setStatus("current")
_GlobalQosMapEgressDefaultColor_Type = ColorType
_GlobalQosMapEgressDefaultColor_Object = MibTableColumn
globalQosMapEgressDefaultColor = _GlobalQosMapEgressDefaultColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1, 4),
    _GlobalQosMapEgressDefaultColor_Type()
)
globalQosMapEgressDefaultColor.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultColor.setStatus("current")
_GlobalQosMapEgressDefaultValue_Type = Integer32
_GlobalQosMapEgressDefaultValue_Object = MibTableColumn
globalQosMapEgressDefaultValue = _GlobalQosMapEgressDefaultValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 5, 1, 5),
    _GlobalQosMapEgressDefaultValue_Type()
)
globalQosMapEgressDefaultValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalQosMapEgressDefaultValue.setStatus("current")
_GlobalQosMapPriColorQidTidDefaultTable_Object = MibTable
globalQosMapPriColorQidTidDefaultTable = _GlobalQosMapPriColorQidTidDefaultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6)
)
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultTable.setStatus("current")
_GlobalQosMapPriColorQidTidDefaultEntry_Object = MibTableRow
globalQosMapPriColorQidTidDefaultEntry = _GlobalQosMapPriColorQidTidDefaultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6, 1)
)
globalQosMapPriColorQidTidDefaultEntry.setIndexNames(
    (0, "SWITCH", "globalQosMapPriColorQidTidDefaultPriority"),
    (0, "SWITCH", "globalQosMapPriColorQidTidDefaultColor"),
)
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultEntry.setStatus("current")


class _GlobalQosMapPriColorQidTidDefaultPriority_Type(Integer32):
    """Custom type globalQosMapPriColorQidTidDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_GlobalQosMapPriColorQidTidDefaultPriority_Type.__name__ = "Integer32"
_GlobalQosMapPriColorQidTidDefaultPriority_Object = MibTableColumn
globalQosMapPriColorQidTidDefaultPriority = _GlobalQosMapPriColorQidTidDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6, 1, 1),
    _GlobalQosMapPriColorQidTidDefaultPriority_Type()
)
globalQosMapPriColorQidTidDefaultPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultPriority.setStatus("current")
_GlobalQosMapPriColorQidTidDefaultColor_Type = ColorType
_GlobalQosMapPriColorQidTidDefaultColor_Object = MibTableColumn
globalQosMapPriColorQidTidDefaultColor = _GlobalQosMapPriColorQidTidDefaultColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6, 1, 2),
    _GlobalQosMapPriColorQidTidDefaultColor_Type()
)
globalQosMapPriColorQidTidDefaultColor.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultColor.setStatus("current")
_GlobalQosMapPriColorQidTidDefaultQueueId_Type = IfQueueId
_GlobalQosMapPriColorQidTidDefaultQueueId_Object = MibTableColumn
globalQosMapPriColorQidTidDefaultQueueId = _GlobalQosMapPriColorQidTidDefaultQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6, 1, 3),
    _GlobalQosMapPriColorQidTidDefaultQueueId_Type()
)
globalQosMapPriColorQidTidDefaultQueueId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultQueueId.setStatus("current")
_GlobalQosMapPriColorQidTidDefaultThresholdId_Type = Integer32
_GlobalQosMapPriColorQidTidDefaultThresholdId_Object = MibTableColumn
globalQosMapPriColorQidTidDefaultThresholdId = _GlobalQosMapPriColorQidTidDefaultThresholdId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 4, 6, 1, 4),
    _GlobalQosMapPriColorQidTidDefaultThresholdId_Type()
)
globalQosMapPriColorQidTidDefaultThresholdId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    globalQosMapPriColorQidTidDefaultThresholdId.setStatus("current")
_GlobalQosCfiTable_Object = MibTable
globalQosCfiTable = _GlobalQosCfiTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 5)
)
if mibBuilder.loadTexts:
    globalQosCfiTable.setStatus("current")
_GlobalQosCfiEntry_Object = MibTableRow
globalQosCfiEntry = _GlobalQosCfiEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 5, 1)
)
globalQosCfiEntry.setIndexNames(
    (0, "SWITCH", "globalQosCfiDomain"),
)
if mibBuilder.loadTexts:
    globalQosCfiEntry.setStatus("current")


class _GlobalQosCfiDomain_Type(Integer32):
    """Custom type globalQosCfiDomain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_GlobalQosCfiDomain_Type.__name__ = "Integer32"
_GlobalQosCfiDomain_Object = MibTableColumn
globalQosCfiDomain = _GlobalQosCfiDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 5, 1, 1),
    _GlobalQosCfiDomain_Type()
)
globalQosCfiDomain.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    globalQosCfiDomain.setStatus("current")
_GlobalQosCfiEnable_Type = TruthValue
_GlobalQosCfiEnable_Object = MibTableColumn
globalQosCfiEnable = _GlobalQosCfiEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 1, 5, 1, 2),
    _GlobalQosCfiEnable_Type()
)
globalQosCfiEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    globalQosCfiEnable.setStatus("current")
_IfQos_ObjectIdentity = ObjectIdentity
ifQos = _IfQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2)
)
_IfQosShapeObjects_ObjectIdentity = ObjectIdentity
ifQosShapeObjects = _IfQosShapeObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1)
)
_IfQosShapeIfCfgTable_Object = MibTable
ifQosShapeIfCfgTable = _IfQosShapeIfCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1)
)
if mibBuilder.loadTexts:
    ifQosShapeIfCfgTable.setStatus("current")
_IfQosShapeIfCfgEntry_Object = MibTableRow
ifQosShapeIfCfgEntry = _IfQosShapeIfCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1, 1)
)
ifQosShapeIfCfgEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifQosShapeIfCfgEntry.setStatus("current")


class _IfQosShapeIfCfgType_Type(Integer32):
    """Custom type ifQosShapeIfCfgType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("percent", 1),
          ("rate", 2))
    )


_IfQosShapeIfCfgType_Type.__name__ = "Integer32"
_IfQosShapeIfCfgType_Object = MibTableColumn
ifQosShapeIfCfgType = _IfQosShapeIfCfgType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1, 1, 1),
    _IfQosShapeIfCfgType_Type()
)
ifQosShapeIfCfgType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeIfCfgType.setStatus("current")


class _IfQosShapeIfCfgPercent_Type(Integer32):
    """Custom type ifQosShapeIfCfgPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_IfQosShapeIfCfgPercent_Type.__name__ = "Integer32"
_IfQosShapeIfCfgPercent_Object = MibTableColumn
ifQosShapeIfCfgPercent = _IfQosShapeIfCfgPercent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1, 1, 2),
    _IfQosShapeIfCfgPercent_Type()
)
ifQosShapeIfCfgPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeIfCfgPercent.setStatus("current")


class _IfQosShapeIfCfgRate_Type(Integer32):
    """Custom type ifQosShapeIfCfgRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_IfQosShapeIfCfgRate_Type.__name__ = "Integer32"
_IfQosShapeIfCfgRate_Object = MibTableColumn
ifQosShapeIfCfgRate = _IfQosShapeIfCfgRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1, 1, 3),
    _IfQosShapeIfCfgRate_Type()
)
ifQosShapeIfCfgRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeIfCfgRate.setStatus("current")
_IfQosShapeIfCfgRowStatus_Type = RowStatus
_IfQosShapeIfCfgRowStatus_Object = MibTableColumn
ifQosShapeIfCfgRowStatus = _IfQosShapeIfCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 1, 1, 4),
    _IfQosShapeIfCfgRowStatus_Type()
)
ifQosShapeIfCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeIfCfgRowStatus.setStatus("current")
_IfQosShapeQueueCfgTable_Object = MibTable
ifQosShapeQueueCfgTable = _IfQosShapeQueueCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2)
)
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgTable.setStatus("current")
_IfQosShapeQueueCfgEntry_Object = MibTableRow
ifQosShapeQueueCfgEntry = _IfQosShapeQueueCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1)
)
ifQosShapeQueueCfgEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "ifQosShapeQueueCfgQueueId"),
)
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgEntry.setStatus("current")
_IfQosShapeQueueCfgQueueId_Type = IfQueueId
_IfQosShapeQueueCfgQueueId_Object = MibTableColumn
ifQosShapeQueueCfgQueueId = _IfQosShapeQueueCfgQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 1),
    _IfQosShapeQueueCfgQueueId_Type()
)
ifQosShapeQueueCfgQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgQueueId.setStatus("current")


class _IfQosShapeQueueCfgType_Type(Integer32):
    """Custom type ifQosShapeQueueCfgType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("percent", 1),
          ("rate", 2))
    )


_IfQosShapeQueueCfgType_Type.__name__ = "Integer32"
_IfQosShapeQueueCfgType_Object = MibTableColumn
ifQosShapeQueueCfgType = _IfQosShapeQueueCfgType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 2),
    _IfQosShapeQueueCfgType_Type()
)
ifQosShapeQueueCfgType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgType.setStatus("current")


class _IfQosShapeQueueCfgPercent_Type(Integer32):
    """Custom type ifQosShapeQueueCfgPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_IfQosShapeQueueCfgPercent_Type.__name__ = "Integer32"
_IfQosShapeQueueCfgPercent_Object = MibTableColumn
ifQosShapeQueueCfgPercent = _IfQosShapeQueueCfgPercent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 3),
    _IfQosShapeQueueCfgPercent_Type()
)
ifQosShapeQueueCfgPercent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgPercent.setStatus("current")


class _IfQosShapeQueueCfgPercentPeak_Type(Integer32):
    """Custom type ifQosShapeQueueCfgPercentPeak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_IfQosShapeQueueCfgPercentPeak_Type.__name__ = "Integer32"
_IfQosShapeQueueCfgPercentPeak_Object = MibTableColumn
ifQosShapeQueueCfgPercentPeak = _IfQosShapeQueueCfgPercentPeak_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 4),
    _IfQosShapeQueueCfgPercentPeak_Type()
)
ifQosShapeQueueCfgPercentPeak.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgPercentPeak.setStatus("current")


class _IfQosShapeQueueCfgRate_Type(Integer32):
    """Custom type ifQosShapeQueueCfgRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_IfQosShapeQueueCfgRate_Type.__name__ = "Integer32"
_IfQosShapeQueueCfgRate_Object = MibTableColumn
ifQosShapeQueueCfgRate = _IfQosShapeQueueCfgRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 5),
    _IfQosShapeQueueCfgRate_Type()
)
ifQosShapeQueueCfgRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgRate.setStatus("current")


class _IfQosShapeQueueCfgRatePeak_Type(Integer32):
    """Custom type ifQosShapeQueueCfgRatePeak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_IfQosShapeQueueCfgRatePeak_Type.__name__ = "Integer32"
_IfQosShapeQueueCfgRatePeak_Object = MibTableColumn
ifQosShapeQueueCfgRatePeak = _IfQosShapeQueueCfgRatePeak_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 6),
    _IfQosShapeQueueCfgRatePeak_Type()
)
ifQosShapeQueueCfgRatePeak.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgRatePeak.setStatus("current")
_IfQosShapeQueueCfgRowStatus_Type = RowStatus
_IfQosShapeQueueCfgRowStatus_Object = MibTableColumn
ifQosShapeQueueCfgRowStatus = _IfQosShapeQueueCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 1, 2, 1, 7),
    _IfQosShapeQueueCfgRowStatus_Type()
)
ifQosShapeQueueCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosShapeQueueCfgRowStatus.setStatus("current")
_IfQosQueueObjects_ObjectIdentity = ObjectIdentity
ifQosQueueObjects = _IfQosQueueObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2)
)
_IfQosQueueClassDrrWeightTable_Object = MibTable
ifQosQueueClassDrrWeightTable = _IfQosQueueClassDrrWeightTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 1)
)
if mibBuilder.loadTexts:
    ifQosQueueClassDrrWeightTable.setStatus("current")
_IfQosQueueClassDrrWeightEntry_Object = MibTableRow
ifQosQueueClassDrrWeightEntry = _IfQosQueueClassDrrWeightEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 1, 1)
)
ifQosQueueClassDrrWeightEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "ifQosQueueClassDrrWeightQueueId"),
)
if mibBuilder.loadTexts:
    ifQosQueueClassDrrWeightEntry.setStatus("current")
_IfQosQueueClassDrrWeightQueueId_Type = IfQueueId
_IfQosQueueClassDrrWeightQueueId_Object = MibTableColumn
ifQosQueueClassDrrWeightQueueId = _IfQosQueueClassDrrWeightQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 1, 1, 1),
    _IfQosQueueClassDrrWeightQueueId_Type()
)
ifQosQueueClassDrrWeightQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifQosQueueClassDrrWeightQueueId.setStatus("current")


class _IfQosQueueClass_Type(Integer32):
    """Custom type ifQosQueueClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 6),
    )


_IfQosQueueClass_Type.__name__ = "Integer32"
_IfQosQueueClass_Object = MibTableColumn
ifQosQueueClass = _IfQosQueueClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 1, 1, 2),
    _IfQosQueueClass_Type()
)
ifQosQueueClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueClass.setStatus("current")


class _IfQosQueueDrrWeight_Type(Integer32):
    """Custom type ifQosQueueDrrWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 100),
    )


_IfQosQueueDrrWeight_Type.__name__ = "Integer32"
_IfQosQueueDrrWeight_Object = MibTableColumn
ifQosQueueDrrWeight = _IfQosQueueDrrWeight_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 1, 1, 3),
    _IfQosQueueDrrWeight_Type()
)
ifQosQueueDrrWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueDrrWeight.setStatus("current")
_IfQosQueueManageCfgTable_Object = MibTable
ifQosQueueManageCfgTable = _IfQosQueueManageCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3)
)
if mibBuilder.loadTexts:
    ifQosQueueManageCfgTable.setStatus("current")
_IfQosQueueManageCfgEntry_Object = MibTableRow
ifQosQueueManageCfgEntry = _IfQosQueueManageCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1)
)
ifQosQueueManageCfgEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "ifQosQueueManageQueueId"),
)
if mibBuilder.loadTexts:
    ifQosQueueManageCfgEntry.setStatus("current")
_IfQosQueueManageQueueId_Type = IfQueueId
_IfQosQueueManageQueueId_Object = MibTableColumn
ifQosQueueManageQueueId = _IfQosQueueManageQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 1),
    _IfQosQueueManageQueueId_Type()
)
ifQosQueueManageQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifQosQueueManageQueueId.setStatus("current")


class _IfQosQueueManageDropType_Type(Integer32):
    """Custom type ifQosQueueManageDropType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 0),
    )


_IfQosQueueManageDropType_Type.__name__ = "Integer32"
_IfQosQueueManageDropType_Object = MibTableColumn
ifQosQueueManageDropType = _IfQosQueueManageDropType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 2),
    _IfQosQueueManageDropType_Type()
)
ifQosQueueManageDropType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageDropType.setStatus("current")


class _IfQosQueueManageThresholdPrecedence0_Type(Integer32):
    """Custom type ifQosQueueManageThresholdPrecedence0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 12884),
    )


_IfQosQueueManageThresholdPrecedence0_Type.__name__ = "Integer32"
_IfQosQueueManageThresholdPrecedence0_Object = MibTableColumn
ifQosQueueManageThresholdPrecedence0 = _IfQosQueueManageThresholdPrecedence0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 3),
    _IfQosQueueManageThresholdPrecedence0_Type()
)
ifQosQueueManageThresholdPrecedence0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageThresholdPrecedence0.setStatus("current")


class _IfQosQueueManageThresholdPrecedence1_Type(Integer32):
    """Custom type ifQosQueueManageThresholdPrecedence1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 12885),
    )


_IfQosQueueManageThresholdPrecedence1_Type.__name__ = "Integer32"
_IfQosQueueManageThresholdPrecedence1_Object = MibTableColumn
ifQosQueueManageThresholdPrecedence1 = _IfQosQueueManageThresholdPrecedence1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 4),
    _IfQosQueueManageThresholdPrecedence1_Type()
)
ifQosQueueManageThresholdPrecedence1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageThresholdPrecedence1.setStatus("current")


class _IfQosQueueManageThresholdPrecedence2_Type(Integer32):
    """Custom type ifQosQueueManageThresholdPrecedence2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(2, 12886),
    )


_IfQosQueueManageThresholdPrecedence2_Type.__name__ = "Integer32"
_IfQosQueueManageThresholdPrecedence2_Object = MibTableColumn
ifQosQueueManageThresholdPrecedence2 = _IfQosQueueManageThresholdPrecedence2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 5),
    _IfQosQueueManageThresholdPrecedence2_Type()
)
ifQosQueueManageThresholdPrecedence2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageThresholdPrecedence2.setStatus("current")


class _IfQosQueueManageMinThresholdPre0_Type(Integer32):
    """Custom type ifQosQueueManageMinThresholdPre0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 12886),
    )


_IfQosQueueManageMinThresholdPre0_Type.__name__ = "Integer32"
_IfQosQueueManageMinThresholdPre0_Object = MibTableColumn
ifQosQueueManageMinThresholdPre0 = _IfQosQueueManageMinThresholdPre0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 6),
    _IfQosQueueManageMinThresholdPre0_Type()
)
ifQosQueueManageMinThresholdPre0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMinThresholdPre0.setStatus("current")


class _IfQosQueueManageMinThresholdPre1_Type(Integer32):
    """Custom type ifQosQueueManageMinThresholdPre1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 12886),
    )


_IfQosQueueManageMinThresholdPre1_Type.__name__ = "Integer32"
_IfQosQueueManageMinThresholdPre1_Object = MibTableColumn
ifQosQueueManageMinThresholdPre1 = _IfQosQueueManageMinThresholdPre1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 7),
    _IfQosQueueManageMinThresholdPre1_Type()
)
ifQosQueueManageMinThresholdPre1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMinThresholdPre1.setStatus("current")


class _IfQosQueueManageMinThresholdPre2_Type(Integer32):
    """Custom type ifQosQueueManageMinThresholdPre2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 12886),
    )


_IfQosQueueManageMinThresholdPre2_Type.__name__ = "Integer32"
_IfQosQueueManageMinThresholdPre2_Object = MibTableColumn
ifQosQueueManageMinThresholdPre2 = _IfQosQueueManageMinThresholdPre2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 8),
    _IfQosQueueManageMinThresholdPre2_Type()
)
ifQosQueueManageMinThresholdPre2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMinThresholdPre2.setStatus("current")


class _IfQosQueueManageMaxThresholdPre0_Type(Integer32):
    """Custom type ifQosQueueManageMaxThresholdPre0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 12887),
    )


_IfQosQueueManageMaxThresholdPre0_Type.__name__ = "Integer32"
_IfQosQueueManageMaxThresholdPre0_Object = MibTableColumn
ifQosQueueManageMaxThresholdPre0 = _IfQosQueueManageMaxThresholdPre0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 9),
    _IfQosQueueManageMaxThresholdPre0_Type()
)
ifQosQueueManageMaxThresholdPre0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMaxThresholdPre0.setStatus("current")


class _IfQosQueueManageMaxThresholdPre1_Type(Integer32):
    """Custom type ifQosQueueManageMaxThresholdPre1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 12887),
    )


_IfQosQueueManageMaxThresholdPre1_Type.__name__ = "Integer32"
_IfQosQueueManageMaxThresholdPre1_Object = MibTableColumn
ifQosQueueManageMaxThresholdPre1 = _IfQosQueueManageMaxThresholdPre1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 10),
    _IfQosQueueManageMaxThresholdPre1_Type()
)
ifQosQueueManageMaxThresholdPre1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMaxThresholdPre1.setStatus("current")


class _IfQosQueueManageMaxThresholdPre2_Type(Integer32):
    """Custom type ifQosQueueManageMaxThresholdPre2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 12887),
    )


_IfQosQueueManageMaxThresholdPre2_Type.__name__ = "Integer32"
_IfQosQueueManageMaxThresholdPre2_Object = MibTableColumn
ifQosQueueManageMaxThresholdPre2 = _IfQosQueueManageMaxThresholdPre2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 11),
    _IfQosQueueManageMaxThresholdPre2_Type()
)
ifQosQueueManageMaxThresholdPre2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageMaxThresholdPre2.setStatus("current")


class _IfQosQueueManageDropProbabilityPre0_Type(Integer32):
    """Custom type ifQosQueueManageDropProbabilityPre0 based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 65535),
    )


_IfQosQueueManageDropProbabilityPre0_Type.__name__ = "Integer32"
_IfQosQueueManageDropProbabilityPre0_Object = MibTableColumn
ifQosQueueManageDropProbabilityPre0 = _IfQosQueueManageDropProbabilityPre0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 12),
    _IfQosQueueManageDropProbabilityPre0_Type()
)
ifQosQueueManageDropProbabilityPre0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageDropProbabilityPre0.setStatus("current")


class _IfQosQueueManageDropProbabilityPre1_Type(Integer32):
    """Custom type ifQosQueueManageDropProbabilityPre1 based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 65535),
    )


_IfQosQueueManageDropProbabilityPre1_Type.__name__ = "Integer32"
_IfQosQueueManageDropProbabilityPre1_Object = MibTableColumn
ifQosQueueManageDropProbabilityPre1 = _IfQosQueueManageDropProbabilityPre1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 13),
    _IfQosQueueManageDropProbabilityPre1_Type()
)
ifQosQueueManageDropProbabilityPre1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageDropProbabilityPre1.setStatus("current")


class _IfQosQueueManageDropProbabilityPre2_Type(Integer32):
    """Custom type ifQosQueueManageDropProbabilityPre2 based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 65535),
    )


_IfQosQueueManageDropProbabilityPre2_Type.__name__ = "Integer32"
_IfQosQueueManageDropProbabilityPre2_Object = MibTableColumn
ifQosQueueManageDropProbabilityPre2 = _IfQosQueueManageDropProbabilityPre2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 2, 3, 1, 14),
    _IfQosQueueManageDropProbabilityPre2_Type()
)
ifQosQueueManageDropProbabilityPre2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosQueueManageDropProbabilityPre2.setStatus("current")
_IfQosCarObjects_ObjectIdentity = ObjectIdentity
ifQosCarObjects = _IfQosCarObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3)
)
_IfQosCarApplyTable_Object = MibTable
ifQosCarApplyTable = _IfQosCarApplyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1)
)
if mibBuilder.loadTexts:
    ifQosCarApplyTable.setStatus("current")
_IfQosCarApplyEntry_Object = MibTableRow
ifQosCarApplyEntry = _IfQosCarApplyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1)
)
ifQosCarApplyEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "ifQosCarApplyDirection"),
)
if mibBuilder.loadTexts:
    ifQosCarApplyEntry.setStatus("current")


class _IfQosCarApplyDirection_Type(Integer32):
    """Custom type ifQosCarApplyDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("input", 1),
          ("output", 2))
    )


_IfQosCarApplyDirection_Type.__name__ = "Integer32"
_IfQosCarApplyDirection_Object = MibTableColumn
ifQosCarApplyDirection = _IfQosCarApplyDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 1),
    _IfQosCarApplyDirection_Type()
)
ifQosCarApplyDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifQosCarApplyDirection.setStatus("current")


class _IfQosCarApplyColorMode_Type(Integer32):
    """Custom type ifQosCarApplyColorMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("colorAware", 1),
          ("colorBlind", 2))
    )


_IfQosCarApplyColorMode_Type.__name__ = "Integer32"
_IfQosCarApplyColorMode_Object = MibTableColumn
ifQosCarApplyColorMode = _IfQosCarApplyColorMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 2),
    _IfQosCarApplyColorMode_Type()
)
ifQosCarApplyColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyColorMode.setStatus("current")


class _IfQosCarApplyCir_Type(Integer32):
    """Custom type ifQosCarApplyCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_IfQosCarApplyCir_Type.__name__ = "Integer32"
_IfQosCarApplyCir_Object = MibTableColumn
ifQosCarApplyCir = _IfQosCarApplyCir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 3),
    _IfQosCarApplyCir_Type()
)
ifQosCarApplyCir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyCir.setStatus("current")


class _IfQosCarApplyCbs_Type(Integer32):
    """Custom type ifQosCarApplyCbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_IfQosCarApplyCbs_Type.__name__ = "Integer32"
_IfQosCarApplyCbs_Object = MibTableColumn
ifQosCarApplyCbs = _IfQosCarApplyCbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 4),
    _IfQosCarApplyCbs_Type()
)
ifQosCarApplyCbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyCbs.setStatus("current")


class _IfQosCarApplyType_Type(Integer32):
    """Custom type ifQosCarApplyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("rfc2697", 1),
          ("rfc2698", 2),
          ("rfc4115", 3),
          ("bwp", 4))
    )


_IfQosCarApplyType_Type.__name__ = "Integer32"
_IfQosCarApplyType_Object = MibTableColumn
ifQosCarApplyType = _IfQosCarApplyType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 5),
    _IfQosCarApplyType_Type()
)
ifQosCarApplyType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyType.setStatus("current")


class _IfQosCarApplyPir_Type(Integer32):
    """Custom type ifQosCarApplyPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_IfQosCarApplyPir_Type.__name__ = "Integer32"
_IfQosCarApplyPir_Object = MibTableColumn
ifQosCarApplyPir = _IfQosCarApplyPir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 7),
    _IfQosCarApplyPir_Type()
)
ifQosCarApplyPir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyPir.setStatus("current")


class _IfQosCarApplyPbs_Type(Integer32):
    """Custom type ifQosCarApplyPbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_IfQosCarApplyPbs_Type.__name__ = "Integer32"
_IfQosCarApplyPbs_Object = MibTableColumn
ifQosCarApplyPbs = _IfQosCarApplyPbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 8),
    _IfQosCarApplyPbs_Type()
)
ifQosCarApplyPbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyPbs.setStatus("current")


class _IfQosCarApplyDropColor_Type(Integer32):
    """Custom type ifQosCarApplyDropColor based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("red", 1),
          ("yellow", 2))
    )


_IfQosCarApplyDropColor_Type.__name__ = "Integer32"
_IfQosCarApplyDropColor_Object = MibTableColumn
ifQosCarApplyDropColor = _IfQosCarApplyDropColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 9),
    _IfQosCarApplyDropColor_Type()
)
ifQosCarApplyDropColor.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyDropColor.setStatus("current")


class _IfQosCarApplyUseL3Length_Type(Integer32):
    """Custom type ifQosCarApplyUseL3Length based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_IfQosCarApplyUseL3Length_Type.__name__ = "Integer32"
_IfQosCarApplyUseL3Length_Object = MibTableColumn
ifQosCarApplyUseL3Length = _IfQosCarApplyUseL3Length_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 10),
    _IfQosCarApplyUseL3Length_Type()
)
ifQosCarApplyUseL3Length.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyUseL3Length.setStatus("current")
_IfQosCarApplyRowStatus_Type = RowStatus
_IfQosCarApplyRowStatus_Object = MibTableColumn
ifQosCarApplyRowStatus = _IfQosCarApplyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 3, 1, 1, 11),
    _IfQosCarApplyRowStatus_Type()
)
ifQosCarApplyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifQosCarApplyRowStatus.setStatus("current")
_IfQosPriObjects_ObjectIdentity = ObjectIdentity
ifQosPriObjects = _IfQosPriObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4)
)
_IfQosCosTable_Object = MibTable
ifQosCosTable = _IfQosCosTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 1)
)
if mibBuilder.loadTexts:
    ifQosCosTable.setStatus("current")
_IfQosCosEntry_Object = MibTableRow
ifQosCosEntry = _IfQosCosEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 1, 1)
)
ifQosCosEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifQosCosEntry.setStatus("current")


class _IfQosCosValue_Type(Integer32):
    """Custom type ifQosCosValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_IfQosCosValue_Type.__name__ = "Integer32"
_IfQosCosValue_Object = MibTableColumn
ifQosCosValue = _IfQosCosValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 1, 1, 1),
    _IfQosCosValue_Type()
)
ifQosCosValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosCosValue.setStatus("current")
_IfQosTrustTypeTable_Object = MibTable
ifQosTrustTypeTable = _IfQosTrustTypeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 2)
)
if mibBuilder.loadTexts:
    ifQosTrustTypeTable.setStatus("current")
_IfQosTrustTypeEntry_Object = MibTableRow
ifQosTrustTypeEntry = _IfQosTrustTypeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 2, 1)
)
ifQosTrustTypeEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifQosTrustTypeEntry.setStatus("current")


class _IfQosTrustTypeValue_Type(Integer32):
    """Custom type ifQosTrustTypeValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("trustDefault", -1),
          ("trustPort", 0),
          ("trustSTagCos", 2),
          ("trustDscpExp", 3),
          ("trustIpPre", 4),
          ("trustCTagCos", 5))
    )


_IfQosTrustTypeValue_Type.__name__ = "Integer32"
_IfQosTrustTypeValue_Object = MibTableColumn
ifQosTrustTypeValue = _IfQosTrustTypeValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 2, 1, 1),
    _IfQosTrustTypeValue_Type()
)
ifQosTrustTypeValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosTrustTypeValue.setStatus("current")
_IfQosDomainTable_Object = MibTable
ifQosDomainTable = _IfQosDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 3)
)
if mibBuilder.loadTexts:
    ifQosDomainTable.setStatus("current")
_IfQosDomainEntry_Object = MibTableRow
ifQosDomainEntry = _IfQosDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 3, 1)
)
ifQosDomainEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifQosDomainEntry.setStatus("current")


class _IfQosDomainValue_Type(Integer32):
    """Custom type ifQosDomainValue based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_IfQosDomainValue_Type.__name__ = "Integer32"
_IfQosDomainValue_Object = MibTableColumn
ifQosDomainValue = _IfQosDomainValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 4, 3, 1, 1),
    _IfQosDomainValue_Type()
)
ifQosDomainValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosDomainValue.setStatus("current")
_IfQosReplacePriObjects_ObjectIdentity = ObjectIdentity
ifQosReplacePriObjects = _IfQosReplacePriObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 5)
)
_IfQosReplaceTable_Object = MibTable
ifQosReplaceTable = _IfQosReplaceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 5, 1)
)
if mibBuilder.loadTexts:
    ifQosReplaceTable.setStatus("current")
_IfQosReplaceEntry_Object = MibTableRow
ifQosReplaceEntry = _IfQosReplaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 5, 1, 1)
)
ifQosReplaceEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifQosReplaceEntry.setStatus("current")


class _IfQosReplaceType_Type(Integer32):
    """Custom type ifQosReplaceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("cos", 1),
          ("cosctag", 2),
          ("cosstag", 3),
          ("dscpExp", 4),
          ("ctagdscp", 5),
          ("stagdscp", 6),
          ("nodscp", 7),
          ("nocos", 8))
    )


_IfQosReplaceType_Type.__name__ = "Integer32"
_IfQosReplaceType_Object = MibTableColumn
ifQosReplaceType = _IfQosReplaceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 2, 5, 1, 1, 1),
    _IfQosReplaceType_Type()
)
ifQosReplaceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifQosReplaceType.setStatus("current")
_CbQoS_ObjectIdentity = ObjectIdentity
cbQoS = _CbQoS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3)
)
_CbQoSClassifierObjects_ObjectIdentity = ObjectIdentity
cbQoSClassifierObjects = _CbQoSClassifierObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1)
)


class _CbQoSClassifierIndexNext_Type(Integer32):
    """Custom type cbQoSClassifierIndexNext based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSClassifierIndexNext_Type.__name__ = "Integer32"
_CbQoSClassifierIndexNext_Object = MibScalar
cbQoSClassifierIndexNext = _CbQoSClassifierIndexNext_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 1),
    _CbQoSClassifierIndexNext_Type()
)
cbQoSClassifierIndexNext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSClassifierIndexNext.setStatus("current")
_CbQoSClassifierCfgInfoTable_Object = MibTable
cbQoSClassifierCfgInfoTable = _CbQoSClassifierCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2)
)
if mibBuilder.loadTexts:
    cbQoSClassifierCfgInfoTable.setStatus("current")
_CbQoSClassifierCfgInfoEntry_Object = MibTableRow
cbQoSClassifierCfgInfoEntry = _CbQoSClassifierCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1)
)
cbQoSClassifierCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSClassifierIndex"),
)
if mibBuilder.loadTexts:
    cbQoSClassifierCfgInfoEntry.setStatus("current")


class _CbQoSClassifierIndex_Type(Integer32):
    """Custom type cbQoSClassifierIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSClassifierIndex_Type.__name__ = "Integer32"
_CbQoSClassifierIndex_Object = MibTableColumn
cbQoSClassifierIndex = _CbQoSClassifierIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 1),
    _CbQoSClassifierIndex_Type()
)
cbQoSClassifierIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSClassifierIndex.setStatus("current")


class _CbQoSClassifierName_Type(OctetString):
    """Custom type cbQoSClassifierName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_CbQoSClassifierName_Type.__name__ = "OctetString"
_CbQoSClassifierName_Object = MibTableColumn
cbQoSClassifierName = _CbQoSClassifierName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 2),
    _CbQoSClassifierName_Type()
)
cbQoSClassifierName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSClassifierName.setStatus("current")
_CbQoSClassifierRuleCount_Type = Integer32
_CbQoSClassifierRuleCount_Object = MibTableColumn
cbQoSClassifierRuleCount = _CbQoSClassifierRuleCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 3),
    _CbQoSClassifierRuleCount_Type()
)
cbQoSClassifierRuleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSClassifierRuleCount.setStatus("current")


class _CbQoSClassifierOperator_Type(Integer32):
    """Custom type cbQoSClassifierOperator based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("and", 1),
          ("or", 2))
    )


_CbQoSClassifierOperator_Type.__name__ = "Integer32"
_CbQoSClassifierOperator_Object = MibTableColumn
cbQoSClassifierOperator = _CbQoSClassifierOperator_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 4),
    _CbQoSClassifierOperator_Type()
)
cbQoSClassifierOperator.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSClassifierOperator.setStatus("current")
_CbQoSClassifierMatchRuleNextIndex_Type = Integer32
_CbQoSClassifierMatchRuleNextIndex_Object = MibTableColumn
cbQoSClassifierMatchRuleNextIndex = _CbQoSClassifierMatchRuleNextIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 5),
    _CbQoSClassifierMatchRuleNextIndex_Type()
)
cbQoSClassifierMatchRuleNextIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSClassifierMatchRuleNextIndex.setStatus("current")
_CbQoSClassifierRowStatus_Type = RowStatus
_CbQoSClassifierRowStatus_Object = MibTableColumn
cbQoSClassifierRowStatus = _CbQoSClassifierRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 2, 1, 6),
    _CbQoSClassifierRowStatus_Type()
)
cbQoSClassifierRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSClassifierRowStatus.setStatus("current")
_CbQoSMatchRuleCfgInfoTable_Object = MibTable
cbQoSMatchRuleCfgInfoTable = _CbQoSMatchRuleCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 3)
)
if mibBuilder.loadTexts:
    cbQoSMatchRuleCfgInfoTable.setStatus("current")
_CbQoSMatchRuleCfgInfoEntry_Object = MibTableRow
cbQoSMatchRuleCfgInfoEntry = _CbQoSMatchRuleCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 3, 1)
)
cbQoSMatchRuleCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSClassifierIndex"),
    (0, "SWITCH", "cbQoSMatchRuleIndex"),
)
if mibBuilder.loadTexts:
    cbQoSMatchRuleCfgInfoEntry.setStatus("current")


class _CbQoSMatchRuleIndex_Type(Integer32):
    """Custom type cbQoSMatchRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSMatchRuleIndex_Type.__name__ = "Integer32"
_CbQoSMatchRuleIndex_Object = MibTableColumn
cbQoSMatchRuleIndex = _CbQoSMatchRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 3, 1, 1),
    _CbQoSMatchRuleIndex_Type()
)
cbQoSMatchRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSMatchRuleIndex.setStatus("current")


class _CbQoSMatchRuleACLName_Type(OctetString):
    """Custom type cbQoSMatchRuleACLName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_CbQoSMatchRuleACLName_Type.__name__ = "OctetString"
_CbQoSMatchRuleACLName_Object = MibTableColumn
cbQoSMatchRuleACLName = _CbQoSMatchRuleACLName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 3, 1, 2),
    _CbQoSMatchRuleACLName_Type()
)
cbQoSMatchRuleACLName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSMatchRuleACLName.setStatus("current")
_CbQoSMatchRuleRowStatus_Type = RowStatus
_CbQoSMatchRuleRowStatus_Object = MibTableColumn
cbQoSMatchRuleRowStatus = _CbQoSMatchRuleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 1, 3, 1, 3),
    _CbQoSMatchRuleRowStatus_Type()
)
cbQoSMatchRuleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSMatchRuleRowStatus.setStatus("current")
_CbQoSPolicyObjects_ObjectIdentity = ObjectIdentity
cbQoSPolicyObjects = _CbQoSPolicyObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2)
)
_CbQoSPolicyIndexNext_Type = Integer32
_CbQoSPolicyIndexNext_Object = MibScalar
cbQoSPolicyIndexNext = _CbQoSPolicyIndexNext_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 1),
    _CbQoSPolicyIndexNext_Type()
)
cbQoSPolicyIndexNext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSPolicyIndexNext.setStatus("current")
_CbQoSPolicyCfgInfoTable_Object = MibTable
cbQoSPolicyCfgInfoTable = _CbQoSPolicyCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2)
)
if mibBuilder.loadTexts:
    cbQoSPolicyCfgInfoTable.setStatus("current")
_CbQoSPolicyCfgInfoEntry_Object = MibTableRow
cbQoSPolicyCfgInfoEntry = _CbQoSPolicyCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1)
)
cbQoSPolicyCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSPolicyIndex"),
)
if mibBuilder.loadTexts:
    cbQoSPolicyCfgInfoEntry.setStatus("current")


class _CbQoSPolicyIndex_Type(Integer32):
    """Custom type cbQoSPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSPolicyIndex_Type.__name__ = "Integer32"
_CbQoSPolicyIndex_Object = MibTableColumn
cbQoSPolicyIndex = _CbQoSPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1, 1),
    _CbQoSPolicyIndex_Type()
)
cbQoSPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSPolicyIndex.setStatus("current")


class _CbQoSPolicyName_Type(OctetString):
    """Custom type cbQoSPolicyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 40),
    )


_CbQoSPolicyName_Type.__name__ = "OctetString"
_CbQoSPolicyName_Object = MibTableColumn
cbQoSPolicyName = _CbQoSPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1, 2),
    _CbQoSPolicyName_Type()
)
cbQoSPolicyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSPolicyName.setStatus("current")
_CbQoSPolicyClassCount_Type = Integer32
_CbQoSPolicyClassCount_Object = MibTableColumn
cbQoSPolicyClassCount = _CbQoSPolicyClassCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1, 3),
    _CbQoSPolicyClassCount_Type()
)
cbQoSPolicyClassCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSPolicyClassCount.setStatus("current")
_CbQoSPolicyClassNextIndex_Type = Integer32
_CbQoSPolicyClassNextIndex_Object = MibTableColumn
cbQoSPolicyClassNextIndex = _CbQoSPolicyClassNextIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1, 4),
    _CbQoSPolicyClassNextIndex_Type()
)
cbQoSPolicyClassNextIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSPolicyClassNextIndex.setStatus("current")
_CbQoSPolicyRowStatus_Type = RowStatus
_CbQoSPolicyRowStatus_Object = MibTableColumn
cbQoSPolicyRowStatus = _CbQoSPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 2, 1, 5),
    _CbQoSPolicyRowStatus_Type()
)
cbQoSPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSPolicyRowStatus.setStatus("current")
_CbQoSPolicyClassCfgInfoTable_Object = MibTable
cbQoSPolicyClassCfgInfoTable = _CbQoSPolicyClassCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3)
)
if mibBuilder.loadTexts:
    cbQoSPolicyClassCfgInfoTable.setStatus("current")
_CbQoSPolicyClassCfgInfoEntry_Object = MibTableRow
cbQoSPolicyClassCfgInfoEntry = _CbQoSPolicyClassCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3, 1)
)
cbQoSPolicyClassCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSPolicyClassIndex"),
    (0, "SWITCH", "cbQoSPolicyClassClassifierIndex"),
)
if mibBuilder.loadTexts:
    cbQoSPolicyClassCfgInfoEntry.setStatus("current")


class _CbQoSPolicyClassIndex_Type(Integer32):
    """Custom type cbQoSPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSPolicyClassIndex_Type.__name__ = "Integer32"
_CbQoSPolicyClassIndex_Object = MibTableColumn
cbQoSPolicyClassIndex = _CbQoSPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3, 1, 1),
    _CbQoSPolicyClassIndex_Type()
)
cbQoSPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSPolicyClassIndex.setStatus("current")


class _CbQoSPolicyClassClassifierIndex_Type(Integer32):
    """Custom type cbQoSPolicyClassClassifierIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSPolicyClassClassifierIndex_Type.__name__ = "Integer32"
_CbQoSPolicyClassClassifierIndex_Object = MibTableColumn
cbQoSPolicyClassClassifierIndex = _CbQoSPolicyClassClassifierIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3, 1, 2),
    _CbQoSPolicyClassClassifierIndex_Type()
)
cbQoSPolicyClassClassifierIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSPolicyClassClassifierIndex.setStatus("current")


class _CbQoSPolicyClassClassifierName_Type(OctetString):
    """Custom type cbQoSPolicyClassClassifierName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 40),
    )


_CbQoSPolicyClassClassifierName_Type.__name__ = "OctetString"
_CbQoSPolicyClassClassifierName_Object = MibTableColumn
cbQoSPolicyClassClassifierName = _CbQoSPolicyClassClassifierName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3, 1, 3),
    _CbQoSPolicyClassClassifierName_Type()
)
cbQoSPolicyClassClassifierName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSPolicyClassClassifierName.setStatus("current")
_CbQoSPolicyClassRowStatus_Type = RowStatus
_CbQoSPolicyClassRowStatus_Object = MibTableColumn
cbQoSPolicyClassRowStatus = _CbQoSPolicyClassRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 2, 3, 1, 4),
    _CbQoSPolicyClassRowStatus_Type()
)
cbQoSPolicyClassRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSPolicyClassRowStatus.setStatus("current")
_CbQoSBehaviorObjects_ObjectIdentity = ObjectIdentity
cbQoSBehaviorObjects = _CbQoSBehaviorObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3)
)
_CbQoSAggregativeCarIndexNext_Type = Integer32
_CbQoSAggregativeCarIndexNext_Object = MibScalar
cbQoSAggregativeCarIndexNext = _CbQoSAggregativeCarIndexNext_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 1),
    _CbQoSAggregativeCarIndexNext_Type()
)
cbQoSAggregativeCarIndexNext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarIndexNext.setStatus("current")
_CbQoSAggregativeCarCfgInfoTable_Object = MibTable
cbQoSAggregativeCarCfgInfoTable = _CbQoSAggregativeCarCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2)
)
if mibBuilder.loadTexts:
    cbQoSAggregativeCarCfgInfoTable.setStatus("current")
_CbQoSAggregativeCarCfgInfoEntry_Object = MibTableRow
cbQoSAggregativeCarCfgInfoEntry = _CbQoSAggregativeCarCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1)
)
cbQoSAggregativeCarCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSAggregativeCarIndex"),
)
if mibBuilder.loadTexts:
    cbQoSAggregativeCarCfgInfoEntry.setStatus("current")


class _CbQoSAggregativeCarIndex_Type(Integer32):
    """Custom type cbQoSAggregativeCarIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSAggregativeCarIndex_Type.__name__ = "Integer32"
_CbQoSAggregativeCarIndex_Object = MibTableColumn
cbQoSAggregativeCarIndex = _CbQoSAggregativeCarIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 1),
    _CbQoSAggregativeCarIndex_Type()
)
cbQoSAggregativeCarIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarIndex.setStatus("current")


class _CbQoSAggregativeCarName_Type(OctetString):
    """Custom type cbQoSAggregativeCarName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 40),
    )


_CbQoSAggregativeCarName_Type.__name__ = "OctetString"
_CbQoSAggregativeCarName_Object = MibTableColumn
cbQoSAggregativeCarName = _CbQoSAggregativeCarName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 2),
    _CbQoSAggregativeCarName_Type()
)
cbQoSAggregativeCarName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarName.setStatus("current")


class _CbQoSAggregativeCarColorMode_Type(Integer32):
    """Custom type cbQoSAggregativeCarColorMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("colorAware", 1),
          ("colorBlind", 2))
    )


_CbQoSAggregativeCarColorMode_Type.__name__ = "Integer32"
_CbQoSAggregativeCarColorMode_Object = MibTableColumn
cbQoSAggregativeCarColorMode = _CbQoSAggregativeCarColorMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 3),
    _CbQoSAggregativeCarColorMode_Type()
)
cbQoSAggregativeCarColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarColorMode.setStatus("current")


class _CbQoSAggregativeCarCir_Type(Integer32):
    """Custom type cbQoSAggregativeCarCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_CbQoSAggregativeCarCir_Type.__name__ = "Integer32"
_CbQoSAggregativeCarCir_Object = MibTableColumn
cbQoSAggregativeCarCir = _CbQoSAggregativeCarCir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 4),
    _CbQoSAggregativeCarCir_Type()
)
cbQoSAggregativeCarCir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarCir.setStatus("current")


class _CbQoSAggregativeCarCbs_Type(Integer32):
    """Custom type cbQoSAggregativeCarCbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSAggregativeCarCbs_Type.__name__ = "Integer32"
_CbQoSAggregativeCarCbs_Object = MibTableColumn
cbQoSAggregativeCarCbs = _CbQoSAggregativeCarCbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 5),
    _CbQoSAggregativeCarCbs_Type()
)
cbQoSAggregativeCarCbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarCbs.setStatus("current")


class _CbQoSAggregativeCarType_Type(Integer32):
    """Custom type cbQoSAggregativeCarType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trtcm-mode", 1),
          ("srtcm-mode", 2))
    )


_CbQoSAggregativeCarType_Type.__name__ = "Integer32"
_CbQoSAggregativeCarType_Object = MibTableColumn
cbQoSAggregativeCarType = _CbQoSAggregativeCarType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 6),
    _CbQoSAggregativeCarType_Type()
)
cbQoSAggregativeCarType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarType.setStatus("current")


class _CbQoSAggregativeCarEbs_Type(Integer32):
    """Custom type cbQoSAggregativeCarEbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSAggregativeCarEbs_Type.__name__ = "Integer32"
_CbQoSAggregativeCarEbs_Object = MibTableColumn
cbQoSAggregativeCarEbs = _CbQoSAggregativeCarEbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 7),
    _CbQoSAggregativeCarEbs_Type()
)
cbQoSAggregativeCarEbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarEbs.setStatus("current")


class _CbQoSAggregativeCarPir_Type(Integer32):
    """Custom type cbQoSAggregativeCarPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_CbQoSAggregativeCarPir_Type.__name__ = "Integer32"
_CbQoSAggregativeCarPir_Object = MibTableColumn
cbQoSAggregativeCarPir = _CbQoSAggregativeCarPir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 8),
    _CbQoSAggregativeCarPir_Type()
)
cbQoSAggregativeCarPir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarPir.setStatus("current")


class _CbQoSAggregativeCarPbs_Type(Integer32):
    """Custom type cbQoSAggregativeCarPbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSAggregativeCarPbs_Type.__name__ = "Integer32"
_CbQoSAggregativeCarPbs_Object = MibTableColumn
cbQoSAggregativeCarPbs = _CbQoSAggregativeCarPbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 9),
    _CbQoSAggregativeCarPbs_Type()
)
cbQoSAggregativeCarPbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarPbs.setStatus("current")


class _CbQoSAggregativeCarDropColor_Type(Integer32):
    """Custom type cbQoSAggregativeCarDropColor based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("red", 1),
          ("yellow", 2))
    )


_CbQoSAggregativeCarDropColor_Type.__name__ = "Integer32"
_CbQoSAggregativeCarDropColor_Object = MibTableColumn
cbQoSAggregativeCarDropColor = _CbQoSAggregativeCarDropColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 10),
    _CbQoSAggregativeCarDropColor_Type()
)
cbQoSAggregativeCarDropColor.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarDropColor.setStatus("current")


class _CbQoSAggregativeCarUseL3Length_Type(Integer32):
    """Custom type cbQoSAggregativeCarUseL3Length based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_CbQoSAggregativeCarUseL3Length_Type.__name__ = "Integer32"
_CbQoSAggregativeCarUseL3Length_Object = MibTableColumn
cbQoSAggregativeCarUseL3Length = _CbQoSAggregativeCarUseL3Length_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 11),
    _CbQoSAggregativeCarUseL3Length_Type()
)
cbQoSAggregativeCarUseL3Length.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarUseL3Length.setStatus("current")


class _CbQoSAggregativeCarStats_Type(Integer32):
    """Custom type cbQoSAggregativeCarStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_CbQoSAggregativeCarStats_Type.__name__ = "Integer32"
_CbQoSAggregativeCarStats_Object = MibTableColumn
cbQoSAggregativeCarStats = _CbQoSAggregativeCarStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 12),
    _CbQoSAggregativeCarStats_Type()
)
cbQoSAggregativeCarStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarStats.setStatus("current")
_CbQoSAggregativeCarRowStatus_Type = RowStatus
_CbQoSAggregativeCarRowStatus_Object = MibTableColumn
cbQoSAggregativeCarRowStatus = _CbQoSAggregativeCarRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 2, 1, 13),
    _CbQoSAggregativeCarRowStatus_Type()
)
cbQoSAggregativeCarRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSAggregativeCarRowStatus.setStatus("current")
_CbQoSBehaviorCarCfgInfoTable_Object = MibTable
cbQoSBehaviorCarCfgInfoTable = _CbQoSBehaviorCarCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3)
)
if mibBuilder.loadTexts:
    cbQoSBehaviorCarCfgInfoTable.setStatus("current")
_CbQoSBehaviorCarCfgInfoEntry_Object = MibTableRow
cbQoSBehaviorCarCfgInfoEntry = _CbQoSBehaviorCarCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1)
)
cbQoSBehaviorCarCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSBehaviorCarPolicyIndex"),
    (0, "SWITCH", "cbQoSBehaviorCarPolicyClassIndex"),
)
if mibBuilder.loadTexts:
    cbQoSBehaviorCarCfgInfoEntry.setStatus("current")


class _CbQoSBehaviorCarPolicyIndex_Type(Integer32):
    """Custom type cbQoSBehaviorCarPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorCarPolicyIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorCarPolicyIndex_Object = MibTableColumn
cbQoSBehaviorCarPolicyIndex = _CbQoSBehaviorCarPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 1),
    _CbQoSBehaviorCarPolicyIndex_Type()
)
cbQoSBehaviorCarPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarPolicyIndex.setStatus("current")


class _CbQoSBehaviorCarPolicyClassIndex_Type(Integer32):
    """Custom type cbQoSBehaviorCarPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorCarPolicyClassIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorCarPolicyClassIndex_Object = MibTableColumn
cbQoSBehaviorCarPolicyClassIndex = _CbQoSBehaviorCarPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 2),
    _CbQoSBehaviorCarPolicyClassIndex_Type()
)
cbQoSBehaviorCarPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarPolicyClassIndex.setStatus("current")


class _CbQoSBehaviorCarColorMode_Type(Integer32):
    """Custom type cbQoSBehaviorCarColorMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("colorAware", 1),
          ("colorBlind", 2))
    )


_CbQoSBehaviorCarColorMode_Type.__name__ = "Integer32"
_CbQoSBehaviorCarColorMode_Object = MibTableColumn
cbQoSBehaviorCarColorMode = _CbQoSBehaviorCarColorMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 5),
    _CbQoSBehaviorCarColorMode_Type()
)
cbQoSBehaviorCarColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarColorMode.setStatus("current")


class _CbQoSBehaviorCarCir_Type(Integer32):
    """Custom type cbQoSBehaviorCarCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_CbQoSBehaviorCarCir_Type.__name__ = "Integer32"
_CbQoSBehaviorCarCir_Object = MibTableColumn
cbQoSBehaviorCarCir = _CbQoSBehaviorCarCir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 6),
    _CbQoSBehaviorCarCir_Type()
)
cbQoSBehaviorCarCir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarCir.setStatus("current")


class _CbQoSBehaviorCarCbs_Type(Integer32):
    """Custom type cbQoSBehaviorCarCbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSBehaviorCarCbs_Type.__name__ = "Integer32"
_CbQoSBehaviorCarCbs_Object = MibTableColumn
cbQoSBehaviorCarCbs = _CbQoSBehaviorCarCbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 7),
    _CbQoSBehaviorCarCbs_Type()
)
cbQoSBehaviorCarCbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarCbs.setStatus("current")


class _CbQoSBehaviorCarType_Type(Integer32):
    """Custom type cbQoSBehaviorCarType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("rfc2697", 1),
          ("rfc2698", 2),
          ("rfc4115", 3),
          ("bwp", 4))
    )


_CbQoSBehaviorCarType_Type.__name__ = "Integer32"
_CbQoSBehaviorCarType_Object = MibTableColumn
cbQoSBehaviorCarType = _CbQoSBehaviorCarType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 8),
    _CbQoSBehaviorCarType_Type()
)
cbQoSBehaviorCarType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarType.setStatus("current")


class _CbQoSBehaviorCarEbs_Type(Integer32):
    """Custom type cbQoSBehaviorCarEbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSBehaviorCarEbs_Type.__name__ = "Integer32"
_CbQoSBehaviorCarEbs_Object = MibScalar
cbQoSBehaviorCarEbs = _CbQoSBehaviorCarEbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 9),
    _CbQoSBehaviorCarEbs_Type()
)
cbQoSBehaviorCarEbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarEbs.setStatus("current")


class _CbQoSBehaviorCarPir_Type(Integer32):
    """Custom type cbQoSBehaviorCarPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 10000000),
    )


_CbQoSBehaviorCarPir_Type.__name__ = "Integer32"
_CbQoSBehaviorCarPir_Object = MibTableColumn
cbQoSBehaviorCarPir = _CbQoSBehaviorCarPir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 10),
    _CbQoSBehaviorCarPir_Type()
)
cbQoSBehaviorCarPir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarPir.setStatus("current")


class _CbQoSBehaviorCarPbs_Type(Integer32):
    """Custom type cbQoSBehaviorCarPbs based on Integer32"""
    defaultValue = 128000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 128000),
    )


_CbQoSBehaviorCarPbs_Type.__name__ = "Integer32"
_CbQoSBehaviorCarPbs_Object = MibTableColumn
cbQoSBehaviorCarPbs = _CbQoSBehaviorCarPbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 11),
    _CbQoSBehaviorCarPbs_Type()
)
cbQoSBehaviorCarPbs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarPbs.setStatus("current")


class _CbQoSBehaviorCarDropColor_Type(Integer32):
    """Custom type cbQoSBehaviorCarDropColor based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("red", 1),
          ("yellow", 2))
    )


_CbQoSBehaviorCarDropColor_Type.__name__ = "Integer32"
_CbQoSBehaviorCarDropColor_Object = MibTableColumn
cbQoSBehaviorCarDropColor = _CbQoSBehaviorCarDropColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 12),
    _CbQoSBehaviorCarDropColor_Type()
)
cbQoSBehaviorCarDropColor.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarDropColor.setStatus("current")


class _CbQoSBehaviorCarUseL3Length_Type(Integer32):
    """Custom type cbQoSBehaviorCarUseL3Length based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_CbQoSBehaviorCarUseL3Length_Type.__name__ = "Integer32"
_CbQoSBehaviorCarUseL3Length_Object = MibTableColumn
cbQoSBehaviorCarUseL3Length = _CbQoSBehaviorCarUseL3Length_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 13),
    _CbQoSBehaviorCarUseL3Length_Type()
)
cbQoSBehaviorCarUseL3Length.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarUseL3Length.setStatus("current")


class _CbQoSBehaviorCarStats_Type(Integer32):
    """Custom type cbQoSBehaviorCarStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_CbQoSBehaviorCarStats_Type.__name__ = "Integer32"
_CbQoSBehaviorCarStats_Object = MibTableColumn
cbQoSBehaviorCarStats = _CbQoSBehaviorCarStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 14),
    _CbQoSBehaviorCarStats_Type()
)
cbQoSBehaviorCarStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarStats.setStatus("current")
_CbQoSBehaviorCarRowStatus_Type = RowStatus
_CbQoSBehaviorCarRowStatus_Object = MibTableColumn
cbQoSBehaviorCarRowStatus = _CbQoSBehaviorCarRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 3, 1, 15),
    _CbQoSBehaviorCarRowStatus_Type()
)
cbQoSBehaviorCarRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarRowStatus.setStatus("current")
_CbQoSBehaviorPriColorCfgInfoTable_Object = MibTable
cbQoSBehaviorPriColorCfgInfoTable = _CbQoSBehaviorPriColorCfgInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4)
)
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorCfgInfoTable.setStatus("current")
_CbQoSBehaviorPriColorCfgInfoEntry_Object = MibTableRow
cbQoSBehaviorPriColorCfgInfoEntry = _CbQoSBehaviorPriColorCfgInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4, 1)
)
cbQoSBehaviorPriColorCfgInfoEntry.setIndexNames(
    (0, "SWITCH", "cbQoSBehaviorPriColorPolicyIndex"),
    (0, "SWITCH", "cbQoSBehaviorPriColorPolicyClassIndex"),
)
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorCfgInfoEntry.setStatus("current")


class _CbQoSBehaviorPriColorPolicyIndex_Type(Integer32):
    """Custom type cbQoSBehaviorPriColorPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorPriColorPolicyIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorPriColorPolicyIndex_Object = MibTableColumn
cbQoSBehaviorPriColorPolicyIndex = _CbQoSBehaviorPriColorPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4, 1, 1),
    _CbQoSBehaviorPriColorPolicyIndex_Type()
)
cbQoSBehaviorPriColorPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorPolicyIndex.setStatus("current")


class _CbQoSBehaviorPriColorPolicyClassIndex_Type(Integer32):
    """Custom type cbQoSBehaviorPriColorPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorPriColorPolicyClassIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorPriColorPolicyClassIndex_Object = MibTableColumn
cbQoSBehaviorPriColorPolicyClassIndex = _CbQoSBehaviorPriColorPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4, 1, 2),
    _CbQoSBehaviorPriColorPolicyClassIndex_Type()
)
cbQoSBehaviorPriColorPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorPolicyClassIndex.setStatus("current")


class _CbQoSBehaviorPriColorSetPriority_Type(Integer32):
    """Custom type cbQoSBehaviorPriColorSetPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_CbQoSBehaviorPriColorSetPriority_Type.__name__ = "Integer32"
_CbQoSBehaviorPriColorSetPriority_Object = MibTableColumn
cbQoSBehaviorPriColorSetPriority = _CbQoSBehaviorPriColorSetPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4, 1, 3),
    _CbQoSBehaviorPriColorSetPriority_Type()
)
cbQoSBehaviorPriColorSetPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorSetPriority.setStatus("current")
_CbQoSBehaviorPriColorSetColor_Type = ColorType
_CbQoSBehaviorPriColorSetColor_Object = MibTableColumn
cbQoSBehaviorPriColorSetColor = _CbQoSBehaviorPriColorSetColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 4, 1, 4),
    _CbQoSBehaviorPriColorSetColor_Type()
)
cbQoSBehaviorPriColorSetColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorPriColorSetColor.setStatus("current")
_CbQoSBehaviorOptionTable_Object = MibTable
cbQoSBehaviorOptionTable = _CbQoSBehaviorOptionTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5)
)
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionTable.setStatus("current")
_CbQoSBehaviorOptionEntry_Object = MibTableRow
cbQoSBehaviorOptionEntry = _CbQoSBehaviorOptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1)
)
cbQoSBehaviorOptionEntry.setIndexNames(
    (0, "SWITCH", "cbQoSBehaviorOptionPolicyIndex"),
    (0, "SWITCH", "cbQoSBehaviorOptionPolicyClassIndex"),
)
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionEntry.setStatus("current")


class _CbQoSBehaviorOptionPolicyIndex_Type(Integer32):
    """Custom type cbQoSBehaviorOptionPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorOptionPolicyIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionPolicyIndex_Object = MibTableColumn
cbQoSBehaviorOptionPolicyIndex = _CbQoSBehaviorOptionPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 1),
    _CbQoSBehaviorOptionPolicyIndex_Type()
)
cbQoSBehaviorOptionPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionPolicyIndex.setStatus("current")


class _CbQoSBehaviorOptionPolicyClassIndex_Type(Integer32):
    """Custom type cbQoSBehaviorOptionPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorOptionPolicyClassIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionPolicyClassIndex_Object = MibTableColumn
cbQoSBehaviorOptionPolicyClassIndex = _CbQoSBehaviorOptionPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 2),
    _CbQoSBehaviorOptionPolicyClassIndex_Type()
)
cbQoSBehaviorOptionPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionPolicyClassIndex.setStatus("current")


class _CbQoSBehaviorOptionTrust_Type(Integer32):
    """Custom type cbQoSBehaviorOptionTrust based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("trustNone", -1),
          ("trustPort", 0),
          ("trustCos", 2),
          ("trustDscp", 3),
          ("trustIpPre", 4),
          ("trustCosCtag", 5),
          ("trustCosStag", 6))
    )


_CbQoSBehaviorOptionTrust_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionTrust_Object = MibTableColumn
cbQoSBehaviorOptionTrust = _CbQoSBehaviorOptionTrust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 3),
    _CbQoSBehaviorOptionTrust_Type()
)
cbQoSBehaviorOptionTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionTrust.setStatus("current")


class _CbQoSBehaviorOptionStatsEn_Type(Integer32):
    """Custom type cbQoSBehaviorOptionStatsEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CbQoSBehaviorOptionStatsEn_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionStatsEn_Object = MibTableColumn
cbQoSBehaviorOptionStatsEn = _CbQoSBehaviorOptionStatsEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 4),
    _CbQoSBehaviorOptionStatsEn_Type()
)
cbQoSBehaviorOptionStatsEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionStatsEn.setStatus("current")


class _CbQoSBehaviorOptionRedirectIfindex_Type(Integer32):
    """Custom type cbQoSBehaviorOptionRedirectIfindex based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CbQoSBehaviorOptionRedirectIfindex_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionRedirectIfindex_Object = MibTableColumn
cbQoSBehaviorOptionRedirectIfindex = _CbQoSBehaviorOptionRedirectIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 5),
    _CbQoSBehaviorOptionRedirectIfindex_Type()
)
cbQoSBehaviorOptionRedirectIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionRedirectIfindex.setStatus("current")


class _CbQoSBehaviorOptionMonitorSession_Type(Integer32):
    """Custom type cbQoSBehaviorOptionMonitorSession based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_CbQoSBehaviorOptionMonitorSession_Type.__name__ = "Integer32"
_CbQoSBehaviorOptionMonitorSession_Object = MibTableColumn
cbQoSBehaviorOptionMonitorSession = _CbQoSBehaviorOptionMonitorSession_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 5, 1, 6),
    _CbQoSBehaviorOptionMonitorSession_Type()
)
cbQoSBehaviorOptionMonitorSession.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cbQoSBehaviorOptionMonitorSession.setStatus("current")
_CbQoSBehaviorCarAgpCfgTable_Object = MibTable
cbQoSBehaviorCarAgpCfgTable = _CbQoSBehaviorCarAgpCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6)
)
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpCfgTable.setStatus("current")
_CbQoSBehaviorCarAgpCfgEntry_Object = MibTableRow
cbQoSBehaviorCarAgpCfgEntry = _CbQoSBehaviorCarAgpCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6, 1)
)
cbQoSBehaviorCarAgpCfgEntry.setIndexNames(
    (0, "SWITCH", "cbQoSBehaviorCarAgpPolicyIndex"),
    (0, "SWITCH", "cbQoSBehaviorCarAgpPolicyClassIndex"),
)
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpCfgEntry.setStatus("current")


class _CbQoSBehaviorCarAgpPolicyIndex_Type(Integer32):
    """Custom type cbQoSBehaviorCarAgpPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorCarAgpPolicyIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorCarAgpPolicyIndex_Object = MibTableColumn
cbQoSBehaviorCarAgpPolicyIndex = _CbQoSBehaviorCarAgpPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6, 1, 1),
    _CbQoSBehaviorCarAgpPolicyIndex_Type()
)
cbQoSBehaviorCarAgpPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpPolicyIndex.setStatus("current")


class _CbQoSBehaviorCarAgpPolicyClassIndex_Type(Integer32):
    """Custom type cbQoSBehaviorCarAgpPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_CbQoSBehaviorCarAgpPolicyClassIndex_Type.__name__ = "Integer32"
_CbQoSBehaviorCarAgpPolicyClassIndex_Object = MibTableColumn
cbQoSBehaviorCarAgpPolicyClassIndex = _CbQoSBehaviorCarAgpPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6, 1, 2),
    _CbQoSBehaviorCarAgpPolicyClassIndex_Type()
)
cbQoSBehaviorCarAgpPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpPolicyClassIndex.setStatus("current")


class _CbQoSBehaviorCarAgpCarName_Type(OctetString):
    """Custom type cbQoSBehaviorCarAgpCarName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_CbQoSBehaviorCarAgpCarName_Type.__name__ = "OctetString"
_CbQoSBehaviorCarAgpCarName_Object = MibTableColumn
cbQoSBehaviorCarAgpCarName = _CbQoSBehaviorCarAgpCarName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6, 1, 3),
    _CbQoSBehaviorCarAgpCarName_Type()
)
cbQoSBehaviorCarAgpCarName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpCarName.setStatus("current")
_CbQoSBehaviorCarAgpRowStatus_Type = RowStatus
_CbQoSBehaviorCarAgpRowStatus_Object = MibTableColumn
cbQoSBehaviorCarAgpRowStatus = _CbQoSBehaviorCarAgpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 3, 6, 1, 15),
    _CbQoSBehaviorCarAgpRowStatus_Type()
)
cbQoSBehaviorCarAgpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSBehaviorCarAgpRowStatus.setStatus("current")
_CbQoSApplyPolicyObjects_ObjectIdentity = ObjectIdentity
cbQoSApplyPolicyObjects = _CbQoSApplyPolicyObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4)
)
_CbQoSIfApplyPolicyTable_Object = MibTable
cbQoSIfApplyPolicyTable = _CbQoSIfApplyPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1)
)
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyTable.setStatus("current")
_CbQoSIfApplyPolicyEntry_Object = MibTableRow
cbQoSIfApplyPolicyEntry = _CbQoSIfApplyPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1)
)
cbQoSIfApplyPolicyEntry.setIndexNames(
    (0, "SWITCH", "cbQoSIfApplyPolicyIfIndex"),
    (0, "SWITCH", "cbQoSIfApplyPolicyDirection"),
)
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyEntry.setStatus("current")


class _CbQoSIfApplyPolicyIfIndex_Type(Integer32):
    """Custom type cbQoSIfApplyPolicyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CbQoSIfApplyPolicyIfIndex_Type.__name__ = "Integer32"
_CbQoSIfApplyPolicyIfIndex_Object = MibTableColumn
cbQoSIfApplyPolicyIfIndex = _CbQoSIfApplyPolicyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1, 1),
    _CbQoSIfApplyPolicyIfIndex_Type()
)
cbQoSIfApplyPolicyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyIfIndex.setStatus("current")


class _CbQoSIfApplyPolicyDirection_Type(Integer32):
    """Custom type cbQoSIfApplyPolicyDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("input", 1),
          ("output", 2))
    )


_CbQoSIfApplyPolicyDirection_Type.__name__ = "Integer32"
_CbQoSIfApplyPolicyDirection_Object = MibTableColumn
cbQoSIfApplyPolicyDirection = _CbQoSIfApplyPolicyDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1, 2),
    _CbQoSIfApplyPolicyDirection_Type()
)
cbQoSIfApplyPolicyDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyDirection.setStatus("current")
_CbQoSIfApplyPolicyIndex_Type = Integer32
_CbQoSIfApplyPolicyIndex_Object = MibTableColumn
cbQoSIfApplyPolicyIndex = _CbQoSIfApplyPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1, 3),
    _CbQoSIfApplyPolicyIndex_Type()
)
cbQoSIfApplyPolicyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyIndex.setStatus("current")


class _CbQoSIfApplyPolicyName_Type(OctetString):
    """Custom type cbQoSIfApplyPolicyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 40),
    )


_CbQoSIfApplyPolicyName_Type.__name__ = "OctetString"
_CbQoSIfApplyPolicyName_Object = MibTableColumn
cbQoSIfApplyPolicyName = _CbQoSIfApplyPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1, 4),
    _CbQoSIfApplyPolicyName_Type()
)
cbQoSIfApplyPolicyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyName.setStatus("current")
_CbQoSIfApplyPolicyRowStatus_Type = RowStatus
_CbQoSIfApplyPolicyRowStatus_Object = MibTableColumn
cbQoSIfApplyPolicyRowStatus = _CbQoSIfApplyPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 3, 4, 1, 1, 5),
    _CbQoSIfApplyPolicyRowStatus_Type()
)
cbQoSIfApplyPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cbQoSIfApplyPolicyRowStatus.setStatus("current")
_SrvQos_ObjectIdentity = ObjectIdentity
srvQos = _SrvQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4)
)
_SrvQosSapIngressObjects_ObjectIdentity = ObjectIdentity
srvQosSapIngressObjects = _SrvQosSapIngressObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1)
)
_SrvQosSapIngressTable_Object = MibTable
srvQosSapIngressTable = _SrvQosSapIngressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1)
)
if mibBuilder.loadTexts:
    srvQosSapIngressTable.setStatus("current")
_SrvQosSapIngressEntry_Object = MibTableRow
srvQosSapIngressEntry = _SrvQosSapIngressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1, 1)
)
srvQosSapIngressEntry.setIndexNames(
    (0, "SWITCH", "srvQosSapIngressName"),
)
if mibBuilder.loadTexts:
    srvQosSapIngressEntry.setStatus("current")
_SrvQosSapIngressName_Type = OctetString
_SrvQosSapIngressName_Object = MibTableColumn
srvQosSapIngressName = _SrvQosSapIngressName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1, 1, 1),
    _SrvQosSapIngressName_Type()
)
srvQosSapIngressName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    srvQosSapIngressName.setStatus("current")
_SrvQosSapIngressRowStatus_Type = RowStatus
_SrvQosSapIngressRowStatus_Object = MibTableColumn
srvQosSapIngressRowStatus = _SrvQosSapIngressRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1, 1, 2),
    _SrvQosSapIngressRowStatus_Type()
)
srvQosSapIngressRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    srvQosSapIngressRowStatus.setStatus("current")
_SrvQosSapIngressDescription_Type = OctetString
_SrvQosSapIngressDescription_Object = MibTableColumn
srvQosSapIngressDescription = _SrvQosSapIngressDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1, 1, 3),
    _SrvQosSapIngressDescription_Type()
)
srvQosSapIngressDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressDescription.setStatus("current")
_SrvQosSapIngressApplyPolicyMap_Type = OctetString
_SrvQosSapIngressApplyPolicyMap_Object = MibTableColumn
srvQosSapIngressApplyPolicyMap = _SrvQosSapIngressApplyPolicyMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 1, 1, 4),
    _SrvQosSapIngressApplyPolicyMap_Type()
)
srvQosSapIngressApplyPolicyMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressApplyPolicyMap.setStatus("current")
_SrvQosSapIngressPolicerTable_Object = MibTable
srvQosSapIngressPolicerTable = _SrvQosSapIngressPolicerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2)
)
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerTable.setStatus("current")
_SrvQosSapIngressPolicerEntry_Object = MibTableRow
srvQosSapIngressPolicerEntry = _SrvQosSapIngressPolicerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1)
)
srvQosSapIngressPolicerEntry.setIndexNames(
    (0, "SWITCH", "srvQosSapIngressName"),
)
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerEntry.setStatus("current")


class _SrvQosSapIngressPolicerMode_Type(Integer32):
    """Custom type srvQosSapIngressPolicerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("colorAware", 0),
          ("colorBlind", 1))
    )


_SrvQosSapIngressPolicerMode_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerMode_Object = MibTableColumn
srvQosSapIngressPolicerMode = _SrvQosSapIngressPolicerMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 1),
    _SrvQosSapIngressPolicerMode_Type()
)
srvQosSapIngressPolicerMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerMode.setStatus("current")


class _SrvQosSapIngressPolicerCir_Type(Integer32):
    """Custom type srvQosSapIngressPolicerCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_SrvQosSapIngressPolicerCir_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerCir_Object = MibTableColumn
srvQosSapIngressPolicerCir = _SrvQosSapIngressPolicerCir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 2),
    _SrvQosSapIngressPolicerCir_Type()
)
srvQosSapIngressPolicerCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerCir.setStatus("current")


class _SrvQosSapIngressPolicerCbs_Type(Integer32):
    """Custom type srvQosSapIngressPolicerCbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4000000),
    )


_SrvQosSapIngressPolicerCbs_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerCbs_Object = MibTableColumn
srvQosSapIngressPolicerCbs = _SrvQosSapIngressPolicerCbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 3),
    _SrvQosSapIngressPolicerCbs_Type()
)
srvQosSapIngressPolicerCbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerCbs.setStatus("current")


class _SrvQosSapIngressPolicerEbs_Type(Integer32):
    """Custom type srvQosSapIngressPolicerEbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4000000),
    )


_SrvQosSapIngressPolicerEbs_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerEbs_Object = MibTableColumn
srvQosSapIngressPolicerEbs = _SrvQosSapIngressPolicerEbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 4),
    _SrvQosSapIngressPolicerEbs_Type()
)
srvQosSapIngressPolicerEbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerEbs.setStatus("current")


class _SrvQosSapIngressPolicerPir_Type(Integer32):
    """Custom type srvQosSapIngressPolicerPir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_SrvQosSapIngressPolicerPir_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerPir_Object = MibTableColumn
srvQosSapIngressPolicerPir = _SrvQosSapIngressPolicerPir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 5),
    _SrvQosSapIngressPolicerPir_Type()
)
srvQosSapIngressPolicerPir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerPir.setStatus("current")


class _SrvQosSapIngressPolicerPbs_Type(Integer32):
    """Custom type srvQosSapIngressPolicerPbs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4000000),
    )


_SrvQosSapIngressPolicerPbs_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerPbs_Object = MibTableColumn
srvQosSapIngressPolicerPbs = _SrvQosSapIngressPolicerPbs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 6),
    _SrvQosSapIngressPolicerPbs_Type()
)
srvQosSapIngressPolicerPbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerPbs.setStatus("current")


class _SrvQosSapIngressPolicerDropColor_Type(Integer32):
    """Custom type srvQosSapIngressPolicerDropColor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("red", 1),
          ("yellow", 2),
          ("green", 3))
    )


_SrvQosSapIngressPolicerDropColor_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerDropColor_Object = MibTableColumn
srvQosSapIngressPolicerDropColor = _SrvQosSapIngressPolicerDropColor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 7),
    _SrvQosSapIngressPolicerDropColor_Type()
)
srvQosSapIngressPolicerDropColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerDropColor.setStatus("current")


class _SrvQosSapIngressPolicerUseL3Length_Type(Integer32):
    """Custom type srvQosSapIngressPolicerUseL3Length based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_SrvQosSapIngressPolicerUseL3Length_Type.__name__ = "Integer32"
_SrvQosSapIngressPolicerUseL3Length_Object = MibTableColumn
srvQosSapIngressPolicerUseL3Length = _SrvQosSapIngressPolicerUseL3Length_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 1, 2, 1, 8),
    _SrvQosSapIngressPolicerUseL3Length_Type()
)
srvQosSapIngressPolicerUseL3Length.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapIngressPolicerUseL3Length.setStatus("current")
_SrvQosSapEgressObjects_ObjectIdentity = ObjectIdentity
srvQosSapEgressObjects = _SrvQosSapEgressObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2)
)
_SrvQosSapEgressTable_Object = MibTable
srvQosSapEgressTable = _SrvQosSapEgressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1)
)
if mibBuilder.loadTexts:
    srvQosSapEgressTable.setStatus("current")
_SrvQosSapEgressEntry_Object = MibTableRow
srvQosSapEgressEntry = _SrvQosSapEgressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1, 1)
)
srvQosSapEgressEntry.setIndexNames(
    (0, "SWITCH", "srvQosSapEgressName"),
)
if mibBuilder.loadTexts:
    srvQosSapEgressEntry.setStatus("current")
_SrvQosSapEgressName_Type = OctetString
_SrvQosSapEgressName_Object = MibTableColumn
srvQosSapEgressName = _SrvQosSapEgressName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1, 1, 1),
    _SrvQosSapEgressName_Type()
)
srvQosSapEgressName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    srvQosSapEgressName.setStatus("current")
_SrvQosSapEgressRowStatus_Type = RowStatus
_SrvQosSapEgressRowStatus_Object = MibTableColumn
srvQosSapEgressRowStatus = _SrvQosSapEgressRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1, 1, 2),
    _SrvQosSapEgressRowStatus_Type()
)
srvQosSapEgressRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    srvQosSapEgressRowStatus.setStatus("current")
_SrvQosSapEgressDescription_Type = OctetString
_SrvQosSapEgressDescription_Object = MibTableColumn
srvQosSapEgressDescription = _SrvQosSapEgressDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1, 1, 3),
    _SrvQosSapEgressDescription_Type()
)
srvQosSapEgressDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressDescription.setStatus("current")


class _SrvQosSapEgressShapeAverage_Type(Integer32):
    """Custom type srvQosSapEgressShapeAverage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_SrvQosSapEgressShapeAverage_Type.__name__ = "Integer32"
_SrvQosSapEgressShapeAverage_Object = MibTableColumn
srvQosSapEgressShapeAverage = _SrvQosSapEgressShapeAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 1, 1, 4),
    _SrvQosSapEgressShapeAverage_Type()
)
srvQosSapEgressShapeAverage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressShapeAverage.setStatus("current")
_SrvQosSapEgressQueueTable_Object = MibTable
srvQosSapEgressQueueTable = _SrvQosSapEgressQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 2)
)
if mibBuilder.loadTexts:
    srvQosSapEgressQueueTable.setStatus("current")
_SrvQosSapEgressQueueEntry_Object = MibTableRow
srvQosSapEgressQueueEntry = _SrvQosSapEgressQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 2, 1)
)
srvQosSapEgressQueueEntry.setIndexNames(
    (0, "SWITCH", "srvQosSapEgressName"),
    (0, "SWITCH", "srvQosSapEgressQueueId"),
)
if mibBuilder.loadTexts:
    srvQosSapEgressQueueEntry.setStatus("current")


class _SrvQosSapEgressQueueId_Type(Integer32):
    """Custom type srvQosSapEgressQueueId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SrvQosSapEgressQueueId_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueId_Object = MibTableColumn
srvQosSapEgressQueueId = _SrvQosSapEgressQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 2, 1, 1),
    _SrvQosSapEgressQueueId_Type()
)
srvQosSapEgressQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueId.setStatus("current")


class _SrvQosSapEgressQueueShapeAverageRateCir_Type(Integer32):
    """Custom type srvQosSapEgressQueueShapeAverageRateCir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_SrvQosSapEgressQueueShapeAverageRateCir_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueShapeAverageRateCir_Object = MibTableColumn
srvQosSapEgressQueueShapeAverageRateCir = _SrvQosSapEgressQueueShapeAverageRateCir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 2, 1, 2),
    _SrvQosSapEgressQueueShapeAverageRateCir_Type()
)
srvQosSapEgressQueueShapeAverageRateCir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueShapeAverageRateCir.setStatus("current")


class _SrvQosSapEgressQueueShapeAverageRatePir_Type(Integer32):
    """Custom type srvQosSapEgressQueueShapeAverageRatePir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_SrvQosSapEgressQueueShapeAverageRatePir_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueShapeAverageRatePir_Object = MibTableColumn
srvQosSapEgressQueueShapeAverageRatePir = _SrvQosSapEgressQueueShapeAverageRatePir_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 2, 1, 3),
    _SrvQosSapEgressQueueShapeAverageRatePir_Type()
)
srvQosSapEgressQueueShapeAverageRatePir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueShapeAverageRatePir.setStatus("current")
_SrvQosSapEgressQueueInfoTable_Object = MibTable
srvQosSapEgressQueueInfoTable = _SrvQosSapEgressQueueInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3)
)
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoTable.setStatus("current")
_SrvQosSapEgressQueueInfoEntry_Object = MibTableRow
srvQosSapEgressQueueInfoEntry = _SrvQosSapEgressQueueInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1)
)
srvQosSapEgressQueueInfoEntry.setIndexNames(
    (0, "SWITCH", "srvQosSapEgressName"),
    (0, "SWITCH", "srvQosSapEgressQueueId"),
)
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoEntry.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetect_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10),
    )


_SrvQosSapEgressQueueInfoRandomDetect_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetect_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetect = _SrvQosSapEgressQueueInfoRandomDetect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 1),
    _SrvQosSapEgressQueueInfoRandomDetect_Type()
)
srvQosSapEgressQueueInfoRandomDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetect.setStatus("current")


class _SrvQosSapEgressQueueInfoTailDropThreshold0_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoTailDropThreshold0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24571),
    )


_SrvQosSapEgressQueueInfoTailDropThreshold0_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoTailDropThreshold0_Object = MibTableColumn
srvQosSapEgressQueueInfoTailDropThreshold0 = _SrvQosSapEgressQueueInfoTailDropThreshold0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 2),
    _SrvQosSapEgressQueueInfoTailDropThreshold0_Type()
)
srvQosSapEgressQueueInfoTailDropThreshold0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoTailDropThreshold0.setStatus("current")


class _SrvQosSapEgressQueueInfoTailDropThreshold1_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoTailDropThreshold1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24572),
    )


_SrvQosSapEgressQueueInfoTailDropThreshold1_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoTailDropThreshold1_Object = MibTableColumn
srvQosSapEgressQueueInfoTailDropThreshold1 = _SrvQosSapEgressQueueInfoTailDropThreshold1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 3),
    _SrvQosSapEgressQueueInfoTailDropThreshold1_Type()
)
srvQosSapEgressQueueInfoTailDropThreshold1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoTailDropThreshold1.setStatus("current")


class _SrvQosSapEgressQueueInfoTailDropThreshold2_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoTailDropThreshold2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 24573),
    )


_SrvQosSapEgressQueueInfoTailDropThreshold2_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoTailDropThreshold2_Object = MibTableColumn
srvQosSapEgressQueueInfoTailDropThreshold2 = _SrvQosSapEgressQueueInfoTailDropThreshold2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 4),
    _SrvQosSapEgressQueueInfoTailDropThreshold2_Type()
)
srvQosSapEgressQueueInfoTailDropThreshold2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoTailDropThreshold2.setStatus("current")


class _SrvQosSapEgressQueueInfoTailDropThreshold3_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoTailDropThreshold3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 24574),
    )


_SrvQosSapEgressQueueInfoTailDropThreshold3_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoTailDropThreshold3_Object = MibTableColumn
srvQosSapEgressQueueInfoTailDropThreshold3 = _SrvQosSapEgressQueueInfoTailDropThreshold3_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 5),
    _SrvQosSapEgressQueueInfoTailDropThreshold3_Type()
)
srvQosSapEgressQueueInfoTailDropThreshold3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoTailDropThreshold3.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMinThreshold0_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMinThreshold0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24573),
    )


_SrvQosSapEgressQueueInfoRandomDetectMinThreshold0_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMinThreshold0_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMinThreshold0 = _SrvQosSapEgressQueueInfoRandomDetectMinThreshold0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 6),
    _SrvQosSapEgressQueueInfoRandomDetectMinThreshold0_Type()
)
srvQosSapEgressQueueInfoRandomDetectMinThreshold0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMinThreshold0.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMinThreshold1_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMinThreshold1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24573),
    )


_SrvQosSapEgressQueueInfoRandomDetectMinThreshold1_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMinThreshold1_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMinThreshold1 = _SrvQosSapEgressQueueInfoRandomDetectMinThreshold1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 7),
    _SrvQosSapEgressQueueInfoRandomDetectMinThreshold1_Type()
)
srvQosSapEgressQueueInfoRandomDetectMinThreshold1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMinThreshold1.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMinThreshold2_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMinThreshold2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24573),
    )


_SrvQosSapEgressQueueInfoRandomDetectMinThreshold2_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMinThreshold2_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMinThreshold2 = _SrvQosSapEgressQueueInfoRandomDetectMinThreshold2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 8),
    _SrvQosSapEgressQueueInfoRandomDetectMinThreshold2_Type()
)
srvQosSapEgressQueueInfoRandomDetectMinThreshold2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMinThreshold2.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMinThreshold3_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMinThreshold3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24573),
    )


_SrvQosSapEgressQueueInfoRandomDetectMinThreshold3_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMinThreshold3_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMinThreshold3 = _SrvQosSapEgressQueueInfoRandomDetectMinThreshold3_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 9),
    _SrvQosSapEgressQueueInfoRandomDetectMinThreshold3_Type()
)
srvQosSapEgressQueueInfoRandomDetectMinThreshold3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMinThreshold3.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold0_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMaxThreshold0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24574),
    )


_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold0_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold0_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMaxThreshold0 = _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 10),
    _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold0_Type()
)
srvQosSapEgressQueueInfoRandomDetectMaxThreshold0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMaxThreshold0.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold1_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMaxThreshold1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24574),
    )


_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold1_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold1_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMaxThreshold1 = _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 11),
    _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold1_Type()
)
srvQosSapEgressQueueInfoRandomDetectMaxThreshold1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMaxThreshold1.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold2_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMaxThreshold2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24574),
    )


_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold2_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold2_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMaxThreshold2 = _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 12),
    _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold2_Type()
)
srvQosSapEgressQueueInfoRandomDetectMaxThreshold2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMaxThreshold2.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold3_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectMaxThreshold3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24574),
    )


_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold3_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectMaxThreshold3_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectMaxThreshold3 = _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold3_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 13),
    _SrvQosSapEgressQueueInfoRandomDetectMaxThreshold3_Type()
)
srvQosSapEgressQueueInfoRandomDetectMaxThreshold3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectMaxThreshold3.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectDropProbability0_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectDropProbability0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SrvQosSapEgressQueueInfoRandomDetectDropProbability0_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectDropProbability0_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectDropProbability0 = _SrvQosSapEgressQueueInfoRandomDetectDropProbability0_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 14),
    _SrvQosSapEgressQueueInfoRandomDetectDropProbability0_Type()
)
srvQosSapEgressQueueInfoRandomDetectDropProbability0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectDropProbability0.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectDropProbability1_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectDropProbability1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SrvQosSapEgressQueueInfoRandomDetectDropProbability1_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectDropProbability1_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectDropProbability1 = _SrvQosSapEgressQueueInfoRandomDetectDropProbability1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 15),
    _SrvQosSapEgressQueueInfoRandomDetectDropProbability1_Type()
)
srvQosSapEgressQueueInfoRandomDetectDropProbability1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectDropProbability1.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectDropProbability2_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectDropProbability2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SrvQosSapEgressQueueInfoRandomDetectDropProbability2_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectDropProbability2_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectDropProbability2 = _SrvQosSapEgressQueueInfoRandomDetectDropProbability2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 16),
    _SrvQosSapEgressQueueInfoRandomDetectDropProbability2_Type()
)
srvQosSapEgressQueueInfoRandomDetectDropProbability2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectDropProbability2.setStatus("current")


class _SrvQosSapEgressQueueInfoRandomDetectDropProbability3_Type(Integer32):
    """Custom type srvQosSapEgressQueueInfoRandomDetectDropProbability3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SrvQosSapEgressQueueInfoRandomDetectDropProbability3_Type.__name__ = "Integer32"
_SrvQosSapEgressQueueInfoRandomDetectDropProbability3_Object = MibTableColumn
srvQosSapEgressQueueInfoRandomDetectDropProbability3 = _SrvQosSapEgressQueueInfoRandomDetectDropProbability3_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 2, 3, 1, 17),
    _SrvQosSapEgressQueueInfoRandomDetectDropProbability3_Type()
)
srvQosSapEgressQueueInfoRandomDetectDropProbability3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    srvQosSapEgressQueueInfoRandomDetectDropProbability3.setStatus("current")
_SrvQosFreeQueueInfoObjects_ObjectIdentity = ObjectIdentity
srvQosFreeQueueInfoObjects = _SrvQosFreeQueueInfoObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3)
)
_SrvQosFreeQueueInfoServiceQueueNum_Type = Integer32
_SrvQosFreeQueueInfoServiceQueueNum_Object = MibScalar
srvQosFreeQueueInfoServiceQueueNum = _SrvQosFreeQueueInfoServiceQueueNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3, 1),
    _SrvQosFreeQueueInfoServiceQueueNum_Type()
)
srvQosFreeQueueInfoServiceQueueNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srvQosFreeQueueInfoServiceQueueNum.setStatus("current")
_SrvQosFreeQueueInfoMaxSupportQueueNum_Type = Integer32
_SrvQosFreeQueueInfoMaxSupportQueueNum_Object = MibScalar
srvQosFreeQueueInfoMaxSupportQueueNum = _SrvQosFreeQueueInfoMaxSupportQueueNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3, 2),
    _SrvQosFreeQueueInfoMaxSupportQueueNum_Type()
)
srvQosFreeQueueInfoMaxSupportQueueNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srvQosFreeQueueInfoMaxSupportQueueNum.setStatus("current")
_SrvQosFreeQueueInfoAllocatedQueueNum_Type = Integer32
_SrvQosFreeQueueInfoAllocatedQueueNum_Object = MibScalar
srvQosFreeQueueInfoAllocatedQueueNum = _SrvQosFreeQueueInfoAllocatedQueueNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3, 3),
    _SrvQosFreeQueueInfoAllocatedQueueNum_Type()
)
srvQosFreeQueueInfoAllocatedQueueNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srvQosFreeQueueInfoAllocatedQueueNum.setStatus("current")
_SrvQosFreeQueueInfoMaxSupportServiceNum_Type = Integer32
_SrvQosFreeQueueInfoMaxSupportServiceNum_Object = MibScalar
srvQosFreeQueueInfoMaxSupportServiceNum = _SrvQosFreeQueueInfoMaxSupportServiceNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3, 4),
    _SrvQosFreeQueueInfoMaxSupportServiceNum_Type()
)
srvQosFreeQueueInfoMaxSupportServiceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srvQosFreeQueueInfoMaxSupportServiceNum.setStatus("current")
_SrvQosFreeQueueInfoAllocatedServiceNum_Type = Integer32
_SrvQosFreeQueueInfoAllocatedServiceNum_Object = MibScalar
srvQosFreeQueueInfoAllocatedServiceNum = _SrvQosFreeQueueInfoAllocatedServiceNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 4, 3, 5),
    _SrvQosFreeQueueInfoAllocatedServiceNum_Type()
)
srvQosFreeQueueInfoAllocatedServiceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    srvQosFreeQueueInfoAllocatedServiceNum.setStatus("current")
_Stats_ObjectIdentity = ObjectIdentity
stats = _Stats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10)
)
_QosStatsEnableObjects_ObjectIdentity = ObjectIdentity
qosStatsEnableObjects = _QosStatsEnableObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 1)
)
_QosStatsPolicyEnable_Type = EnableType
_QosStatsPolicyEnable_Object = MibScalar
qosStatsPolicyEnable = _QosStatsPolicyEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 1, 1),
    _QosStatsPolicyEnable_Type()
)
qosStatsPolicyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsPolicyEnable.setStatus("current")
_QosStatsQueueEnable_Type = EnableType
_QosStatsQueueEnable_Object = MibScalar
qosStatsQueueEnable = _QosStatsQueueEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 1, 2),
    _QosStatsQueueEnable_Type()
)
qosStatsQueueEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsQueueEnable.setStatus("current")
_QosStatsClearStaticsObjects_ObjectIdentity = ObjectIdentity
qosStatsClearStaticsObjects = _QosStatsClearStaticsObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2)
)
_QosStatsClearPolicyTable_Object = MibTable
qosStatsClearPolicyTable = _QosStatsClearPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 1)
)
if mibBuilder.loadTexts:
    qosStatsClearPolicyTable.setStatus("current")
_QosStatsClearPolicyEntry_Object = MibTableRow
qosStatsClearPolicyEntry = _QosStatsClearPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 1, 1)
)
qosStatsClearPolicyEntry.setIndexNames(
    (0, "SWITCH", "qosStatsClearPolicyIndex"),
)
if mibBuilder.loadTexts:
    qosStatsClearPolicyEntry.setStatus("current")


class _QosStatsClearPolicyIndex_Type(Integer32):
    """Custom type qosStatsClearPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10000, 20000),
    )


_QosStatsClearPolicyIndex_Type.__name__ = "Integer32"
_QosStatsClearPolicyIndex_Object = MibTableColumn
qosStatsClearPolicyIndex = _QosStatsClearPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 1, 1, 1),
    _QosStatsClearPolicyIndex_Type()
)
qosStatsClearPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearPolicyIndex.setStatus("current")
_QosStatsClearPolicyPolicerStats_Type = QosStatsClear
_QosStatsClearPolicyPolicerStats_Object = MibTableColumn
qosStatsClearPolicyPolicerStats = _QosStatsClearPolicyPolicerStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 1, 1, 2),
    _QosStatsClearPolicyPolicerStats_Type()
)
qosStatsClearPolicyPolicerStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsClearPolicyPolicerStats.setStatus("current")
_QosStatsClearPolicyAceMatchStats_Type = QosStatsClear
_QosStatsClearPolicyAceMatchStats_Object = MibTableColumn
qosStatsClearPolicyAceMatchStats = _QosStatsClearPolicyAceMatchStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 1, 1, 3),
    _QosStatsClearPolicyAceMatchStats_Type()
)
qosStatsClearPolicyAceMatchStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsClearPolicyAceMatchStats.setStatus("current")
_QosStatsClearPortPolicyTable_Object = MibTable
qosStatsClearPortPolicyTable = _QosStatsClearPortPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 2)
)
if mibBuilder.loadTexts:
    qosStatsClearPortPolicyTable.setStatus("current")
_QosStatsClearPortPolicyEntry_Object = MibTableRow
qosStatsClearPortPolicyEntry = _QosStatsClearPortPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 2, 1)
)
qosStatsClearPortPolicyEntry.setIndexNames(
    (0, "SWITCH", "qosStatsClearPortPolicyIfIndex"),
    (0, "SWITCH", "qosStatsClearPortPolicyDirection"),
)
if mibBuilder.loadTexts:
    qosStatsClearPortPolicyEntry.setStatus("current")


class _QosStatsClearPortPolicyIfIndex_Type(Integer32):
    """Custom type qosStatsClearPortPolicyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsClearPortPolicyIfIndex_Type.__name__ = "Integer32"
_QosStatsClearPortPolicyIfIndex_Object = MibTableColumn
qosStatsClearPortPolicyIfIndex = _QosStatsClearPortPolicyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 2, 1, 1),
    _QosStatsClearPortPolicyIfIndex_Type()
)
qosStatsClearPortPolicyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearPortPolicyIfIndex.setStatus("current")
_QosStatsClearPortPolicyDirection_Type = DirectionType
_QosStatsClearPortPolicyDirection_Object = MibTableColumn
qosStatsClearPortPolicyDirection = _QosStatsClearPortPolicyDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 2, 1, 2),
    _QosStatsClearPortPolicyDirection_Type()
)
qosStatsClearPortPolicyDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearPortPolicyDirection.setStatus("current")
_QosStatsClearPortPolicyStats_Type = QosStatsClear
_QosStatsClearPortPolicyStats_Object = MibTableColumn
qosStatsClearPortPolicyStats = _QosStatsClearPortPolicyStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 2, 1, 3),
    _QosStatsClearPortPolicyStats_Type()
)
qosStatsClearPortPolicyStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsClearPortPolicyStats.setStatus("current")
_QosStatsClearAggPolicyTable_Object = MibTable
qosStatsClearAggPolicyTable = _QosStatsClearAggPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 3)
)
if mibBuilder.loadTexts:
    qosStatsClearAggPolicyTable.setStatus("current")
_QosStatsClearAggPolicyEntry_Object = MibTableRow
qosStatsClearAggPolicyEntry = _QosStatsClearAggPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 3, 1)
)
qosStatsClearAggPolicyEntry.setIndexNames(
    (0, "SWITCH", "qosStatsClearAggPolicyIndex"),
)
if mibBuilder.loadTexts:
    qosStatsClearAggPolicyEntry.setStatus("current")


class _QosStatsClearAggPolicyIndex_Type(Integer32):
    """Custom type qosStatsClearAggPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsClearAggPolicyIndex_Type.__name__ = "Integer32"
_QosStatsClearAggPolicyIndex_Object = MibTableColumn
qosStatsClearAggPolicyIndex = _QosStatsClearAggPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 3, 1, 1),
    _QosStatsClearAggPolicyIndex_Type()
)
qosStatsClearAggPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearAggPolicyIndex.setStatus("current")
_QosStatsClearAggPolicyStats_Type = QosStatsClear
_QosStatsClearAggPolicyStats_Object = MibTableColumn
qosStatsClearAggPolicyStats = _QosStatsClearAggPolicyStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 3, 1, 2),
    _QosStatsClearAggPolicyStats_Type()
)
qosStatsClearAggPolicyStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsClearAggPolicyStats.setStatus("current")
_QosStatsClearQueueTable_Object = MibTable
qosStatsClearQueueTable = _QosStatsClearQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 4)
)
if mibBuilder.loadTexts:
    qosStatsClearQueueTable.setStatus("current")
_QosStatsClearQueueEntry_Object = MibTableRow
qosStatsClearQueueEntry = _QosStatsClearQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 4, 1)
)
qosStatsClearQueueEntry.setIndexNames(
    (0, "SWITCH", "qosStatsClearQueueifIndex"),
    (0, "SWITCH", "qosStatsClearQueueId"),
)
if mibBuilder.loadTexts:
    qosStatsClearQueueEntry.setStatus("current")


class _QosStatsClearQueueifIndex_Type(Integer32):
    """Custom type qosStatsClearQueueifIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsClearQueueifIndex_Type.__name__ = "Integer32"
_QosStatsClearQueueifIndex_Object = MibTableColumn
qosStatsClearQueueifIndex = _QosStatsClearQueueifIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 4, 1, 1),
    _QosStatsClearQueueifIndex_Type()
)
qosStatsClearQueueifIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearQueueifIndex.setStatus("current")
_QosStatsClearQueueId_Type = IfQueueId
_QosStatsClearQueueId_Object = MibTableColumn
qosStatsClearQueueId = _QosStatsClearQueueId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 4, 1, 2),
    _QosStatsClearQueueId_Type()
)
qosStatsClearQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsClearQueueId.setStatus("current")
_QosStatsClearQueueStats_Type = QosStatsClear
_QosStatsClearQueueStats_Object = MibTableColumn
qosStatsClearQueueStats = _QosStatsClearQueueStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 2, 4, 1, 3),
    _QosStatsClearQueueStats_Type()
)
qosStatsClearQueueStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qosStatsClearQueueStats.setStatus("current")
_QosStatsRunStaticsObjects_ObjectIdentity = ObjectIdentity
qosStatsRunStaticsObjects = _QosStatsRunStaticsObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3)
)
_QosStatsCbPolicyRunInfoTable_Object = MibTable
qosStatsCbPolicyRunInfoTable = _QosStatsCbPolicyRunInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1)
)
if mibBuilder.loadTexts:
    qosStatsCbPolicyRunInfoTable.setStatus("current")
_QosStatsCbPolicyRunInfoEntry_Object = MibTableRow
qosStatsCbPolicyRunInfoEntry = _QosStatsCbPolicyRunInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1)
)
qosStatsCbPolicyRunInfoEntry.setIndexNames(
    (0, "SWITCH", "qosStatsCbPolicyIfIndex"),
    (0, "SWITCH", "qosStatsCbPolicyDirection"),
    (0, "SWITCH", "qosStatsPolicyClassIndex"),
)
if mibBuilder.loadTexts:
    qosStatsCbPolicyRunInfoEntry.setStatus("current")


class _QosStatsCbPolicyIfIndex_Type(Integer32):
    """Custom type qosStatsCbPolicyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsCbPolicyIfIndex_Type.__name__ = "Integer32"
_QosStatsCbPolicyIfIndex_Object = MibTableColumn
qosStatsCbPolicyIfIndex = _QosStatsCbPolicyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 1),
    _QosStatsCbPolicyIfIndex_Type()
)
qosStatsCbPolicyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbPolicyIfIndex.setStatus("current")
_QosStatsCbPolicyDirection_Type = DirectionType
_QosStatsCbPolicyDirection_Object = MibTableColumn
qosStatsCbPolicyDirection = _QosStatsCbPolicyDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 2),
    _QosStatsCbPolicyDirection_Type()
)
qosStatsCbPolicyDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbPolicyDirection.setStatus("current")


class _QosStatsPolicyClassIndex_Type(Integer32):
    """Custom type qosStatsPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsPolicyClassIndex_Type.__name__ = "Integer32"
_QosStatsPolicyClassIndex_Object = MibTableColumn
qosStatsPolicyClassIndex = _QosStatsPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 3),
    _QosStatsPolicyClassIndex_Type()
)
qosStatsPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsPolicyClassIndex.setStatus("current")
_QosStatsPolicyGreenPackets_Type = Counter64
_QosStatsPolicyGreenPackets_Object = MibTableColumn
qosStatsPolicyGreenPackets = _QosStatsPolicyGreenPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 4),
    _QosStatsPolicyGreenPackets_Type()
)
qosStatsPolicyGreenPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyGreenPackets.setStatus("current")
_QosStatsPolicyGreenBytes_Type = Counter64
_QosStatsPolicyGreenBytes_Object = MibTableColumn
qosStatsPolicyGreenBytes = _QosStatsPolicyGreenBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 5),
    _QosStatsPolicyGreenBytes_Type()
)
qosStatsPolicyGreenBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyGreenBytes.setStatus("current")
_QosStatsPolicyRedPackets_Type = Counter64
_QosStatsPolicyRedPackets_Object = MibTableColumn
qosStatsPolicyRedPackets = _QosStatsPolicyRedPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 6),
    _QosStatsPolicyRedPackets_Type()
)
qosStatsPolicyRedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyRedPackets.setStatus("current")
_QosStatsPolicyRedBytes_Type = Counter64
_QosStatsPolicyRedBytes_Object = MibTableColumn
qosStatsPolicyRedBytes = _QosStatsPolicyRedBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 7),
    _QosStatsPolicyRedBytes_Type()
)
qosStatsPolicyRedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyRedBytes.setStatus("current")
_QosStatsPolicyYellowPackets_Type = Counter64
_QosStatsPolicyYellowPackets_Object = MibTableColumn
qosStatsPolicyYellowPackets = _QosStatsPolicyYellowPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 8),
    _QosStatsPolicyYellowPackets_Type()
)
qosStatsPolicyYellowPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyYellowPackets.setStatus("current")
_QosStatsPolicyYellowBytes_Type = Counter64
_QosStatsPolicyYellowBytes_Object = MibTableColumn
qosStatsPolicyYellowBytes = _QosStatsPolicyYellowBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 9),
    _QosStatsPolicyYellowBytes_Type()
)
qosStatsPolicyYellowBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyYellowBytes.setStatus("current")
_QosStatsPolicyClassBasedPkts_Type = Counter64
_QosStatsPolicyClassBasedPkts_Object = MibTableColumn
qosStatsPolicyClassBasedPkts = _QosStatsPolicyClassBasedPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 10),
    _QosStatsPolicyClassBasedPkts_Type()
)
qosStatsPolicyClassBasedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyClassBasedPkts.setStatus("current")
_QosStatsPolicyClassBasedBytes_Type = Counter64
_QosStatsPolicyClassBasedBytes_Object = MibTableColumn
qosStatsPolicyClassBasedBytes = _QosStatsPolicyClassBasedBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 1, 1, 11),
    _QosStatsPolicyClassBasedBytes_Type()
)
qosStatsPolicyClassBasedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPolicyClassBasedBytes.setStatus("current")
_QosStatsPortPolicyRunInfoTable_Object = MibTable
qosStatsPortPolicyRunInfoTable = _QosStatsPortPolicyRunInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2)
)
if mibBuilder.loadTexts:
    qosStatsPortPolicyRunInfoTable.setStatus("current")
_QosStatsPortPolicyRunInfoEntry_Object = MibTableRow
qosStatsPortPolicyRunInfoEntry = _QosStatsPortPolicyRunInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1)
)
qosStatsPortPolicyRunInfoEntry.setIndexNames(
    (0, "SWITCH", "qosStatsCbPolicyIfIndex"),
    (0, "SWITCH", "qosStatsCbPolicyDirection"),
)
if mibBuilder.loadTexts:
    qosStatsPortPolicyRunInfoEntry.setStatus("current")
_QosStatsPortPolicyIfIndex_Type = Integer32
_QosStatsPortPolicyIfIndex_Object = MibTableColumn
qosStatsPortPolicyIfIndex = _QosStatsPortPolicyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 1),
    _QosStatsPortPolicyIfIndex_Type()
)
qosStatsPortPolicyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsPortPolicyIfIndex.setStatus("current")
_QosStatsPortPolicyDirection_Type = DirectionType
_QosStatsPortPolicyDirection_Object = MibTableColumn
qosStatsPortPolicyDirection = _QosStatsPortPolicyDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 2),
    _QosStatsPortPolicyDirection_Type()
)
qosStatsPortPolicyDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsPortPolicyDirection.setStatus("current")
_QosStatsPortPolicyConfirmPackets_Type = Counter64
_QosStatsPortPolicyConfirmPackets_Object = MibTableColumn
qosStatsPortPolicyConfirmPackets = _QosStatsPortPolicyConfirmPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 3),
    _QosStatsPortPolicyConfirmPackets_Type()
)
qosStatsPortPolicyConfirmPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPortPolicyConfirmPackets.setStatus("current")
_QosStatsPortPolicyConfirmBytes_Type = Counter64
_QosStatsPortPolicyConfirmBytes_Object = MibTableColumn
qosStatsPortPolicyConfirmBytes = _QosStatsPortPolicyConfirmBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 4),
    _QosStatsPortPolicyConfirmBytes_Type()
)
qosStatsPortPolicyConfirmBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPortPolicyConfirmBytes.setStatus("current")
_QosStatsPortPolicyNoConfirmPackets_Type = Counter64
_QosStatsPortPolicyNoConfirmPackets_Object = MibTableColumn
qosStatsPortPolicyNoConfirmPackets = _QosStatsPortPolicyNoConfirmPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 5),
    _QosStatsPortPolicyNoConfirmPackets_Type()
)
qosStatsPortPolicyNoConfirmPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPortPolicyNoConfirmPackets.setStatus("current")
_QosStatsPortPolicyNoConfirmBytes_Type = Counter64
_QosStatsPortPolicyNoConfirmBytes_Object = MibTableColumn
qosStatsPortPolicyNoConfirmBytes = _QosStatsPortPolicyNoConfirmBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 2, 1, 6),
    _QosStatsPortPolicyNoConfirmBytes_Type()
)
qosStatsPortPolicyNoConfirmBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsPortPolicyNoConfirmBytes.setStatus("current")
_QosStatsIfQueueRunInfoTable_Object = MibTable
qosStatsIfQueueRunInfoTable = _QosStatsIfQueueRunInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3)
)
if mibBuilder.loadTexts:
    qosStatsIfQueueRunInfoTable.setStatus("current")
_QosStatsIfQueueRunInfoEntry_Object = MibTableRow
qosStatsIfQueueRunInfoEntry = _QosStatsIfQueueRunInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1)
)
qosStatsIfQueueRunInfoEntry.setIndexNames(
    (0, "SWITCH", "qosStatsQueueIfIndex"),
    (0, "SWITCH", "qosStatsQueueID"),
)
if mibBuilder.loadTexts:
    qosStatsIfQueueRunInfoEntry.setStatus("current")


class _QosStatsQueueIfIndex_Type(Integer32):
    """Custom type qosStatsQueueIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsQueueIfIndex_Type.__name__ = "Integer32"
_QosStatsQueueIfIndex_Object = MibTableColumn
qosStatsQueueIfIndex = _QosStatsQueueIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 1),
    _QosStatsQueueIfIndex_Type()
)
qosStatsQueueIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsQueueIfIndex.setStatus("current")


class _QosStatsQueueID_Type(Integer32):
    """Custom type qosStatsQueueID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_QosStatsQueueID_Type.__name__ = "Integer32"
_QosStatsQueueID_Object = MibTableColumn
qosStatsQueueID = _QosStatsQueueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 2),
    _QosStatsQueueID_Type()
)
qosStatsQueueID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsQueueID.setStatus("current")
_QosStatsIfQueueTransmittedPackets_Type = Counter64
_QosStatsIfQueueTransmittedPackets_Object = MibTableColumn
qosStatsIfQueueTransmittedPackets = _QosStatsIfQueueTransmittedPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 3),
    _QosStatsIfQueueTransmittedPackets_Type()
)
qosStatsIfQueueTransmittedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsIfQueueTransmittedPackets.setStatus("current")
_QosStatsIfQueueTransmittedBytes_Type = Counter64
_QosStatsIfQueueTransmittedBytes_Object = MibTableColumn
qosStatsIfQueueTransmittedBytes = _QosStatsIfQueueTransmittedBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 4),
    _QosStatsIfQueueTransmittedBytes_Type()
)
qosStatsIfQueueTransmittedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsIfQueueTransmittedBytes.setStatus("current")
_QosStatsIfQueueDropPackets_Type = Counter64
_QosStatsIfQueueDropPackets_Object = MibTableColumn
qosStatsIfQueueDropPackets = _QosStatsIfQueueDropPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 5),
    _QosStatsIfQueueDropPackets_Type()
)
qosStatsIfQueueDropPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsIfQueueDropPackets.setStatus("obsolete")
_QosStatsIfQueueDropBytes_Type = Counter64
_QosStatsIfQueueDropBytes_Object = MibTableColumn
qosStatsIfQueueDropBytes = _QosStatsIfQueueDropBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 3, 1, 6),
    _QosStatsIfQueueDropBytes_Type()
)
qosStatsIfQueueDropBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsIfQueueDropBytes.setStatus("obsolete")
_QosStatsCbPolicyAceBasedRunInfoTable_Object = MibTable
qosStatsCbPolicyAceBasedRunInfoTable = _QosStatsCbPolicyAceBasedRunInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4)
)
if mibBuilder.loadTexts:
    qosStatsCbPolicyAceBasedRunInfoTable.setStatus("current")
_QosStatsCbPolicyAceBasedRunInfoEntry_Object = MibTableRow
qosStatsCbPolicyAceBasedRunInfoEntry = _QosStatsCbPolicyAceBasedRunInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1)
)
qosStatsCbPolicyAceBasedRunInfoEntry.setIndexNames(
    (0, "SWITCH", "qosStatsCbAceBasedIfIndex"),
    (0, "SWITCH", "qosStatsCbAceBasedDirection"),
    (0, "SWITCH", "qosStatsCbAceBasedPolicyClassIndex"),
    (0, "SWITCH", "qosStatsCbAceBasedMatchRuleIndex"),
    (0, "SWITCH", "qosStatsCbAceBasedAclGroupRuleIndex"),
)
if mibBuilder.loadTexts:
    qosStatsCbPolicyAceBasedRunInfoEntry.setStatus("current")


class _QosStatsCbAceBasedIfIndex_Type(Integer32):
    """Custom type qosStatsCbAceBasedIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsCbAceBasedIfIndex_Type.__name__ = "Integer32"
_QosStatsCbAceBasedIfIndex_Object = MibTableColumn
qosStatsCbAceBasedIfIndex = _QosStatsCbAceBasedIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 1),
    _QosStatsCbAceBasedIfIndex_Type()
)
qosStatsCbAceBasedIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedIfIndex.setStatus("current")
_QosStatsCbAceBasedDirection_Type = DirectionType
_QosStatsCbAceBasedDirection_Object = MibTableColumn
qosStatsCbAceBasedDirection = _QosStatsCbAceBasedDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 2),
    _QosStatsCbAceBasedDirection_Type()
)
qosStatsCbAceBasedDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedDirection.setStatus("current")


class _QosStatsCbAceBasedPolicyClassIndex_Type(Integer32):
    """Custom type qosStatsCbAceBasedPolicyClassIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsCbAceBasedPolicyClassIndex_Type.__name__ = "Integer32"
_QosStatsCbAceBasedPolicyClassIndex_Object = MibTableColumn
qosStatsCbAceBasedPolicyClassIndex = _QosStatsCbAceBasedPolicyClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 3),
    _QosStatsCbAceBasedPolicyClassIndex_Type()
)
qosStatsCbAceBasedPolicyClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedPolicyClassIndex.setStatus("current")


class _QosStatsCbAceBasedMatchRuleIndex_Type(Integer32):
    """Custom type qosStatsCbAceBasedMatchRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsCbAceBasedMatchRuleIndex_Type.__name__ = "Integer32"
_QosStatsCbAceBasedMatchRuleIndex_Object = MibTableColumn
qosStatsCbAceBasedMatchRuleIndex = _QosStatsCbAceBasedMatchRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 4),
    _QosStatsCbAceBasedMatchRuleIndex_Type()
)
qosStatsCbAceBasedMatchRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedMatchRuleIndex.setStatus("current")


class _QosStatsCbAceBasedAclGroupRuleIndex_Type(Integer32):
    """Custom type qosStatsCbAceBasedAclGroupRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483646),
    )


_QosStatsCbAceBasedAclGroupRuleIndex_Type.__name__ = "Integer32"
_QosStatsCbAceBasedAclGroupRuleIndex_Object = MibTableColumn
qosStatsCbAceBasedAclGroupRuleIndex = _QosStatsCbAceBasedAclGroupRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 5),
    _QosStatsCbAceBasedAclGroupRuleIndex_Type()
)
qosStatsCbAceBasedAclGroupRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedAclGroupRuleIndex.setStatus("current")
_QosStatsCbAceBasedPkts_Type = Counter64
_QosStatsCbAceBasedPkts_Object = MibTableColumn
qosStatsCbAceBasedPkts = _QosStatsCbAceBasedPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 6),
    _QosStatsCbAceBasedPkts_Type()
)
qosStatsCbAceBasedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedPkts.setStatus("current")
_QosStatsCbAceBasedBytes_Type = Counter64
_QosStatsCbAceBasedBytes_Object = MibTableColumn
qosStatsCbAceBasedBytes = _QosStatsCbAceBasedBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 4, 1, 7),
    _QosStatsCbAceBasedBytes_Type()
)
qosStatsCbAceBasedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsCbAceBasedBytes.setStatus("current")
_QosStatsAggPolicyRunInfoTable_Object = MibTable
qosStatsAggPolicyRunInfoTable = _QosStatsAggPolicyRunInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5)
)
if mibBuilder.loadTexts:
    qosStatsAggPolicyRunInfoTable.setStatus("current")
_QosStatsAggPolicyRunInfoEntry_Object = MibTableRow
qosStatsAggPolicyRunInfoEntry = _QosStatsAggPolicyRunInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1)
)
qosStatsAggPolicyRunInfoEntry.setIndexNames(
    (0, "SWITCH", "qosStatsAggPolicyIndex"),
)
if mibBuilder.loadTexts:
    qosStatsAggPolicyRunInfoEntry.setStatus("current")


class _QosStatsAggPolicyIndex_Type(Integer32):
    """Custom type qosStatsAggPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_QosStatsAggPolicyIndex_Type.__name__ = "Integer32"
_QosStatsAggPolicyIndex_Object = MibTableColumn
qosStatsAggPolicyIndex = _QosStatsAggPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 1),
    _QosStatsAggPolicyIndex_Type()
)
qosStatsAggPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qosStatsAggPolicyIndex.setStatus("current")
_QosStatsAggPolicyRedPackets_Type = Counter64
_QosStatsAggPolicyRedPackets_Object = MibTableColumn
qosStatsAggPolicyRedPackets = _QosStatsAggPolicyRedPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 2),
    _QosStatsAggPolicyRedPackets_Type()
)
qosStatsAggPolicyRedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyRedPackets.setStatus("current")
_QosStatsAggPolicyRedBytes_Type = Counter64
_QosStatsAggPolicyRedBytes_Object = MibTableColumn
qosStatsAggPolicyRedBytes = _QosStatsAggPolicyRedBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 3),
    _QosStatsAggPolicyRedBytes_Type()
)
qosStatsAggPolicyRedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyRedBytes.setStatus("current")
_QosStatsAggPolicyGreenPackets_Type = Counter64
_QosStatsAggPolicyGreenPackets_Object = MibTableColumn
qosStatsAggPolicyGreenPackets = _QosStatsAggPolicyGreenPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 4),
    _QosStatsAggPolicyGreenPackets_Type()
)
qosStatsAggPolicyGreenPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyGreenPackets.setStatus("current")
_QosStatsAggPolicyGreenBytes_Type = Counter64
_QosStatsAggPolicyGreenBytes_Object = MibTableColumn
qosStatsAggPolicyGreenBytes = _QosStatsAggPolicyGreenBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 5),
    _QosStatsAggPolicyGreenBytes_Type()
)
qosStatsAggPolicyGreenBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyGreenBytes.setStatus("current")
_QosStatsAggPolicyYellowPackets_Type = Counter64
_QosStatsAggPolicyYellowPackets_Object = MibTableColumn
qosStatsAggPolicyYellowPackets = _QosStatsAggPolicyYellowPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 6),
    _QosStatsAggPolicyYellowPackets_Type()
)
qosStatsAggPolicyYellowPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyYellowPackets.setStatus("current")
_QosStatsAggPolicyYellowBytes_Type = Counter64
_QosStatsAggPolicyYellowBytes_Object = MibTableColumn
qosStatsAggPolicyYellowBytes = _QosStatsAggPolicyYellowBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 8, 10, 3, 5, 1, 7),
    _QosStatsAggPolicyYellowBytes_Type()
)
qosStatsAggPolicyYellowBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qosStatsAggPolicyYellowBytes.setStatus("current")
_Igsp_ObjectIdentity = ObjectIdentity
igsp = _Igsp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 9)
)
_LswIgmpsnoopingMibObject_ObjectIdentity = ObjectIdentity
lswIgmpsnoopingMibObject = _LswIgmpsnoopingMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1)
)


class _IgmpSnoopingStatus_Type(Integer32):
    """Custom type igmpSnoopingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingStatus_Type.__name__ = "Integer32"
_IgmpSnoopingStatus_Object = MibScalar
igmpSnoopingStatus = _IgmpSnoopingStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 1),
    _IgmpSnoopingStatus_Type()
)
igmpSnoopingStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingStatus.setStatus("current")


class _IgmpSnoopingFastLeaveStatus_Type(Integer32):
    """Custom type igmpSnoopingFastLeaveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingFastLeaveStatus_Type.__name__ = "Integer32"
_IgmpSnoopingFastLeaveStatus_Object = MibScalar
igmpSnoopingFastLeaveStatus = _IgmpSnoopingFastLeaveStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 2),
    _IgmpSnoopingFastLeaveStatus_Type()
)
igmpSnoopingFastLeaveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingFastLeaveStatus.setStatus("current")


class _IgmpSnoopingVersion_Type(Integer32):
    """Custom type igmpSnoopingVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_IgmpSnoopingVersion_Type.__name__ = "Integer32"
_IgmpSnoopingVersion_Object = MibScalar
igmpSnoopingVersion = _IgmpSnoopingVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 3),
    _IgmpSnoopingVersion_Type()
)
igmpSnoopingVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVersion.setStatus("current")


class _IgmpSnoopingMaxMemberNumber_Type(Integer32):
    """Custom type igmpSnoopingMaxMemberNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_IgmpSnoopingMaxMemberNumber_Type.__name__ = "Integer32"
_IgmpSnoopingMaxMemberNumber_Object = MibScalar
igmpSnoopingMaxMemberNumber = _IgmpSnoopingMaxMemberNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 4),
    _IgmpSnoopingMaxMemberNumber_Type()
)
igmpSnoopingMaxMemberNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingMaxMemberNumber.setStatus("current")


class _IgmpSnoopingDiscardUnknownstatus_Type(Integer32):
    """Custom type igmpSnoopingDiscardUnknownstatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingDiscardUnknownstatus_Type.__name__ = "Integer32"
_IgmpSnoopingDiscardUnknownstatus_Object = MibScalar
igmpSnoopingDiscardUnknownstatus = _IgmpSnoopingDiscardUnknownstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 5),
    _IgmpSnoopingDiscardUnknownstatus_Type()
)
igmpSnoopingDiscardUnknownstatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingDiscardUnknownstatus.setStatus("current")


class _IgmpSnoopingReportSuppressionStatus_Type(Integer32):
    """Custom type igmpSnoopingReportSuppressionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingReportSuppressionStatus_Type.__name__ = "Integer32"
_IgmpSnoopingReportSuppressionStatus_Object = MibScalar
igmpSnoopingReportSuppressionStatus = _IgmpSnoopingReportSuppressionStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 6),
    _IgmpSnoopingReportSuppressionStatus_Type()
)
igmpSnoopingReportSuppressionStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingReportSuppressionStatus.setStatus("current")


class _IgmpSnoopingLastMemberQueryInterval_Type(Integer32):
    """Custom type igmpSnoopingLastMemberQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 25500),
    )


_IgmpSnoopingLastMemberQueryInterval_Type.__name__ = "Integer32"
_IgmpSnoopingLastMemberQueryInterval_Object = MibScalar
igmpSnoopingLastMemberQueryInterval = _IgmpSnoopingLastMemberQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 7),
    _IgmpSnoopingLastMemberQueryInterval_Type()
)
igmpSnoopingLastMemberQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingLastMemberQueryInterval.setStatus("current")


class _IgmpSnoopingQueryInterval_Type(Integer32):
    """Custom type igmpSnoopingQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 18000),
    )


_IgmpSnoopingQueryInterval_Type.__name__ = "Integer32"
_IgmpSnoopingQueryInterval_Object = MibScalar
igmpSnoopingQueryInterval = _IgmpSnoopingQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 8),
    _IgmpSnoopingQueryInterval_Type()
)
igmpSnoopingQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingQueryInterval.setStatus("current")


class _IgmpSnoopingQueryMaxResponseTime_Type(Integer32):
    """Custom type igmpSnoopingQueryMaxResponseTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_IgmpSnoopingQueryMaxResponseTime_Type.__name__ = "Integer32"
_IgmpSnoopingQueryMaxResponseTime_Object = MibScalar
igmpSnoopingQueryMaxResponseTime = _IgmpSnoopingQueryMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 9),
    _IgmpSnoopingQueryMaxResponseTime_Type()
)
igmpSnoopingQueryMaxResponseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingQueryMaxResponseTime.setStatus("current")
_IgmpSnoopingVlanTable_Object = MibTable
igmpSnoopingVlanTable = _IgmpSnoopingVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10)
)
if mibBuilder.loadTexts:
    igmpSnoopingVlanTable.setStatus("current")
_IgmpSnoopingVlanEntry_Object = MibTableRow
igmpSnoopingVlanEntry = _IgmpSnoopingVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1)
)
igmpSnoopingVlanEntry.setIndexNames(
    (0, "SWITCH", "igmpSnoopingVlanID"),
)
if mibBuilder.loadTexts:
    igmpSnoopingVlanEntry.setStatus("current")


class _IgmpSnoopingVlanID_Type(Integer32):
    """Custom type igmpSnoopingVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IgmpSnoopingVlanID_Type.__name__ = "Integer32"
_IgmpSnoopingVlanID_Object = MibTableColumn
igmpSnoopingVlanID = _IgmpSnoopingVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 1),
    _IgmpSnoopingVlanID_Type()
)
igmpSnoopingVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpSnoopingVlanID.setStatus("current")


class _IgmpSnoopingVlanEnabled_Type(Integer32):
    """Custom type igmpSnoopingVlanEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingVlanEnabled_Type.__name__ = "Integer32"
_IgmpSnoopingVlanEnabled_Object = MibTableColumn
igmpSnoopingVlanEnabled = _IgmpSnoopingVlanEnabled_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 2),
    _IgmpSnoopingVlanEnabled_Type()
)
igmpSnoopingVlanEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanEnabled.setStatus("current")


class _IgmpSnoopingVlanFastLeaveStatus_Type(Integer32):
    """Custom type igmpSnoopingVlanFastLeaveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingVlanFastLeaveStatus_Type.__name__ = "Integer32"
_IgmpSnoopingVlanFastLeaveStatus_Object = MibTableColumn
igmpSnoopingVlanFastLeaveStatus = _IgmpSnoopingVlanFastLeaveStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 3),
    _IgmpSnoopingVlanFastLeaveStatus_Type()
)
igmpSnoopingVlanFastLeaveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanFastLeaveStatus.setStatus("current")


class _IgmpSnoopingVlanReportSuppressionStatus_Type(Integer32):
    """Custom type igmpSnoopingVlanReportSuppressionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingVlanReportSuppressionStatus_Type.__name__ = "Integer32"
_IgmpSnoopingVlanReportSuppressionStatus_Object = MibTableColumn
igmpSnoopingVlanReportSuppressionStatus = _IgmpSnoopingVlanReportSuppressionStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 4),
    _IgmpSnoopingVlanReportSuppressionStatus_Type()
)
igmpSnoopingVlanReportSuppressionStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanReportSuppressionStatus.setStatus("current")


class _IgmpSnoopingVlanVersion_Type(Integer32):
    """Custom type igmpSnoopingVlanVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_IgmpSnoopingVlanVersion_Type.__name__ = "Integer32"
_IgmpSnoopingVlanVersion_Object = MibTableColumn
igmpSnoopingVlanVersion = _IgmpSnoopingVlanVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 5),
    _IgmpSnoopingVlanVersion_Type()
)
igmpSnoopingVlanVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanVersion.setStatus("current")


class _IgmpSnoopingVlanMaxMemberNumber_Type(Integer32):
    """Custom type igmpSnoopingVlanMaxMemberNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_IgmpSnoopingVlanMaxMemberNumber_Type.__name__ = "Integer32"
_IgmpSnoopingVlanMaxMemberNumber_Object = MibTableColumn
igmpSnoopingVlanMaxMemberNumber = _IgmpSnoopingVlanMaxMemberNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 6),
    _IgmpSnoopingVlanMaxMemberNumber_Type()
)
igmpSnoopingVlanMaxMemberNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanMaxMemberNumber.setStatus("current")


class _IgmpSnoopingVlanDiscardUnknownStatus_Type(Integer32):
    """Custom type igmpSnoopingVlanDiscardUnknownStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpSnoopingVlanDiscardUnknownStatus_Type.__name__ = "Integer32"
_IgmpSnoopingVlanDiscardUnknownStatus_Object = MibTableColumn
igmpSnoopingVlanDiscardUnknownStatus = _IgmpSnoopingVlanDiscardUnknownStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 7),
    _IgmpSnoopingVlanDiscardUnknownStatus_Type()
)
igmpSnoopingVlanDiscardUnknownStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanDiscardUnknownStatus.setStatus("current")


class _IgmpSnoopingVlanGroupAccesslist_Type(OctetString):
    """Custom type igmpSnoopingVlanGroupAccesslist based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_IgmpSnoopingVlanGroupAccesslist_Type.__name__ = "OctetString"
_IgmpSnoopingVlanGroupAccesslist_Object = MibTableColumn
igmpSnoopingVlanGroupAccesslist = _IgmpSnoopingVlanGroupAccesslist_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 8),
    _IgmpSnoopingVlanGroupAccesslist_Type()
)
igmpSnoopingVlanGroupAccesslist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanGroupAccesslist.setStatus("current")


class _IgmpSnoopingVlanLastMemberQueryInterval_Type(Integer32):
    """Custom type igmpSnoopingVlanLastMemberQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 25500),
    )


_IgmpSnoopingVlanLastMemberQueryInterval_Type.__name__ = "Integer32"
_IgmpSnoopingVlanLastMemberQueryInterval_Object = MibTableColumn
igmpSnoopingVlanLastMemberQueryInterval = _IgmpSnoopingVlanLastMemberQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 10),
    _IgmpSnoopingVlanLastMemberQueryInterval_Type()
)
igmpSnoopingVlanLastMemberQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanLastMemberQueryInterval.setStatus("current")
_IgmpSnoopingVlanQuerier_Type = EnabledStatus
_IgmpSnoopingVlanQuerier_Object = MibTableColumn
igmpSnoopingVlanQuerier = _IgmpSnoopingVlanQuerier_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 11),
    _IgmpSnoopingVlanQuerier_Type()
)
igmpSnoopingVlanQuerier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQuerier.setStatus("current")
_IgmpSnoopingVlanQuerierOperationalAddress_Type = IpAddress
_IgmpSnoopingVlanQuerierOperationalAddress_Object = MibTableColumn
igmpSnoopingVlanQuerierOperationalAddress = _IgmpSnoopingVlanQuerierOperationalAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 12),
    _IgmpSnoopingVlanQuerierOperationalAddress_Type()
)
igmpSnoopingVlanQuerierOperationalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQuerierOperationalAddress.setStatus("current")
_IgmpSnoopingVlanQuerierConfigureAddress_Type = IpAddress
_IgmpSnoopingVlanQuerierConfigureAddress_Object = MibTableColumn
igmpSnoopingVlanQuerierConfigureAddress = _IgmpSnoopingVlanQuerierConfigureAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 13),
    _IgmpSnoopingVlanQuerierConfigureAddress_Type()
)
igmpSnoopingVlanQuerierConfigureAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQuerierConfigureAddress.setStatus("current")


class _IgmpSnoopingVlanQuerierTimeout_Type(Integer32):
    """Custom type igmpSnoopingVlanQuerierTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_IgmpSnoopingVlanQuerierTimeout_Type.__name__ = "Integer32"
_IgmpSnoopingVlanQuerierTimeout_Object = MibTableColumn
igmpSnoopingVlanQuerierTimeout = _IgmpSnoopingVlanQuerierTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 14),
    _IgmpSnoopingVlanQuerierTimeout_Type()
)
igmpSnoopingVlanQuerierTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQuerierTimeout.setStatus("current")


class _IgmpSnoopingVlanQueryInterval_Type(Integer32):
    """Custom type igmpSnoopingVlanQueryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 18000),
    )


_IgmpSnoopingVlanQueryInterval_Type.__name__ = "Integer32"
_IgmpSnoopingVlanQueryInterval_Object = MibTableColumn
igmpSnoopingVlanQueryInterval = _IgmpSnoopingVlanQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 15),
    _IgmpSnoopingVlanQueryInterval_Type()
)
igmpSnoopingVlanQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQueryInterval.setStatus("current")


class _IgmpSnoopingVlanQueryMaxResponseTime_Type(Integer32):
    """Custom type igmpSnoopingVlanQueryMaxResponseTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_IgmpSnoopingVlanQueryMaxResponseTime_Type.__name__ = "Integer32"
_IgmpSnoopingVlanQueryMaxResponseTime_Object = MibTableColumn
igmpSnoopingVlanQueryMaxResponseTime = _IgmpSnoopingVlanQueryMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 16),
    _IgmpSnoopingVlanQueryMaxResponseTime_Type()
)
igmpSnoopingVlanQueryMaxResponseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanQueryMaxResponseTime.setStatus("current")
_IgmpSnoopingVlanStatusGrpJoinsCnt_Type = Counter32
_IgmpSnoopingVlanStatusGrpJoinsCnt_Object = MibTableColumn
igmpSnoopingVlanStatusGrpJoinsCnt = _IgmpSnoopingVlanStatusGrpJoinsCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 17),
    _IgmpSnoopingVlanStatusGrpJoinsCnt_Type()
)
igmpSnoopingVlanStatusGrpJoinsCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanStatusGrpJoinsCnt.setStatus("obsolete")
_IgmpSnoopingVlanStatusGrpLeavesCnt_Type = Counter32
_IgmpSnoopingVlanStatusGrpLeavesCnt_Object = MibTableColumn
igmpSnoopingVlanStatusGrpLeavesCnt = _IgmpSnoopingVlanStatusGrpLeavesCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 18),
    _IgmpSnoopingVlanStatusGrpLeavesCnt_Type()
)
igmpSnoopingVlanStatusGrpLeavesCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanStatusGrpLeavesCnt.setStatus("obsolete")
_IgmpSnoopingVlanStatusV1QuerierWCnt_Type = Counter32
_IgmpSnoopingVlanStatusV1QuerierWCnt_Object = MibTableColumn
igmpSnoopingVlanStatusV1QuerierWCnt = _IgmpSnoopingVlanStatusV1QuerierWCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 19),
    _IgmpSnoopingVlanStatusV1QuerierWCnt_Type()
)
igmpSnoopingVlanStatusV1QuerierWCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanStatusV1QuerierWCnt.setStatus("obsolete")
_IgmpSnoopingVlanStatusV2QuerierWCnt_Type = Counter32
_IgmpSnoopingVlanStatusV2QuerierWCnt_Object = MibTableColumn
igmpSnoopingVlanStatusV2QuerierWCnt = _IgmpSnoopingVlanStatusV2QuerierWCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 20),
    _IgmpSnoopingVlanStatusV2QuerierWCnt_Type()
)
igmpSnoopingVlanStatusV2QuerierWCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanStatusV2QuerierWCnt.setStatus("obsolete")


class _IgmpSnoopingVlanStatusResetCounters_Type(Integer32):
    """Custom type igmpSnoopingVlanStatusResetCounters based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_IgmpSnoopingVlanStatusResetCounters_Type.__name__ = "Integer32"
_IgmpSnoopingVlanStatusResetCounters_Object = MibTableColumn
igmpSnoopingVlanStatusResetCounters = _IgmpSnoopingVlanStatusResetCounters_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 21),
    _IgmpSnoopingVlanStatusResetCounters_Type()
)
igmpSnoopingVlanStatusResetCounters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpSnoopingVlanStatusResetCounters.setStatus("obsolete")
_IgmpSnoopingVlanGrpNum_Type = Integer32
_IgmpSnoopingVlanGrpNum_Object = MibTableColumn
igmpSnoopingVlanGrpNum = _IgmpSnoopingVlanGrpNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 22),
    _IgmpSnoopingVlanGrpNum_Type()
)
igmpSnoopingVlanGrpNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanGrpNum.setStatus("current")
_IgmpSnoopingVlanElectedQuerierAddress_Type = IpAddress
_IgmpSnoopingVlanElectedQuerierAddress_Object = MibTableColumn
igmpSnoopingVlanElectedQuerierAddress = _IgmpSnoopingVlanElectedQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 10, 1, 23),
    _IgmpSnoopingVlanElectedQuerierAddress_Type()
)
igmpSnoopingVlanElectedQuerierAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingVlanElectedQuerierAddress.setStatus("current")
_IgmpSnoopingMrouterPortTable_Object = MibTable
igmpSnoopingMrouterPortTable = _IgmpSnoopingMrouterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 11)
)
if mibBuilder.loadTexts:
    igmpSnoopingMrouterPortTable.setStatus("current")
_IgmpSnoopingMrouterPortEntry_Object = MibTableRow
igmpSnoopingMrouterPortEntry = _IgmpSnoopingMrouterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 11, 1)
)
igmpSnoopingMrouterPortEntry.setIndexNames(
    (0, "SWITCH", "igmpSnoopingVlanid"),
    (0, "SWITCH", "igmpSnoopingmrouterPort"),
)
if mibBuilder.loadTexts:
    igmpSnoopingMrouterPortEntry.setStatus("current")


class _IgmpSnoopingVlanid_Type(Integer32):
    """Custom type igmpSnoopingVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IgmpSnoopingVlanid_Type.__name__ = "Integer32"
_IgmpSnoopingVlanid_Object = MibTableColumn
igmpSnoopingVlanid = _IgmpSnoopingVlanid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 11, 1, 1),
    _IgmpSnoopingVlanid_Type()
)
igmpSnoopingVlanid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpSnoopingVlanid.setStatus("current")


class _IgmpSnoopingmrouterPort_Type(Integer32):
    """Custom type igmpSnoopingmrouterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1152),
    )


_IgmpSnoopingmrouterPort_Type.__name__ = "Integer32"
_IgmpSnoopingmrouterPort_Object = MibTableColumn
igmpSnoopingmrouterPort = _IgmpSnoopingmrouterPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 11, 1, 2),
    _IgmpSnoopingmrouterPort_Type()
)
igmpSnoopingmrouterPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpSnoopingmrouterPort.setStatus("current")
_IgmpSnoopingmrouterPortRowStatus_Type = RowStatus
_IgmpSnoopingmrouterPortRowStatus_Object = MibTableColumn
igmpSnoopingmrouterPortRowStatus = _IgmpSnoopingmrouterPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 11, 1, 3),
    _IgmpSnoopingmrouterPortRowStatus_Type()
)
igmpSnoopingmrouterPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    igmpSnoopingmrouterPortRowStatus.setStatus("current")
_IgmpSnoopingGrpNum_Type = Integer32
_IgmpSnoopingGrpNum_Object = MibScalar
igmpSnoopingGrpNum = _IgmpSnoopingGrpNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 9, 1, 12),
    _IgmpSnoopingGrpNum_Type()
)
igmpSnoopingGrpNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    igmpSnoopingGrpNum.setStatus("current")
_LswIgmpsnoopingTrap_ObjectIdentity = ObjectIdentity
lswIgmpsnoopingTrap = _LswIgmpsnoopingTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 9, 2)
)
_LinkAgg_ObjectIdentity = ObjectIdentity
linkAgg = _LinkAgg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 10)
)


class _LinkAggLoadBalance_Type(Bits):
    """Custom type linkAggLoadBalance based on Bits"""
    namedValues = NamedValues(
        *(("dst-mac", 0),
          ("src-mac", 1),
          ("src-ip", 2),
          ("dst-ip", 3),
          ("src-port", 4),
          ("dst-port", 5),
          ("ip-protocol", 6),
          ("vxlan-vni", 7),
          ("nvgre-vsid", 8),
          ("inner-dst-mac", 9),
          ("inner-src-mac", 10),
          ("inner-src-ip", 11),
          ("inner-dst-ip", 12),
          ("inner-src-port", 13),
          ("inner-dst-port", 14),
          ("inner-ip-protocol", 15))
    )

_LinkAggLoadBalance_Type.__name__ = "Bits"
_LinkAggLoadBalance_Object = MibScalar
linkAggLoadBalance = _LinkAggLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 1),
    _LinkAggLoadBalance_Type()
)
linkAggLoadBalance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    linkAggLoadBalance.setStatus("current")
_LacpObject_ObjectIdentity = ObjectIdentity
lacpObject = _LacpObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2)
)
_LacpSysPriorityCfg_ObjectIdentity = ObjectIdentity
lacpSysPriorityCfg = _LacpSysPriorityCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 1)
)


class _LacpSysPriority_Type(Integer32):
    """Custom type lacpSysPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpSysPriority_Type.__name__ = "Integer32"
_LacpSysPriority_Object = MibScalar
lacpSysPriority = _LacpSysPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 1, 1),
    _LacpSysPriority_Type()
)
lacpSysPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lacpSysPriority.setStatus("current")
_LacpIfCfgTable_Object = MibTable
lacpIfCfgTable = _LacpIfCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 2)
)
if mibBuilder.loadTexts:
    lacpIfCfgTable.setStatus("current")
_LacpIfCfgEntry_Object = MibTableRow
lacpIfCfgEntry = _LacpIfCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 2, 1)
)
lacpIfCfgEntry.setIndexNames(
    (0, "SWITCH", "lacpIfCfgAdminAggNumber"),
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lacpIfCfgEntry.setStatus("current")


class _LacpIfCfgAdminAggNumber_Type(Integer32):
    """Custom type lacpIfCfgAdminAggNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_LacpIfCfgAdminAggNumber_Type.__name__ = "Integer32"
_LacpIfCfgAdminAggNumber_Object = MibTableColumn
lacpIfCfgAdminAggNumber = _LacpIfCfgAdminAggNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 2, 1, 1),
    _LacpIfCfgAdminAggNumber_Type()
)
lacpIfCfgAdminAggNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lacpIfCfgAdminAggNumber.setStatus("current")


class _LacpIfCfgMode_Type(Integer32):
    """Custom type lacpIfCfgMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("passive", 1),
          ("active", 2))
    )


_LacpIfCfgMode_Type.__name__ = "Integer32"
_LacpIfCfgMode_Object = MibTableColumn
lacpIfCfgMode = _LacpIfCfgMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 2, 1, 2),
    _LacpIfCfgMode_Type()
)
lacpIfCfgMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lacpIfCfgMode.setStatus("current")
_LacpIfCfgRowStatus_Type = RowStatus
_LacpIfCfgRowStatus_Object = MibTableColumn
lacpIfCfgRowStatus = _LacpIfCfgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 2, 1, 3),
    _LacpIfCfgRowStatus_Type()
)
lacpIfCfgRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lacpIfCfgRowStatus.setStatus("current")
_LacpIfCfgParaTable_Object = MibTable
lacpIfCfgParaTable = _LacpIfCfgParaTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 3)
)
if mibBuilder.loadTexts:
    lacpIfCfgParaTable.setStatus("current")
_LacpIfCfgParaEntry_Object = MibTableRow
lacpIfCfgParaEntry = _LacpIfCfgParaEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 3, 1)
)
lacpIfCfgParaEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lacpIfCfgParaEntry.setStatus("current")


class _LacpIfCfgParaPriority_Type(Integer32):
    """Custom type lacpIfCfgParaPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpIfCfgParaPriority_Type.__name__ = "Integer32"
_LacpIfCfgParaPriority_Object = MibTableColumn
lacpIfCfgParaPriority = _LacpIfCfgParaPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 3, 1, 1),
    _LacpIfCfgParaPriority_Type()
)
lacpIfCfgParaPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lacpIfCfgParaPriority.setStatus("current")


class _LacpIfCfgParaTimeOut_Type(Integer32):
    """Custom type lacpIfCfgParaTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("short", 1),
          ("long", 2))
    )


_LacpIfCfgParaTimeOut_Type.__name__ = "Integer32"
_LacpIfCfgParaTimeOut_Object = MibTableColumn
lacpIfCfgParaTimeOut = _LacpIfCfgParaTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 3, 1, 2),
    _LacpIfCfgParaTimeOut_Type()
)
lacpIfCfgParaTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lacpIfCfgParaTimeOut.setStatus("current")
_LacpPortStateTable_Object = MibTable
lacpPortStateTable = _LacpPortStateTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 4)
)
if mibBuilder.loadTexts:
    lacpPortStateTable.setStatus("current")
_LacpPortStateEntry_Object = MibTableRow
lacpPortStateEntry = _LacpPortStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 4, 1)
)
lacpPortStateEntry.setIndexNames(
    (0, "SWITCH", "lacpPortStateGroupNum"),
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lacpPortStateEntry.setStatus("current")


class _LacpPortStateGroupNum_Type(Integer32):
    """Custom type lacpPortStateGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_LacpPortStateGroupNum_Type.__name__ = "Integer32"
_LacpPortStateGroupNum_Object = MibTableColumn
lacpPortStateGroupNum = _LacpPortStateGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 4, 1, 1),
    _LacpPortStateGroupNum_Type()
)
lacpPortStateGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lacpPortStateGroupNum.setStatus("current")


class _LacpPortState_Type(OctetString):
    """Custom type lacpPortState based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_LacpPortState_Type.__name__ = "OctetString"
_LacpPortState_Object = MibTableColumn
lacpPortState = _LacpPortState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 4, 1, 2),
    _LacpPortState_Type()
)
lacpPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpPortState.setStatus("current")
_LacpActorStateTable_Object = MibTable
lacpActorStateTable = _LacpActorStateTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5)
)
if mibBuilder.loadTexts:
    lacpActorStateTable.setStatus("current")
_LacpActorStateEntry_Object = MibTableRow
lacpActorStateEntry = _LacpActorStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1)
)
lacpActorStateEntry.setIndexNames(
    (0, "SWITCH", "lacpActorGroupNum"),
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lacpActorStateEntry.setStatus("current")


class _LacpActorGroupNum_Type(Integer32):
    """Custom type lacpActorGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_LacpActorGroupNum_Type.__name__ = "Integer32"
_LacpActorGroupNum_Object = MibTableColumn
lacpActorGroupNum = _LacpActorGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 1),
    _LacpActorGroupNum_Type()
)
lacpActorGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lacpActorGroupNum.setStatus("current")


class _LacpActorSystemId_Type(OctetString):
    """Custom type lacpActorSystemId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_LacpActorSystemId_Type.__name__ = "OctetString"
_LacpActorSystemId_Object = MibTableColumn
lacpActorSystemId = _LacpActorSystemId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 2),
    _LacpActorSystemId_Type()
)
lacpActorSystemId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorSystemId.setStatus("current")


class _LacpActorPortNum_Type(Integer32):
    """Custom type lacpActorPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpActorPortNum_Type.__name__ = "Integer32"
_LacpActorPortNum_Object = MibTableColumn
lacpActorPortNum = _LacpActorPortNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 3),
    _LacpActorPortNum_Type()
)
lacpActorPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortNum.setStatus("current")


class _LacpActorPortTransitPduType_Type(OctetString):
    """Custom type lacpActorPortTransitPduType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_LacpActorPortTransitPduType_Type.__name__ = "OctetString"
_LacpActorPortTransitPduType_Object = MibTableColumn
lacpActorPortTransitPduType = _LacpActorPortTransitPduType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 4),
    _LacpActorPortTransitPduType_Type()
)
lacpActorPortTransitPduType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortTransitPduType.setStatus("current")


class _LacpActorPortMode_Type(OctetString):
    """Custom type lacpActorPortMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_LacpActorPortMode_Type.__name__ = "OctetString"
_LacpActorPortMode_Object = MibTableColumn
lacpActorPortMode = _LacpActorPortMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 5),
    _LacpActorPortMode_Type()
)
lacpActorPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortMode.setStatus("current")


class _LacpActorPortPriority_Type(Integer32):
    """Custom type lacpActorPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpActorPortPriority_Type.__name__ = "Integer32"
_LacpActorPortPriority_Object = MibTableColumn
lacpActorPortPriority = _LacpActorPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 6),
    _LacpActorPortPriority_Type()
)
lacpActorPortPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortPriority.setStatus("current")


class _LacpActorPortOperKey_Type(Integer32):
    """Custom type lacpActorPortOperKey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpActorPortOperKey_Type.__name__ = "Integer32"
_LacpActorPortOperKey_Object = MibTableColumn
lacpActorPortOperKey = _LacpActorPortOperKey_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 7),
    _LacpActorPortOperKey_Type()
)
lacpActorPortOperKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortOperKey.setStatus("current")


class _LacpActorPortStatsFlag_Type(OctetString):
    """Custom type lacpActorPortStatsFlag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_LacpActorPortStatsFlag_Type.__name__ = "OctetString"
_LacpActorPortStatsFlag_Object = MibTableColumn
lacpActorPortStatsFlag = _LacpActorPortStatsFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 8),
    _LacpActorPortStatsFlag_Type()
)
lacpActorPortStatsFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortStatsFlag.setStatus("current")


class _LacpActorPortActivity_Type(OctetString):
    """Custom type lacpActorPortActivity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_LacpActorPortActivity_Type.__name__ = "OctetString"
_LacpActorPortActivity_Object = MibTableColumn
lacpActorPortActivity = _LacpActorPortActivity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 9),
    _LacpActorPortActivity_Type()
)
lacpActorPortActivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortActivity.setStatus("current")


class _LacpActorPortTimeout_Type(OctetString):
    """Custom type lacpActorPortTimeout based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_LacpActorPortTimeout_Type.__name__ = "OctetString"
_LacpActorPortTimeout_Object = MibTableColumn
lacpActorPortTimeout = _LacpActorPortTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 10),
    _LacpActorPortTimeout_Type()
)
lacpActorPortTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortTimeout.setStatus("current")


class _LacpActorPortAggregation_Type(OctetString):
    """Custom type lacpActorPortAggregation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortAggregation_Type.__name__ = "OctetString"
_LacpActorPortAggregation_Object = MibTableColumn
lacpActorPortAggregation = _LacpActorPortAggregation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 11),
    _LacpActorPortAggregation_Type()
)
lacpActorPortAggregation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortAggregation.setStatus("current")


class _LacpActorPortSynchronization_Type(OctetString):
    """Custom type lacpActorPortSynchronization based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortSynchronization_Type.__name__ = "OctetString"
_LacpActorPortSynchronization_Object = MibTableColumn
lacpActorPortSynchronization = _LacpActorPortSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 12),
    _LacpActorPortSynchronization_Type()
)
lacpActorPortSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortSynchronization.setStatus("current")


class _LacpActorPortCollecting_Type(OctetString):
    """Custom type lacpActorPortCollecting based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortCollecting_Type.__name__ = "OctetString"
_LacpActorPortCollecting_Object = MibTableColumn
lacpActorPortCollecting = _LacpActorPortCollecting_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 13),
    _LacpActorPortCollecting_Type()
)
lacpActorPortCollecting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortCollecting.setStatus("current")


class _LacpActorPortDistributing_Type(OctetString):
    """Custom type lacpActorPortDistributing based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortDistributing_Type.__name__ = "OctetString"
_LacpActorPortDistributing_Object = MibTableColumn
lacpActorPortDistributing = _LacpActorPortDistributing_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 14),
    _LacpActorPortDistributing_Type()
)
lacpActorPortDistributing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortDistributing.setStatus("current")


class _LacpActorPortDefaulted_Type(OctetString):
    """Custom type lacpActorPortDefaulted based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortDefaulted_Type.__name__ = "OctetString"
_LacpActorPortDefaulted_Object = MibTableColumn
lacpActorPortDefaulted = _LacpActorPortDefaulted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 15),
    _LacpActorPortDefaulted_Type()
)
lacpActorPortDefaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortDefaulted.setStatus("current")


class _LacpActorPortExpired_Type(OctetString):
    """Custom type lacpActorPortExpired based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpActorPortExpired_Type.__name__ = "OctetString"
_LacpActorPortExpired_Object = MibTableColumn
lacpActorPortExpired = _LacpActorPortExpired_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 5, 1, 16),
    _LacpActorPortExpired_Type()
)
lacpActorPortExpired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpActorPortExpired.setStatus("current")
_LacpNeighborStateTable_Object = MibTable
lacpNeighborStateTable = _LacpNeighborStateTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6)
)
if mibBuilder.loadTexts:
    lacpNeighborStateTable.setStatus("current")
_LacpNeighborStateEntry_Object = MibTableRow
lacpNeighborStateEntry = _LacpNeighborStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1)
)
lacpNeighborStateEntry.setIndexNames(
    (0, "SWITCH", "lacpNeighborGroupNum"),
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    lacpNeighborStateEntry.setStatus("current")


class _LacpNeighborGroupNum_Type(Integer32):
    """Custom type lacpNeighborGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_LacpNeighborGroupNum_Type.__name__ = "Integer32"
_LacpNeighborGroupNum_Object = MibTableColumn
lacpNeighborGroupNum = _LacpNeighborGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 1),
    _LacpNeighborGroupNum_Type()
)
lacpNeighborGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lacpNeighborGroupNum.setStatus("current")


class _LacpNeighborSystemId_Type(OctetString):
    """Custom type lacpNeighborSystemId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_LacpNeighborSystemId_Type.__name__ = "OctetString"
_LacpNeighborSystemId_Object = MibTableColumn
lacpNeighborSystemId = _LacpNeighborSystemId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 2),
    _LacpNeighborSystemId_Type()
)
lacpNeighborSystemId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborSystemId.setStatus("current")


class _LacpNeighborPortNum_Type(Integer32):
    """Custom type lacpNeighborPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpNeighborPortNum_Type.__name__ = "Integer32"
_LacpNeighborPortNum_Object = MibTableColumn
lacpNeighborPortNum = _LacpNeighborPortNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 3),
    _LacpNeighborPortNum_Type()
)
lacpNeighborPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortNum.setStatus("current")


class _LacpNeighborPortTransitPduType_Type(OctetString):
    """Custom type lacpNeighborPortTransitPduType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_LacpNeighborPortTransitPduType_Type.__name__ = "OctetString"
_LacpNeighborPortTransitPduType_Object = MibTableColumn
lacpNeighborPortTransitPduType = _LacpNeighborPortTransitPduType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 4),
    _LacpNeighborPortTransitPduType_Type()
)
lacpNeighborPortTransitPduType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortTransitPduType.setStatus("current")


class _LacpNeighborPortMode_Type(OctetString):
    """Custom type lacpNeighborPortMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_LacpNeighborPortMode_Type.__name__ = "OctetString"
_LacpNeighborPortMode_Object = MibTableColumn
lacpNeighborPortMode = _LacpNeighborPortMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 5),
    _LacpNeighborPortMode_Type()
)
lacpNeighborPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortMode.setStatus("current")


class _LacpNeighborPortPriority_Type(Integer32):
    """Custom type lacpNeighborPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpNeighborPortPriority_Type.__name__ = "Integer32"
_LacpNeighborPortPriority_Object = MibTableColumn
lacpNeighborPortPriority = _LacpNeighborPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 6),
    _LacpNeighborPortPriority_Type()
)
lacpNeighborPortPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortPriority.setStatus("current")


class _LacpNeighborOperKey_Type(Integer32):
    """Custom type lacpNeighborOperKey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LacpNeighborOperKey_Type.__name__ = "Integer32"
_LacpNeighborOperKey_Object = MibTableColumn
lacpNeighborOperKey = _LacpNeighborOperKey_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 7),
    _LacpNeighborOperKey_Type()
)
lacpNeighborOperKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborOperKey.setStatus("current")


class _LacpNeighborPortStatsFlag_Type(OctetString):
    """Custom type lacpNeighborPortStatsFlag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_LacpNeighborPortStatsFlag_Type.__name__ = "OctetString"
_LacpNeighborPortStatsFlag_Object = MibTableColumn
lacpNeighborPortStatsFlag = _LacpNeighborPortStatsFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 8),
    _LacpNeighborPortStatsFlag_Type()
)
lacpNeighborPortStatsFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortStatsFlag.setStatus("current")


class _LacpNeighborPortActivity_Type(OctetString):
    """Custom type lacpNeighborPortActivity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_LacpNeighborPortActivity_Type.__name__ = "OctetString"
_LacpNeighborPortActivity_Object = MibTableColumn
lacpNeighborPortActivity = _LacpNeighborPortActivity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 9),
    _LacpNeighborPortActivity_Type()
)
lacpNeighborPortActivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortActivity.setStatus("current")


class _LacpNeighborPortTimeout_Type(OctetString):
    """Custom type lacpNeighborPortTimeout based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_LacpNeighborPortTimeout_Type.__name__ = "OctetString"
_LacpNeighborPortTimeout_Object = MibTableColumn
lacpNeighborPortTimeout = _LacpNeighborPortTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 10),
    _LacpNeighborPortTimeout_Type()
)
lacpNeighborPortTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortTimeout.setStatus("current")


class _LacpNeighborPortAggregation_Type(OctetString):
    """Custom type lacpNeighborPortAggregation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortAggregation_Type.__name__ = "OctetString"
_LacpNeighborPortAggregation_Object = MibTableColumn
lacpNeighborPortAggregation = _LacpNeighborPortAggregation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 11),
    _LacpNeighborPortAggregation_Type()
)
lacpNeighborPortAggregation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortAggregation.setStatus("current")


class _LacpNeighborPortSynchronization_Type(OctetString):
    """Custom type lacpNeighborPortSynchronization based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortSynchronization_Type.__name__ = "OctetString"
_LacpNeighborPortSynchronization_Object = MibTableColumn
lacpNeighborPortSynchronization = _LacpNeighborPortSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 12),
    _LacpNeighborPortSynchronization_Type()
)
lacpNeighborPortSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortSynchronization.setStatus("current")


class _LacpNeighborPortCollecting_Type(OctetString):
    """Custom type lacpNeighborPortCollecting based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortCollecting_Type.__name__ = "OctetString"
_LacpNeighborPortCollecting_Object = MibTableColumn
lacpNeighborPortCollecting = _LacpNeighborPortCollecting_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 13),
    _LacpNeighborPortCollecting_Type()
)
lacpNeighborPortCollecting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortCollecting.setStatus("current")


class _LacpNeighborPortDistributing_Type(OctetString):
    """Custom type lacpNeighborPortDistributing based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortDistributing_Type.__name__ = "OctetString"
_LacpNeighborPortDistributing_Object = MibTableColumn
lacpNeighborPortDistributing = _LacpNeighborPortDistributing_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 14),
    _LacpNeighborPortDistributing_Type()
)
lacpNeighborPortDistributing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortDistributing.setStatus("current")


class _LacpNeighborPortDefaulted_Type(OctetString):
    """Custom type lacpNeighborPortDefaulted based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortDefaulted_Type.__name__ = "OctetString"
_LacpNeighborPortDefaulted_Object = MibTableColumn
lacpNeighborPortDefaulted = _LacpNeighborPortDefaulted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 15),
    _LacpNeighborPortDefaulted_Type()
)
lacpNeighborPortDefaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortDefaulted.setStatus("current")


class _LacpNeighborPortExpired_Type(OctetString):
    """Custom type lacpNeighborPortExpired based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_LacpNeighborPortExpired_Type.__name__ = "OctetString"
_LacpNeighborPortExpired_Object = MibTableColumn
lacpNeighborPortExpired = _LacpNeighborPortExpired_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 6, 1, 16),
    _LacpNeighborPortExpired_Type()
)
lacpNeighborPortExpired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpNeighborPortExpired.setStatus("current")
_LacpCounterTable_Object = MibTable
lacpCounterTable = _LacpCounterTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7)
)
if mibBuilder.loadTexts:
    lacpCounterTable.setStatus("current")
_LacpCounterEntry_Object = MibTableRow
lacpCounterEntry = _LacpCounterEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1)
)
lacpCounterEntry.setIndexNames(
    (0, "SWITCH", "lacpCounterGroupNum"),
)
if mibBuilder.loadTexts:
    lacpCounterEntry.setStatus("current")


class _LacpCounterGroupNum_Type(Integer32):
    """Custom type lacpCounterGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LacpCounterGroupNum_Type.__name__ = "Integer32"
_LacpCounterGroupNum_Object = MibTableColumn
lacpCounterGroupNum = _LacpCounterGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1, 1),
    _LacpCounterGroupNum_Type()
)
lacpCounterGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lacpCounterGroupNum.setStatus("current")
_LacpCounterSendPduCnt_Type = Integer32
_LacpCounterSendPduCnt_Object = MibTableColumn
lacpCounterSendPduCnt = _LacpCounterSendPduCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1, 2),
    _LacpCounterSendPduCnt_Type()
)
lacpCounterSendPduCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpCounterSendPduCnt.setStatus("current")
_LacpCounterRecvPduCnt_Type = Integer32
_LacpCounterRecvPduCnt_Object = MibTableColumn
lacpCounterRecvPduCnt = _LacpCounterRecvPduCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1, 3),
    _LacpCounterRecvPduCnt_Type()
)
lacpCounterRecvPduCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpCounterRecvPduCnt.setStatus("current")
_LacpCounterSendErrPktCnt_Type = Integer32
_LacpCounterSendErrPktCnt_Object = MibTableColumn
lacpCounterSendErrPktCnt = _LacpCounterSendErrPktCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1, 4),
    _LacpCounterSendErrPktCnt_Type()
)
lacpCounterSendErrPktCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpCounterSendErrPktCnt.setStatus("current")
_LacpCounterRecvErrPktCnt_Type = Integer32
_LacpCounterRecvErrPktCnt_Object = MibTableColumn
lacpCounterRecvErrPktCnt = _LacpCounterRecvErrPktCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 7, 1, 5),
    _LacpCounterRecvErrPktCnt_Type()
)
lacpCounterRecvErrPktCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lacpCounterRecvErrPktCnt.setStatus("current")
_LacpClearCntCfg_ObjectIdentity = ObjectIdentity
lacpClearCntCfg = _LacpClearCntCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 8)
)


class _LacpClearCounter_Type(Integer32):
    """Custom type lacpClearCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_LacpClearCounter_Type.__name__ = "Integer32"
_LacpClearCounter_Object = MibScalar
lacpClearCounter = _LacpClearCounter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 2, 8, 1),
    _LacpClearCounter_Type()
)
lacpClearCounter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lacpClearCounter.setStatus("current")
_StaticLinkAggObject_ObjectIdentity = ObjectIdentity
staticLinkAggObject = _StaticLinkAggObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3)
)
_StaticLinkAggTable_Object = MibTable
staticLinkAggTable = _StaticLinkAggTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1)
)
if mibBuilder.loadTexts:
    staticLinkAggTable.setStatus("current")
_StaticLinkAggEntry_Object = MibTableRow
staticLinkAggEntry = _StaticLinkAggEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1)
)
staticLinkAggEntry.setIndexNames(
    (0, "SWITCH", "staticLinkAggNumber"),
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    staticLinkAggEntry.setStatus("current")


class _StaticLinkAggNumber_Type(Integer32):
    """Custom type staticLinkAggNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_StaticLinkAggNumber_Type.__name__ = "Integer32"
_StaticLinkAggNumber_Object = MibTableColumn
staticLinkAggNumber = _StaticLinkAggNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 1),
    _StaticLinkAggNumber_Type()
)
staticLinkAggNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    staticLinkAggNumber.setStatus("current")


class _StaticLinkAggIndex_Type(Integer32):
    """Custom type staticLinkAggIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaticLinkAggIndex_Type.__name__ = "Integer32"
_StaticLinkAggIndex_Object = MibTableColumn
staticLinkAggIndex = _StaticLinkAggIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 2),
    _StaticLinkAggIndex_Type()
)
staticLinkAggIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staticLinkAggIndex.setStatus("current")
_StaticLinkAggName_Type = OctetString
_StaticLinkAggName_Object = MibTableColumn
staticLinkAggName = _StaticLinkAggName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 3),
    _StaticLinkAggName_Type()
)
staticLinkAggName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staticLinkAggName.setStatus("current")


class _StaticLinkAggMemberIndex_Type(Integer32):
    """Custom type staticLinkAggMemberIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaticLinkAggMemberIndex_Type.__name__ = "Integer32"
_StaticLinkAggMemberIndex_Object = MibTableColumn
staticLinkAggMemberIndex = _StaticLinkAggMemberIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 4),
    _StaticLinkAggMemberIndex_Type()
)
staticLinkAggMemberIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staticLinkAggMemberIndex.setStatus("current")


class _StaticLinkAggMemberName_Type(OctetString):
    """Custom type staticLinkAggMemberName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 10),
    )


_StaticLinkAggMemberName_Type.__name__ = "OctetString"
_StaticLinkAggMemberName_Object = MibTableColumn
staticLinkAggMemberName = _StaticLinkAggMemberName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 5),
    _StaticLinkAggMemberName_Type()
)
staticLinkAggMemberName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staticLinkAggMemberName.setStatus("current")


class _StaticLinkAggMemberEnable_Type(Integer32):
    """Custom type staticLinkAggMemberEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("bundle", 1),
          ("adminDown", 2))
    )


_StaticLinkAggMemberEnable_Type.__name__ = "Integer32"
_StaticLinkAggMemberEnable_Object = MibTableColumn
staticLinkAggMemberEnable = _StaticLinkAggMemberEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 6),
    _StaticLinkAggMemberEnable_Type()
)
staticLinkAggMemberEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staticLinkAggMemberEnable.setStatus("current")
_StaticLinkAggMemberRowStatus_Type = RowStatus
_StaticLinkAggMemberRowStatus_Object = MibTableColumn
staticLinkAggMemberRowStatus = _StaticLinkAggMemberRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 10, 3, 1, 1, 7),
    _StaticLinkAggMemberRowStatus_Type()
)
staticLinkAggMemberRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    staticLinkAggMemberRowStatus.setStatus("current")
_QBridgeExt_ObjectIdentity = ObjectIdentity
qBridgeExt = _QBridgeExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 11)
)
_VlanExt_ObjectIdentity = ObjectIdentity
vlanExt = _VlanExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1)
)
_VlanTable_Object = MibTable
vlanTable = _VlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1)
)
if mibBuilder.loadTexts:
    vlanTable.setStatus("current")
_VlanEntry_Object = MibTableRow
vlanEntry = _VlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1)
)
vlanEntry.setIndexNames(
    (0, "SWITCH", "vlanIndex"),
)
if mibBuilder.loadTexts:
    vlanEntry.setStatus("current")
_VlanIndex_Type = VlanIndex
_VlanIndex_Object = MibTableColumn
vlanIndex = _VlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 1),
    _VlanIndex_Type()
)
vlanIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanIndex.setStatus("current")


class _VlanName_Type(OctetString):
    """Custom type vlanName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_VlanName_Type.__name__ = "OctetString"
_VlanName_Object = MibTableColumn
vlanName = _VlanName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 2),
    _VlanName_Type()
)
vlanName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanName.setStatus("current")


class _VlanStatus_Type(Integer32):
    """Custom type vlanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 1),
          ("active", 2))
    )


_VlanStatus_Type.__name__ = "Integer32"
_VlanStatus_Object = MibTableColumn
vlanStatus = _VlanStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 3),
    _VlanStatus_Type()
)
vlanStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanStatus.setStatus("current")
_VlanRowStatus_Type = RowStatus
_VlanRowStatus_Object = MibTableColumn
vlanRowStatus = _VlanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 4),
    _VlanRowStatus_Type()
)
vlanRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanRowStatus.setStatus("current")


class _VlanIfConfig_Type(Integer32):
    """Custom type vlanIfConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("create", 1),
          ("destroy", 2))
    )


_VlanIfConfig_Type.__name__ = "Integer32"
_VlanIfConfig_Object = MibTableColumn
vlanIfConfig = _VlanIfConfig_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 5),
    _VlanIfConfig_Type()
)
vlanIfConfig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanIfConfig.setStatus("current")
_VlanStatsPktIn_Type = Counter64
_VlanStatsPktIn_Object = MibTableColumn
vlanStatsPktIn = _VlanStatsPktIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 7),
    _VlanStatsPktIn_Type()
)
vlanStatsPktIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsPktIn.setStatus("current")
_VlanStatsPktOut_Type = Counter64
_VlanStatsPktOut_Object = MibTableColumn
vlanStatsPktOut = _VlanStatsPktOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 8),
    _VlanStatsPktOut_Type()
)
vlanStatsPktOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsPktOut.setStatus("current")
_VlanStatsByteIn_Type = Counter64
_VlanStatsByteIn_Object = MibTableColumn
vlanStatsByteIn = _VlanStatsByteIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 9),
    _VlanStatsByteIn_Type()
)
vlanStatsByteIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsByteIn.setStatus("current")
_VlanStatsByteOut_Type = Counter64
_VlanStatsByteOut_Object = MibTableColumn
vlanStatsByteOut = _VlanStatsByteOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 10),
    _VlanStatsByteOut_Type()
)
vlanStatsByteOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vlanStatsByteOut.setStatus("current")


class _VlanStatsEn_Type(Integer32):
    """Custom type vlanStatsEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_VlanStatsEn_Type.__name__ = "Integer32"
_VlanStatsEn_Object = MibTableColumn
vlanStatsEn = _VlanStatsEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 1, 1, 11),
    _VlanStatsEn_Type()
)
vlanStatsEn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanStatsEn.setStatus("current")
_PortVlanTable_Object = MibTable
portVlanTable = _PortVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2)
)
if mibBuilder.loadTexts:
    portVlanTable.setStatus("current")
_PortVlanEntry_Object = MibTableRow
portVlanEntry = _PortVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1)
)
portVlanEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    portVlanEntry.setStatus("current")


class _VlanTagType_Type(Integer32):
    """Custom type vlanTagType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("qinq", 2),
          ("untagged", 3))
    )


_VlanTagType_Type.__name__ = "Integer32"
_VlanTagType_Object = MibTableColumn
vlanTagType = _VlanTagType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 1),
    _VlanTagType_Type()
)
vlanTagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanTagType.setStatus("current")
_Pvid_Type = Integer32
_Pvid_Object = MibTableColumn
pvid = _Pvid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 2),
    _Pvid_Type()
)
pvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pvid.setStatus("current")


class _IngressFilter_Type(Integer32):
    """Custom type ingressFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IngressFilter_Type.__name__ = "Integer32"
_IngressFilter_Object = MibTableColumn
ingressFilter = _IngressFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 3),
    _IngressFilter_Type()
)
ingressFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ingressFilter.setStatus("current")
_AllowedVlans_Type = VlanList
_AllowedVlans_Object = MibTableColumn
allowedVlans = _AllowedVlans_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 4),
    _AllowedVlans_Type()
)
allowedVlans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    allowedVlans.setStatus("current")
_AllowedVlanAdd_Type = VlanList
_AllowedVlanAdd_Object = MibTableColumn
allowedVlanAdd = _AllowedVlanAdd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 5),
    _AllowedVlanAdd_Type()
)
allowedVlanAdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    allowedVlanAdd.setStatus("current")
_AllowedVlanDel_Type = VlanList
_AllowedVlanDel_Object = MibTableColumn
allowedVlanDel = _AllowedVlanDel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 2, 1, 6),
    _AllowedVlanDel_Type()
)
allowedVlanDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    allowedVlanDel.setStatus("current")
_VlanReplaceDscpExpTable_Object = MibTable
vlanReplaceDscpExpTable = _VlanReplaceDscpExpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 3)
)
if mibBuilder.loadTexts:
    vlanReplaceDscpExpTable.setStatus("obsolete")
_VlanReplaceDscpExpEntry_Object = MibTableRow
vlanReplaceDscpExpEntry = _VlanReplaceDscpExpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 3, 1)
)
vlanReplaceDscpExpEntry.setIndexNames(
    (0, "SWITCH", "vlanReplaceDscpExpIndex"),
)
if mibBuilder.loadTexts:
    vlanReplaceDscpExpEntry.setStatus("obsolete")
_VlanReplaceDscpExpIndex_Type = VlanIndex
_VlanReplaceDscpExpIndex_Object = MibTableColumn
vlanReplaceDscpExpIndex = _VlanReplaceDscpExpIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 3, 1, 1),
    _VlanReplaceDscpExpIndex_Type()
)
vlanReplaceDscpExpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanReplaceDscpExpIndex.setStatus("obsolete")


class _VlanReplaceDscpExpEn_Type(Integer32):
    """Custom type vlanReplaceDscpExpEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_VlanReplaceDscpExpEn_Type.__name__ = "Integer32"
_VlanReplaceDscpExpEn_Object = MibTableColumn
vlanReplaceDscpExpEn = _VlanReplaceDscpExpEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 1, 3, 1, 2),
    _VlanReplaceDscpExpEn_Type()
)
vlanReplaceDscpExpEn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanReplaceDscpExpEn.setStatus("obsolete")
_FdbExt_ObjectIdentity = ObjectIdentity
fdbExt = _FdbExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2)
)
_UnicastTable_Object = MibTable
unicastTable = _UnicastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1)
)
if mibBuilder.loadTexts:
    unicastTable.setStatus("current")
_UnicastEntry_Object = MibTableRow
unicastEntry = _UnicastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1)
)
unicastEntry.setIndexNames(
    (0, "SWITCH", "vlanIndex"),
    (0, "SWITCH", "unicastAddress"),
    (0, "SWITCH", "fdbPort"),
)
if mibBuilder.loadTexts:
    unicastEntry.setStatus("current")
_UnicastVID_Type = VlanIndex
_UnicastVID_Object = MibTableColumn
unicastVID = _UnicastVID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1, 1),
    _UnicastVID_Type()
)
unicastVID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    unicastVID.setStatus("current")
_UnicastAddress_Type = MacAddress
_UnicastAddress_Object = MibTableColumn
unicastAddress = _UnicastAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1, 2),
    _UnicastAddress_Type()
)
unicastAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    unicastAddress.setStatus("current")


class _FdbPort_Type(Integer32):
    """Custom type fdbPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FdbPort_Type.__name__ = "Integer32"
_FdbPort_Object = MibTableColumn
fdbPort = _FdbPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1, 3),
    _FdbPort_Type()
)
fdbPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fdbPort.setStatus("current")


class _FdbStatus_Type(Integer32):
    """Custom type fdbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("learned", 2),
          ("self", 3))
    )


_FdbStatus_Type.__name__ = "Integer32"
_FdbStatus_Object = MibTableColumn
fdbStatus = _FdbStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1, 4),
    _FdbStatus_Type()
)
fdbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fdbStatus.setStatus("current")
_FdbRowStatus_Type = RowStatus
_FdbRowStatus_Object = MibTableColumn
fdbRowStatus = _FdbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 1, 1, 5),
    _FdbRowStatus_Type()
)
fdbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fdbRowStatus.setStatus("current")
_MulticastTable_Object = MibTable
multicastTable = _MulticastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2)
)
if mibBuilder.loadTexts:
    multicastTable.setStatus("current")
_MulticastEntry_Object = MibTableRow
multicastEntry = _MulticastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2, 1)
)
multicastEntry.setIndexNames(
    (0, "SWITCH", "vlanIndex"),
    (0, "SWITCH", "multicastAddress"),
    (0, "SWITCH", "destinationPort"),
)
if mibBuilder.loadTexts:
    multicastEntry.setStatus("current")
_MulticastVID_Type = VlanIndex
_MulticastVID_Object = MibTableColumn
multicastVID = _MulticastVID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2, 1, 1),
    _MulticastVID_Type()
)
multicastVID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    multicastVID.setStatus("current")
_MulticastAddress_Type = MacAddress
_MulticastAddress_Object = MibTableColumn
multicastAddress = _MulticastAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2, 1, 2),
    _MulticastAddress_Type()
)
multicastAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    multicastAddress.setStatus("current")


class _DestinationPort_Type(Integer32):
    """Custom type destinationPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DestinationPort_Type.__name__ = "Integer32"
_DestinationPort_Object = MibTableColumn
destinationPort = _DestinationPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2, 1, 3),
    _DestinationPort_Type()
)
destinationPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    destinationPort.setStatus("current")
_MulticastRowStatus_Type = RowStatus
_MulticastRowStatus_Object = MibTableColumn
multicastRowStatus = _MulticastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 2, 1, 4),
    _MulticastRowStatus_Type()
)
multicastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    multicastRowStatus.setStatus("current")
_FilterTable_Object = MibTable
filterTable = _FilterTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 3)
)
if mibBuilder.loadTexts:
    filterTable.setStatus("current")
_FilterEntry_Object = MibTableRow
filterEntry = _FilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 3, 1)
)
filterEntry.setIndexNames(
    (0, "SWITCH", "filterAddress"),
)
if mibBuilder.loadTexts:
    filterEntry.setStatus("current")
_FilterAddress_Type = MacAddress
_FilterAddress_Object = MibTableColumn
filterAddress = _FilterAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 3, 1, 1),
    _FilterAddress_Type()
)
filterAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    filterAddress.setStatus("current")
_FilterRowStatus_Type = RowStatus
_FilterRowStatus_Object = MibTableColumn
filterRowStatus = _FilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 3, 1, 2),
    _FilterRowStatus_Type()
)
filterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    filterRowStatus.setStatus("current")


class _AddressClearOperation_Type(Integer32):
    """Custom type addressClearOperation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("filter", 3),
          ("multicast", 4))
    )


_AddressClearOperation_Type.__name__ = "Integer32"
_AddressClearOperation_Object = MibScalar
addressClearOperation = _AddressClearOperation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 4),
    _AddressClearOperation_Type()
)
addressClearOperation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    addressClearOperation.setStatus("current")


class _AddressAgingTime_Type(Integer32):
    """Custom type addressAgingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000000),
    )


_AddressAgingTime_Type.__name__ = "Integer32"
_AddressAgingTime_Object = MibScalar
addressAgingTime = _AddressAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 5),
    _AddressAgingTime_Type()
)
addressAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    addressAgingTime.setStatus("current")
_FdbExtTrap_ObjectIdentity = ObjectIdentity
fdbExtTrap = _FdbExtTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 10)
)
_VlanClass_ObjectIdentity = ObjectIdentity
vlanClass = _VlanClass_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3)
)
_VlanClassRuleIpTable_Object = MibTable
vlanClassRuleIpTable = _VlanClassRuleIpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1)
)
if mibBuilder.loadTexts:
    vlanClassRuleIpTable.setStatus("current")
_VlanClassRuleIpEntry_Object = MibTableRow
vlanClassRuleIpEntry = _VlanClassRuleIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1)
)
vlanClassRuleIpEntry.setIndexNames(
    (0, "SWITCH", "vlanClassRuleIpIndex"),
    (0, "SWITCH", "vlanClassRuleIpAddress"),
    (0, "SWITCH", "vlanClassRuleIpAddressLen"),
    (0, "SWITCH", "vlanClassIpVlanID"),
)
if mibBuilder.loadTexts:
    vlanClassRuleIpEntry.setStatus("current")
_VlanClassRuleIpIndex_Type = VlanClassRuleIndex
_VlanClassRuleIpIndex_Object = MibTableColumn
vlanClassRuleIpIndex = _VlanClassRuleIpIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1, 1),
    _VlanClassRuleIpIndex_Type()
)
vlanClassRuleIpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleIpIndex.setStatus("current")
_VlanClassRuleIpAddress_Type = IpAddress
_VlanClassRuleIpAddress_Object = MibTableColumn
vlanClassRuleIpAddress = _VlanClassRuleIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1, 2),
    _VlanClassRuleIpAddress_Type()
)
vlanClassRuleIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleIpAddress.setStatus("current")


class _VlanClassRuleIpAddressLen_Type(Integer32):
    """Custom type vlanClassRuleIpAddressLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_VlanClassRuleIpAddressLen_Type.__name__ = "Integer32"
_VlanClassRuleIpAddressLen_Object = MibTableColumn
vlanClassRuleIpAddressLen = _VlanClassRuleIpAddressLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1, 3),
    _VlanClassRuleIpAddressLen_Type()
)
vlanClassRuleIpAddressLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleIpAddressLen.setStatus("current")
_VlanClassIpVlanID_Type = VlanIndex
_VlanClassIpVlanID_Object = MibTableColumn
vlanClassIpVlanID = _VlanClassIpVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1, 4),
    _VlanClassIpVlanID_Type()
)
vlanClassIpVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassIpVlanID.setStatus("current")
_VlanClassRuleIpRowStatus_Type = RowStatus
_VlanClassRuleIpRowStatus_Object = MibTableColumn
vlanClassRuleIpRowStatus = _VlanClassRuleIpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 1, 1, 5),
    _VlanClassRuleIpRowStatus_Type()
)
vlanClassRuleIpRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassRuleIpRowStatus.setStatus("current")
_VlanClassRuleMacTable_Object = MibTable
vlanClassRuleMacTable = _VlanClassRuleMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2)
)
if mibBuilder.loadTexts:
    vlanClassRuleMacTable.setStatus("current")
_VlanClassRuleMacEntry_Object = MibTableRow
vlanClassRuleMacEntry = _VlanClassRuleMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2, 1)
)
vlanClassRuleMacEntry.setIndexNames(
    (0, "SWITCH", "vlanClassRuleMacIndex"),
    (0, "SWITCH", "vlanClassRuleMacAddress"),
    (0, "SWITCH", "vlanClassMacVlanID"),
)
if mibBuilder.loadTexts:
    vlanClassRuleMacEntry.setStatus("current")
_VlanClassRuleMacIndex_Type = VlanClassRuleIndex
_VlanClassRuleMacIndex_Object = MibTableColumn
vlanClassRuleMacIndex = _VlanClassRuleMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2, 1, 1),
    _VlanClassRuleMacIndex_Type()
)
vlanClassRuleMacIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleMacIndex.setStatus("current")
_VlanClassRuleMacAddress_Type = MacAddress
_VlanClassRuleMacAddress_Object = MibTableColumn
vlanClassRuleMacAddress = _VlanClassRuleMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2, 1, 2),
    _VlanClassRuleMacAddress_Type()
)
vlanClassRuleMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleMacAddress.setStatus("current")
_VlanClassMacVlanID_Type = VlanIndex
_VlanClassMacVlanID_Object = MibTableColumn
vlanClassMacVlanID = _VlanClassMacVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2, 1, 3),
    _VlanClassMacVlanID_Type()
)
vlanClassMacVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassMacVlanID.setStatus("current")
_VlanClassRuleMacRowStatus_Type = RowStatus
_VlanClassRuleMacRowStatus_Object = MibTableColumn
vlanClassRuleMacRowStatus = _VlanClassRuleMacRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 2, 1, 4),
    _VlanClassRuleMacRowStatus_Type()
)
vlanClassRuleMacRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassRuleMacRowStatus.setStatus("current")
_VlanClassRuleProtocolTable_Object = MibTable
vlanClassRuleProtocolTable = _VlanClassRuleProtocolTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3)
)
if mibBuilder.loadTexts:
    vlanClassRuleProtocolTable.setStatus("current")
_VlanClassRuleProtocolEntry_Object = MibTableRow
vlanClassRuleProtocolEntry = _VlanClassRuleProtocolEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3, 1)
)
vlanClassRuleProtocolEntry.setIndexNames(
    (0, "SWITCH", "vlanClassRuleProtocolIndex"),
    (0, "SWITCH", "vlanClassRuleProtocol"),
    (0, "SWITCH", "vlanClassProtocolVlanID"),
)
if mibBuilder.loadTexts:
    vlanClassRuleProtocolEntry.setStatus("current")
_VlanClassRuleProtocolIndex_Type = VlanClassRuleIndex
_VlanClassRuleProtocolIndex_Object = MibTableColumn
vlanClassRuleProtocolIndex = _VlanClassRuleProtocolIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3, 1, 1),
    _VlanClassRuleProtocolIndex_Type()
)
vlanClassRuleProtocolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleProtocolIndex.setStatus("current")
_VlanClassRuleProtocol_Type = VlanClassProtocol
_VlanClassRuleProtocol_Object = MibTableColumn
vlanClassRuleProtocol = _VlanClassRuleProtocol_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3, 1, 2),
    _VlanClassRuleProtocol_Type()
)
vlanClassRuleProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleProtocol.setStatus("current")
_VlanClassProtocolVlanID_Type = VlanIndex
_VlanClassProtocolVlanID_Object = MibTableColumn
vlanClassProtocolVlanID = _VlanClassProtocolVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3, 1, 3),
    _VlanClassProtocolVlanID_Type()
)
vlanClassProtocolVlanID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassProtocolVlanID.setStatus("current")
_VlanClassRuleProtocolRowStatus_Type = RowStatus
_VlanClassRuleProtocolRowStatus_Object = MibTableColumn
vlanClassRuleProtocolRowStatus = _VlanClassRuleProtocolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 3, 1, 4),
    _VlanClassRuleProtocolRowStatus_Type()
)
vlanClassRuleProtocolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassRuleProtocolRowStatus.setStatus("current")
_VlanClassGroupTable_Object = MibTable
vlanClassGroupTable = _VlanClassGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 5)
)
if mibBuilder.loadTexts:
    vlanClassGroupTable.setStatus("current")
_VlanClassGroupEntry_Object = MibTableRow
vlanClassGroupEntry = _VlanClassGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 5, 1)
)
vlanClassGroupEntry.setIndexNames(
    (0, "SWITCH", "vlanClassGroupIndex"),
    (0, "SWITCH", "vlanClassRuleIndex"),
)
if mibBuilder.loadTexts:
    vlanClassGroupEntry.setStatus("current")
_VlanClassGroupIndex_Type = VlanClassGroupIndex
_VlanClassGroupIndex_Object = MibTableColumn
vlanClassGroupIndex = _VlanClassGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 5, 1, 1),
    _VlanClassGroupIndex_Type()
)
vlanClassGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassGroupIndex.setStatus("current")
_VlanClassRuleIndex_Type = VlanClassRuleIndex
_VlanClassRuleIndex_Object = MibTableColumn
vlanClassRuleIndex = _VlanClassRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 5, 1, 2),
    _VlanClassRuleIndex_Type()
)
vlanClassRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassRuleIndex.setStatus("current")
_VlanClassGroupRowStatus_Type = RowStatus
_VlanClassGroupRowStatus_Object = MibTableColumn
vlanClassGroupRowStatus = _VlanClassGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 5, 1, 3),
    _VlanClassGroupRowStatus_Type()
)
vlanClassGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassGroupRowStatus.setStatus("current")
_VlanClassEnableTable_Object = MibTable
vlanClassEnableTable = _VlanClassEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6)
)
if mibBuilder.loadTexts:
    vlanClassEnableTable.setStatus("current")
_VlanClassEnableEntry_Object = MibTableRow
vlanClassEnableEntry = _VlanClassEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6, 1)
)
vlanClassEnableEntry.setIndexNames(
    (0, "SWITCH", "vlanClassEnableIfIndex"),
)
if mibBuilder.loadTexts:
    vlanClassEnableEntry.setStatus("current")


class _VlanClassEnableIfIndex_Type(Integer32):
    """Custom type vlanClassEnableIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VlanClassEnableIfIndex_Type.__name__ = "Integer32"
_VlanClassEnableIfIndex_Object = MibTableColumn
vlanClassEnableIfIndex = _VlanClassEnableIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6, 1, 1),
    _VlanClassEnableIfIndex_Type()
)
vlanClassEnableIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vlanClassEnableIfIndex.setStatus("current")
_VlanClassEnableGroup_Type = VlanClassGroupIndex
_VlanClassEnableGroup_Object = MibTableColumn
vlanClassEnableGroup = _VlanClassEnableGroup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6, 1, 2),
    _VlanClassEnableGroup_Type()
)
vlanClassEnableGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassEnableGroup.setStatus("current")
_VlanClassEnableBase_Type = VlanClassEnableBase
_VlanClassEnableBase_Object = MibTableColumn
vlanClassEnableBase = _VlanClassEnableBase_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6, 1, 3),
    _VlanClassEnableBase_Type()
)
vlanClassEnableBase.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassEnableBase.setStatus("current")
_VlanClassEnableRowStatus_Type = RowStatus
_VlanClassEnableRowStatus_Object = MibTableColumn
vlanClassEnableRowStatus = _VlanClassEnableRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 11, 3, 6, 1, 5),
    _VlanClassEnableRowStatus_Type()
)
vlanClassEnableRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    vlanClassEnableRowStatus.setStatus("current")
_Dot1xExt_ObjectIdentity = ObjectIdentity
dot1xExt = _Dot1xExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 12)
)
_Dot1xExtMaxReauthReqTable_Object = MibTable
dot1xExtMaxReauthReqTable = _Dot1xExtMaxReauthReqTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1)
)
if mibBuilder.loadTexts:
    dot1xExtMaxReauthReqTable.setStatus("current")
_Dot1xExtMaxReauthReqEntry_Object = MibTableRow
dot1xExtMaxReauthReqEntry = _Dot1xExtMaxReauthReqEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1, 1)
)
dot1xExtMaxReauthReqEntry.setIndexNames(
    (0, "SWITCH", "dot1xExtMaxReauthReqIndex"),
)
if mibBuilder.loadTexts:
    dot1xExtMaxReauthReqEntry.setStatus("current")


class _Dot1xExtMaxReauthReqIndex_Type(Integer32):
    """Custom type dot1xExtMaxReauthReqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Dot1xExtMaxReauthReqIndex_Type.__name__ = "Integer32"
_Dot1xExtMaxReauthReqIndex_Object = MibTableColumn
dot1xExtMaxReauthReqIndex = _Dot1xExtMaxReauthReqIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1, 1, 1),
    _Dot1xExtMaxReauthReqIndex_Type()
)
dot1xExtMaxReauthReqIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtMaxReauthReqIndex.setStatus("current")


class _Dot1xExtMaxReauthReqVersion_Type(Integer32):
    """Custom type dot1xExtMaxReauthReqVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version1", 1),
          ("version2", 2))
    )


_Dot1xExtMaxReauthReqVersion_Type.__name__ = "Integer32"
_Dot1xExtMaxReauthReqVersion_Object = MibTableColumn
dot1xExtMaxReauthReqVersion = _Dot1xExtMaxReauthReqVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1, 1, 2),
    _Dot1xExtMaxReauthReqVersion_Type()
)
dot1xExtMaxReauthReqVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMaxReauthReqVersion.setStatus("current")
_Dot1xExtMaxReauthReqNum_Type = Integer32
_Dot1xExtMaxReauthReqNum_Object = MibTableColumn
dot1xExtMaxReauthReqNum = _Dot1xExtMaxReauthReqNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1, 1, 3),
    _Dot1xExtMaxReauthReqNum_Type()
)
dot1xExtMaxReauthReqNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtMaxReauthReqNum.setStatus("current")


class _Dot1xExtMaxReqNum_Type(Integer32):
    """Custom type dot1xExtMaxReqNum based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_Dot1xExtMaxReqNum_Type.__name__ = "Integer32"
_Dot1xExtMaxReqNum_Object = MibTableColumn
dot1xExtMaxReqNum = _Dot1xExtMaxReqNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 1, 1, 4),
    _Dot1xExtMaxReqNum_Type()
)
dot1xExtMaxReqNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMaxReqNum.setStatus("current")
_Dot1xExtVlanPolicyTable_Object = MibTable
dot1xExtVlanPolicyTable = _Dot1xExtVlanPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 2)
)
if mibBuilder.loadTexts:
    dot1xExtVlanPolicyTable.setStatus("current")
_Dot1xExtVlanPolicyEntry_Object = MibTableRow
dot1xExtVlanPolicyEntry = _Dot1xExtVlanPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 2, 1)
)
dot1xExtVlanPolicyEntry.setIndexNames(
    (0, "SWITCH", "dot1xExtVlanPolicyIndex"),
)
if mibBuilder.loadTexts:
    dot1xExtVlanPolicyEntry.setStatus("current")


class _Dot1xExtVlanPolicyIndex_Type(Integer32):
    """Custom type dot1xExtVlanPolicyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Dot1xExtVlanPolicyIndex_Type.__name__ = "Integer32"
_Dot1xExtVlanPolicyIndex_Object = MibTableColumn
dot1xExtVlanPolicyIndex = _Dot1xExtVlanPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 2, 1, 1),
    _Dot1xExtVlanPolicyIndex_Type()
)
dot1xExtVlanPolicyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtVlanPolicyIndex.setStatus("current")


class _Dot1xExtGuestVlan_Type(Integer32):
    """Custom type dot1xExtGuestVlan based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(2, 4094),
    )


_Dot1xExtGuestVlan_Type.__name__ = "Integer32"
_Dot1xExtGuestVlan_Object = MibTableColumn
dot1xExtGuestVlan = _Dot1xExtGuestVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 2, 1, 2),
    _Dot1xExtGuestVlan_Type()
)
dot1xExtGuestVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtGuestVlan.setStatus("current")
_Dot1xExtMacBasedResource_ObjectIdentity = ObjectIdentity
dot1xExtMacBasedResource = _Dot1xExtMacBasedResource_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3)
)
_Dot1xExtMacBasedResourceMaxInterface_Type = Integer32
_Dot1xExtMacBasedResourceMaxInterface_Object = MibScalar
dot1xExtMacBasedResourceMaxInterface = _Dot1xExtMacBasedResourceMaxInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 1),
    _Dot1xExtMacBasedResourceMaxInterface_Type()
)
dot1xExtMacBasedResourceMaxInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceMaxInterface.setStatus("current")
_Dot1xExtMacBasedResourceCurrentInterface_Type = Integer32
_Dot1xExtMacBasedResourceCurrentInterface_Object = MibScalar
dot1xExtMacBasedResourceCurrentInterface = _Dot1xExtMacBasedResourceCurrentInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 2),
    _Dot1xExtMacBasedResourceCurrentInterface_Type()
)
dot1xExtMacBasedResourceCurrentInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceCurrentInterface.setStatus("current")
_Dot1xExtMacBasedResourceMaxUser_Type = Integer32
_Dot1xExtMacBasedResourceMaxUser_Object = MibScalar
dot1xExtMacBasedResourceMaxUser = _Dot1xExtMacBasedResourceMaxUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 3),
    _Dot1xExtMacBasedResourceMaxUser_Type()
)
dot1xExtMacBasedResourceMaxUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceMaxUser.setStatus("current")
_Dot1xExtMacBasedResourceCurrentUser_Type = Integer32
_Dot1xExtMacBasedResourceCurrentUser_Object = MibScalar
dot1xExtMacBasedResourceCurrentUser = _Dot1xExtMacBasedResourceCurrentUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 4),
    _Dot1xExtMacBasedResourceCurrentUser_Type()
)
dot1xExtMacBasedResourceCurrentUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceCurrentUser.setStatus("current")
_Dot1xExtMacBasedResourceMaxUserAll_Type = Integer32
_Dot1xExtMacBasedResourceMaxUserAll_Object = MibScalar
dot1xExtMacBasedResourceMaxUserAll = _Dot1xExtMacBasedResourceMaxUserAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 5),
    _Dot1xExtMacBasedResourceMaxUserAll_Type()
)
dot1xExtMacBasedResourceMaxUserAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceMaxUserAll.setStatus("current")
_Dot1xExtMacBasedResourceCurrentUserAll_Type = Integer32
_Dot1xExtMacBasedResourceCurrentUserAll_Object = MibScalar
dot1xExtMacBasedResourceCurrentUserAll = _Dot1xExtMacBasedResourceCurrentUserAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 3, 6),
    _Dot1xExtMacBasedResourceCurrentUserAll_Type()
)
dot1xExtMacBasedResourceCurrentUserAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedResourceCurrentUserAll.setStatus("current")
_Dot1xExtMacBasedConfigTable_Object = MibTable
dot1xExtMacBasedConfigTable = _Dot1xExtMacBasedConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4)
)
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigTable.setStatus("current")
_Dot1xExtMacBasedConfigEntry_Object = MibTableRow
dot1xExtMacBasedConfigEntry = _Dot1xExtMacBasedConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1)
)
dot1xExtMacBasedConfigEntry.setIndexNames(
    (0, "SWITCH", "dot1xExtMacBasedConfigIndex"),
)
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigEntry.setStatus("current")


class _Dot1xExtMacBasedConfigIndex_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Dot1xExtMacBasedConfigIndex_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigIndex_Object = MibTableColumn
dot1xExtMacBasedConfigIndex = _Dot1xExtMacBasedConfigIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 1),
    _Dot1xExtMacBasedConfigIndex_Type()
)
dot1xExtMacBasedConfigIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigIndex.setStatus("current")


class _Dot1xExtMacBasedConfigMode_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("port", 0),
          ("mac", 1))
    )


_Dot1xExtMacBasedConfigMode_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigMode_Object = MibTableColumn
dot1xExtMacBasedConfigMode = _Dot1xExtMacBasedConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 2),
    _Dot1xExtMacBasedConfigMode_Type()
)
dot1xExtMacBasedConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigMode.setStatus("current")


class _Dot1xExtMacBasedConfigBypassEn_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigBypassEn based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Dot1xExtMacBasedConfigBypassEn_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigBypassEn_Object = MibTableColumn
dot1xExtMacBasedConfigBypassEn = _Dot1xExtMacBasedConfigBypassEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 3),
    _Dot1xExtMacBasedConfigBypassEn_Type()
)
dot1xExtMacBasedConfigBypassEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigBypassEn.setStatus("current")


class _Dot1xExtMacBasedConfigMaxUser_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigMaxUser based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Dot1xExtMacBasedConfigMaxUser_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigMaxUser_Object = MibTableColumn
dot1xExtMacBasedConfigMaxUser = _Dot1xExtMacBasedConfigMaxUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 4),
    _Dot1xExtMacBasedConfigMaxUser_Type()
)
dot1xExtMacBasedConfigMaxUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigMaxUser.setStatus("current")


class _Dot1xExtMacBasedConfigCurrentUser_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigCurrentUser based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Dot1xExtMacBasedConfigCurrentUser_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigCurrentUser_Object = MibTableColumn
dot1xExtMacBasedConfigCurrentUser = _Dot1xExtMacBasedConfigCurrentUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 5),
    _Dot1xExtMacBasedConfigCurrentUser_Type()
)
dot1xExtMacBasedConfigCurrentUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigCurrentUser.setStatus("current")


class _Dot1xExtMacBasedConfigMaxUserAll_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigMaxUserAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 510),
    )


_Dot1xExtMacBasedConfigMaxUserAll_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigMaxUserAll_Object = MibTableColumn
dot1xExtMacBasedConfigMaxUserAll = _Dot1xExtMacBasedConfigMaxUserAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 6),
    _Dot1xExtMacBasedConfigMaxUserAll_Type()
)
dot1xExtMacBasedConfigMaxUserAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigMaxUserAll.setStatus("current")


class _Dot1xExtMacBasedConfigCurrentUserAll_Type(Integer32):
    """Custom type dot1xExtMacBasedConfigCurrentUserAll based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 510),
    )


_Dot1xExtMacBasedConfigCurrentUserAll_Type.__name__ = "Integer32"
_Dot1xExtMacBasedConfigCurrentUserAll_Object = MibTableColumn
dot1xExtMacBasedConfigCurrentUserAll = _Dot1xExtMacBasedConfigCurrentUserAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 4, 1, 7),
    _Dot1xExtMacBasedConfigCurrentUserAll_Type()
)
dot1xExtMacBasedConfigCurrentUserAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedConfigCurrentUserAll.setStatus("current")
_Dot1xExtMacBasedUserTable_Object = MibTable
dot1xExtMacBasedUserTable = _Dot1xExtMacBasedUserTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5)
)
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserTable.setStatus("current")
_Dot1xExtMacBasedUserEntry_Object = MibTableRow
dot1xExtMacBasedUserEntry = _Dot1xExtMacBasedUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1)
)
dot1xExtMacBasedUserEntry.setIndexNames(
    (0, "SWITCH", "dot1xExtMacBasedUserIndex"),
    (0, "SWITCH", "dot1xExtMacBasedUserMac"),
)
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserEntry.setStatus("current")


class _Dot1xExtMacBasedUserIndex_Type(Integer32):
    """Custom type dot1xExtMacBasedUserIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Dot1xExtMacBasedUserIndex_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserIndex_Object = MibTableColumn
dot1xExtMacBasedUserIndex = _Dot1xExtMacBasedUserIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 1),
    _Dot1xExtMacBasedUserIndex_Type()
)
dot1xExtMacBasedUserIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserIndex.setStatus("current")
_Dot1xExtMacBasedUserMac_Type = MacAddress
_Dot1xExtMacBasedUserMac_Object = MibTableColumn
dot1xExtMacBasedUserMac = _Dot1xExtMacBasedUserMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 2),
    _Dot1xExtMacBasedUserMac_Type()
)
dot1xExtMacBasedUserMac.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserMac.setStatus("current")


class _Dot1xExtMacBasedUserState_Type(Integer32):
    """Custom type dot1xExtMacBasedUserState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("waiting", 0),
          ("accept", 1),
          ("reject", 2),
          ("reauth", 3))
    )


_Dot1xExtMacBasedUserState_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserState_Object = MibTableColumn
dot1xExtMacBasedUserState = _Dot1xExtMacBasedUserState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 3),
    _Dot1xExtMacBasedUserState_Type()
)
dot1xExtMacBasedUserState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserState.setStatus("current")


class _Dot1xExtMacBasedUserTimer_Type(Integer32):
    """Custom type dot1xExtMacBasedUserTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Dot1xExtMacBasedUserTimer_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserTimer_Object = MibTableColumn
dot1xExtMacBasedUserTimer = _Dot1xExtMacBasedUserTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 4),
    _Dot1xExtMacBasedUserTimer_Type()
)
dot1xExtMacBasedUserTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserTimer.setStatus("current")


class _Dot1xExtMacBasedUserIsBypass_Type(Integer32):
    """Custom type dot1xExtMacBasedUserIsBypass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("eapolUser", 0),
          ("bypassUser", 1))
    )


_Dot1xExtMacBasedUserIsBypass_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserIsBypass_Object = MibTableColumn
dot1xExtMacBasedUserIsBypass = _Dot1xExtMacBasedUserIsBypass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 5),
    _Dot1xExtMacBasedUserIsBypass_Type()
)
dot1xExtMacBasedUserIsBypass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserIsBypass.setStatus("current")


class _Dot1xExtMacBasedUserInGuestVlan_Type(Integer32):
    """Custom type dot1xExtMacBasedUserInGuestVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_Dot1xExtMacBasedUserInGuestVlan_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserInGuestVlan_Object = MibTableColumn
dot1xExtMacBasedUserInGuestVlan = _Dot1xExtMacBasedUserInGuestVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 6),
    _Dot1xExtMacBasedUserInGuestVlan_Type()
)
dot1xExtMacBasedUserInGuestVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserInGuestVlan.setStatus("current")


class _Dot1xExtMacBasedUserGuestVlanID_Type(Integer32):
    """Custom type dot1xExtMacBasedUserGuestVlanID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(2, 4094),
    )


_Dot1xExtMacBasedUserGuestVlanID_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserGuestVlanID_Object = MibTableColumn
dot1xExtMacBasedUserGuestVlanID = _Dot1xExtMacBasedUserGuestVlanID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 7),
    _Dot1xExtMacBasedUserGuestVlanID_Type()
)
dot1xExtMacBasedUserGuestVlanID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserGuestVlanID.setStatus("current")


class _Dot1xExtMacBasedUserOffLine_Type(Integer32):
    """Custom type dot1xExtMacBasedUserOffLine based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("offLine", 1))
    )


_Dot1xExtMacBasedUserOffLine_Type.__name__ = "Integer32"
_Dot1xExtMacBasedUserOffLine_Object = MibTableColumn
dot1xExtMacBasedUserOffLine = _Dot1xExtMacBasedUserOffLine_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 5, 1, 8),
    _Dot1xExtMacBasedUserOffLine_Type()
)
dot1xExtMacBasedUserOffLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMacBasedUserOffLine.setStatus("current")
_Dot1xExtMacBasedClear_ObjectIdentity = ObjectIdentity
dot1xExtMacBasedClear = _Dot1xExtMacBasedClear_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 12, 6)
)
_Dot1xExtMacBasedClearInterface_Type = Integer32
_Dot1xExtMacBasedClearInterface_Object = MibScalar
dot1xExtMacBasedClearInterface = _Dot1xExtMacBasedClearInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 12, 6, 1),
    _Dot1xExtMacBasedClearInterface_Type()
)
dot1xExtMacBasedClearInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xExtMacBasedClearInterface.setStatus("current")
_TimeRange_ObjectIdentity = ObjectIdentity
timeRange = _TimeRange_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 13)
)
_TrngMibObjects_ObjectIdentity = ObjectIdentity
trngMibObjects = _TrngMibObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1)
)
_TrngCreateTimerangeTable_Object = MibTable
trngCreateTimerangeTable = _TrngCreateTimerangeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1)
)
if mibBuilder.loadTexts:
    trngCreateTimerangeTable.setStatus("current")
_TrngCreateTimerangeEntry_Object = MibTableRow
trngCreateTimerangeEntry = _TrngCreateTimerangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1, 1)
)
trngCreateTimerangeEntry.setIndexNames(
    (0, "SWITCH", "trngIndex"),
)
if mibBuilder.loadTexts:
    trngCreateTimerangeEntry.setStatus("current")


class _TrngIndex_Type(Integer32):
    """Custom type trngIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_TrngIndex_Type.__name__ = "Integer32"
_TrngIndex_Object = MibTableColumn
trngIndex = _TrngIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1, 1, 1),
    _TrngIndex_Type()
)
trngIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    trngIndex.setStatus("current")


class _TrngName_Type(OctetString):
    """Custom type trngName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_TrngName_Type.__name__ = "OctetString"
_TrngName_Object = MibTableColumn
trngName = _TrngName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1, 1, 2),
    _TrngName_Type()
)
trngName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trngName.setStatus("current")
_TrngValidFlag_Type = TruthValue
_TrngValidFlag_Object = MibTableColumn
trngValidFlag = _TrngValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1, 1, 3),
    _TrngValidFlag_Type()
)
trngValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trngValidFlag.setStatus("current")
_TrngCreateRowStatus_Type = RowStatus
_TrngCreateRowStatus_Object = MibTableColumn
trngCreateRowStatus = _TrngCreateRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 1, 1, 4),
    _TrngCreateRowStatus_Type()
)
trngCreateRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trngCreateRowStatus.setStatus("current")
_TrngAbsoluteTable_Object = MibTable
trngAbsoluteTable = _TrngAbsoluteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2)
)
if mibBuilder.loadTexts:
    trngAbsoluteTable.setStatus("current")
_TrngAbsoluteEntry_Object = MibTableRow
trngAbsoluteEntry = _TrngAbsoluteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2, 1)
)
trngAbsoluteEntry.setIndexNames(
    (0, "SWITCH", "trngAbsoluteNameIndex"),
)
if mibBuilder.loadTexts:
    trngAbsoluteEntry.setStatus("current")


class _TrngAbsoluteNameIndex_Type(Integer32):
    """Custom type trngAbsoluteNameIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_TrngAbsoluteNameIndex_Type.__name__ = "Integer32"
_TrngAbsoluteNameIndex_Object = MibTableColumn
trngAbsoluteNameIndex = _TrngAbsoluteNameIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2, 1, 1),
    _TrngAbsoluteNameIndex_Type()
)
trngAbsoluteNameIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    trngAbsoluteNameIndex.setStatus("current")


class _TimerangeAbsoluteStartTime_Type(OctetString):
    """Custom type timerangeAbsoluteStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_TimerangeAbsoluteStartTime_Type.__name__ = "OctetString"
_TimerangeAbsoluteStartTime_Object = MibTableColumn
timerangeAbsoluteStartTime = _TimerangeAbsoluteStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2, 1, 2),
    _TimerangeAbsoluteStartTime_Type()
)
timerangeAbsoluteStartTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangeAbsoluteStartTime.setStatus("current")


class _TimerangeAbsoluteEndTime_Type(OctetString):
    """Custom type timerangeAbsoluteEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_TimerangeAbsoluteEndTime_Type.__name__ = "OctetString"
_TimerangeAbsoluteEndTime_Object = MibTableColumn
timerangeAbsoluteEndTime = _TimerangeAbsoluteEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2, 1, 3),
    _TimerangeAbsoluteEndTime_Type()
)
timerangeAbsoluteEndTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangeAbsoluteEndTime.setStatus("current")
_TimerangeAbsolueRowStatus_Type = RowStatus
_TimerangeAbsolueRowStatus_Object = MibTableColumn
timerangeAbsolueRowStatus = _TimerangeAbsolueRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 2, 1, 4),
    _TimerangeAbsolueRowStatus_Type()
)
timerangeAbsolueRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangeAbsolueRowStatus.setStatus("current")
_TrngPeriodicTable_Object = MibTable
trngPeriodicTable = _TrngPeriodicTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3)
)
if mibBuilder.loadTexts:
    trngPeriodicTable.setStatus("current")
_TrngPeriodicEntry_Object = MibTableRow
trngPeriodicEntry = _TrngPeriodicEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1)
)
trngPeriodicEntry.setIndexNames(
    (0, "SWITCH", "trngPeriodicNameIndex"),
)
if mibBuilder.loadTexts:
    trngPeriodicEntry.setStatus("current")


class _TrngPeriodicNameIndex_Type(Integer32):
    """Custom type trngPeriodicNameIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_TrngPeriodicNameIndex_Type.__name__ = "Integer32"
_TrngPeriodicNameIndex_Object = MibTableColumn
trngPeriodicNameIndex = _TrngPeriodicNameIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 1),
    _TrngPeriodicNameIndex_Type()
)
trngPeriodicNameIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    trngPeriodicNameIndex.setStatus("current")


class _TrngPeriodicStartDayOfWeek_Type(Integer32):
    """Custom type trngPeriodicStartDayOfWeek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_TrngPeriodicStartDayOfWeek_Type.__name__ = "Integer32"
_TrngPeriodicStartDayOfWeek_Object = MibTableColumn
trngPeriodicStartDayOfWeek = _TrngPeriodicStartDayOfWeek_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 2),
    _TrngPeriodicStartDayOfWeek_Type()
)
trngPeriodicStartDayOfWeek.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trngPeriodicStartDayOfWeek.setStatus("current")


class _TrngPeriodicEndDayOfWeek_Type(Integer32):
    """Custom type trngPeriodicEndDayOfWeek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_TrngPeriodicEndDayOfWeek_Type.__name__ = "Integer32"
_TrngPeriodicEndDayOfWeek_Object = MibTableColumn
trngPeriodicEndDayOfWeek = _TrngPeriodicEndDayOfWeek_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 3),
    _TrngPeriodicEndDayOfWeek_Type()
)
trngPeriodicEndDayOfWeek.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    trngPeriodicEndDayOfWeek.setStatus("current")


class _TimerangePeriodicStartTime_Type(OctetString):
    """Custom type timerangePeriodicStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_TimerangePeriodicStartTime_Type.__name__ = "OctetString"
_TimerangePeriodicStartTime_Object = MibTableColumn
timerangePeriodicStartTime = _TimerangePeriodicStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 4),
    _TimerangePeriodicStartTime_Type()
)
timerangePeriodicStartTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangePeriodicStartTime.setStatus("current")


class _TimerangePeriodicEndTime_Type(OctetString):
    """Custom type timerangePeriodicEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_TimerangePeriodicEndTime_Type.__name__ = "OctetString"
_TimerangePeriodicEndTime_Object = MibTableColumn
timerangePeriodicEndTime = _TimerangePeriodicEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 5),
    _TimerangePeriodicEndTime_Type()
)
timerangePeriodicEndTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangePeriodicEndTime.setStatus("current")
_TimerangePeriodicRowStatus_Type = RowStatus
_TimerangePeriodicRowStatus_Object = MibTableColumn
timerangePeriodicRowStatus = _TimerangePeriodicRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 13, 1, 3, 1, 6),
    _TimerangePeriodicRowStatus_Type()
)
timerangePeriodicRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    timerangePeriodicRowStatus.setStatus("current")
_StpExt_ObjectIdentity = ObjectIdentity
stpExt = _StpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 14)
)


class _StpExtStpEnable_Type(Integer32):
    """Custom type stpExtStpEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpExtStpEnable_Type.__name__ = "Integer32"
_StpExtStpEnable_Object = MibScalar
stpExtStpEnable = _StpExtStpEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 1),
    _StpExtStpEnable_Type()
)
stpExtStpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtStpEnable.setStatus("current")


class _StpExtPathcostStandard_Type(Integer32):
    """Custom type stpExtPathcostStandard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dot1d1998", 1),
          ("dot1t", 2))
    )


_StpExtPathcostStandard_Type.__name__ = "Integer32"
_StpExtPathcostStandard_Object = MibScalar
stpExtPathcostStandard = _StpExtPathcostStandard_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 2),
    _StpExtPathcostStandard_Type()
)
stpExtPathcostStandard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtPathcostStandard.setStatus("current")


class _StpExtBpduGuard_Type(Integer32):
    """Custom type stpExtBpduGuard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpExtBpduGuard_Type.__name__ = "Integer32"
_StpExtBpduGuard_Object = MibScalar
stpExtBpduGuard = _StpExtBpduGuard_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 3),
    _StpExtBpduGuard_Type()
)
stpExtBpduGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtBpduGuard.setStatus("current")


class _StpExtBpduFilter_Type(Integer32):
    """Custom type stpExtBpduFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpExtBpduFilter_Type.__name__ = "Integer32"
_StpExtBpduFilter_Object = MibScalar
stpExtBpduFilter = _StpExtBpduFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 4),
    _StpExtBpduFilter_Type()
)
stpExtBpduFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtBpduFilter.setStatus("current")


class _StpExtBpduTransparent_Type(Integer32):
    """Custom type stpExtBpduTransparent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpExtBpduTransparent_Type.__name__ = "Integer32"
_StpExtBpduTransparent_Object = MibScalar
stpExtBpduTransparent = _StpExtBpduTransparent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 5),
    _StpExtBpduTransparent_Type()
)
stpExtBpduTransparent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtBpduTransparent.setStatus("obsolete")
_StpExtPortTable_Object = MibTable
stpExtPortTable = _StpExtPortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6)
)
if mibBuilder.loadTexts:
    stpExtPortTable.setStatus("current")
_StpExtPortEntry_Object = MibTableRow
stpExtPortEntry = _StpExtPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1)
)
stpExtPortEntry.setIndexNames(
    (0, "SWITCH", "stpxpPortIndex"),
)
if mibBuilder.loadTexts:
    stpExtPortEntry.setStatus("current")
_StpxpPortIndex_Type = InterfaceIndex
_StpxpPortIndex_Object = MibTableColumn
stpxpPortIndex = _StpxpPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 1),
    _StpxpPortIndex_Type()
)
stpxpPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stpxpPortIndex.setStatus("current")


class _StpxRootGuardObjects_Type(Integer32):
    """Custom type stpxRootGuardObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxRootGuardObjects_Type.__name__ = "Integer32"
_StpxRootGuardObjects_Object = MibTableColumn
stpxRootGuardObjects = _StpxRootGuardObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 2),
    _StpxRootGuardObjects_Type()
)
stpxRootGuardObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxRootGuardObjects.setStatus("current")


class _StpxRestrictedTcnObjects_Type(Integer32):
    """Custom type stpxRestrictedTcnObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxRestrictedTcnObjects_Type.__name__ = "Integer32"
_StpxRestrictedTcnObjects_Object = MibTableColumn
stpxRestrictedTcnObjects = _StpxRestrictedTcnObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 3),
    _StpxRestrictedTcnObjects_Type()
)
stpxRestrictedTcnObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxRestrictedTcnObjects.setStatus("current")


class _StpxRestrictedRoleObjects_Type(Integer32):
    """Custom type stpxRestrictedRoleObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxRestrictedRoleObjects_Type.__name__ = "Integer32"
_StpxRestrictedRoleObjects_Object = MibTableColumn
stpxRestrictedRoleObjects = _StpxRestrictedRoleObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 4),
    _StpxRestrictedRoleObjects_Type()
)
stpxRestrictedRoleObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxRestrictedRoleObjects.setStatus("current")


class _StpxEdgePortAdminBpduGuardObjects_Type(Integer32):
    """Custom type stpxEdgePortAdminBpduGuardObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("enabled", 1),
          ("disabled", 2))
    )


_StpxEdgePortAdminBpduGuardObjects_Type.__name__ = "Integer32"
_StpxEdgePortAdminBpduGuardObjects_Object = MibTableColumn
stpxEdgePortAdminBpduGuardObjects = _StpxEdgePortAdminBpduGuardObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 5),
    _StpxEdgePortAdminBpduGuardObjects_Type()
)
stpxEdgePortAdminBpduGuardObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxEdgePortAdminBpduGuardObjects.setStatus("current")


class _StpxEdgePortOperBpduGuardObjects_Type(Integer32):
    """Custom type stpxEdgePortOperBpduGuardObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxEdgePortOperBpduGuardObjects_Type.__name__ = "Integer32"
_StpxEdgePortOperBpduGuardObjects_Object = MibTableColumn
stpxEdgePortOperBpduGuardObjects = _StpxEdgePortOperBpduGuardObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 6),
    _StpxEdgePortOperBpduGuardObjects_Type()
)
stpxEdgePortOperBpduGuardObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpxEdgePortOperBpduGuardObjects.setStatus("current")


class _StpxEdgePortAdminBpduFilterObjects_Type(Integer32):
    """Custom type stpxEdgePortAdminBpduFilterObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("enabled", 1),
          ("disabled", 2))
    )


_StpxEdgePortAdminBpduFilterObjects_Type.__name__ = "Integer32"
_StpxEdgePortAdminBpduFilterObjects_Object = MibTableColumn
stpxEdgePortAdminBpduFilterObjects = _StpxEdgePortAdminBpduFilterObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 7),
    _StpxEdgePortAdminBpduFilterObjects_Type()
)
stpxEdgePortAdminBpduFilterObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxEdgePortAdminBpduFilterObjects.setStatus("current")


class _StpxEdgePortOperBpduFilterObjects_Type(Integer32):
    """Custom type stpxEdgePortOperBpduFilterObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxEdgePortOperBpduFilterObjects_Type.__name__ = "Integer32"
_StpxEdgePortOperBpduFilterObjects_Object = MibTableColumn
stpxEdgePortOperBpduFilterObjects = _StpxEdgePortOperBpduFilterObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 8),
    _StpxEdgePortOperBpduFilterObjects_Type()
)
stpxEdgePortOperBpduFilterObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpxEdgePortOperBpduFilterObjects.setStatus("current")


class _StpxForceVersionObjects_Type(Integer32):
    """Custom type stpxForceVersionObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("stp", 0),
          ("rstp", 2),
          ("mstp", 3))
    )


_StpxForceVersionObjects_Type.__name__ = "Integer32"
_StpxForceVersionObjects_Object = MibTableColumn
stpxForceVersionObjects = _StpxForceVersionObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 9),
    _StpxForceVersionObjects_Type()
)
stpxForceVersionObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxForceVersionObjects.setStatus("current")


class _StpxLoopGuardObjects_Type(Integer32):
    """Custom type stpxLoopGuardObjects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpxLoopGuardObjects_Type.__name__ = "Integer32"
_StpxLoopGuardObjects_Object = MibTableColumn
stpxLoopGuardObjects = _StpxLoopGuardObjects_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 6, 1, 10),
    _StpxLoopGuardObjects_Type()
)
stpxLoopGuardObjects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpxLoopGuardObjects.setStatus("current")


class _StpExtTrapEnable_Type(Integer32):
    """Custom type stpExtTrapEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpExtTrapEnable_Type.__name__ = "Integer32"
_StpExtTrapEnable_Object = MibScalar
stpExtTrapEnable = _StpExtTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 7),
    _StpExtTrapEnable_Type()
)
stpExtTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtTrapEnable.setStatus("obsolete")
_StpExtMaxhops_Type = Integer32
_StpExtMaxhops_Object = MibScalar
stpExtMaxhops = _StpExtMaxhops_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 8),
    _StpExtMaxhops_Type()
)
stpExtMaxhops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpExtMaxhops.setStatus("current")
_MstpExt_ObjectIdentity = ObjectIdentity
mstpExt = _MstpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10)
)


class _StpVersion_Type(Integer32):
    """Custom type stpVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("stp", 1),
          ("rstp", 2),
          ("mstp", 3))
    )


_StpVersion_Type.__name__ = "Integer32"
_StpVersion_Object = MibScalar
stpVersion = _StpVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 1),
    _StpVersion_Type()
)
stpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpVersion.setStatus("current")


class _StpRegionName_Type(OctetString):
    """Custom type stpRegionName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StpRegionName_Type.__name__ = "OctetString"
_StpRegionName_Object = MibScalar
stpRegionName = _StpRegionName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 2),
    _StpRegionName_Type()
)
stpRegionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpRegionName.setStatus("current")


class _StpRevision_Type(Integer32):
    """Custom type stpRevision based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StpRevision_Type.__name__ = "Integer32"
_StpRevision_Object = MibScalar
stpRevision = _StpRevision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 3),
    _StpRevision_Type()
)
stpRevision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpRevision.setStatus("current")
_StpVlanTable_Object = MibTable
stpVlanTable = _StpVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 4)
)
if mibBuilder.loadTexts:
    stpVlanTable.setStatus("current")
_StpVlanEntry_Object = MibTableRow
stpVlanEntry = _StpVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 4, 1)
)
stpVlanEntry.setIndexNames(
    (0, "SWITCH", "stpVlanInstId"),
)
if mibBuilder.loadTexts:
    stpVlanEntry.setStatus("current")


class _StpVlanId_Type(Integer32):
    """Custom type stpVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_StpVlanId_Type.__name__ = "Integer32"
_StpVlanId_Object = MibTableColumn
stpVlanId = _StpVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 4, 1, 1),
    _StpVlanId_Type()
)
stpVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stpVlanId.setStatus("current")


class _StpVlanInstId_Type(Integer32):
    """Custom type stpVlanInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_StpVlanInstId_Type.__name__ = "Integer32"
_StpVlanInstId_Object = MibTableColumn
stpVlanInstId = _StpVlanInstId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 4, 1, 2),
    _StpVlanInstId_Type()
)
stpVlanInstId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpVlanInstId.setStatus("current")
_StpInstTable_Object = MibTable
stpInstTable = _StpInstTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5)
)
if mibBuilder.loadTexts:
    stpInstTable.setStatus("current")
_StpInstEntry_Object = MibTableRow
stpInstEntry = _StpInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1)
)
stpInstEntry.setIndexNames(
    (0, "SWITCH", "stpInstId"),
)
if mibBuilder.loadTexts:
    stpInstEntry.setStatus("current")


class _StpInstId_Type(Integer32):
    """Custom type stpInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_StpInstId_Type.__name__ = "Integer32"
_StpInstId_Object = MibTableColumn
stpInstId = _StpInstId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1, 1),
    _StpInstId_Type()
)
stpInstId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stpInstId.setStatus("current")


class _StpPriority_Type(Integer32):
    """Custom type stpPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 61440),
    )


_StpPriority_Type.__name__ = "Integer32"
_StpPriority_Object = MibTableColumn
stpPriority = _StpPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1, 2),
    _StpPriority_Type()
)
stpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpPriority.setStatus("current")
_StpInstDesignatedRoot_Type = BridgeId
_StpInstDesignatedRoot_Object = MibTableColumn
stpInstDesignatedRoot = _StpInstDesignatedRoot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1, 3),
    _StpInstDesignatedRoot_Type()
)
stpInstDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstDesignatedRoot.setStatus("current")
_StpInstRootCost_Type = Integer32
_StpInstRootCost_Object = MibTableColumn
stpInstRootCost = _StpInstRootCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1, 4),
    _StpInstRootCost_Type()
)
stpInstRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstRootCost.setStatus("current")
_StpInstRootPort_Type = Integer32
_StpInstRootPort_Object = MibTableColumn
stpInstRootPort = _StpInstRootPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 5, 1, 5),
    _StpInstRootPort_Type()
)
stpInstRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstRootPort.setStatus("current")
_StpInstPortTable_Object = MibTable
stpInstPortTable = _StpInstPortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6)
)
if mibBuilder.loadTexts:
    stpInstPortTable.setStatus("current")
_StpInstPortEntry_Object = MibTableRow
stpInstPortEntry = _StpInstPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1)
)
stpInstPortEntry.setIndexNames(
    (0, "SWITCH", "stpInstId"),
    (0, "SWITCH", "stpxpPortIndex"),
)
if mibBuilder.loadTexts:
    stpInstPortEntry.setStatus("current")


class _StpInstPortPriority_Type(Integer32):
    """Custom type stpInstPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 240),
    )


_StpInstPortPriority_Type.__name__ = "Integer32"
_StpInstPortPriority_Object = MibTableColumn
stpInstPortPriority = _StpInstPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 1),
    _StpInstPortPriority_Type()
)
stpInstPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpInstPortPriority.setStatus("current")


class _StpInstPortState_Type(Integer32):
    """Custom type stpInstPortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("discarding", 2),
          ("learning", 3),
          ("forwarding", 4))
    )


_StpInstPortState_Type.__name__ = "Integer32"
_StpInstPortState_Object = MibTableColumn
stpInstPortState = _StpInstPortState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 2),
    _StpInstPortState_Type()
)
stpInstPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortState.setStatus("current")


class _StpInstPortPathCost_Type(Integer32):
    """Custom type stpInstPortPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000000),
    )


_StpInstPortPathCost_Type.__name__ = "Integer32"
_StpInstPortPathCost_Object = MibTableColumn
stpInstPortPathCost = _StpInstPortPathCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 3),
    _StpInstPortPathCost_Type()
)
stpInstPortPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpInstPortPathCost.setStatus("current")
_StpInstPortDesignatedRoot_Type = BridgeId
_StpInstPortDesignatedRoot_Object = MibTableColumn
stpInstPortDesignatedRoot = _StpInstPortDesignatedRoot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 4),
    _StpInstPortDesignatedRoot_Type()
)
stpInstPortDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortDesignatedRoot.setStatus("current")
_StpInstPortDesignatedCost_Type = Integer32
_StpInstPortDesignatedCost_Object = MibTableColumn
stpInstPortDesignatedCost = _StpInstPortDesignatedCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 5),
    _StpInstPortDesignatedCost_Type()
)
stpInstPortDesignatedCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortDesignatedCost.setStatus("current")
_StpInstPortDesignatedBridge_Type = BridgeId
_StpInstPortDesignatedBridge_Object = MibTableColumn
stpInstPortDesignatedBridge = _StpInstPortDesignatedBridge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 6),
    _StpInstPortDesignatedBridge_Type()
)
stpInstPortDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortDesignatedBridge.setStatus("current")
_StpInstPortDesignatedPort_Type = InterfaceIndex
_StpInstPortDesignatedPort_Object = MibTableColumn
stpInstPortDesignatedPort = _StpInstPortDesignatedPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 7),
    _StpInstPortDesignatedPort_Type()
)
stpInstPortDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortDesignatedPort.setStatus("current")


class _StpInstPortRole_Type(Integer32):
    """Custom type stpInstPortRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("master", 0),
          ("alternate", 1),
          ("root", 2),
          ("designated", 3),
          ("disabled", 4),
          ("backup", 5))
    )


_StpInstPortRole_Type.__name__ = "Integer32"
_StpInstPortRole_Object = MibTableColumn
stpInstPortRole = _StpInstPortRole_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 8),
    _StpInstPortRole_Type()
)
stpInstPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstPortRole.setStatus("current")


class _StpInstRestrictedRole_Type(Integer32):
    """Custom type stpInstRestrictedRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpInstRestrictedRole_Type.__name__ = "Integer32"
_StpInstRestrictedRole_Object = MibTableColumn
stpInstRestrictedRole = _StpInstRestrictedRole_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 9),
    _StpInstRestrictedRole_Type()
)
stpInstRestrictedRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpInstRestrictedRole.setStatus("current")


class _StpInstRestrictedTcn_Type(Integer32):
    """Custom type stpInstRestrictedTcn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_StpInstRestrictedTcn_Type.__name__ = "Integer32"
_StpInstRestrictedTcn_Object = MibTableColumn
stpInstRestrictedTcn = _StpInstRestrictedTcn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 6, 1, 10),
    _StpInstRestrictedTcn_Type()
)
stpInstRestrictedTcn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stpInstRestrictedTcn.setStatus("current")


class _StpInstNum_Type(Integer32):
    """Custom type stpInstNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_StpInstNum_Type.__name__ = "Integer32"
_StpInstNum_Object = MibScalar
stpInstNum = _StpInstNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 7),
    _StpInstNum_Type()
)
stpInstNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpInstNum.setStatus("current")


class _StpDigests_Type(OctetString):
    """Custom type stpDigests based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StpDigests_Type.__name__ = "OctetString"
_StpDigests_Object = MibScalar
stpDigests = _StpDigests_Object(
    (1, 3, 6, 1, 4, 1, 27975, 14, 10, 8),
    _StpDigests_Type()
)
stpDigests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stpDigests.setStatus("current")
_IgmpExt_ObjectIdentity = ObjectIdentity
igmpExt = _IgmpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 16)
)
_IgmpRouterInterfaceExtTable_Object = MibTable
igmpRouterInterfaceExtTable = _IgmpRouterInterfaceExtTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1)
)
if mibBuilder.loadTexts:
    igmpRouterInterfaceExtTable.setStatus("current")
_IgmpRouterInterfaceExtEntry_Object = MibTableRow
igmpRouterInterfaceExtEntry = _IgmpRouterInterfaceExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1)
)
igmpRouterInterfaceExtEntry.setIndexNames(
    (0, "SWITCH", "igmpRouterIfIndex"),
    (0, "SWITCH", "igmpRouterQuerierType"),
)
if mibBuilder.loadTexts:
    igmpRouterInterfaceExtEntry.setStatus("current")


class _IgmpRouterIfIndex_Type(Integer32):
    """Custom type igmpRouterIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IgmpRouterIfIndex_Type.__name__ = "Integer32"
_IgmpRouterIfIndex_Object = MibTableColumn
igmpRouterIfIndex = _IgmpRouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 1),
    _IgmpRouterIfIndex_Type()
)
igmpRouterIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpRouterIfIndex.setStatus("current")


class _IgmpRouterQuerierType_Type(Integer32):
    """Custom type igmpRouterQuerierType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IgmpRouterQuerierType_Type.__name__ = "Integer32"
_IgmpRouterQuerierType_Object = MibTableColumn
igmpRouterQuerierType = _IgmpRouterQuerierType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 2),
    _IgmpRouterQuerierType_Type()
)
igmpRouterQuerierType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpRouterQuerierType.setStatus("current")


class _IgmpRouterIfGroupLimit_Type(Integer32):
    """Custom type igmpRouterIfGroupLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_IgmpRouterIfGroupLimit_Type.__name__ = "Integer32"
_IgmpRouterIfGroupLimit_Object = MibTableColumn
igmpRouterIfGroupLimit = _IgmpRouterIfGroupLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 3),
    _IgmpRouterIfGroupLimit_Type()
)
igmpRouterIfGroupLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfGroupLimit.setStatus("current")


class _IgmpRouterIfImmediateLeaveAccess_Type(OctetString):
    """Custom type igmpRouterIfImmediateLeaveAccess based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_IgmpRouterIfImmediateLeaveAccess_Type.__name__ = "OctetString"
_IgmpRouterIfImmediateLeaveAccess_Object = MibTableColumn
igmpRouterIfImmediateLeaveAccess = _IgmpRouterIfImmediateLeaveAccess_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 4),
    _IgmpRouterIfImmediateLeaveAccess_Type()
)
igmpRouterIfImmediateLeaveAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfImmediateLeaveAccess.setStatus("current")
_IgmpRouterIfProxyService_Type = TruthValue
_IgmpRouterIfProxyService_Object = MibTableColumn
igmpRouterIfProxyService = _IgmpRouterIfProxyService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 5),
    _IgmpRouterIfProxyService_Type()
)
igmpRouterIfProxyService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfProxyService.setStatus("current")


class _IgmpRouterIfAccess_Type(OctetString):
    """Custom type igmpRouterIfAccess based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_IgmpRouterIfAccess_Type.__name__ = "OctetString"
_IgmpRouterIfAccess_Object = MibTableColumn
igmpRouterIfAccess = _IgmpRouterIfAccess_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 6),
    _IgmpRouterIfAccess_Type()
)
igmpRouterIfAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfAccess.setStatus("current")


class _IgmpRouterIfQuerierTimeout_Type(Integer32):
    """Custom type igmpRouterIfQuerierTimeout based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_IgmpRouterIfQuerierTimeout_Type.__name__ = "Integer32"
_IgmpRouterIfQuerierTimeout_Object = MibTableColumn
igmpRouterIfQuerierTimeout = _IgmpRouterIfQuerierTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 7),
    _IgmpRouterIfQuerierTimeout_Type()
)
igmpRouterIfQuerierTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfQuerierTimeout.setStatus("current")


class _IgmpRouterIfGroupLimitExceptAccess_Type(OctetString):
    """Custom type igmpRouterIfGroupLimitExceptAccess based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_IgmpRouterIfGroupLimitExceptAccess_Type.__name__ = "OctetString"
_IgmpRouterIfGroupLimitExceptAccess_Object = MibTableColumn
igmpRouterIfGroupLimitExceptAccess = _IgmpRouterIfGroupLimitExceptAccess_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 8),
    _IgmpRouterIfGroupLimitExceptAccess_Type()
)
igmpRouterIfGroupLimitExceptAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfGroupLimitExceptAccess.setStatus("current")


class _IgmpRouterIfClearGrp_Type(Integer32):
    """Custom type igmpRouterIfClearGrp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("clear", 1))
    )


_IgmpRouterIfClearGrp_Type.__name__ = "Integer32"
_IgmpRouterIfClearGrp_Object = MibTableColumn
igmpRouterIfClearGrp = _IgmpRouterIfClearGrp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 1, 1, 9),
    _IgmpRouterIfClearGrp_Type()
)
igmpRouterIfClearGrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterIfClearGrp.setStatus("current")


class _IgmpRouterGobalGrpLimit_Type(Integer32):
    """Custom type igmpRouterGobalGrpLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_IgmpRouterGobalGrpLimit_Type.__name__ = "Integer32"
_IgmpRouterGobalGrpLimit_Object = MibScalar
igmpRouterGobalGrpLimit = _IgmpRouterGobalGrpLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 2),
    _IgmpRouterGobalGrpLimit_Type()
)
igmpRouterGobalGrpLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterGobalGrpLimit.setStatus("current")


class _IgmpRouterSsmMappingEnable_Type(Integer32):
    """Custom type igmpRouterSsmMappingEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IgmpRouterSsmMappingEnable_Type.__name__ = "Integer32"
_IgmpRouterSsmMappingEnable_Object = MibScalar
igmpRouterSsmMappingEnable = _IgmpRouterSsmMappingEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 3),
    _IgmpRouterSsmMappingEnable_Type()
)
igmpRouterSsmMappingEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpRouterSsmMappingEnable.setStatus("current")
_IgmpRouterSsmMappingTable_Object = MibTable
igmpRouterSsmMappingTable = _IgmpRouterSsmMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4)
)
if mibBuilder.loadTexts:
    igmpRouterSsmMappingTable.setStatus("current")
_IgmpRouterSsmMappingEntry_Object = MibTableRow
igmpRouterSsmMappingEntry = _IgmpRouterSsmMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4, 1)
)
igmpRouterSsmMappingEntry.setIndexNames(
    (0, "SWITCH", "igmpRouterSsmMappingAclName"),
    (0, "SWITCH", "igmpRouterSsmMappingSourceAddress"),
)
if mibBuilder.loadTexts:
    igmpRouterSsmMappingEntry.setStatus("current")
_IgmpRouterSsmMappingIndex_Type = Integer32
_IgmpRouterSsmMappingIndex_Object = MibTableColumn
igmpRouterSsmMappingIndex = _IgmpRouterSsmMappingIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4, 1, 1),
    _IgmpRouterSsmMappingIndex_Type()
)
igmpRouterSsmMappingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    igmpRouterSsmMappingIndex.setStatus("current")
_IgmpRouterSsmMappingSourceAddress_Type = IpAddress
_IgmpRouterSsmMappingSourceAddress_Object = MibTableColumn
igmpRouterSsmMappingSourceAddress = _IgmpRouterSsmMappingSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4, 1, 2),
    _IgmpRouterSsmMappingSourceAddress_Type()
)
igmpRouterSsmMappingSourceAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    igmpRouterSsmMappingSourceAddress.setStatus("current")


class _IgmpRouterSsmMappingAclName_Type(OctetString):
    """Custom type igmpRouterSsmMappingAclName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_IgmpRouterSsmMappingAclName_Type.__name__ = "OctetString"
_IgmpRouterSsmMappingAclName_Object = MibTableColumn
igmpRouterSsmMappingAclName = _IgmpRouterSsmMappingAclName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4, 1, 3),
    _IgmpRouterSsmMappingAclName_Type()
)
igmpRouterSsmMappingAclName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    igmpRouterSsmMappingAclName.setStatus("current")
_IgmpRouterSsmMappingRowStatus_Type = RowStatus
_IgmpRouterSsmMappingRowStatus_Object = MibTableColumn
igmpRouterSsmMappingRowStatus = _IgmpRouterSsmMappingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 16, 4, 1, 4),
    _IgmpRouterSsmMappingRowStatus_Type()
)
igmpRouterSsmMappingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    igmpRouterSsmMappingRowStatus.setStatus("current")
_BoardHealthyMonitor_ObjectIdentity = ObjectIdentity
boardHealthyMonitor = _BoardHealthyMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 17)
)
_SysmonEnable_Type = TruthValue
_SysmonEnable_Object = MibScalar
sysmonEnable = _SysmonEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 17, 1),
    _SysmonEnable_Type()
)
sysmonEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysmonEnable.setStatus("current")
_HeartBeatMonitor_ObjectIdentity = ObjectIdentity
heartBeatMonitor = _HeartBeatMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 17, 2)
)
_HeartBeatMonitorEnable_Type = TruthValue
_HeartBeatMonitorEnable_Object = MibScalar
heartBeatMonitorEnable = _HeartBeatMonitorEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 17, 2, 1),
    _HeartBeatMonitorEnable_Type()
)
heartBeatMonitorEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartBeatMonitorEnable.setStatus("current")


class _HeartBeatMonitorReactivate_Type(HBMReactivateType):
    """Custom type heartBeatMonitorReactivate based on HBMReactivateType"""
    defaultValue = 2


_HeartBeatMonitorReactivate_Type.__name__ = "HBMReactivateType"
_HeartBeatMonitorReactivate_Object = MibScalar
heartBeatMonitorReactivate = _HeartBeatMonitorReactivate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 17, 2, 2),
    _HeartBeatMonitorReactivate_Type()
)
heartBeatMonitorReactivate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    heartBeatMonitorReactivate.setStatus("current")


class _LastDumpedProcess_Type(Integer32):
    """Custom type lastDumpedProcess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65536),
    )


_LastDumpedProcess_Type.__name__ = "Integer32"
_LastDumpedProcess_Object = MibScalar
lastDumpedProcess = _LastDumpedProcess_Object(
    (1, 3, 6, 1, 4, 1, 27975, 17, 3),
    _LastDumpedProcess_Type()
)
lastDumpedProcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lastDumpedProcess.setStatus("current")
_ArpInsp_ObjectIdentity = ObjectIdentity
arpInsp = _ArpInsp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 20)
)
_ArpAclGroupTable_Object = MibTable
arpAclGroupTable = _ArpAclGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 1)
)
if mibBuilder.loadTexts:
    arpAclGroupTable.setStatus("current")
_ArpAclGroupEntry_Object = MibTableRow
arpAclGroupEntry = _ArpAclGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 1, 1)
)
arpAclGroupEntry.setIndexNames(
    (0, "SWITCH", "arpAclGroupIndex"),
)
if mibBuilder.loadTexts:
    arpAclGroupEntry.setStatus("current")


class _ArpAclGroupIndex_Type(Integer32):
    """Custom type arpAclGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30001, 40000),
    )


_ArpAclGroupIndex_Type.__name__ = "Integer32"
_ArpAclGroupIndex_Object = MibTableColumn
arpAclGroupIndex = _ArpAclGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 1, 1, 1),
    _ArpAclGroupIndex_Type()
)
arpAclGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpAclGroupIndex.setStatus("current")


class _ArpAclGroupName_Type(OctetString):
    """Custom type arpAclGroupName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ArpAclGroupName_Type.__name__ = "OctetString"
_ArpAclGroupName_Object = MibTableColumn
arpAclGroupName = _ArpAclGroupName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 1, 1, 2),
    _ArpAclGroupName_Type()
)
arpAclGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclGroupName.setStatus("current")
_ArpAclGroupRowStatus_Type = RowStatus
_ArpAclGroupRowStatus_Object = MibTableColumn
arpAclGroupRowStatus = _ArpAclGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 1, 1, 3),
    _ArpAclGroupRowStatus_Type()
)
arpAclGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclGroupRowStatus.setStatus("current")
_ArpAclRuleTable_Object = MibTable
arpAclRuleTable = _ArpAclRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2)
)
if mibBuilder.loadTexts:
    arpAclRuleTable.setStatus("current")
_ArpAclRuleEntry_Object = MibTableRow
arpAclRuleEntry = _ArpAclRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1)
)
arpAclRuleEntry.setIndexNames(
    (0, "SWITCH", "arpAclIndex"),
    (0, "SWITCH", "arpAclRuleIndex"),
)
if mibBuilder.loadTexts:
    arpAclRuleEntry.setStatus("current")


class _ArpAclIndex_Type(Integer32):
    """Custom type arpAclIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30001, 40000),
    )


_ArpAclIndex_Type.__name__ = "Integer32"
_ArpAclIndex_Object = MibTableColumn
arpAclIndex = _ArpAclIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 1),
    _ArpAclIndex_Type()
)
arpAclIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpAclIndex.setStatus("current")


class _ArpAclRuleIndex_Type(Integer32):
    """Custom type arpAclRuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 131071),
    )


_ArpAclRuleIndex_Type.__name__ = "Integer32"
_ArpAclRuleIndex_Object = MibTableColumn
arpAclRuleIndex = _ArpAclRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 2),
    _ArpAclRuleIndex_Type()
)
arpAclRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpAclRuleIndex.setStatus("current")
_ArpAclAct_Type = RuleAction
_ArpAclAct_Object = MibTableColumn
arpAclAct = _ArpAclAct_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 3),
    _ArpAclAct_Type()
)
arpAclAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclAct.setStatus("current")
_ArpType_Type = ArpType
_ArpType_Object = MibTableColumn
arpType = _ArpType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 4),
    _ArpType_Type()
)
arpType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpType.setStatus("current")
_ArpSenderIp_Type = IpAddress
_ArpSenderIp_Object = MibTableColumn
arpSenderIp = _ArpSenderIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 5),
    _ArpSenderIp_Type()
)
arpSenderIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpSenderIp.setStatus("current")
_ArpSenderIpWild_Type = IpAddress
_ArpSenderIpWild_Object = MibTableColumn
arpSenderIpWild = _ArpSenderIpWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 6),
    _ArpSenderIpWild_Type()
)
arpSenderIpWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpSenderIpWild.setStatus("current")
_ArpSenderMac_Type = OctetString
_ArpSenderMac_Object = MibTableColumn
arpSenderMac = _ArpSenderMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 7),
    _ArpSenderMac_Type()
)
arpSenderMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpSenderMac.setStatus("current")
_ArpSenderMacWild_Type = OctetString
_ArpSenderMacWild_Object = MibTableColumn
arpSenderMacWild = _ArpSenderMacWild_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 8),
    _ArpSenderMacWild_Type()
)
arpSenderMacWild.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpSenderMacWild.setStatus("current")
_ArpAclLog_Type = TruthValue
_ArpAclLog_Object = MibTableColumn
arpAclLog = _ArpAclLog_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 9),
    _ArpAclLog_Type()
)
arpAclLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclLog.setStatus("current")
_ArpAclRowStatus_Type = RowStatus
_ArpAclRowStatus_Object = MibTableColumn
arpAclRowStatus = _ArpAclRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 2, 1, 10),
    _ArpAclRowStatus_Type()
)
arpAclRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclRowStatus.setStatus("current")
_ArpAclApplyTable_Object = MibTable
arpAclApplyTable = _ArpAclApplyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3)
)
if mibBuilder.loadTexts:
    arpAclApplyTable.setStatus("current")
_ArpAclApplyEntry_Object = MibTableRow
arpAclApplyEntry = _ArpAclApplyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3, 1)
)
arpAclApplyEntry.setIndexNames(
    (0, "SWITCH", "arpAclApplyVid"),
)
if mibBuilder.loadTexts:
    arpAclApplyEntry.setStatus("current")


class _ArpAclApplyVid_Type(Integer32):
    """Custom type arpAclApplyVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_ArpAclApplyVid_Type.__name__ = "Integer32"
_ArpAclApplyVid_Object = MibTableColumn
arpAclApplyVid = _ArpAclApplyVid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3, 1, 1),
    _ArpAclApplyVid_Type()
)
arpAclApplyVid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpAclApplyVid.setStatus("current")


class _ArpAclApplyName_Type(OctetString):
    """Custom type arpAclApplyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ArpAclApplyName_Type.__name__ = "OctetString"
_ArpAclApplyName_Object = MibTableColumn
arpAclApplyName = _ArpAclApplyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3, 1, 2),
    _ArpAclApplyName_Type()
)
arpAclApplyName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclApplyName.setStatus("current")


class _ArpAclApplyStatic_Type(TruthValue):
    """Custom type arpAclApplyStatic based on TruthValue"""
    defaultValue = 2


_ArpAclApplyStatic_Type.__name__ = "TruthValue"
_ArpAclApplyStatic_Object = MibTableColumn
arpAclApplyStatic = _ArpAclApplyStatic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3, 1, 3),
    _ArpAclApplyStatic_Type()
)
arpAclApplyStatic.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclApplyStatic.setStatus("current")
_ArpAclApplyRowStatus_Type = RowStatus
_ArpAclApplyRowStatus_Object = MibTableColumn
arpAclApplyRowStatus = _ArpAclApplyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 3, 1, 4),
    _ArpAclApplyRowStatus_Type()
)
arpAclApplyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpAclApplyRowStatus.setStatus("current")
_ArpInspValidateDestMac_Type = TruthValue
_ArpInspValidateDestMac_Object = MibScalar
arpInspValidateDestMac = _ArpInspValidateDestMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 4),
    _ArpInspValidateDestMac_Type()
)
arpInspValidateDestMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpInspValidateDestMac.setStatus("current")
_ArpInspValidateIP_Type = TruthValue
_ArpInspValidateIP_Object = MibScalar
arpInspValidateIP = _ArpInspValidateIP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 5),
    _ArpInspValidateIP_Type()
)
arpInspValidateIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpInspValidateIP.setStatus("current")
_ArpInspValidateSrcMac_Type = TruthValue
_ArpInspValidateSrcMac_Object = MibScalar
arpInspValidateSrcMac = _ArpInspValidateSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 6),
    _ArpInspValidateSrcMac_Type()
)
arpInspValidateSrcMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpInspValidateSrcMac.setStatus("current")
_ArpInspEnableTable_Object = MibTable
arpInspEnableTable = _ArpInspEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 7)
)
if mibBuilder.loadTexts:
    arpInspEnableTable.setStatus("current")
_ArpInspEnableEntry_Object = MibTableRow
arpInspEnableEntry = _ArpInspEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 7, 1)
)
arpInspEnableEntry.setIndexNames(
    (0, "SWITCH", "arpInspEnVid"),
)
if mibBuilder.loadTexts:
    arpInspEnableEntry.setStatus("current")


class _ArpInspEnVid_Type(Integer32):
    """Custom type arpInspEnVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ArpInspEnVid_Type.__name__ = "Integer32"
_ArpInspEnVid_Object = MibTableColumn
arpInspEnVid = _ArpInspEnVid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 7, 1, 1),
    _ArpInspEnVid_Type()
)
arpInspEnVid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpInspEnVid.setStatus("current")
_ArpInspEnableRowStatus_Type = RowStatus
_ArpInspEnableRowStatus_Object = MibTableColumn
arpInspEnableRowStatus = _ArpInspEnableRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 7, 1, 2),
    _ArpInspEnableRowStatus_Type()
)
arpInspEnableRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpInspEnableRowStatus.setStatus("current")
_ArpInspIfTrustTable_Object = MibTable
arpInspIfTrustTable = _ArpInspIfTrustTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 8)
)
if mibBuilder.loadTexts:
    arpInspIfTrustTable.setStatus("current")
_ArpInspIfTrustEntry_Object = MibTableRow
arpInspIfTrustEntry = _ArpInspIfTrustEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 8, 1)
)
arpInspIfTrustEntry.setIndexNames(
    (0, "SWITCH", "arpInspTrustIfindex"),
)
if mibBuilder.loadTexts:
    arpInspIfTrustEntry.setStatus("current")


class _ArpInspTrustIfindex_Type(Integer32):
    """Custom type arpInspTrustIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ArpInspTrustIfindex_Type.__name__ = "Integer32"
_ArpInspTrustIfindex_Object = MibTableColumn
arpInspTrustIfindex = _ArpInspTrustIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 8, 1, 1),
    _ArpInspTrustIfindex_Type()
)
arpInspTrustIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpInspTrustIfindex.setStatus("current")
_ArpInspTrustRowStatus_Type = RowStatus
_ArpInspTrustRowStatus_Object = MibTableColumn
arpInspTrustRowStatus = _ArpInspTrustRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 8, 1, 2),
    _ArpInspTrustRowStatus_Type()
)
arpInspTrustRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpInspTrustRowStatus.setStatus("current")


class _ArpInspLogbuffEntries_Type(Integer32):
    """Custom type arpInspLogbuffEntries based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1024),
    )


_ArpInspLogbuffEntries_Type.__name__ = "Integer32"
_ArpInspLogbuffEntries_Object = MibScalar
arpInspLogbuffEntries = _ArpInspLogbuffEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 9),
    _ArpInspLogbuffEntries_Type()
)
arpInspLogbuffEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpInspLogbuffEntries.setStatus("current")
_ArpInspLogbuffLogsTable_Object = MibTable
arpInspLogbuffLogsTable = _ArpInspLogbuffLogsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 10)
)
if mibBuilder.loadTexts:
    arpInspLogbuffLogsTable.setStatus("current")
_ArpInspLogbuffLogsEntry_Object = MibTableRow
arpInspLogbuffLogsEntry = _ArpInspLogbuffLogsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 10, 1)
)
arpInspLogbuffLogsEntry.setIndexNames(
    (0, "SWITCH", "arpInspLogbuffLogs"),
)
if mibBuilder.loadTexts:
    arpInspLogbuffLogsEntry.setStatus("current")


class _ArpInspLogbuffLogs_Type(Integer32):
    """Custom type arpInspLogbuffLogs based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_ArpInspLogbuffLogs_Type.__name__ = "Integer32"
_ArpInspLogbuffLogs_Object = MibTableColumn
arpInspLogbuffLogs = _ArpInspLogbuffLogs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 10, 1, 1),
    _ArpInspLogbuffLogs_Type()
)
arpInspLogbuffLogs.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arpInspLogbuffLogs.setStatus("current")


class _ArpInspLogbuffInterval_Type(Integer32):
    """Custom type arpInspLogbuffInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_ArpInspLogbuffInterval_Type.__name__ = "Integer32"
_ArpInspLogbuffInterval_Object = MibTableColumn
arpInspLogbuffInterval = _ArpInspLogbuffInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 10, 1, 2),
    _ArpInspLogbuffInterval_Type()
)
arpInspLogbuffInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpInspLogbuffInterval.setStatus("current")
_ArpInspLogbuffRowStatus_Type = RowStatus
_ArpInspLogbuffRowStatus_Object = MibTableColumn
arpInspLogbuffRowStatus = _ArpInspLogbuffRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 20, 10, 1, 3),
    _ArpInspLogbuffRowStatus_Type()
)
arpInspLogbuffRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    arpInspLogbuffRowStatus.setStatus("current")
_PimsmExt_ObjectIdentity = ObjectIdentity
pimsmExt = _PimsmExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 21)
)
_PimsmMibObject_ObjectIdentity = ObjectIdentity
pimsmMibObject = _PimsmMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1)
)
if mibBuilder.loadTexts:
    pimsmMibObject.setStatus("current")
_PimInterfaceExtTable_Object = MibTable
pimInterfaceExtTable = _PimInterfaceExtTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1)
)
if mibBuilder.loadTexts:
    pimInterfaceExtTable.setStatus("current")
_PimInterfaceExtEntry_Object = MibTableRow
pimInterfaceExtEntry = _PimInterfaceExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1)
)
pimInterfaceExtEntry.setIndexNames(
    (0, "SWITCH", "pimInterfaceIfIndex"),
    (0, "SWITCH", "pimInterfaceIPVersion"),
)
if mibBuilder.loadTexts:
    pimInterfaceExtEntry.setStatus("current")


class _PimInterfaceIfIndex_Type(Integer32):
    """Custom type pimInterfaceIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimInterfaceIfIndex_Type.__name__ = "Integer32"
_PimInterfaceIfIndex_Object = MibTableColumn
pimInterfaceIfIndex = _PimInterfaceIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1, 1),
    _PimInterfaceIfIndex_Type()
)
pimInterfaceIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pimInterfaceIfIndex.setStatus("current")


class _PimInterfaceIPVersion_Type(Integer32):
    """Custom type pimInterfaceIPVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_PimInterfaceIPVersion_Type.__name__ = "Integer32"
_PimInterfaceIPVersion_Object = MibTableColumn
pimInterfaceIPVersion = _PimInterfaceIPVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1, 2),
    _PimInterfaceIPVersion_Type()
)
pimInterfaceIPVersion.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pimInterfaceIPVersion.setStatus("current")
_PimInterfaceExcludeGenid_Type = TruthValue
_PimInterfaceExcludeGenid_Object = MibTableColumn
pimInterfaceExcludeGenid = _PimInterfaceExcludeGenid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1, 3),
    _PimInterfaceExcludeGenid_Type()
)
pimInterfaceExcludeGenid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimInterfaceExcludeGenid.setStatus("current")


class _PimInterfaceNeighborFilter_Type(OctetString):
    """Custom type pimInterfaceNeighborFilter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PimInterfaceNeighborFilter_Type.__name__ = "OctetString"
_PimInterfaceNeighborFilter_Object = MibTableColumn
pimInterfaceNeighborFilter = _PimInterfaceNeighborFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1, 4),
    _PimInterfaceNeighborFilter_Type()
)
pimInterfaceNeighborFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimInterfaceNeighborFilter.setStatus("current")
_PimInterfaceUnicastBsm_Type = TruthValue
_PimInterfaceUnicastBsm_Object = MibTableColumn
pimInterfaceUnicastBsm = _PimInterfaceUnicastBsm_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 1, 1, 5),
    _PimInterfaceUnicastBsm_Type()
)
pimInterfaceUnicastBsm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimInterfaceUnicastBsm.setStatus("current")


class _PimAcceptRegisterList_Type(OctetString):
    """Custom type pimAcceptRegisterList based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PimAcceptRegisterList_Type.__name__ = "OctetString"
_PimAcceptRegisterList_Object = MibScalar
pimAcceptRegisterList = _PimAcceptRegisterList_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 2),
    _PimAcceptRegisterList_Type()
)
pimAcceptRegisterList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimAcceptRegisterList.setStatus("current")
_PimIgnoreRpSetPriority_Type = TruthValue
_PimIgnoreRpSetPriority_Object = MibScalar
pimIgnoreRpSetPriority = _PimIgnoreRpSetPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 3),
    _PimIgnoreRpSetPriority_Type()
)
pimIgnoreRpSetPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIgnoreRpSetPriority.setStatus("current")
_PimCiscoRegisterChecksum_Type = TruthValue
_PimCiscoRegisterChecksum_Object = MibScalar
pimCiscoRegisterChecksum = _PimCiscoRegisterChecksum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 4),
    _PimCiscoRegisterChecksum_Type()
)
pimCiscoRegisterChecksum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimCiscoRegisterChecksum.setStatus("current")


class _PimJpTimer_Type(Unsigned32):
    """Custom type pimJpTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimJpTimer_Type.__name__ = "Unsigned32"
_PimJpTimer_Object = MibScalar
pimJpTimer = _PimJpTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 5),
    _PimJpTimer_Type()
)
pimJpTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimJpTimer.setStatus("current")


class _PimRegisterRateLimit_Type(Unsigned32):
    """Custom type pimRegisterRateLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimRegisterRateLimit_Type.__name__ = "Unsigned32"
_PimRegisterRateLimit_Object = MibScalar
pimRegisterRateLimit = _PimRegisterRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 6),
    _PimRegisterRateLimit_Type()
)
pimRegisterRateLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRegisterRateLimit.setStatus("current")
_PimRegisterRpReachability_Type = TruthValue
_PimRegisterRpReachability_Object = MibScalar
pimRegisterRpReachability = _PimRegisterRpReachability_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 7),
    _PimRegisterRpReachability_Type()
)
pimRegisterRpReachability.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRegisterRpReachability.setStatus("current")


class _PimRegisterSource_Type(OctetString):
    """Custom type pimRegisterSource based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PimRegisterSource_Type.__name__ = "OctetString"
_PimRegisterSource_Object = MibScalar
pimRegisterSource = _PimRegisterSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 8),
    _PimRegisterSource_Type()
)
pimRegisterSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRegisterSource.setStatus("current")
_PimRegisterSuppression_Type = TruthValue
_PimRegisterSuppression_Object = MibScalar
pimRegisterSuppression = _PimRegisterSuppression_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 9),
    _PimRegisterSuppression_Type()
)
pimRegisterSuppression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRegisterSuppression.setStatus("current")


class _PimRpRegisterKat_Type(Unsigned32):
    """Custom type pimRpRegisterKat based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimRpRegisterKat_Type.__name__ = "Unsigned32"
_PimRpRegisterKat_Object = MibScalar
pimRpRegisterKat = _PimRpRegisterKat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 10),
    _PimRpRegisterKat_Type()
)
pimRpRegisterKat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimRpRegisterKat.setStatus("current")
_PimSptSwitchThresholdInfinity_Type = TruthValue
_PimSptSwitchThresholdInfinity_Object = MibScalar
pimSptSwitchThresholdInfinity = _PimSptSwitchThresholdInfinity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 11),
    _PimSptSwitchThresholdInfinity_Type()
)
pimSptSwitchThresholdInfinity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimSptSwitchThresholdInfinity.setStatus("current")


class _PimSptSwitchThresholdInfinityList_Type(OctetString):
    """Custom type pimSptSwitchThresholdInfinityList based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PimSptSwitchThresholdInfinityList_Type.__name__ = "OctetString"
_PimSptSwitchThresholdInfinityList_Object = MibScalar
pimSptSwitchThresholdInfinityList = _PimSptSwitchThresholdInfinityList_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 12),
    _PimSptSwitchThresholdInfinityList_Type()
)
pimSptSwitchThresholdInfinityList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimSptSwitchThresholdInfinityList.setStatus("current")


class _PimBsrCandidate_Type(OctetString):
    """Custom type pimBsrCandidate based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PimBsrCandidate_Type.__name__ = "OctetString"
_PimBsrCandidate_Object = MibScalar
pimBsrCandidate = _PimBsrCandidate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 13),
    _PimBsrCandidate_Type()
)
pimBsrCandidate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimBsrCandidate.setStatus("current")
_PimSsmDefault_Type = TruthValue
_PimSsmDefault_Object = MibScalar
pimSsmDefault = _PimSsmDefault_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 14),
    _PimSsmDefault_Type()
)
pimSsmDefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimSsmDefault.setStatus("current")


class _PimSsmRange_Type(OctetString):
    """Custom type pimSsmRange based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_PimSsmRange_Type.__name__ = "OctetString"
_PimSsmRange_Object = MibScalar
pimSsmRange = _PimSsmRange_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 15),
    _PimSsmRange_Type()
)
pimSsmRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimSsmRange.setStatus("current")


class _PimMcastPimSmAdminMode_Type(Integer32):
    """Custom type pimMcastPimSmAdminMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_PimMcastPimSmAdminMode_Type.__name__ = "Integer32"
_PimMcastPimSmAdminMode_Object = MibScalar
pimMcastPimSmAdminMode = _PimMcastPimSmAdminMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 16),
    _PimMcastPimSmAdminMode_Type()
)
pimMcastPimSmAdminMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimMcastPimSmAdminMode.setStatus("current")


class _PimSwitchIPRoutingMode_Type(Integer32):
    """Custom type pimSwitchIPRoutingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_PimSwitchIPRoutingMode_Type.__name__ = "Integer32"
_PimSwitchIPRoutingMode_Object = MibScalar
pimSwitchIPRoutingMode = _PimSwitchIPRoutingMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 17),
    _PimSwitchIPRoutingMode_Type()
)
pimSwitchIPRoutingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimSwitchIPRoutingMode.setStatus("current")
_PimIfMcastEnableExtTable_Object = MibTable
pimIfMcastEnableExtTable = _PimIfMcastEnableExtTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18)
)
if mibBuilder.loadTexts:
    pimIfMcastEnableExtTable.setStatus("current")
_PimIfMcastEnableExtEntry_Object = MibTableRow
pimIfMcastEnableExtEntry = _PimIfMcastEnableExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18, 1)
)
pimIfMcastEnableExtEntry.setIndexNames(
    (0, "SWITCH", "pimIfMcastEnableIfIndex"),
    (0, "SWITCH", "pimIfMcastEnableIPVersion"),
)
if mibBuilder.loadTexts:
    pimIfMcastEnableExtEntry.setStatus("current")


class _PimIfMcastEnableIfIndex_Type(Integer32):
    """Custom type pimIfMcastEnableIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PimIfMcastEnableIfIndex_Type.__name__ = "Integer32"
_PimIfMcastEnableIfIndex_Object = MibTableColumn
pimIfMcastEnableIfIndex = _PimIfMcastEnableIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18, 1, 1),
    _PimIfMcastEnableIfIndex_Type()
)
pimIfMcastEnableIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pimIfMcastEnableIfIndex.setStatus("current")


class _PimIfMcastEnableIPVersion_Type(Integer32):
    """Custom type pimIfMcastEnableIPVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_PimIfMcastEnableIPVersion_Type.__name__ = "Integer32"
_PimIfMcastEnableIPVersion_Object = MibTableColumn
pimIfMcastEnableIPVersion = _PimIfMcastEnableIPVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18, 1, 2),
    _PimIfMcastEnableIPVersion_Type()
)
pimIfMcastEnableIPVersion.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pimIfMcastEnableIPVersion.setStatus("current")


class _PimIfMcastEnable_Type(Integer32):
    """Custom type pimIfMcastEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 6),
    )


_PimIfMcastEnable_Type.__name__ = "Integer32"
_PimIfMcastEnable_Object = MibTableColumn
pimIfMcastEnable = _PimIfMcastEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18, 1, 3),
    _PimIfMcastEnable_Type()
)
pimIfMcastEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimIfMcastEnable.setStatus("current")


class _PimIfMcastEnableState_Type(Integer32):
    """Custom type pimIfMcastEnableState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_PimIfMcastEnableState_Type.__name__ = "Integer32"
_PimIfMcastEnableState_Object = MibTableColumn
pimIfMcastEnableState = _PimIfMcastEnableState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 21, 1, 18, 1, 4),
    _PimIfMcastEnableState_Type()
)
pimIfMcastEnableState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pimIfMcastEnableState.setStatus("current")
_OspfExt_ObjectIdentity = ObjectIdentity
ospfExt = _OspfExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22)
)
_OspfExtProcessTable_Object = MibTable
ospfExtProcessTable = _OspfExtProcessTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1)
)
if mibBuilder.loadTexts:
    ospfExtProcessTable.setStatus("current")
_OspfExtProcessEntry_Object = MibTableRow
ospfExtProcessEntry = _OspfExtProcessEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1)
)
ospfExtProcessEntry.setIndexNames(
    (0, "SWITCH", "ospfExtProcessIndex"),
)
if mibBuilder.loadTexts:
    ospfExtProcessEntry.setStatus("current")


class _OspfExtProcessIndex_Type(Integer32):
    """Custom type ospfExtProcessIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtProcessIndex_Type.__name__ = "Integer32"
_OspfExtProcessIndex_Object = MibTableColumn
ospfExtProcessIndex = _OspfExtProcessIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 1),
    _OspfExtProcessIndex_Type()
)
ospfExtProcessIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtProcessIndex.setStatus("current")


class _OspfExtProcessVrfName_Type(OctetString):
    """Custom type ospfExtProcessVrfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtProcessVrfName_Type.__name__ = "OctetString"
_OspfExtProcessVrfName_Object = MibTableColumn
ospfExtProcessVrfName = _OspfExtProcessVrfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 2),
    _OspfExtProcessVrfName_Type()
)
ospfExtProcessVrfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtProcessVrfName.setStatus("current")
_OspfExtProcessRowStatus_Type = RowStatus
_OspfExtProcessRowStatus_Object = MibTableColumn
ospfExtProcessRowStatus = _OspfExtProcessRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 3),
    _OspfExtProcessRowStatus_Type()
)
ospfExtProcessRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtProcessRowStatus.setStatus("current")


class _OspfExtProcessLsaSummaryRouterCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryRouterCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryRouterCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryRouterCount_Object = MibTableColumn
ospfExtProcessLsaSummaryRouterCount = _OspfExtProcessLsaSummaryRouterCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 4),
    _OspfExtProcessLsaSummaryRouterCount_Type()
)
ospfExtProcessLsaSummaryRouterCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryRouterCount.setStatus("current")


class _OspfExtProcessLsaSummaryRouterMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryRouterMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryRouterMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryRouterMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryRouterMaxAge = _OspfExtProcessLsaSummaryRouterMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 5),
    _OspfExtProcessLsaSummaryRouterMaxAge_Type()
)
ospfExtProcessLsaSummaryRouterMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryRouterMaxAge.setStatus("current")


class _OspfExtProcessLsaSummaryNetworkCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryNetworkCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryNetworkCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryNetworkCount_Object = MibTableColumn
ospfExtProcessLsaSummaryNetworkCount = _OspfExtProcessLsaSummaryNetworkCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 6),
    _OspfExtProcessLsaSummaryNetworkCount_Type()
)
ospfExtProcessLsaSummaryNetworkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryNetworkCount.setStatus("current")


class _OspfExtProcessLsaSummaryNetworkMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryNetworkMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryNetworkMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryNetworkMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryNetworkMaxAge = _OspfExtProcessLsaSummaryNetworkMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 7),
    _OspfExtProcessLsaSummaryNetworkMaxAge_Type()
)
ospfExtProcessLsaSummaryNetworkMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryNetworkMaxAge.setStatus("current")


class _OspfExtProcessLsaSummaryNetCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryNetCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryNetCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryNetCount_Object = MibTableColumn
ospfExtProcessLsaSummaryNetCount = _OspfExtProcessLsaSummaryNetCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 8),
    _OspfExtProcessLsaSummaryNetCount_Type()
)
ospfExtProcessLsaSummaryNetCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryNetCount.setStatus("current")


class _OspfExtProcessLsaSummaryNetMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryNetMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryNetMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryNetMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryNetMaxAge = _OspfExtProcessLsaSummaryNetMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 9),
    _OspfExtProcessLsaSummaryNetMaxAge_Type()
)
ospfExtProcessLsaSummaryNetMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryNetMaxAge.setStatus("current")


class _OspfExtProcessLsaSummaryASBRCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryASBRCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryASBRCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryASBRCount_Object = MibTableColumn
ospfExtProcessLsaSummaryASBRCount = _OspfExtProcessLsaSummaryASBRCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 10),
    _OspfExtProcessLsaSummaryASBRCount_Type()
)
ospfExtProcessLsaSummaryASBRCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryASBRCount.setStatus("current")


class _OspfExtProcessLsaSummaryASBRMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryASBRMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryASBRMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryASBRMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryASBRMaxAge = _OspfExtProcessLsaSummaryASBRMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 11),
    _OspfExtProcessLsaSummaryASBRMaxAge_Type()
)
ospfExtProcessLsaSummaryASBRMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryASBRMaxAge.setStatus("current")


class _OspfExtProcessLsaSummaryType5ExtCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryType5ExtCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryType5ExtCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryType5ExtCount_Object = MibTableColumn
ospfExtProcessLsaSummaryType5ExtCount = _OspfExtProcessLsaSummaryType5ExtCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 12),
    _OspfExtProcessLsaSummaryType5ExtCount_Type()
)
ospfExtProcessLsaSummaryType5ExtCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryType5ExtCount.setStatus("current")


class _OspfExtProcessLsaSummaryType5ExtMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryType5ExtMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryType5ExtMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryType5ExtMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryType5ExtMaxAge = _OspfExtProcessLsaSummaryType5ExtMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 13),
    _OspfExtProcessLsaSummaryType5ExtMaxAge_Type()
)
ospfExtProcessLsaSummaryType5ExtMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryType5ExtMaxAge.setStatus("current")


class _OspfExtProcessLsaSummaryAttributeCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryAttributeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryAttributeCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryAttributeCount_Object = MibTableColumn
ospfExtProcessLsaSummaryAttributeCount = _OspfExtProcessLsaSummaryAttributeCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 14),
    _OspfExtProcessLsaSummaryAttributeCount_Type()
)
ospfExtProcessLsaSummaryAttributeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryAttributeCount.setStatus("obsolete")


class _OspfExtProcessLsaSummaryAttributeMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryAttributeMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryAttributeMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryAttributeMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryAttributeMaxAge = _OspfExtProcessLsaSummaryAttributeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 15),
    _OspfExtProcessLsaSummaryAttributeMaxAge_Type()
)
ospfExtProcessLsaSummaryAttributeMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryAttributeMaxAge.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueLinkCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueLinkCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueLinkCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueLinkCount_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueLinkCount = _OspfExtProcessLsaSummaryOpaqueLinkCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 16),
    _OspfExtProcessLsaSummaryOpaqueLinkCount_Type()
)
ospfExtProcessLsaSummaryOpaqueLinkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueLinkCount.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueLinkMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueLinkMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueLinkMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueLinkMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueLinkMaxAge = _OspfExtProcessLsaSummaryOpaqueLinkMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 17),
    _OspfExtProcessLsaSummaryOpaqueLinkMaxAge_Type()
)
ospfExtProcessLsaSummaryOpaqueLinkMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueLinkMaxAge.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueProcessCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueProcessCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueProcessCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueProcessCount_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueProcessCount = _OspfExtProcessLsaSummaryOpaqueProcessCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 18),
    _OspfExtProcessLsaSummaryOpaqueProcessCount_Type()
)
ospfExtProcessLsaSummaryOpaqueProcessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueProcessCount.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueProcessMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueProcessMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueProcessMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueProcessMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueProcessMaxAge = _OspfExtProcessLsaSummaryOpaqueProcessMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 19),
    _OspfExtProcessLsaSummaryOpaqueProcessMaxAge_Type()
)
ospfExtProcessLsaSummaryOpaqueProcessMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueProcessMaxAge.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueASCount_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueASCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueASCount_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueASCount_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueASCount = _OspfExtProcessLsaSummaryOpaqueASCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 20),
    _OspfExtProcessLsaSummaryOpaqueASCount_Type()
)
ospfExtProcessLsaSummaryOpaqueASCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueASCount.setStatus("obsolete")


class _OspfExtProcessLsaSummaryOpaqueASMaxAge_Type(Integer32):
    """Custom type ospfExtProcessLsaSummaryOpaqueASMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessLsaSummaryOpaqueASMaxAge_Type.__name__ = "Integer32"
_OspfExtProcessLsaSummaryOpaqueASMaxAge_Object = MibTableColumn
ospfExtProcessLsaSummaryOpaqueASMaxAge = _OspfExtProcessLsaSummaryOpaqueASMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 21),
    _OspfExtProcessLsaSummaryOpaqueASMaxAge_Type()
)
ospfExtProcessLsaSummaryOpaqueASMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessLsaSummaryOpaqueASMaxAge.setStatus("obsolete")


class _OspfExtProcessRouteSummaryConnectedCount_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryConnectedCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryConnectedCount_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryConnectedCount_Object = MibTableColumn
ospfExtProcessRouteSummaryConnectedCount = _OspfExtProcessRouteSummaryConnectedCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 22),
    _OspfExtProcessRouteSummaryConnectedCount_Type()
)
ospfExtProcessRouteSummaryConnectedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryConnectedCount.setStatus("current")


class _OspfExtProcessRouteSummaryDiscardCount_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryDiscardCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryDiscardCount_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryDiscardCount_Object = MibTableColumn
ospfExtProcessRouteSummaryDiscardCount = _OspfExtProcessRouteSummaryDiscardCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 23),
    _OspfExtProcessRouteSummaryDiscardCount_Type()
)
ospfExtProcessRouteSummaryDiscardCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryDiscardCount.setStatus("current")


class _OspfExtProcessRouteSummaryIntraAreaCount_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryIntraAreaCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryIntraAreaCount_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryIntraAreaCount_Object = MibTableColumn
ospfExtProcessRouteSummaryIntraAreaCount = _OspfExtProcessRouteSummaryIntraAreaCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 24),
    _OspfExtProcessRouteSummaryIntraAreaCount_Type()
)
ospfExtProcessRouteSummaryIntraAreaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryIntraAreaCount.setStatus("current")


class _OspfExtProcessRouteSummaryInterAreaCount_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryInterAreaCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryInterAreaCount_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryInterAreaCount_Object = MibTableColumn
ospfExtProcessRouteSummaryInterAreaCount = _OspfExtProcessRouteSummaryInterAreaCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 25),
    _OspfExtProcessRouteSummaryInterAreaCount_Type()
)
ospfExtProcessRouteSummaryInterAreaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryInterAreaCount.setStatus("current")


class _OspfExtProcessRouteSummaryExtType1Count_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryExtType1Count based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryExtType1Count_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryExtType1Count_Object = MibTableColumn
ospfExtProcessRouteSummaryExtType1Count = _OspfExtProcessRouteSummaryExtType1Count_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 26),
    _OspfExtProcessRouteSummaryExtType1Count_Type()
)
ospfExtProcessRouteSummaryExtType1Count.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryExtType1Count.setStatus("current")


class _OspfExtProcessRouteSummaryExtType2Count_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryExtType2Count based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryExtType2Count_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryExtType2Count_Object = MibTableColumn
ospfExtProcessRouteSummaryExtType2Count = _OspfExtProcessRouteSummaryExtType2Count_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 27),
    _OspfExtProcessRouteSummaryExtType2Count_Type()
)
ospfExtProcessRouteSummaryExtType2Count.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryExtType2Count.setStatus("current")


class _OspfExtProcessRouteSummaryN1Count_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryN1Count based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryN1Count_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryN1Count_Object = MibTableColumn
ospfExtProcessRouteSummaryN1Count = _OspfExtProcessRouteSummaryN1Count_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 28),
    _OspfExtProcessRouteSummaryN1Count_Type()
)
ospfExtProcessRouteSummaryN1Count.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryN1Count.setStatus("current")


class _OspfExtProcessRouteSummaryN2Count_Type(Integer32):
    """Custom type ospfExtProcessRouteSummaryN2Count based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtProcessRouteSummaryN2Count_Type.__name__ = "Integer32"
_OspfExtProcessRouteSummaryN2Count_Object = MibTableColumn
ospfExtProcessRouteSummaryN2Count = _OspfExtProcessRouteSummaryN2Count_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 1, 1, 29),
    _OspfExtProcessRouteSummaryN2Count_Type()
)
ospfExtProcessRouteSummaryN2Count.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtProcessRouteSummaryN2Count.setStatus("current")
_OspfExtBinding_Type = Integer32
_OspfExtBinding_Object = MibScalar
ospfExtBinding = _OspfExtBinding_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 2),
    _OspfExtBinding_Type()
)
ospfExtBinding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtBinding.setStatus("current")
_OspfExtIfTable_Object = MibTable
ospfExtIfTable = _OspfExtIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3)
)
if mibBuilder.loadTexts:
    ospfExtIfTable.setStatus("current")
_OspfExtIfEntry_Object = MibTableRow
ospfExtIfEntry = _OspfExtIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1)
)
ospfExtIfEntry.setIndexNames(
    (0, "SWITCH", "ospfExtIfIpAddress"),
    (0, "SWITCH", "ospfExtAddressLessIf"),
)
if mibBuilder.loadTexts:
    ospfExtIfEntry.setStatus("current")
_OspfExtIfIpAddress_Type = IpAddress
_OspfExtIfIpAddress_Object = MibTableColumn
ospfExtIfIpAddress = _OspfExtIfIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 1),
    _OspfExtIfIpAddress_Type()
)
ospfExtIfIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtIfIpAddress.setStatus("current")


class _OspfExtAddressLessIf_Type(Integer32):
    """Custom type ospfExtAddressLessIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtAddressLessIf_Type.__name__ = "Integer32"
_OspfExtAddressLessIf_Object = MibTableColumn
ospfExtAddressLessIf = _OspfExtAddressLessIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 2),
    _OspfExtAddressLessIf_Type()
)
ospfExtAddressLessIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtAddressLessIf.setStatus("current")
_OspfExtIfMtu_Type = Integer32
_OspfExtIfMtu_Object = MibTableColumn
ospfExtIfMtu = _OspfExtIfMtu_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 3),
    _OspfExtIfMtu_Type()
)
ospfExtIfMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfMtu.setStatus("current")
_OspfExtIfCost_Type = Integer32
_OspfExtIfCost_Object = MibTableColumn
ospfExtIfCost = _OspfExtIfCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 4),
    _OspfExtIfCost_Type()
)
ospfExtIfCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfCost.setStatus("current")


class _OspfExtIfOutgoingLSA_Type(Integer32):
    """Custom type ospfExtIfOutgoingLSA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unset", 1),
          ("set", 2))
    )


_OspfExtIfOutgoingLSA_Type.__name__ = "Integer32"
_OspfExtIfOutgoingLSA_Object = MibTableColumn
ospfExtIfOutgoingLSA = _OspfExtIfOutgoingLSA_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 5),
    _OspfExtIfOutgoingLSA_Type()
)
ospfExtIfOutgoingLSA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfOutgoingLSA.setStatus("current")


class _OspfExtIfMtuIgnore_Type(Integer32):
    """Custom type ospfExtIfMtuIgnore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unset", 1),
          ("set", 2))
    )


_OspfExtIfMtuIgnore_Type.__name__ = "Integer32"
_OspfExtIfMtuIgnore_Object = MibTableColumn
ospfExtIfMtuIgnore = _OspfExtIfMtuIgnore_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 6),
    _OspfExtIfMtuIgnore_Type()
)
ospfExtIfMtuIgnore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfMtuIgnore.setStatus("current")


class _OspfExtIfAuth_Type(Integer32):
    """Custom type ospfExtIfAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noAuthentication", 0),
          ("simple", 1),
          ("message-digest", 2),
          ("unset", 3))
    )


_OspfExtIfAuth_Type.__name__ = "Integer32"
_OspfExtIfAuth_Object = MibTableColumn
ospfExtIfAuth = _OspfExtIfAuth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 9),
    _OspfExtIfAuth_Type()
)
ospfExtIfAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfAuth.setStatus("current")


class _OspfExtIfDeadInterval_Type(Integer32):
    """Custom type ospfExtIfDeadInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtIfDeadInterval_Type.__name__ = "Integer32"
_OspfExtIfDeadInterval_Object = MibTableColumn
ospfExtIfDeadInterval = _OspfExtIfDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 10),
    _OspfExtIfDeadInterval_Type()
)
ospfExtIfDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfDeadInterval.setStatus("current")


class _OspfExtIfHelloInterval_Type(Integer32):
    """Custom type ospfExtIfHelloInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtIfHelloInterval_Type.__name__ = "Integer32"
_OspfExtIfHelloInterval_Object = MibTableColumn
ospfExtIfHelloInterval = _OspfExtIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 11),
    _OspfExtIfHelloInterval_Type()
)
ospfExtIfHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfHelloInterval.setStatus("current")


class _OspfExtIfPri_Type(Integer32):
    """Custom type ospfExtIfPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OspfExtIfPri_Type.__name__ = "Integer32"
_OspfExtIfPri_Object = MibTableColumn
ospfExtIfPri = _OspfExtIfPri_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 12),
    _OspfExtIfPri_Type()
)
ospfExtIfPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfPri.setStatus("current")


class _OspfExtIfRetransInterval_Type(Integer32):
    """Custom type ospfExtIfRetransInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtIfRetransInterval_Type.__name__ = "Integer32"
_OspfExtIfRetransInterval_Object = MibTableColumn
ospfExtIfRetransInterval = _OspfExtIfRetransInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 13),
    _OspfExtIfRetransInterval_Type()
)
ospfExtIfRetransInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfRetransInterval.setStatus("current")


class _OspfExtIfTransDelay_Type(Integer32):
    """Custom type ospfExtIfTransDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtIfTransDelay_Type.__name__ = "Integer32"
_OspfExtIfTransDelay_Object = MibTableColumn
ospfExtIfTransDelay = _OspfExtIfTransDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 14),
    _OspfExtIfTransDelay_Type()
)
ospfExtIfTransDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfTransDelay.setStatus("current")
_OspfExtIfDRRouterId_Type = IpAddress
_OspfExtIfDRRouterId_Object = MibTableColumn
ospfExtIfDRRouterId = _OspfExtIfDRRouterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 15),
    _OspfExtIfDRRouterId_Type()
)
ospfExtIfDRRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfDRRouterId.setStatus("current")
_OspfExtIfBackupDRRouterId_Type = IpAddress
_OspfExtIfBackupDRRouterId_Object = MibTableColumn
ospfExtIfBackupDRRouterId = _OspfExtIfBackupDRRouterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 16),
    _OspfExtIfBackupDRRouterId_Type()
)
ospfExtIfBackupDRRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfBackupDRRouterId.setStatus("current")
_OspfExtIfDbFilterFlag_Type = Integer32
_OspfExtIfDbFilterFlag_Object = MibTableColumn
ospfExtIfDbFilterFlag = _OspfExtIfDbFilterFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 17),
    _OspfExtIfDbFilterFlag_Type()
)
ospfExtIfDbFilterFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfDbFilterFlag.setStatus("current")


class _OspfExtIfHelloDue_Type(OctetString):
    """Custom type ospfExtIfHelloDue based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtIfHelloDue_Type.__name__ = "OctetString"
_OspfExtIfHelloDue_Object = MibTableColumn
ospfExtIfHelloDue = _OspfExtIfHelloDue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 18),
    _OspfExtIfHelloDue_Type()
)
ospfExtIfHelloDue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfHelloDue.setStatus("current")


class _OspfExtIfNeighborCount_Type(Gauge32):
    """Custom type ospfExtIfNeighborCount based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfNeighborCount_Type.__name__ = "Gauge32"
_OspfExtIfNeighborCount_Object = MibTableColumn
ospfExtIfNeighborCount = _OspfExtIfNeighborCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 19),
    _OspfExtIfNeighborCount_Type()
)
ospfExtIfNeighborCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfNeighborCount.setStatus("current")


class _OspfExtIfAdjacentNeighborCount_Type(Gauge32):
    """Custom type ospfExtIfAdjacentNeighborCount based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfAdjacentNeighborCount_Type.__name__ = "Gauge32"
_OspfExtIfAdjacentNeighborCount_Object = MibTableColumn
ospfExtIfAdjacentNeighborCount = _OspfExtIfAdjacentNeighborCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 20),
    _OspfExtIfAdjacentNeighborCount_Type()
)
ospfExtIfAdjacentNeighborCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfAdjacentNeighborCount.setStatus("current")


class _OspfExtIfCryptSequenceNumber_Type(Gauge32):
    """Custom type ospfExtIfCryptSequenceNumber based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfCryptSequenceNumber_Type.__name__ = "Gauge32"
_OspfExtIfCryptSequenceNumber_Object = MibTableColumn
ospfExtIfCryptSequenceNumber = _OspfExtIfCryptSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 21),
    _OspfExtIfCryptSequenceNumber_Type()
)
ospfExtIfCryptSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfCryptSequenceNumber.setStatus("current")


class _OspfExtIfHelloRecv_Type(Gauge32):
    """Custom type ospfExtIfHelloRecv based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfHelloRecv_Type.__name__ = "Gauge32"
_OspfExtIfHelloRecv_Object = MibTableColumn
ospfExtIfHelloRecv = _OspfExtIfHelloRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 22),
    _OspfExtIfHelloRecv_Type()
)
ospfExtIfHelloRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfHelloRecv.setStatus("current")


class _OspfExtIfHelloSend_Type(Gauge32):
    """Custom type ospfExtIfHelloSend based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfHelloSend_Type.__name__ = "Gauge32"
_OspfExtIfHelloSend_Object = MibTableColumn
ospfExtIfHelloSend = _OspfExtIfHelloSend_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 23),
    _OspfExtIfHelloSend_Type()
)
ospfExtIfHelloSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfHelloSend.setStatus("current")


class _OspfExtIfDDRecv_Type(Gauge32):
    """Custom type ospfExtIfDDRecv based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfDDRecv_Type.__name__ = "Gauge32"
_OspfExtIfDDRecv_Object = MibTableColumn
ospfExtIfDDRecv = _OspfExtIfDDRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 24),
    _OspfExtIfDDRecv_Type()
)
ospfExtIfDDRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfDDRecv.setStatus("current")


class _OspfExtIfDDSend_Type(Gauge32):
    """Custom type ospfExtIfDDSend based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfDDSend_Type.__name__ = "Gauge32"
_OspfExtIfDDSend_Object = MibTableColumn
ospfExtIfDDSend = _OspfExtIfDDSend_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 25),
    _OspfExtIfDDSend_Type()
)
ospfExtIfDDSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfDDSend.setStatus("current")


class _OspfExtIfLSReqRecv_Type(Gauge32):
    """Custom type ospfExtIfLSReqRecv based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLSReqRecv_Type.__name__ = "Gauge32"
_OspfExtIfLSReqRecv_Object = MibTableColumn
ospfExtIfLSReqRecv = _OspfExtIfLSReqRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 26),
    _OspfExtIfLSReqRecv_Type()
)
ospfExtIfLSReqRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLSReqRecv.setStatus("current")


class _OspfExtIfLSReqSend_Type(Gauge32):
    """Custom type ospfExtIfLSReqSend based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLSReqSend_Type.__name__ = "Gauge32"
_OspfExtIfLSReqSend_Object = MibTableColumn
ospfExtIfLSReqSend = _OspfExtIfLSReqSend_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 27),
    _OspfExtIfLSReqSend_Type()
)
ospfExtIfLSReqSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLSReqSend.setStatus("current")


class _OspfExtIfLSUpdRecv_Type(Gauge32):
    """Custom type ospfExtIfLSUpdRecv based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLSUpdRecv_Type.__name__ = "Gauge32"
_OspfExtIfLSUpdRecv_Object = MibTableColumn
ospfExtIfLSUpdRecv = _OspfExtIfLSUpdRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 28),
    _OspfExtIfLSUpdRecv_Type()
)
ospfExtIfLSUpdRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLSUpdRecv.setStatus("current")


class _OspfExtIfLSUpdSend_Type(Gauge32):
    """Custom type ospfExtIfLSUpdSend based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLSUpdSend_Type.__name__ = "Gauge32"
_OspfExtIfLSUpdSend_Object = MibTableColumn
ospfExtIfLSUpdSend = _OspfExtIfLSUpdSend_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 29),
    _OspfExtIfLSUpdSend_Type()
)
ospfExtIfLSUpdSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLSUpdSend.setStatus("current")


class _OspfExtIfLsAckRecv_Type(Gauge32):
    """Custom type ospfExtIfLsAckRecv based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLsAckRecv_Type.__name__ = "Gauge32"
_OspfExtIfLsAckRecv_Object = MibTableColumn
ospfExtIfLsAckRecv = _OspfExtIfLsAckRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 30),
    _OspfExtIfLsAckRecv_Type()
)
ospfExtIfLsAckRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLsAckRecv.setStatus("current")


class _OspfExtIfLsAckSend_Type(Gauge32):
    """Custom type ospfExtIfLsAckSend based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLsAckSend_Type.__name__ = "Gauge32"
_OspfExtIfLsAckSend_Object = MibTableColumn
ospfExtIfLsAckSend = _OspfExtIfLsAckSend_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 31),
    _OspfExtIfLsAckSend_Type()
)
ospfExtIfLsAckSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLsAckSend.setStatus("current")


class _OspfExtIfLsAckDiscard_Type(Gauge32):
    """Custom type ospfExtIfLsAckDiscard based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtIfLsAckDiscard_Type.__name__ = "Gauge32"
_OspfExtIfLsAckDiscard_Object = MibTableColumn
ospfExtIfLsAckDiscard = _OspfExtIfLsAckDiscard_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 32),
    _OspfExtIfLsAckDiscard_Type()
)
ospfExtIfLsAckDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtIfLsAckDiscard.setStatus("current")


class _OspfExtIfTeMetric_Type(Integer32):
    """Custom type ospfExtIfTeMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtIfTeMetric_Type.__name__ = "Integer32"
_OspfExtIfTeMetric_Object = MibTableColumn
ospfExtIfTeMetric = _OspfExtIfTeMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 3, 1, 33),
    _OspfExtIfTeMetric_Type()
)
ospfExtIfTeMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtIfTeMetric.setStatus("obsolete")
_OspfExtAreaStubTable_Object = MibTable
ospfExtAreaStubTable = _OspfExtAreaStubTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 4)
)
if mibBuilder.loadTexts:
    ospfExtAreaStubTable.setStatus("current")
_OspfExtAreaStubEntry_Object = MibTableRow
ospfExtAreaStubEntry = _OspfExtAreaStubEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 4, 1)
)
ospfExtAreaStubEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAreaStubStat"),
)
if mibBuilder.loadTexts:
    ospfExtAreaStubEntry.setStatus("current")
_OspfExtAreaStubStat_Type = RowStatus
_OspfExtAreaStubStat_Object = MibTableColumn
ospfExtAreaStubStat = _OspfExtAreaStubStat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 4, 1, 1),
    _OspfExtAreaStubStat_Type()
)
ospfExtAreaStubStat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtAreaStubStat.setStatus("current")


class _OspfExtAreaStubNoSummary_Type(Integer32):
    """Custom type ospfExtAreaStubNoSummary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noSummary", 1),
          ("summary", 2))
    )


_OspfExtAreaStubNoSummary_Type.__name__ = "Integer32"
_OspfExtAreaStubNoSummary_Object = MibTableColumn
ospfExtAreaStubNoSummary = _OspfExtAreaStubNoSummary_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 4, 1, 2),
    _OspfExtAreaStubNoSummary_Type()
)
ospfExtAreaStubNoSummary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaStubNoSummary.setStatus("current")
_OspfExtFilterTable_Object = MibTable
ospfExtFilterTable = _OspfExtFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5)
)
if mibBuilder.loadTexts:
    ospfExtFilterTable.setStatus("current")
_OspfExtFilterEntry_Object = MibTableRow
ospfExtFilterEntry = _OspfExtFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1)
)
ospfExtFilterEntry.setIndexNames(
    (0, "SWITCH", "ospfExtFilterId"),
)
if mibBuilder.loadTexts:
    ospfExtFilterEntry.setStatus("current")


class _OspfExtFilterId_Type(Integer32):
    """Custom type ospfExtFilterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtFilterId_Type.__name__ = "Integer32"
_OspfExtFilterId_Object = MibTableColumn
ospfExtFilterId = _OspfExtFilterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1, 1),
    _OspfExtFilterId_Type()
)
ospfExtFilterId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtFilterId.setStatus("current")


class _OspfExtFilterPrefixIn_Type(OctetString):
    """Custom type ospfExtFilterPrefixIn based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtFilterPrefixIn_Type.__name__ = "OctetString"
_OspfExtFilterPrefixIn_Object = MibTableColumn
ospfExtFilterPrefixIn = _OspfExtFilterPrefixIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1, 2),
    _OspfExtFilterPrefixIn_Type()
)
ospfExtFilterPrefixIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtFilterPrefixIn.setStatus("current")


class _OspfExtFilterPrefixOut_Type(OctetString):
    """Custom type ospfExtFilterPrefixOut based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtFilterPrefixOut_Type.__name__ = "OctetString"
_OspfExtFilterPrefixOut_Object = MibTableColumn
ospfExtFilterPrefixOut = _OspfExtFilterPrefixOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1, 3),
    _OspfExtFilterPrefixOut_Type()
)
ospfExtFilterPrefixOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtFilterPrefixOut.setStatus("current")


class _OspfExtFilterAccessIn_Type(OctetString):
    """Custom type ospfExtFilterAccessIn based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtFilterAccessIn_Type.__name__ = "OctetString"
_OspfExtFilterAccessIn_Object = MibTableColumn
ospfExtFilterAccessIn = _OspfExtFilterAccessIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1, 4),
    _OspfExtFilterAccessIn_Type()
)
ospfExtFilterAccessIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtFilterAccessIn.setStatus("current")


class _OspfExtFilterAccessOut_Type(OctetString):
    """Custom type ospfExtFilterAccessOut based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtFilterAccessOut_Type.__name__ = "OctetString"
_OspfExtFilterAccessOut_Object = MibTableColumn
ospfExtFilterAccessOut = _OspfExtFilterAccessOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 5, 1, 5),
    _OspfExtFilterAccessOut_Type()
)
ospfExtFilterAccessOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtFilterAccessOut.setStatus("current")
_OspfExtSummaryAddrTable_Object = MibTable
ospfExtSummaryAddrTable = _OspfExtSummaryAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6)
)
if mibBuilder.loadTexts:
    ospfExtSummaryAddrTable.setStatus("current")
_OspfExtSummaryAddrEntry_Object = MibTableRow
ospfExtSummaryAddrEntry = _OspfExtSummaryAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1)
)
ospfExtSummaryAddrEntry.setIndexNames(
    (0, "SWITCH", "ospfExtSummaryAddrStat"),
)
if mibBuilder.loadTexts:
    ospfExtSummaryAddrEntry.setStatus("current")
_OspfExtSummaryAddrStat_Type = RowStatus
_OspfExtSummaryAddrStat_Object = MibTableColumn
ospfExtSummaryAddrStat = _OspfExtSummaryAddrStat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1, 1),
    _OspfExtSummaryAddrStat_Type()
)
ospfExtSummaryAddrStat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtSummaryAddrStat.setStatus("current")


class _OspfExtSummaryAddrNotAdvertise_Type(Integer32):
    """Custom type ospfExtSummaryAddrNotAdvertise based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noAdvertise", 1),
          ("advertise", 2))
    )


_OspfExtSummaryAddrNotAdvertise_Type.__name__ = "Integer32"
_OspfExtSummaryAddrNotAdvertise_Object = MibTableColumn
ospfExtSummaryAddrNotAdvertise = _OspfExtSummaryAddrNotAdvertise_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1, 2),
    _OspfExtSummaryAddrNotAdvertise_Type()
)
ospfExtSummaryAddrNotAdvertise.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtSummaryAddrNotAdvertise.setStatus("current")


class _OspfExtSummaryAddrTag_Type(Gauge32):
    """Custom type ospfExtSummaryAddrTag based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtSummaryAddrTag_Type.__name__ = "Gauge32"
_OspfExtSummaryAddrTag_Object = MibTableColumn
ospfExtSummaryAddrTag = _OspfExtSummaryAddrTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1, 3),
    _OspfExtSummaryAddrTag_Type()
)
ospfExtSummaryAddrTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtSummaryAddrTag.setStatus("current")


class _OspfExtSummaryAddrMetric_Type(Gauge32):
    """Custom type ospfExtSummaryAddrMetric based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_OspfExtSummaryAddrMetric_Type.__name__ = "Gauge32"
_OspfExtSummaryAddrMetric_Object = MibTableColumn
ospfExtSummaryAddrMetric = _OspfExtSummaryAddrMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1, 4),
    _OspfExtSummaryAddrMetric_Type()
)
ospfExtSummaryAddrMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAddrMetric.setStatus("current")


class _OspfExtSummaryAddrMetricType_Type(Integer32):
    """Custom type ospfExtSummaryAddrMetricType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_OspfExtSummaryAddrMetricType_Type.__name__ = "Integer32"
_OspfExtSummaryAddrMetricType_Object = MibTableColumn
ospfExtSummaryAddrMetricType = _OspfExtSummaryAddrMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 6, 1, 5),
    _OspfExtSummaryAddrMetricType_Type()
)
ospfExtSummaryAddrMetricType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAddrMetricType.setStatus("current")
_OspfExtProperty_ObjectIdentity = ObjectIdentity
ospfExtProperty = _OspfExtProperty_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7)
)


class _CompatibleRfc_Type(Integer32):
    """Custom type compatibleRfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("uncompatible", 1),
          ("compatible", 2))
    )


_CompatibleRfc_Type.__name__ = "Integer32"
_CompatibleRfc_Object = MibScalar
compatibleRfc = _CompatibleRfc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 1),
    _CompatibleRfc_Type()
)
compatibleRfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    compatibleRfc.setStatus("current")
_TimersSpfDelay_Type = Integer32
_TimersSpfDelay_Object = MibScalar
timersSpfDelay = _TimersSpfDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 2),
    _TimersSpfDelay_Type()
)
timersSpfDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timersSpfDelay.setStatus("current")
_TimersSpfHold_Type = Integer32
_TimersSpfHold_Object = MibScalar
timersSpfHold = _TimersSpfHold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 3),
    _TimersSpfHold_Type()
)
timersSpfHold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timersSpfHold.setStatus("current")
_RefreshTimer_Type = Integer32
_RefreshTimer_Object = MibScalar
refreshTimer = _RefreshTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 4),
    _RefreshTimer_Type()
)
refreshTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    refreshTimer.setStatus("current")
_ReferBandwidth_Type = Integer32
_ReferBandwidth_Object = MibScalar
referBandwidth = _ReferBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 5),
    _ReferBandwidth_Type()
)
referBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    referBandwidth.setStatus("current")
_MaxConcurrentDd_Type = Integer32
_MaxConcurrentDd_Object = MibScalar
maxConcurrentDd = _MaxConcurrentDd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 6),
    _MaxConcurrentDd_Type()
)
maxConcurrentDd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maxConcurrentDd.setStatus("current")
_MaximumArea_Type = Gauge32
_MaximumArea_Object = MibScalar
maximumArea = _MaximumArea_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 7),
    _MaximumArea_Type()
)
maximumArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    maximumArea.setStatus("current")
_DefaultMetric_Type = Integer32
_DefaultMetric_Object = MibScalar
defaultMetric = _DefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 8),
    _DefaultMetric_Type()
)
defaultMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    defaultMetric.setStatus("current")
_Distance_Type = Integer32
_Distance_Object = MibScalar
distance = _Distance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 9),
    _Distance_Type()
)
distance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    distance.setStatus("current")
_DistanceIntra_Type = Integer32
_DistanceIntra_Object = MibScalar
distanceIntra = _DistanceIntra_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 10),
    _DistanceIntra_Type()
)
distanceIntra.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    distanceIntra.setStatus("current")
_DistanceInter_Type = Integer32
_DistanceInter_Object = MibScalar
distanceInter = _DistanceInter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 11),
    _DistanceInter_Type()
)
distanceInter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    distanceInter.setStatus("current")
_DistanceExternal_Type = Integer32
_DistanceExternal_Object = MibScalar
distanceExternal = _DistanceExternal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 7, 12),
    _DistanceExternal_Type()
)
distanceExternal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    distanceExternal.setStatus("current")
_OspfExtNeighborTable_Object = MibTable
ospfExtNeighborTable = _OspfExtNeighborTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8)
)
if mibBuilder.loadTexts:
    ospfExtNeighborTable.setStatus("current")
_OspfExtNeighborEntry_Object = MibTableRow
ospfExtNeighborEntry = _OspfExtNeighborEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1)
)
ospfExtNeighborEntry.setIndexNames(
    (0, "SWITCH", "ospfExtNeighborStat"),
)
if mibBuilder.loadTexts:
    ospfExtNeighborEntry.setStatus("current")
_OspfExtNeighborStat_Type = RowStatus
_OspfExtNeighborStat_Object = MibTableColumn
ospfExtNeighborStat = _OspfExtNeighborStat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 1),
    _OspfExtNeighborStat_Type()
)
ospfExtNeighborStat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtNeighborStat.setStatus("current")
_OspfExtNeighborPollInterval_Type = Integer32
_OspfExtNeighborPollInterval_Object = MibTableColumn
ospfExtNeighborPollInterval = _OspfExtNeighborPollInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 2),
    _OspfExtNeighborPollInterval_Type()
)
ospfExtNeighborPollInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtNeighborPollInterval.setStatus("current")
_OspfExtNeighborCost_Type = Integer32
_OspfExtNeighborCost_Object = MibTableColumn
ospfExtNeighborCost = _OspfExtNeighborCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 3),
    _OspfExtNeighborCost_Type()
)
ospfExtNeighborCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtNeighborCost.setStatus("current")


class _OspfExtNeighborPri_Type(Integer32):
    """Custom type ospfExtNeighborPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_OspfExtNeighborPri_Type.__name__ = "Integer32"
_OspfExtNeighborPri_Object = MibTableColumn
ospfExtNeighborPri = _OspfExtNeighborPri_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 4),
    _OspfExtNeighborPri_Type()
)
ospfExtNeighborPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtNeighborPri.setStatus("current")


class _OspfExtNeighborStateStr_Type(Integer32):
    """Custom type ospfExtNeighborStateStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dependUpon", 0),
          ("down", 1),
          ("attempt", 2),
          ("init", 3),
          ("twoway", 4),
          ("exStart", 5),
          ("exchange", 6),
          ("loading", 7),
          ("full", 8))
    )


_OspfExtNeighborStateStr_Type.__name__ = "Integer32"
_OspfExtNeighborStateStr_Object = MibTableColumn
ospfExtNeighborStateStr = _OspfExtNeighborStateStr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 5),
    _OspfExtNeighborStateStr_Type()
)
ospfExtNeighborStateStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNeighborStateStr.setStatus("current")


class _OspfExtNeighborDeadTimeStr_Type(OctetString):
    """Custom type ospfExtNeighborDeadTimeStr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtNeighborDeadTimeStr_Type.__name__ = "OctetString"
_OspfExtNeighborDeadTimeStr_Object = MibTableColumn
ospfExtNeighborDeadTimeStr = _OspfExtNeighborDeadTimeStr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 6),
    _OspfExtNeighborDeadTimeStr_Type()
)
ospfExtNeighborDeadTimeStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNeighborDeadTimeStr.setStatus("current")
_OspfExtNeighborIpAddr_Type = IpAddress
_OspfExtNeighborIpAddr_Object = MibTableColumn
ospfExtNeighborIpAddr = _OspfExtNeighborIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 7),
    _OspfExtNeighborIpAddr_Type()
)
ospfExtNeighborIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNeighborIpAddr.setStatus("current")


class _OspfExtNeighborIfName_Type(OctetString):
    """Custom type ospfExtNeighborIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtNeighborIfName_Type.__name__ = "OctetString"
_OspfExtNeighborIfName_Object = MibTableColumn
ospfExtNeighborIfName = _OspfExtNeighborIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 8, 1, 8),
    _OspfExtNeighborIfName_Type()
)
ospfExtNeighborIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNeighborIfName.setStatus("current")
_OspfExtRedistribute_ObjectIdentity = ObjectIdentity
ospfExtRedistribute = _OspfExtRedistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9)
)


class _RedistributeBgp_Type(Integer32):
    """Custom type redistributeBgp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_RedistributeBgp_Type.__name__ = "Integer32"
_RedistributeBgp_Object = MibScalar
redistributeBgp = _RedistributeBgp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 1),
    _RedistributeBgp_Type()
)
redistributeBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgp.setStatus("current")


class _RedistributeBgpMetricType_Type(Integer32):
    """Custom type redistributeBgpMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("reset", 0),
          ("type1", 1),
          ("type2", 2))
    )


_RedistributeBgpMetricType_Type.__name__ = "Integer32"
_RedistributeBgpMetricType_Object = MibScalar
redistributeBgpMetricType = _RedistributeBgpMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 2),
    _RedistributeBgpMetricType_Type()
)
redistributeBgpMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgpMetricType.setStatus("current")
_RedistributeBgpMetric_Type = Integer32
_RedistributeBgpMetric_Object = MibScalar
redistributeBgpMetric = _RedistributeBgpMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 3),
    _RedistributeBgpMetric_Type()
)
redistributeBgpMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgpMetric.setStatus("current")


class _RedistributeBgpRouteMap_Type(OctetString):
    """Custom type redistributeBgpRouteMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RedistributeBgpRouteMap_Type.__name__ = "OctetString"
_RedistributeBgpRouteMap_Object = MibScalar
redistributeBgpRouteMap = _RedistributeBgpRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 4),
    _RedistributeBgpRouteMap_Type()
)
redistributeBgpRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgpRouteMap.setStatus("current")
_RedistributeBgpTag_Type = Gauge32
_RedistributeBgpTag_Object = MibScalar
redistributeBgpTag = _RedistributeBgpTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 5),
    _RedistributeBgpTag_Type()
)
redistributeBgpTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgpTag.setStatus("current")


class _RedistributeConnected_Type(Integer32):
    """Custom type redistributeConnected based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_RedistributeConnected_Type.__name__ = "Integer32"
_RedistributeConnected_Object = MibScalar
redistributeConnected = _RedistributeConnected_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 6),
    _RedistributeConnected_Type()
)
redistributeConnected.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnected.setStatus("current")


class _RedistributeConnectedMetricType_Type(Integer32):
    """Custom type redistributeConnectedMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("type1", 1),
          ("type2", 2))
    )


_RedistributeConnectedMetricType_Type.__name__ = "Integer32"
_RedistributeConnectedMetricType_Object = MibScalar
redistributeConnectedMetricType = _RedistributeConnectedMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 7),
    _RedistributeConnectedMetricType_Type()
)
redistributeConnectedMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnectedMetricType.setStatus("current")
_RedistributeConnectedMetric_Type = Integer32
_RedistributeConnectedMetric_Object = MibScalar
redistributeConnectedMetric = _RedistributeConnectedMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 8),
    _RedistributeConnectedMetric_Type()
)
redistributeConnectedMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnectedMetric.setStatus("current")


class _RedistributeConnectedRouteMap_Type(OctetString):
    """Custom type redistributeConnectedRouteMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RedistributeConnectedRouteMap_Type.__name__ = "OctetString"
_RedistributeConnectedRouteMap_Object = MibScalar
redistributeConnectedRouteMap = _RedistributeConnectedRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 9),
    _RedistributeConnectedRouteMap_Type()
)
redistributeConnectedRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnectedRouteMap.setStatus("current")
_RedistributeConnectedTag_Type = Gauge32
_RedistributeConnectedTag_Object = MibScalar
redistributeConnectedTag = _RedistributeConnectedTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 10),
    _RedistributeConnectedTag_Type()
)
redistributeConnectedTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnectedTag.setStatus("current")


class _RedistributeRip_Type(Integer32):
    """Custom type redistributeRip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_RedistributeRip_Type.__name__ = "Integer32"
_RedistributeRip_Object = MibScalar
redistributeRip = _RedistributeRip_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 11),
    _RedistributeRip_Type()
)
redistributeRip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRip.setStatus("current")


class _RedistributeRipMetricType_Type(Integer32):
    """Custom type redistributeRipMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("type1", 1),
          ("type2", 2))
    )


_RedistributeRipMetricType_Type.__name__ = "Integer32"
_RedistributeRipMetricType_Object = MibScalar
redistributeRipMetricType = _RedistributeRipMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 12),
    _RedistributeRipMetricType_Type()
)
redistributeRipMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRipMetricType.setStatus("current")
_RedistributeRipMetric_Type = Integer32
_RedistributeRipMetric_Object = MibScalar
redistributeRipMetric = _RedistributeRipMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 13),
    _RedistributeRipMetric_Type()
)
redistributeRipMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRipMetric.setStatus("current")


class _RedistributeRipRouteMap_Type(OctetString):
    """Custom type redistributeRipRouteMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RedistributeRipRouteMap_Type.__name__ = "OctetString"
_RedistributeRipRouteMap_Object = MibScalar
redistributeRipRouteMap = _RedistributeRipRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 14),
    _RedistributeRipRouteMap_Type()
)
redistributeRipRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRipRouteMap.setStatus("current")
_RedistributeRipTag_Type = Gauge32
_RedistributeRipTag_Object = MibScalar
redistributeRipTag = _RedistributeRipTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 15),
    _RedistributeRipTag_Type()
)
redistributeRipTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRipTag.setStatus("current")


class _RedistributeStatic_Type(Integer32):
    """Custom type redistributeStatic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_RedistributeStatic_Type.__name__ = "Integer32"
_RedistributeStatic_Object = MibScalar
redistributeStatic = _RedistributeStatic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 16),
    _RedistributeStatic_Type()
)
redistributeStatic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStatic.setStatus("current")


class _RedistributeStaticMetricType_Type(Integer32):
    """Custom type redistributeStaticMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("type1", 1),
          ("type2", 2))
    )


_RedistributeStaticMetricType_Type.__name__ = "Integer32"
_RedistributeStaticMetricType_Object = MibScalar
redistributeStaticMetricType = _RedistributeStaticMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 17),
    _RedistributeStaticMetricType_Type()
)
redistributeStaticMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStaticMetricType.setStatus("current")
_RedistributeStaticMetric_Type = Integer32
_RedistributeStaticMetric_Object = MibScalar
redistributeStaticMetric = _RedistributeStaticMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 18),
    _RedistributeStaticMetric_Type()
)
redistributeStaticMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStaticMetric.setStatus("current")


class _RedistributeStaticRouteMap_Type(OctetString):
    """Custom type redistributeStaticRouteMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_RedistributeStaticRouteMap_Type.__name__ = "OctetString"
_RedistributeStaticRouteMap_Object = MibScalar
redistributeStaticRouteMap = _RedistributeStaticRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 19),
    _RedistributeStaticRouteMap_Type()
)
redistributeStaticRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStaticRouteMap.setStatus("current")
_RedistributeStaticTag_Type = Gauge32
_RedistributeStaticTag_Object = MibScalar
redistributeStaticTag = _RedistributeStaticTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 20),
    _RedistributeStaticTag_Type()
)
redistributeStaticTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStaticTag.setStatus("current")


class _RedistributeBgpTagClr_Type(Integer32):
    """Custom type redistributeBgpTagClr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("reset", 1))
    )


_RedistributeBgpTagClr_Type.__name__ = "Integer32"
_RedistributeBgpTagClr_Object = MibScalar
redistributeBgpTagClr = _RedistributeBgpTagClr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 21),
    _RedistributeBgpTagClr_Type()
)
redistributeBgpTagClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeBgpTagClr.setStatus("current")


class _RedistributeConnectedTagClr_Type(Integer32):
    """Custom type redistributeConnectedTagClr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("reset", 1))
    )


_RedistributeConnectedTagClr_Type.__name__ = "Integer32"
_RedistributeConnectedTagClr_Object = MibScalar
redistributeConnectedTagClr = _RedistributeConnectedTagClr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 22),
    _RedistributeConnectedTagClr_Type()
)
redistributeConnectedTagClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeConnectedTagClr.setStatus("current")


class _RedistributeRipTagClr_Type(Integer32):
    """Custom type redistributeRipTagClr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("reset", 1))
    )


_RedistributeRipTagClr_Type.__name__ = "Integer32"
_RedistributeRipTagClr_Object = MibScalar
redistributeRipTagClr = _RedistributeRipTagClr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 23),
    _RedistributeRipTagClr_Type()
)
redistributeRipTagClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeRipTagClr.setStatus("current")


class _RedistributeStaticTagClr_Type(Integer32):
    """Custom type redistributeStaticTagClr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("reset", 1))
    )


_RedistributeStaticTagClr_Type.__name__ = "Integer32"
_RedistributeStaticTagClr_Object = MibScalar
redistributeStaticTagClr = _RedistributeStaticTagClr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 9, 24),
    _RedistributeStaticTagClr_Type()
)
redistributeStaticTagClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    redistributeStaticTagClr.setStatus("current")
_OspfExtdistribute_ObjectIdentity = ObjectIdentity
ospfExtdistribute = _OspfExtdistribute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10)
)


class _OspfExtdistributeIn_Type(OctetString):
    """Custom type ospfExtdistributeIn based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtdistributeIn_Type.__name__ = "OctetString"
_OspfExtdistributeIn_Object = MibScalar
ospfExtdistributeIn = _OspfExtdistributeIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10, 1),
    _OspfExtdistributeIn_Type()
)
ospfExtdistributeIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtdistributeIn.setStatus("current")


class _OspfExtdistributeOutBgp_Type(OctetString):
    """Custom type ospfExtdistributeOutBgp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtdistributeOutBgp_Type.__name__ = "OctetString"
_OspfExtdistributeOutBgp_Object = MibScalar
ospfExtdistributeOutBgp = _OspfExtdistributeOutBgp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10, 2),
    _OspfExtdistributeOutBgp_Type()
)
ospfExtdistributeOutBgp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtdistributeOutBgp.setStatus("current")


class _OspfExtdistributeOutConnected_Type(OctetString):
    """Custom type ospfExtdistributeOutConnected based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtdistributeOutConnected_Type.__name__ = "OctetString"
_OspfExtdistributeOutConnected_Object = MibScalar
ospfExtdistributeOutConnected = _OspfExtdistributeOutConnected_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10, 3),
    _OspfExtdistributeOutConnected_Type()
)
ospfExtdistributeOutConnected.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtdistributeOutConnected.setStatus("current")


class _OspfExtdistributeOutRip_Type(OctetString):
    """Custom type ospfExtdistributeOutRip based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtdistributeOutRip_Type.__name__ = "OctetString"
_OspfExtdistributeOutRip_Object = MibScalar
ospfExtdistributeOutRip = _OspfExtdistributeOutRip_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10, 4),
    _OspfExtdistributeOutRip_Type()
)
ospfExtdistributeOutRip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtdistributeOutRip.setStatus("current")


class _OspfExtdistributeOutStatic_Type(OctetString):
    """Custom type ospfExtdistributeOutStatic based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtdistributeOutStatic_Type.__name__ = "OctetString"
_OspfExtdistributeOutStatic_Object = MibScalar
ospfExtdistributeOutStatic = _OspfExtdistributeOutStatic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 10, 5),
    _OspfExtdistributeOutStatic_Type()
)
ospfExtdistributeOutStatic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtdistributeOutStatic.setStatus("current")
_OspfExtOriginate_ObjectIdentity = ObjectIdentity
ospfExtOriginate = _OspfExtOriginate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11)
)


class _OspfExtOriginateEn_Type(Integer32):
    """Custom type ospfExtOriginateEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_OspfExtOriginateEn_Type.__name__ = "Integer32"
_OspfExtOriginateEn_Object = MibScalar
ospfExtOriginateEn = _OspfExtOriginateEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11, 1),
    _OspfExtOriginateEn_Type()
)
ospfExtOriginateEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtOriginateEn.setStatus("current")


class _OspfExtOriginateAlways_Type(Integer32):
    """Custom type ospfExtOriginateAlways based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_OspfExtOriginateAlways_Type.__name__ = "Integer32"
_OspfExtOriginateAlways_Object = MibScalar
ospfExtOriginateAlways = _OspfExtOriginateAlways_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11, 2),
    _OspfExtOriginateAlways_Type()
)
ospfExtOriginateAlways.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtOriginateAlways.setStatus("current")


class _OspfExtOriginateMetricType_Type(Integer32):
    """Custom type ospfExtOriginateMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("type1", 1),
          ("type2", 2))
    )


_OspfExtOriginateMetricType_Type.__name__ = "Integer32"
_OspfExtOriginateMetricType_Object = MibScalar
ospfExtOriginateMetricType = _OspfExtOriginateMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11, 3),
    _OspfExtOriginateMetricType_Type()
)
ospfExtOriginateMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtOriginateMetricType.setStatus("current")
_OspfExtOriginateMetric_Type = Integer32
_OspfExtOriginateMetric_Object = MibScalar
ospfExtOriginateMetric = _OspfExtOriginateMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11, 4),
    _OspfExtOriginateMetric_Type()
)
ospfExtOriginateMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtOriginateMetric.setStatus("current")


class _OspfExtOriginateRouteMap_Type(OctetString):
    """Custom type ospfExtOriginateRouteMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_OspfExtOriginateRouteMap_Type.__name__ = "OctetString"
_OspfExtOriginateRouteMap_Object = MibScalar
ospfExtOriginateRouteMap = _OspfExtOriginateRouteMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 11, 5),
    _OspfExtOriginateRouteMap_Type()
)
ospfExtOriginateRouteMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtOriginateRouteMap.setStatus("current")
_OspfExtNetworkTable_Object = MibTable
ospfExtNetworkTable = _OspfExtNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 12)
)
if mibBuilder.loadTexts:
    ospfExtNetworkTable.setStatus("current")
_OspfExtNetworkEntry_Object = MibTableRow
ospfExtNetworkEntry = _OspfExtNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 12, 1)
)
ospfExtNetworkEntry.setIndexNames(
    (0, "SWITCH", "ospfExtNetworkArea"),
)
if mibBuilder.loadTexts:
    ospfExtNetworkEntry.setStatus("current")
_OspfExtNetworkArea_Type = IpAddress
_OspfExtNetworkArea_Object = MibTableColumn
ospfExtNetworkArea = _OspfExtNetworkArea_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 12, 1, 1),
    _OspfExtNetworkArea_Type()
)
ospfExtNetworkArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtNetworkArea.setStatus("current")
_OspfExtNetworkRowStatus_Type = RowStatus
_OspfExtNetworkRowStatus_Object = MibTableColumn
ospfExtNetworkRowStatus = _OspfExtNetworkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 12, 1, 2),
    _OspfExtNetworkRowStatus_Type()
)
ospfExtNetworkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtNetworkRowStatus.setStatus("current")
_OspfExtPassiveIfTable_Object = MibTable
ospfExtPassiveIfTable = _OspfExtPassiveIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 13)
)
if mibBuilder.loadTexts:
    ospfExtPassiveIfTable.setStatus("current")
_OspfExtPassiveIfEntry_Object = MibTableRow
ospfExtPassiveIfEntry = _OspfExtPassiveIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 13, 1)
)
ospfExtPassiveIfEntry.setIndexNames(
    (0, "SWITCH", "ospfExtPassiveIfId"),
)
if mibBuilder.loadTexts:
    ospfExtPassiveIfEntry.setStatus("current")


class _OspfExtPassiveIfId_Type(Integer32):
    """Custom type ospfExtPassiveIfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtPassiveIfId_Type.__name__ = "Integer32"
_OspfExtPassiveIfId_Object = MibTableColumn
ospfExtPassiveIfId = _OspfExtPassiveIfId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 13, 1, 1),
    _OspfExtPassiveIfId_Type()
)
ospfExtPassiveIfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtPassiveIfId.setStatus("current")


class _OspfExtPassiveIfName_Type(OctetString):
    """Custom type ospfExtPassiveIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtPassiveIfName_Type.__name__ = "OctetString"
_OspfExtPassiveIfName_Object = MibTableColumn
ospfExtPassiveIfName = _OspfExtPassiveIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 13, 1, 2),
    _OspfExtPassiveIfName_Type()
)
ospfExtPassiveIfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtPassiveIfName.setStatus("current")
_OspfExtPassiveIfStatus_Type = RowStatus
_OspfExtPassiveIfStatus_Object = MibTableColumn
ospfExtPassiveIfStatus = _OspfExtPassiveIfStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 13, 1, 3),
    _OspfExtPassiveIfStatus_Type()
)
ospfExtPassiveIfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtPassiveIfStatus.setStatus("current")
_OspfExtMsgDigestKeyTable_Object = MibTable
ospfExtMsgDigestKeyTable = _OspfExtMsgDigestKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14)
)
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyTable.setStatus("current")
_OspfExtMsgDigestKeyEntry_Object = MibTableRow
ospfExtMsgDigestKeyEntry = _OspfExtMsgDigestKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14, 1)
)
ospfExtMsgDigestKeyEntry.setIndexNames(
    (0, "SWITCH", "ospfExtMsgDigestKeyIfindex"),
    (0, "SWITCH", "ospfExtMsgDigestKeyId"),
)
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyEntry.setStatus("current")


class _OspfExtMsgDigestKeyIfindex_Type(Integer32):
    """Custom type ospfExtMsgDigestKeyIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtMsgDigestKeyIfindex_Type.__name__ = "Integer32"
_OspfExtMsgDigestKeyIfindex_Object = MibTableColumn
ospfExtMsgDigestKeyIfindex = _OspfExtMsgDigestKeyIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14, 1, 1),
    _OspfExtMsgDigestKeyIfindex_Type()
)
ospfExtMsgDigestKeyIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyIfindex.setStatus("current")


class _OspfExtMsgDigestKeyId_Type(Integer32):
    """Custom type ospfExtMsgDigestKeyId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OspfExtMsgDigestKeyId_Type.__name__ = "Integer32"
_OspfExtMsgDigestKeyId_Object = MibTableColumn
ospfExtMsgDigestKeyId = _OspfExtMsgDigestKeyId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14, 1, 2),
    _OspfExtMsgDigestKeyId_Type()
)
ospfExtMsgDigestKeyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyId.setStatus("current")


class _OspfExtMsgDigestKeyPwd_Type(OctetString):
    """Custom type ospfExtMsgDigestKeyPwd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_OspfExtMsgDigestKeyPwd_Type.__name__ = "OctetString"
_OspfExtMsgDigestKeyPwd_Object = MibTableColumn
ospfExtMsgDigestKeyPwd = _OspfExtMsgDigestKeyPwd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14, 1, 3),
    _OspfExtMsgDigestKeyPwd_Type()
)
ospfExtMsgDigestKeyPwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyPwd.setStatus("current")
_OspfExtMsgDigestKeyStatus_Type = RowStatus
_OspfExtMsgDigestKeyStatus_Object = MibTableColumn
ospfExtMsgDigestKeyStatus = _OspfExtMsgDigestKeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 14, 1, 4),
    _OspfExtMsgDigestKeyStatus_Type()
)
ospfExtMsgDigestKeyStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtMsgDigestKeyStatus.setStatus("current")
_OspfExtAreaTable_Object = MibTable
ospfExtAreaTable = _OspfExtAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15)
)
if mibBuilder.loadTexts:
    ospfExtAreaTable.setStatus("current")
_OspfExtAreaEntry_Object = MibTableRow
ospfExtAreaEntry = _OspfExtAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1)
)
ospfExtAreaEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAreaId"),
)
if mibBuilder.loadTexts:
    ospfExtAreaEntry.setStatus("current")
_OspfExtAreaId_Type = IpAddress
_OspfExtAreaId_Object = MibTableColumn
ospfExtAreaId = _OspfExtAreaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 1),
    _OspfExtAreaId_Type()
)
ospfExtAreaId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtAreaId.setStatus("current")


class _OspfExtAreaDefaultCost_Type(Integer32):
    """Custom type ospfExtAreaDefaultCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_OspfExtAreaDefaultCost_Type.__name__ = "Integer32"
_OspfExtAreaDefaultCost_Object = MibTableColumn
ospfExtAreaDefaultCost = _OspfExtAreaDefaultCost_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 2),
    _OspfExtAreaDefaultCost_Type()
)
ospfExtAreaDefaultCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaDefaultCost.setStatus("current")


class _OspfExtAreaAuthType_Type(Integer32):
    """Custom type ospfExtAreaAuthType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("simplePassword", 1),
          ("md5", 2))
    )


_OspfExtAreaAuthType_Type.__name__ = "Integer32"
_OspfExtAreaAuthType_Object = MibTableColumn
ospfExtAreaAuthType = _OspfExtAreaAuthType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 6),
    _OspfExtAreaAuthType_Type()
)
ospfExtAreaAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaAuthType.setStatus("current")


class _OspfExtAreaLsaSummaryRouterCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryRouterCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryRouterCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryRouterCount_Object = MibTableColumn
ospfExtAreaLsaSummaryRouterCount = _OspfExtAreaLsaSummaryRouterCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 7),
    _OspfExtAreaLsaSummaryRouterCount_Type()
)
ospfExtAreaLsaSummaryRouterCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryRouterCount.setStatus("current")


class _OspfExtAreaLsaSummaryRouterMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryRouterMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryRouterMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryRouterMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryRouterMaxAge = _OspfExtAreaLsaSummaryRouterMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 8),
    _OspfExtAreaLsaSummaryRouterMaxAge_Type()
)
ospfExtAreaLsaSummaryRouterMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryRouterMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryNetworkCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryNetworkCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryNetworkCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryNetworkCount_Object = MibTableColumn
ospfExtAreaLsaSummaryNetworkCount = _OspfExtAreaLsaSummaryNetworkCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 9),
    _OspfExtAreaLsaSummaryNetworkCount_Type()
)
ospfExtAreaLsaSummaryNetworkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryNetworkCount.setStatus("current")


class _OspfExtAreaLsaSummaryNetworkMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryNetworkMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryNetworkMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryNetworkMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryNetworkMaxAge = _OspfExtAreaLsaSummaryNetworkMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 10),
    _OspfExtAreaLsaSummaryNetworkMaxAge_Type()
)
ospfExtAreaLsaSummaryNetworkMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryNetworkMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryNetCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryNetCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryNetCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryNetCount_Object = MibTableColumn
ospfExtAreaLsaSummaryNetCount = _OspfExtAreaLsaSummaryNetCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 11),
    _OspfExtAreaLsaSummaryNetCount_Type()
)
ospfExtAreaLsaSummaryNetCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryNetCount.setStatus("current")


class _OspfExtAreaLsaSummaryNetMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryNetMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryNetMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryNetMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryNetMaxAge = _OspfExtAreaLsaSummaryNetMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 12),
    _OspfExtAreaLsaSummaryNetMaxAge_Type()
)
ospfExtAreaLsaSummaryNetMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryNetMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryASBRCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryASBRCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryASBRCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryASBRCount_Object = MibTableColumn
ospfExtAreaLsaSummaryASBRCount = _OspfExtAreaLsaSummaryASBRCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 13),
    _OspfExtAreaLsaSummaryASBRCount_Type()
)
ospfExtAreaLsaSummaryASBRCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryASBRCount.setStatus("current")


class _OspfExtAreaLsaSummaryASBRMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryASBRMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryASBRMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryASBRMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryASBRMaxAge = _OspfExtAreaLsaSummaryASBRMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 14),
    _OspfExtAreaLsaSummaryASBRMaxAge_Type()
)
ospfExtAreaLsaSummaryASBRMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryASBRMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryType5ExtCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryType5ExtCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryType5ExtCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryType5ExtCount_Object = MibTableColumn
ospfExtAreaLsaSummaryType5ExtCount = _OspfExtAreaLsaSummaryType5ExtCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 15),
    _OspfExtAreaLsaSummaryType5ExtCount_Type()
)
ospfExtAreaLsaSummaryType5ExtCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryType5ExtCount.setStatus("current")


class _OspfExtAreaLsaSummaryType5ExtMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryType5ExtMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryType5ExtMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryType5ExtMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryType5ExtMaxAge = _OspfExtAreaLsaSummaryType5ExtMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 16),
    _OspfExtAreaLsaSummaryType5ExtMaxAge_Type()
)
ospfExtAreaLsaSummaryType5ExtMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryType5ExtMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryAttributeCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryAttributeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryAttributeCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryAttributeCount_Object = MibTableColumn
ospfExtAreaLsaSummaryAttributeCount = _OspfExtAreaLsaSummaryAttributeCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 17),
    _OspfExtAreaLsaSummaryAttributeCount_Type()
)
ospfExtAreaLsaSummaryAttributeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryAttributeCount.setStatus("current")


class _OspfExtAreaLsaSummaryAttributeMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryAttributeMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryAttributeMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryAttributeMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryAttributeMaxAge = _OspfExtAreaLsaSummaryAttributeMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 18),
    _OspfExtAreaLsaSummaryAttributeMaxAge_Type()
)
ospfExtAreaLsaSummaryAttributeMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryAttributeMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueLinkCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueLinkCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueLinkCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueLinkCount_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueLinkCount = _OspfExtAreaLsaSummaryOpaqueLinkCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 19),
    _OspfExtAreaLsaSummaryOpaqueLinkCount_Type()
)
ospfExtAreaLsaSummaryOpaqueLinkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueLinkCount.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueLinkMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueLinkMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueLinkMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueLinkMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueLinkMaxAge = _OspfExtAreaLsaSummaryOpaqueLinkMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 20),
    _OspfExtAreaLsaSummaryOpaqueLinkMaxAge_Type()
)
ospfExtAreaLsaSummaryOpaqueLinkMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueLinkMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueAreaCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueAreaCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueAreaCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueAreaCount_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueAreaCount = _OspfExtAreaLsaSummaryOpaqueAreaCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 21),
    _OspfExtAreaLsaSummaryOpaqueAreaCount_Type()
)
ospfExtAreaLsaSummaryOpaqueAreaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueAreaCount.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueAreaMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueAreaMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueAreaMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueAreaMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueAreaMaxAge = _OspfExtAreaLsaSummaryOpaqueAreaMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 22),
    _OspfExtAreaLsaSummaryOpaqueAreaMaxAge_Type()
)
ospfExtAreaLsaSummaryOpaqueAreaMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueAreaMaxAge.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueASCount_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueASCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueASCount_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueASCount_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueASCount = _OspfExtAreaLsaSummaryOpaqueASCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 23),
    _OspfExtAreaLsaSummaryOpaqueASCount_Type()
)
ospfExtAreaLsaSummaryOpaqueASCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueASCount.setStatus("current")


class _OspfExtAreaLsaSummaryOpaqueASMaxAge_Type(Integer32):
    """Custom type ospfExtAreaLsaSummaryOpaqueASMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaLsaSummaryOpaqueASMaxAge_Type.__name__ = "Integer32"
_OspfExtAreaLsaSummaryOpaqueASMaxAge_Object = MibTableColumn
ospfExtAreaLsaSummaryOpaqueASMaxAge = _OspfExtAreaLsaSummaryOpaqueASMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 15, 1, 24),
    _OspfExtAreaLsaSummaryOpaqueASMaxAge_Type()
)
ospfExtAreaLsaSummaryOpaqueASMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaLsaSummaryOpaqueASMaxAge.setStatus("current")
_OspfExtAreaRangeTable_Object = MibTable
ospfExtAreaRangeTable = _OspfExtAreaRangeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 16)
)
if mibBuilder.loadTexts:
    ospfExtAreaRangeTable.setStatus("current")
_OspfExtAreaRangeEntry_Object = MibTableRow
ospfExtAreaRangeEntry = _OspfExtAreaRangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 16, 1)
)
ospfExtAreaRangeEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAreaRangeRowStatus"),
)
if mibBuilder.loadTexts:
    ospfExtAreaRangeEntry.setStatus("current")
_OspfExtAreaRangeRowStatus_Type = RowStatus
_OspfExtAreaRangeRowStatus_Object = MibTableColumn
ospfExtAreaRangeRowStatus = _OspfExtAreaRangeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 16, 1, 5),
    _OspfExtAreaRangeRowStatus_Type()
)
ospfExtAreaRangeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtAreaRangeRowStatus.setStatus("current")


class _OspfExtAreaRangeAdvertise_Type(Integer32):
    """Custom type ospfExtAreaRangeAdvertise based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 1),
          ("noAdvertise", 2))
    )


_OspfExtAreaRangeAdvertise_Type.__name__ = "Integer32"
_OspfExtAreaRangeAdvertise_Object = MibTableColumn
ospfExtAreaRangeAdvertise = _OspfExtAreaRangeAdvertise_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 16, 1, 6),
    _OspfExtAreaRangeAdvertise_Type()
)
ospfExtAreaRangeAdvertise.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaRangeAdvertise.setStatus("current")
_OspfExtAreaVirtualLinkTable_Object = MibTable
ospfExtAreaVirtualLinkTable = _OspfExtAreaVirtualLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17)
)
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkTable.setStatus("obsolete")
_OspfExtAreaVirtualLinkEntry_Object = MibTableRow
ospfExtAreaVirtualLinkEntry = _OspfExtAreaVirtualLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1)
)
ospfExtAreaVirtualLinkEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAreaVirtualLinkAreaId"),
    (0, "SWITCH", "ospfExtAreaVirtualLinkIpAddr"),
)
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkEntry.setStatus("obsolete")
_OspfExtAreaVirtualLinkAreaId_Type = IpAddress
_OspfExtAreaVirtualLinkAreaId_Object = MibTableColumn
ospfExtAreaVirtualLinkAreaId = _OspfExtAreaVirtualLinkAreaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 1),
    _OspfExtAreaVirtualLinkAreaId_Type()
)
ospfExtAreaVirtualLinkAreaId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkAreaId.setStatus("obsolete")
_OspfExtAreaVirtualLinkIpAddr_Type = IpAddress
_OspfExtAreaVirtualLinkIpAddr_Object = MibTableColumn
ospfExtAreaVirtualLinkIpAddr = _OspfExtAreaVirtualLinkIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 2),
    _OspfExtAreaVirtualLinkIpAddr_Type()
)
ospfExtAreaVirtualLinkIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkIpAddr.setStatus("obsolete")


class _OspfExtAreaVirtualLinkDeadInterval_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkDeadInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaVirtualLinkDeadInterval_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkDeadInterval_Object = MibTableColumn
ospfExtAreaVirtualLinkDeadInterval = _OspfExtAreaVirtualLinkDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 3),
    _OspfExtAreaVirtualLinkDeadInterval_Type()
)
ospfExtAreaVirtualLinkDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkDeadInterval.setStatus("obsolete")


class _OspfExtAreaVirtualLinkHelloInterval_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkHelloInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfExtAreaVirtualLinkHelloInterval_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkHelloInterval_Object = MibTableColumn
ospfExtAreaVirtualLinkHelloInterval = _OspfExtAreaVirtualLinkHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 4),
    _OspfExtAreaVirtualLinkHelloInterval_Type()
)
ospfExtAreaVirtualLinkHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkHelloInterval.setStatus("obsolete")


class _OspfExtAreaVirtualLinkRetransInterval_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkRetransInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_OspfExtAreaVirtualLinkRetransInterval_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkRetransInterval_Object = MibTableColumn
ospfExtAreaVirtualLinkRetransInterval = _OspfExtAreaVirtualLinkRetransInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 5),
    _OspfExtAreaVirtualLinkRetransInterval_Type()
)
ospfExtAreaVirtualLinkRetransInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkRetransInterval.setStatus("obsolete")


class _OspfExtAreaVirtualLinkTransDelay_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkTransDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_OspfExtAreaVirtualLinkTransDelay_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkTransDelay_Object = MibTableColumn
ospfExtAreaVirtualLinkTransDelay = _OspfExtAreaVirtualLinkTransDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 6),
    _OspfExtAreaVirtualLinkTransDelay_Type()
)
ospfExtAreaVirtualLinkTransDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkTransDelay.setStatus("obsolete")


class _OspfExtAreaVirtualLinkAuthKey_Type(OctetString):
    """Custom type ospfExtAreaVirtualLinkAuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_OspfExtAreaVirtualLinkAuthKey_Type.__name__ = "OctetString"
_OspfExtAreaVirtualLinkAuthKey_Object = MibTableColumn
ospfExtAreaVirtualLinkAuthKey = _OspfExtAreaVirtualLinkAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 7),
    _OspfExtAreaVirtualLinkAuthKey_Type()
)
ospfExtAreaVirtualLinkAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkAuthKey.setStatus("obsolete")
_OspfExtAreaVirtualLinkRowStatus_Type = RowStatus
_OspfExtAreaVirtualLinkRowStatus_Object = MibTableColumn
ospfExtAreaVirtualLinkRowStatus = _OspfExtAreaVirtualLinkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 10),
    _OspfExtAreaVirtualLinkRowStatus_Type()
)
ospfExtAreaVirtualLinkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkRowStatus.setStatus("obsolete")


class _OspfExtAreaVirtualLinkAuthClr_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkAuthClr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("simplePassword", 1),
          ("md5", 2))
    )


_OspfExtAreaVirtualLinkAuthClr_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkAuthClr_Object = MibTableColumn
ospfExtAreaVirtualLinkAuthClr = _OspfExtAreaVirtualLinkAuthClr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 11),
    _OspfExtAreaVirtualLinkAuthClr_Type()
)
ospfExtAreaVirtualLinkAuthClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkAuthClr.setStatus("obsolete")


class _OspfExtAreaVirtualLinkStat_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dependUpon", 0),
          ("down", 1),
          ("loopback", 2),
          ("waiting", 3),
          ("pointTopoint", 4),
          ("drOther", 5),
          ("backup", 6),
          ("dr", 7))
    )


_OspfExtAreaVirtualLinkStat_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkStat_Object = MibTableColumn
ospfExtAreaVirtualLinkStat = _OspfExtAreaVirtualLinkStat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 12),
    _OspfExtAreaVirtualLinkStat_Type()
)
ospfExtAreaVirtualLinkStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkStat.setStatus("obsolete")


class _OspfExtAreaVirtualLinkIfName_Type(OctetString):
    """Custom type ospfExtAreaVirtualLinkIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtAreaVirtualLinkIfName_Type.__name__ = "OctetString"
_OspfExtAreaVirtualLinkIfName_Object = MibTableColumn
ospfExtAreaVirtualLinkIfName = _OspfExtAreaVirtualLinkIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 13),
    _OspfExtAreaVirtualLinkIfName_Type()
)
ospfExtAreaVirtualLinkIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkIfName.setStatus("obsolete")
_OspfExtAreaVirtualLinkLocalAddr_Type = IpAddress
_OspfExtAreaVirtualLinkLocalAddr_Object = MibTableColumn
ospfExtAreaVirtualLinkLocalAddr = _OspfExtAreaVirtualLinkLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 14),
    _OspfExtAreaVirtualLinkLocalAddr_Type()
)
ospfExtAreaVirtualLinkLocalAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkLocalAddr.setStatus("obsolete")
_OspfExtAreaVirtualLinkRemoteAddr_Type = IpAddress
_OspfExtAreaVirtualLinkRemoteAddr_Object = MibTableColumn
ospfExtAreaVirtualLinkRemoteAddr = _OspfExtAreaVirtualLinkRemoteAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 15),
    _OspfExtAreaVirtualLinkRemoteAddr_Type()
)
ospfExtAreaVirtualLinkRemoteAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkRemoteAddr.setStatus("obsolete")


class _OspfExtAreaVirtualLinkHelloDue_Type(OctetString):
    """Custom type ospfExtAreaVirtualLinkHelloDue based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtAreaVirtualLinkHelloDue_Type.__name__ = "OctetString"
_OspfExtAreaVirtualLinkHelloDue_Object = MibTableColumn
ospfExtAreaVirtualLinkHelloDue = _OspfExtAreaVirtualLinkHelloDue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 16),
    _OspfExtAreaVirtualLinkHelloDue_Type()
)
ospfExtAreaVirtualLinkHelloDue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkHelloDue.setStatus("obsolete")


class _OspfExtAreaVirtualLinkAdjacencyState_Type(Integer32):
    """Custom type ospfExtAreaVirtualLinkAdjacencyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dependUpon", 0),
          ("down", 1),
          ("attempt", 2),
          ("init", 3),
          ("twoway", 4),
          ("exStart", 5),
          ("exchange", 6),
          ("loading", 7),
          ("full", 8))
    )


_OspfExtAreaVirtualLinkAdjacencyState_Type.__name__ = "Integer32"
_OspfExtAreaVirtualLinkAdjacencyState_Object = MibTableColumn
ospfExtAreaVirtualLinkAdjacencyState = _OspfExtAreaVirtualLinkAdjacencyState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 17, 1, 17),
    _OspfExtAreaVirtualLinkAdjacencyState_Type()
)
ospfExtAreaVirtualLinkAdjacencyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkAdjacencyState.setStatus("obsolete")
_OspfExtAreaVirtualLinkMsgDigestKeyTable_Object = MibTable
ospfExtAreaVirtualLinkMsgDigestKeyTable = _OspfExtAreaVirtualLinkMsgDigestKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 18)
)
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkMsgDigestKeyTable.setStatus("obsolete")
_OspfExtAreaVirtualLinkMsgDigestKeyEntry_Object = MibTableRow
ospfExtAreaVirtualLinkMsgDigestKeyEntry = _OspfExtAreaVirtualLinkMsgDigestKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 18, 1)
)
ospfExtAreaVirtualLinkMsgDigestKeyEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAreaVirtualLinkMsgDigestKeyRowStatus"),
)
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkMsgDigestKeyEntry.setStatus("obsolete")
_OspfExtAreaVirtualLinkMsgDigestKeyRowStatus_Type = RowStatus
_OspfExtAreaVirtualLinkMsgDigestKeyRowStatus_Object = MibTableColumn
ospfExtAreaVirtualLinkMsgDigestKeyRowStatus = _OspfExtAreaVirtualLinkMsgDigestKeyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 18, 1, 1),
    _OspfExtAreaVirtualLinkMsgDigestKeyRowStatus_Type()
)
ospfExtAreaVirtualLinkMsgDigestKeyRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkMsgDigestKeyRowStatus.setStatus("obsolete")


class _OspfExtAreaVirtualLinkMsgDigestKeyPwd_Type(OctetString):
    """Custom type ospfExtAreaVirtualLinkMsgDigestKeyPwd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_OspfExtAreaVirtualLinkMsgDigestKeyPwd_Type.__name__ = "OctetString"
_OspfExtAreaVirtualLinkMsgDigestKeyPwd_Object = MibTableColumn
ospfExtAreaVirtualLinkMsgDigestKeyPwd = _OspfExtAreaVirtualLinkMsgDigestKeyPwd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 18, 1, 2),
    _OspfExtAreaVirtualLinkMsgDigestKeyPwd_Type()
)
ospfExtAreaVirtualLinkMsgDigestKeyPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtAreaVirtualLinkMsgDigestKeyPwd.setStatus("obsolete")
_OspfExtRouterLsdbTable_Object = MibTable
ospfExtRouterLsdbTable = _OspfExtRouterLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19)
)
if mibBuilder.loadTexts:
    ospfExtRouterLsdbTable.setStatus("current")
_OspfExtRouterLsdbEntry_Object = MibTableRow
ospfExtRouterLsdbEntry = _OspfExtRouterLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1)
)
ospfExtRouterLsdbEntry.setIndexNames(
    (0, "SWITCH", "ospfExtRouterLsaId"),
)
if mibBuilder.loadTexts:
    ospfExtRouterLsdbEntry.setStatus("current")
_OspfExtRouterLsaId_Type = Integer32
_OspfExtRouterLsaId_Object = MibTableColumn
ospfExtRouterLsaId = _OspfExtRouterLsaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 1),
    _OspfExtRouterLsaId_Type()
)
ospfExtRouterLsaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaId.setStatus("current")
_OspfExtRouterLsaAge_Type = Integer32
_OspfExtRouterLsaAge_Object = MibTableColumn
ospfExtRouterLsaAge = _OspfExtRouterLsaAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 2),
    _OspfExtRouterLsaAge_Type()
)
ospfExtRouterLsaAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaAge.setStatus("current")
_OspfExtRouterLsaOption_Type = OctetString
_OspfExtRouterLsaOption_Object = MibTableColumn
ospfExtRouterLsaOption = _OspfExtRouterLsaOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 3),
    _OspfExtRouterLsaOption_Type()
)
ospfExtRouterLsaOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaOption.setStatus("current")
_OspfExtRouterLsaAdvRouter_Type = IpAddress
_OspfExtRouterLsaAdvRouter_Object = MibTableColumn
ospfExtRouterLsaAdvRouter = _OspfExtRouterLsaAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 4),
    _OspfExtRouterLsaAdvRouter_Type()
)
ospfExtRouterLsaAdvRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaAdvRouter.setStatus("current")


class _OspfExtRouterLsaSeq_Type(Gauge32):
    """Custom type ospfExtRouterLsaSeq based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtRouterLsaSeq_Type.__name__ = "Gauge32"
_OspfExtRouterLsaSeq_Object = MibTableColumn
ospfExtRouterLsaSeq = _OspfExtRouterLsaSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 5),
    _OspfExtRouterLsaSeq_Type()
)
ospfExtRouterLsaSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaSeq.setStatus("current")
_OspfExtRouterLsaChkSum_Type = Integer32
_OspfExtRouterLsaChkSum_Object = MibTableColumn
ospfExtRouterLsaChkSum = _OspfExtRouterLsaChkSum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 6),
    _OspfExtRouterLsaChkSum_Type()
)
ospfExtRouterLsaChkSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaChkSum.setStatus("current")
_OspfExtRouterLsaLinkCount_Type = Integer32
_OspfExtRouterLsaLinkCount_Object = MibTableColumn
ospfExtRouterLsaLinkCount = _OspfExtRouterLsaLinkCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 7),
    _OspfExtRouterLsaLinkCount_Type()
)
ospfExtRouterLsaLinkCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaLinkCount.setStatus("current")
_OspfExtRouterLsaOpaqueID_Type = Integer32
_OspfExtRouterLsaOpaqueID_Object = MibTableColumn
ospfExtRouterLsaOpaqueID = _OspfExtRouterLsaOpaqueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 8),
    _OspfExtRouterLsaOpaqueID_Type()
)
ospfExtRouterLsaOpaqueID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaOpaqueID.setStatus("current")
_OspfExtRouterLsaOpaqueType_Type = Integer32
_OspfExtRouterLsaOpaqueType_Object = MibTableColumn
ospfExtRouterLsaOpaqueType = _OspfExtRouterLsaOpaqueType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 9),
    _OspfExtRouterLsaOpaqueType_Type()
)
ospfExtRouterLsaOpaqueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaOpaqueType.setStatus("current")
_OspfExtRouterLsaLength_Type = Integer32
_OspfExtRouterLsaLength_Object = MibTableColumn
ospfExtRouterLsaLength = _OspfExtRouterLsaLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 19, 1, 10),
    _OspfExtRouterLsaLength_Type()
)
ospfExtRouterLsaLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtRouterLsaLength.setStatus("current")
_OspfExtNetworkLsdbTable_Object = MibTable
ospfExtNetworkLsdbTable = _OspfExtNetworkLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20)
)
if mibBuilder.loadTexts:
    ospfExtNetworkLsdbTable.setStatus("current")
_OspfExtNetworkLsdbEntry_Object = MibTableRow
ospfExtNetworkLsdbEntry = _OspfExtNetworkLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1)
)
ospfExtNetworkLsdbEntry.setIndexNames(
    (0, "SWITCH", "ospfExtNetworkLsaId"),
)
if mibBuilder.loadTexts:
    ospfExtNetworkLsdbEntry.setStatus("current")
_OspfExtNetworkLsaId_Type = Integer32
_OspfExtNetworkLsaId_Object = MibTableColumn
ospfExtNetworkLsaId = _OspfExtNetworkLsaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 1),
    _OspfExtNetworkLsaId_Type()
)
ospfExtNetworkLsaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaId.setStatus("current")
_OspfExtNetworkLsaAge_Type = Integer32
_OspfExtNetworkLsaAge_Object = MibTableColumn
ospfExtNetworkLsaAge = _OspfExtNetworkLsaAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 2),
    _OspfExtNetworkLsaAge_Type()
)
ospfExtNetworkLsaAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaAge.setStatus("current")
_OspfExtNetworkLsaOption_Type = OctetString
_OspfExtNetworkLsaOption_Object = MibTableColumn
ospfExtNetworkLsaOption = _OspfExtNetworkLsaOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 3),
    _OspfExtNetworkLsaOption_Type()
)
ospfExtNetworkLsaOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaOption.setStatus("current")
_OspfExtNetworkLsaAdvRouter_Type = IpAddress
_OspfExtNetworkLsaAdvRouter_Object = MibTableColumn
ospfExtNetworkLsaAdvRouter = _OspfExtNetworkLsaAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 4),
    _OspfExtNetworkLsaAdvRouter_Type()
)
ospfExtNetworkLsaAdvRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaAdvRouter.setStatus("current")


class _OspfExtNetworkLsaSeq_Type(Gauge32):
    """Custom type ospfExtNetworkLsaSeq based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtNetworkLsaSeq_Type.__name__ = "Gauge32"
_OspfExtNetworkLsaSeq_Object = MibTableColumn
ospfExtNetworkLsaSeq = _OspfExtNetworkLsaSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 5),
    _OspfExtNetworkLsaSeq_Type()
)
ospfExtNetworkLsaSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaSeq.setStatus("current")
_OspfExtNetworkLsaChkSum_Type = Integer32
_OspfExtNetworkLsaChkSum_Object = MibTableColumn
ospfExtNetworkLsaChkSum = _OspfExtNetworkLsaChkSum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 6),
    _OspfExtNetworkLsaChkSum_Type()
)
ospfExtNetworkLsaChkSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaChkSum.setStatus("current")
_OspfExtNetworkLsaOpaqueID_Type = Integer32
_OspfExtNetworkLsaOpaqueID_Object = MibTableColumn
ospfExtNetworkLsaOpaqueID = _OspfExtNetworkLsaOpaqueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 8),
    _OspfExtNetworkLsaOpaqueID_Type()
)
ospfExtNetworkLsaOpaqueID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaOpaqueID.setStatus("current")
_OspfExtNetworkLsaOpaqueType_Type = Integer32
_OspfExtNetworkLsaOpaqueType_Object = MibTableColumn
ospfExtNetworkLsaOpaqueType = _OspfExtNetworkLsaOpaqueType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 9),
    _OspfExtNetworkLsaOpaqueType_Type()
)
ospfExtNetworkLsaOpaqueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaOpaqueType.setStatus("current")
_OspfExtNetworkLsaLength_Type = Integer32
_OspfExtNetworkLsaLength_Object = MibTableColumn
ospfExtNetworkLsaLength = _OspfExtNetworkLsaLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 10),
    _OspfExtNetworkLsaLength_Type()
)
ospfExtNetworkLsaLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaLength.setStatus("current")
_OspfExtNetworkLsaNetworkMask_Type = IpAddress
_OspfExtNetworkLsaNetworkMask_Object = MibTableColumn
ospfExtNetworkLsaNetworkMask = _OspfExtNetworkLsaNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 20, 1, 11),
    _OspfExtNetworkLsaNetworkMask_Type()
)
ospfExtNetworkLsaNetworkMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtNetworkLsaNetworkMask.setStatus("current")
_OspfExtSummaryLsdbTable_Object = MibTable
ospfExtSummaryLsdbTable = _OspfExtSummaryLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21)
)
if mibBuilder.loadTexts:
    ospfExtSummaryLsdbTable.setStatus("current")
_OspfExtSummaryLsdbEntry_Object = MibTableRow
ospfExtSummaryLsdbEntry = _OspfExtSummaryLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1)
)
ospfExtSummaryLsdbEntry.setIndexNames(
    (0, "SWITCH", "ospfExtSummaryLsaId"),
)
if mibBuilder.loadTexts:
    ospfExtSummaryLsdbEntry.setStatus("current")
_OspfExtSummaryLsaId_Type = Integer32
_OspfExtSummaryLsaId_Object = MibTableColumn
ospfExtSummaryLsaId = _OspfExtSummaryLsaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 1),
    _OspfExtSummaryLsaId_Type()
)
ospfExtSummaryLsaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaId.setStatus("current")
_OspfExtSummaryLsaAge_Type = Integer32
_OspfExtSummaryLsaAge_Object = MibTableColumn
ospfExtSummaryLsaAge = _OspfExtSummaryLsaAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 2),
    _OspfExtSummaryLsaAge_Type()
)
ospfExtSummaryLsaAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaAge.setStatus("current")
_OspfExtSummaryLsaOption_Type = OctetString
_OspfExtSummaryLsaOption_Object = MibTableColumn
ospfExtSummaryLsaOption = _OspfExtSummaryLsaOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 3),
    _OspfExtSummaryLsaOption_Type()
)
ospfExtSummaryLsaOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaOption.setStatus("current")
_OspfExtSummaryLsaAdvRouter_Type = IpAddress
_OspfExtSummaryLsaAdvRouter_Object = MibTableColumn
ospfExtSummaryLsaAdvRouter = _OspfExtSummaryLsaAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 4),
    _OspfExtSummaryLsaAdvRouter_Type()
)
ospfExtSummaryLsaAdvRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaAdvRouter.setStatus("current")


class _OspfExtSummaryLsaSeq_Type(Gauge32):
    """Custom type ospfExtSummaryLsaSeq based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtSummaryLsaSeq_Type.__name__ = "Gauge32"
_OspfExtSummaryLsaSeq_Object = MibTableColumn
ospfExtSummaryLsaSeq = _OspfExtSummaryLsaSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 5),
    _OspfExtSummaryLsaSeq_Type()
)
ospfExtSummaryLsaSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaSeq.setStatus("current")
_OspfExtSummaryLsaChkSum_Type = Integer32
_OspfExtSummaryLsaChkSum_Object = MibTableColumn
ospfExtSummaryLsaChkSum = _OspfExtSummaryLsaChkSum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 6),
    _OspfExtSummaryLsaChkSum_Type()
)
ospfExtSummaryLsaChkSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaChkSum.setStatus("current")
_OspfExtSummaryLsaOpaqueID_Type = Integer32
_OspfExtSummaryLsaOpaqueID_Object = MibTableColumn
ospfExtSummaryLsaOpaqueID = _OspfExtSummaryLsaOpaqueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 8),
    _OspfExtSummaryLsaOpaqueID_Type()
)
ospfExtSummaryLsaOpaqueID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaOpaqueID.setStatus("current")
_OspfExtSummaryLsaOpaqueType_Type = Integer32
_OspfExtSummaryLsaOpaqueType_Object = MibTableColumn
ospfExtSummaryLsaOpaqueType = _OspfExtSummaryLsaOpaqueType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 9),
    _OspfExtSummaryLsaOpaqueType_Type()
)
ospfExtSummaryLsaOpaqueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaOpaqueType.setStatus("current")
_OspfExtSummaryLsaLength_Type = Integer32
_OspfExtSummaryLsaLength_Object = MibTableColumn
ospfExtSummaryLsaLength = _OspfExtSummaryLsaLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 10),
    _OspfExtSummaryLsaLength_Type()
)
ospfExtSummaryLsaLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaLength.setStatus("current")
_OspfExtSummaryLsaNetworkMask_Type = IpAddress
_OspfExtSummaryLsaNetworkMask_Object = MibTableColumn
ospfExtSummaryLsaNetworkMask = _OspfExtSummaryLsaNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 11),
    _OspfExtSummaryLsaNetworkMask_Type()
)
ospfExtSummaryLsaNetworkMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaNetworkMask.setStatus("current")
_OspfExtSummaryLsaTos0Metric_Type = Integer32
_OspfExtSummaryLsaTos0Metric_Object = MibTableColumn
ospfExtSummaryLsaTos0Metric = _OspfExtSummaryLsaTos0Metric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 21, 1, 12),
    _OspfExtSummaryLsaTos0Metric_Type()
)
ospfExtSummaryLsaTos0Metric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryLsaTos0Metric.setStatus("current")
_OspfExtSummaryAsbrLsdbTable_Object = MibTable
ospfExtSummaryAsbrLsdbTable = _OspfExtSummaryAsbrLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22)
)
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsdbTable.setStatus("current")
_OspfExtSummaryAsbrLsdbEntry_Object = MibTableRow
ospfExtSummaryAsbrLsdbEntry = _OspfExtSummaryAsbrLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1)
)
ospfExtSummaryAsbrLsdbEntry.setIndexNames(
    (0, "SWITCH", "ospfExtSummaryAsbrLsaId"),
)
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsdbEntry.setStatus("current")
_OspfExtSummaryAsbrLsaId_Type = Integer32
_OspfExtSummaryAsbrLsaId_Object = MibTableColumn
ospfExtSummaryAsbrLsaId = _OspfExtSummaryAsbrLsaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 1),
    _OspfExtSummaryAsbrLsaId_Type()
)
ospfExtSummaryAsbrLsaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaId.setStatus("current")
_OspfExtSummaryAsbrLsaAge_Type = Integer32
_OspfExtSummaryAsbrLsaAge_Object = MibTableColumn
ospfExtSummaryAsbrLsaAge = _OspfExtSummaryAsbrLsaAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 2),
    _OspfExtSummaryAsbrLsaAge_Type()
)
ospfExtSummaryAsbrLsaAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaAge.setStatus("current")
_OspfExtSummaryAsbrLsaOption_Type = OctetString
_OspfExtSummaryAsbrLsaOption_Object = MibTableColumn
ospfExtSummaryAsbrLsaOption = _OspfExtSummaryAsbrLsaOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 3),
    _OspfExtSummaryAsbrLsaOption_Type()
)
ospfExtSummaryAsbrLsaOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaOption.setStatus("current")
_OspfExtSummaryAsbrLsaAdvRouter_Type = IpAddress
_OspfExtSummaryAsbrLsaAdvRouter_Object = MibTableColumn
ospfExtSummaryAsbrLsaAdvRouter = _OspfExtSummaryAsbrLsaAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 4),
    _OspfExtSummaryAsbrLsaAdvRouter_Type()
)
ospfExtSummaryAsbrLsaAdvRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaAdvRouter.setStatus("current")


class _OspfExtSummaryAsbrLsaSeq_Type(Gauge32):
    """Custom type ospfExtSummaryAsbrLsaSeq based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtSummaryAsbrLsaSeq_Type.__name__ = "Gauge32"
_OspfExtSummaryAsbrLsaSeq_Object = MibTableColumn
ospfExtSummaryAsbrLsaSeq = _OspfExtSummaryAsbrLsaSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 5),
    _OspfExtSummaryAsbrLsaSeq_Type()
)
ospfExtSummaryAsbrLsaSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaSeq.setStatus("current")
_OspfExtSummaryAsbrLsaChkSum_Type = Integer32
_OspfExtSummaryAsbrLsaChkSum_Object = MibTableColumn
ospfExtSummaryAsbrLsaChkSum = _OspfExtSummaryAsbrLsaChkSum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 6),
    _OspfExtSummaryAsbrLsaChkSum_Type()
)
ospfExtSummaryAsbrLsaChkSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaChkSum.setStatus("current")
_OspfExtSummaryAsbrLsaOpaqueID_Type = Integer32
_OspfExtSummaryAsbrLsaOpaqueID_Object = MibTableColumn
ospfExtSummaryAsbrLsaOpaqueID = _OspfExtSummaryAsbrLsaOpaqueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 8),
    _OspfExtSummaryAsbrLsaOpaqueID_Type()
)
ospfExtSummaryAsbrLsaOpaqueID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaOpaqueID.setStatus("current")
_OspfExtSummaryAsbrLsaOpaqueType_Type = Integer32
_OspfExtSummaryAsbrLsaOpaqueType_Object = MibTableColumn
ospfExtSummaryAsbrLsaOpaqueType = _OspfExtSummaryAsbrLsaOpaqueType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 9),
    _OspfExtSummaryAsbrLsaOpaqueType_Type()
)
ospfExtSummaryAsbrLsaOpaqueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaOpaqueType.setStatus("current")
_OspfExtSummaryAsbrLsaLength_Type = Integer32
_OspfExtSummaryAsbrLsaLength_Object = MibTableColumn
ospfExtSummaryAsbrLsaLength = _OspfExtSummaryAsbrLsaLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 10),
    _OspfExtSummaryAsbrLsaLength_Type()
)
ospfExtSummaryAsbrLsaLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaLength.setStatus("current")
_OspfExtSummaryAsbrLsaNetworkMask_Type = IpAddress
_OspfExtSummaryAsbrLsaNetworkMask_Object = MibTableColumn
ospfExtSummaryAsbrLsaNetworkMask = _OspfExtSummaryAsbrLsaNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 11),
    _OspfExtSummaryAsbrLsaNetworkMask_Type()
)
ospfExtSummaryAsbrLsaNetworkMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaNetworkMask.setStatus("current")
_OspfExtSummaryAsbrLsaTos0Metric_Type = Integer32
_OspfExtSummaryAsbrLsaTos0Metric_Object = MibTableColumn
ospfExtSummaryAsbrLsaTos0Metric = _OspfExtSummaryAsbrLsaTos0Metric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 22, 1, 12),
    _OspfExtSummaryAsbrLsaTos0Metric_Type()
)
ospfExtSummaryAsbrLsaTos0Metric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSummaryAsbrLsaTos0Metric.setStatus("current")
_OspfExtAsExtLsdbTable_Object = MibTable
ospfExtAsExtLsdbTable = _OspfExtAsExtLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23)
)
if mibBuilder.loadTexts:
    ospfExtAsExtLsdbTable.setStatus("current")
_OspfExtAsExtLsdbEntry_Object = MibTableRow
ospfExtAsExtLsdbEntry = _OspfExtAsExtLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1)
)
ospfExtAsExtLsdbEntry.setIndexNames(
    (0, "SWITCH", "ospfExtAsExtLsaId"),
)
if mibBuilder.loadTexts:
    ospfExtAsExtLsdbEntry.setStatus("current")
_OspfExtAsExtLsaId_Type = Integer32
_OspfExtAsExtLsaId_Object = MibTableColumn
ospfExtAsExtLsaId = _OspfExtAsExtLsaId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 1),
    _OspfExtAsExtLsaId_Type()
)
ospfExtAsExtLsaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaId.setStatus("current")
_OspfExtAsExtLsaAge_Type = Integer32
_OspfExtAsExtLsaAge_Object = MibTableColumn
ospfExtAsExtLsaAge = _OspfExtAsExtLsaAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 2),
    _OspfExtAsExtLsaAge_Type()
)
ospfExtAsExtLsaAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaAge.setStatus("current")
_OspfExtAsExtLsaOption_Type = OctetString
_OspfExtAsExtLsaOption_Object = MibTableColumn
ospfExtAsExtLsaOption = _OspfExtAsExtLsaOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 3),
    _OspfExtAsExtLsaOption_Type()
)
ospfExtAsExtLsaOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaOption.setStatus("current")
_OspfExtAsExtLsaAdvRouter_Type = IpAddress
_OspfExtAsExtLsaAdvRouter_Object = MibTableColumn
ospfExtAsExtLsaAdvRouter = _OspfExtAsExtLsaAdvRouter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 4),
    _OspfExtAsExtLsaAdvRouter_Type()
)
ospfExtAsExtLsaAdvRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaAdvRouter.setStatus("current")


class _OspfExtAsExtLsaSeq_Type(Gauge32):
    """Custom type ospfExtAsExtLsaSeq based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtAsExtLsaSeq_Type.__name__ = "Gauge32"
_OspfExtAsExtLsaSeq_Object = MibTableColumn
ospfExtAsExtLsaSeq = _OspfExtAsExtLsaSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 5),
    _OspfExtAsExtLsaSeq_Type()
)
ospfExtAsExtLsaSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaSeq.setStatus("current")
_OspfExtAsExtLsaChkSum_Type = Integer32
_OspfExtAsExtLsaChkSum_Object = MibTableColumn
ospfExtAsExtLsaChkSum = _OspfExtAsExtLsaChkSum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 6),
    _OspfExtAsExtLsaChkSum_Type()
)
ospfExtAsExtLsaChkSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaChkSum.setStatus("current")
_OspfExtAsExtLsaOpaqueID_Type = Integer32
_OspfExtAsExtLsaOpaqueID_Object = MibTableColumn
ospfExtAsExtLsaOpaqueID = _OspfExtAsExtLsaOpaqueID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 8),
    _OspfExtAsExtLsaOpaqueID_Type()
)
ospfExtAsExtLsaOpaqueID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaOpaqueID.setStatus("current")
_OspfExtAsExtLsaOpaqueType_Type = Integer32
_OspfExtAsExtLsaOpaqueType_Object = MibTableColumn
ospfExtAsExtLsaOpaqueType = _OspfExtAsExtLsaOpaqueType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 9),
    _OspfExtAsExtLsaOpaqueType_Type()
)
ospfExtAsExtLsaOpaqueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaOpaqueType.setStatus("current")
_OspfExtAsExtLsaLength_Type = Integer32
_OspfExtAsExtLsaLength_Object = MibTableColumn
ospfExtAsExtLsaLength = _OspfExtAsExtLsaLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 10),
    _OspfExtAsExtLsaLength_Type()
)
ospfExtAsExtLsaLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaLength.setStatus("current")
_OspfExtAsExtLsaNetworkMask_Type = IpAddress
_OspfExtAsExtLsaNetworkMask_Object = MibTableColumn
ospfExtAsExtLsaNetworkMask = _OspfExtAsExtLsaNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 11),
    _OspfExtAsExtLsaNetworkMask_Type()
)
ospfExtAsExtLsaNetworkMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaNetworkMask.setStatus("current")
_OspfExtAsExtLsaTos0Metric_Type = Integer32
_OspfExtAsExtLsaTos0Metric_Object = MibTableColumn
ospfExtAsExtLsaTos0Metric = _OspfExtAsExtLsaTos0Metric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 12),
    _OspfExtAsExtLsaTos0Metric_Type()
)
ospfExtAsExtLsaTos0Metric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaTos0Metric.setStatus("current")
_OspfExtAsExtLsaMetricType_Type = Integer32
_OspfExtAsExtLsaMetricType_Object = MibTableColumn
ospfExtAsExtLsaMetricType = _OspfExtAsExtLsaMetricType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 13),
    _OspfExtAsExtLsaMetricType_Type()
)
ospfExtAsExtLsaMetricType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaMetricType.setStatus("current")
_OspfExtAsExtLsaForwardAddress_Type = IpAddress
_OspfExtAsExtLsaForwardAddress_Object = MibTableColumn
ospfExtAsExtLsaForwardAddress = _OspfExtAsExtLsaForwardAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 14),
    _OspfExtAsExtLsaForwardAddress_Type()
)
ospfExtAsExtLsaForwardAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaForwardAddress.setStatus("current")
_OspfExtAsExtLsaExternalRouteTag_Type = Integer32
_OspfExtAsExtLsaExternalRouteTag_Object = MibTableColumn
ospfExtAsExtLsaExternalRouteTag = _OspfExtAsExtLsaExternalRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 23, 1, 15),
    _OspfExtAsExtLsaExternalRouteTag_Type()
)
ospfExtAsExtLsaExternalRouteTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtAsExtLsaExternalRouteTag.setStatus("current")
_OspfExtGeneralGroup_ObjectIdentity = ObjectIdentity
ospfExtGeneralGroup = _OspfExtGeneralGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30)
)
_OspfRouterId_Type = IpAddress
_OspfRouterId_Object = MibScalar
ospfRouterId = _OspfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 1),
    _OspfRouterId_Type()
)
ospfRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfRouterId.setStatus("current")


class _OspfExtSysUpTime_Type(Gauge32):
    """Custom type ospfExtSysUpTime based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExtSysUpTime_Type.__name__ = "Gauge32"
_OspfExtSysUpTime_Object = MibScalar
ospfExtSysUpTime = _OspfExtSysUpTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 2),
    _OspfExtSysUpTime_Type()
)
ospfExtSysUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtSysUpTime.setStatus("current")


class _OspfExtVrfName_Type(OctetString):
    """Custom type ospfExtVrfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_OspfExtVrfName_Type.__name__ = "OctetString"
_OspfExtVrfName_Object = MibScalar
ospfExtVrfName = _OspfExtVrfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 3),
    _OspfExtVrfName_Type()
)
ospfExtVrfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExtVrfName.setStatus("current")


class _OspfCompatibleRfc_Type(Integer32):
    """Custom type ospfCompatibleRfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_OspfCompatibleRfc_Type.__name__ = "Integer32"
_OspfCompatibleRfc_Object = MibScalar
ospfCompatibleRfc = _OspfCompatibleRfc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 4),
    _OspfCompatibleRfc_Type()
)
ospfCompatibleRfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfCompatibleRfc.setStatus("current")


class _OspfOpaqueCapable_Type(Integer32):
    """Custom type ospfOpaqueCapable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unsupport", 0),
          ("support", 1))
    )


_OspfOpaqueCapable_Type.__name__ = "Integer32"
_OspfOpaqueCapable_Object = MibScalar
ospfOpaqueCapable = _OspfOpaqueCapable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 5),
    _OspfOpaqueCapable_Type()
)
ospfOpaqueCapable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfOpaqueCapable.setStatus("current")
_OspfAbrType_Type = Integer32
_OspfAbrType_Object = MibScalar
ospfAbrType = _OspfAbrType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 6),
    _OspfAbrType_Type()
)
ospfAbrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfAbrType.setStatus("current")


class _OspfAbsr_Type(Integer32):
    """Custom type ospfAbsr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notABSR", 0),
          ("isABSR", 1))
    )


_OspfAbsr_Type.__name__ = "Integer32"
_OspfAbsr_Object = MibScalar
ospfAbsr = _OspfAbsr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 7),
    _OspfAbsr_Type()
)
ospfAbsr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfAbsr.setStatus("current")


class _OspfDdCountIn_Type(Integer32):
    """Custom type ospfDdCountIn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfDdCountIn_Type.__name__ = "Integer32"
_OspfDdCountIn_Object = MibScalar
ospfDdCountIn = _OspfDdCountIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 8),
    _OspfDdCountIn_Type()
)
ospfDdCountIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfDdCountIn.setStatus("current")


class _OspfDdCountOut_Type(Integer32):
    """Custom type ospfDdCountOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfDdCountOut_Type.__name__ = "Integer32"
_OspfDdCountOut_Object = MibScalar
ospfDdCountOut = _OspfDdCountOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 9),
    _OspfDdCountOut_Type()
)
ospfDdCountOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfDdCountOut.setStatus("current")


class _OspfMaxDd_Type(Integer32):
    """Custom type ospfMaxDd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfMaxDd_Type.__name__ = "Integer32"
_OspfMaxDd_Object = MibScalar
ospfMaxDd = _OspfMaxDd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 10),
    _OspfMaxDd_Type()
)
ospfMaxDd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfMaxDd.setStatus("current")


class _OspfExternalLsaCount_Type(Gauge32):
    """Custom type ospfExternalLsaCount based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExternalLsaCount_Type.__name__ = "Gauge32"
_OspfExternalLsaCount_Object = MibScalar
ospfExternalLsaCount = _OspfExternalLsaCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 11),
    _OspfExternalLsaCount_Type()
)
ospfExternalLsaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExternalLsaCount.setStatus("current")


class _OspfExternalLsaChecksum_Type(Gauge32):
    """Custom type ospfExternalLsaChecksum based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfExternalLsaChecksum_Type.__name__ = "Gauge32"
_OspfExternalLsaChecksum_Object = MibScalar
ospfExternalLsaChecksum = _OspfExternalLsaChecksum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 12),
    _OspfExternalLsaChecksum_Type()
)
ospfExternalLsaChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExternalLsaChecksum.setStatus("current")


class _OspfNoDefaultExternalLsaCount_Type(Integer32):
    """Custom type ospfNoDefaultExternalLsaCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfNoDefaultExternalLsaCount_Type.__name__ = "Integer32"
_OspfNoDefaultExternalLsaCount_Object = MibScalar
ospfNoDefaultExternalLsaCount = _OspfNoDefaultExternalLsaCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 13),
    _OspfNoDefaultExternalLsaCount_Type()
)
ospfNoDefaultExternalLsaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfNoDefaultExternalLsaCount.setStatus("current")


class _OspfExternalLsaDbLimit_Type(Integer32):
    """Custom type ospfExternalLsaDbLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unlimit", 0),
          ("limit", 1))
    )


_OspfExternalLsaDbLimit_Type.__name__ = "Integer32"
_OspfExternalLsaDbLimit_Object = MibScalar
ospfExternalLsaDbLimit = _OspfExternalLsaDbLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 14),
    _OspfExternalLsaDbLimit_Type()
)
ospfExternalLsaDbLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfExternalLsaDbLimit.setStatus("current")


class _OspfLsDbLimit_Type(Gauge32):
    """Custom type ospfLsDbLimit based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfLsDbLimit_Type.__name__ = "Gauge32"
_OspfLsDbLimit_Object = MibScalar
ospfLsDbLimit = _OspfLsDbLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 15),
    _OspfLsDbLimit_Type()
)
ospfLsDbLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfLsDbLimit.setStatus("current")


class _OspfLsaOrgCount_Type(Gauge32):
    """Custom type ospfLsaOrgCount based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfLsaOrgCount_Type.__name__ = "Gauge32"
_OspfLsaOrgCount_Object = MibScalar
ospfLsaOrgCount = _OspfLsaOrgCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 16),
    _OspfLsaOrgCount_Type()
)
ospfLsaOrgCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfLsaOrgCount.setStatus("current")


class _OspfLsaRcvCount_Type(Gauge32):
    """Custom type ospfLsaRcvCount based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_OspfLsaRcvCount_Type.__name__ = "Gauge32"
_OspfLsaRcvCount_Object = MibScalar
ospfLsaRcvCount = _OspfLsaRcvCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 17),
    _OspfLsaRcvCount_Type()
)
ospfLsaRcvCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfLsaRcvCount.setStatus("current")


class _OspfExtLsdbLimitInterval_Type(Integer32):
    """Custom type ospfExtLsdbLimitInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OspfExtLsdbLimitInterval_Type.__name__ = "Integer32"
_OspfExtLsdbLimitInterval_Object = MibScalar
ospfExtLsdbLimitInterval = _OspfExtLsdbLimitInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 18),
    _OspfExtLsdbLimitInterval_Type()
)
ospfExtLsdbLimitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtLsdbLimitInterval.setStatus("current")


class _OspfExtLsdbLimitNumber_Type(Integer32):
    """Custom type ospfExtLsdbLimitNumber based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_OspfExtLsdbLimitNumber_Type.__name__ = "Integer32"
_OspfExtLsdbLimitNumber_Object = MibScalar
ospfExtLsdbLimitNumber = _OspfExtLsdbLimitNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 22, 30, 19),
    _OspfExtLsdbLimitNumber_Type()
)
ospfExtLsdbLimitNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfExtLsdbLimitNumber.setStatus("current")
_User_ObjectIdentity = ObjectIdentity
user = _User_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 30)
)
_LineTable_Object = MibTable
lineTable = _LineTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1)
)
if mibBuilder.loadTexts:
    lineTable.setStatus("current")
_LineEntry_Object = MibTableRow
lineEntry = _LineEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1)
)
lineEntry.setIndexNames(
    (0, "SWITCH", "lineType"),
    (0, "SWITCH", "lineIndex"),
)
if mibBuilder.loadTexts:
    lineEntry.setStatus("current")


class _LineType_Type(Integer32):
    """Custom type lineType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("console", 0),
          ("vty", 1))
    )


_LineType_Type.__name__ = "Integer32"
_LineType_Object = MibTableColumn
lineType = _LineType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 1),
    _LineType_Type()
)
lineType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lineType.setStatus("current")


class _LineIndex_Type(Integer32):
    """Custom type lineIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_LineIndex_Type.__name__ = "Integer32"
_LineIndex_Object = MibTableColumn
lineIndex = _LineIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 2),
    _LineIndex_Type()
)
lineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lineIndex.setStatus("current")
_LineLoginMode_Type = LoginType
_LineLoginMode_Object = MibTableColumn
lineLoginMode = _LineLoginMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 3),
    _LineLoginMode_Type()
)
lineLoginMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineLoginMode.setStatus("current")


class _LinePassword_Type(OctetString):
    """Custom type linePassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_LinePassword_Type.__name__ = "OctetString"
_LinePassword_Object = MibTableColumn
linePassword = _LinePassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 4),
    _LinePassword_Type()
)
linePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    linePassword.setStatus("current")


class _LinePriviledge_Type(Integer32):
    """Custom type linePriviledge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_LinePriviledge_Type.__name__ = "Integer32"
_LinePriviledge_Object = MibTableColumn
linePriviledge = _LinePriviledge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 5),
    _LinePriviledge_Type()
)
linePriviledge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    linePriviledge.setStatus("current")


class _LineExecTimeoutmin_Type(Integer32):
    """Custom type lineExecTimeoutmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 35791),
    )


_LineExecTimeoutmin_Type.__name__ = "Integer32"
_LineExecTimeoutmin_Object = MibTableColumn
lineExecTimeoutmin = _LineExecTimeoutmin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 6),
    _LineExecTimeoutmin_Type()
)
lineExecTimeoutmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineExecTimeoutmin.setStatus("current")


class _LineExecTimeoutsec_Type(Integer32):
    """Custom type lineExecTimeoutsec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483),
    )


_LineExecTimeoutsec_Type.__name__ = "Integer32"
_LineExecTimeoutsec_Object = MibTableColumn
lineExecTimeoutsec = _LineExecTimeoutsec_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 7),
    _LineExecTimeoutsec_Type()
)
lineExecTimeoutsec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineExecTimeoutsec.setStatus("current")


class _LineAccessInName_Type(OctetString):
    """Custom type lineAccessInName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_LineAccessInName_Type.__name__ = "OctetString"
_LineAccessInName_Object = MibTableColumn
lineAccessInName = _LineAccessInName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 8),
    _LineAccessInName_Type()
)
lineAccessInName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineAccessInName.setStatus("current")


class _LineTransportType_Type(Integer32):
    """Custom type lineTransportType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("ssh", 1),
          ("telnet", 2),
          ("none", 3))
    )


_LineTransportType_Type.__name__ = "Integer32"
_LineTransportType_Object = MibTableColumn
lineTransportType = _LineTransportType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 9),
    _LineTransportType_Type()
)
lineTransportType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineTransportType.setStatus("current")


class _LinePasswordType_Type(Integer32):
    """Custom type linePasswordType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_LinePasswordType_Type.__name__ = "Integer32"
_LinePasswordType_Object = MibTableColumn
linePasswordType = _LinePasswordType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 1, 1, 10),
    _LinePasswordType_Type()
)
linePasswordType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linePasswordType.setStatus("current")
_UsernameTable_Object = MibTable
usernameTable = _UsernameTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2)
)
if mibBuilder.loadTexts:
    usernameTable.setStatus("current")
_UsernameEntry_Object = MibTableRow
usernameEntry = _UsernameEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1)
)
usernameEntry.setIndexNames(
    (0, "SWITCH", "usernameIndex"),
)
if mibBuilder.loadTexts:
    usernameEntry.setStatus("current")


class _UsernameIndex_Type(Integer32):
    """Custom type usernameIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_UsernameIndex_Type.__name__ = "Integer32"
_UsernameIndex_Object = MibTableColumn
usernameIndex = _UsernameIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 1),
    _UsernameIndex_Type()
)
usernameIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    usernameIndex.setStatus("current")


class _Username_Type(OctetString):
    """Custom type username based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_Username_Type.__name__ = "OctetString"
_Username_Object = MibTableColumn
username = _Username_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 2),
    _Username_Type()
)
username.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    username.setStatus("current")


class _Password_Type(OctetString):
    """Custom type password based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_Password_Type.__name__ = "OctetString"
_Password_Object = MibTableColumn
password = _Password_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 3),
    _Password_Type()
)
password.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    password.setStatus("current")
_UserPrivilege_Type = Integer32
_UserPrivilege_Object = MibTableColumn
userPrivilege = _UserPrivilege_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 4),
    _UserPrivilege_Type()
)
userPrivilege.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userPrivilege.setStatus("current")


class _UserPwdType_Type(Integer32):
    """Custom type userPwdType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("secretForUser", 1),
          ("hiddenPwd", 2),
          ("normalPwd", 3),
          ("notsetPwd", 4))
    )


_UserPwdType_Type.__name__ = "Integer32"
_UserPwdType_Object = MibTableColumn
userPwdType = _UserPwdType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 5),
    _UserPwdType_Type()
)
userPwdType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    userPwdType.setStatus("current")
_UsernameRowStatus_Type = RowStatus
_UsernameRowStatus_Object = MibTableColumn
usernameRowStatus = _UsernameRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 2, 1, 6),
    _UsernameRowStatus_Type()
)
usernameRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    usernameRowStatus.setStatus("current")
_EnablePasswordTable_Object = MibTable
enablePasswordTable = _EnablePasswordTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3)
)
if mibBuilder.loadTexts:
    enablePasswordTable.setStatus("current")
_EnablePasswordEntry_Object = MibTableRow
enablePasswordEntry = _EnablePasswordEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3, 1)
)
enablePasswordEntry.setIndexNames(
    (0, "SWITCH", "privilegeIndex"),
)
if mibBuilder.loadTexts:
    enablePasswordEntry.setStatus("current")


class _PrivilegeIndex_Type(Integer32):
    """Custom type privilegeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_PrivilegeIndex_Type.__name__ = "Integer32"
_PrivilegeIndex_Object = MibTableColumn
privilegeIndex = _PrivilegeIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3, 1, 1),
    _PrivilegeIndex_Type()
)
privilegeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    privilegeIndex.setStatus("current")


class _PasswordType_Type(Integer32):
    """Custom type passwordType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("secretForUser", 1),
          ("hiddenPwd", 2),
          ("normalPwd", 3),
          ("notsetPwd", 4))
    )


_PasswordType_Type.__name__ = "Integer32"
_PasswordType_Object = MibTableColumn
passwordType = _PasswordType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3, 1, 2),
    _PasswordType_Type()
)
passwordType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    passwordType.setStatus("current")


class _EnablePassword_Type(OctetString):
    """Custom type enablePassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_EnablePassword_Type.__name__ = "OctetString"
_EnablePassword_Object = MibTableColumn
enablePassword = _EnablePassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3, 1, 3),
    _EnablePassword_Type()
)
enablePassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    enablePassword.setStatus("current")
_EnableRowStatus_Type = RowStatus
_EnableRowStatus_Object = MibTableColumn
enableRowStatus = _EnableRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 3, 1, 4),
    _EnableRowStatus_Type()
)
enableRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    enableRowStatus.setStatus("current")


class _ServiceTerminalLength_Type(Integer32):
    """Custom type serviceTerminalLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 512),
    )


_ServiceTerminalLength_Type.__name__ = "Integer32"
_ServiceTerminalLength_Object = MibScalar
serviceTerminalLength = _ServiceTerminalLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 4),
    _ServiceTerminalLength_Type()
)
serviceTerminalLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceTerminalLength.setStatus("current")


class _ServiceCipherDetect_Type(Integer32):
    """Custom type serviceCipherDetect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("normal", 2),
          ("strong", 3))
    )


_ServiceCipherDetect_Type.__name__ = "Integer32"
_ServiceCipherDetect_Object = MibScalar
serviceCipherDetect = _ServiceCipherDetect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 5),
    _ServiceCipherDetect_Type()
)
serviceCipherDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceCipherDetect.setStatus("current")
_UsersTable_Object = MibTable
usersTable = _UsersTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6)
)
if mibBuilder.loadTexts:
    usersTable.setStatus("current")
_UsersEntry_Object = MibTableRow
usersEntry = _UsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1)
)
usersEntry.setIndexNames(
    (0, "SWITCH", "usersLineType"),
    (0, "SWITCH", "usersLineIndex"),
)
if mibBuilder.loadTexts:
    usersEntry.setStatus("current")


class _UsersLineType_Type(Integer32):
    """Custom type usersLineType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UsersLineType_Type.__name__ = "Integer32"
_UsersLineType_Object = MibTableColumn
usersLineType = _UsersLineType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1, 1),
    _UsersLineType_Type()
)
usersLineType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    usersLineType.setStatus("current")


class _UsersLineIndex_Type(Integer32):
    """Custom type usersLineIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UsersLineIndex_Type.__name__ = "Integer32"
_UsersLineIndex_Object = MibTableColumn
usersLineIndex = _UsersLineIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1, 2),
    _UsersLineIndex_Type()
)
usersLineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    usersLineIndex.setStatus("current")


class _Usersname_Type(OctetString):
    """Custom type usersname based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_Usersname_Type.__name__ = "OctetString"
_Usersname_Object = MibTableColumn
usersname = _Usersname_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1, 3),
    _Usersname_Type()
)
usersname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usersname.setStatus("current")
_UsersIdleTime_Type = OctetString
_UsersIdleTime_Object = MibTableColumn
usersIdleTime = _UsersIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1, 4),
    _UsersIdleTime_Type()
)
usersIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usersIdleTime.setStatus("current")


class _UsersLocation_Type(OctetString):
    """Custom type usersLocation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_UsersLocation_Type.__name__ = "OctetString"
_UsersLocation_Object = MibTableColumn
usersLocation = _UsersLocation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 6, 1, 5),
    _UsersLocation_Type()
)
usersLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usersLocation.setStatus("current")


class _LineMaxVTY_Type(Integer32):
    """Custom type lineMaxVTY based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_LineMaxVTY_Type.__name__ = "Integer32"
_LineMaxVTY_Object = MibScalar
lineMaxVTY = _LineMaxVTY_Object(
    (1, 3, 6, 1, 4, 1, 27975, 30, 7),
    _LineMaxVTY_Type()
)
lineMaxVTY.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lineMaxVTY.setStatus("current")
_SnmpExt_ObjectIdentity = ObjectIdentity
snmpExt = _SnmpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 32)
)
_SnmpExtMibObject_ObjectIdentity = ObjectIdentity
snmpExtMibObject = _SnmpExtMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1)
)


class _SnmpVersion_Type(Integer32):
    """Custom type snmpVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("v1", 1),
          ("v2c", 2),
          ("v3", 3),
          ("all", 4))
    )


_SnmpVersion_Type.__name__ = "Integer32"
_SnmpVersion_Object = MibScalar
snmpVersion = _SnmpVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 1),
    _SnmpVersion_Type()
)
snmpVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpVersion.setStatus("current")


class _SnmpEngineID_Type(OctetString):
    """Custom type snmpEngineID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 64),
    )


_SnmpEngineID_Type.__name__ = "OctetString"
_SnmpEngineID_Object = MibScalar
snmpEngineID = _SnmpEngineID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 2),
    _SnmpEngineID_Type()
)
snmpEngineID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpEngineID.setStatus("current")
_SnmpCommunityTable_Object = MibTable
snmpCommunityTable = _SnmpCommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3)
)
if mibBuilder.loadTexts:
    snmpCommunityTable.setStatus("current")
_SnmpCommunityEntry_Object = MibTableRow
snmpCommunityEntry = _SnmpCommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1)
)
snmpCommunityEntry.setIndexNames(
    (0, "SWITCH", "snmpcommIndex"),
)
if mibBuilder.loadTexts:
    snmpCommunityEntry.setStatus("current")


class _SnmpcommIndex_Type(Integer32):
    """Custom type snmpcommIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpcommIndex_Type.__name__ = "Integer32"
_SnmpcommIndex_Object = MibTableColumn
snmpcommIndex = _SnmpcommIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1, 1),
    _SnmpcommIndex_Type()
)
snmpcommIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpcommIndex.setStatus("current")


class _SnmpcommName_Type(OctetString):
    """Custom type snmpcommName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_SnmpcommName_Type.__name__ = "OctetString"
_SnmpcommName_Object = MibTableColumn
snmpcommName = _SnmpcommName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1, 2),
    _SnmpcommName_Type()
)
snmpcommName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpcommName.setStatus("current")


class _SnmpcommType_Type(Integer32):
    """Custom type snmpcommType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SnmpcommType_Type.__name__ = "Integer32"
_SnmpcommType_Object = MibTableColumn
snmpcommType = _SnmpcommType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1, 3),
    _SnmpcommType_Type()
)
snmpcommType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpcommType.setStatus("current")


class _SnmpcommView_Type(OctetString):
    """Custom type snmpcommView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpcommView_Type.__name__ = "OctetString"
_SnmpcommView_Object = MibTableColumn
snmpcommView = _SnmpcommView_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1, 4),
    _SnmpcommView_Type()
)
snmpcommView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpcommView.setStatus("current")
_SnmpcommRowStatus_Type = RowStatus
_SnmpcommRowStatus_Object = MibTableColumn
snmpcommRowStatus = _SnmpcommRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 3, 1, 5),
    _SnmpcommRowStatus_Type()
)
snmpcommRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpcommRowStatus.setStatus("current")
_SnmpViewTable_Object = MibTable
snmpViewTable = _SnmpViewTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4)
)
if mibBuilder.loadTexts:
    snmpViewTable.setStatus("current")
_SnmpViewEntry_Object = MibTableRow
snmpViewEntry = _SnmpViewEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1)
)
snmpViewEntry.setIndexNames(
    (0, "SWITCH", "snmpviewIndex"),
)
if mibBuilder.loadTexts:
    snmpViewEntry.setStatus("current")


class _SnmpviewIndex_Type(Integer32):
    """Custom type snmpviewIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpviewIndex_Type.__name__ = "Integer32"
_SnmpviewIndex_Object = MibTableColumn
snmpviewIndex = _SnmpviewIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 1),
    _SnmpviewIndex_Type()
)
snmpviewIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpviewIndex.setStatus("current")


class _SnmpviewName_Type(OctetString):
    """Custom type snmpviewName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpviewName_Type.__name__ = "OctetString"
_SnmpviewName_Object = MibTableColumn
snmpviewName = _SnmpviewName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 2),
    _SnmpviewName_Type()
)
snmpviewName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpviewName.setStatus("current")


class _SnmpviewType_Type(Integer32):
    """Custom type snmpviewType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_SnmpviewType_Type.__name__ = "Integer32"
_SnmpviewType_Object = MibTableColumn
snmpviewType = _SnmpviewType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 3),
    _SnmpviewType_Type()
)
snmpviewType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpviewType.setStatus("current")


class _SnmpviewcldOID_Type(OctetString):
    """Custom type snmpviewcldOID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 60),
    )


_SnmpviewcldOID_Type.__name__ = "OctetString"
_SnmpviewcldOID_Object = MibTableColumn
snmpviewcldOID = _SnmpviewcldOID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 4),
    _SnmpviewcldOID_Type()
)
snmpviewcldOID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpviewcldOID.setStatus("current")


class _SnmpviewMask_Type(OctetString):
    """Custom type snmpviewMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_SnmpviewMask_Type.__name__ = "OctetString"
_SnmpviewMask_Object = MibTableColumn
snmpviewMask = _SnmpviewMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 5),
    _SnmpviewMask_Type()
)
snmpviewMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpviewMask.setStatus("current")
_SnmpviewRowStatus_Type = RowStatus
_SnmpviewRowStatus_Object = MibTableColumn
snmpviewRowStatus = _SnmpviewRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 4, 1, 6),
    _SnmpviewRowStatus_Type()
)
snmpviewRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpviewRowStatus.setStatus("current")
_SnmpUsmuserTable_Object = MibTable
snmpUsmuserTable = _SnmpUsmuserTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5)
)
if mibBuilder.loadTexts:
    snmpUsmuserTable.setStatus("current")
_SnmpUsmuserEntry_Object = MibTableRow
snmpUsmuserEntry = _SnmpUsmuserEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1)
)
snmpUsmuserEntry.setIndexNames(
    (0, "SWITCH", "snmpUsmuserIndex"),
)
if mibBuilder.loadTexts:
    snmpUsmuserEntry.setStatus("current")


class _SnmpUsmuserIndex_Type(Integer32):
    """Custom type snmpUsmuserIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpUsmuserIndex_Type.__name__ = "Integer32"
_SnmpUsmuserIndex_Object = MibTableColumn
snmpUsmuserIndex = _SnmpUsmuserIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 1),
    _SnmpUsmuserIndex_Type()
)
snmpUsmuserIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpUsmuserIndex.setStatus("current")


class _SnmpUsmuserName_Type(OctetString):
    """Custom type snmpUsmuserName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpUsmuserName_Type.__name__ = "OctetString"
_SnmpUsmuserName_Object = MibTableColumn
snmpUsmuserName = _SnmpUsmuserName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 2),
    _SnmpUsmuserName_Type()
)
snmpUsmuserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserName.setStatus("current")


class _SnmpUsmuserRemote_Type(OctetString):
    """Custom type snmpUsmuserRemote based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 64),
    )


_SnmpUsmuserRemote_Type.__name__ = "OctetString"
_SnmpUsmuserRemote_Object = MibTableColumn
snmpUsmuserRemote = _SnmpUsmuserRemote_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 3),
    _SnmpUsmuserRemote_Type()
)
snmpUsmuserRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserRemote.setStatus("current")


class _SnmpUsmuserAuth_Type(Integer32):
    """Custom type snmpUsmuserAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("md5", 2),
          ("sha", 3))
    )


_SnmpUsmuserAuth_Type.__name__ = "Integer32"
_SnmpUsmuserAuth_Object = MibTableColumn
snmpUsmuserAuth = _SnmpUsmuserAuth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 4),
    _SnmpUsmuserAuth_Type()
)
snmpUsmuserAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserAuth.setStatus("current")


class _SnmpUsmuserAuthHid_Type(Integer32):
    """Custom type snmpUsmuserAuthHid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unhidden", 1),
          ("hidden", 2))
    )


_SnmpUsmuserAuthHid_Type.__name__ = "Integer32"
_SnmpUsmuserAuthHid_Object = MibTableColumn
snmpUsmuserAuthHid = _SnmpUsmuserAuthHid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 5),
    _SnmpUsmuserAuthHid_Type()
)
snmpUsmuserAuthHid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserAuthHid.setStatus("current")


class _SnmpUsmuserAuthPWD_Type(OctetString):
    """Custom type snmpUsmuserAuthPWD based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_SnmpUsmuserAuthPWD_Type.__name__ = "OctetString"
_SnmpUsmuserAuthPWD_Object = MibTableColumn
snmpUsmuserAuthPWD = _SnmpUsmuserAuthPWD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 6),
    _SnmpUsmuserAuthPWD_Type()
)
snmpUsmuserAuthPWD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserAuthPWD.setStatus("current")


class _SnmpUsmuserPrivacy_Type(Integer32):
    """Custom type snmpUsmuserPrivacy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("des", 2),
          ("aes", 3))
    )


_SnmpUsmuserPrivacy_Type.__name__ = "Integer32"
_SnmpUsmuserPrivacy_Object = MibTableColumn
snmpUsmuserPrivacy = _SnmpUsmuserPrivacy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 7),
    _SnmpUsmuserPrivacy_Type()
)
snmpUsmuserPrivacy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserPrivacy.setStatus("current")


class _SnmpUsmuserPrivacyHid_Type(Integer32):
    """Custom type snmpUsmuserPrivacyHid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unhidden", 1),
          ("hidden", 2))
    )


_SnmpUsmuserPrivacyHid_Type.__name__ = "Integer32"
_SnmpUsmuserPrivacyHid_Object = MibTableColumn
snmpUsmuserPrivacyHid = _SnmpUsmuserPrivacyHid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 8),
    _SnmpUsmuserPrivacyHid_Type()
)
snmpUsmuserPrivacyHid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserPrivacyHid.setStatus("current")


class _SnmpUsmuserPrivacyPWD_Type(OctetString):
    """Custom type snmpUsmuserPrivacyPWD based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 64),
    )


_SnmpUsmuserPrivacyPWD_Type.__name__ = "OctetString"
_SnmpUsmuserPrivacyPWD_Object = MibTableColumn
snmpUsmuserPrivacyPWD = _SnmpUsmuserPrivacyPWD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 9),
    _SnmpUsmuserPrivacyPWD_Type()
)
snmpUsmuserPrivacyPWD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserPrivacyPWD.setStatus("current")
_SnmpUsmuserRowStatus_Type = RowStatus
_SnmpUsmuserRowStatus_Object = MibTableColumn
snmpUsmuserRowStatus = _SnmpUsmuserRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 5, 1, 10),
    _SnmpUsmuserRowStatus_Type()
)
snmpUsmuserRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpUsmuserRowStatus.setStatus("current")
_SnmpGrpTable_Object = MibTable
snmpGrpTable = _SnmpGrpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6)
)
if mibBuilder.loadTexts:
    snmpGrpTable.setStatus("current")
_SnmpGrpEntry_Object = MibTableRow
snmpGrpEntry = _SnmpGrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1)
)
snmpGrpEntry.setIndexNames(
    (0, "SWITCH", "snmpGrpIndex"),
)
if mibBuilder.loadTexts:
    snmpGrpEntry.setStatus("current")


class _SnmpGrpIndex_Type(Integer32):
    """Custom type snmpGrpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpGrpIndex_Type.__name__ = "Integer32"
_SnmpGrpIndex_Object = MibTableColumn
snmpGrpIndex = _SnmpGrpIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1, 1),
    _SnmpGrpIndex_Type()
)
snmpGrpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpGrpIndex.setStatus("current")


class _SnmpGrpName_Type(OctetString):
    """Custom type snmpGrpName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpGrpName_Type.__name__ = "OctetString"
_SnmpGrpName_Object = MibTableColumn
snmpGrpName = _SnmpGrpName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1, 2),
    _SnmpGrpName_Type()
)
snmpGrpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpGrpName.setStatus("current")


class _SnmpGrpUser_Type(OctetString):
    """Custom type snmpGrpUser based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpGrpUser_Type.__name__ = "OctetString"
_SnmpGrpUser_Object = MibTableColumn
snmpGrpUser = _SnmpGrpUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1, 3),
    _SnmpGrpUser_Type()
)
snmpGrpUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpGrpUser.setStatus("current")


class _SnmpGrpSecMode_Type(Integer32):
    """Custom type snmpGrpSecMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("v1", 1),
          ("v2c", 2),
          ("usm", 3))
    )


_SnmpGrpSecMode_Type.__name__ = "Integer32"
_SnmpGrpSecMode_Object = MibTableColumn
snmpGrpSecMode = _SnmpGrpSecMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1, 4),
    _SnmpGrpSecMode_Type()
)
snmpGrpSecMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpGrpSecMode.setStatus("current")
_SnmpGrpRowStatus_Type = RowStatus
_SnmpGrpRowStatus_Object = MibTableColumn
snmpGrpRowStatus = _SnmpGrpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 6, 1, 10),
    _SnmpGrpRowStatus_Type()
)
snmpGrpRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpGrpRowStatus.setStatus("current")
_SnmpAccessTable_Object = MibTable
snmpAccessTable = _SnmpAccessTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7)
)
if mibBuilder.loadTexts:
    snmpAccessTable.setStatus("current")
_SnmpAccessEntry_Object = MibTableRow
snmpAccessEntry = _SnmpAccessEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1)
)
snmpAccessEntry.setIndexNames(
    (0, "SWITCH", "snmpAccessIndex"),
)
if mibBuilder.loadTexts:
    snmpAccessEntry.setStatus("current")


class _SnmpAccessIndex_Type(Integer32):
    """Custom type snmpAccessIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_SnmpAccessIndex_Type.__name__ = "Integer32"
_SnmpAccessIndex_Object = MibTableColumn
snmpAccessIndex = _SnmpAccessIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 1),
    _SnmpAccessIndex_Type()
)
snmpAccessIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpAccessIndex.setStatus("current")


class _SnmpAccessName_Type(OctetString):
    """Custom type snmpAccessName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpAccessName_Type.__name__ = "OctetString"
_SnmpAccessName_Object = MibTableColumn
snmpAccessName = _SnmpAccessName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 2),
    _SnmpAccessName_Type()
)
snmpAccessName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessName.setStatus("current")


class _SnmpAccessUsm_Type(Integer32):
    """Custom type snmpAccessUsm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noauth", 1),
          ("auth", 2),
          ("priv", 3))
    )


_SnmpAccessUsm_Type.__name__ = "Integer32"
_SnmpAccessUsm_Object = MibTableColumn
snmpAccessUsm = _SnmpAccessUsm_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 3),
    _SnmpAccessUsm_Type()
)
snmpAccessUsm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessUsm.setStatus("current")


class _SnmpAccessRead_Type(OctetString):
    """Custom type snmpAccessRead based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SnmpAccessRead_Type.__name__ = "OctetString"
_SnmpAccessRead_Object = MibTableColumn
snmpAccessRead = _SnmpAccessRead_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 4),
    _SnmpAccessRead_Type()
)
snmpAccessRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessRead.setStatus("current")


class _SnmpAccessWrite_Type(OctetString):
    """Custom type snmpAccessWrite based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SnmpAccessWrite_Type.__name__ = "OctetString"
_SnmpAccessWrite_Object = MibTableColumn
snmpAccessWrite = _SnmpAccessWrite_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 5),
    _SnmpAccessWrite_Type()
)
snmpAccessWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessWrite.setStatus("current")


class _SnmpAccessNotify_Type(OctetString):
    """Custom type snmpAccessNotify based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SnmpAccessNotify_Type.__name__ = "OctetString"
_SnmpAccessNotify_Object = MibTableColumn
snmpAccessNotify = _SnmpAccessNotify_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 6),
    _SnmpAccessNotify_Type()
)
snmpAccessNotify.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessNotify.setStatus("current")


class _SnmpAccessContext_Type(OctetString):
    """Custom type snmpAccessContext based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SnmpAccessContext_Type.__name__ = "OctetString"
_SnmpAccessContext_Object = MibTableColumn
snmpAccessContext = _SnmpAccessContext_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 7),
    _SnmpAccessContext_Type()
)
snmpAccessContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessContext.setStatus("current")


class _SnmpAccessContextType_Type(Integer32):
    """Custom type snmpAccessContextType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("exact", 2),
          ("prefix", 3))
    )


_SnmpAccessContextType_Type.__name__ = "Integer32"
_SnmpAccessContextType_Object = MibTableColumn
snmpAccessContextType = _SnmpAccessContextType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 8),
    _SnmpAccessContextType_Type()
)
snmpAccessContextType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessContextType.setStatus("current")


class _SnmpAccessSecuMode_Type(Integer32):
    """Custom type snmpAccessSecuMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("v1", 1),
          ("v2c", 2),
          ("usm", 3))
    )


_SnmpAccessSecuMode_Type.__name__ = "Integer32"
_SnmpAccessSecuMode_Object = MibTableColumn
snmpAccessSecuMode = _SnmpAccessSecuMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 9),
    _SnmpAccessSecuMode_Type()
)
snmpAccessSecuMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessSecuMode.setStatus("current")
_SnmpAccessRowStatus_Type = RowStatus
_SnmpAccessRowStatus_Object = MibTableColumn
snmpAccessRowStatus = _SnmpAccessRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 7, 1, 10),
    _SnmpAccessRowStatus_Type()
)
snmpAccessRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessRowStatus.setStatus("current")
_SnmpNotifyTable_Object = MibTable
snmpNotifyTable = _SnmpNotifyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8)
)
if mibBuilder.loadTexts:
    snmpNotifyTable.setStatus("current")
_SnmpNotifyEntry_Object = MibTableRow
snmpNotifyEntry = _SnmpNotifyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1)
)
snmpNotifyEntry.setIndexNames(
    (0, "SWITCH", "snmpNotifyIndex"),
)
if mibBuilder.loadTexts:
    snmpNotifyEntry.setStatus("current")


class _SnmpNotifyIndex_Type(Integer32):
    """Custom type snmpNotifyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpNotifyIndex_Type.__name__ = "Integer32"
_SnmpNotifyIndex_Object = MibTableColumn
snmpNotifyIndex = _SnmpNotifyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1, 1),
    _SnmpNotifyIndex_Type()
)
snmpNotifyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpNotifyIndex.setStatus("current")


class _SnmpNotifyName_Type(OctetString):
    """Custom type snmpNotifyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpNotifyName_Type.__name__ = "OctetString"
_SnmpNotifyName_Object = MibTableColumn
snmpNotifyName = _SnmpNotifyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1, 2),
    _SnmpNotifyName_Type()
)
snmpNotifyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpNotifyName.setStatus("current")


class _SnmpNotifyTag_Type(OctetString):
    """Custom type snmpNotifyTag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_SnmpNotifyTag_Type.__name__ = "OctetString"
_SnmpNotifyTag_Object = MibTableColumn
snmpNotifyTag = _SnmpNotifyTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1, 3),
    _SnmpNotifyTag_Type()
)
snmpNotifyTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpNotifyTag.setStatus("current")


class _SnmpNotifyOption_Type(Integer32):
    """Custom type snmpNotifyOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trap", 1),
          ("inform", 2))
    )


_SnmpNotifyOption_Type.__name__ = "Integer32"
_SnmpNotifyOption_Object = MibTableColumn
snmpNotifyOption = _SnmpNotifyOption_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1, 4),
    _SnmpNotifyOption_Type()
)
snmpNotifyOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpNotifyOption.setStatus("current")
_SnmpNotifyRowStatus_Type = RowStatus
_SnmpNotifyRowStatus_Object = MibTableColumn
snmpNotifyRowStatus = _SnmpNotifyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 8, 1, 5),
    _SnmpNotifyRowStatus_Type()
)
snmpNotifyRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpNotifyRowStatus.setStatus("current")
_SnmpTargetAddrTable_Object = MibTable
snmpTargetAddrTable = _SnmpTargetAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9)
)
if mibBuilder.loadTexts:
    snmpTargetAddrTable.setStatus("current")
_SnmpTargetAddrEntry_Object = MibTableRow
snmpTargetAddrEntry = _SnmpTargetAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1)
)
snmpTargetAddrEntry.setIndexNames(
    (0, "SWITCH", "snmpTargetAddrIndex"),
)
if mibBuilder.loadTexts:
    snmpTargetAddrEntry.setStatus("current")


class _SnmpTargetAddrIndex_Type(Integer32):
    """Custom type snmpTargetAddrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpTargetAddrIndex_Type.__name__ = "Integer32"
_SnmpTargetAddrIndex_Object = MibTableColumn
snmpTargetAddrIndex = _SnmpTargetAddrIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 1),
    _SnmpTargetAddrIndex_Type()
)
snmpTargetAddrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpTargetAddrIndex.setStatus("current")


class _SnmpTargetAddrName_Type(OctetString):
    """Custom type snmpTargetAddrName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpTargetAddrName_Type.__name__ = "OctetString"
_SnmpTargetAddrName_Object = MibTableColumn
snmpTargetAddrName = _SnmpTargetAddrName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 2),
    _SnmpTargetAddrName_Type()
)
snmpTargetAddrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrName.setStatus("current")


class _SnmpTargetAddrPara_Type(OctetString):
    """Custom type snmpTargetAddrPara based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 60),
    )


_SnmpTargetAddrPara_Type.__name__ = "OctetString"
_SnmpTargetAddrPara_Object = MibTableColumn
snmpTargetAddrPara = _SnmpTargetAddrPara_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 3),
    _SnmpTargetAddrPara_Type()
)
snmpTargetAddrPara.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrPara.setStatus("current")


class _SnmpTargetAddrMgmtIf_Type(Integer32):
    """Custom type snmpTargetAddrMgmtIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 1),
          ("setMgmtIf", 2))
    )


_SnmpTargetAddrMgmtIf_Type.__name__ = "Integer32"
_SnmpTargetAddrMgmtIf_Object = MibTableColumn
snmpTargetAddrMgmtIf = _SnmpTargetAddrMgmtIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 4),
    _SnmpTargetAddrMgmtIf_Type()
)
snmpTargetAddrMgmtIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrMgmtIf.setStatus("current")
_SnmpTargetAddrIpType_Type = InetAddressType
_SnmpTargetAddrIpType_Object = MibTableColumn
snmpTargetAddrIpType = _SnmpTargetAddrIpType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 5),
    _SnmpTargetAddrIpType_Type()
)
snmpTargetAddrIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrIpType.setStatus("current")
_SnmpTargetAddrIp_Type = InetAddress
_SnmpTargetAddrIp_Object = MibTableColumn
snmpTargetAddrIp = _SnmpTargetAddrIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 6),
    _SnmpTargetAddrIp_Type()
)
snmpTargetAddrIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrIp.setStatus("current")


class _SnmpTargetAddrPort_Type(Integer32):
    """Custom type snmpTargetAddrPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpTargetAddrPort_Type.__name__ = "Integer32"
_SnmpTargetAddrPort_Object = MibTableColumn
snmpTargetAddrPort = _SnmpTargetAddrPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 7),
    _SnmpTargetAddrPort_Type()
)
snmpTargetAddrPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrPort.setStatus("current")


class _SnmpTargetAddrTimeout_Type(Integer32):
    """Custom type snmpTargetAddrTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpTargetAddrTimeout_Type.__name__ = "Integer32"
_SnmpTargetAddrTimeout_Object = MibTableColumn
snmpTargetAddrTimeout = _SnmpTargetAddrTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 8),
    _SnmpTargetAddrTimeout_Type()
)
snmpTargetAddrTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrTimeout.setStatus("current")


class _SnmpTargetAddrRetry_Type(Integer32):
    """Custom type snmpTargetAddrRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SnmpTargetAddrRetry_Type.__name__ = "Integer32"
_SnmpTargetAddrRetry_Object = MibTableColumn
snmpTargetAddrRetry = _SnmpTargetAddrRetry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 9),
    _SnmpTargetAddrRetry_Type()
)
snmpTargetAddrRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrRetry.setStatus("current")


class _SnmpTargetAddrTag_Type(OctetString):
    """Custom type snmpTargetAddrTag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_SnmpTargetAddrTag_Type.__name__ = "OctetString"
_SnmpTargetAddrTag_Object = MibTableColumn
snmpTargetAddrTag = _SnmpTargetAddrTag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 10),
    _SnmpTargetAddrTag_Type()
)
snmpTargetAddrTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrTag.setStatus("current")
_SnmpTargetAddrRowStatus_Type = RowStatus
_SnmpTargetAddrRowStatus_Object = MibTableColumn
snmpTargetAddrRowStatus = _SnmpTargetAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 9, 1, 11),
    _SnmpTargetAddrRowStatus_Type()
)
snmpTargetAddrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetAddrRowStatus.setStatus("current")
_SnmpTargetParaTable_Object = MibTable
snmpTargetParaTable = _SnmpTargetParaTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10)
)
if mibBuilder.loadTexts:
    snmpTargetParaTable.setStatus("current")
_SnmpTargetParaEntry_Object = MibTableRow
snmpTargetParaEntry = _SnmpTargetParaEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1)
)
snmpTargetParaEntry.setIndexNames(
    (0, "SWITCH", "snmpTargetParaIndex"),
)
if mibBuilder.loadTexts:
    snmpTargetParaEntry.setStatus("current")


class _SnmpTargetParaIndex_Type(Integer32):
    """Custom type snmpTargetParaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SnmpTargetParaIndex_Type.__name__ = "Integer32"
_SnmpTargetParaIndex_Object = MibTableColumn
snmpTargetParaIndex = _SnmpTargetParaIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1, 1),
    _SnmpTargetParaIndex_Type()
)
snmpTargetParaIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpTargetParaIndex.setStatus("current")


class _SnmpTargetParaName_Type(OctetString):
    """Custom type snmpTargetParaName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SnmpTargetParaName_Type.__name__ = "OctetString"
_SnmpTargetParaName_Object = MibTableColumn
snmpTargetParaName = _SnmpTargetParaName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1, 2),
    _SnmpTargetParaName_Type()
)
snmpTargetParaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetParaName.setStatus("current")


class _SnmpTargetParaUser_Type(OctetString):
    """Custom type snmpTargetParaUser based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 60),
    )


_SnmpTargetParaUser_Type.__name__ = "OctetString"
_SnmpTargetParaUser_Object = MibTableColumn
snmpTargetParaUser = _SnmpTargetParaUser_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1, 3),
    _SnmpTargetParaUser_Type()
)
snmpTargetParaUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetParaUser.setStatus("current")


class _SnmpTargetParaSecLvl_Type(Integer32):
    """Custom type snmpTargetParaSecLvl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noauth", 1),
          ("auth", 2),
          ("priv", 3))
    )


_SnmpTargetParaSecLvl_Type.__name__ = "Integer32"
_SnmpTargetParaSecLvl_Object = MibTableColumn
snmpTargetParaSecLvl = _SnmpTargetParaSecLvl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1, 4),
    _SnmpTargetParaSecLvl_Type()
)
snmpTargetParaSecLvl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetParaSecLvl.setStatus("current")
_SnmpTargetParaRowStatus_Type = RowStatus
_SnmpTargetParaRowStatus_Object = MibTableColumn
snmpTargetParaRowStatus = _SnmpTargetParaRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 10, 1, 5),
    _SnmpTargetParaRowStatus_Type()
)
snmpTargetParaRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTargetParaRowStatus.setStatus("current")
_SnmpTrapAddrTable_Object = MibTable
snmpTrapAddrTable = _SnmpTrapAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11)
)
if mibBuilder.loadTexts:
    snmpTrapAddrTable.setStatus("current")
_SnmpTrapAddrEntry_Object = MibTableRow
snmpTrapAddrEntry = _SnmpTrapAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1)
)
snmpTrapAddrEntry.setIndexNames(
    (0, "SWITCH", "snmpTrapIndex"),
)
if mibBuilder.loadTexts:
    snmpTrapAddrEntry.setStatus("current")


class _SnmpTrapIndex_Type(Integer32):
    """Custom type snmpTrapIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 95),
    )


_SnmpTrapIndex_Type.__name__ = "Integer32"
_SnmpTrapIndex_Object = MibTableColumn
snmpTrapIndex = _SnmpTrapIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 1),
    _SnmpTrapIndex_Type()
)
snmpTrapIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpTrapIndex.setStatus("current")


class _SnmpTrapType_Type(Integer32):
    """Custom type snmpTrapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SnmpTrapType_Type.__name__ = "Integer32"
_SnmpTrapType_Object = MibTableColumn
snmpTrapType = _SnmpTrapType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 2),
    _SnmpTrapType_Type()
)
snmpTrapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapType.setStatus("current")


class _SnmpTrapMgmtIf_Type(Integer32):
    """Custom type snmpTrapMgmtIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 1),
          ("setMgmtIf", 2))
    )


_SnmpTrapMgmtIf_Type.__name__ = "Integer32"
_SnmpTrapMgmtIf_Object = MibTableColumn
snmpTrapMgmtIf = _SnmpTrapMgmtIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 3),
    _SnmpTrapMgmtIf_Type()
)
snmpTrapMgmtIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapMgmtIf.setStatus("current")
_SnmpTrapAddrIptype_Type = InetAddressType
_SnmpTrapAddrIptype_Object = MibTableColumn
snmpTrapAddrIptype = _SnmpTrapAddrIptype_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 4),
    _SnmpTrapAddrIptype_Type()
)
snmpTrapAddrIptype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrIptype.setStatus("current")
_SnmpTrapAddrIpAddr_Type = InetAddress
_SnmpTrapAddrIpAddr_Object = MibTableColumn
snmpTrapAddrIpAddr = _SnmpTrapAddrIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 5),
    _SnmpTrapAddrIpAddr_Type()
)
snmpTrapAddrIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrIpAddr.setStatus("current")


class _SnmpTrapAddrCommunity_Type(OctetString):
    """Custom type snmpTrapAddrCommunity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_SnmpTrapAddrCommunity_Type.__name__ = "OctetString"
_SnmpTrapAddrCommunity_Object = MibTableColumn
snmpTrapAddrCommunity = _SnmpTrapAddrCommunity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 6),
    _SnmpTrapAddrCommunity_Type()
)
snmpTrapAddrCommunity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrCommunity.setStatus("current")


class _SnmpTrapAddrVersion_Type(OctetString):
    """Custom type snmpTrapAddrVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 60),
    )


_SnmpTrapAddrVersion_Type.__name__ = "OctetString"
_SnmpTrapAddrVersion_Object = MibTableColumn
snmpTrapAddrVersion = _SnmpTrapAddrVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 7),
    _SnmpTrapAddrVersion_Type()
)
snmpTrapAddrVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrVersion.setStatus("current")


class _SnmpTrapAddrPort_Type(Integer32):
    """Custom type snmpTrapAddrPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpTrapAddrPort_Type.__name__ = "Integer32"
_SnmpTrapAddrPort_Object = MibTableColumn
snmpTrapAddrPort = _SnmpTrapAddrPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 8),
    _SnmpTrapAddrPort_Type()
)
snmpTrapAddrPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrPort.setStatus("current")
_SnmpTrapAddrRowStatus_Type = RowStatus
_SnmpTrapAddrRowStatus_Object = MibTableColumn
snmpTrapAddrRowStatus = _SnmpTrapAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 11, 1, 9),
    _SnmpTrapAddrRowStatus_Type()
)
snmpTrapAddrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAddrRowStatus.setStatus("current")
_SnmpEnableTable_ObjectIdentity = ObjectIdentity
snmpEnableTable = _SnmpEnableTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12)
)


class _SnmpTrapColdstart_Type(Integer32):
    """Custom type snmpTrapColdstart based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapColdstart_Type.__name__ = "Integer32"
_SnmpTrapColdstart_Object = MibScalar
snmpTrapColdstart = _SnmpTrapColdstart_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 1),
    _SnmpTrapColdstart_Type()
)
snmpTrapColdstart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapColdstart.setStatus("current")


class _SnmpTrapWarmstart_Type(Integer32):
    """Custom type snmpTrapWarmstart based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapWarmstart_Type.__name__ = "Integer32"
_SnmpTrapWarmstart_Object = MibScalar
snmpTrapWarmstart = _SnmpTrapWarmstart_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 2),
    _SnmpTrapWarmstart_Type()
)
snmpTrapWarmstart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapWarmstart.setStatus("current")


class _SnmpTrapLinkdown_Type(Integer32):
    """Custom type snmpTrapLinkdown based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapLinkdown_Type.__name__ = "Integer32"
_SnmpTrapLinkdown_Object = MibScalar
snmpTrapLinkdown = _SnmpTrapLinkdown_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 3),
    _SnmpTrapLinkdown_Type()
)
snmpTrapLinkdown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapLinkdown.setStatus("current")


class _SnmpTrapLinkup_Type(Integer32):
    """Custom type snmpTrapLinkup based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapLinkup_Type.__name__ = "Integer32"
_SnmpTrapLinkup_Object = MibScalar
snmpTrapLinkup = _SnmpTrapLinkup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 4),
    _SnmpTrapLinkup_Type()
)
snmpTrapLinkup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapLinkup.setStatus("current")


class _SnmpTrapAll_Type(Integer32):
    """Custom type snmpTrapAll based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapAll_Type.__name__ = "Integer32"
_SnmpTrapAll_Object = MibScalar
snmpTrapAll = _SnmpTrapAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 5),
    _SnmpTrapAll_Type()
)
snmpTrapAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapAll.setStatus("obsolete")


class _SnmpTrapGeneralEvents_Type(Integer32):
    """Custom type snmpTrapGeneralEvents based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SnmpTrapGeneralEvents_Type.__name__ = "Integer32"
_SnmpTrapGeneralEvents_Object = MibScalar
snmpTrapGeneralEvents = _SnmpTrapGeneralEvents_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 12, 6),
    _SnmpTrapGeneralEvents_Type()
)
snmpTrapGeneralEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpTrapGeneralEvents.setStatus("obsolete")


class _SnmpLock_Type(Integer32):
    """Custom type snmpLock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lock", 1),
          ("unlocked", 2))
    )


_SnmpLock_Type.__name__ = "Integer32"
_SnmpLock_Object = MibScalar
snmpLock = _SnmpLock_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 13),
    _SnmpLock_Type()
)
snmpLock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpLock.setStatus("current")


class _SnmpAccessGroup_Type(OctetString):
    """Custom type snmpAccessGroup based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SnmpAccessGroup_Type.__name__ = "OctetString"
_SnmpAccessGroup_Object = MibScalar
snmpAccessGroup = _SnmpAccessGroup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 14),
    _SnmpAccessGroup_Type()
)
snmpAccessGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAccessGroup.setStatus("current")


class _SnmpSysContact_Type(OctetString):
    """Custom type snmpSysContact based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpSysContact_Type.__name__ = "OctetString"
_SnmpSysContact_Object = MibScalar
snmpSysContact = _SnmpSysContact_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 15),
    _SnmpSysContact_Type()
)
snmpSysContact.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpSysContact.setStatus("current")


class _SnmpSysLocation_Type(OctetString):
    """Custom type snmpSysLocation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SnmpSysLocation_Type.__name__ = "OctetString"
_SnmpSysLocation_Object = MibScalar
snmpSysLocation = _SnmpSysLocation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 16),
    _SnmpSysLocation_Type()
)
snmpSysLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpSysLocation.setStatus("current")


class _SnmpInformReties_Type(Integer32):
    """Custom type snmpInformReties based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SnmpInformReties_Type.__name__ = "Integer32"
_SnmpInformReties_Object = MibScalar
snmpInformReties = _SnmpInformReties_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 18),
    _SnmpInformReties_Type()
)
snmpInformReties.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInformReties.setStatus("current")


class _SnmpInformTimeout_Type(Integer32):
    """Custom type snmpInformTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_SnmpInformTimeout_Type.__name__ = "Integer32"
_SnmpInformTimeout_Object = MibScalar
snmpInformTimeout = _SnmpInformTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 32, 1, 19),
    _SnmpInformTimeout_Type()
)
snmpInformTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInformTimeout.setStatus("current")
_Stm_ObjectIdentity = ObjectIdentity
stm = _Stm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 33)
)
_StmMibObject_ObjectIdentity = ObjectIdentity
stmMibObject = _StmMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1)
)


class _StmCurrentType_Type(Integer32):
    """Custom type stmCurrentType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("ipv4", 1),
          ("vlan", 2),
          ("ipv6", 3))
    )


_StmCurrentType_Type.__name__ = "Integer32"
_StmCurrentType_Object = MibScalar
stmCurrentType = _StmCurrentType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 1),
    _StmCurrentType_Type()
)
stmCurrentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmCurrentType.setStatus("current")


class _StmNextType_Type(Integer32):
    """Custom type stmNextType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("ipv4", 1),
          ("vlan", 2),
          ("ipv6", 3))
    )


_StmNextType_Type.__name__ = "Integer32"
_StmNextType_Object = MibScalar
stmNextType = _StmNextType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 2),
    _StmNextType_Type()
)
stmNextType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stmNextType.setStatus("current")
_StmShowTable_Object = MibTable
stmShowTable = _StmShowTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3)
)
if mibBuilder.loadTexts:
    stmShowTable.setStatus("current")
_StmShowEntry_Object = MibTableRow
stmShowEntry = _StmShowEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1)
)
stmShowEntry.setIndexNames(
    (0, "SWITCH", "stmShowProfileType"),
)
if mibBuilder.loadTexts:
    stmShowEntry.setStatus("current")


class _StmShowProfileType_Type(Integer32):
    """Custom type stmShowProfileType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("access", 2),
          ("ipucv4", 3),
          ("vlan", 4),
          ("l2vpn", 5),
          ("route", 6),
          ("v4acl", 7),
          ("v6acl", 8),
          ("ipucv6", 9))
    )


_StmShowProfileType_Type.__name__ = "Integer32"
_StmShowProfileType_Object = MibTableColumn
stmShowProfileType = _StmShowProfileType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 1),
    _StmShowProfileType_Type()
)
stmShowProfileType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowProfileType.setStatus("current")


class _StmShowVlanNumber_Type(Integer32):
    """Custom type stmShowVlanNumber based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_StmShowVlanNumber_Type.__name__ = "Integer32"
_StmShowVlanNumber_Object = MibTableColumn
stmShowVlanNumber = _StmShowVlanNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 2),
    _StmShowVlanNumber_Type()
)
stmShowVlanNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVlanNumber.setStatus("current")


class _StmShowVlanForwardingInstances_Type(Integer32):
    """Custom type stmShowVlanForwardingInstances based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVlanForwardingInstances_Type.__name__ = "Integer32"
_StmShowVlanForwardingInstances_Object = MibTableColumn
stmShowVlanForwardingInstances = _StmShowVlanForwardingInstances_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 3),
    _StmShowVlanForwardingInstances_Type()
)
stmShowVlanForwardingInstances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVlanForwardingInstances.setStatus("current")


class _StmShowUcastMacAddresses_Type(Integer32):
    """Custom type stmShowUcastMacAddresses based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowUcastMacAddresses_Type.__name__ = "Integer32"
_StmShowUcastMacAddresses_Object = MibTableColumn
stmShowUcastMacAddresses = _StmShowUcastMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 4),
    _StmShowUcastMacAddresses_Type()
)
stmShowUcastMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowUcastMacAddresses.setStatus("current")


class _StmShowMcastMacAddresses_Type(Integer32):
    """Custom type stmShowMcastMacAddresses based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowMcastMacAddresses_Type.__name__ = "Integer32"
_StmShowMcastMacAddresses_Object = MibTableColumn
stmShowMcastMacAddresses = _StmShowMcastMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 5),
    _StmShowMcastMacAddresses_Type()
)
stmShowMcastMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowMcastMacAddresses.setStatus("current")


class _StmShowBlackholeMacAddresses_Type(Integer32):
    """Custom type stmShowBlackholeMacAddresses based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowBlackholeMacAddresses_Type.__name__ = "Integer32"
_StmShowBlackholeMacAddresses_Object = MibTableColumn
stmShowBlackholeMacAddresses = _StmShowBlackholeMacAddresses_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 6),
    _StmShowBlackholeMacAddresses_Type()
)
stmShowBlackholeMacAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowBlackholeMacAddresses.setStatus("current")


class _StmShowMaxAppliedVlanMapping_Type(Integer32):
    """Custom type stmShowMaxAppliedVlanMapping based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowMaxAppliedVlanMapping_Type.__name__ = "Integer32"
_StmShowMaxAppliedVlanMapping_Object = MibTableColumn
stmShowMaxAppliedVlanMapping = _StmShowMaxAppliedVlanMapping_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 7),
    _StmShowMaxAppliedVlanMapping_Type()
)
stmShowMaxAppliedVlanMapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowMaxAppliedVlanMapping.setStatus("current")


class _StmShowCfmLocalAndRemoteMeps_Type(Integer32):
    """Custom type stmShowCfmLocalAndRemoteMeps based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowCfmLocalAndRemoteMeps_Type.__name__ = "Integer32"
_StmShowCfmLocalAndRemoteMeps_Object = MibTableColumn
stmShowCfmLocalAndRemoteMeps = _StmShowCfmLocalAndRemoteMeps_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 8),
    _StmShowCfmLocalAndRemoteMeps_Type()
)
stmShowCfmLocalAndRemoteMeps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowCfmLocalAndRemoteMeps.setStatus("current")


class _StmShowG8031Groups_Type(Integer32):
    """Custom type stmShowG8031Groups based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowG8031Groups_Type.__name__ = "Integer32"
_StmShowG8031Groups_Object = MibTableColumn
stmShowG8031Groups = _StmShowG8031Groups_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 9),
    _StmShowG8031Groups_Type()
)
stmShowG8031Groups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowG8031Groups.setStatus("current")


class _StmShowG8032Rings_Type(Integer32):
    """Custom type stmShowG8032Rings based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowG8032Rings_Type.__name__ = "Integer32"
_StmShowG8032Rings_Object = MibTableColumn
stmShowG8032Rings = _StmShowG8032Rings_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 10),
    _StmShowG8032Rings_Type()
)
stmShowG8032Rings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowG8032Rings.setStatus("current")


class _StmShowMacBasedVlanClassification_Type(Integer32):
    """Custom type stmShowMacBasedVlanClassification based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowMacBasedVlanClassification_Type.__name__ = "Integer32"
_StmShowMacBasedVlanClassification_Object = MibTableColumn
stmShowMacBasedVlanClassification = _StmShowMacBasedVlanClassification_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 11),
    _StmShowMacBasedVlanClassification_Type()
)
stmShowMacBasedVlanClassification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowMacBasedVlanClassification.setStatus("current")


class _StmShowIpv4BasedVlanClassification_Type(Integer32):
    """Custom type stmShowIpv4BasedVlanClassification based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4BasedVlanClassification_Type.__name__ = "Integer32"
_StmShowIpv4BasedVlanClassification_Object = MibTableColumn
stmShowIpv4BasedVlanClassification = _StmShowIpv4BasedVlanClassification_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 12),
    _StmShowIpv4BasedVlanClassification_Type()
)
stmShowIpv4BasedVlanClassification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4BasedVlanClassification.setStatus("current")


class _StmShowIpv6BasedVlanClassification_Type(Integer32):
    """Custom type stmShowIpv6BasedVlanClassification based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6BasedVlanClassification_Type.__name__ = "Integer32"
_StmShowIpv6BasedVlanClassification_Object = MibTableColumn
stmShowIpv6BasedVlanClassification = _StmShowIpv6BasedVlanClassification_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 13),
    _StmShowIpv6BasedVlanClassification_Type()
)
stmShowIpv6BasedVlanClassification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6BasedVlanClassification.setStatus("current")


class _StmShowIpv4HostRoutes_Type(Integer32):
    """Custom type stmShowIpv4HostRoutes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4HostRoutes_Type.__name__ = "Integer32"
_StmShowIpv4HostRoutes_Object = MibTableColumn
stmShowIpv4HostRoutes = _StmShowIpv4HostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 14),
    _StmShowIpv4HostRoutes_Type()
)
stmShowIpv4HostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4HostRoutes.setStatus("current")


class _StmShowIndirectIpv4Routes_Type(Integer32):
    """Custom type stmShowIndirectIpv4Routes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIndirectIpv4Routes_Type.__name__ = "Integer32"
_StmShowIndirectIpv4Routes_Object = MibTableColumn
stmShowIndirectIpv4Routes = _StmShowIndirectIpv4Routes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 15),
    _StmShowIndirectIpv4Routes_Type()
)
stmShowIndirectIpv4Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIndirectIpv4Routes.setStatus("current")


class _StmShowIpv4EcmpGroups_Type(Integer32):
    """Custom type stmShowIpv4EcmpGroups based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4EcmpGroups_Type.__name__ = "Integer32"
_StmShowIpv4EcmpGroups_Object = MibTableColumn
stmShowIpv4EcmpGroups = _StmShowIpv4EcmpGroups_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 16),
    _StmShowIpv4EcmpGroups_Type()
)
stmShowIpv4EcmpGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4EcmpGroups.setStatus("current")


class _StmShowIpv6HostRoutes_Type(Integer32):
    """Custom type stmShowIpv6HostRoutes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6HostRoutes_Type.__name__ = "Integer32"
_StmShowIpv6HostRoutes_Object = MibTableColumn
stmShowIpv6HostRoutes = _StmShowIpv6HostRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 17),
    _StmShowIpv6HostRoutes_Type()
)
stmShowIpv6HostRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6HostRoutes.setStatus("current")


class _StmShowIndirectIpv6Routes_Type(Integer32):
    """Custom type stmShowIndirectIpv6Routes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIndirectIpv6Routes_Type.__name__ = "Integer32"
_StmShowIndirectIpv6Routes_Object = MibTableColumn
stmShowIndirectIpv6Routes = _StmShowIndirectIpv6Routes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 18),
    _StmShowIndirectIpv6Routes_Type()
)
stmShowIndirectIpv6Routes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIndirectIpv6Routes.setStatus("current")


class _StmShowIpv6EcmpGroups_Type(Integer32):
    """Custom type stmShowIpv6EcmpGroups based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6EcmpGroups_Type.__name__ = "Integer32"
_StmShowIpv6EcmpGroups_Object = MibTableColumn
stmShowIpv6EcmpGroups = _StmShowIpv6EcmpGroups_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 19),
    _StmShowIpv6EcmpGroups_Type()
)
stmShowIpv6EcmpGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6EcmpGroups.setStatus("current")


class _StmShowIpTunnelPeers_Type(Integer32):
    """Custom type stmShowIpTunnelPeers based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpTunnelPeers_Type.__name__ = "Integer32"
_StmShowIpTunnelPeers_Object = MibTableColumn
stmShowIpTunnelPeers = _StmShowIpTunnelPeers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 20),
    _StmShowIpTunnelPeers_Type()
)
stmShowIpTunnelPeers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpTunnelPeers.setStatus("current")


class _StmShowNatForIviPeers_Type(Integer32):
    """Custom type stmShowNatForIviPeers based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowNatForIviPeers_Type.__name__ = "Integer32"
_StmShowNatForIviPeers_Object = MibTableColumn
stmShowNatForIviPeers = _StmShowNatForIviPeers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 21),
    _StmShowNatForIviPeers_Type()
)
stmShowNatForIviPeers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowNatForIviPeers.setStatus("current")


class _StmShowIpv4McastRoutes_Type(Integer32):
    """Custom type stmShowIpv4McastRoutes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4McastRoutes_Type.__name__ = "Integer32"
_StmShowIpv4McastRoutes_Object = MibTableColumn
stmShowIpv4McastRoutes = _StmShowIpv4McastRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 22),
    _StmShowIpv4McastRoutes_Type()
)
stmShowIpv4McastRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4McastRoutes.setStatus("current")


class _StmShowIpv4McastTotalMembers_Type(Integer32):
    """Custom type stmShowIpv4McastTotalMembers based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4McastTotalMembers_Type.__name__ = "Integer32"
_StmShowIpv4McastTotalMembers_Object = MibTableColumn
stmShowIpv4McastTotalMembers = _StmShowIpv4McastTotalMembers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 23),
    _StmShowIpv4McastTotalMembers_Type()
)
stmShowIpv4McastTotalMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4McastTotalMembers.setStatus("current")


class _StmShowIpv6McastRoutes_Type(Integer32):
    """Custom type stmShowIpv6McastRoutes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6McastRoutes_Type.__name__ = "Integer32"
_StmShowIpv6McastRoutes_Object = MibTableColumn
stmShowIpv6McastRoutes = _StmShowIpv6McastRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 24),
    _StmShowIpv6McastRoutes_Type()
)
stmShowIpv6McastRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6McastRoutes.setStatus("current")


class _StmShowIpv6McastTotalMembers_Type(Integer32):
    """Custom type stmShowIpv6McastTotalMembers based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6McastTotalMembers_Type.__name__ = "Integer32"
_StmShowIpv6McastTotalMembers_Object = MibTableColumn
stmShowIpv6McastTotalMembers = _StmShowIpv6McastTotalMembers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 25),
    _StmShowIpv6McastTotalMembers_Type()
)
stmShowIpv6McastTotalMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6McastTotalMembers.setStatus("current")


class _StmShowIpv4SourceGuardEntries_Type(Integer32):
    """Custom type stmShowIpv4SourceGuardEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4SourceGuardEntries_Type.__name__ = "Integer32"
_StmShowIpv4SourceGuardEntries_Object = MibTableColumn
stmShowIpv4SourceGuardEntries = _StmShowIpv4SourceGuardEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 26),
    _StmShowIpv4SourceGuardEntries_Type()
)
stmShowIpv4SourceGuardEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4SourceGuardEntries.setStatus("current")


class _StmShowIpv6SourceGuardEntries_Type(Integer32):
    """Custom type stmShowIpv6SourceGuardEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6SourceGuardEntries_Type.__name__ = "Integer32"
_StmShowIpv6SourceGuardEntries_Object = MibTableColumn
stmShowIpv6SourceGuardEntries = _StmShowIpv6SourceGuardEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 27),
    _StmShowIpv6SourceGuardEntries_Type()
)
stmShowIpv6SourceGuardEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6SourceGuardEntries.setStatus("current")


class _StmShowIpv4AclAndQosFlowEntries_Type(Integer32):
    """Custom type stmShowIpv4AclAndQosFlowEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv4AclAndQosFlowEntries_Type.__name__ = "Integer32"
_StmShowIpv4AclAndQosFlowEntries_Object = MibTableColumn
stmShowIpv4AclAndQosFlowEntries = _StmShowIpv4AclAndQosFlowEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 28),
    _StmShowIpv4AclAndQosFlowEntries_Type()
)
stmShowIpv4AclAndQosFlowEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv4AclAndQosFlowEntries.setStatus("current")


class _StmShowIpv6AclAndQosFlowEntries_Type(Integer32):
    """Custom type stmShowIpv6AclAndQosFlowEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIpv6AclAndQosFlowEntries_Type.__name__ = "Integer32"
_StmShowIpv6AclAndQosFlowEntries_Object = MibTableColumn
stmShowIpv6AclAndQosFlowEntries = _StmShowIpv6AclAndQosFlowEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 29),
    _StmShowIpv6AclAndQosFlowEntries_Type()
)
stmShowIpv6AclAndQosFlowEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIpv6AclAndQosFlowEntries.setStatus("current")


class _StmShowFtn_Type(Integer32):
    """Custom type stmShowFtn based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowFtn_Type.__name__ = "Integer32"
_StmShowFtn_Object = MibTableColumn
stmShowFtn = _StmShowFtn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 30),
    _StmShowFtn_Type()
)
stmShowFtn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowFtn.setStatus("current")


class _StmShowIncomingLabelMap_Type(Integer32):
    """Custom type stmShowIncomingLabelMap based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowIncomingLabelMap_Type.__name__ = "Integer32"
_StmShowIncomingLabelMap_Object = MibTableColumn
stmShowIncomingLabelMap = _StmShowIncomingLabelMap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 31),
    _StmShowIncomingLabelMap_Type()
)
stmShowIncomingLabelMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowIncomingLabelMap.setStatus("current")


class _StmShowVpws_Type(Integer32):
    """Custom type stmShowVpws based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVpws_Type.__name__ = "Integer32"
_StmShowVpws_Object = MibTableColumn
stmShowVpws = _StmShowVpws_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 32),
    _StmShowVpws_Type()
)
stmShowVpws.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVpws.setStatus("current")


class _StmShowLspPe_Type(Integer32):
    """Custom type stmShowLspPe based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowLspPe_Type.__name__ = "Integer32"
_StmShowLspPe_Object = MibTableColumn
stmShowLspPe = _StmShowLspPe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 33),
    _StmShowLspPe_Type()
)
stmShowLspPe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowLspPe.setStatus("current")


class _StmShowLspP_Type(Integer32):
    """Custom type stmShowLspP based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowLspP_Type.__name__ = "Integer32"
_StmShowLspP_Object = MibTableColumn
stmShowLspP = _StmShowLspP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 34),
    _StmShowLspP_Type()
)
stmShowLspP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowLspP.setStatus("current")


class _StmShowVplsPeer_Type(Integer32):
    """Custom type stmShowVplsPeer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVplsPeer_Type.__name__ = "Integer32"
_StmShowVplsPeer_Object = MibTableColumn
stmShowVplsPeer = _StmShowVplsPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 35),
    _StmShowVplsPeer_Type()
)
stmShowVplsPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVplsPeer.setStatus("current")


class _StmShowVplsAc_Type(Integer32):
    """Custom type stmShowVplsAc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVplsAc_Type.__name__ = "Integer32"
_StmShowVplsAc_Object = MibTableColumn
stmShowVplsAc = _StmShowVplsAc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 36),
    _StmShowVplsAc_Type()
)
stmShowVplsAc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVplsAc.setStatus("current")


class _StmShowVplsInstance_Type(Integer32):
    """Custom type stmShowVplsInstance based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVplsInstance_Type.__name__ = "Integer32"
_StmShowVplsInstance_Object = MibTableColumn
stmShowVplsInstance = _StmShowVplsInstance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 37),
    _StmShowVplsInstance_Type()
)
stmShowVplsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVplsInstance.setStatus("current")


class _StmShowLspOam_Type(Integer32):
    """Custom type stmShowLspOam based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowLspOam_Type.__name__ = "Integer32"
_StmShowLspOam_Object = MibTableColumn
stmShowLspOam = _StmShowLspOam_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 38),
    _StmShowLspOam_Type()
)
stmShowLspOam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowLspOam.setStatus("current")


class _StmShowOamForPseudoWrie_Type(Integer32):
    """Custom type stmShowOamForPseudoWrie based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowOamForPseudoWrie_Type.__name__ = "Integer32"
_StmShowOamForPseudoWrie_Object = MibTableColumn
stmShowOamForPseudoWrie = _StmShowOamForPseudoWrie_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 39),
    _StmShowOamForPseudoWrie_Type()
)
stmShowOamForPseudoWrie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowOamForPseudoWrie.setStatus("current")


class _StmShowMplsApsTunnel_Type(Integer32):
    """Custom type stmShowMplsApsTunnel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowMplsApsTunnel_Type.__name__ = "Integer32"
_StmShowMplsApsTunnel_Object = MibTableColumn
stmShowMplsApsTunnel = _StmShowMplsApsTunnel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 40),
    _StmShowMplsApsTunnel_Type()
)
stmShowMplsApsTunnel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowMplsApsTunnel.setStatus("current")


class _StmShowVlanMappingEntryAppliedPort_Type(Integer32):
    """Custom type stmShowVlanMappingEntryAppliedPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVlanMappingEntryAppliedPort_Type.__name__ = "Integer32"
_StmShowVlanMappingEntryAppliedPort_Object = MibTableColumn
stmShowVlanMappingEntryAppliedPort = _StmShowVlanMappingEntryAppliedPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 41),
    _StmShowVlanMappingEntryAppliedPort_Type()
)
stmShowVlanMappingEntryAppliedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVlanMappingEntryAppliedPort.setStatus("current")


class _StmShowVlanMemberPorts_Type(Integer32):
    """Custom type stmShowVlanMemberPorts based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVlanMemberPorts_Type.__name__ = "Integer32"
_StmShowVlanMemberPorts_Object = MibTableColumn
stmShowVlanMemberPorts = _StmShowVlanMemberPorts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 42),
    _StmShowVlanMemberPorts_Type()
)
stmShowVlanMemberPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVlanMemberPorts.setStatus("current")


class _StmShowVlanMappingDefaultEntry_Type(Integer32):
    """Custom type stmShowVlanMappingDefaultEntry based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVlanMappingDefaultEntry_Type.__name__ = "Integer32"
_StmShowVlanMappingDefaultEntry_Object = MibTableColumn
stmShowVlanMappingDefaultEntry = _StmShowVlanMappingDefaultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 43),
    _StmShowVlanMappingDefaultEntry_Type()
)
stmShowVlanMappingDefaultEntry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVlanMappingDefaultEntry.setStatus("current")


class _StmShowL2mcMemberPorts_Type(Integer32):
    """Custom type stmShowL2mcMemberPorts based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowL2mcMemberPorts_Type.__name__ = "Integer32"
_StmShowL2mcMemberPorts_Object = MibTableColumn
stmShowL2mcMemberPorts = _StmShowL2mcMemberPorts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 44),
    _StmShowL2mcMemberPorts_Type()
)
stmShowL2mcMemberPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowL2mcMemberPorts.setStatus("current")


class _StmShowL2mcv6Entries_Type(Integer32):
    """Custom type stmShowL2mcv6Entries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowL2mcv6Entries_Type.__name__ = "Integer32"
_StmShowL2mcv6Entries_Object = MibTableColumn
stmShowL2mcv6Entries = _StmShowL2mcv6Entries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 45),
    _StmShowL2mcv6Entries_Type()
)
stmShowL2mcv6Entries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowL2mcv6Entries.setStatus("current")


class _StmShowL2mcv6MemberPorts_Type(Integer32):
    """Custom type stmShowL2mcv6MemberPorts based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowL2mcv6MemberPorts_Type.__name__ = "Integer32"
_StmShowL2mcv6MemberPorts_Object = MibTableColumn
stmShowL2mcv6MemberPorts = _StmShowL2mcv6MemberPorts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 46),
    _StmShowL2mcv6MemberPorts_Type()
)
stmShowL2mcv6MemberPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowL2mcv6MemberPorts.setStatus("current")


class _StmShowPBREntries_Type(Integer32):
    """Custom type stmShowPBREntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowPBREntries_Type.__name__ = "Integer32"
_StmShowPBREntries_Object = MibTableColumn
stmShowPBREntries = _StmShowPBREntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 47),
    _StmShowPBREntries_Type()
)
stmShowPBREntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowPBREntries.setStatus("current")


class _StmShowPBRv6Entries_Type(Integer32):
    """Custom type stmShowPBRv6Entries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowPBRv6Entries_Type.__name__ = "Integer32"
_StmShowPBRv6Entries_Object = MibTableColumn
stmShowPBRv6Entries = _StmShowPBRv6Entries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 48),
    _StmShowPBRv6Entries_Type()
)
stmShowPBRv6Entries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowPBRv6Entries.setStatus("current")


class _StmShowVoiceVlan_Type(Integer32):
    """Custom type stmShowVoiceVlan based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowVoiceVlan_Type.__name__ = "Integer32"
_StmShowVoiceVlan_Object = MibTableColumn
stmShowVoiceVlan = _StmShowVoiceVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 49),
    _StmShowVoiceVlan_Type()
)
stmShowVoiceVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowVoiceVlan.setStatus("current")


class _StmShowG8032MemberPortsPerRing_Type(Integer32):
    """Custom type stmShowG8032MemberPortsPerRing based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowG8032MemberPortsPerRing_Type.__name__ = "Integer32"
_StmShowG8032MemberPortsPerRing_Object = MibTableColumn
stmShowG8032MemberPortsPerRing = _StmShowG8032MemberPortsPerRing_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 50),
    _StmShowG8032MemberPortsPerRing_Type()
)
stmShowG8032MemberPortsPerRing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowG8032MemberPortsPerRing.setStatus("current")


class _StmShowMPLSLables_Type(Integer32):
    """Custom type stmShowMPLSLables based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowMPLSLables_Type.__name__ = "Integer32"
_StmShowMPLSLables_Object = MibTableColumn
stmShowMPLSLables = _StmShowMPLSLables_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 51),
    _StmShowMPLSLables_Type()
)
stmShowMPLSLables.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowMPLSLables.setStatus("current")


class _StmShowBFDSessions_Type(Integer32):
    """Custom type stmShowBFDSessions based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StmShowBFDSessions_Type.__name__ = "Integer32"
_StmShowBFDSessions_Object = MibTableColumn
stmShowBFDSessions = _StmShowBFDSessions_Object(
    (1, 3, 6, 1, 4, 1, 27975, 33, 1, 3, 1, 52),
    _StmShowBFDSessions_Type()
)
stmShowBFDSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stmShowBFDSessions.setStatus("current")
_DnsClient_ObjectIdentity = ObjectIdentity
dnsClient = _DnsClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 34)
)
_DnsClientMibObject_ObjectIdentity = ObjectIdentity
dnsClientMibObject = _DnsClientMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1)
)
_DnsClientHostTable_Object = MibTable
dnsClientHostTable = _DnsClientHostTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1)
)
if mibBuilder.loadTexts:
    dnsClientHostTable.setStatus("current")
_DnsClientHostEntry_Object = MibTableRow
dnsClientHostEntry = _DnsClientHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1, 1)
)
dnsClientHostEntry.setIndexNames(
    (0, "SWITCH", "dnsClientHostIpHostIndex"),
)
if mibBuilder.loadTexts:
    dnsClientHostEntry.setStatus("current")


class _DnsClientHostIpHostIndex_Type(Integer32):
    """Custom type dnsClientHostIpHostIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_DnsClientHostIpHostIndex_Type.__name__ = "Integer32"
_DnsClientHostIpHostIndex_Object = MibTableColumn
dnsClientHostIpHostIndex = _DnsClientHostIpHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1, 1, 1),
    _DnsClientHostIpHostIndex_Type()
)
dnsClientHostIpHostIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsClientHostIpHostIndex.setStatus("current")


class _DnsClientHostIpHostName_Type(OctetString):
    """Custom type dnsClientHostIpHostName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_DnsClientHostIpHostName_Type.__name__ = "OctetString"
_DnsClientHostIpHostName_Object = MibTableColumn
dnsClientHostIpHostName = _DnsClientHostIpHostName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1, 1, 2),
    _DnsClientHostIpHostName_Type()
)
dnsClientHostIpHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsClientHostIpHostName.setStatus("current")
_DnsClientHostIpAddress_Type = IpAddress
_DnsClientHostIpAddress_Object = MibTableColumn
dnsClientHostIpAddress = _DnsClientHostIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1, 1, 3),
    _DnsClientHostIpAddress_Type()
)
dnsClientHostIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsClientHostIpAddress.setStatus("current")
_DnsClientHostRowStatus_Type = RowStatus
_DnsClientHostRowStatus_Object = MibTableColumn
dnsClientHostRowStatus = _DnsClientHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 1, 1, 4),
    _DnsClientHostRowStatus_Type()
)
dnsClientHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dnsClientHostRowStatus.setStatus("current")
_DnsClientDomainTable_Object = MibTable
dnsClientDomainTable = _DnsClientDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 2)
)
if mibBuilder.loadTexts:
    dnsClientDomainTable.setStatus("current")
_DnsClientDomainEntry_Object = MibTableRow
dnsClientDomainEntry = _DnsClientDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 2, 1)
)
dnsClientDomainEntry.setIndexNames(
    (0, "SWITCH", "dnsClientDomainIndex"),
)
if mibBuilder.loadTexts:
    dnsClientDomainEntry.setStatus("current")


class _DnsClientDomainIndex_Type(Integer32):
    """Custom type dnsClientDomainIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_DnsClientDomainIndex_Type.__name__ = "Integer32"
_DnsClientDomainIndex_Object = MibTableColumn
dnsClientDomainIndex = _DnsClientDomainIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 2, 1, 1),
    _DnsClientDomainIndex_Type()
)
dnsClientDomainIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsClientDomainIndex.setStatus("current")


class _DnsClientDomainName_Type(OctetString):
    """Custom type dnsClientDomainName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_DnsClientDomainName_Type.__name__ = "OctetString"
_DnsClientDomainName_Object = MibTableColumn
dnsClientDomainName = _DnsClientDomainName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 2, 1, 2),
    _DnsClientDomainName_Type()
)
dnsClientDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsClientDomainName.setStatus("current")
_DnsClientDomainRowStatus_Type = RowStatus
_DnsClientDomainRowStatus_Object = MibTableColumn
dnsClientDomainRowStatus = _DnsClientDomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 2, 1, 3),
    _DnsClientDomainRowStatus_Type()
)
dnsClientDomainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dnsClientDomainRowStatus.setStatus("current")
_DnsClientServerTable_Object = MibTable
dnsClientServerTable = _DnsClientServerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 3)
)
if mibBuilder.loadTexts:
    dnsClientServerTable.setStatus("current")
_DnsClientServerEntry_Object = MibTableRow
dnsClientServerEntry = _DnsClientServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 3, 1)
)
dnsClientServerEntry.setIndexNames(
    (0, "SWITCH", "dnsClientServerIpAddress"),
)
if mibBuilder.loadTexts:
    dnsClientServerEntry.setStatus("current")
_DnsClientServerIpAddress_Type = IpAddress
_DnsClientServerIpAddress_Object = MibTableColumn
dnsClientServerIpAddress = _DnsClientServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 3, 1, 1),
    _DnsClientServerIpAddress_Type()
)
dnsClientServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsClientServerIpAddress.setStatus("current")
_DnsClientServerRowStatus_Type = RowStatus
_DnsClientServerRowStatus_Object = MibTableColumn
dnsClientServerRowStatus = _DnsClientServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 34, 1, 3, 1, 2),
    _DnsClientServerRowStatus_Type()
)
dnsClientServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dnsClientServerRowStatus.setStatus("current")
_Ssh_ObjectIdentity = ObjectIdentity
ssh = _Ssh_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 35)
)
_SshServer_ObjectIdentity = ObjectIdentity
sshServer = _SshServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1)
)


class _SshServerEnable_Type(Integer32):
    """Custom type sshServerEnable based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SshServerEnable_Type.__name__ = "Integer32"
_SshServerEnable_Object = MibScalar
sshServerEnable = _SshServerEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 1),
    _SshServerEnable_Type()
)
sshServerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerEnable.setStatus("current")


class _SshServerVersion_Type(Integer32):
    """Custom type sshServerVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("v1", 1),
          ("v2", 2),
          ("all", 3))
    )


_SshServerVersion_Type.__name__ = "Integer32"
_SshServerVersion_Object = MibScalar
sshServerVersion = _SshServerVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 2),
    _SshServerVersion_Type()
)
sshServerVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerVersion.setStatus("current")


class _SshServerAuthTimer_Type(Integer32):
    """Custom type sshServerAuthTimer based on Integer32"""
    defaultValue = 120

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_SshServerAuthTimer_Type.__name__ = "Integer32"
_SshServerAuthTimer_Object = MibScalar
sshServerAuthTimer = _SshServerAuthTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 3),
    _SshServerAuthTimer_Type()
)
sshServerAuthTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthTimer.setStatus("current")


class _SshServerAuthRetries_Type(Integer32):
    """Custom type sshServerAuthRetries based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_SshServerAuthRetries_Type.__name__ = "Integer32"
_SshServerAuthRetries_Object = MibScalar
sshServerAuthRetries = _SshServerAuthRetries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 4),
    _SshServerAuthRetries_Type()
)
sshServerAuthRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthRetries.setStatus("current")


class _SshServerAuthType_Type(Integer32):
    """Custom type sshServerAuthType based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("password", 1),
          ("rsa", 2),
          ("publicKey", 3),
          ("passwordRsa", 4),
          ("passwordPublicKey", 5),
          ("rsaPublicKey", 6),
          ("all", 7))
    )


_SshServerAuthType_Type.__name__ = "Integer32"
_SshServerAuthType_Object = MibScalar
sshServerAuthType = _SshServerAuthType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 5),
    _SshServerAuthType_Type()
)
sshServerAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthType.setStatus("current")


class _SshServerRekeyInterval_Type(Integer32):
    """Custom type sshServerRekeyInterval based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_SshServerRekeyInterval_Type.__name__ = "Integer32"
_SshServerRekeyInterval_Object = MibScalar
sshServerRekeyInterval = _SshServerRekeyInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 1, 6),
    _SshServerRekeyInterval_Type()
)
sshServerRekeyInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerRekeyInterval.setStatus("current")
_SshRsaKey_ObjectIdentity = ObjectIdentity
sshRsaKey = _SshRsaKey_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2)
)
_SshImportRsaKeyTable_Object = MibTable
sshImportRsaKeyTable = _SshImportRsaKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8)
)
if mibBuilder.loadTexts:
    sshImportRsaKeyTable.setStatus("current")
_SshImportRsaKeyEntry_Object = MibTableRow
sshImportRsaKeyEntry = _SshImportRsaKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1)
)
sshImportRsaKeyEntry.setIndexNames(
    (0, "SWITCH", "sshImportRsaKeyIndex"),
)
if mibBuilder.loadTexts:
    sshImportRsaKeyEntry.setStatus("current")


class _SshImportRsaKeyIndex_Type(Integer32):
    """Custom type sshImportRsaKeyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_SshImportRsaKeyIndex_Type.__name__ = "Integer32"
_SshImportRsaKeyIndex_Object = MibTableColumn
sshImportRsaKeyIndex = _SshImportRsaKeyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 1),
    _SshImportRsaKeyIndex_Type()
)
sshImportRsaKeyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sshImportRsaKeyIndex.setStatus("current")


class _SshImportRsaKeyName_Type(OctetString):
    """Custom type sshImportRsaKeyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SshImportRsaKeyName_Type.__name__ = "OctetString"
_SshImportRsaKeyName_Object = MibTableColumn
sshImportRsaKeyName = _SshImportRsaKeyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 2),
    _SshImportRsaKeyName_Type()
)
sshImportRsaKeyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyName.setStatus("current")


class _SshImportRsaMgmtIf_Type(Integer32):
    """Custom type sshImportRsaMgmtIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("getValue", 0),
          ("noUse", 1),
          ("setMgmtIf", 2))
    )


_SshImportRsaMgmtIf_Type.__name__ = "Integer32"
_SshImportRsaMgmtIf_Object = MibTableColumn
sshImportRsaMgmtIf = _SshImportRsaMgmtIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 3),
    _SshImportRsaMgmtIf_Type()
)
sshImportRsaMgmtIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaMgmtIf.setStatus("current")


class _SshImportRsaKeyGenType_Type(Integer32):
    """Custom type sshImportRsaKeyGenType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("autoGen", 1),
          ("localFile", 2),
          ("ftpFile", 3),
          ("tftpFile", 4))
    )


_SshImportRsaKeyGenType_Type.__name__ = "Integer32"
_SshImportRsaKeyGenType_Object = MibTableColumn
sshImportRsaKeyGenType = _SshImportRsaKeyGenType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 4),
    _SshImportRsaKeyGenType_Type()
)
sshImportRsaKeyGenType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyGenType.setStatus("current")


class _SshImportRsaKeyBits_Type(Integer32):
    """Custom type sshImportRsaKeyBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(768, 4096),
    )


_SshImportRsaKeyBits_Type.__name__ = "Integer32"
_SshImportRsaKeyBits_Object = MibTableColumn
sshImportRsaKeyBits = _SshImportRsaKeyBits_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 5),
    _SshImportRsaKeyBits_Type()
)
sshImportRsaKeyBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyBits.setStatus("current")


class _SshImportRsaKeyFileName_Type(OctetString):
    """Custom type sshImportRsaKeyFileName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SshImportRsaKeyFileName_Type.__name__ = "OctetString"
_SshImportRsaKeyFileName_Object = MibTableColumn
sshImportRsaKeyFileName = _SshImportRsaKeyFileName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 6),
    _SshImportRsaKeyFileName_Type()
)
sshImportRsaKeyFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyFileName.setStatus("current")


class _SshImportRsaKeyType_Type(Integer32):
    """Custom type sshImportRsaKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("public", 1),
          ("private", 2))
    )


_SshImportRsaKeyType_Type.__name__ = "Integer32"
_SshImportRsaKeyType_Object = MibTableColumn
sshImportRsaKeyType = _SshImportRsaKeyType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 7),
    _SshImportRsaKeyType_Type()
)
sshImportRsaKeyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyType.setStatus("current")


class _SshImportRsaKeyFormatType_Type(Integer32):
    """Custom type sshImportRsaKeyFormatType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("der", 1),
          ("derHex", 2),
          ("pem", 3),
          ("ssh1", 4),
          ("ssh2", 5))
    )


_SshImportRsaKeyFormatType_Type.__name__ = "Integer32"
_SshImportRsaKeyFormatType_Object = MibTableColumn
sshImportRsaKeyFormatType = _SshImportRsaKeyFormatType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 8),
    _SshImportRsaKeyFormatType_Type()
)
sshImportRsaKeyFormatType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyFormatType.setStatus("current")


class _SshImportRsaKeyPasswd_Type(OctetString):
    """Custom type sshImportRsaKeyPasswd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 256),
    )


_SshImportRsaKeyPasswd_Type.__name__ = "OctetString"
_SshImportRsaKeyPasswd_Object = MibTableColumn
sshImportRsaKeyPasswd = _SshImportRsaKeyPasswd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 9),
    _SshImportRsaKeyPasswd_Type()
)
sshImportRsaKeyPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshImportRsaKeyPasswd.setStatus("current")
_SshImportRsaKeyRowStatus_Type = RowStatus
_SshImportRsaKeyRowStatus_Object = MibTableColumn
sshImportRsaKeyRowStatus = _SshImportRsaKeyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 8, 1, 10),
    _SshImportRsaKeyRowStatus_Type()
)
sshImportRsaKeyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sshImportRsaKeyRowStatus.setStatus("current")
_SshExportRsaKeyTable_Object = MibTable
sshExportRsaKeyTable = _SshExportRsaKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9)
)
if mibBuilder.loadTexts:
    sshExportRsaKeyTable.setStatus("current")
_SshExportRsaKeyEntry_Object = MibTableRow
sshExportRsaKeyEntry = _SshExportRsaKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1)
)
sshExportRsaKeyEntry.setIndexNames(
    (0, "SWITCH", "sshExportRsaKeyIndex"),
)
if mibBuilder.loadTexts:
    sshExportRsaKeyEntry.setStatus("current")


class _SshExportRsaKeyIndex_Type(Integer32):
    """Custom type sshExportRsaKeyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_SshExportRsaKeyIndex_Type.__name__ = "Integer32"
_SshExportRsaKeyIndex_Object = MibTableColumn
sshExportRsaKeyIndex = _SshExportRsaKeyIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 1),
    _SshExportRsaKeyIndex_Type()
)
sshExportRsaKeyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sshExportRsaKeyIndex.setStatus("current")


class _SshExportRsaKeyName_Type(OctetString):
    """Custom type sshExportRsaKeyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 60),
    )


_SshExportRsaKeyName_Type.__name__ = "OctetString"
_SshExportRsaKeyName_Object = MibTableColumn
sshExportRsaKeyName = _SshExportRsaKeyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 2),
    _SshExportRsaKeyName_Type()
)
sshExportRsaKeyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyName.setStatus("current")


class _SshExportRsaMgmtIf_Type(Integer32):
    """Custom type sshExportRsaMgmtIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("getValue", 0),
          ("noUse", 1),
          ("setMgmtIf", 2))
    )


_SshExportRsaMgmtIf_Type.__name__ = "Integer32"
_SshExportRsaMgmtIf_Object = MibTableColumn
sshExportRsaMgmtIf = _SshExportRsaMgmtIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 3),
    _SshExportRsaMgmtIf_Type()
)
sshExportRsaMgmtIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaMgmtIf.setStatus("current")


class _SshExportRsaKeyExType_Type(Integer32):
    """Custom type sshExportRsaKeyExType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("localFile", 1),
          ("ftpFile", 2),
          ("tftpFile", 3))
    )


_SshExportRsaKeyExType_Type.__name__ = "Integer32"
_SshExportRsaKeyExType_Object = MibTableColumn
sshExportRsaKeyExType = _SshExportRsaKeyExType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 4),
    _SshExportRsaKeyExType_Type()
)
sshExportRsaKeyExType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyExType.setStatus("current")


class _SshExportRsaKeyFileName_Type(OctetString):
    """Custom type sshExportRsaKeyFileName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SshExportRsaKeyFileName_Type.__name__ = "OctetString"
_SshExportRsaKeyFileName_Object = MibTableColumn
sshExportRsaKeyFileName = _SshExportRsaKeyFileName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 5),
    _SshExportRsaKeyFileName_Type()
)
sshExportRsaKeyFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyFileName.setStatus("current")


class _SshExportRsaKeyType_Type(Integer32):
    """Custom type sshExportRsaKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("public", 1),
          ("private", 2))
    )


_SshExportRsaKeyType_Type.__name__ = "Integer32"
_SshExportRsaKeyType_Object = MibTableColumn
sshExportRsaKeyType = _SshExportRsaKeyType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 6),
    _SshExportRsaKeyType_Type()
)
sshExportRsaKeyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyType.setStatus("current")


class _SshExportRsaKeyFormatType_Type(Integer32):
    """Custom type sshExportRsaKeyFormatType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("der", 1),
          ("derHex", 2),
          ("pem", 3),
          ("ssh1", 4),
          ("ssh2", 5))
    )


_SshExportRsaKeyFormatType_Type.__name__ = "Integer32"
_SshExportRsaKeyFormatType_Object = MibTableColumn
sshExportRsaKeyFormatType = _SshExportRsaKeyFormatType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 7),
    _SshExportRsaKeyFormatType_Type()
)
sshExportRsaKeyFormatType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyFormatType.setStatus("current")


class _SshExportRsaKeyEncryptType_Type(Integer32):
    """Custom type sshExportRsaKeyEncryptType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("des", 1),
          ("des3", 2),
          ("aes128", 3),
          ("aes192", 4),
          ("aes256", 5))
    )


_SshExportRsaKeyEncryptType_Type.__name__ = "Integer32"
_SshExportRsaKeyEncryptType_Object = MibTableColumn
sshExportRsaKeyEncryptType = _SshExportRsaKeyEncryptType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 8),
    _SshExportRsaKeyEncryptType_Type()
)
sshExportRsaKeyEncryptType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyEncryptType.setStatus("current")


class _SshExportRsaKeyPassword_Type(OctetString):
    """Custom type sshExportRsaKeyPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 256),
    )


_SshExportRsaKeyPassword_Type.__name__ = "OctetString"
_SshExportRsaKeyPassword_Object = MibTableColumn
sshExportRsaKeyPassword = _SshExportRsaKeyPassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 9),
    _SshExportRsaKeyPassword_Type()
)
sshExportRsaKeyPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshExportRsaKeyPassword.setStatus("current")
_SshExportRsaKeyRowStatus_Type = RowStatus
_SshExportRsaKeyRowStatus_Object = MibTableColumn
sshExportRsaKeyRowStatus = _SshExportRsaKeyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 2, 9, 1, 10),
    _SshExportRsaKeyRowStatus_Type()
)
sshExportRsaKeyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sshExportRsaKeyRowStatus.setStatus("current")
_SshHostKey_ObjectIdentity = ObjectIdentity
sshHostKey = _SshHostKey_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3)
)
_SshHostKeyRsaTable_Object = MibTable
sshHostKeyRsaTable = _SshHostKeyRsaTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3, 7)
)
if mibBuilder.loadTexts:
    sshHostKeyRsaTable.setStatus("current")
_SshHostKeyRsaEntry_Object = MibTableRow
sshHostKeyRsaEntry = _SshHostKeyRsaEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3, 7, 1)
)
sshHostKeyRsaEntry.setIndexNames(
    (0, "SWITCH", "sshHostKeyRsaIndex"),
)
if mibBuilder.loadTexts:
    sshHostKeyRsaEntry.setStatus("current")


class _SshHostKeyRsaIndex_Type(Integer32):
    """Custom type sshHostKeyRsaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_SshHostKeyRsaIndex_Type.__name__ = "Integer32"
_SshHostKeyRsaIndex_Object = MibTableColumn
sshHostKeyRsaIndex = _SshHostKeyRsaIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3, 7, 1, 1),
    _SshHostKeyRsaIndex_Type()
)
sshHostKeyRsaIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sshHostKeyRsaIndex.setStatus("current")


class _SshHostKeyRsaName_Type(OctetString):
    """Custom type sshHostKeyRsaName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_SshHostKeyRsaName_Type.__name__ = "OctetString"
_SshHostKeyRsaName_Object = MibTableColumn
sshHostKeyRsaName = _SshHostKeyRsaName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3, 7, 1, 2),
    _SshHostKeyRsaName_Type()
)
sshHostKeyRsaName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshHostKeyRsaName.setStatus("current")
_SshHostKeyRsaRowStatus_Type = RowStatus
_SshHostKeyRsaRowStatus_Object = MibTableColumn
sshHostKeyRsaRowStatus = _SshHostKeyRsaRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 35, 3, 7, 1, 3),
    _SshHostKeyRsaRowStatus_Type()
)
sshHostKeyRsaRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sshHostKeyRsaRowStatus.setStatus("current")
_Dhcp_ObjectIdentity = ObjectIdentity
dhcp = _Dhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36)
)
_DhcpGlobal_ObjectIdentity = ObjectIdentity
dhcpGlobal = _DhcpGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 1)
)


class _DhcpEnable_Type(Integer32):
    """Custom type dhcpEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpEnable_Type.__name__ = "Integer32"
_DhcpEnable_Object = MibScalar
dhcpEnable = _DhcpEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 1, 1),
    _DhcpEnable_Type()
)
dhcpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpEnable.setStatus("current")
_DhcpSnoop_ObjectIdentity = ObjectIdentity
dhcpSnoop = _DhcpSnoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2)
)


class _DhcpSnoopEnable_Type(Integer32):
    """Custom type dhcpSnoopEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpSnoopEnable_Type.__name__ = "Integer32"
_DhcpSnoopEnable_Object = MibScalar
dhcpSnoopEnable = _DhcpSnoopEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 1),
    _DhcpSnoopEnable_Type()
)
dhcpSnoopEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopEnable.setStatus("current")


class _DhcpSnoopVerMac_Type(Integer32):
    """Custom type dhcpSnoopVerMac based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpSnoopVerMac_Type.__name__ = "Integer32"
_DhcpSnoopVerMac_Object = MibScalar
dhcpSnoopVerMac = _DhcpSnoopVerMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 2),
    _DhcpSnoopVerMac_Type()
)
dhcpSnoopVerMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopVerMac.setStatus("current")


class _DhcpSnoopOption82_Type(Integer32):
    """Custom type dhcpSnoopOption82 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpSnoopOption82_Type.__name__ = "Integer32"
_DhcpSnoopOption82_Object = MibScalar
dhcpSnoopOption82 = _DhcpSnoopOption82_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 3),
    _DhcpSnoopOption82_Type()
)
dhcpSnoopOption82.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopOption82.setStatus("current")


class _DhcpSnoopOption82AllowUntrusted_Type(Integer32):
    """Custom type dhcpSnoopOption82AllowUntrusted based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpSnoopOption82AllowUntrusted_Type.__name__ = "Integer32"
_DhcpSnoopOption82AllowUntrusted_Object = MibScalar
dhcpSnoopOption82AllowUntrusted = _DhcpSnoopOption82AllowUntrusted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 4),
    _DhcpSnoopOption82AllowUntrusted_Type()
)
dhcpSnoopOption82AllowUntrusted.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopOption82AllowUntrusted.setStatus("current")


class _DhcpSnoopAutoSaveInterval_Type(Integer32):
    """Custom type dhcpSnoopAutoSaveInterval based on Integer32"""
    defaultValue = 600

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15, 1200),
    )


_DhcpSnoopAutoSaveInterval_Type.__name__ = "Integer32"
_DhcpSnoopAutoSaveInterval_Object = MibScalar
dhcpSnoopAutoSaveInterval = _DhcpSnoopAutoSaveInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 5),
    _DhcpSnoopAutoSaveInterval_Type()
)
dhcpSnoopAutoSaveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopAutoSaveInterval.setStatus("current")
_DhcpSnoopVlanTable_Object = MibTable
dhcpSnoopVlanTable = _DhcpSnoopVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 6)
)
if mibBuilder.loadTexts:
    dhcpSnoopVlanTable.setStatus("current")
_DhcpSnoopVlanEntry_Object = MibTableRow
dhcpSnoopVlanEntry = _DhcpSnoopVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 6, 1)
)
dhcpSnoopVlanEntry.setIndexNames(
    (0, "SWITCH", "dhcpSnoopVlanIndex"),
)
if mibBuilder.loadTexts:
    dhcpSnoopVlanEntry.setStatus("current")


class _DhcpSnoopVlanIndex_Type(Integer32):
    """Custom type dhcpSnoopVlanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_DhcpSnoopVlanIndex_Type.__name__ = "Integer32"
_DhcpSnoopVlanIndex_Object = MibTableColumn
dhcpSnoopVlanIndex = _DhcpSnoopVlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 6, 1, 1),
    _DhcpSnoopVlanIndex_Type()
)
dhcpSnoopVlanIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpSnoopVlanIndex.setStatus("current")
_DhcpSnoopVlanEnable_Type = TruthValue
_DhcpSnoopVlanEnable_Object = MibTableColumn
dhcpSnoopVlanEnable = _DhcpSnoopVlanEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 6, 1, 2),
    _DhcpSnoopVlanEnable_Type()
)
dhcpSnoopVlanEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopVlanEnable.setStatus("current")
_DhcpSnoopBindingTable_Object = MibTable
dhcpSnoopBindingTable = _DhcpSnoopBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7)
)
if mibBuilder.loadTexts:
    dhcpSnoopBindingTable.setStatus("current")
_DhcpSnoopBindingEntry_Object = MibTableRow
dhcpSnoopBindingEntry = _DhcpSnoopBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1)
)
dhcpSnoopBindingEntry.setIndexNames(
    (0, "SWITCH", "dhcpSnoopClientVlan"),
    (0, "SWITCH", "dhcpSnoopClientMacAddress"),
)
if mibBuilder.loadTexts:
    dhcpSnoopBindingEntry.setStatus("current")
_DhcpSnoopClientVlan_Type = Integer32
_DhcpSnoopClientVlan_Object = MibTableColumn
dhcpSnoopClientVlan = _DhcpSnoopClientVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 1),
    _DhcpSnoopClientVlan_Type()
)
dhcpSnoopClientVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpSnoopClientVlan.setStatus("current")
_DhcpSnoopClientMacAddress_Type = MacAddress
_DhcpSnoopClientMacAddress_Object = MibTableColumn
dhcpSnoopClientMacAddress = _DhcpSnoopClientMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 2),
    _DhcpSnoopClientMacAddress_Type()
)
dhcpSnoopClientMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpSnoopClientMacAddress.setStatus("current")
_DhcpSnoopClientIpAddressType_Type = InetAddressType
_DhcpSnoopClientIpAddressType_Object = MibTableColumn
dhcpSnoopClientIpAddressType = _DhcpSnoopClientIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 3),
    _DhcpSnoopClientIpAddressType_Type()
)
dhcpSnoopClientIpAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopClientIpAddressType.setStatus("current")
_DhcpSnoopClientIpAddress_Type = InetAddress
_DhcpSnoopClientIpAddress_Object = MibTableColumn
dhcpSnoopClientIpAddress = _DhcpSnoopClientIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 4),
    _DhcpSnoopClientIpAddress_Type()
)
dhcpSnoopClientIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopClientIpAddress.setStatus("current")
_DhcpSnoopClientIfindex_Type = Integer32
_DhcpSnoopClientIfindex_Object = MibTableColumn
dhcpSnoopClientIfindex = _DhcpSnoopClientIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 5),
    _DhcpSnoopClientIfindex_Type()
)
dhcpSnoopClientIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopClientIfindex.setStatus("current")
_DhcpSnoopClientExpiry_Type = Integer32
_DhcpSnoopClientExpiry_Object = MibTableColumn
dhcpSnoopClientExpiry = _DhcpSnoopClientExpiry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 6),
    _DhcpSnoopClientExpiry_Type()
)
dhcpSnoopClientExpiry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopClientExpiry.setStatus("current")
_DhcpSnoopClientRowStatus_Type = RowStatus
_DhcpSnoopClientRowStatus_Object = MibTableColumn
dhcpSnoopClientRowStatus = _DhcpSnoopClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 7, 1, 7),
    _DhcpSnoopClientRowStatus_Type()
)
dhcpSnoopClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpSnoopClientRowStatus.setStatus("current")
_DhcpSnoopTrustTable_Object = MibTable
dhcpSnoopTrustTable = _DhcpSnoopTrustTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 8)
)
if mibBuilder.loadTexts:
    dhcpSnoopTrustTable.setStatus("current")
_DhcpSnoopTrustEntry_Object = MibTableRow
dhcpSnoopTrustEntry = _DhcpSnoopTrustEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 8, 1)
)
dhcpSnoopTrustEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    dhcpSnoopTrustEntry.setStatus("current")


class _DhcpSnoopTrustStatus_Type(Integer32):
    """Custom type dhcpSnoopTrustStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trusted", 1),
          ("untrusted", 2))
    )


_DhcpSnoopTrustStatus_Type.__name__ = "Integer32"
_DhcpSnoopTrustStatus_Object = MibTableColumn
dhcpSnoopTrustStatus = _DhcpSnoopTrustStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 8, 1, 1),
    _DhcpSnoopTrustStatus_Type()
)
dhcpSnoopTrustStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopTrustStatus.setStatus("current")
_DhcpSnoopStatisticsGroup_ObjectIdentity = ObjectIdentity
dhcpSnoopStatisticsGroup = _DhcpSnoopStatisticsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9)
)
_DhcpSnoopDHCPPktNum_Type = Unsigned32
_DhcpSnoopDHCPPktNum_Object = MibScalar
dhcpSnoopDHCPPktNum = _DhcpSnoopDHCPPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 1),
    _DhcpSnoopDHCPPktNum_Type()
)
dhcpSnoopDHCPPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopDHCPPktNum.setStatus("current")
_DhcpSnoopBootpPktNum_Type = Unsigned32
_DhcpSnoopBootpPktNum_Object = MibScalar
dhcpSnoopBootpPktNum = _DhcpSnoopBootpPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 2),
    _DhcpSnoopBootpPktNum_Type()
)
dhcpSnoopBootpPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopBootpPktNum.setStatus("current")
_DhcpSnoopFwdPktNum_Type = Unsigned32
_DhcpSnoopFwdPktNum_Object = MibScalar
dhcpSnoopFwdPktNum = _DhcpSnoopFwdPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 3),
    _DhcpSnoopFwdPktNum_Type()
)
dhcpSnoopFwdPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopFwdPktNum.setStatus("current")
_DhcpSnoopInvalidPktNum_Type = Unsigned32
_DhcpSnoopInvalidPktNum_Object = MibScalar
dhcpSnoopInvalidPktNum = _DhcpSnoopInvalidPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 4),
    _DhcpSnoopInvalidPktNum_Type()
)
dhcpSnoopInvalidPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopInvalidPktNum.setStatus("current")
_DhcpSnoopMacVerifyFailedPktNum_Type = Unsigned32
_DhcpSnoopMacVerifyFailedPktNum_Object = MibScalar
dhcpSnoopMacVerifyFailedPktNum = _DhcpSnoopMacVerifyFailedPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 5),
    _DhcpSnoopMacVerifyFailedPktNum_Type()
)
dhcpSnoopMacVerifyFailedPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopMacVerifyFailedPktNum.setStatus("current")
_DhcpSnoopDroppedPktNum_Type = Unsigned32
_DhcpSnoopDroppedPktNum_Object = MibScalar
dhcpSnoopDroppedPktNum = _DhcpSnoopDroppedPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 6),
    _DhcpSnoopDroppedPktNum_Type()
)
dhcpSnoopDroppedPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSnoopDroppedPktNum.setStatus("current")
_DhcpSnoopStatisticsReset_Type = TruthValue
_DhcpSnoopStatisticsReset_Object = MibScalar
dhcpSnoopStatisticsReset = _DhcpSnoopStatisticsReset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 9, 7),
    _DhcpSnoopStatisticsReset_Type()
)
dhcpSnoopStatisticsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopStatisticsReset.setStatus("current")
_DhcpSnoopClearAllBinding_Type = TruthValue
_DhcpSnoopClearAllBinding_Object = MibScalar
dhcpSnoopClearAllBinding = _DhcpSnoopClearAllBinding_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 10),
    _DhcpSnoopClearAllBinding_Type()
)
dhcpSnoopClearAllBinding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopClearAllBinding.setStatus("current")
_DhcpSnoopRemoteIdFormatHostName_Type = TruthValue
_DhcpSnoopRemoteIdFormatHostName_Object = MibScalar
dhcpSnoopRemoteIdFormatHostName = _DhcpSnoopRemoteIdFormatHostName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 11),
    _DhcpSnoopRemoteIdFormatHostName_Type()
)
dhcpSnoopRemoteIdFormatHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopRemoteIdFormatHostName.setStatus("current")


class _DhcpSnoopRemoteIdFormatString_Type(OctetString):
    """Custom type dhcpSnoopRemoteIdFormatString based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_DhcpSnoopRemoteIdFormatString_Type.__name__ = "OctetString"
_DhcpSnoopRemoteIdFormatString_Object = MibScalar
dhcpSnoopRemoteIdFormatString = _DhcpSnoopRemoteIdFormatString_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 12),
    _DhcpSnoopRemoteIdFormatString_Type()
)
dhcpSnoopRemoteIdFormatString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopRemoteIdFormatString.setStatus("current")
_DhcpSnoopCircuitIdFormatTable_Object = MibTable
dhcpSnoopCircuitIdFormatTable = _DhcpSnoopCircuitIdFormatTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 13)
)
if mibBuilder.loadTexts:
    dhcpSnoopCircuitIdFormatTable.setStatus("current")
_DhcpSnoopCircuitIdFormatEntry_Object = MibTableRow
dhcpSnoopCircuitIdFormatEntry = _DhcpSnoopCircuitIdFormatEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 13, 1)
)
dhcpSnoopCircuitIdFormatEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "dhcpSnoopCircuitIdFormatVlan"),
)
if mibBuilder.loadTexts:
    dhcpSnoopCircuitIdFormatEntry.setStatus("current")
_DhcpSnoopCircuitIdFormatVlan_Type = Integer32
_DhcpSnoopCircuitIdFormatVlan_Object = MibTableColumn
dhcpSnoopCircuitIdFormatVlan = _DhcpSnoopCircuitIdFormatVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 13, 1, 1),
    _DhcpSnoopCircuitIdFormatVlan_Type()
)
dhcpSnoopCircuitIdFormatVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpSnoopCircuitIdFormatVlan.setStatus("current")


class _DhcpSnoopCircuitIdFormatString_Type(OctetString):
    """Custom type dhcpSnoopCircuitIdFormatString based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_DhcpSnoopCircuitIdFormatString_Type.__name__ = "OctetString"
_DhcpSnoopCircuitIdFormatString_Object = MibTableColumn
dhcpSnoopCircuitIdFormatString = _DhcpSnoopCircuitIdFormatString_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 13, 1, 2),
    _DhcpSnoopCircuitIdFormatString_Type()
)
dhcpSnoopCircuitIdFormatString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpSnoopCircuitIdFormatString.setStatus("current")
_DhcpSnoopCircuitIdFormatRowStatus_Type = RowStatus
_DhcpSnoopCircuitIdFormatRowStatus_Object = MibTableColumn
dhcpSnoopCircuitIdFormatRowStatus = _DhcpSnoopCircuitIdFormatRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 2, 13, 1, 3),
    _DhcpSnoopCircuitIdFormatRowStatus_Type()
)
dhcpSnoopCircuitIdFormatRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpSnoopCircuitIdFormatRowStatus.setStatus("current")
_DhcpRelay_ObjectIdentity = ObjectIdentity
dhcpRelay = _DhcpRelay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3)
)
_DhcpRGlobal_ObjectIdentity = ObjectIdentity
dhcpRGlobal = _DhcpRGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 1)
)


class _DhcpREnable_Type(Integer32):
    """Custom type dhcpREnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpREnable_Type.__name__ = "Integer32"
_DhcpREnable_Object = MibScalar
dhcpREnable = _DhcpREnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 1, 1),
    _DhcpREnable_Type()
)
dhcpREnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpREnable.setStatus("current")
_DhcpROption82TrustAll_Type = TruthValue
_DhcpROption82TrustAll_Object = MibScalar
dhcpROption82TrustAll = _DhcpROption82TrustAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 1, 2),
    _DhcpROption82TrustAll_Type()
)
dhcpROption82TrustAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpROption82TrustAll.setStatus("current")
_DhcpRServer_ObjectIdentity = ObjectIdentity
dhcpRServer = _DhcpRServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2)
)


class _DhcpROption82Switch_Type(Integer32):
    """Custom type dhcpROption82Switch based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpROption82Switch_Type.__name__ = "Integer32"
_DhcpROption82Switch_Object = MibScalar
dhcpROption82Switch = _DhcpROption82Switch_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 1),
    _DhcpROption82Switch_Type()
)
dhcpROption82Switch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpROption82Switch.setStatus("current")


class _DhcpROption82Check_Type(Integer32):
    """Custom type dhcpROption82Check based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DhcpROption82Check_Type.__name__ = "Integer32"
_DhcpROption82Check_Object = MibScalar
dhcpROption82Check = _DhcpROption82Check_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 2),
    _DhcpROption82Check_Type()
)
dhcpROption82Check.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpROption82Check.setStatus("current")


class _DhcpROption82HandleStrategy_Type(Integer32):
    """Custom type dhcpROption82HandleStrategy based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("replace", 1),
          ("keep", 2),
          ("drop", 3))
    )


_DhcpROption82HandleStrategy_Type.__name__ = "Integer32"
_DhcpROption82HandleStrategy_Object = MibScalar
dhcpROption82HandleStrategy = _DhcpROption82HandleStrategy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 3),
    _DhcpROption82HandleStrategy_Type()
)
dhcpROption82HandleStrategy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpROption82HandleStrategy.setStatus("current")
_DhcpRIpToGroupTable_Object = MibTable
dhcpRIpToGroupTable = _DhcpRIpToGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 4)
)
if mibBuilder.loadTexts:
    dhcpRIpToGroupTable.setStatus("current")
_DhcpRIpToGroupEntry_Object = MibTableRow
dhcpRIpToGroupEntry = _DhcpRIpToGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 4, 1)
)
dhcpRIpToGroupEntry.setIndexNames(
    (0, "SWITCH", "dhcpRIpToGroupGroupId"),
)
if mibBuilder.loadTexts:
    dhcpRIpToGroupEntry.setStatus("current")


class _DhcpRIpToGroupGroupId_Type(Integer32):
    """Custom type dhcpRIpToGroupGroupId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DhcpRIpToGroupGroupId_Type.__name__ = "Integer32"
_DhcpRIpToGroupGroupId_Object = MibTableColumn
dhcpRIpToGroupGroupId = _DhcpRIpToGroupGroupId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 4, 1, 1),
    _DhcpRIpToGroupGroupId_Type()
)
dhcpRIpToGroupGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpRIpToGroupGroupId.setStatus("current")


class _DhcpRIpToGroupServerIp_Type(OctetString):
    """Custom type dhcpRIpToGroupServerIp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_DhcpRIpToGroupServerIp_Type.__name__ = "OctetString"
_DhcpRIpToGroupServerIp_Object = MibTableColumn
dhcpRIpToGroupServerIp = _DhcpRIpToGroupServerIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 4, 1, 2),
    _DhcpRIpToGroupServerIp_Type()
)
dhcpRIpToGroupServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpRIpToGroupServerIp.setStatus("current")
_DhcpRIpToGroupRowStatus_Type = RowStatus
_DhcpRIpToGroupRowStatus_Object = MibTableColumn
dhcpRIpToGroupRowStatus = _DhcpRIpToGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 4, 1, 3),
    _DhcpRIpToGroupRowStatus_Type()
)
dhcpRIpToGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpRIpToGroupRowStatus.setStatus("current")
_DhcpRStatisticsGroup_ObjectIdentity = ObjectIdentity
dhcpRStatisticsGroup = _DhcpRStatisticsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5)
)
_DhcpRRxClientPktNum_Type = Unsigned32
_DhcpRRxClientPktNum_Object = MibScalar
dhcpRRxClientPktNum = _DhcpRRxClientPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 1),
    _DhcpRRxClientPktNum_Type()
)
dhcpRRxClientPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRRxClientPktNum.setStatus("current")
_DhcpRRxServerPktNum_Type = Unsigned32
_DhcpRRxServerPktNum_Object = MibScalar
dhcpRRxServerPktNum = _DhcpRRxServerPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 2),
    _DhcpRRxServerPktNum_Type()
)
dhcpRRxServerPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRRxServerPktNum.setStatus("current")
_DhcpRRxClientErrPktNum_Type = Unsigned32
_DhcpRRxClientErrPktNum_Object = MibScalar
dhcpRRxClientErrPktNum = _DhcpRRxClientErrPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 3),
    _DhcpRRxClientErrPktNum_Type()
)
dhcpRRxClientErrPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRRxClientErrPktNum.setStatus("current")
_DhcpRRxServerErrPktNum_Type = Unsigned32
_DhcpRRxServerErrPktNum_Object = MibScalar
dhcpRRxServerErrPktNum = _DhcpRRxServerErrPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 4),
    _DhcpRRxServerErrPktNum_Type()
)
dhcpRRxServerErrPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRRxServerErrPktNum.setStatus("current")
_DhcpRBogusAddrDropsPktNum_Type = Unsigned32
_DhcpRBogusAddrDropsPktNum_Object = MibScalar
dhcpRBogusAddrDropsPktNum = _DhcpRBogusAddrDropsPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 5),
    _DhcpRBogusAddrDropsPktNum_Type()
)
dhcpRBogusAddrDropsPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRBogusAddrDropsPktNum.setStatus("current")
_DhcpRBadCircuitIDPktNum_Type = Unsigned32
_DhcpRBadCircuitIDPktNum_Object = MibScalar
dhcpRBadCircuitIDPktNum = _DhcpRBadCircuitIDPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 6),
    _DhcpRBadCircuitIDPktNum_Type()
)
dhcpRBadCircuitIDPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRBadCircuitIDPktNum.setStatus("current")
_DhcpRCorruptedAgentOpPktNum_Type = Unsigned32
_DhcpRCorruptedAgentOpPktNum_Object = MibScalar
dhcpRCorruptedAgentOpPktNum = _DhcpRCorruptedAgentOpPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 7),
    _DhcpRCorruptedAgentOpPktNum_Type()
)
dhcpRCorruptedAgentOpPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRCorruptedAgentOpPktNum.setStatus("current")
_DhcpRMissAgentOpPktNum_Type = Unsigned32
_DhcpRMissAgentOpPktNum_Object = MibScalar
dhcpRMissAgentOpPktNum = _DhcpRMissAgentOpPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 8),
    _DhcpRMissAgentOpPktNum_Type()
)
dhcpRMissAgentOpPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRMissAgentOpPktNum.setStatus("current")
_DhcpRMissCircuitIDPktNum_Type = Unsigned32
_DhcpRMissCircuitIDPktNum_Object = MibScalar
dhcpRMissCircuitIDPktNum = _DhcpRMissCircuitIDPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 9),
    _DhcpRMissCircuitIDPktNum_Type()
)
dhcpRMissCircuitIDPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpRMissCircuitIDPktNum.setStatus("current")
_DhcpRStatisticsReset_Type = TruthValue
_DhcpRStatisticsReset_Object = MibScalar
dhcpRStatisticsReset = _DhcpRStatisticsReset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 2, 5, 10),
    _DhcpRStatisticsReset_Type()
)
dhcpRStatisticsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpRStatisticsReset.setStatus("current")
_DhcpRIntf_ObjectIdentity = ObjectIdentity
dhcpRIntf = _DhcpRIntf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3)
)
_DhcpRIfOption82TrustTable_Object = MibTable
dhcpRIfOption82TrustTable = _DhcpRIfOption82TrustTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 1)
)
if mibBuilder.loadTexts:
    dhcpRIfOption82TrustTable.setStatus("current")
_DhcpRIfOption82TrustEntry_Object = MibTableRow
dhcpRIfOption82TrustEntry = _DhcpRIfOption82TrustEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 1, 1)
)
dhcpRIfOption82TrustEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    dhcpRIfOption82TrustEntry.setStatus("current")
_DhcpRIfOption82Trust_Type = TruthValue
_DhcpRIfOption82Trust_Object = MibTableColumn
dhcpRIfOption82Trust = _DhcpRIfOption82Trust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 1, 1, 1),
    _DhcpRIfOption82Trust_Type()
)
dhcpRIfOption82Trust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpRIfOption82Trust.setStatus("current")
_DhcpRIfSelectTable_Object = MibTable
dhcpRIfSelectTable = _DhcpRIfSelectTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 2)
)
if mibBuilder.loadTexts:
    dhcpRIfSelectTable.setStatus("current")
_DhcpRIfSelectEntry_Object = MibTableRow
dhcpRIfSelectEntry = _DhcpRIfSelectEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 2, 1)
)
dhcpRIfSelectEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    dhcpRIfSelectEntry.setStatus("current")


class _DhcpRIfSelectserver_Type(Integer32):
    """Custom type dhcpRIfSelectserver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_DhcpRIfSelectserver_Type.__name__ = "Integer32"
_DhcpRIfSelectserver_Object = MibTableColumn
dhcpRIfSelectserver = _DhcpRIfSelectserver_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 3, 3, 2, 1, 1),
    _DhcpRIfSelectserver_Type()
)
dhcpRIfSelectserver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpRIfSelectserver.setStatus("current")
_Dhcpv6Global_ObjectIdentity = ObjectIdentity
dhcpv6Global = _Dhcpv6Global_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 6)
)


class _Dhcpv6Enable_Type(Integer32):
    """Custom type dhcpv6Enable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_Dhcpv6Enable_Type.__name__ = "Integer32"
_Dhcpv6Enable_Object = MibScalar
dhcpv6Enable = _Dhcpv6Enable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 6, 1),
    _Dhcpv6Enable_Type()
)
dhcpv6Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6Enable.setStatus("current")
_Dhcpv6Snoop_ObjectIdentity = ObjectIdentity
dhcpv6Snoop = _Dhcpv6Snoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7)
)
_Dhcpv6SnoopGlobal_ObjectIdentity = ObjectIdentity
dhcpv6SnoopGlobal = _Dhcpv6SnoopGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 1)
)


class _Dhcpv6SnoopEnable_Type(Integer32):
    """Custom type dhcpv6SnoopEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_Dhcpv6SnoopEnable_Type.__name__ = "Integer32"
_Dhcpv6SnoopEnable_Object = MibScalar
dhcpv6SnoopEnable = _Dhcpv6SnoopEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 1, 1),
    _Dhcpv6SnoopEnable_Type()
)
dhcpv6SnoopEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopEnable.setStatus("current")


class _Dhcpv6SnoopAutoSaveInterval_Type(Integer32):
    """Custom type dhcpv6SnoopAutoSaveInterval based on Integer32"""
    defaultValue = 600

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15, 1200),
    )


_Dhcpv6SnoopAutoSaveInterval_Type.__name__ = "Integer32"
_Dhcpv6SnoopAutoSaveInterval_Object = MibScalar
dhcpv6SnoopAutoSaveInterval = _Dhcpv6SnoopAutoSaveInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 1, 2),
    _Dhcpv6SnoopAutoSaveInterval_Type()
)
dhcpv6SnoopAutoSaveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopAutoSaveInterval.setStatus("current")


class _Dhcpv6SnoopClearAllBinding_Type(TruthValue):
    """Custom type dhcpv6SnoopClearAllBinding based on TruthValue"""
    defaultValue = 2


_Dhcpv6SnoopClearAllBinding_Type.__name__ = "TruthValue"
_Dhcpv6SnoopClearAllBinding_Object = MibScalar
dhcpv6SnoopClearAllBinding = _Dhcpv6SnoopClearAllBinding_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 1, 3),
    _Dhcpv6SnoopClearAllBinding_Type()
)
dhcpv6SnoopClearAllBinding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopClearAllBinding.setStatus("current")
_Dhcpv6SnoopVlanTable_Object = MibTable
dhcpv6SnoopVlanTable = _Dhcpv6SnoopVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 2)
)
if mibBuilder.loadTexts:
    dhcpv6SnoopVlanTable.setStatus("current")
_Dhcpv6SnoopVlanEntry_Object = MibTableRow
dhcpv6SnoopVlanEntry = _Dhcpv6SnoopVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 2, 1)
)
dhcpv6SnoopVlanEntry.setIndexNames(
    (0, "SWITCH", "dhcpv6SnoopVlanIndex"),
)
if mibBuilder.loadTexts:
    dhcpv6SnoopVlanEntry.setStatus("current")


class _Dhcpv6SnoopVlanIndex_Type(Integer32):
    """Custom type dhcpv6SnoopVlanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_Dhcpv6SnoopVlanIndex_Type.__name__ = "Integer32"
_Dhcpv6SnoopVlanIndex_Object = MibTableColumn
dhcpv6SnoopVlanIndex = _Dhcpv6SnoopVlanIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 2, 1, 1),
    _Dhcpv6SnoopVlanIndex_Type()
)
dhcpv6SnoopVlanIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpv6SnoopVlanIndex.setStatus("current")


class _Dhcpv6SnoopVlanEnable_Type(TruthValue):
    """Custom type dhcpv6SnoopVlanEnable based on TruthValue"""
    defaultValue = 2


_Dhcpv6SnoopVlanEnable_Type.__name__ = "TruthValue"
_Dhcpv6SnoopVlanEnable_Object = MibTableColumn
dhcpv6SnoopVlanEnable = _Dhcpv6SnoopVlanEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 2, 1, 2),
    _Dhcpv6SnoopVlanEnable_Type()
)
dhcpv6SnoopVlanEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopVlanEnable.setStatus("current")
_Dhcpv6SnoopBindingTable_Object = MibTable
dhcpv6SnoopBindingTable = _Dhcpv6SnoopBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3)
)
if mibBuilder.loadTexts:
    dhcpv6SnoopBindingTable.setStatus("current")
_Dhcpv6SnoopBindingEntry_Object = MibTableRow
dhcpv6SnoopBindingEntry = _Dhcpv6SnoopBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1)
)
dhcpv6SnoopBindingEntry.setIndexNames(
    (0, "SWITCH", "dhcpv6SnoopClientVlan"),
    (0, "SWITCH", "dhcpv6SnoopClientMacAddress"),
)
if mibBuilder.loadTexts:
    dhcpv6SnoopBindingEntry.setStatus("current")
_Dhcpv6SnoopClientVlan_Type = Integer32
_Dhcpv6SnoopClientVlan_Object = MibTableColumn
dhcpv6SnoopClientVlan = _Dhcpv6SnoopClientVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 1),
    _Dhcpv6SnoopClientVlan_Type()
)
dhcpv6SnoopClientVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientVlan.setStatus("current")
_Dhcpv6SnoopClientMacAddress_Type = MacAddress
_Dhcpv6SnoopClientMacAddress_Object = MibTableColumn
dhcpv6SnoopClientMacAddress = _Dhcpv6SnoopClientMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 2),
    _Dhcpv6SnoopClientMacAddress_Type()
)
dhcpv6SnoopClientMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientMacAddress.setStatus("current")
_Dhcpv6SnoopClientIpAddressType_Type = InetAddressType
_Dhcpv6SnoopClientIpAddressType_Object = MibTableColumn
dhcpv6SnoopClientIpAddressType = _Dhcpv6SnoopClientIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 3),
    _Dhcpv6SnoopClientIpAddressType_Type()
)
dhcpv6SnoopClientIpAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientIpAddressType.setStatus("current")
_Dhcpv6SnoopClientIpAddress_Type = InetAddress
_Dhcpv6SnoopClientIpAddress_Object = MibTableColumn
dhcpv6SnoopClientIpAddress = _Dhcpv6SnoopClientIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 4),
    _Dhcpv6SnoopClientIpAddress_Type()
)
dhcpv6SnoopClientIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientIpAddress.setStatus("current")
_Dhcpv6SnoopClientIfindex_Type = Integer32
_Dhcpv6SnoopClientIfindex_Object = MibTableColumn
dhcpv6SnoopClientIfindex = _Dhcpv6SnoopClientIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 5),
    _Dhcpv6SnoopClientIfindex_Type()
)
dhcpv6SnoopClientIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientIfindex.setStatus("current")
_Dhcpv6SnoopClientExpiry_Type = Integer32
_Dhcpv6SnoopClientExpiry_Object = MibTableColumn
dhcpv6SnoopClientExpiry = _Dhcpv6SnoopClientExpiry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 6),
    _Dhcpv6SnoopClientExpiry_Type()
)
dhcpv6SnoopClientExpiry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientExpiry.setStatus("current")
_Dhcpv6SnoopClientRowStatus_Type = RowStatus
_Dhcpv6SnoopClientRowStatus_Object = MibTableColumn
dhcpv6SnoopClientRowStatus = _Dhcpv6SnoopClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 3, 1, 7),
    _Dhcpv6SnoopClientRowStatus_Type()
)
dhcpv6SnoopClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpv6SnoopClientRowStatus.setStatus("current")
_Dhcpv6SnoopTrustTable_Object = MibTable
dhcpv6SnoopTrustTable = _Dhcpv6SnoopTrustTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 4)
)
if mibBuilder.loadTexts:
    dhcpv6SnoopTrustTable.setStatus("current")
_Dhcpv6SnoopTrustEntry_Object = MibTableRow
dhcpv6SnoopTrustEntry = _Dhcpv6SnoopTrustEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 4, 1)
)
dhcpv6SnoopTrustEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    dhcpv6SnoopTrustEntry.setStatus("current")


class _Dhcpv6SnoopTrust_Type(Integer32):
    """Custom type dhcpv6SnoopTrust based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trusted", 1),
          ("untrusted", 2))
    )


_Dhcpv6SnoopTrust_Type.__name__ = "Integer32"
_Dhcpv6SnoopTrust_Object = MibTableColumn
dhcpv6SnoopTrust = _Dhcpv6SnoopTrust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 4, 1, 1),
    _Dhcpv6SnoopTrust_Type()
)
dhcpv6SnoopTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopTrust.setStatus("current")
_Dhcpv6SnoopStatisticsGroup_ObjectIdentity = ObjectIdentity
dhcpv6SnoopStatisticsGroup = _Dhcpv6SnoopStatisticsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5)
)
_Dhcpv6SnoopDHCPv6PktNum_Type = Unsigned32
_Dhcpv6SnoopDHCPv6PktNum_Object = MibScalar
dhcpv6SnoopDHCPv6PktNum = _Dhcpv6SnoopDHCPv6PktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5, 1),
    _Dhcpv6SnoopDHCPv6PktNum_Type()
)
dhcpv6SnoopDHCPv6PktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6SnoopDHCPv6PktNum.setStatus("current")
_Dhcpv6SnoopFwdPktNum_Type = Unsigned32
_Dhcpv6SnoopFwdPktNum_Object = MibScalar
dhcpv6SnoopFwdPktNum = _Dhcpv6SnoopFwdPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5, 2),
    _Dhcpv6SnoopFwdPktNum_Type()
)
dhcpv6SnoopFwdPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6SnoopFwdPktNum.setStatus("current")
_Dhcpv6SnoopInvalidPktNum_Type = Unsigned32
_Dhcpv6SnoopInvalidPktNum_Object = MibScalar
dhcpv6SnoopInvalidPktNum = _Dhcpv6SnoopInvalidPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5, 3),
    _Dhcpv6SnoopInvalidPktNum_Type()
)
dhcpv6SnoopInvalidPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6SnoopInvalidPktNum.setStatus("current")
_Dhcpv6SnoopDroppedPktNum_Type = Unsigned32
_Dhcpv6SnoopDroppedPktNum_Object = MibScalar
dhcpv6SnoopDroppedPktNum = _Dhcpv6SnoopDroppedPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5, 4),
    _Dhcpv6SnoopDroppedPktNum_Type()
)
dhcpv6SnoopDroppedPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6SnoopDroppedPktNum.setStatus("current")
_Dhcpv6SnoopStatisticsReset_Type = TruthValue
_Dhcpv6SnoopStatisticsReset_Object = MibScalar
dhcpv6SnoopStatisticsReset = _Dhcpv6SnoopStatisticsReset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 7, 5, 64),
    _Dhcpv6SnoopStatisticsReset_Type()
)
dhcpv6SnoopStatisticsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6SnoopStatisticsReset.setStatus("current")
_Dhcpv6Relay_ObjectIdentity = ObjectIdentity
dhcpv6Relay = _Dhcpv6Relay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8)
)
_Dhcpv6RGlobal_ObjectIdentity = ObjectIdentity
dhcpv6RGlobal = _Dhcpv6RGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 1)
)


class _Dhcpv6REnable_Type(Integer32):
    """Custom type dhcpv6REnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_Dhcpv6REnable_Type.__name__ = "Integer32"
_Dhcpv6REnable_Object = MibScalar
dhcpv6REnable = _Dhcpv6REnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 1, 1),
    _Dhcpv6REnable_Type()
)
dhcpv6REnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6REnable.setStatus("current")
_Dhcpv6RServer_ObjectIdentity = ObjectIdentity
dhcpv6RServer = _Dhcpv6RServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2)
)
_Dhcpv6RIpToGroupTable_Object = MibTable
dhcpv6RIpToGroupTable = _Dhcpv6RIpToGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 1)
)
if mibBuilder.loadTexts:
    dhcpv6RIpToGroupTable.setStatus("current")
_Dhcpv6RIpToGroupEntry_Object = MibTableRow
dhcpv6RIpToGroupEntry = _Dhcpv6RIpToGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 1, 1)
)
dhcpv6RIpToGroupEntry.setIndexNames(
    (0, "SWITCH", "dhcpv6RIpToGroupGroupId"),
)
if mibBuilder.loadTexts:
    dhcpv6RIpToGroupEntry.setStatus("current")


class _Dhcpv6RIpToGroupGroupId_Type(Integer32):
    """Custom type dhcpv6RIpToGroupGroupId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_Dhcpv6RIpToGroupGroupId_Type.__name__ = "Integer32"
_Dhcpv6RIpToGroupGroupId_Object = MibTableColumn
dhcpv6RIpToGroupGroupId = _Dhcpv6RIpToGroupGroupId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 1, 1, 1),
    _Dhcpv6RIpToGroupGroupId_Type()
)
dhcpv6RIpToGroupGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpv6RIpToGroupGroupId.setStatus("current")


class _Dhcpv6RIpToGroupServerIpIf_Type(OctetString):
    """Custom type dhcpv6RIpToGroupServerIpIf based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_Dhcpv6RIpToGroupServerIpIf_Type.__name__ = "OctetString"
_Dhcpv6RIpToGroupServerIpIf_Object = MibTableColumn
dhcpv6RIpToGroupServerIpIf = _Dhcpv6RIpToGroupServerIpIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 1, 1, 2),
    _Dhcpv6RIpToGroupServerIpIf_Type()
)
dhcpv6RIpToGroupServerIpIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RIpToGroupServerIpIf.setStatus("current")
_Dhcpv6RIpToGroupRowStatus_Type = RowStatus
_Dhcpv6RIpToGroupRowStatus_Object = MibTableColumn
dhcpv6RIpToGroupRowStatus = _Dhcpv6RIpToGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 1, 1, 3),
    _Dhcpv6RIpToGroupRowStatus_Type()
)
dhcpv6RIpToGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dhcpv6RIpToGroupRowStatus.setStatus("current")
_Dhcpv6RIfSelectTable_Object = MibTable
dhcpv6RIfSelectTable = _Dhcpv6RIfSelectTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 2)
)
if mibBuilder.loadTexts:
    dhcpv6RIfSelectTable.setStatus("current")
_Dhcpv6RIfSelectEntry_Object = MibTableRow
dhcpv6RIfSelectEntry = _Dhcpv6RIfSelectEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 2, 1)
)
dhcpv6RIfSelectEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    dhcpv6RIfSelectEntry.setStatus("current")


class _Dhcpv6RIfSelectserver_Type(Integer32):
    """Custom type dhcpv6RIfSelectserver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_Dhcpv6RIfSelectserver_Type.__name__ = "Integer32"
_Dhcpv6RIfSelectserver_Object = MibTableColumn
dhcpv6RIfSelectserver = _Dhcpv6RIfSelectserver_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 2, 2, 1, 1),
    _Dhcpv6RIfSelectserver_Type()
)
dhcpv6RIfSelectserver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RIfSelectserver.setStatus("current")
_Dhcpv6ROption_ObjectIdentity = ObjectIdentity
dhcpv6ROption = _Dhcpv6ROption_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3)
)


class _Dhcpv6RRemoteid_Type(Integer32):
    """Custom type dhcpv6RRemoteid based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_Dhcpv6RRemoteid_Type.__name__ = "Integer32"
_Dhcpv6RRemoteid_Object = MibScalar
dhcpv6RRemoteid = _Dhcpv6RRemoteid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 1),
    _Dhcpv6RRemoteid_Type()
)
dhcpv6RRemoteid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RRemoteid.setStatus("current")


class _Dhcpv6RRemoteidFormatDuid_Type(TruthValue):
    """Custom type dhcpv6RRemoteidFormatDuid based on TruthValue"""
    defaultValue = 1


_Dhcpv6RRemoteidFormatDuid_Type.__name__ = "TruthValue"
_Dhcpv6RRemoteidFormatDuid_Object = MibScalar
dhcpv6RRemoteidFormatDuid = _Dhcpv6RRemoteidFormatDuid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 2),
    _Dhcpv6RRemoteidFormatDuid_Type()
)
dhcpv6RRemoteidFormatDuid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RRemoteidFormatDuid.setStatus("current")


class _Dhcpv6RRemoteidFormatIfname_Type(TruthValue):
    """Custom type dhcpv6RRemoteidFormatIfname based on TruthValue"""
    defaultValue = 1


_Dhcpv6RRemoteidFormatIfname_Type.__name__ = "TruthValue"
_Dhcpv6RRemoteidFormatIfname_Object = MibScalar
dhcpv6RRemoteidFormatIfname = _Dhcpv6RRemoteidFormatIfname_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 3),
    _Dhcpv6RRemoteidFormatIfname_Type()
)
dhcpv6RRemoteidFormatIfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RRemoteidFormatIfname.setStatus("current")


class _Dhcpv6RRemoteidFormatVlan_Type(TruthValue):
    """Custom type dhcpv6RRemoteidFormatVlan based on TruthValue"""
    defaultValue = 2


_Dhcpv6RRemoteidFormatVlan_Type.__name__ = "TruthValue"
_Dhcpv6RRemoteidFormatVlan_Object = MibScalar
dhcpv6RRemoteidFormatVlan = _Dhcpv6RRemoteidFormatVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 4),
    _Dhcpv6RRemoteidFormatVlan_Type()
)
dhcpv6RRemoteidFormatVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RRemoteidFormatVlan.setStatus("current")


class _Dhcpv6RPDrouteEnable_Type(Integer32):
    """Custom type dhcpv6RPDrouteEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_Dhcpv6RPDrouteEnable_Type.__name__ = "Integer32"
_Dhcpv6RPDrouteEnable_Object = MibScalar
dhcpv6RPDrouteEnable = _Dhcpv6RPDrouteEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 5),
    _Dhcpv6RPDrouteEnable_Type()
)
dhcpv6RPDrouteEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteEnable.setStatus("current")


class _Dhcpv6RPDrouteDistance_Type(Integer32):
    """Custom type dhcpv6RPDrouteDistance based on Integer32"""
    defaultValue = 254

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_Dhcpv6RPDrouteDistance_Type.__name__ = "Integer32"
_Dhcpv6RPDrouteDistance_Object = MibScalar
dhcpv6RPDrouteDistance = _Dhcpv6RPDrouteDistance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 6),
    _Dhcpv6RPDrouteDistance_Type()
)
dhcpv6RPDrouteDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteDistance.setStatus("current")
_Dhcpv6RPDrouteAllClear_Type = TruthValue
_Dhcpv6RPDrouteAllClear_Object = MibScalar
dhcpv6RPDrouteAllClear = _Dhcpv6RPDrouteAllClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 7),
    _Dhcpv6RPDrouteAllClear_Type()
)
dhcpv6RPDrouteAllClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteAllClear.setStatus("current")
_Dhcpv6RPDrouteTable_Object = MibTable
dhcpv6RPDrouteTable = _Dhcpv6RPDrouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8)
)
if mibBuilder.loadTexts:
    dhcpv6RPDrouteTable.setStatus("current")
_Dhcpv6RPDrouteEntry_Object = MibTableRow
dhcpv6RPDrouteEntry = _Dhcpv6RPDrouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1)
)
dhcpv6RPDrouteEntry.setIndexNames(
    (0, "SWITCH", "dhcpv6RPDrouteId"),
)
if mibBuilder.loadTexts:
    dhcpv6RPDrouteEntry.setStatus("current")
_Dhcpv6RPDrouteId_Type = Unsigned32
_Dhcpv6RPDrouteId_Object = MibTableColumn
dhcpv6RPDrouteId = _Dhcpv6RPDrouteId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 1),
    _Dhcpv6RPDrouteId_Type()
)
dhcpv6RPDrouteId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteId.setStatus("current")
_Dhcpv6RPDrouteIf_Type = Integer32
_Dhcpv6RPDrouteIf_Object = MibTableColumn
dhcpv6RPDrouteIf = _Dhcpv6RPDrouteIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 2),
    _Dhcpv6RPDrouteIf_Type()
)
dhcpv6RPDrouteIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteIf.setStatus("current")


class _Dhcpv6RPDrouteClientIp_Type(OctetString):
    """Custom type dhcpv6RPDrouteClientIp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_Dhcpv6RPDrouteClientIp_Type.__name__ = "OctetString"
_Dhcpv6RPDrouteClientIp_Object = MibTableColumn
dhcpv6RPDrouteClientIp = _Dhcpv6RPDrouteClientIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 3),
    _Dhcpv6RPDrouteClientIp_Type()
)
dhcpv6RPDrouteClientIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteClientIp.setStatus("current")


class _Dhcpv6RPDroutePrefix_Type(OctetString):
    """Custom type dhcpv6RPDroutePrefix based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 42),
    )


_Dhcpv6RPDroutePrefix_Type.__name__ = "OctetString"
_Dhcpv6RPDroutePrefix_Object = MibTableColumn
dhcpv6RPDroutePrefix = _Dhcpv6RPDroutePrefix_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 4),
    _Dhcpv6RPDroutePrefix_Type()
)
dhcpv6RPDroutePrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RPDroutePrefix.setStatus("current")
_Dhcpv6RPDrouteExpiry_Type = Unsigned32
_Dhcpv6RPDrouteExpiry_Object = MibTableColumn
dhcpv6RPDrouteExpiry = _Dhcpv6RPDrouteExpiry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 5),
    _Dhcpv6RPDrouteExpiry_Type()
)
dhcpv6RPDrouteExpiry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteExpiry.setStatus("current")
_Dhcpv6RPDrouteRowStatus_Type = RowStatus
_Dhcpv6RPDrouteRowStatus_Object = MibTableColumn
dhcpv6RPDrouteRowStatus = _Dhcpv6RPDrouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 3, 8, 1, 6),
    _Dhcpv6RPDrouteRowStatus_Type()
)
dhcpv6RPDrouteRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RPDrouteRowStatus.setStatus("current")
_Dhcpv6RStatisticsGroup_ObjectIdentity = ObjectIdentity
dhcpv6RStatisticsGroup = _Dhcpv6RStatisticsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4)
)
_Dhcpv6RRxClientPktNum_Type = Unsigned32
_Dhcpv6RRxClientPktNum_Object = MibScalar
dhcpv6RRxClientPktNum = _Dhcpv6RRxClientPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4, 1),
    _Dhcpv6RRxClientPktNum_Type()
)
dhcpv6RRxClientPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RRxClientPktNum.setStatus("current")
_Dhcpv6RRxServerPktNum_Type = Unsigned32
_Dhcpv6RRxServerPktNum_Object = MibScalar
dhcpv6RRxServerPktNum = _Dhcpv6RRxServerPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4, 2),
    _Dhcpv6RRxServerPktNum_Type()
)
dhcpv6RRxServerPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RRxServerPktNum.setStatus("current")
_Dhcpv6RRxClientErrPktNum_Type = Unsigned32
_Dhcpv6RRxClientErrPktNum_Object = MibScalar
dhcpv6RRxClientErrPktNum = _Dhcpv6RRxClientErrPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4, 3),
    _Dhcpv6RRxClientErrPktNum_Type()
)
dhcpv6RRxClientErrPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RRxClientErrPktNum.setStatus("current")
_Dhcpv6RRxServerErrPktNum_Type = Unsigned32
_Dhcpv6RRxServerErrPktNum_Object = MibScalar
dhcpv6RRxServerErrPktNum = _Dhcpv6RRxServerErrPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4, 4),
    _Dhcpv6RRxServerErrPktNum_Type()
)
dhcpv6RRxServerErrPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpv6RRxServerErrPktNum.setStatus("current")
_Dhcpv6RStatisticsReset_Type = TruthValue
_Dhcpv6RStatisticsReset_Object = MibScalar
dhcpv6RStatisticsReset = _Dhcpv6RStatisticsReset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 36, 8, 4, 64),
    _Dhcpv6RStatisticsReset_Type()
)
dhcpv6RStatisticsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpv6RStatisticsReset.setStatus("current")
_LswdevMMib_ObjectIdentity = ObjectIdentity
lswdevMMib = _LswdevMMib_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 37)
)
_LswdevMMibObject_ObjectIdentity = ObjectIdentity
lswdevMMibObject = _LswdevMMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1)
)
if mibBuilder.loadTexts:
    lswdevMMibObject.setStatus("current")
_DevMFanMibObject_ObjectIdentity = ObjectIdentity
devMFanMibObject = _DevMFanMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1)
)
_DevMFanStatusTable_Object = MibTable
devMFanStatusTable = _DevMFanStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1)
)
if mibBuilder.loadTexts:
    devMFanStatusTable.setStatus("current")
_DevMFanStatusEntry_Object = MibTableRow
devMFanStatusEntry = _DevMFanStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1)
)
devMFanStatusEntry.setIndexNames(
    (0, "SWITCH", "devMFanPosition"),
    (0, "SWITCH", "devMFanModuleId"),
    (0, "SWITCH", "devMFanIndex"),
)
if mibBuilder.loadTexts:
    devMFanStatusEntry.setStatus("current")


class _DevMFanPosition_Type(Integer32):
    """Custom type devMFanPosition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("left", 2),
          ("right", 3))
    )


_DevMFanPosition_Type.__name__ = "Integer32"
_DevMFanPosition_Object = MibTableColumn
devMFanPosition = _DevMFanPosition_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 1),
    _DevMFanPosition_Type()
)
devMFanPosition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanPosition.setStatus("current")
_DevMFanModuleId_Type = Integer32
_DevMFanModuleId_Object = MibTableColumn
devMFanModuleId = _DevMFanModuleId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 2),
    _DevMFanModuleId_Type()
)
devMFanModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanModuleId.setStatus("current")


class _DevMFanIndex_Type(Integer32):
    """Custom type devMFanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 18),
    )


_DevMFanIndex_Type.__name__ = "Integer32"
_DevMFanIndex_Object = MibTableColumn
devMFanIndex = _DevMFanIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 3),
    _DevMFanIndex_Type()
)
devMFanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanIndex.setStatus("current")


class _DevMFanStatus_Type(Integer32):
    """Custom type devMFanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("deactive", 2),
          ("notInstall", 3),
          ("unsupport", 4))
    )


_DevMFanStatus_Type.__name__ = "Integer32"
_DevMFanStatus_Object = MibTableColumn
devMFanStatus = _DevMFanStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 4),
    _DevMFanStatus_Type()
)
devMFanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanStatus.setStatus("current")
_DevMFanSpeed_Type = OctetString
_DevMFanSpeed_Object = MibTableColumn
devMFanSpeed = _DevMFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 5),
    _DevMFanSpeed_Type()
)
devMFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanSpeed.setStatus("current")


class _DevMFanLowSpeed_Type(Integer32):
    """Custom type devMFanLowSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DevMFanLowSpeed_Type.__name__ = "Integer32"
_DevMFanLowSpeed_Object = MibTableColumn
devMFanLowSpeed = _DevMFanLowSpeed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 6),
    _DevMFanLowSpeed_Type()
)
devMFanLowSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanLowSpeed.setStatus("obsolete")


class _DevMFanHighSpeed_Type(Integer32):
    """Custom type devMFanHighSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DevMFanHighSpeed_Type.__name__ = "Integer32"
_DevMFanHighSpeed_Object = MibTableColumn
devMFanHighSpeed = _DevMFanHighSpeed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 7),
    _DevMFanHighSpeed_Type()
)
devMFanHighSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanHighSpeed.setStatus("obsolete")


class _DevMFanSpeedAdjust_Type(Integer32):
    """Custom type devMFanSpeedAdjust based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("unsupport", 0),
          ("support", 1))
    )


_DevMFanSpeedAdjust_Type.__name__ = "Integer32"
_DevMFanSpeedAdjust_Object = MibTableColumn
devMFanSpeedAdjust = _DevMFanSpeedAdjust_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 8),
    _DevMFanSpeedAdjust_Type()
)
devMFanSpeedAdjust.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanSpeedAdjust.setStatus("current")
_DevMFanSetSpeed_Type = Integer32
_DevMFanSetSpeed_Object = MibTableColumn
devMFanSetSpeed = _DevMFanSetSpeed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 1, 1, 1, 9),
    _DevMFanSetSpeed_Type()
)
devMFanSetSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMFanSetSpeed.setStatus("current")
_DevMPowerStatusTable_Object = MibTable
devMPowerStatusTable = _DevMPowerStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2)
)
if mibBuilder.loadTexts:
    devMPowerStatusTable.setStatus("current")
_DevMPowerStatusEntry_Object = MibTableRow
devMPowerStatusEntry = _DevMPowerStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1)
)
devMPowerStatusEntry.setIndexNames(
    (0, "SWITCH", "devMPowerIndex"),
)
if mibBuilder.loadTexts:
    devMPowerStatusEntry.setStatus("current")


class _DevMPowerIndex_Type(Integer32):
    """Custom type devMPowerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_DevMPowerIndex_Type.__name__ = "Integer32"
_DevMPowerIndex_Object = MibTableColumn
devMPowerIndex = _DevMPowerIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 1),
    _DevMPowerIndex_Type()
)
devMPowerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    devMPowerIndex.setStatus("current")


class _DevMPowerStatus_Type(Integer32):
    """Custom type devMPowerStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("present", 1),
          ("absent", 2),
          ("unsupport", 3))
    )


_DevMPowerStatus_Type.__name__ = "Integer32"
_DevMPowerStatus_Object = MibTableColumn
devMPowerStatus = _DevMPowerStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 2),
    _DevMPowerStatus_Type()
)
devMPowerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerStatus.setStatus("current")


class _DevMPowerWorkStatus_Type(Integer32):
    """Custom type devMPowerWorkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("deactive", 2),
          ("notInstall", 3),
          ("unsupport", 4))
    )


_DevMPowerWorkStatus_Type.__name__ = "Integer32"
_DevMPowerWorkStatus_Object = MibTableColumn
devMPowerWorkStatus = _DevMPowerWorkStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 3),
    _DevMPowerWorkStatus_Type()
)
devMPowerWorkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerWorkStatus.setStatus("current")


class _DevMPowerType_Type(Integer32):
    """Custom type devMPowerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ac", 1),
          ("dc", 2),
          ("unknow", 3),
          ("notInstall", 4),
          ("unsupport", 5))
    )


_DevMPowerType_Type.__name__ = "Integer32"
_DevMPowerType_Object = MibTableColumn
devMPowerType = _DevMPowerType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 4),
    _DevMPowerType_Type()
)
devMPowerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerType.setStatus("current")


class _DevMPowerFanStatus_Type(Integer32):
    """Custom type devMPowerFanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("deactive", 2),
          ("notInstall", 3),
          ("unsupport", 4))
    )


_DevMPowerFanStatus_Type.__name__ = "Integer32"
_DevMPowerFanStatus_Object = MibTableColumn
devMPowerFanStatus = _DevMPowerFanStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 5),
    _DevMPowerFanStatus_Type()
)
devMPowerFanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerFanStatus.setStatus("obsolete")


class _DevMPowerControlStatus_Type(Integer32):
    """Custom type devMPowerControlStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("down", 2),
          ("uninstall", 3),
          ("unsupported", 4))
    )


_DevMPowerControlStatus_Type.__name__ = "Integer32"
_DevMPowerControlStatus_Object = MibTableColumn
devMPowerControlStatus = _DevMPowerControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 6),
    _DevMPowerControlStatus_Type()
)
devMPowerControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerControlStatus.setStatus("obsolete")


class _DevMPowerAlertStatus_Type(Integer32):
    """Custom type devMPowerAlertStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noAlert", 1),
          ("alert", 2),
          ("unsupported", 3))
    )


_DevMPowerAlertStatus_Type.__name__ = "Integer32"
_DevMPowerAlertStatus_Object = MibTableColumn
devMPowerAlertStatus = _DevMPowerAlertStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 2, 1, 7),
    _DevMPowerAlertStatus_Type()
)
devMPowerAlertStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMPowerAlertStatus.setStatus("current")
_DevMSlotEnvironmentTable_Object = MibTable
devMSlotEnvironmentTable = _DevMSlotEnvironmentTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3)
)
if mibBuilder.loadTexts:
    devMSlotEnvironmentTable.setStatus("current")
_DevMSlotEnvironmentEntry_Object = MibTableRow
devMSlotEnvironmentEntry = _DevMSlotEnvironmentEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1)
)
devMSlotEnvironmentEntry.setIndexNames(
    (0, "SWITCH", "devMSlotEnvironmentType"),
    (0, "SWITCH", "devMSlotEnvironmentSlot"),
    (0, "SWITCH", "devMSlotEnvironmentIndex"),
)
if mibBuilder.loadTexts:
    devMSlotEnvironmentEntry.setStatus("current")


class _DevMSlotEnvironmentType_Type(Integer32):
    """Custom type devMSlotEnvironmentType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("temperature", 1),
          ("humidity", 2),
          ("fog", 3))
    )


_DevMSlotEnvironmentType_Type.__name__ = "Integer32"
_DevMSlotEnvironmentType_Object = MibTableColumn
devMSlotEnvironmentType = _DevMSlotEnvironmentType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 1),
    _DevMSlotEnvironmentType_Type()
)
devMSlotEnvironmentType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    devMSlotEnvironmentType.setStatus("current")
_DevMSlotEnvironmentSlot_Type = Integer32
_DevMSlotEnvironmentSlot_Object = MibTableColumn
devMSlotEnvironmentSlot = _DevMSlotEnvironmentSlot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 2),
    _DevMSlotEnvironmentSlot_Type()
)
devMSlotEnvironmentSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    devMSlotEnvironmentSlot.setStatus("current")
_DevMSlotEnvironmentIndex_Type = Integer32
_DevMSlotEnvironmentIndex_Object = MibTableColumn
devMSlotEnvironmentIndex = _DevMSlotEnvironmentIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 3),
    _DevMSlotEnvironmentIndex_Type()
)
devMSlotEnvironmentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    devMSlotEnvironmentIndex.setStatus("current")
_DevMSlotEnvironmentValue_Type = Integer32
_DevMSlotEnvironmentValue_Object = MibTableColumn
devMSlotEnvironmentValue = _DevMSlotEnvironmentValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 4),
    _DevMSlotEnvironmentValue_Type()
)
devMSlotEnvironmentValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devMSlotEnvironmentValue.setStatus("current")


class _DevMSlotEnvironmentCriticalLimit_Type(Integer32):
    """Custom type devMSlotEnvironmentCriticalLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(55, 90),
    )


_DevMSlotEnvironmentCriticalLimit_Type.__name__ = "Integer32"
_DevMSlotEnvironmentCriticalLimit_Object = MibTableColumn
devMSlotEnvironmentCriticalLimit = _DevMSlotEnvironmentCriticalLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 5),
    _DevMSlotEnvironmentCriticalLimit_Type()
)
devMSlotEnvironmentCriticalLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    devMSlotEnvironmentCriticalLimit.setStatus("current")


class _DevMSlotEnvironmentUpperLimit_Type(Integer32):
    """Custom type devMSlotEnvironmentUpperLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 85),
    )


_DevMSlotEnvironmentUpperLimit_Type.__name__ = "Integer32"
_DevMSlotEnvironmentUpperLimit_Object = MibTableColumn
devMSlotEnvironmentUpperLimit = _DevMSlotEnvironmentUpperLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 6),
    _DevMSlotEnvironmentUpperLimit_Type()
)
devMSlotEnvironmentUpperLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    devMSlotEnvironmentUpperLimit.setStatus("current")


class _DevMSlotEnvironmentLowerLimit_Type(Integer32):
    """Custom type devMSlotEnvironmentLowerLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-15, 50),
    )


_DevMSlotEnvironmentLowerLimit_Type.__name__ = "Integer32"
_DevMSlotEnvironmentLowerLimit_Object = MibTableColumn
devMSlotEnvironmentLowerLimit = _DevMSlotEnvironmentLowerLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 3, 1, 7),
    _DevMSlotEnvironmentLowerLimit_Type()
)
devMSlotEnvironmentLowerLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    devMSlotEnvironmentLowerLimit.setStatus("current")
_LswSlotTable_Object = MibTable
lswSlotTable = _LswSlotTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5)
)
if mibBuilder.loadTexts:
    lswSlotTable.setStatus("current")
_LswSlotEntry_Object = MibTableRow
lswSlotEntry = _LswSlotEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1)
)
lswSlotEntry.setIndexNames(
    (0, "SWITCH", "lswSlotFrameIndex"),
    (0, "SWITCH", "lswSlotIndex"),
)
if mibBuilder.loadTexts:
    lswSlotEntry.setStatus("current")


class _LswSlotFrameIndex_Type(Integer32):
    """Custom type lswSlotFrameIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_LswSlotFrameIndex_Type.__name__ = "Integer32"
_LswSlotFrameIndex_Object = MibTableColumn
lswSlotFrameIndex = _LswSlotFrameIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 1),
    _LswSlotFrameIndex_Type()
)
lswSlotFrameIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotFrameIndex.setStatus("current")


class _LswSlotIndex_Type(Integer32):
    """Custom type lswSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_LswSlotIndex_Type.__name__ = "Integer32"
_LswSlotIndex_Object = MibTableColumn
lswSlotIndex = _LswSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 2),
    _LswSlotIndex_Type()
)
lswSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotIndex.setStatus("current")


class _LswSlotConfigType_Type(OctetString):
    """Custom type lswSlotConfigType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotConfigType_Type.__name__ = "OctetString"
_LswSlotConfigType_Object = MibTableColumn
lswSlotConfigType = _LswSlotConfigType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 3),
    _LswSlotConfigType_Type()
)
lswSlotConfigType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotConfigType.setStatus("current")


class _LswSlotCurrentType_Type(OctetString):
    """Custom type lswSlotCurrentType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotCurrentType_Type.__name__ = "OctetString"
_LswSlotCurrentType_Object = MibTableColumn
lswSlotCurrentType = _LswSlotCurrentType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 4),
    _LswSlotCurrentType_Type()
)
lswSlotCurrentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotCurrentType.setStatus("current")


class _LswSlotStatus_Type(OctetString):
    """Custom type lswSlotStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotStatus_Type.__name__ = "OctetString"
_LswSlotStatus_Object = MibTableColumn
lswSlotStatus = _LswSlotStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 5),
    _LswSlotStatus_Type()
)
lswSlotStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotStatus.setStatus("current")


class _LswSlotSupStatus_Type(OctetString):
    """Custom type lswSlotSupStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotSupStatus_Type.__name__ = "OctetString"
_LswSlotSupStatus_Object = MibTableColumn
lswSlotSupStatus = _LswSlotSupStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 6),
    _LswSlotSupStatus_Type()
)
lswSlotSupStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotSupStatus.setStatus("current")
_LswSlotPortNumber_Type = Integer32
_LswSlotPortNumber_Object = MibTableColumn
lswSlotPortNumber = _LswSlotPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 7),
    _LswSlotPortNumber_Type()
)
lswSlotPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotPortNumber.setStatus("current")


class _LswSlotHwVer_Type(OctetString):
    """Custom type lswSlotHwVer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotHwVer_Type.__name__ = "OctetString"
_LswSlotHwVer_Object = MibTableColumn
lswSlotHwVer = _LswSlotHwVer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 8),
    _LswSlotHwVer_Type()
)
lswSlotHwVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotHwVer.setStatus("current")


class _LswSlotRom_Type(OctetString):
    """Custom type lswSlotRom based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_LswSlotRom_Type.__name__ = "OctetString"
_LswSlotRom_Object = MibTableColumn
lswSlotRom = _LswSlotRom_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 9),
    _LswSlotRom_Type()
)
lswSlotRom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotRom.setStatus("current")


class _LswSlotSerialNo_Type(OctetString):
    """Custom type lswSlotSerialNo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LswSlotSerialNo_Type.__name__ = "OctetString"
_LswSlotSerialNo_Object = MibTableColumn
lswSlotSerialNo = _LswSlotSerialNo_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 5, 1, 10),
    _LswSlotSerialNo_Type()
)
lswSlotSerialNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lswSlotSerialNo.setStatus("current")


class _LswDiagnosticBootupLevel_Type(Integer32):
    """Custom type lswDiagnosticBootupLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noDiagnostic", 1),
          ("minimal", 2),
          ("complete", 3))
    )


_LswDiagnosticBootupLevel_Type.__name__ = "Integer32"
_LswDiagnosticBootupLevel_Object = MibScalar
lswDiagnosticBootupLevel = _LswDiagnosticBootupLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 7),
    _LswDiagnosticBootupLevel_Type()
)
lswDiagnosticBootupLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lswDiagnosticBootupLevel.setStatus("current")
_Transinformation_ObjectIdentity = ObjectIdentity
transinformation = _Transinformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10)
)
if mibBuilder.loadTexts:
    transinformation.setStatus("current")
_TransbasicinformationTable_Object = MibTable
transbasicinformationTable = _TransbasicinformationTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1)
)
if mibBuilder.loadTexts:
    transbasicinformationTable.setStatus("current")
_TransbasicinformationEntry_Object = MibTableRow
transbasicinformationEntry = _TransbasicinformationEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1)
)
transbasicinformationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transbasicinformationEntry.setStatus("current")


class _TransceiveType_Type(OctetString):
    """Custom type transceiveType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceiveType_Type.__name__ = "OctetString"
_TransceiveType_Object = MibTableColumn
transceiveType = _TransceiveType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 1),
    _TransceiveType_Type()
)
transceiveType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveType.setStatus("current")


class _TransceiveVender_Type(OctetString):
    """Custom type transceiveVender based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceiveVender_Type.__name__ = "OctetString"
_TransceiveVender_Object = MibTableColumn
transceiveVender = _TransceiveVender_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 2),
    _TransceiveVender_Type()
)
transceiveVender.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveVender.setStatus("current")


class _TransceivePartNumber_Type(OctetString):
    """Custom type transceivePartNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceivePartNumber_Type.__name__ = "OctetString"
_TransceivePartNumber_Object = MibTableColumn
transceivePartNumber = _TransceivePartNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 3),
    _TransceivePartNumber_Type()
)
transceivePartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceivePartNumber.setStatus("current")


class _TransceiveSerialNumber_Type(OctetString):
    """Custom type transceiveSerialNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceiveSerialNumber_Type.__name__ = "OctetString"
_TransceiveSerialNumber_Object = MibTableColumn
transceiveSerialNumber = _TransceiveSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 4),
    _TransceiveSerialNumber_Type()
)
transceiveSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveSerialNumber.setStatus("current")


class _TransceiveWaveLength_Type(Integer32):
    """Custom type transceiveWaveLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TransceiveWaveLength_Type.__name__ = "Integer32"
_TransceiveWaveLength_Object = MibTableColumn
transceiveWaveLength = _TransceiveWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 5),
    _TransceiveWaveLength_Type()
)
transceiveWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveWaveLength.setStatus("current")


class _Link9SinglemodeLengthKm_Type(Integer32):
    """Custom type link9SinglemodeLengthKm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Link9SinglemodeLengthKm_Type.__name__ = "Integer32"
_Link9SinglemodeLengthKm_Object = MibTableColumn
link9SinglemodeLengthKm = _Link9SinglemodeLengthKm_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 6),
    _Link9SinglemodeLengthKm_Type()
)
link9SinglemodeLengthKm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    link9SinglemodeLengthKm.setStatus("current")


class _Link9SinglemodeLengthM_Type(Integer32):
    """Custom type link9SinglemodeLengthM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Link9SinglemodeLengthM_Type.__name__ = "Integer32"
_Link9SinglemodeLengthM_Object = MibTableColumn
link9SinglemodeLengthM = _Link9SinglemodeLengthM_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 7),
    _Link9SinglemodeLengthM_Type()
)
link9SinglemodeLengthM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    link9SinglemodeLengthM.setStatus("current")


class _Link50MultimodeLength_Type(Integer32):
    """Custom type link50MultimodeLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Link50MultimodeLength_Type.__name__ = "Integer32"
_Link50MultimodeLength_Object = MibTableColumn
link50MultimodeLength = _Link50MultimodeLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 8),
    _Link50MultimodeLength_Type()
)
link50MultimodeLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    link50MultimodeLength.setStatus("current")


class _Link62MultimodeLength_Type(Integer32):
    """Custom type link62MultimodeLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Link62MultimodeLength_Type.__name__ = "Integer32"
_Link62MultimodeLength_Object = MibTableColumn
link62MultimodeLength = _Link62MultimodeLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 9),
    _Link62MultimodeLength_Type()
)
link62MultimodeLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    link62MultimodeLength.setStatus("current")


class _LinkCopperLength_Type(Integer32):
    """Custom type linkCopperLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LinkCopperLength_Type.__name__ = "Integer32"
_LinkCopperLength_Object = MibTableColumn
linkCopperLength = _LinkCopperLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 10),
    _LinkCopperLength_Type()
)
linkCopperLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    linkCopperLength.setStatus("current")


class _TransceiveStatus_Type(OctetString):
    """Custom type transceiveStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceiveStatus_Type.__name__ = "OctetString"
_TransceiveStatus_Object = MibTableColumn
transceiveStatus = _TransceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 11),
    _TransceiveStatus_Type()
)
transceiveStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveStatus.setStatus("current")


class _TransceiveMointorStatus_Type(OctetString):
    """Custom type transceiveMointorStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TransceiveMointorStatus_Type.__name__ = "OctetString"
_TransceiveMointorStatus_Object = MibTableColumn
transceiveMointorStatus = _TransceiveMointorStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 1, 1, 12),
    _TransceiveMointorStatus_Type()
)
transceiveMointorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transceiveMointorStatus.setStatus("current")
_TransTemperinformationTable_Object = MibTable
transTemperinformationTable = _TransTemperinformationTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2)
)
if mibBuilder.loadTexts:
    transTemperinformationTable.setStatus("current")
_TransTemperinformationEntry_Object = MibTableRow
transTemperinformationEntry = _TransTemperinformationEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1)
)
transTemperinformationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transTemperinformationEntry.setStatus("current")


class _TemperHighAlarmThreshold_Type(OctetString):
    """Custom type temperHighAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TemperHighAlarmThreshold_Type.__name__ = "OctetString"
_TemperHighAlarmThreshold_Object = MibTableColumn
temperHighAlarmThreshold = _TemperHighAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1, 1),
    _TemperHighAlarmThreshold_Type()
)
temperHighAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperHighAlarmThreshold.setStatus("current")


class _TemperLowAlarmThreshold_Type(OctetString):
    """Custom type temperLowAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TemperLowAlarmThreshold_Type.__name__ = "OctetString"
_TemperLowAlarmThreshold_Object = MibTableColumn
temperLowAlarmThreshold = _TemperLowAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1, 2),
    _TemperLowAlarmThreshold_Type()
)
temperLowAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperLowAlarmThreshold.setStatus("current")


class _TemperHighWarnThreshold_Type(OctetString):
    """Custom type temperHighWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TemperHighWarnThreshold_Type.__name__ = "OctetString"
_TemperHighWarnThreshold_Object = MibTableColumn
temperHighWarnThreshold = _TemperHighWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1, 3),
    _TemperHighWarnThreshold_Type()
)
temperHighWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperHighWarnThreshold.setStatus("current")


class _TemperLowWarnThreshold_Type(OctetString):
    """Custom type temperLowWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TemperLowWarnThreshold_Type.__name__ = "OctetString"
_TemperLowWarnThreshold_Object = MibTableColumn
temperLowWarnThreshold = _TemperLowWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1, 4),
    _TemperLowWarnThreshold_Type()
)
temperLowWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperLowWarnThreshold.setStatus("current")


class _TemperCurrent_Type(OctetString):
    """Custom type temperCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TemperCurrent_Type.__name__ = "OctetString"
_TemperCurrent_Object = MibTableColumn
temperCurrent = _TemperCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 2, 1, 5),
    _TemperCurrent_Type()
)
temperCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    temperCurrent.setStatus("current")
_TransVoltageinformationTable_Object = MibTable
transVoltageinformationTable = _TransVoltageinformationTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3)
)
if mibBuilder.loadTexts:
    transVoltageinformationTable.setStatus("current")
_TransVoltageinformationEntry_Object = MibTableRow
transVoltageinformationEntry = _TransVoltageinformationEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1)
)
transVoltageinformationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transVoltageinformationEntry.setStatus("current")


class _VoltageHighAlarmThreshold_Type(OctetString):
    """Custom type voltageHighAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VoltageHighAlarmThreshold_Type.__name__ = "OctetString"
_VoltageHighAlarmThreshold_Object = MibTableColumn
voltageHighAlarmThreshold = _VoltageHighAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1, 1),
    _VoltageHighAlarmThreshold_Type()
)
voltageHighAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltageHighAlarmThreshold.setStatus("current")


class _VoltageLowAlarmThreshold_Type(OctetString):
    """Custom type voltageLowAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VoltageLowAlarmThreshold_Type.__name__ = "OctetString"
_VoltageLowAlarmThreshold_Object = MibTableColumn
voltageLowAlarmThreshold = _VoltageLowAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1, 2),
    _VoltageLowAlarmThreshold_Type()
)
voltageLowAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltageLowAlarmThreshold.setStatus("current")


class _VoltageHighWarnThreshold_Type(OctetString):
    """Custom type voltageHighWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VoltageHighWarnThreshold_Type.__name__ = "OctetString"
_VoltageHighWarnThreshold_Object = MibTableColumn
voltageHighWarnThreshold = _VoltageHighWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1, 3),
    _VoltageHighWarnThreshold_Type()
)
voltageHighWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltageHighWarnThreshold.setStatus("current")


class _VoltageLowWarnThreshold_Type(OctetString):
    """Custom type voltageLowWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VoltageLowWarnThreshold_Type.__name__ = "OctetString"
_VoltageLowWarnThreshold_Object = MibTableColumn
voltageLowWarnThreshold = _VoltageLowWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1, 4),
    _VoltageLowWarnThreshold_Type()
)
voltageLowWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltageLowWarnThreshold.setStatus("current")


class _VoltageCurrent_Type(OctetString):
    """Custom type voltageCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VoltageCurrent_Type.__name__ = "OctetString"
_VoltageCurrent_Object = MibTableColumn
voltageCurrent = _VoltageCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 3, 1, 5),
    _VoltageCurrent_Type()
)
voltageCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    voltageCurrent.setStatus("current")
_TransBiasinformationTable_Object = MibTable
transBiasinformationTable = _TransBiasinformationTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4)
)
if mibBuilder.loadTexts:
    transBiasinformationTable.setStatus("current")
_TransBiasinformationEntry_Object = MibTableRow
transBiasinformationEntry = _TransBiasinformationEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1)
)
transBiasinformationEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transBiasinformationEntry.setStatus("current")


class _BiasHighAlarmThreshold_Type(OctetString):
    """Custom type biasHighAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_BiasHighAlarmThreshold_Type.__name__ = "OctetString"
_BiasHighAlarmThreshold_Object = MibTableColumn
biasHighAlarmThreshold = _BiasHighAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1, 1),
    _BiasHighAlarmThreshold_Type()
)
biasHighAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasHighAlarmThreshold.setStatus("current")


class _BiasLowAlarmThreshold_Type(OctetString):
    """Custom type biasLowAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_BiasLowAlarmThreshold_Type.__name__ = "OctetString"
_BiasLowAlarmThreshold_Object = MibTableColumn
biasLowAlarmThreshold = _BiasLowAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1, 2),
    _BiasLowAlarmThreshold_Type()
)
biasLowAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasLowAlarmThreshold.setStatus("current")


class _BiasHighWarnThreshold_Type(OctetString):
    """Custom type biasHighWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_BiasHighWarnThreshold_Type.__name__ = "OctetString"
_BiasHighWarnThreshold_Object = MibTableColumn
biasHighWarnThreshold = _BiasHighWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1, 3),
    _BiasHighWarnThreshold_Type()
)
biasHighWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasHighWarnThreshold.setStatus("current")


class _BiasLowWarnThreshold_Type(OctetString):
    """Custom type biasLowWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_BiasLowWarnThreshold_Type.__name__ = "OctetString"
_BiasLowWarnThreshold_Object = MibTableColumn
biasLowWarnThreshold = _BiasLowWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1, 4),
    _BiasLowWarnThreshold_Type()
)
biasLowWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasLowWarnThreshold.setStatus("current")


class _BiasCurrent_Type(OctetString):
    """Custom type biasCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_BiasCurrent_Type.__name__ = "OctetString"
_BiasCurrent_Object = MibTableColumn
biasCurrent = _BiasCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 4, 1, 5),
    _BiasCurrent_Type()
)
biasCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    biasCurrent.setStatus("current")
_TransTransmitPowerTable_Object = MibTable
transTransmitPowerTable = _TransTransmitPowerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5)
)
if mibBuilder.loadTexts:
    transTransmitPowerTable.setStatus("current")
_TransTransmitPowerEntry_Object = MibTableRow
transTransmitPowerEntry = _TransTransmitPowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1)
)
transTransmitPowerEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transTransmitPowerEntry.setStatus("current")


class _TranspowerHighAlarmThreshold_Type(OctetString):
    """Custom type transpowerHighAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TranspowerHighAlarmThreshold_Type.__name__ = "OctetString"
_TranspowerHighAlarmThreshold_Object = MibTableColumn
transpowerHighAlarmThreshold = _TranspowerHighAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1, 1),
    _TranspowerHighAlarmThreshold_Type()
)
transpowerHighAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transpowerHighAlarmThreshold.setStatus("current")


class _TranspowerLowAlarmThreshold_Type(OctetString):
    """Custom type transpowerLowAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TranspowerLowAlarmThreshold_Type.__name__ = "OctetString"
_TranspowerLowAlarmThreshold_Object = MibTableColumn
transpowerLowAlarmThreshold = _TranspowerLowAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1, 2),
    _TranspowerLowAlarmThreshold_Type()
)
transpowerLowAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transpowerLowAlarmThreshold.setStatus("current")


class _TranspowerHighWarnThreshold_Type(OctetString):
    """Custom type transpowerHighWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TranspowerHighWarnThreshold_Type.__name__ = "OctetString"
_TranspowerHighWarnThreshold_Object = MibTableColumn
transpowerHighWarnThreshold = _TranspowerHighWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1, 3),
    _TranspowerHighWarnThreshold_Type()
)
transpowerHighWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transpowerHighWarnThreshold.setStatus("current")


class _TranspowerLowWarnThreshold_Type(OctetString):
    """Custom type transpowerLowWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TranspowerLowWarnThreshold_Type.__name__ = "OctetString"
_TranspowerLowWarnThreshold_Object = MibTableColumn
transpowerLowWarnThreshold = _TranspowerLowWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1, 4),
    _TranspowerLowWarnThreshold_Type()
)
transpowerLowWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transpowerLowWarnThreshold.setStatus("current")


class _TranspowerCurrent_Type(OctetString):
    """Custom type transpowerCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_TranspowerCurrent_Type.__name__ = "OctetString"
_TranspowerCurrent_Object = MibTableColumn
transpowerCurrent = _TranspowerCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 5, 1, 5),
    _TranspowerCurrent_Type()
)
transpowerCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transpowerCurrent.setStatus("current")
_TransReceivePowerTable_Object = MibTable
transReceivePowerTable = _TransReceivePowerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6)
)
if mibBuilder.loadTexts:
    transReceivePowerTable.setStatus("current")
_TransReceivePowerEntry_Object = MibTableRow
transReceivePowerEntry = _TransReceivePowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1)
)
transReceivePowerEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    transReceivePowerEntry.setStatus("current")


class _ReceivepowerHighAlarmThreshold_Type(OctetString):
    """Custom type receivepowerHighAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ReceivepowerHighAlarmThreshold_Type.__name__ = "OctetString"
_ReceivepowerHighAlarmThreshold_Object = MibTableColumn
receivepowerHighAlarmThreshold = _ReceivepowerHighAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1, 1),
    _ReceivepowerHighAlarmThreshold_Type()
)
receivepowerHighAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    receivepowerHighAlarmThreshold.setStatus("current")


class _ReceivepowerLowAlarmThreshold_Type(OctetString):
    """Custom type receivepowerLowAlarmThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ReceivepowerLowAlarmThreshold_Type.__name__ = "OctetString"
_ReceivepowerLowAlarmThreshold_Object = MibTableColumn
receivepowerLowAlarmThreshold = _ReceivepowerLowAlarmThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1, 2),
    _ReceivepowerLowAlarmThreshold_Type()
)
receivepowerLowAlarmThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    receivepowerLowAlarmThreshold.setStatus("current")


class _ReceivepowerHighWarnThreshold_Type(OctetString):
    """Custom type receivepowerHighWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ReceivepowerHighWarnThreshold_Type.__name__ = "OctetString"
_ReceivepowerHighWarnThreshold_Object = MibTableColumn
receivepowerHighWarnThreshold = _ReceivepowerHighWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1, 3),
    _ReceivepowerHighWarnThreshold_Type()
)
receivepowerHighWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    receivepowerHighWarnThreshold.setStatus("current")


class _ReceivepowerLowWarnThreshold_Type(OctetString):
    """Custom type receivepowerLowWarnThreshold based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ReceivepowerLowWarnThreshold_Type.__name__ = "OctetString"
_ReceivepowerLowWarnThreshold_Object = MibTableColumn
receivepowerLowWarnThreshold = _ReceivepowerLowWarnThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1, 4),
    _ReceivepowerLowWarnThreshold_Type()
)
receivepowerLowWarnThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    receivepowerLowWarnThreshold.setStatus("current")


class _ReceivepowerCurrent_Type(OctetString):
    """Custom type receivepowerCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ReceivepowerCurrent_Type.__name__ = "OctetString"
_ReceivepowerCurrent_Object = MibTableColumn
receivepowerCurrent = _ReceivepowerCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 10, 6, 1, 5),
    _ReceivepowerCurrent_Type()
)
receivepowerCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    receivepowerCurrent.setStatus("current")
_PoeInformation_ObjectIdentity = ObjectIdentity
poeInformation = _PoeInformation_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13)
)
if mibBuilder.loadTexts:
    poeInformation.setStatus("current")
_PoeSysConfigTable_Object = MibTable
poeSysConfigTable = _PoeSysConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1)
)
if mibBuilder.loadTexts:
    poeSysConfigTable.setStatus("current")
_PoeSysConfigEntry_Object = MibTableRow
poeSysConfigEntry = _PoeSysConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1)
)
poeSysConfigEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    poeSysConfigEntry.setStatus("current")


class _PoeSysConfigMaxPower_Type(Integer32):
    """Custom type poeSysConfigMaxPower based on Integer32"""
    defaultValue = 739200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15400, 739200),
    )


_PoeSysConfigMaxPower_Type.__name__ = "Integer32"
_PoeSysConfigMaxPower_Object = MibTableColumn
poeSysConfigMaxPower = _PoeSysConfigMaxPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1, 1),
    _PoeSysConfigMaxPower_Type()
)
poeSysConfigMaxPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    poeSysConfigMaxPower.setStatus("current")


class _PoeSysConfigUtiliThresholdPower_Type(Integer32):
    """Custom type poeSysConfigUtiliThresholdPower based on Integer32"""
    defaultValue = 90

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_PoeSysConfigUtiliThresholdPower_Type.__name__ = "Integer32"
_PoeSysConfigUtiliThresholdPower_Object = MibTableColumn
poeSysConfigUtiliThresholdPower = _PoeSysConfigUtiliThresholdPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1, 2),
    _PoeSysConfigUtiliThresholdPower_Type()
)
poeSysConfigUtiliThresholdPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    poeSysConfigUtiliThresholdPower.setStatus("current")


class _PoeSysConfigReservePower_Type(Integer32):
    """Custom type poeSysConfigReservePower based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_PoeSysConfigReservePower_Type.__name__ = "Integer32"
_PoeSysConfigReservePower_Object = MibTableColumn
poeSysConfigReservePower = _PoeSysConfigReservePower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1, 3),
    _PoeSysConfigReservePower_Type()
)
poeSysConfigReservePower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    poeSysConfigReservePower.setStatus("current")


class _PoeSysConfigLegacy_Type(Integer32):
    """Custom type poeSysConfigLegacy based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_PoeSysConfigLegacy_Type.__name__ = "Integer32"
_PoeSysConfigLegacy_Object = MibTableColumn
poeSysConfigLegacy = _PoeSysConfigLegacy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1, 4),
    _PoeSysConfigLegacy_Type()
)
poeSysConfigLegacy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    poeSysConfigLegacy.setStatus("current")


class _PoeSysConfigPM_Type(Integer32):
    """Custom type poeSysConfigPM based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("manual", 1),
          ("auto", 2))
    )


_PoeSysConfigPM_Type.__name__ = "Integer32"
_PoeSysConfigPM_Object = MibTableColumn
poeSysConfigPM = _PoeSysConfigPM_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 1, 1, 5),
    _PoeSysConfigPM_Type()
)
poeSysConfigPM.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    poeSysConfigPM.setStatus("current")
_PoeSysStatusTable_Object = MibTable
poeSysStatusTable = _PoeSysStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2)
)
if mibBuilder.loadTexts:
    poeSysStatusTable.setStatus("current")
_PoeSysStatusEntry_Object = MibTableRow
poeSysStatusEntry = _PoeSysStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1)
)
poeSysStatusEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    poeSysStatusEntry.setStatus("current")


class _PoeSysStatusCurPower_Type(Integer32):
    """Custom type poeSysStatusCurPower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 739200),
    )


_PoeSysStatusCurPower_Type.__name__ = "Integer32"
_PoeSysStatusCurPower_Object = MibTableColumn
poeSysStatusCurPower = _PoeSysStatusCurPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 1),
    _PoeSysStatusCurPower_Type()
)
poeSysStatusCurPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusCurPower.setStatus("current")


class _PoeSysStatusAverPower_Type(Integer32):
    """Custom type poeSysStatusAverPower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 739200),
    )


_PoeSysStatusAverPower_Type.__name__ = "Integer32"
_PoeSysStatusAverPower_Object = MibTableColumn
poeSysStatusAverPower = _PoeSysStatusAverPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 2),
    _PoeSysStatusAverPower_Type()
)
poeSysStatusAverPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusAverPower.setStatus("current")


class _PoeSysStatusPeakPower_Type(Integer32):
    """Custom type poeSysStatusPeakPower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 739200),
    )


_PoeSysStatusPeakPower_Type.__name__ = "Integer32"
_PoeSysStatusPeakPower_Object = MibTableColumn
poeSysStatusPeakPower = _PoeSysStatusPeakPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 3),
    _PoeSysStatusPeakPower_Type()
)
poeSysStatusPeakPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusPeakPower.setStatus("current")


class _PoeSysStatusMaxPower_Type(Integer32):
    """Custom type poeSysStatusMaxPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15400, 739200),
    )


_PoeSysStatusMaxPower_Type.__name__ = "Integer32"
_PoeSysStatusMaxPower_Object = MibTableColumn
poeSysStatusMaxPower = _PoeSysStatusMaxPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 4),
    _PoeSysStatusMaxPower_Type()
)
poeSysStatusMaxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusMaxPower.setStatus("current")


class _PoeSysStatusRemainPower_Type(Integer32):
    """Custom type poeSysStatusRemainPower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 739200),
    )


_PoeSysStatusRemainPower_Type.__name__ = "Integer32"
_PoeSysStatusRemainPower_Object = MibTableColumn
poeSysStatusRemainPower = _PoeSysStatusRemainPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 5),
    _PoeSysStatusRemainPower_Type()
)
poeSysStatusRemainPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusRemainPower.setStatus("current")


class _PoeSysStatusUtiliThresholdPower_Type(Integer32):
    """Custom type poeSysStatusUtiliThresholdPower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_PoeSysStatusUtiliThresholdPower_Type.__name__ = "Integer32"
_PoeSysStatusUtiliThresholdPower_Object = MibTableColumn
poeSysStatusUtiliThresholdPower = _PoeSysStatusUtiliThresholdPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 6),
    _PoeSysStatusUtiliThresholdPower_Type()
)
poeSysStatusUtiliThresholdPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusUtiliThresholdPower.setStatus("current")


class _PoeSysStatusReservePower_Type(Integer32):
    """Custom type poeSysStatusReservePower based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_PoeSysStatusReservePower_Type.__name__ = "Integer32"
_PoeSysStatusReservePower_Object = MibTableColumn
poeSysStatusReservePower = _PoeSysStatusReservePower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 7),
    _PoeSysStatusReservePower_Type()
)
poeSysStatusReservePower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusReservePower.setStatus("current")


class _PoeSysStatusCurVoltage_Type(Integer32):
    """Custom type poeSysStatusCurVoltage based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60000),
    )


_PoeSysStatusCurVoltage_Type.__name__ = "Integer32"
_PoeSysStatusCurVoltage_Object = MibTableColumn
poeSysStatusCurVoltage = _PoeSysStatusCurVoltage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 8),
    _PoeSysStatusCurVoltage_Type()
)
poeSysStatusCurVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusCurVoltage.setStatus("current")


class _PoeSysStatusAverVoltage_Type(Integer32):
    """Custom type poeSysStatusAverVoltage based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60000),
    )


_PoeSysStatusAverVoltage_Type.__name__ = "Integer32"
_PoeSysStatusAverVoltage_Object = MibTableColumn
poeSysStatusAverVoltage = _PoeSysStatusAverVoltage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 9),
    _PoeSysStatusAverVoltage_Type()
)
poeSysStatusAverVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusAverVoltage.setStatus("current")


class _PoeSysStatusPeakVoltage_Type(Integer32):
    """Custom type poeSysStatusPeakVoltage based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60000),
    )


_PoeSysStatusPeakVoltage_Type.__name__ = "Integer32"
_PoeSysStatusPeakVoltage_Object = MibTableColumn
poeSysStatusPeakVoltage = _PoeSysStatusPeakVoltage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 10),
    _PoeSysStatusPeakVoltage_Type()
)
poeSysStatusPeakVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusPeakVoltage.setStatus("current")


class _PoeSysStatusLegacy_Type(OctetString):
    """Custom type poeSysStatusLegacy based on OctetString"""
    defaultValue = OctetString("disable")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoeSysStatusLegacy_Type.__name__ = "OctetString"
_PoeSysStatusLegacy_Object = MibTableColumn
poeSysStatusLegacy = _PoeSysStatusLegacy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 11),
    _PoeSysStatusLegacy_Type()
)
poeSysStatusLegacy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusLegacy.setStatus("current")


class _PoeSysStatusPM_Type(OctetString):
    """Custom type poeSysStatusPM based on OctetString"""
    defaultValue = OctetString("manual")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoeSysStatusPM_Type.__name__ = "OctetString"
_PoeSysStatusPM_Object = MibTableColumn
poeSysStatusPM = _PoeSysStatusPM_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 2, 1, 12),
    _PoeSysStatusPM_Type()
)
poeSysStatusPM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poeSysStatusPM.setStatus("current")
_PoePortStatusTable_Object = MibTable
poePortStatusTable = _PoePortStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3)
)
if mibBuilder.loadTexts:
    poePortStatusTable.setStatus("current")
_PoePortStatusEntry_Object = MibTableRow
poePortStatusEntry = _PoePortStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1)
)
poePortStatusEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    poePortStatusEntry.setStatus("current")


class _PoePortAdmin_Type(OctetString):
    """Custom type poePortAdmin based on OctetString"""
    defaultValue = OctetString("enable")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoePortAdmin_Type.__name__ = "OctetString"
_PoePortAdmin_Object = MibTableColumn
poePortAdmin = _PoePortAdmin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 1),
    _PoePortAdmin_Type()
)
poePortAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortAdmin.setStatus("current")


class _PoePortPriority_Type(OctetString):
    """Custom type poePortPriority based on OctetString"""
    defaultValue = OctetString("low")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoePortPriority_Type.__name__ = "OctetString"
_PoePortPriority_Object = MibTableColumn
poePortPriority = _PoePortPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 2),
    _PoePortPriority_Type()
)
poePortPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortPriority.setStatus("current")


class _PoePortOper_Type(OctetString):
    """Custom type poePortOper based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoePortOper_Type.__name__ = "OctetString"
_PoePortOper_Object = MibTableColumn
poePortOper = _PoePortOper_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 3),
    _PoePortOper_Type()
)
poePortOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortOper.setStatus("current")


class _PoePortClass_Type(OctetString):
    """Custom type poePortClass based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_PoePortClass_Type.__name__ = "OctetString"
_PoePortClass_Object = MibTableColumn
poePortClass = _PoePortClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 4),
    _PoePortClass_Type()
)
poePortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortClass.setStatus("current")


class _PoePortCurPower_Type(Integer32):
    """Custom type poePortCurPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000),
    )


_PoePortCurPower_Type.__name__ = "Integer32"
_PoePortCurPower_Object = MibTableColumn
poePortCurPower = _PoePortCurPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 5),
    _PoePortCurPower_Type()
)
poePortCurPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortCurPower.setStatus("current")


class _PoePortAverPower_Type(Integer32):
    """Custom type poePortAverPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000),
    )


_PoePortAverPower_Type.__name__ = "Integer32"
_PoePortAverPower_Object = MibTableColumn
poePortAverPower = _PoePortAverPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 6),
    _PoePortAverPower_Type()
)
poePortAverPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortAverPower.setStatus("current")


class _PoePortPeakPower_Type(Integer32):
    """Custom type poePortPeakPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000),
    )


_PoePortPeakPower_Type.__name__ = "Integer32"
_PoePortPeakPower_Object = MibTableColumn
poePortPeakPower = _PoePortPeakPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 7),
    _PoePortPeakPower_Type()
)
poePortPeakPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortPeakPower.setStatus("current")


class _PoePortMaxPower_Type(Integer32):
    """Custom type poePortMaxPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000),
    )


_PoePortMaxPower_Type.__name__ = "Integer32"
_PoePortMaxPower_Object = MibTableColumn
poePortMaxPower = _PoePortMaxPower_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 13, 3, 1, 8),
    _PoePortMaxPower_Type()
)
poePortMaxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    poePortMaxPower.setStatus("current")


class _DyingGaspEvent_Type(Integer32):
    """Custom type dyingGaspEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("occur", 1)
    )


_DyingGaspEvent_Type.__name__ = "Integer32"
_DyingGaspEvent_Object = MibScalar
dyingGaspEvent = _DyingGaspEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 14),
    _DyingGaspEvent_Type()
)
dyingGaspEvent.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dyingGaspEvent.setStatus("current")


class _ExtCardType_Type(Integer32):
    """Custom type extCardType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExtCardType_Type.__name__ = "Integer32"
_ExtCardType_Object = MibScalar
extCardType = _ExtCardType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 37, 1, 15),
    _ExtCardType_Type()
)
extCardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    extCardType.setStatus("current")
_LswTrapMib_ObjectIdentity = ObjectIdentity
lswTrapMib = _LswTrapMib_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 39)
)
_LswTRAPMibObject_ObjectIdentity = ObjectIdentity
lswTRAPMibObject = _LswTRAPMibObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1)
)
_IpSourceGuard_ObjectIdentity = ObjectIdentity
ipSourceGuard = _IpSourceGuard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 40)
)


class _IpSourceGuardPerportMaximalnumber_Type(Integer32):
    """Custom type ipSourceGuardPerportMaximalnumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_IpSourceGuardPerportMaximalnumber_Type.__name__ = "Integer32"
_IpSourceGuardPerportMaximalnumber_Object = MibScalar
ipSourceGuardPerportMaximalnumber = _IpSourceGuardPerportMaximalnumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 1),
    _IpSourceGuardPerportMaximalnumber_Type()
)
ipSourceGuardPerportMaximalnumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipSourceGuardPerportMaximalnumber.setStatus("current")
_IpSourceGuardBindingTable_Object = MibTable
ipSourceGuardBindingTable = _IpSourceGuardBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2)
)
if mibBuilder.loadTexts:
    ipSourceGuardBindingTable.setStatus("current")
_IpSourceGuardBindingEntry_Object = MibTableRow
ipSourceGuardBindingEntry = _IpSourceGuardBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1)
)
ipSourceGuardBindingEntry.setIndexNames(
    (0, "SWITCH", "ipSourceGuardIpAddress"),
)
if mibBuilder.loadTexts:
    ipSourceGuardBindingEntry.setStatus("current")
_IpSourceGuardIpAddress_Type = IpAddress
_IpSourceGuardIpAddress_Object = MibTableColumn
ipSourceGuardIpAddress = _IpSourceGuardIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1, 1),
    _IpSourceGuardIpAddress_Type()
)
ipSourceGuardIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipSourceGuardIpAddress.setStatus("current")


class _IpSourceGuardMacAddress_Type(OctetString):
    """Custom type ipSourceGuardMacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_IpSourceGuardMacAddress_Type.__name__ = "OctetString"
_IpSourceGuardMacAddress_Object = MibTableColumn
ipSourceGuardMacAddress = _IpSourceGuardMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1, 2),
    _IpSourceGuardMacAddress_Type()
)
ipSourceGuardMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipSourceGuardMacAddress.setStatus("current")


class _IpSourceGuardVlan_Type(Integer32):
    """Custom type ipSourceGuardVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_IpSourceGuardVlan_Type.__name__ = "Integer32"
_IpSourceGuardVlan_Object = MibTableColumn
ipSourceGuardVlan = _IpSourceGuardVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1, 3),
    _IpSourceGuardVlan_Type()
)
ipSourceGuardVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipSourceGuardVlan.setStatus("current")
_ISGIfIndex_Type = Integer32
_ISGIfIndex_Object = MibTableColumn
iSGIfIndex = _ISGIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1, 4),
    _ISGIfIndex_Type()
)
iSGIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iSGIfIndex.setStatus("current")
_IpSourceGuardRowStatus_Type = RowStatus
_IpSourceGuardRowStatus_Object = MibTableColumn
ipSourceGuardRowStatus = _IpSourceGuardRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 2, 1, 5),
    _IpSourceGuardRowStatus_Type()
)
ipSourceGuardRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipSourceGuardRowStatus.setStatus("current")
_IpSourceGuardEnableTable_Object = MibTable
ipSourceGuardEnableTable = _IpSourceGuardEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 3)
)
if mibBuilder.loadTexts:
    ipSourceGuardEnableTable.setStatus("current")
_IpSourceGuardEnableEntry_Object = MibTableRow
ipSourceGuardEnableEntry = _IpSourceGuardEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 3, 1)
)
ipSourceGuardEnableEntry.setIndexNames(
    (0, "SWITCH", "iSGEnableIfIndex"),
)
if mibBuilder.loadTexts:
    ipSourceGuardEnableEntry.setStatus("current")


class _ISGEnableIfIndex_Type(Integer32):
    """Custom type iSGEnableIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ISGEnableIfIndex_Type.__name__ = "Integer32"
_ISGEnableIfIndex_Object = MibTableColumn
iSGEnableIfIndex = _ISGEnableIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 3, 1, 1),
    _ISGEnableIfIndex_Type()
)
iSGEnableIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iSGEnableIfIndex.setStatus("current")
_IpSourceGuardEnableType_Type = IpSourceGuardType
_IpSourceGuardEnableType_Object = MibTableColumn
ipSourceGuardEnableType = _IpSourceGuardEnableType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 40, 3, 1, 2),
    _IpSourceGuardEnableType_Type()
)
ipSourceGuardEnableType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipSourceGuardEnableType.setStatus("current")
_VrrpExt_ObjectIdentity = ObjectIdentity
vrrpExt = _VrrpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 41)
)
_VrrpVrfTable_Object = MibTable
vrrpVrfTable = _VrrpVrfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 1)
)
if mibBuilder.loadTexts:
    vrrpVrfTable.setStatus("current")
_VrrpVrfEntry_Object = MibTableRow
vrrpVrfEntry = _VrrpVrfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 1, 1)
)
vrrpVrfEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "vrrpvrfVrId"),
)
if mibBuilder.loadTexts:
    vrrpVrfEntry.setStatus("current")
_VrrpvrfVrId_Type = VrId
_VrrpvrfVrId_Object = MibTableColumn
vrrpvrfVrId = _VrrpvrfVrId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 1, 1, 1),
    _VrrpvrfVrId_Type()
)
vrrpvrfVrId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vrrpvrfVrId.setStatus("current")


class _VrrpvrfName_Type(OctetString):
    """Custom type vrrpvrfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_VrrpvrfName_Type.__name__ = "OctetString"
_VrrpvrfName_Object = MibTableColumn
vrrpvrfName = _VrrpvrfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 1, 1, 2),
    _VrrpvrfName_Type()
)
vrrpvrfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vrrpvrfName.setStatus("current")
_VrrpvrfRowStatus_Type = RowStatus
_VrrpvrfRowStatus_Object = MibTableColumn
vrrpvrfRowStatus = _VrrpvrfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 1, 1, 3),
    _VrrpvrfRowStatus_Type()
)
vrrpvrfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vrrpvrfRowStatus.setStatus("current")
_VrrpLearnMasterTable_Object = MibTable
vrrpLearnMasterTable = _VrrpLearnMasterTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 2)
)
if mibBuilder.loadTexts:
    vrrpLearnMasterTable.setStatus("current")
_VrrpLearnMasterEntry_Object = MibTableRow
vrrpLearnMasterEntry = _VrrpLearnMasterEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 2, 1)
)
vrrpLearnMasterEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
    (0, "SWITCH", "vrrpLearnVrId"),
)
if mibBuilder.loadTexts:
    vrrpLearnMasterEntry.setStatus("current")
_VrrpLearnVrId_Type = VrId
_VrrpLearnVrId_Object = MibTableColumn
vrrpLearnVrId = _VrrpLearnVrId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 2, 1, 1),
    _VrrpLearnVrId_Type()
)
vrrpLearnVrId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vrrpLearnVrId.setStatus("current")
_VrrpLearnMode_Type = TruthValue
_VrrpLearnMode_Object = MibTableColumn
vrrpLearnMode = _VrrpLearnMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 41, 2, 1, 2),
    _VrrpLearnMode_Type()
)
vrrpLearnMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vrrpLearnMode.setStatus("current")
_Interface_ObjectIdentity = ObjectIdentity
interface = _Interface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 42)
)
_InterfaceTable_Object = MibTable
interfaceTable = _InterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1)
)
if mibBuilder.loadTexts:
    interfaceTable.setStatus("current")
_InterfaceEntry_Object = MibTableRow
interfaceEntry = _InterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1)
)
interfaceEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    interfaceEntry.setStatus("current")


class _InterfaceIndex_Type(Integer32):
    """Custom type interfaceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_InterfaceIndex_Type.__name__ = "Integer32"
_InterfaceIndex_Object = MibTableColumn
interfaceIndex = _InterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 1),
    _InterfaceIndex_Type()
)
interfaceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    interfaceIndex.setStatus("current")


class _InterfaceName_Type(OctetString):
    """Custom type interfaceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_InterfaceName_Type.__name__ = "OctetString"
_InterfaceName_Object = MibTableColumn
interfaceName = _InterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 2),
    _InterfaceName_Type()
)
interfaceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceName.setStatus("current")


class _InterfaceType_Type(Integer32):
    """Custom type interfaceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("switch", 1),
          ("route", 2))
    )


_InterfaceType_Type.__name__ = "Integer32"
_InterfaceType_Object = MibTableColumn
interfaceType = _InterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 3),
    _InterfaceType_Type()
)
interfaceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceType.setStatus("current")


class _InterfaceIPv4Addr_Type(OctetString):
    """Custom type interfaceIPv4Addr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(9, 18),
    )


_InterfaceIPv4Addr_Type.__name__ = "OctetString"
_InterfaceIPv4Addr_Object = MibTableColumn
interfaceIPv4Addr = _InterfaceIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 4),
    _InterfaceIPv4Addr_Type()
)
interfaceIPv4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceIPv4Addr.setStatus("current")


class _InterfaceDesc_Type(OctetString):
    """Custom type interfaceDesc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 240),
    )


_InterfaceDesc_Type.__name__ = "OctetString"
_InterfaceDesc_Object = MibTableColumn
interfaceDesc = _InterfaceDesc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 5),
    _InterfaceDesc_Type()
)
interfaceDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceDesc.setStatus("current")


class _InterfaceMediaType_Type(Integer32):
    """Custom type interfaceMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoSelect", 0),
          ("rj45", 1),
          ("sfp", 2))
    )


_InterfaceMediaType_Type.__name__ = "Integer32"
_InterfaceMediaType_Object = MibTableColumn
interfaceMediaType = _InterfaceMediaType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 6),
    _InterfaceMediaType_Type()
)
interfaceMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceMediaType.setStatus("current")


class _InterfaceSpeed_Type(Integer32):
    """Custom type interfaceSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("speed10M", 1),
          ("speed100M", 2),
          ("speed1000M", 3),
          ("speed10G", 4),
          ("speed40G", 5),
          ("speed100G", 6),
          ("speed2halfG", 7),
          ("speed5G", 8))
    )


_InterfaceSpeed_Type.__name__ = "Integer32"
_InterfaceSpeed_Object = MibTableColumn
interfaceSpeed = _InterfaceSpeed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 7),
    _InterfaceSpeed_Type()
)
interfaceSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceSpeed.setStatus("current")


class _InterfaceDuplex_Type(Integer32):
    """Custom type interfaceDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("half", 1),
          ("full", 2))
    )


_InterfaceDuplex_Type.__name__ = "Integer32"
_InterfaceDuplex_Object = MibTableColumn
interfaceDuplex = _InterfaceDuplex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 8),
    _InterfaceDuplex_Type()
)
interfaceDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceDuplex.setStatus("current")


class _InterfaceResetCnt_Type(Integer32):
    """Custom type interfaceResetCnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_InterfaceResetCnt_Type.__name__ = "Integer32"
_InterfaceResetCnt_Object = MibTableColumn
interfaceResetCnt = _InterfaceResetCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 9),
    _InterfaceResetCnt_Type()
)
interfaceResetCnt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceResetCnt.setStatus("current")


class _InterfaceArpRetryInterval_Type(Integer32):
    """Custom type interfaceArpRetryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_InterfaceArpRetryInterval_Type.__name__ = "Integer32"
_InterfaceArpRetryInterval_Object = MibTableColumn
interfaceArpRetryInterval = _InterfaceArpRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 10),
    _InterfaceArpRetryInterval_Type()
)
interfaceArpRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceArpRetryInterval.setStatus("current")


class _InterfaceArpTimeout_Type(Integer32):
    """Custom type interfaceArpTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483),
    )


_InterfaceArpTimeout_Type.__name__ = "Integer32"
_InterfaceArpTimeout_Object = MibTableColumn
interfaceArpTimeout = _InterfaceArpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 11),
    _InterfaceArpTimeout_Type()
)
interfaceArpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceArpTimeout.setStatus("current")


class _InterfaceArpClear_Type(Integer32):
    """Custom type interfaceArpClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("clearArp", 1))
    )


_InterfaceArpClear_Type.__name__ = "Integer32"
_InterfaceArpClear_Object = MibTableColumn
interfaceArpClear = _InterfaceArpClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 12),
    _InterfaceArpClear_Type()
)
interfaceArpClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceArpClear.setStatus("current")


class _InterfacejumboFrameEnable_Type(Integer32):
    """Custom type interfacejumboFrameEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_InterfacejumboFrameEnable_Type.__name__ = "Integer32"
_InterfacejumboFrameEnable_Object = MibTableColumn
interfacejumboFrameEnable = _InterfacejumboFrameEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 13),
    _InterfacejumboFrameEnable_Type()
)
interfacejumboFrameEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfacejumboFrameEnable.setStatus("current")


class _InterfaceClearIPv4Addr_Type(Integer32):
    """Custom type interfaceClearIPv4Addr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("clearIPv4Addr", 1))
    )


_InterfaceClearIPv4Addr_Type.__name__ = "Integer32"
_InterfaceClearIPv4Addr_Object = MibTableColumn
interfaceClearIPv4Addr = _InterfaceClearIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 14),
    _InterfaceClearIPv4Addr_Type()
)
interfaceClearIPv4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceClearIPv4Addr.setStatus("current")


class _InterfaceBandwidth_Type(Integer32):
    """Custom type interfaceBandwidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_InterfaceBandwidth_Type.__name__ = "Integer32"
_InterfaceBandwidth_Object = MibTableColumn
interfaceBandwidth = _InterfaceBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 15),
    _InterfaceBandwidth_Type()
)
interfaceBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceBandwidth.setStatus("current")


class _InterfacePortIsolateGroupID_Type(Integer32):
    """Custom type interfacePortIsolateGroupID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31255),
    )


_InterfacePortIsolateGroupID_Type.__name__ = "Integer32"
_InterfacePortIsolateGroupID_Object = MibTableColumn
interfacePortIsolateGroupID = _InterfacePortIsolateGroupID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 16),
    _InterfacePortIsolateGroupID_Type()
)
interfacePortIsolateGroupID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfacePortIsolateGroupID.setStatus("current")


class _InterfaceArpProxy_Type(Integer32):
    """Custom type interfaceArpProxy based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_InterfaceArpProxy_Type.__name__ = "Integer32"
_InterfaceArpProxy_Object = MibTableColumn
interfaceArpProxy = _InterfaceArpProxy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 17),
    _InterfaceArpProxy_Type()
)
interfaceArpProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceArpProxy.setStatus("current")


class _InterfaceLocalArpProxy_Type(Integer32):
    """Custom type interfaceLocalArpProxy based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_InterfaceLocalArpProxy_Type.__name__ = "Integer32"
_InterfaceLocalArpProxy_Object = MibTableColumn
interfaceLocalArpProxy = _InterfaceLocalArpProxy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 18),
    _InterfaceLocalArpProxy_Type()
)
interfaceLocalArpProxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceLocalArpProxy.setStatus("current")


class _InterfacePoeAdmin_Type(Integer32):
    """Custom type interfacePoeAdmin based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2),
          ("force-power", 3))
    )


_InterfacePoeAdmin_Type.__name__ = "Integer32"
_InterfacePoeAdmin_Object = MibTableColumn
interfacePoeAdmin = _InterfacePoeAdmin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 19),
    _InterfacePoeAdmin_Type()
)
interfacePoeAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfacePoeAdmin.setStatus("current")


class _InterfacePoeBudget_Type(Integer32):
    """Custom type interfacePoeBudget based on Integer32"""
    defaultValue = 30000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000),
    )


_InterfacePoeBudget_Type.__name__ = "Integer32"
_InterfacePoeBudget_Object = MibTableColumn
interfacePoeBudget = _InterfacePoeBudget_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 20),
    _InterfacePoeBudget_Type()
)
interfacePoeBudget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfacePoeBudget.setStatus("current")


class _InterfacePoePriority_Type(Integer32):
    """Custom type interfacePoePriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("low", 1),
          ("high", 2),
          ("critical", 3))
    )


_InterfacePoePriority_Type.__name__ = "Integer32"
_InterfacePoePriority_Object = MibTableColumn
interfacePoePriority = _InterfacePoePriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 21),
    _InterfacePoePriority_Type()
)
interfacePoePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfacePoePriority.setStatus("current")


class _InterfaceLoadInterval_Type(Integer32):
    """Custom type interfaceLoadInterval based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 600),
    )


_InterfaceLoadInterval_Type.__name__ = "Integer32"
_InterfaceLoadInterval_Object = MibTableColumn
interfaceLoadInterval = _InterfaceLoadInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 22),
    _InterfaceLoadInterval_Type()
)
interfaceLoadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceLoadInterval.setStatus("current")


class _InterfaceMtu_Type(Integer32):
    """Custom type interfaceMtu based on Integer32"""
    defaultValue = 1500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(68, 9000),
    )


_InterfaceMtu_Type.__name__ = "Integer32"
_InterfaceMtu_Object = MibTableColumn
interfaceMtu = _InterfaceMtu_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 23),
    _InterfaceMtu_Type()
)
interfaceMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceMtu.setStatus("current")


class _InterfaceIpUrpf_Type(Integer32):
    """Custom type interfaceIpUrpf based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_InterfaceIpUrpf_Type.__name__ = "Integer32"
_InterfaceIpUrpf_Object = MibTableColumn
interfaceIpUrpf = _InterfaceIpUrpf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 24),
    _InterfaceIpUrpf_Type()
)
interfaceIpUrpf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceIpUrpf.setStatus("current")


class _InterfaceIpv6Urpf_Type(Integer32):
    """Custom type interfaceIpv6Urpf based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_InterfaceIpv6Urpf_Type.__name__ = "Integer32"
_InterfaceIpv6Urpf_Object = MibTableColumn
interfaceIpv6Urpf = _InterfaceIpv6Urpf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 25),
    _InterfaceIpv6Urpf_Type()
)
interfaceIpv6Urpf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceIpv6Urpf.setStatus("current")


class _InterfaceIpv6DadAttempt_Type(Integer32):
    """Custom type interfaceIpv6DadAttempt based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 600),
    )


_InterfaceIpv6DadAttempt_Type.__name__ = "Integer32"
_InterfaceIpv6DadAttempt_Object = MibTableColumn
interfaceIpv6DadAttempt = _InterfaceIpv6DadAttempt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 26),
    _InterfaceIpv6DadAttempt_Type()
)
interfaceIpv6DadAttempt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceIpv6DadAttempt.setStatus("current")


class _InterfaceNDClear_Type(Integer32):
    """Custom type interfaceNDClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("clearND", 1))
    )


_InterfaceNDClear_Type.__name__ = "Integer32"
_InterfaceNDClear_Object = MibTableColumn
interfaceNDClear = _InterfaceNDClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 1, 1, 27),
    _InterfaceNDClear_Type()
)
interfaceNDClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceNDClear.setStatus("current")
_InterfaceSecondaryIpAddrTable_Object = MibTable
interfaceSecondaryIpAddrTable = _InterfaceSecondaryIpAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 2)
)
if mibBuilder.loadTexts:
    interfaceSecondaryIpAddrTable.setStatus("current")
_InterfaceSecondaryIpAddrEntry_Object = MibTableRow
interfaceSecondaryIpAddrEntry = _InterfaceSecondaryIpAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 2, 1)
)
interfaceSecondaryIpAddrEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
    (0, "SWITCH", "ifSecondaryIpAddr"),
)
if mibBuilder.loadTexts:
    interfaceSecondaryIpAddrEntry.setStatus("current")
_IfSecondaryIpAddr_Type = IpAddress
_IfSecondaryIpAddr_Object = MibTableColumn
ifSecondaryIpAddr = _IfSecondaryIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 2, 1, 1),
    _IfSecondaryIpAddr_Type()
)
ifSecondaryIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifSecondaryIpAddr.setStatus("current")


class _IfSecondaryIpAddrMask_Type(Integer32):
    """Custom type ifSecondaryIpAddrMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_IfSecondaryIpAddrMask_Type.__name__ = "Integer32"
_IfSecondaryIpAddrMask_Object = MibTableColumn
ifSecondaryIpAddrMask = _IfSecondaryIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 2, 1, 2),
    _IfSecondaryIpAddrMask_Type()
)
ifSecondaryIpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifSecondaryIpAddrMask.setStatus("current")
_InterfaceSecondaryIpAddrStatus_Type = RowStatus
_InterfaceSecondaryIpAddrStatus_Object = MibTableColumn
interfaceSecondaryIpAddrStatus = _InterfaceSecondaryIpAddrStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 2, 1, 3),
    _InterfaceSecondaryIpAddrStatus_Type()
)
interfaceSecondaryIpAddrStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    interfaceSecondaryIpAddrStatus.setStatus("current")
_LoopbackInterfaceTable_Object = MibTable
loopbackInterfaceTable = _LoopbackInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 3)
)
if mibBuilder.loadTexts:
    loopbackInterfaceTable.setStatus("current")
_LoopbackInterfaceEntry_Object = MibTableRow
loopbackInterfaceEntry = _LoopbackInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 3, 1)
)
loopbackInterfaceEntry.setIndexNames(
    (0, "SWITCH", "loopbackInterfaceNum"),
)
if mibBuilder.loadTexts:
    loopbackInterfaceEntry.setStatus("current")


class _LoopbackInterfaceNum_Type(Integer32):
    """Custom type loopbackInterfaceNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_LoopbackInterfaceNum_Type.__name__ = "Integer32"
_LoopbackInterfaceNum_Object = MibTableColumn
loopbackInterfaceNum = _LoopbackInterfaceNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 3, 1, 1),
    _LoopbackInterfaceNum_Type()
)
loopbackInterfaceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loopbackInterfaceNum.setStatus("current")
_LoopbackInterfaceIndex_Type = Integer32
_LoopbackInterfaceIndex_Object = MibTableColumn
loopbackInterfaceIndex = _LoopbackInterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 3, 1, 2),
    _LoopbackInterfaceIndex_Type()
)
loopbackInterfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loopbackInterfaceIndex.setStatus("current")
_LoopbackInterfaceStatus_Type = RowStatus
_LoopbackInterfaceStatus_Object = MibTableColumn
loopbackInterfaceStatus = _LoopbackInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 3, 1, 3),
    _LoopbackInterfaceStatus_Type()
)
loopbackInterfaceStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    loopbackInterfaceStatus.setStatus("current")
_InterfaceIpv6AddrTable_Object = MibTable
interfaceIpv6AddrTable = _InterfaceIpv6AddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4)
)
if mibBuilder.loadTexts:
    interfaceIpv6AddrTable.setStatus("current")
_InterfaceIpv6AddrEntry_Object = MibTableRow
interfaceIpv6AddrEntry = _InterfaceIpv6AddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1)
)
interfaceIpv6AddrEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
    (0, "SWITCH", "ifIpv6Addr"),
)
if mibBuilder.loadTexts:
    interfaceIpv6AddrEntry.setStatus("current")
_IfIpv6Addr_Type = OctetString
_IfIpv6Addr_Object = MibTableColumn
ifIpv6Addr = _IfIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1, 1),
    _IfIpv6Addr_Type()
)
ifIpv6Addr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ifIpv6Addr.setStatus("current")


class _IfIpv6AddrLength_Type(Integer32):
    """Custom type ifIpv6AddrLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_IfIpv6AddrLength_Type.__name__ = "Integer32"
_IfIpv6AddrLength_Object = MibTableColumn
ifIpv6AddrLength = _IfIpv6AddrLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1, 2),
    _IfIpv6AddrLength_Type()
)
ifIpv6AddrLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifIpv6AddrLength.setStatus("current")


class _IfIpv6AddrEui64_Type(Integer32):
    """Custom type ifIpv6AddrEui64 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IfIpv6AddrEui64_Type.__name__ = "Integer32"
_IfIpv6AddrEui64_Object = MibTableColumn
ifIpv6AddrEui64 = _IfIpv6AddrEui64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1, 3),
    _IfIpv6AddrEui64_Type()
)
ifIpv6AddrEui64.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifIpv6AddrEui64.setStatus("current")


class _IfIpv6AddrLinkLocal_Type(Integer32):
    """Custom type ifIpv6AddrLinkLocal based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_IfIpv6AddrLinkLocal_Type.__name__ = "Integer32"
_IfIpv6AddrLinkLocal_Object = MibTableColumn
ifIpv6AddrLinkLocal = _IfIpv6AddrLinkLocal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1, 4),
    _IfIpv6AddrLinkLocal_Type()
)
ifIpv6AddrLinkLocal.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifIpv6AddrLinkLocal.setStatus("current")
_IfIpv6AddrStatus_Type = RowStatus
_IfIpv6AddrStatus_Object = MibTableColumn
ifIpv6AddrStatus = _IfIpv6AddrStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 42, 4, 1, 5),
    _IfIpv6AddrStatus_Type()
)
ifIpv6AddrStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ifIpv6AddrStatus.setStatus("current")
_InterfaceTrapObject_ObjectIdentity = ObjectIdentity
interfaceTrapObject = _InterfaceTrapObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 42, 10)
)
_Management_ObjectIdentity = ObjectIdentity
management = _Management_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 43)
)
_ManagementIp_ObjectIdentity = ObjectIdentity
managementIp = _ManagementIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1)
)
_ManagementIpTable_Object = MibTable
managementIpTable = _ManagementIpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1, 1)
)
if mibBuilder.loadTexts:
    managementIpTable.setStatus("current")
_ManagementIpEntry_Object = MibTableRow
managementIpEntry = _ManagementIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1, 1, 1)
)
managementIpEntry.setIndexNames(
    (0, "SWITCH", "managementIpSlot"),
)
if mibBuilder.loadTexts:
    managementIpEntry.setStatus("current")


class _ManagementIpSlot_Type(Integer32):
    """Custom type managementIpSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ManagementIpSlot_Type.__name__ = "Integer32"
_ManagementIpSlot_Object = MibTableColumn
managementIpSlot = _ManagementIpSlot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1, 1, 1, 1),
    _ManagementIpSlot_Type()
)
managementIpSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    managementIpSlot.setStatus("current")


class _ManagementIPv4Addr_Type(OctetString):
    """Custom type managementIPv4Addr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_ManagementIPv4Addr_Type.__name__ = "OctetString"
_ManagementIPv4Addr_Object = MibTableColumn
managementIPv4Addr = _ManagementIPv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1, 1, 1, 2),
    _ManagementIPv4Addr_Type()
)
managementIPv4Addr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    managementIPv4Addr.setStatus("current")
_ManagementRowStatus_Type = RowStatus
_ManagementRowStatus_Object = MibTableColumn
managementRowStatus = _ManagementRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 1, 1, 1, 3),
    _ManagementRowStatus_Type()
)
managementRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    managementRowStatus.setStatus("current")
_ManagementGateway_ObjectIdentity = ObjectIdentity
managementGateway = _ManagementGateway_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3)
)
_ManagementIpGatewayTable_Object = MibTable
managementIpGatewayTable = _ManagementIpGatewayTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3, 1)
)
if mibBuilder.loadTexts:
    managementIpGatewayTable.setStatus("current")
_ManagementIpGatewayEntry_Object = MibTableRow
managementIpGatewayEntry = _ManagementIpGatewayEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3, 1, 1)
)
managementIpGatewayEntry.setIndexNames(
    (0, "SWITCH", "managementIpGatewaySlot"),
    (0, "SWITCH", "managementIpGateway"),
)
if mibBuilder.loadTexts:
    managementIpGatewayEntry.setStatus("current")


class _ManagementIpGatewaySlot_Type(Integer32):
    """Custom type managementIpGatewaySlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ManagementIpGatewaySlot_Type.__name__ = "Integer32"
_ManagementIpGatewaySlot_Object = MibTableColumn
managementIpGatewaySlot = _ManagementIpGatewaySlot_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3, 1, 1, 1),
    _ManagementIpGatewaySlot_Type()
)
managementIpGatewaySlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    managementIpGatewaySlot.setStatus("current")
_ManagementIpGateway_Type = IpAddress
_ManagementIpGateway_Object = MibTableColumn
managementIpGateway = _ManagementIpGateway_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3, 1, 1, 2),
    _ManagementIpGateway_Type()
)
managementIpGateway.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    managementIpGateway.setStatus("current")
_ManagementIpGatewayStatus_Type = RowStatus
_ManagementIpGatewayStatus_Object = MibTableColumn
managementIpGatewayStatus = _ManagementIpGatewayStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 43, 3, 1, 1, 3),
    _ManagementIpGatewayStatus_Type()
)
managementIpGatewayStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    managementIpGatewayStatus.setStatus("current")
_Mvr_ObjectIdentity = ObjectIdentity
mvr = _Mvr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 44)
)


class _MvrGlobalStatus_Type(Integer32):
    """Custom type mvrGlobalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MvrGlobalStatus_Type.__name__ = "Integer32"
_MvrGlobalStatus_Object = MibScalar
mvrGlobalStatus = _MvrGlobalStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 1),
    _MvrGlobalStatus_Type()
)
mvrGlobalStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mvrGlobalStatus.setStatus("current")
_MvrGlobalGroupTable_Object = MibTable
mvrGlobalGroupTable = _MvrGlobalGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 2)
)
if mibBuilder.loadTexts:
    mvrGlobalGroupTable.setStatus("current")
_MvrGlobalGroupEntry_Object = MibTableRow
mvrGlobalGroupEntry = _MvrGlobalGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 2, 1)
)
mvrGlobalGroupEntry.setIndexNames(
    (0, "SWITCH", "mvrGlobalGroup"),
)
if mibBuilder.loadTexts:
    mvrGlobalGroupEntry.setStatus("current")
_MvrGlobalGroup_Type = IpAddress
_MvrGlobalGroup_Object = MibTableColumn
mvrGlobalGroup = _MvrGlobalGroup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 2, 1, 1),
    _MvrGlobalGroup_Type()
)
mvrGlobalGroup.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mvrGlobalGroup.setStatus("current")
_MvrGlobalGroupRowStatus_Type = RowStatus
_MvrGlobalGroupRowStatus_Object = MibTableColumn
mvrGlobalGroupRowStatus = _MvrGlobalGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 2, 1, 2),
    _MvrGlobalGroupRowStatus_Type()
)
mvrGlobalGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mvrGlobalGroupRowStatus.setStatus("current")


class _MvrSourceVlan_Type(Integer32):
    """Custom type mvrSourceVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MvrSourceVlan_Type.__name__ = "Integer32"
_MvrSourceVlan_Object = MibScalar
mvrSourceVlan = _MvrSourceVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 3),
    _MvrSourceVlan_Type()
)
mvrSourceVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mvrSourceVlan.setStatus("current")
_MvrSourceIP_Type = IpAddress
_MvrSourceIP_Object = MibScalar
mvrSourceIP = _MvrSourceIP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 4),
    _MvrSourceIP_Type()
)
mvrSourceIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mvrSourceIP.setStatus("current")
_MvrSourcePortTable_Object = MibTable
mvrSourcePortTable = _MvrSourcePortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 5)
)
if mibBuilder.loadTexts:
    mvrSourcePortTable.setStatus("current")
_MvrSourcePortEntry_Object = MibTableRow
mvrSourcePortEntry = _MvrSourcePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 5, 1)
)
mvrSourcePortEntry.setIndexNames(
    (0, "SWITCH", "mvrSourcePortIfindex"),
)
if mibBuilder.loadTexts:
    mvrSourcePortEntry.setStatus("current")


class _MvrSourcePortIfindex_Type(Integer32):
    """Custom type mvrSourcePortIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MvrSourcePortIfindex_Type.__name__ = "Integer32"
_MvrSourcePortIfindex_Object = MibTableColumn
mvrSourcePortIfindex = _MvrSourcePortIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 5, 1, 1),
    _MvrSourcePortIfindex_Type()
)
mvrSourcePortIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mvrSourcePortIfindex.setStatus("current")
_MvrSourcePortRowStatus_Type = RowStatus
_MvrSourcePortRowStatus_Object = MibTableColumn
mvrSourcePortRowStatus = _MvrSourcePortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 5, 1, 2),
    _MvrSourcePortRowStatus_Type()
)
mvrSourcePortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mvrSourcePortRowStatus.setStatus("current")
_MvrRcvPortTable_Object = MibTable
mvrRcvPortTable = _MvrRcvPortTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 6)
)
if mibBuilder.loadTexts:
    mvrRcvPortTable.setStatus("current")
_MvrRcvPortEntry_Object = MibTableRow
mvrRcvPortEntry = _MvrRcvPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 6, 1)
)
mvrRcvPortEntry.setIndexNames(
    (0, "SWITCH", "mvrRcvPortIfindex"),
    (0, "SWITCH", "mvrRcvVlanId"),
)
if mibBuilder.loadTexts:
    mvrRcvPortEntry.setStatus("current")


class _MvrRcvPortIfindex_Type(Integer32):
    """Custom type mvrRcvPortIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MvrRcvPortIfindex_Type.__name__ = "Integer32"
_MvrRcvPortIfindex_Object = MibTableColumn
mvrRcvPortIfindex = _MvrRcvPortIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 6, 1, 1),
    _MvrRcvPortIfindex_Type()
)
mvrRcvPortIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mvrRcvPortIfindex.setStatus("current")


class _MvrRcvVlanId_Type(Integer32):
    """Custom type mvrRcvVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MvrRcvVlanId_Type.__name__ = "Integer32"
_MvrRcvVlanId_Object = MibTableColumn
mvrRcvVlanId = _MvrRcvVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 6, 1, 2),
    _MvrRcvVlanId_Type()
)
mvrRcvVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mvrRcvVlanId.setStatus("current")
_MvrRcvPortRowStatus_Type = RowStatus
_MvrRcvPortRowStatus_Object = MibTableColumn
mvrRcvPortRowStatus = _MvrRcvPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 6, 1, 3),
    _MvrRcvPortRowStatus_Type()
)
mvrRcvPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mvrRcvPortRowStatus.setStatus("current")


class _MvrIPMcastRouting_Type(Integer32):
    """Custom type mvrIPMcastRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MvrIPMcastRouting_Type.__name__ = "Integer32"
_MvrIPMcastRouting_Object = MibScalar
mvrIPMcastRouting = _MvrIPMcastRouting_Object(
    (1, 3, 6, 1, 4, 1, 27975, 44, 7),
    _MvrIPMcastRouting_Type()
)
mvrIPMcastRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mvrIPMcastRouting.setStatus("current")
_Erps_ObjectIdentity = ObjectIdentity
erps = _Erps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 45)
)
_ErpsDomainTable_Object = MibTable
erpsDomainTable = _ErpsDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2)
)
if mibBuilder.loadTexts:
    erpsDomainTable.setStatus("current")
_ErpsDomainEntry_Object = MibTableRow
erpsDomainEntry = _ErpsDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1)
)
erpsDomainEntry.setIndexNames(
    (0, "SWITCH", "domainIndex"),
)
if mibBuilder.loadTexts:
    erpsDomainEntry.setStatus("current")


class _DomainIndex_Type(Integer32):
    """Custom type domainIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_DomainIndex_Type.__name__ = "Integer32"
_DomainIndex_Object = MibTableColumn
domainIndex = _DomainIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 1),
    _DomainIndex_Type()
)
domainIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    domainIndex.setStatus("current")


class _DomainName_Type(OctetString):
    """Custom type domainName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DomainName_Type.__name__ = "OctetString"
_DomainName_Object = MibTableColumn
domainName = _DomainName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 2),
    _DomainName_Type()
)
domainName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    domainName.setStatus("current")
_DomainHellotime_Type = Integer32
_DomainHellotime_Object = MibTableColumn
domainHellotime = _DomainHellotime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 3),
    _DomainHellotime_Type()
)
domainHellotime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainHellotime.setStatus("current")
_DomainFailtime_Type = Integer32
_DomainFailtime_Object = MibTableColumn
domainFailtime = _DomainFailtime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 4),
    _DomainFailtime_Type()
)
domainFailtime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainFailtime.setStatus("current")
_DomainPrimaryControlVlan_Type = Integer32
_DomainPrimaryControlVlan_Object = MibTableColumn
domainPrimaryControlVlan = _DomainPrimaryControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 5),
    _DomainPrimaryControlVlan_Type()
)
domainPrimaryControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainPrimaryControlVlan.setStatus("current")
_DomainSubControlVlan_Type = Integer32
_DomainSubControlVlan_Object = MibTableColumn
domainSubControlVlan = _DomainSubControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 6),
    _DomainSubControlVlan_Type()
)
domainSubControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainSubControlVlan.setStatus("current")


class _DomainEnable_Type(Integer32):
    """Custom type domainEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DomainEnable_Type.__name__ = "Integer32"
_DomainEnable_Object = MibTableColumn
domainEnable = _DomainEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 7),
    _DomainEnable_Type()
)
domainEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainEnable.setStatus("current")
_DomainInstance_Type = Integer32
_DomainInstance_Object = MibTableColumn
domainInstance = _DomainInstance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 8),
    _DomainInstance_Type()
)
domainInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainInstance.setStatus("current")
_DomainRowStatus_Type = RowStatus
_DomainRowStatus_Object = MibTableColumn
domainRowStatus = _DomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 2, 1, 9),
    _DomainRowStatus_Type()
)
domainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    domainRowStatus.setStatus("current")
_ErpsRingTable_Object = MibTable
erpsRingTable = _ErpsRingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4)
)
if mibBuilder.loadTexts:
    erpsRingTable.setStatus("current")
_ErpsRingEntry_Object = MibTableRow
erpsRingEntry = _ErpsRingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1)
)
erpsRingEntry.setIndexNames(
    (0, "SWITCH", "ringIndex"),
)
if mibBuilder.loadTexts:
    erpsRingEntry.setStatus("current")


class _RingIndex_Type(Integer32):
    """Custom type ringIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RingIndex_Type.__name__ = "Integer32"
_RingIndex_Object = MibTableColumn
ringIndex = _RingIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 1),
    _RingIndex_Type()
)
ringIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ringIndex.setStatus("current")


class _RingLevel_Type(Integer32):
    """Custom type ringLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("primary", 0),
          ("sub", 1))
    )


_RingLevel_Type.__name__ = "Integer32"
_RingLevel_Object = MibTableColumn
ringLevel = _RingLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 2),
    _RingLevel_Type()
)
ringLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringLevel.setStatus("current")


class _Ringmode_Type(Integer32):
    """Custom type ringmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknow", 0),
          ("master", 1),
          ("transit", 2),
          ("vpls", 3))
    )


_Ringmode_Type.__name__ = "Integer32"
_Ringmode_Object = MibTableColumn
ringmode = _Ringmode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 3),
    _Ringmode_Type()
)
ringmode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringmode.setStatus("current")


class _RingEdgemode_Type(Integer32):
    """Custom type ringEdgemode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknow", 0),
          ("edge", 1),
          ("assistantedge", 2))
    )


_RingEdgemode_Type.__name__ = "Integer32"
_RingEdgemode_Object = MibTableColumn
ringEdgemode = _RingEdgemode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 4),
    _RingEdgemode_Type()
)
ringEdgemode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringEdgemode.setStatus("current")


class _RingPrimaryIf_Type(OctetString):
    """Custom type ringPrimaryIf based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RingPrimaryIf_Type.__name__ = "OctetString"
_RingPrimaryIf_Object = MibTableColumn
ringPrimaryIf = _RingPrimaryIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 5),
    _RingPrimaryIf_Type()
)
ringPrimaryIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringPrimaryIf.setStatus("current")


class _RingSecondaryIf_Type(OctetString):
    """Custom type ringSecondaryIf based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RingSecondaryIf_Type.__name__ = "OctetString"
_RingSecondaryIf_Object = MibTableColumn
ringSecondaryIf = _RingSecondaryIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 6),
    _RingSecondaryIf_Type()
)
ringSecondaryIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringSecondaryIf.setStatus("current")


class _RingEdgeIf_Type(OctetString):
    """Custom type ringEdgeIf based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RingEdgeIf_Type.__name__ = "OctetString"
_RingEdgeIf_Object = MibTableColumn
ringEdgeIf = _RingEdgeIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 7),
    _RingEdgeIf_Type()
)
ringEdgeIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringEdgeIf.setStatus("current")


class _RingCommonIf_Type(OctetString):
    """Custom type ringCommonIf based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_RingCommonIf_Type.__name__ = "OctetString"
_RingCommonIf_Object = MibTableColumn
ringCommonIf = _RingCommonIf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 8),
    _RingCommonIf_Type()
)
ringCommonIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringCommonIf.setStatus("current")


class _RingSrpt_Type(Integer32):
    """Custom type ringSrpt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RingSrpt_Type.__name__ = "Integer32"
_RingSrpt_Object = MibTableColumn
ringSrpt = _RingSrpt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 9),
    _RingSrpt_Type()
)
ringSrpt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringSrpt.setStatus("current")


class _RingEnable_Type(Integer32):
    """Custom type ringEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RingEnable_Type.__name__ = "Integer32"
_RingEnable_Object = MibTableColumn
ringEnable = _RingEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 10),
    _RingEnable_Type()
)
ringEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringEnable.setStatus("current")
_RingRowStatus_Type = RowStatus
_RingRowStatus_Object = MibTableColumn
ringRowStatus = _RingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 11),
    _RingRowStatus_Type()
)
ringRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ringRowStatus.setStatus("current")


class _RingStatus_Type(Integer32):
    """Custom type ringStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("idel", 0),
          ("complete", 1),
          ("failed", 2),
          ("linkup", 3),
          ("linkdown", 4),
          ("preforwording", 5),
          ("init", 6))
    )


_RingStatus_Type.__name__ = "Integer32"
_RingStatus_Object = MibTableColumn
ringStatus = _RingStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 4, 1, 12),
    _RingStatus_Type()
)
ringStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatus.setStatus("current")
_ErpsRingStatsTable_Object = MibTable
erpsRingStatsTable = _ErpsRingStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5)
)
if mibBuilder.loadTexts:
    erpsRingStatsTable.setStatus("current")
_ErpsRingStatsEntry_Object = MibTableRow
erpsRingStatsEntry = _ErpsRingStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1)
)
erpsRingStatsEntry.setIndexNames(
    (0, "SWITCH", "ringStatsIndex"),
)
if mibBuilder.loadTexts:
    erpsRingStatsEntry.setStatus("current")


class _RingStatsIndex_Type(Integer32):
    """Custom type ringStatsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RingStatsIndex_Type.__name__ = "Integer32"
_RingStatsIndex_Object = MibTableColumn
ringStatsIndex = _RingStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 1),
    _RingStatsIndex_Type()
)
ringStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ringStatsIndex.setStatus("current")
_RingStatsTotalSendPackets_Type = Unsigned32
_RingStatsTotalSendPackets_Object = MibTableColumn
ringStatsTotalSendPackets = _RingStatsTotalSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 2),
    _RingStatsTotalSendPackets_Type()
)
ringStatsTotalSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsTotalSendPackets.setStatus("current")
_RingStatsHelloSendPackets_Type = Unsigned32
_RingStatsHelloSendPackets_Object = MibTableColumn
ringStatsHelloSendPackets = _RingStatsHelloSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 3),
    _RingStatsHelloSendPackets_Type()
)
ringStatsHelloSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsHelloSendPackets.setStatus("current")
_RingStatsRingUpFlushFdbSendPackets_Type = Unsigned32
_RingStatsRingUpFlushFdbSendPackets_Object = MibTableColumn
ringStatsRingUpFlushFdbSendPackets = _RingStatsRingUpFlushFdbSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 4),
    _RingStatsRingUpFlushFdbSendPackets_Type()
)
ringStatsRingUpFlushFdbSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsRingUpFlushFdbSendPackets.setStatus("current")
_RingStatsRingDownFlushFdbSendPackets_Type = Unsigned32
_RingStatsRingDownFlushFdbSendPackets_Object = MibTableColumn
ringStatsRingDownFlushFdbSendPackets = _RingStatsRingDownFlushFdbSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 5),
    _RingStatsRingDownFlushFdbSendPackets_Type()
)
ringStatsRingDownFlushFdbSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsRingDownFlushFdbSendPackets.setStatus("current")
_RingStatsLinkDownSendPackets_Type = Unsigned32
_RingStatsLinkDownSendPackets_Object = MibTableColumn
ringStatsLinkDownSendPackets = _RingStatsLinkDownSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 6),
    _RingStatsLinkDownSendPackets_Type()
)
ringStatsLinkDownSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsLinkDownSendPackets.setStatus("current")
_RingStatsEdgeHelloSendPackets_Type = Unsigned32
_RingStatsEdgeHelloSendPackets_Object = MibTableColumn
ringStatsEdgeHelloSendPackets = _RingStatsEdgeHelloSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 7),
    _RingStatsEdgeHelloSendPackets_Type()
)
ringStatsEdgeHelloSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsEdgeHelloSendPackets.setStatus("current")
_RingStatsMajorFaultSendPackets_Type = Unsigned32
_RingStatsMajorFaultSendPackets_Object = MibTableColumn
ringStatsMajorFaultSendPackets = _RingStatsMajorFaultSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 8),
    _RingStatsMajorFaultSendPackets_Type()
)
ringStatsMajorFaultSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsMajorFaultSendPackets.setStatus("current")
_RingStatsTotalRecPackets_Type = Unsigned32
_RingStatsTotalRecPackets_Object = MibTableColumn
ringStatsTotalRecPackets = _RingStatsTotalRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 9),
    _RingStatsTotalRecPackets_Type()
)
ringStatsTotalRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsTotalRecPackets.setStatus("current")
_RingStatsHelloRecPackets_Type = Unsigned32
_RingStatsHelloRecPackets_Object = MibTableColumn
ringStatsHelloRecPackets = _RingStatsHelloRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 10),
    _RingStatsHelloRecPackets_Type()
)
ringStatsHelloRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsHelloRecPackets.setStatus("current")
_RingStatsRingUpFlushFdbRecPackets_Type = Unsigned32
_RingStatsRingUpFlushFdbRecPackets_Object = MibTableColumn
ringStatsRingUpFlushFdbRecPackets = _RingStatsRingUpFlushFdbRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 11),
    _RingStatsRingUpFlushFdbRecPackets_Type()
)
ringStatsRingUpFlushFdbRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsRingUpFlushFdbRecPackets.setStatus("current")
_RingStatsRingDownFlushFdbRecPackets_Type = Unsigned32
_RingStatsRingDownFlushFdbRecPackets_Object = MibTableColumn
ringStatsRingDownFlushFdbRecPackets = _RingStatsRingDownFlushFdbRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 12),
    _RingStatsRingDownFlushFdbRecPackets_Type()
)
ringStatsRingDownFlushFdbRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsRingDownFlushFdbRecPackets.setStatus("current")
_RingStatsLinkDownRecPackets_Type = Unsigned32
_RingStatsLinkDownRecPackets_Object = MibTableColumn
ringStatsLinkDownRecPackets = _RingStatsLinkDownRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 13),
    _RingStatsLinkDownRecPackets_Type()
)
ringStatsLinkDownRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsLinkDownRecPackets.setStatus("current")
_RingStatsEdgeHelloRecPackets_Type = Unsigned32
_RingStatsEdgeHelloRecPackets_Object = MibTableColumn
ringStatsEdgeHelloRecPackets = _RingStatsEdgeHelloRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 14),
    _RingStatsEdgeHelloRecPackets_Type()
)
ringStatsEdgeHelloRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsEdgeHelloRecPackets.setStatus("current")
_RingStatsMajorFaultRecPackets_Type = Unsigned32
_RingStatsMajorFaultRecPackets_Object = MibTableColumn
ringStatsMajorFaultRecPackets = _RingStatsMajorFaultRecPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 15),
    _RingStatsMajorFaultRecPackets_Type()
)
ringStatsMajorFaultRecPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ringStatsMajorFaultRecPackets.setStatus("current")
_RingStatsClearPackets_Type = Integer32
_RingStatsClearPackets_Object = MibTableColumn
ringStatsClearPackets = _RingStatsClearPackets_Object(
    (1, 3, 6, 1, 4, 1, 27975, 45, 5, 1, 16),
    _RingStatsClearPackets_Type()
)
ringStatsClearPackets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ringStatsClearPackets.setStatus("current")
_ErpsTrapObject_ObjectIdentity = ObjectIdentity
erpsTrapObject = _ErpsTrapObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 45, 10)
)
_PrefixList_ObjectIdentity = ObjectIdentity
prefixList = _PrefixList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 46)
)
_PrefixListTable_Object = MibTable
prefixListTable = _PrefixListTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1)
)
if mibBuilder.loadTexts:
    prefixListTable.setStatus("current")
_PrefixListEntry_Object = MibTableRow
prefixListEntry = _PrefixListEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1)
)
prefixListEntry.setIndexNames(
    (0, "SWITCH", "prefixListIpAddressType"),
    (0, "SWITCH", "prefixListIndex"),
)
if mibBuilder.loadTexts:
    prefixListEntry.setStatus("current")
_PrefixListIpAddressType_Type = InetAddressType
_PrefixListIpAddressType_Object = MibTableColumn
prefixListIpAddressType = _PrefixListIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1, 1),
    _PrefixListIpAddressType_Type()
)
prefixListIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListIpAddressType.setStatus("current")


class _PrefixListIndex_Type(Unsigned32):
    """Custom type prefixListIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListIndex_Type.__name__ = "Unsigned32"
_PrefixListIndex_Object = MibTableColumn
prefixListIndex = _PrefixListIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1, 2),
    _PrefixListIndex_Type()
)
prefixListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListIndex.setStatus("current")


class _PrefixListName_Type(OctetString):
    """Custom type prefixListName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_PrefixListName_Type.__name__ = "OctetString"
_PrefixListName_Object = MibTableColumn
prefixListName = _PrefixListName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1, 3),
    _PrefixListName_Type()
)
prefixListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListName.setStatus("current")


class _PrefixListDescription_Type(OctetString):
    """Custom type prefixListDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_PrefixListDescription_Type.__name__ = "OctetString"
_PrefixListDescription_Object = MibTableColumn
prefixListDescription = _PrefixListDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1, 4),
    _PrefixListDescription_Type()
)
prefixListDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListDescription.setStatus("current")
_PrefixListRowStatus_Type = RowStatus
_PrefixListRowStatus_Object = MibTableColumn
prefixListRowStatus = _PrefixListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 1, 1, 5),
    _PrefixListRowStatus_Type()
)
prefixListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRowStatus.setStatus("current")
_PrefixListRuleTable_Object = MibTable
prefixListRuleTable = _PrefixListRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2)
)
if mibBuilder.loadTexts:
    prefixListRuleTable.setStatus("current")
_PrefixListRuleEntry_Object = MibTableRow
prefixListRuleEntry = _PrefixListRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1)
)
prefixListRuleEntry.setIndexNames(
    (0, "SWITCH", "prefixListRuleIpAddressType"),
    (0, "SWITCH", "prefixListRuleIndex"),
    (0, "SWITCH", "prefixListRuleSeq"),
)
if mibBuilder.loadTexts:
    prefixListRuleEntry.setStatus("current")
_PrefixListRuleIpAddressType_Type = InetAddressType
_PrefixListRuleIpAddressType_Object = MibTableColumn
prefixListRuleIpAddressType = _PrefixListRuleIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 1),
    _PrefixListRuleIpAddressType_Type()
)
prefixListRuleIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListRuleIpAddressType.setStatus("current")


class _PrefixListRuleIndex_Type(Unsigned32):
    """Custom type prefixListRuleIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListRuleIndex_Type.__name__ = "Unsigned32"
_PrefixListRuleIndex_Object = MibTableColumn
prefixListRuleIndex = _PrefixListRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 2),
    _PrefixListRuleIndex_Type()
)
prefixListRuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListRuleIndex.setStatus("current")


class _PrefixListRuleSeq_Type(Unsigned32):
    """Custom type prefixListRuleSeq based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListRuleSeq_Type.__name__ = "Unsigned32"
_PrefixListRuleSeq_Object = MibTableColumn
prefixListRuleSeq = _PrefixListRuleSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 3),
    _PrefixListRuleSeq_Type()
)
prefixListRuleSeq.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListRuleSeq.setStatus("current")
_PrefixListRuleIpAddress_Type = InetAddress
_PrefixListRuleIpAddress_Object = MibTableColumn
prefixListRuleIpAddress = _PrefixListRuleIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 4),
    _PrefixListRuleIpAddress_Type()
)
prefixListRuleIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleIpAddress.setStatus("current")


class _PrefixListRuleMaskLen_Type(Integer32):
    """Custom type prefixListRuleMaskLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListRuleMaskLen_Type.__name__ = "Integer32"
_PrefixListRuleMaskLen_Object = MibTableColumn
prefixListRuleMaskLen = _PrefixListRuleMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 5),
    _PrefixListRuleMaskLen_Type()
)
prefixListRuleMaskLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleMaskLen.setStatus("current")
_PrefixListRuleType_Type = PrefixListType
_PrefixListRuleType_Object = MibTableColumn
prefixListRuleType = _PrefixListRuleType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 6),
    _PrefixListRuleType_Type()
)
prefixListRuleType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleType.setStatus("current")


class _PrefixListRuleGe_Type(Integer32):
    """Custom type prefixListRuleGe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListRuleGe_Type.__name__ = "Integer32"
_PrefixListRuleGe_Object = MibTableColumn
prefixListRuleGe = _PrefixListRuleGe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 7),
    _PrefixListRuleGe_Type()
)
prefixListRuleGe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleGe.setStatus("current")


class _PrefixListRuleLe_Type(Integer32):
    """Custom type prefixListRuleLe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListRuleLe_Type.__name__ = "Integer32"
_PrefixListRuleLe_Object = MibTableColumn
prefixListRuleLe = _PrefixListRuleLe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 8),
    _PrefixListRuleLe_Type()
)
prefixListRuleLe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleLe.setStatus("current")
_PrefixListRuleRowStatus_Type = RowStatus
_PrefixListRuleRowStatus_Object = MibTableColumn
prefixListRuleRowStatus = _PrefixListRuleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 2, 1, 9),
    _PrefixListRuleRowStatus_Type()
)
prefixListRuleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListRuleRowStatus.setStatus("current")
_PrefixListClearTable_Object = MibTable
prefixListClearTable = _PrefixListClearTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 3)
)
if mibBuilder.loadTexts:
    prefixListClearTable.setStatus("current")
_PrefixListClearEntry_Object = MibTableRow
prefixListClearEntry = _PrefixListClearEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 3, 1)
)
prefixListClearEntry.setIndexNames(
    (0, "SWITCH", "prefixListClearIpAddressType"),
    (0, "SWITCH", "prefixListClearIndex"),
)
if mibBuilder.loadTexts:
    prefixListClearEntry.setStatus("current")
_PrefixListClearIpAddressType_Type = InetAddressType
_PrefixListClearIpAddressType_Object = MibTableColumn
prefixListClearIpAddressType = _PrefixListClearIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 3, 1, 1),
    _PrefixListClearIpAddressType_Type()
)
prefixListClearIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListClearIpAddressType.setStatus("current")


class _PrefixListClearIndex_Type(Integer32):
    """Custom type prefixListClearIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PrefixListClearIndex_Type.__name__ = "Integer32"
_PrefixListClearIndex_Object = MibTableColumn
prefixListClearIndex = _PrefixListClearIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 3, 1, 2),
    _PrefixListClearIndex_Type()
)
prefixListClearIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListClearIndex.setStatus("current")
_PrefixListClear_Type = PrefixListClearValue
_PrefixListClear_Object = MibTableColumn
prefixListClear = _PrefixListClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 3, 1, 3),
    _PrefixListClear_Type()
)
prefixListClear.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    prefixListClear.setStatus("current")
_PrefixListDetailTable_Object = MibTable
prefixListDetailTable = _PrefixListDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4)
)
if mibBuilder.loadTexts:
    prefixListDetailTable.setStatus("current")
_PrefixListDetailEntry_Object = MibTableRow
prefixListDetailEntry = _PrefixListDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1)
)
prefixListDetailEntry.setIndexNames(
    (0, "SWITCH", "prefixListDetailIpAddressType"),
    (0, "SWITCH", "prefixListDetailIndex"),
    (0, "SWITCH", "prefixListDetailSeq"),
)
if mibBuilder.loadTexts:
    prefixListDetailEntry.setStatus("current")
_PrefixListDetailIpAddressType_Type = InetAddressType
_PrefixListDetailIpAddressType_Object = MibTableColumn
prefixListDetailIpAddressType = _PrefixListDetailIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 1),
    _PrefixListDetailIpAddressType_Type()
)
prefixListDetailIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListDetailIpAddressType.setStatus("current")


class _PrefixListDetailIndex_Type(Unsigned32):
    """Custom type prefixListDetailIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListDetailIndex_Type.__name__ = "Unsigned32"
_PrefixListDetailIndex_Object = MibTableColumn
prefixListDetailIndex = _PrefixListDetailIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 2),
    _PrefixListDetailIndex_Type()
)
prefixListDetailIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListDetailIndex.setStatus("current")


class _PrefixListDetailSeq_Type(Unsigned32):
    """Custom type prefixListDetailSeq based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_PrefixListDetailSeq_Type.__name__ = "Unsigned32"
_PrefixListDetailSeq_Object = MibTableColumn
prefixListDetailSeq = _PrefixListDetailSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 3),
    _PrefixListDetailSeq_Type()
)
prefixListDetailSeq.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    prefixListDetailSeq.setStatus("current")
_PrefixListDetailLastOperEntry_Type = OctetString
_PrefixListDetailLastOperEntry_Object = MibTableColumn
prefixListDetailLastOperEntry = _PrefixListDetailLastOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 4),
    _PrefixListDetailLastOperEntry_Type()
)
prefixListDetailLastOperEntry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListDetailLastOperEntry.setStatus("current")


class _PrefixLisDetailCount_Type(Integer32):
    """Custom type prefixLisDetailCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixLisDetailCount_Type.__name__ = "Integer32"
_PrefixLisDetailCount_Object = MibTableColumn
prefixLisDetailCount = _PrefixLisDetailCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 5),
    _PrefixLisDetailCount_Type()
)
prefixLisDetailCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixLisDetailCount.setStatus("current")
_PrefixListDetailRangeEntries_Type = PrefixListType
_PrefixListDetailRangeEntries_Object = MibTableColumn
prefixListDetailRangeEntries = _PrefixListDetailRangeEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 6),
    _PrefixListDetailRangeEntries_Type()
)
prefixListDetailRangeEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListDetailRangeEntries.setStatus("current")
_PrefixListDetailSequences_Type = OctetString
_PrefixListDetailSequences_Object = MibTableColumn
prefixListDetailSequences = _PrefixListDetailSequences_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 7),
    _PrefixListDetailSequences_Type()
)
prefixListDetailSequences.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListDetailSequences.setStatus("current")


class _PrefixListDetailHitCount_Type(Integer32):
    """Custom type prefixListDetailHitCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_PrefixListDetailHitCount_Type.__name__ = "Integer32"
_PrefixListDetailHitCount_Object = MibTableColumn
prefixListDetailHitCount = _PrefixListDetailHitCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 8),
    _PrefixListDetailHitCount_Type()
)
prefixListDetailHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListDetailHitCount.setStatus("current")
_PrefixListDetailRefcount_Type = RowStatus
_PrefixListDetailRefcount_Object = MibTableColumn
prefixListDetailRefcount = _PrefixListDetailRefcount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 46, 4, 1, 9),
    _PrefixListDetailRefcount_Type()
)
prefixListDetailRefcount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    prefixListDetailRefcount.setStatus("current")
_IpUnicast_ObjectIdentity = ObjectIdentity
ipUnicast = _IpUnicast_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 47)
)
_IpUnicastStaticRouteTable_Object = MibTable
ipUnicastStaticRouteTable = _IpUnicastStaticRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1)
)
if mibBuilder.loadTexts:
    ipUnicastStaticRouteTable.setStatus("current")
_IpUnicastStaticRouteEntry_Object = MibTableRow
ipUnicastStaticRouteEntry = _IpUnicastStaticRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1)
)
ipUnicastStaticRouteEntry.setIndexNames(
    (0, "SWITCH", "ipUnicastStaticRouteVrfId"),
    (0, "SWITCH", "ipUnicastStaticRouteDestIpAddressType"),
    (0, "SWITCH", "ipUnicastStaticRouteDestIpAddress"),
    (0, "SWITCH", "ipUnicastStaticRouteDestMask"),
    (0, "SWITCH", "ipUnicastStaticRouteGWIpAddressType"),
    (0, "SWITCH", "ipUnicastStaticRouteGWIpAddress"),
)
if mibBuilder.loadTexts:
    ipUnicastStaticRouteEntry.setStatus("current")


class _IpUnicastStaticRouteVrfId_Type(Integer32):
    """Custom type ipUnicastStaticRouteVrfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpUnicastStaticRouteVrfId_Type.__name__ = "Integer32"
_IpUnicastStaticRouteVrfId_Object = MibTableColumn
ipUnicastStaticRouteVrfId = _IpUnicastStaticRouteVrfId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 1),
    _IpUnicastStaticRouteVrfId_Type()
)
ipUnicastStaticRouteVrfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteVrfId.setStatus("current")
_IpUnicastStaticRouteDestIpAddressType_Type = InetAddressType
_IpUnicastStaticRouteDestIpAddressType_Object = MibTableColumn
ipUnicastStaticRouteDestIpAddressType = _IpUnicastStaticRouteDestIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 2),
    _IpUnicastStaticRouteDestIpAddressType_Type()
)
ipUnicastStaticRouteDestIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteDestIpAddressType.setStatus("current")
_IpUnicastStaticRouteDestIpAddress_Type = InetAddress
_IpUnicastStaticRouteDestIpAddress_Object = MibTableColumn
ipUnicastStaticRouteDestIpAddress = _IpUnicastStaticRouteDestIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 3),
    _IpUnicastStaticRouteDestIpAddress_Type()
)
ipUnicastStaticRouteDestIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteDestIpAddress.setStatus("current")


class _IpUnicastStaticRouteDestMask_Type(Integer32):
    """Custom type ipUnicastStaticRouteDestMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_IpUnicastStaticRouteDestMask_Type.__name__ = "Integer32"
_IpUnicastStaticRouteDestMask_Object = MibTableColumn
ipUnicastStaticRouteDestMask = _IpUnicastStaticRouteDestMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 4),
    _IpUnicastStaticRouteDestMask_Type()
)
ipUnicastStaticRouteDestMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteDestMask.setStatus("current")
_IpUnicastStaticRouteGWIpAddressType_Type = InetAddressType
_IpUnicastStaticRouteGWIpAddressType_Object = MibTableColumn
ipUnicastStaticRouteGWIpAddressType = _IpUnicastStaticRouteGWIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 5),
    _IpUnicastStaticRouteGWIpAddressType_Type()
)
ipUnicastStaticRouteGWIpAddressType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteGWIpAddressType.setStatus("current")
_IpUnicastStaticRouteGWIpAddress_Type = InetAddress
_IpUnicastStaticRouteGWIpAddress_Object = MibTableColumn
ipUnicastStaticRouteGWIpAddress = _IpUnicastStaticRouteGWIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 6),
    _IpUnicastStaticRouteGWIpAddress_Type()
)
ipUnicastStaticRouteGWIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteGWIpAddress.setStatus("current")


class _IpUnicastStaticRouteDistance_Type(Integer32):
    """Custom type ipUnicastStaticRouteDistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_IpUnicastStaticRouteDistance_Type.__name__ = "Integer32"
_IpUnicastStaticRouteDistance_Object = MibTableColumn
ipUnicastStaticRouteDistance = _IpUnicastStaticRouteDistance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 7),
    _IpUnicastStaticRouteDistance_Type()
)
ipUnicastStaticRouteDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteDistance.setStatus("current")
_IpUnicastStaticRouteRowStatus_Type = RowStatus
_IpUnicastStaticRouteRowStatus_Object = MibTableColumn
ipUnicastStaticRouteRowStatus = _IpUnicastStaticRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 1, 1, 8),
    _IpUnicastStaticRouteRowStatus_Type()
)
ipUnicastStaticRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipUnicastStaticRouteRowStatus.setStatus("current")


class _IpUnicastClrStaticRoute_Type(Integer32):
    """Custom type ipUnicastClrStaticRoute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_IpUnicastClrStaticRoute_Type.__name__ = "Integer32"
_IpUnicastClrStaticRoute_Object = MibScalar
ipUnicastClrStaticRoute = _IpUnicastClrStaticRoute_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 2),
    _IpUnicastClrStaticRoute_Type()
)
ipUnicastClrStaticRoute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastClrStaticRoute.setStatus("current")
_IpUnicastClrVrfStaticRouteTable_Object = MibTable
ipUnicastClrVrfStaticRouteTable = _IpUnicastClrVrfStaticRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 3)
)
if mibBuilder.loadTexts:
    ipUnicastClrVrfStaticRouteTable.setStatus("current")
_IpUnicastClrVrfStaticRouteEntry_Object = MibTableRow
ipUnicastClrVrfStaticRouteEntry = _IpUnicastClrVrfStaticRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 3, 1)
)
ipUnicastClrVrfStaticRouteEntry.setIndexNames(
    (0, "SWITCH", "ipUnicastClrVrfStaticRouteIndex"),
)
if mibBuilder.loadTexts:
    ipUnicastClrVrfStaticRouteEntry.setStatus("current")


class _IpUnicastClrVrfStaticRouteIndex_Type(Integer32):
    """Custom type ipUnicastClrVrfStaticRouteIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_IpUnicastClrVrfStaticRouteIndex_Type.__name__ = "Integer32"
_IpUnicastClrVrfStaticRouteIndex_Object = MibTableColumn
ipUnicastClrVrfStaticRouteIndex = _IpUnicastClrVrfStaticRouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 3, 1, 1),
    _IpUnicastClrVrfStaticRouteIndex_Type()
)
ipUnicastClrVrfStaticRouteIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipUnicastClrVrfStaticRouteIndex.setStatus("current")


class _IpUnicastClrVrfStaticRoute_Type(Integer32):
    """Custom type ipUnicastClrVrfStaticRoute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_IpUnicastClrVrfStaticRoute_Type.__name__ = "Integer32"
_IpUnicastClrVrfStaticRoute_Object = MibTableColumn
ipUnicastClrVrfStaticRoute = _IpUnicastClrVrfStaticRoute_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 3, 1, 2),
    _IpUnicastClrVrfStaticRoute_Type()
)
ipUnicastClrVrfStaticRoute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastClrVrfStaticRoute.setStatus("current")


class _IpUnicastMaxStaticRoute_Type(Integer32):
    """Custom type ipUnicastMaxStaticRoute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IpUnicastMaxStaticRoute_Type.__name__ = "Integer32"
_IpUnicastMaxStaticRoute_Object = MibScalar
ipUnicastMaxStaticRoute = _IpUnicastMaxStaticRoute_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 4),
    _IpUnicastMaxStaticRoute_Type()
)
ipUnicastMaxStaticRoute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastMaxStaticRoute.setStatus("current")


class _IpUnicastMaxStaticV6Route_Type(Integer32):
    """Custom type ipUnicastMaxStaticV6Route based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IpUnicastMaxStaticV6Route_Type.__name__ = "Integer32"
_IpUnicastMaxStaticV6Route_Object = MibScalar
ipUnicastMaxStaticV6Route = _IpUnicastMaxStaticV6Route_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 5),
    _IpUnicastMaxStaticV6Route_Type()
)
ipUnicastMaxStaticV6Route.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastMaxStaticV6Route.setStatus("current")


class _IpUnicastIcmpErrorInterval_Type(Integer32):
    """Custom type ipUnicastIcmpErrorInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_IpUnicastIcmpErrorInterval_Type.__name__ = "Integer32"
_IpUnicastIcmpErrorInterval_Object = MibScalar
ipUnicastIcmpErrorInterval = _IpUnicastIcmpErrorInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 6),
    _IpUnicastIcmpErrorInterval_Type()
)
ipUnicastIcmpErrorInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastIcmpErrorInterval.setStatus("current")


class _IpUnicastIcmpv6ErrorInterval_Type(Integer32):
    """Custom type ipUnicastIcmpv6ErrorInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_IpUnicastIcmpv6ErrorInterval_Type.__name__ = "Integer32"
_IpUnicastIcmpv6ErrorInterval_Object = MibScalar
ipUnicastIcmpv6ErrorInterval = _IpUnicastIcmpv6ErrorInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 47, 7),
    _IpUnicastIcmpv6ErrorInterval_Type()
)
ipUnicastIcmpv6ErrorInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipUnicastIcmpv6ErrorInterval.setStatus("current")
_Vrf_ObjectIdentity = ObjectIdentity
vrf = _Vrf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 48)
)
_Aaa_ObjectIdentity = ObjectIdentity
aaa = _Aaa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 49)
)


class _AuthenticationEnable_Type(Integer32):
    """Custom type authenticationEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AuthenticationEnable_Type.__name__ = "Integer32"
_AuthenticationEnable_Object = MibScalar
authenticationEnable = _AuthenticationEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 1),
    _AuthenticationEnable_Type()
)
authenticationEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authenticationEnable.setStatus("current")
_AuthenticationLoginTable_Object = MibTable
authenticationLoginTable = _AuthenticationLoginTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2)
)
if mibBuilder.loadTexts:
    authenticationLoginTable.setStatus("current")
_AuthenticationLoginEntry_Object = MibTableRow
authenticationLoginEntry = _AuthenticationLoginEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1)
)
authenticationLoginEntry.setIndexNames(
    (0, "SWITCH", "authenticationLoginIndex"),
)
if mibBuilder.loadTexts:
    authenticationLoginEntry.setStatus("current")


class _AuthenticationLoginIndex_Type(Integer32):
    """Custom type authenticationLoginIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AuthenticationLoginIndex_Type.__name__ = "Integer32"
_AuthenticationLoginIndex_Object = MibTableColumn
authenticationLoginIndex = _AuthenticationLoginIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 1),
    _AuthenticationLoginIndex_Type()
)
authenticationLoginIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authenticationLoginIndex.setStatus("current")


class _AuthenticationLoginName_Type(OctetString):
    """Custom type authenticationLoginName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_AuthenticationLoginName_Type.__name__ = "OctetString"
_AuthenticationLoginName_Object = MibTableColumn
authenticationLoginName = _AuthenticationLoginName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 2),
    _AuthenticationLoginName_Type()
)
authenticationLoginName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginName.setStatus("current")


class _AuthenticationLoginOne_Type(Integer32):
    """Custom type authenticationLoginOne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginOne_Type.__name__ = "Integer32"
_AuthenticationLoginOne_Object = MibTableColumn
authenticationLoginOne = _AuthenticationLoginOne_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 3),
    _AuthenticationLoginOne_Type()
)
authenticationLoginOne.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginOne.setStatus("current")


class _AuthenticationLoginTwo_Type(Integer32):
    """Custom type authenticationLoginTwo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginTwo_Type.__name__ = "Integer32"
_AuthenticationLoginTwo_Object = MibTableColumn
authenticationLoginTwo = _AuthenticationLoginTwo_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 4),
    _AuthenticationLoginTwo_Type()
)
authenticationLoginTwo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginTwo.setStatus("current")


class _AuthenticationLoginThree_Type(Integer32):
    """Custom type authenticationLoginThree based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginThree_Type.__name__ = "Integer32"
_AuthenticationLoginThree_Object = MibTableColumn
authenticationLoginThree = _AuthenticationLoginThree_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 5),
    _AuthenticationLoginThree_Type()
)
authenticationLoginThree.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginThree.setStatus("current")


class _AuthenticationLoginFour_Type(Integer32):
    """Custom type authenticationLoginFour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginFour_Type.__name__ = "Integer32"
_AuthenticationLoginFour_Object = MibTableColumn
authenticationLoginFour = _AuthenticationLoginFour_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 6),
    _AuthenticationLoginFour_Type()
)
authenticationLoginFour.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginFour.setStatus("current")


class _AuthenticationLoginFive_Type(Integer32):
    """Custom type authenticationLoginFive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginFive_Type.__name__ = "Integer32"
_AuthenticationLoginFive_Object = MibTableColumn
authenticationLoginFive = _AuthenticationLoginFive_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 7),
    _AuthenticationLoginFive_Type()
)
authenticationLoginFive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginFive.setStatus("current")


class _AuthenticationLoginSix_Type(Integer32):
    """Custom type authenticationLoginSix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("line", 2),
          ("none", 3),
          ("radius", 4),
          ("local", 5),
          ("tacacs-plus", 6))
    )


_AuthenticationLoginSix_Type.__name__ = "Integer32"
_AuthenticationLoginSix_Object = MibTableColumn
authenticationLoginSix = _AuthenticationLoginSix_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 8),
    _AuthenticationLoginSix_Type()
)
authenticationLoginSix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginSix.setStatus("current")
_AuthenticationLoginRowStatus_Type = RowStatus
_AuthenticationLoginRowStatus_Object = MibTableColumn
authenticationLoginRowStatus = _AuthenticationLoginRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 2, 1, 9),
    _AuthenticationLoginRowStatus_Type()
)
authenticationLoginRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    authenticationLoginRowStatus.setStatus("current")
_AuthenticationLineTable_Object = MibTable
authenticationLineTable = _AuthenticationLineTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 3)
)
if mibBuilder.loadTexts:
    authenticationLineTable.setStatus("current")
_AuthenticationLineEntry_Object = MibTableRow
authenticationLineEntry = _AuthenticationLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 3, 1)
)
authenticationLineEntry.setIndexNames(
    (0, "SWITCH", "authenticationLineIndex"),
)
if mibBuilder.loadTexts:
    authenticationLineEntry.setStatus("current")


class _AuthenticationLineIndex_Type(Integer32):
    """Custom type authenticationLineIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AuthenticationLineIndex_Type.__name__ = "Integer32"
_AuthenticationLineIndex_Object = MibTableColumn
authenticationLineIndex = _AuthenticationLineIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 3, 1, 1),
    _AuthenticationLineIndex_Type()
)
authenticationLineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authenticationLineIndex.setStatus("current")


class _AuthenticationLineLoginName_Type(OctetString):
    """Custom type authenticationLineLoginName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_AuthenticationLineLoginName_Type.__name__ = "OctetString"
_AuthenticationLineLoginName_Object = MibTableColumn
authenticationLineLoginName = _AuthenticationLineLoginName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 49, 3, 1, 2),
    _AuthenticationLineLoginName_Type()
)
authenticationLineLoginName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authenticationLineLoginName.setStatus("current")
_Evc_ObjectIdentity = ObjectIdentity
evc = _Evc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 51)
)
_EvcTable_Object = MibTable
evcTable = _EvcTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 1)
)
if mibBuilder.loadTexts:
    evcTable.setStatus("current")
_EvcEntry_Object = MibTableRow
evcEntry = _EvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 1, 1)
)
evcEntry.setIndexNames(
    (0, "SWITCH", "evcIndex"),
)
if mibBuilder.loadTexts:
    evcEntry.setStatus("current")


class _EvcIndex_Type(Integer32):
    """Custom type evcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_EvcIndex_Type.__name__ = "Integer32"
_EvcIndex_Object = MibTableColumn
evcIndex = _EvcIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 1, 1, 1),
    _EvcIndex_Type()
)
evcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    evcIndex.setStatus("current")


class _EvcName_Type(OctetString):
    """Custom type evcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EvcName_Type.__name__ = "OctetString"
_EvcName_Object = MibTableColumn
evcName = _EvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 1, 1, 2),
    _EvcName_Type()
)
evcName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    evcName.setStatus("current")
_EvcRowstatus_Type = RowStatus
_EvcRowstatus_Object = MibTableColumn
evcRowstatus = _EvcRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 1, 1, 3),
    _EvcRowstatus_Type()
)
evcRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    evcRowstatus.setStatus("current")
_EvcInfoTable_Object = MibTable
evcInfoTable = _EvcInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2)
)
if mibBuilder.loadTexts:
    evcInfoTable.setStatus("current")
_EvcInfoEntry_Object = MibTableRow
evcInfoEntry = _EvcInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2, 1)
)
evcInfoEntry.setIndexNames(
    (0, "SWITCH", "evcInfoIndex"),
)
if mibBuilder.loadTexts:
    evcInfoEntry.setStatus("current")


class _EvcInfoIndex_Type(Integer32):
    """Custom type evcInfoIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_EvcInfoIndex_Type.__name__ = "Integer32"
_EvcInfoIndex_Object = MibTableColumn
evcInfoIndex = _EvcInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2, 1, 1),
    _EvcInfoIndex_Type()
)
evcInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    evcInfoIndex.setStatus("current")


class _EvcInfoMappedVlan_Type(Integer32):
    """Custom type evcInfoMappedVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_EvcInfoMappedVlan_Type.__name__ = "Integer32"
_EvcInfoMappedVlan_Object = MibTableColumn
evcInfoMappedVlan = _EvcInfoMappedVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2, 1, 2),
    _EvcInfoMappedVlan_Type()
)
evcInfoMappedVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    evcInfoMappedVlan.setStatus("current")


class _EvcInfoMappedDoubleVlan_Type(OctetString):
    """Custom type evcInfoMappedDoubleVlan based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_EvcInfoMappedDoubleVlan_Type.__name__ = "OctetString"
_EvcInfoMappedDoubleVlan_Object = MibTableColumn
evcInfoMappedDoubleVlan = _EvcInfoMappedDoubleVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2, 1, 3),
    _EvcInfoMappedDoubleVlan_Type()
)
evcInfoMappedDoubleVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    evcInfoMappedDoubleVlan.setStatus("current")


class _EvcInfoUsingNumber_Type(Integer32):
    """Custom type evcInfoUsingNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_EvcInfoUsingNumber_Type.__name__ = "Integer32"
_EvcInfoUsingNumber_Object = MibTableColumn
evcInfoUsingNumber = _EvcInfoUsingNumber_Object(
    (1, 3, 6, 1, 4, 1, 27975, 51, 2, 1, 4),
    _EvcInfoUsingNumber_Type()
)
evcInfoUsingNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    evcInfoUsingNumber.setStatus("current")
_Qinq_ObjectIdentity = ObjectIdentity
qinq = _Qinq_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 52)
)
_QinqVlanMappingTableObject_ObjectIdentity = ObjectIdentity
qinqVlanMappingTableObject = _QinqVlanMappingTableObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1)
)
_QinqVlanMappingTable_Object = MibTable
qinqVlanMappingTable = _QinqVlanMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 1)
)
if mibBuilder.loadTexts:
    qinqVlanMappingTable.setStatus("current")
_QinqVlanMappingEntry_Object = MibTableRow
qinqVlanMappingEntry = _QinqVlanMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 1, 1)
)
qinqVlanMappingEntry.setIndexNames(
    (0, "SWITCH", "qinqVlanMappingTableIndex"),
)
if mibBuilder.loadTexts:
    qinqVlanMappingEntry.setStatus("current")


class _QinqVlanMappingTableIndex_Type(Integer32):
    """Custom type qinqVlanMappingTableIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_QinqVlanMappingTableIndex_Type.__name__ = "Integer32"
_QinqVlanMappingTableIndex_Object = MibTableColumn
qinqVlanMappingTableIndex = _QinqVlanMappingTableIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 1, 1, 1),
    _QinqVlanMappingTableIndex_Type()
)
qinqVlanMappingTableIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqVlanMappingTableIndex.setStatus("current")


class _QinqVlanMappingTableName_Type(OctetString):
    """Custom type qinqVlanMappingTableName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_QinqVlanMappingTableName_Type.__name__ = "OctetString"
_QinqVlanMappingTableName_Object = MibTableColumn
qinqVlanMappingTableName = _QinqVlanMappingTableName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 1, 1, 2),
    _QinqVlanMappingTableName_Type()
)
qinqVlanMappingTableName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqVlanMappingTableName.setStatus("current")
_QinqVlanMappingTableRowstatus_Type = RowStatus
_QinqVlanMappingTableRowstatus_Object = MibTableColumn
qinqVlanMappingTableRowstatus = _QinqVlanMappingTableRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 1, 1, 3),
    _QinqVlanMappingTableRowstatus_Type()
)
qinqVlanMappingTableRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqVlanMappingTableRowstatus.setStatus("current")
_QinqVlanMappingItemTable_Object = MibTable
qinqVlanMappingItemTable = _QinqVlanMappingItemTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2)
)
if mibBuilder.loadTexts:
    qinqVlanMappingItemTable.setStatus("current")
_QinqVlanMappingItemEntry_Object = MibTableRow
qinqVlanMappingItemEntry = _QinqVlanMappingItemEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2, 1)
)
qinqVlanMappingItemEntry.setIndexNames(
    (0, "SWITCH", "qinqMappingEntryMappingTableIndex"),
    (0, "SWITCH", "qinqMappingEntryEvcIndex"),
    (0, "SWITCH", "qinqMappingEntryRawVid"),
)
if mibBuilder.loadTexts:
    qinqVlanMappingItemEntry.setStatus("current")


class _QinqMappingEntryMappingTableIndex_Type(Integer32):
    """Custom type qinqMappingEntryMappingTableIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_QinqMappingEntryMappingTableIndex_Type.__name__ = "Integer32"
_QinqMappingEntryMappingTableIndex_Object = MibTableColumn
qinqMappingEntryMappingTableIndex = _QinqMappingEntryMappingTableIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2, 1, 1),
    _QinqMappingEntryMappingTableIndex_Type()
)
qinqMappingEntryMappingTableIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqMappingEntryMappingTableIndex.setStatus("current")


class _QinqMappingEntryEvcIndex_Type(Integer32):
    """Custom type qinqMappingEntryEvcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_QinqMappingEntryEvcIndex_Type.__name__ = "Integer32"
_QinqMappingEntryEvcIndex_Object = MibTableColumn
qinqMappingEntryEvcIndex = _QinqMappingEntryEvcIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2, 1, 2),
    _QinqMappingEntryEvcIndex_Type()
)
qinqMappingEntryEvcIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqMappingEntryEvcIndex.setStatus("current")


class _QinqMappingEntryRawVid_Type(Integer32):
    """Custom type qinqMappingEntryRawVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_QinqMappingEntryRawVid_Type.__name__ = "Integer32"
_QinqMappingEntryRawVid_Object = MibTableColumn
qinqMappingEntryRawVid = _QinqMappingEntryRawVid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2, 1, 3),
    _QinqMappingEntryRawVid_Type()
)
qinqMappingEntryRawVid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqMappingEntryRawVid.setStatus("current")
_QinqMappingEntryRowstatus_Type = RowStatus
_QinqMappingEntryRowstatus_Object = MibTableColumn
qinqMappingEntryRowstatus = _QinqMappingEntryRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 1, 2, 1, 4),
    _QinqMappingEntryRowstatus_Type()
)
qinqMappingEntryRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqMappingEntryRowstatus.setStatus("current")
_QinqIfObject_ObjectIdentity = ObjectIdentity
qinqIfObject = _QinqIfObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2)
)
_QinqIfModeDot1qTunnelTable_Object = MibTable
qinqIfModeDot1qTunnelTable = _QinqIfModeDot1qTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 1)
)
if mibBuilder.loadTexts:
    qinqIfModeDot1qTunnelTable.setStatus("current")
_QinqIfModeDot1qTunnelEntry_Object = MibTableRow
qinqIfModeDot1qTunnelEntry = _QinqIfModeDot1qTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 1, 1)
)
qinqIfModeDot1qTunnelEntry.setIndexNames(
    (0, "SWITCH", "qinqIfModeDot1qTunnelIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfModeDot1qTunnelEntry.setStatus("current")


class _QinqIfModeDot1qTunnelIfIndex_Type(Integer32):
    """Custom type qinqIfModeDot1qTunnelIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfModeDot1qTunnelIfIndex_Type.__name__ = "Integer32"
_QinqIfModeDot1qTunnelIfIndex_Object = MibTableColumn
qinqIfModeDot1qTunnelIfIndex = _QinqIfModeDot1qTunnelIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 1, 1, 1),
    _QinqIfModeDot1qTunnelIfIndex_Type()
)
qinqIfModeDot1qTunnelIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfModeDot1qTunnelIfIndex.setStatus("current")
_QinqIfModeDot1qTunnelRowstatus_Type = RowStatus
_QinqIfModeDot1qTunnelRowstatus_Object = MibTableColumn
qinqIfModeDot1qTunnelRowstatus = _QinqIfModeDot1qTunnelRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 1, 1, 2),
    _QinqIfModeDot1qTunnelRowstatus_Type()
)
qinqIfModeDot1qTunnelRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfModeDot1qTunnelRowstatus.setStatus("current")
_QinqIfDot1qTunnelTypeTable_Object = MibTable
qinqIfDot1qTunnelTypeTable = _QinqIfDot1qTunnelTypeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 2)
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelTypeTable.setStatus("current")
_QinqIfDot1qTunnelTypeEntry_Object = MibTableRow
qinqIfDot1qTunnelTypeEntry = _QinqIfDot1qTunnelTypeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 2, 1)
)
qinqIfDot1qTunnelTypeEntry.setIndexNames(
    (0, "SWITCH", "qinqIfDot1qTunnelTypeIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelTypeEntry.setStatus("current")


class _QinqIfDot1qTunnelTypeIfIndex_Type(Integer32):
    """Custom type qinqIfDot1qTunnelTypeIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfDot1qTunnelTypeIfIndex_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelTypeIfIndex_Object = MibTableColumn
qinqIfDot1qTunnelTypeIfIndex = _QinqIfDot1qTunnelTypeIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 2, 1, 1),
    _QinqIfDot1qTunnelTypeIfIndex_Type()
)
qinqIfDot1qTunnelTypeIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelTypeIfIndex.setStatus("current")


class _QinqIfDot1qTunnelType_Type(Integer32):
    """Custom type qinqIfDot1qTunnelType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("selective", 1),
          ("basic", 2))
    )


_QinqIfDot1qTunnelType_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelType_Object = MibTableColumn
qinqIfDot1qTunnelType = _QinqIfDot1qTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 2, 1, 2),
    _QinqIfDot1qTunnelType_Type()
)
qinqIfDot1qTunnelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelType.setStatus("current")
_QinqIfDot1qTunnelNativeVlanTable_Object = MibTable
qinqIfDot1qTunnelNativeVlanTable = _QinqIfDot1qTunnelNativeVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3)
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeVlanTable.setStatus("current")
_QinqIfDot1qTunnelNativeVlanEntry_Object = MibTableRow
qinqIfDot1qTunnelNativeVlanEntry = _QinqIfDot1qTunnelNativeVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3, 1)
)
qinqIfDot1qTunnelNativeVlanEntry.setIndexNames(
    (0, "SWITCH", "qinqIfDot1qTunnelNativeVlanIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeVlanEntry.setStatus("current")


class _QinqIfDot1qTunnelNativeVlanIfIndex_Type(Integer32):
    """Custom type qinqIfDot1qTunnelNativeVlanIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfDot1qTunnelNativeVlanIfIndex_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelNativeVlanIfIndex_Object = MibTableColumn
qinqIfDot1qTunnelNativeVlanIfIndex = _QinqIfDot1qTunnelNativeVlanIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3, 1, 1),
    _QinqIfDot1qTunnelNativeVlanIfIndex_Type()
)
qinqIfDot1qTunnelNativeVlanIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeVlanIfIndex.setStatus("current")


class _QinqIfDot1qTunnelNativeVlanId_Type(Integer32):
    """Custom type qinqIfDot1qTunnelNativeVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_QinqIfDot1qTunnelNativeVlanId_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelNativeVlanId_Object = MibTableColumn
qinqIfDot1qTunnelNativeVlanId = _QinqIfDot1qTunnelNativeVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3, 1, 2),
    _QinqIfDot1qTunnelNativeVlanId_Type()
)
qinqIfDot1qTunnelNativeVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeVlanId.setStatus("current")


class _QinqIfDot1qTunnelNativeIsInnerVlan_Type(Integer32):
    """Custom type qinqIfDot1qTunnelNativeIsInnerVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_QinqIfDot1qTunnelNativeIsInnerVlan_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelNativeIsInnerVlan_Object = MibTableColumn
qinqIfDot1qTunnelNativeIsInnerVlan = _QinqIfDot1qTunnelNativeIsInnerVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3, 1, 3),
    _QinqIfDot1qTunnelNativeIsInnerVlan_Type()
)
qinqIfDot1qTunnelNativeIsInnerVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeIsInnerVlan.setStatus("current")
_QinqIfDot1qTunnelNativeRowStatus_Type = RowStatus
_QinqIfDot1qTunnelNativeRowStatus_Object = MibTableColumn
qinqIfDot1qTunnelNativeRowStatus = _QinqIfDot1qTunnelNativeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 3, 1, 10),
    _QinqIfDot1qTunnelNativeRowStatus_Type()
)
qinqIfDot1qTunnelNativeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelNativeRowStatus.setStatus("current")
_QinqIfDot1qTunnelAllowVlanTable_Object = MibTable
qinqIfDot1qTunnelAllowVlanTable = _QinqIfDot1qTunnelAllowVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4)
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowVlanTable.setStatus("current")
_QinqIfDot1qTunnelAllowVlanEntry_Object = MibTableRow
qinqIfDot1qTunnelAllowVlanEntry = _QinqIfDot1qTunnelAllowVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1)
)
qinqIfDot1qTunnelAllowVlanEntry.setIndexNames(
    (0, "SWITCH", "qinqIfDot1qTunnelAllowVlanIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowVlanEntry.setStatus("current")


class _QinqIfDot1qTunnelAllowVlanIfIndex_Type(Integer32):
    """Custom type qinqIfDot1qTunnelAllowVlanIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfDot1qTunnelAllowVlanIfIndex_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelAllowVlanIfIndex_Object = MibTableColumn
qinqIfDot1qTunnelAllowVlanIfIndex = _QinqIfDot1qTunnelAllowVlanIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1, 1),
    _QinqIfDot1qTunnelAllowVlanIfIndex_Type()
)
qinqIfDot1qTunnelAllowVlanIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowVlanIfIndex.setStatus("current")


class _QinqIfDot1qTunnelAllowVlanIdList_Type(OctetString):
    """Custom type qinqIfDot1qTunnelAllowVlanIdList based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_QinqIfDot1qTunnelAllowVlanIdList_Type.__name__ = "OctetString"
_QinqIfDot1qTunnelAllowVlanIdList_Object = MibTableColumn
qinqIfDot1qTunnelAllowVlanIdList = _QinqIfDot1qTunnelAllowVlanIdList_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1, 2),
    _QinqIfDot1qTunnelAllowVlanIdList_Type()
)
qinqIfDot1qTunnelAllowVlanIdList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowVlanIdList.setStatus("current")


class _QinqIfDot1qTunnelAllowType_Type(Integer32):
    """Custom type qinqIfDot1qTunnelAllowType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("allowAll", 1),
          ("allowNone", 2),
          ("allowAdd", 3),
          ("allowRemove", 4))
    )


_QinqIfDot1qTunnelAllowType_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelAllowType_Object = MibTableColumn
qinqIfDot1qTunnelAllowType = _QinqIfDot1qTunnelAllowType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1, 3),
    _QinqIfDot1qTunnelAllowType_Type()
)
qinqIfDot1qTunnelAllowType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowType.setStatus("current")


class _QinqIfDot1qTunnelAllowVlanId_Type(Integer32):
    """Custom type qinqIfDot1qTunnelAllowVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_QinqIfDot1qTunnelAllowVlanId_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelAllowVlanId_Object = MibTableColumn
qinqIfDot1qTunnelAllowVlanId = _QinqIfDot1qTunnelAllowVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1, 4),
    _QinqIfDot1qTunnelAllowVlanId_Type()
)
qinqIfDot1qTunnelAllowVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowVlanId.setStatus("current")
_QinqIfDot1qTunnelAllowRowstatus_Type = RowStatus
_QinqIfDot1qTunnelAllowRowstatus_Object = MibTableColumn
qinqIfDot1qTunnelAllowRowstatus = _QinqIfDot1qTunnelAllowRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 4, 1, 5),
    _QinqIfDot1qTunnelAllowRowstatus_Type()
)
qinqIfDot1qTunnelAllowRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelAllowRowstatus.setStatus("current")
_QinqIfDot1qTunnelApplyVlanMappingTable_Object = MibTable
qinqIfDot1qTunnelApplyVlanMappingTable = _QinqIfDot1qTunnelApplyVlanMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 5)
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelApplyVlanMappingTable.setStatus("current")
_QinqIfDot1qTunnelApplyVlanMappingEntry_Object = MibTableRow
qinqIfDot1qTunnelApplyVlanMappingEntry = _QinqIfDot1qTunnelApplyVlanMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 5, 1)
)
qinqIfDot1qTunnelApplyVlanMappingEntry.setIndexNames(
    (0, "SWITCH", "qinqIfDot1qTunnelApplyIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelApplyVlanMappingEntry.setStatus("current")


class _QinqIfDot1qTunnelApplyIfIndex_Type(Integer32):
    """Custom type qinqIfDot1qTunnelApplyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfDot1qTunnelApplyIfIndex_Type.__name__ = "Integer32"
_QinqIfDot1qTunnelApplyIfIndex_Object = MibTableColumn
qinqIfDot1qTunnelApplyIfIndex = _QinqIfDot1qTunnelApplyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 5, 1, 1),
    _QinqIfDot1qTunnelApplyIfIndex_Type()
)
qinqIfDot1qTunnelApplyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelApplyIfIndex.setStatus("current")


class _QinqIfDot1qTunnelApplyVlanMappingTableName_Type(OctetString):
    """Custom type qinqIfDot1qTunnelApplyVlanMappingTableName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_QinqIfDot1qTunnelApplyVlanMappingTableName_Type.__name__ = "OctetString"
_QinqIfDot1qTunnelApplyVlanMappingTableName_Object = MibTableColumn
qinqIfDot1qTunnelApplyVlanMappingTableName = _QinqIfDot1qTunnelApplyVlanMappingTableName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 5, 1, 2),
    _QinqIfDot1qTunnelApplyVlanMappingTableName_Type()
)
qinqIfDot1qTunnelApplyVlanMappingTableName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelApplyVlanMappingTableName.setStatus("current")
_QinqIfDot1qTunnelApplyRowstatus_Type = RowStatus
_QinqIfDot1qTunnelApplyRowstatus_Object = MibTableColumn
qinqIfDot1qTunnelApplyRowstatus = _QinqIfDot1qTunnelApplyRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 5, 1, 3),
    _QinqIfDot1qTunnelApplyRowstatus_Type()
)
qinqIfDot1qTunnelApplyRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfDot1qTunnelApplyRowstatus.setStatus("current")
_QinqIfVlanTranslationEnableTable_Object = MibTable
qinqIfVlanTranslationEnableTable = _QinqIfVlanTranslationEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 6)
)
if mibBuilder.loadTexts:
    qinqIfVlanTranslationEnableTable.setStatus("current")
_QinqIfVlanTranslationEnableEntry_Object = MibTableRow
qinqIfVlanTranslationEnableEntry = _QinqIfVlanTranslationEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 6, 1)
)
qinqIfVlanTranslationEnableEntry.setIndexNames(
    (0, "SWITCH", "qinqIfVlanTransIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfVlanTranslationEnableEntry.setStatus("current")


class _QinqIfVlanTransIfIndex_Type(Integer32):
    """Custom type qinqIfVlanTransIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfVlanTransIfIndex_Type.__name__ = "Integer32"
_QinqIfVlanTransIfIndex_Object = MibTableColumn
qinqIfVlanTransIfIndex = _QinqIfVlanTransIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 6, 1, 1),
    _QinqIfVlanTransIfIndex_Type()
)
qinqIfVlanTransIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfVlanTransIfIndex.setStatus("current")


class _QinqIfVlanTransEnable_Type(Integer32):
    """Custom type qinqIfVlanTransEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_QinqIfVlanTransEnable_Type.__name__ = "Integer32"
_QinqIfVlanTransEnable_Object = MibTableColumn
qinqIfVlanTransEnable = _QinqIfVlanTransEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 6, 1, 2),
    _QinqIfVlanTransEnable_Type()
)
qinqIfVlanTransEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqIfVlanTransEnable.setStatus("current")
_QinqIfVlanTransApplyVlanMappingTable_Object = MibTable
qinqIfVlanTransApplyVlanMappingTable = _QinqIfVlanTransApplyVlanMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 7)
)
if mibBuilder.loadTexts:
    qinqIfVlanTransApplyVlanMappingTable.setStatus("current")
_QinqIfVlanTransApplyVlanMappingEntry_Object = MibTableRow
qinqIfVlanTransApplyVlanMappingEntry = _QinqIfVlanTransApplyVlanMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 7, 1)
)
qinqIfVlanTransApplyVlanMappingEntry.setIndexNames(
    (0, "SWITCH", "qinqIfVlanTransApplyIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfVlanTransApplyVlanMappingEntry.setStatus("current")


class _QinqIfVlanTransApplyIfIndex_Type(Integer32):
    """Custom type qinqIfVlanTransApplyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfVlanTransApplyIfIndex_Type.__name__ = "Integer32"
_QinqIfVlanTransApplyIfIndex_Object = MibTableColumn
qinqIfVlanTransApplyIfIndex = _QinqIfVlanTransApplyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 7, 1, 1),
    _QinqIfVlanTransApplyIfIndex_Type()
)
qinqIfVlanTransApplyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfVlanTransApplyIfIndex.setStatus("current")


class _QinqIfVlanTransApplyVlanMappingTableName_Type(OctetString):
    """Custom type qinqIfVlanTransApplyVlanMappingTableName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_QinqIfVlanTransApplyVlanMappingTableName_Type.__name__ = "OctetString"
_QinqIfVlanTransApplyVlanMappingTableName_Object = MibTableColumn
qinqIfVlanTransApplyVlanMappingTableName = _QinqIfVlanTransApplyVlanMappingTableName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 7, 1, 2),
    _QinqIfVlanTransApplyVlanMappingTableName_Type()
)
qinqIfVlanTransApplyVlanMappingTableName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfVlanTransApplyVlanMappingTableName.setStatus("current")
_QinqIfVlanTransApplyRowstatus_Type = RowStatus
_QinqIfVlanTransApplyRowstatus_Object = MibTableColumn
qinqIfVlanTransApplyRowstatus = _QinqIfVlanTransApplyRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 7, 1, 3),
    _QinqIfVlanTransApplyRowstatus_Type()
)
qinqIfVlanTransApplyRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    qinqIfVlanTransApplyRowstatus.setStatus("current")
_QinqIfDot1qEthertypeTable_Object = MibTable
qinqIfDot1qEthertypeTable = _QinqIfDot1qEthertypeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 8)
)
if mibBuilder.loadTexts:
    qinqIfDot1qEthertypeTable.setStatus("current")
_QinqIfDot1qEthertypeEntry_Object = MibTableRow
qinqIfDot1qEthertypeEntry = _QinqIfDot1qEthertypeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 8, 1)
)
qinqIfDot1qEthertypeEntry.setIndexNames(
    (0, "SWITCH", "qinqIfDot1qEthertypeIfIndex"),
)
if mibBuilder.loadTexts:
    qinqIfDot1qEthertypeEntry.setStatus("current")


class _QinqIfDot1qEthertypeIfIndex_Type(Integer32):
    """Custom type qinqIfDot1qEthertypeIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_QinqIfDot1qEthertypeIfIndex_Type.__name__ = "Integer32"
_QinqIfDot1qEthertypeIfIndex_Object = MibTableColumn
qinqIfDot1qEthertypeIfIndex = _QinqIfDot1qEthertypeIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 8, 1, 1),
    _QinqIfDot1qEthertypeIfIndex_Type()
)
qinqIfDot1qEthertypeIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    qinqIfDot1qEthertypeIfIndex.setStatus("current")


class _QinqIfDot1qEthertype_Type(OctetString):
    """Custom type qinqIfDot1qEthertype based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_QinqIfDot1qEthertype_Type.__name__ = "OctetString"
_QinqIfDot1qEthertype_Object = MibTableColumn
qinqIfDot1qEthertype = _QinqIfDot1qEthertype_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 2, 8, 1, 2),
    _QinqIfDot1qEthertype_Type()
)
qinqIfDot1qEthertype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqIfDot1qEthertype.setStatus("current")
_QinqVlanDot1qObject_ObjectIdentity = ObjectIdentity
qinqVlanDot1qObject = _QinqVlanDot1qObject_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 52, 3)
)
_QinqVlanDot1qTagNativeEnableTable_Object = MibTable
qinqVlanDot1qTagNativeEnableTable = _QinqVlanDot1qTagNativeEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 3, 1)
)
if mibBuilder.loadTexts:
    qinqVlanDot1qTagNativeEnableTable.setStatus("current")
_QinqVlanDot1qTagNativeEnableEntry_Object = MibTableRow
qinqVlanDot1qTagNativeEnableEntry = _QinqVlanDot1qTagNativeEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 3, 1, 1)
)
qinqVlanDot1qTagNativeEnableEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    qinqVlanDot1qTagNativeEnableEntry.setStatus("current")


class _QinqVlanDot1qTagNativeEnable_Type(Integer32):
    """Custom type qinqVlanDot1qTagNativeEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_QinqVlanDot1qTagNativeEnable_Type.__name__ = "Integer32"
_QinqVlanDot1qTagNativeEnable_Object = MibTableColumn
qinqVlanDot1qTagNativeEnable = _QinqVlanDot1qTagNativeEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 52, 3, 1, 1, 2),
    _QinqVlanDot1qTagNativeEnable_Type()
)
qinqVlanDot1qTagNativeEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    qinqVlanDot1qTagNativeEnable.setStatus("current")
_RmonExt_ObjectIdentity = ObjectIdentity
rmonExt = _RmonExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 53)
)
_RmonExtTable_Object = MibTable
rmonExtTable = _RmonExtTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 53, 1)
)
if mibBuilder.loadTexts:
    rmonExtTable.setStatus("current")
_RmonExtEntry_Object = MibTableRow
rmonExtEntry = _RmonExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 53, 1, 1)
)
rmonExtEntry.setIndexNames(
    (0, "SWITCH", "rmonExtIfIndex"),
)
if mibBuilder.loadTexts:
    rmonExtEntry.setStatus("current")


class _RmonExtIfIndex_Type(Integer32):
    """Custom type rmonExtIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RmonExtIfIndex_Type.__name__ = "Integer32"
_RmonExtIfIndex_Object = MibTableColumn
rmonExtIfIndex = _RmonExtIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 53, 1, 1, 1),
    _RmonExtIfIndex_Type()
)
rmonExtIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rmonExtIfIndex.setStatus("current")


class _RmonExtClrCounter_Type(Integer32):
    """Custom type rmonExtClrCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("resetCount", 1)
    )


_RmonExtClrCounter_Type.__name__ = "Integer32"
_RmonExtClrCounter_Object = MibTableColumn
rmonExtClrCounter = _RmonExtClrCounter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 53, 1, 1, 2),
    _RmonExtClrCounter_Type()
)
rmonExtClrCounter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rmonExtClrCounter.setStatus("current")
_RouteMap_ObjectIdentity = ObjectIdentity
routeMap = _RouteMap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 54)
)
_RipExt_ObjectIdentity = ObjectIdentity
ripExt = _RipExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 57)
)
_LdpExt_ObjectIdentity = ObjectIdentity
ldpExt = _LdpExt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 60)
)


class _LdpExtRouterLdp_Type(Integer32):
    """Custom type ldpExtRouterLdp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("destroy", 1),
          ("create", 2))
    )


_LdpExtRouterLdp_Type.__name__ = "Integer32"
_LdpExtRouterLdp_Object = MibScalar
ldpExtRouterLdp = _LdpExtRouterLdp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 1),
    _LdpExtRouterLdp_Type()
)
ldpExtRouterLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtRouterLdp.setStatus("current")
_LdpExtGlobalConfig_ObjectIdentity = ObjectIdentity
ldpExtGlobalConfig = _LdpExtGlobalConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2)
)


class _LdpExtGlobalConfigCtlMode_Type(Integer32):
    """Custom type ldpExtGlobalConfigCtlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("independent", 1),
          ("ordered", 2))
    )


_LdpExtGlobalConfigCtlMode_Type.__name__ = "Integer32"
_LdpExtGlobalConfigCtlMode_Object = MibScalar
ldpExtGlobalConfigCtlMode = _LdpExtGlobalConfigCtlMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 1),
    _LdpExtGlobalConfigCtlMode_Type()
)
ldpExtGlobalConfigCtlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigCtlMode.setStatus("current")


class _LdpExtGlobalConfigExplicitNull_Type(Integer32):
    """Custom type ldpExtGlobalConfigExplicitNull based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_LdpExtGlobalConfigExplicitNull_Type.__name__ = "Integer32"
_LdpExtGlobalConfigExplicitNull_Object = MibScalar
ldpExtGlobalConfigExplicitNull = _LdpExtGlobalConfigExplicitNull_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 2),
    _LdpExtGlobalConfigExplicitNull_Type()
)
ldpExtGlobalConfigExplicitNull.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigExplicitNull.setStatus("current")
_LdpExtGlobalConfigHelloInterval_Type = Integer32
_LdpExtGlobalConfigHelloInterval_Object = MibScalar
ldpExtGlobalConfigHelloInterval = _LdpExtGlobalConfigHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 3),
    _LdpExtGlobalConfigHelloInterval_Type()
)
ldpExtGlobalConfigHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigHelloInterval.setStatus("current")
_LdpExtGlobalConfigHoldTime_Type = Integer32
_LdpExtGlobalConfigHoldTime_Object = MibScalar
ldpExtGlobalConfigHoldTime = _LdpExtGlobalConfigHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 4),
    _LdpExtGlobalConfigHoldTime_Type()
)
ldpExtGlobalConfigHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigHoldTime.setStatus("current")
_LdpExtGlobalConfigKeepAliveInterval_Type = Integer32
_LdpExtGlobalConfigKeepAliveInterval_Object = MibScalar
ldpExtGlobalConfigKeepAliveInterval = _LdpExtGlobalConfigKeepAliveInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 5),
    _LdpExtGlobalConfigKeepAliveInterval_Type()
)
ldpExtGlobalConfigKeepAliveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigKeepAliveInterval.setStatus("current")
_LdpExtGlobalConfigKeepAliveTimeout_Type = Integer32
_LdpExtGlobalConfigKeepAliveTimeout_Object = MibScalar
ldpExtGlobalConfigKeepAliveTimeout = _LdpExtGlobalConfigKeepAliveTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 6),
    _LdpExtGlobalConfigKeepAliveTimeout_Type()
)
ldpExtGlobalConfigKeepAliveTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigKeepAliveTimeout.setStatus("current")


class _LdpExtGlobalConfigMulticastHellos_Type(Integer32):
    """Custom type ldpExtGlobalConfigMulticastHellos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_LdpExtGlobalConfigMulticastHellos_Type.__name__ = "Integer32"
_LdpExtGlobalConfigMulticastHellos_Object = MibScalar
ldpExtGlobalConfigMulticastHellos = _LdpExtGlobalConfigMulticastHellos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 7),
    _LdpExtGlobalConfigMulticastHellos_Type()
)
ldpExtGlobalConfigMulticastHellos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigMulticastHellos.setStatus("current")
_LdpExtGlobalConfigRouterId_Type = IpAddress
_LdpExtGlobalConfigRouterId_Object = MibScalar
ldpExtGlobalConfigRouterId = _LdpExtGlobalConfigRouterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 8),
    _LdpExtGlobalConfigRouterId_Type()
)
ldpExtGlobalConfigRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigRouterId.setStatus("current")
_LdpExtGlobalConfigTargetedPeerHelloInterval_Type = Integer32
_LdpExtGlobalConfigTargetedPeerHelloInterval_Object = MibScalar
ldpExtGlobalConfigTargetedPeerHelloInterval = _LdpExtGlobalConfigTargetedPeerHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 9),
    _LdpExtGlobalConfigTargetedPeerHelloInterval_Type()
)
ldpExtGlobalConfigTargetedPeerHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigTargetedPeerHelloInterval.setStatus("current")


class _LdpExtGlobalConfigTargetedPeerHelloReceipt_Type(Integer32):
    """Custom type ldpExtGlobalConfigTargetedPeerHelloReceipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_LdpExtGlobalConfigTargetedPeerHelloReceipt_Type.__name__ = "Integer32"
_LdpExtGlobalConfigTargetedPeerHelloReceipt_Object = MibScalar
ldpExtGlobalConfigTargetedPeerHelloReceipt = _LdpExtGlobalConfigTargetedPeerHelloReceipt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 10),
    _LdpExtGlobalConfigTargetedPeerHelloReceipt_Type()
)
ldpExtGlobalConfigTargetedPeerHelloReceipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigTargetedPeerHelloReceipt.setStatus("current")
_LdpExtGlobalConfigTargetedPeerHoldTime_Type = Integer32
_LdpExtGlobalConfigTargetedPeerHoldTime_Object = MibScalar
ldpExtGlobalConfigTargetedPeerHoldTime = _LdpExtGlobalConfigTargetedPeerHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 11),
    _LdpExtGlobalConfigTargetedPeerHoldTime_Type()
)
ldpExtGlobalConfigTargetedPeerHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigTargetedPeerHoldTime.setStatus("current")


class _LdpExtGlobalConfigClrLdpAdjacencyAll_Type(Integer32):
    """Custom type ldpExtGlobalConfigClrLdpAdjacencyAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_LdpExtGlobalConfigClrLdpAdjacencyAll_Type.__name__ = "Integer32"
_LdpExtGlobalConfigClrLdpAdjacencyAll_Object = MibScalar
ldpExtGlobalConfigClrLdpAdjacencyAll = _LdpExtGlobalConfigClrLdpAdjacencyAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 12),
    _LdpExtGlobalConfigClrLdpAdjacencyAll_Type()
)
ldpExtGlobalConfigClrLdpAdjacencyAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigClrLdpAdjacencyAll.setStatus("current")


class _LdpExtGlobalConfigClrLdpSessionAll_Type(Integer32):
    """Custom type ldpExtGlobalConfigClrLdpSessionAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_LdpExtGlobalConfigClrLdpSessionAll_Type.__name__ = "Integer32"
_LdpExtGlobalConfigClrLdpSessionAll_Object = MibScalar
ldpExtGlobalConfigClrLdpSessionAll = _LdpExtGlobalConfigClrLdpSessionAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 13),
    _LdpExtGlobalConfigClrLdpSessionAll_Type()
)
ldpExtGlobalConfigClrLdpSessionAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigClrLdpSessionAll.setStatus("current")


class _LdpExtGlobalConfigClrLdpStatic_Type(Integer32):
    """Custom type ldpExtGlobalConfigClrLdpStatic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_LdpExtGlobalConfigClrLdpStatic_Type.__name__ = "Integer32"
_LdpExtGlobalConfigClrLdpStatic_Object = MibScalar
ldpExtGlobalConfigClrLdpStatic = _LdpExtGlobalConfigClrLdpStatic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 14),
    _LdpExtGlobalConfigClrLdpStatic_Type()
)
ldpExtGlobalConfigClrLdpStatic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigClrLdpStatic.setStatus("current")


class _LdpExtGlobalConfigClrLdpStaticAdvLbls_Type(Integer32):
    """Custom type ldpExtGlobalConfigClrLdpStaticAdvLbls based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("noUse", 0),
          ("resetCount", 1))
    )


_LdpExtGlobalConfigClrLdpStaticAdvLbls_Type.__name__ = "Integer32"
_LdpExtGlobalConfigClrLdpStaticAdvLbls_Object = MibScalar
ldpExtGlobalConfigClrLdpStaticAdvLbls = _LdpExtGlobalConfigClrLdpStaticAdvLbls_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 2, 15),
    _LdpExtGlobalConfigClrLdpStaticAdvLbls_Type()
)
ldpExtGlobalConfigClrLdpStaticAdvLbls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigClrLdpStaticAdvLbls.setStatus("current")
_LdpExtIfConfigTable_Object = MibTable
ldpExtIfConfigTable = _LdpExtIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3)
)
if mibBuilder.loadTexts:
    ldpExtIfConfigTable.setStatus("current")
_LdpExtIfConfigEntry_Object = MibTableRow
ldpExtIfConfigEntry = _LdpExtIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1)
)
ldpExtIfConfigEntry.setIndexNames(
    (0, "SWITCH", "ldpExtIfConfigIfIndex"),
)
if mibBuilder.loadTexts:
    ldpExtIfConfigEntry.setStatus("current")


class _LdpExtIfConfigIfIndex_Type(Integer32):
    """Custom type ldpExtIfConfigIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LdpExtIfConfigIfIndex_Type.__name__ = "Integer32"
_LdpExtIfConfigIfIndex_Object = MibTableColumn
ldpExtIfConfigIfIndex = _LdpExtIfConfigIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 1),
    _LdpExtIfConfigIfIndex_Type()
)
ldpExtIfConfigIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtIfConfigIfIndex.setStatus("current")
_LdpExtIfConfigHelloInterval_Type = Integer32
_LdpExtIfConfigHelloInterval_Object = MibTableColumn
ldpExtIfConfigHelloInterval = _LdpExtIfConfigHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 2),
    _LdpExtIfConfigHelloInterval_Type()
)
ldpExtIfConfigHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigHelloInterval.setStatus("current")
_LdpExtIfConfigHoldTime_Type = Integer32
_LdpExtIfConfigHoldTime_Object = MibTableColumn
ldpExtIfConfigHoldTime = _LdpExtIfConfigHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 3),
    _LdpExtIfConfigHoldTime_Type()
)
ldpExtIfConfigHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigHoldTime.setStatus("current")
_LdpExtIfConfigKeepAliveInterval_Type = Integer32
_LdpExtIfConfigKeepAliveInterval_Object = MibTableColumn
ldpExtIfConfigKeepAliveInterval = _LdpExtIfConfigKeepAliveInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 4),
    _LdpExtIfConfigKeepAliveInterval_Type()
)
ldpExtIfConfigKeepAliveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigKeepAliveInterval.setStatus("current")
_LdpExtIfConfigKeepAliveTimeout_Type = Integer32
_LdpExtIfConfigKeepAliveTimeout_Object = MibTableColumn
ldpExtIfConfigKeepAliveTimeout = _LdpExtIfConfigKeepAliveTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 5),
    _LdpExtIfConfigKeepAliveTimeout_Type()
)
ldpExtIfConfigKeepAliveTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigKeepAliveTimeout.setStatus("current")


class _LdpExtIfConfigMulticastHellos_Type(Integer32):
    """Custom type ldpExtIfConfigMulticastHellos based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_LdpExtIfConfigMulticastHellos_Type.__name__ = "Integer32"
_LdpExtIfConfigMulticastHellos_Object = MibTableColumn
ldpExtIfConfigMulticastHellos = _LdpExtIfConfigMulticastHellos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 6),
    _LdpExtIfConfigMulticastHellos_Type()
)
ldpExtIfConfigMulticastHellos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigMulticastHellos.setStatus("current")
_LdpExtIfConfigTargetedPeerHelloInterval_Type = Integer32
_LdpExtIfConfigTargetedPeerHelloInterval_Object = MibTableColumn
ldpExtIfConfigTargetedPeerHelloInterval = _LdpExtIfConfigTargetedPeerHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 7),
    _LdpExtIfConfigTargetedPeerHelloInterval_Type()
)
ldpExtIfConfigTargetedPeerHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigTargetedPeerHelloInterval.setStatus("current")
_LdpExtIfConfigTargetedPeerHoldTime_Type = Integer32
_LdpExtIfConfigTargetedPeerHoldTime_Object = MibTableColumn
ldpExtIfConfigTargetedPeerHoldTime = _LdpExtIfConfigTargetedPeerHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 8),
    _LdpExtIfConfigTargetedPeerHoldTime_Type()
)
ldpExtIfConfigTargetedPeerHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigTargetedPeerHoldTime.setStatus("current")


class _LdpExtIfConfigEnableLdp_Type(Integer32):
    """Custom type ldpExtIfConfigEnableLdp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_LdpExtIfConfigEnableLdp_Type.__name__ = "Integer32"
_LdpExtIfConfigEnableLdp_Object = MibTableColumn
ldpExtIfConfigEnableLdp = _LdpExtIfConfigEnableLdp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 3, 1, 9),
    _LdpExtIfConfigEnableLdp_Type()
)
ldpExtIfConfigEnableLdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtIfConfigEnableLdp.setStatus("current")
_LdpExtConfigTargetPeerTable_Object = MibTable
ldpExtConfigTargetPeerTable = _LdpExtConfigTargetPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 4)
)
if mibBuilder.loadTexts:
    ldpExtConfigTargetPeerTable.setStatus("current")
_LdpExtConfigTargetPeerEntry_Object = MibTableRow
ldpExtConfigTargetPeerEntry = _LdpExtConfigTargetPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 4, 1)
)
ldpExtConfigTargetPeerEntry.setIndexNames(
    (0, "SWITCH", "ldpExtConfigTargetPeerAddr"),
)
if mibBuilder.loadTexts:
    ldpExtConfigTargetPeerEntry.setStatus("current")
_LdpExtConfigTargetPeerAddr_Type = IpAddress
_LdpExtConfigTargetPeerAddr_Object = MibTableColumn
ldpExtConfigTargetPeerAddr = _LdpExtConfigTargetPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 4, 1, 1),
    _LdpExtConfigTargetPeerAddr_Type()
)
ldpExtConfigTargetPeerAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtConfigTargetPeerAddr.setStatus("current")
_LdpExtConfigTargetPeerStatus_Type = RowStatus
_LdpExtConfigTargetPeerStatus_Object = MibTableColumn
ldpExtConfigTargetPeerStatus = _LdpExtConfigTargetPeerStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 4, 1, 2),
    _LdpExtConfigTargetPeerStatus_Type()
)
ldpExtConfigTargetPeerStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ldpExtConfigTargetPeerStatus.setStatus("current")
_LdpExtConfigTransAddrTable_Object = MibTable
ldpExtConfigTransAddrTable = _LdpExtConfigTransAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 5)
)
if mibBuilder.loadTexts:
    ldpExtConfigTransAddrTable.setStatus("current")
_LdpExtConfigTransAddrEntry_Object = MibTableRow
ldpExtConfigTransAddrEntry = _LdpExtConfigTransAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 5, 1)
)
ldpExtConfigTransAddrEntry.setIndexNames(
    (0, "SWITCH", "ldpExtGlobalConfigTransportAddress"),
)
if mibBuilder.loadTexts:
    ldpExtConfigTransAddrEntry.setStatus("current")
_LdpExtGlobalConfigTransportAddress_Type = IpAddress
_LdpExtGlobalConfigTransportAddress_Object = MibTableColumn
ldpExtGlobalConfigTransportAddress = _LdpExtGlobalConfigTransportAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 5, 1, 1),
    _LdpExtGlobalConfigTransportAddress_Type()
)
ldpExtGlobalConfigTransportAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigTransportAddress.setStatus("current")
_LdpExtGlobalConfigTransportAddressStatus_Type = RowStatus
_LdpExtGlobalConfigTransportAddressStatus_Object = MibTableColumn
ldpExtGlobalConfigTransportAddressStatus = _LdpExtGlobalConfigTransportAddressStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 5, 1, 2),
    _LdpExtGlobalConfigTransportAddressStatus_Type()
)
ldpExtGlobalConfigTransportAddressStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ldpExtGlobalConfigTransportAddressStatus.setStatus("current")
_LdpExtConfigAdvLblsTable_Object = MibTable
ldpExtConfigAdvLblsTable = _LdpExtConfigAdvLblsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6)
)
if mibBuilder.loadTexts:
    ldpExtConfigAdvLblsTable.setStatus("current")
_LdpExtConfigAdvLblsEntry_Object = MibTableRow
ldpExtConfigAdvLblsEntry = _LdpExtConfigAdvLblsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1)
)
ldpExtConfigAdvLblsEntry.setIndexNames(
    (0, "SWITCH", "ldpExtAdvLblsPrefixIndex"),
    (0, "SWITCH", "ldpExtAdvLblsPeerIndex"),
)
if mibBuilder.loadTexts:
    ldpExtConfigAdvLblsEntry.setStatus("current")


class _LdpExtAdvLblsPrefixIndex_Type(Integer32):
    """Custom type ldpExtAdvLblsPrefixIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LdpExtAdvLblsPrefixIndex_Type.__name__ = "Integer32"
_LdpExtAdvLblsPrefixIndex_Object = MibTableColumn
ldpExtAdvLblsPrefixIndex = _LdpExtAdvLblsPrefixIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1, 1),
    _LdpExtAdvLblsPrefixIndex_Type()
)
ldpExtAdvLblsPrefixIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtAdvLblsPrefixIndex.setStatus("current")


class _LdpExtAdvLblsPeerIndex_Type(Integer32):
    """Custom type ldpExtAdvLblsPeerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LdpExtAdvLblsPeerIndex_Type.__name__ = "Integer32"
_LdpExtAdvLblsPeerIndex_Object = MibTableColumn
ldpExtAdvLblsPeerIndex = _LdpExtAdvLblsPeerIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1, 2),
    _LdpExtAdvLblsPeerIndex_Type()
)
ldpExtAdvLblsPeerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtAdvLblsPeerIndex.setStatus("current")


class _LdpExtAdvLblsPrefixName_Type(OctetString):
    """Custom type ldpExtAdvLblsPrefixName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_LdpExtAdvLblsPrefixName_Type.__name__ = "OctetString"
_LdpExtAdvLblsPrefixName_Object = MibTableColumn
ldpExtAdvLblsPrefixName = _LdpExtAdvLblsPrefixName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1, 3),
    _LdpExtAdvLblsPrefixName_Type()
)
ldpExtAdvLblsPrefixName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ldpExtAdvLblsPrefixName.setStatus("current")


class _LdpExtAdvLblsPeerName_Type(OctetString):
    """Custom type ldpExtAdvLblsPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_LdpExtAdvLblsPeerName_Type.__name__ = "OctetString"
_LdpExtAdvLblsPeerName_Object = MibTableColumn
ldpExtAdvLblsPeerName = _LdpExtAdvLblsPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1, 4),
    _LdpExtAdvLblsPeerName_Type()
)
ldpExtAdvLblsPeerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ldpExtAdvLblsPeerName.setStatus("current")
_LdpExtAdvLblsStatus_Type = RowStatus
_LdpExtAdvLblsStatus_Object = MibTableColumn
ldpExtAdvLblsStatus = _LdpExtAdvLblsStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 6, 1, 5),
    _LdpExtAdvLblsStatus_Type()
)
ldpExtAdvLblsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtAdvLblsStatus.setStatus("current")
_LdpExtConfigAdvLblsToAnyTable_Object = MibTable
ldpExtConfigAdvLblsToAnyTable = _LdpExtConfigAdvLblsToAnyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 7)
)
if mibBuilder.loadTexts:
    ldpExtConfigAdvLblsToAnyTable.setStatus("current")
_LdpExtConfigAdvLblsToAnyEntry_Object = MibTableRow
ldpExtConfigAdvLblsToAnyEntry = _LdpExtConfigAdvLblsToAnyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 7, 1)
)
ldpExtConfigAdvLblsToAnyEntry.setIndexNames(
    (0, "SWITCH", "ldpExtAdvLblsPrefixIndex"),
)
if mibBuilder.loadTexts:
    ldpExtConfigAdvLblsToAnyEntry.setStatus("current")
_LdpExtAdvLblsToAnyPrefixIndex_Type = Integer32
_LdpExtAdvLblsToAnyPrefixIndex_Object = MibTableColumn
ldpExtAdvLblsToAnyPrefixIndex = _LdpExtAdvLblsToAnyPrefixIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 7, 1, 1),
    _LdpExtAdvLblsToAnyPrefixIndex_Type()
)
ldpExtAdvLblsToAnyPrefixIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ldpExtAdvLblsToAnyPrefixIndex.setStatus("current")


class _LdpExtAdvLblsToAnyPrefixName_Type(OctetString):
    """Custom type ldpExtAdvLblsToAnyPrefixName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_LdpExtAdvLblsToAnyPrefixName_Type.__name__ = "OctetString"
_LdpExtAdvLblsToAnyPrefixName_Object = MibTableColumn
ldpExtAdvLblsToAnyPrefixName = _LdpExtAdvLblsToAnyPrefixName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 7, 1, 2),
    _LdpExtAdvLblsToAnyPrefixName_Type()
)
ldpExtAdvLblsToAnyPrefixName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtAdvLblsToAnyPrefixName.setStatus("current")
_LdpExtAdvLblsToAnyStatus_Type = RowStatus
_LdpExtAdvLblsToAnyStatus_Object = MibTableColumn
ldpExtAdvLblsToAnyStatus = _LdpExtAdvLblsToAnyStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 60, 7, 1, 3),
    _LdpExtAdvLblsToAnyStatus_Type()
)
ldpExtAdvLblsToAnyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpExtAdvLblsToAnyStatus.setStatus("current")
_Bgp_ObjectIdentity = ObjectIdentity
bgp = _Bgp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 68)
)


class _BgpLocalAs_Type(Integer32):
    """Custom type bgpLocalAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BgpLocalAs_Type.__name__ = "Integer32"
_BgpLocalAs_Object = MibScalar
bgpLocalAs = _BgpLocalAs_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 1),
    _BgpLocalAs_Type()
)
bgpLocalAs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpLocalAs.setStatus("current")
_BgpMibBinding_ObjectIdentity = ObjectIdentity
bgpMibBinding = _BgpMibBinding_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 68, 2)
)


class _BgpMibBindingVrf_Type(Integer32):
    """Custom type bgpMibBindingVrf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_BgpMibBindingVrf_Type.__name__ = "Integer32"
_BgpMibBindingVrf_Object = MibScalar
bgpMibBindingVrf = _BgpMibBindingVrf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 2, 1),
    _BgpMibBindingVrf_Type()
)
bgpMibBindingVrf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpMibBindingVrf.setStatus("current")
_BgpMibBindingVpnv4_Type = TruthValue
_BgpMibBindingVpnv4_Object = MibScalar
bgpMibBindingVpnv4 = _BgpMibBindingVpnv4_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 2, 2),
    _BgpMibBindingVpnv4_Type()
)
bgpMibBindingVpnv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpMibBindingVpnv4.setStatus("current")
_BgpGlobalConfig_ObjectIdentity = ObjectIdentity
bgpGlobalConfig = _BgpGlobalConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3)
)
_BgpAlwaysCompareMed_Type = TruthValue
_BgpAlwaysCompareMed_Object = MibScalar
bgpAlwaysCompareMed = _BgpAlwaysCompareMed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 1),
    _BgpAlwaysCompareMed_Type()
)
bgpAlwaysCompareMed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAlwaysCompareMed.setStatus("current")
_BgpDeterministicMed_Type = TruthValue
_BgpDeterministicMed_Object = MibScalar
bgpDeterministicMed = _BgpDeterministicMed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 2),
    _BgpDeterministicMed_Type()
)
bgpDeterministicMed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDeterministicMed.setStatus("current")
_BgpFastExternalFailover_Type = TruthValue
_BgpFastExternalFailover_Object = MibScalar
bgpFastExternalFailover = _BgpFastExternalFailover_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 3),
    _BgpFastExternalFailover_Type()
)
bgpFastExternalFailover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpFastExternalFailover.setStatus("current")
_BgpEnforceFirstAS_Type = TruthValue
_BgpEnforceFirstAS_Object = MibScalar
bgpEnforceFirstAS = _BgpEnforceFirstAS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 4),
    _BgpEnforceFirstAS_Type()
)
bgpEnforceFirstAS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpEnforceFirstAS.setStatus("current")
_BgpBestpathCompareRouterid_Type = TruthValue
_BgpBestpathCompareRouterid_Object = MibScalar
bgpBestpathCompareRouterid = _BgpBestpathCompareRouterid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 5),
    _BgpBestpathCompareRouterid_Type()
)
bgpBestpathCompareRouterid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpBestpathCompareRouterid.setStatus("current")
_BgpBestpathCompareConfedASpath_Type = TruthValue
_BgpBestpathCompareConfedASpath_Object = MibScalar
bgpBestpathCompareConfedASpath = _BgpBestpathCompareConfedASpath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 6),
    _BgpBestpathCompareConfedASpath_Type()
)
bgpBestpathCompareConfedASpath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpBestpathCompareConfedASpath.setStatus("current")
_BgpBestpathASPathIgnore_Type = TruthValue
_BgpBestpathASPathIgnore_Object = MibScalar
bgpBestpathASPathIgnore = _BgpBestpathASPathIgnore_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 7),
    _BgpBestpathASPathIgnore_Type()
)
bgpBestpathASPathIgnore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpBestpathASPathIgnore.setStatus("current")


class _BgpBestpathMed_Type(Integer32):
    """Custom type bgpBestpathMed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("confed", 1),
          ("missing", 2),
          ("confedAndMissing", 3),
          ("none", 4))
    )


_BgpBestpathMed_Type.__name__ = "Integer32"
_BgpBestpathMed_Object = MibScalar
bgpBestpathMed = _BgpBestpathMed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 8),
    _BgpBestpathMed_Type()
)
bgpBestpathMed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpBestpathMed.setStatus("current")
_BgpDefaultIpv4Unicast_Type = TruthValue
_BgpDefaultIpv4Unicast_Object = MibScalar
bgpDefaultIpv4Unicast = _BgpDefaultIpv4Unicast_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 9),
    _BgpDefaultIpv4Unicast_Type()
)
bgpDefaultIpv4Unicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDefaultIpv4Unicast.setStatus("current")


class _BgpDefaultLocalPreference_Type(Unsigned32):
    """Custom type bgpDefaultLocalPreference based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_BgpDefaultLocalPreference_Type.__name__ = "Unsigned32"
_BgpDefaultLocalPreference_Object = MibScalar
bgpDefaultLocalPreference = _BgpDefaultLocalPreference_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 10),
    _BgpDefaultLocalPreference_Type()
)
bgpDefaultLocalPreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDefaultLocalPreference.setStatus("current")
_BgpLogNeighborChanges_Type = TruthValue
_BgpLogNeighborChanges_Object = MibScalar
bgpLogNeighborChanges = _BgpLogNeighborChanges_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 11),
    _BgpLogNeighborChanges_Type()
)
bgpLogNeighborChanges.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpLogNeighborChanges.setStatus("current")


class _BgpConfederationIdentifier_Type(Integer32):
    """Custom type bgpConfederationIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BgpConfederationIdentifier_Type.__name__ = "Integer32"
_BgpConfederationIdentifier_Object = MibScalar
bgpConfederationIdentifier = _BgpConfederationIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 12),
    _BgpConfederationIdentifier_Type()
)
bgpConfederationIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpConfederationIdentifier.setStatus("current")


class _BgpDistanceExternalRoutes_Type(Integer32):
    """Custom type bgpDistanceExternalRoutes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_BgpDistanceExternalRoutes_Type.__name__ = "Integer32"
_BgpDistanceExternalRoutes_Object = MibScalar
bgpDistanceExternalRoutes = _BgpDistanceExternalRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 13),
    _BgpDistanceExternalRoutes_Type()
)
bgpDistanceExternalRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDistanceExternalRoutes.setStatus("current")


class _BgpDistanceInternalRoutes_Type(Integer32):
    """Custom type bgpDistanceInternalRoutes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_BgpDistanceInternalRoutes_Type.__name__ = "Integer32"
_BgpDistanceInternalRoutes_Object = MibScalar
bgpDistanceInternalRoutes = _BgpDistanceInternalRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 14),
    _BgpDistanceInternalRoutes_Type()
)
bgpDistanceInternalRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDistanceInternalRoutes.setStatus("current")


class _BgpDistancelocalRoutes_Type(Integer32):
    """Custom type bgpDistancelocalRoutes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_BgpDistancelocalRoutes_Type.__name__ = "Integer32"
_BgpDistancelocalRoutes_Object = MibScalar
bgpDistancelocalRoutes = _BgpDistancelocalRoutes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 15),
    _BgpDistancelocalRoutes_Type()
)
bgpDistancelocalRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpDistancelocalRoutes.setStatus("current")
_BgpClientToClientReflection_Type = TruthValue
_BgpClientToClientReflection_Object = MibScalar
bgpClientToClientReflection = _BgpClientToClientReflection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 16),
    _BgpClientToClientReflection_Type()
)
bgpClientToClientReflection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClientToClientReflection.setStatus("current")


class _BgpScanTime_Type(Integer32):
    """Custom type bgpScanTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_BgpScanTime_Type.__name__ = "Integer32"
_BgpScanTime_Object = MibScalar
bgpScanTime = _BgpScanTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 17),
    _BgpScanTime_Type()
)
bgpScanTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpScanTime.setStatus("current")


class _BgpClusterIDDigit_Type(Unsigned32):
    """Custom type bgpClusterIDDigit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BgpClusterIDDigit_Type.__name__ = "Unsigned32"
_BgpClusterIDDigit_Object = MibScalar
bgpClusterIDDigit = _BgpClusterIDDigit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 18),
    _BgpClusterIDDigit_Type()
)
bgpClusterIDDigit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClusterIDDigit.setStatus("current")
_BgpClusterIDIp_Type = IpAddress
_BgpClusterIDIp_Object = MibScalar
bgpClusterIDIp = _BgpClusterIDIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 3, 19),
    _BgpClusterIDIp_Type()
)
bgpClusterIDIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClusterIDIp.setStatus("current")
_BgpPeerExtTable_Object = MibTable
bgpPeerExtTable = _BgpPeerExtTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4)
)
if mibBuilder.loadTexts:
    bgpPeerExtTable.setStatus("current")
_BgpPeerExtEntry_Object = MibTableRow
bgpPeerExtEntry = _BgpPeerExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1)
)
bgpPeerExtEntry.setIndexNames(
    (0, "SWITCH", "bgpPeerExtPeer"),
)
if mibBuilder.loadTexts:
    bgpPeerExtEntry.setStatus("current")
_BgpPeerExtPeer_Type = InetAddress
_BgpPeerExtPeer_Object = MibTableColumn
bgpPeerExtPeer = _BgpPeerExtPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 1),
    _BgpPeerExtPeer_Type()
)
bgpPeerExtPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bgpPeerExtPeer.setStatus("current")


class _BgpPeerExtRemoteAS_Type(Integer32):
    """Custom type bgpPeerExtRemoteAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BgpPeerExtRemoteAS_Type.__name__ = "Integer32"
_BgpPeerExtRemoteAS_Object = MibTableColumn
bgpPeerExtRemoteAS = _BgpPeerExtRemoteAS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 2),
    _BgpPeerExtRemoteAS_Type()
)
bgpPeerExtRemoteAS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtRemoteAS.setStatus("current")
_BgpPeerExtRowStats_Type = RowStatus
_BgpPeerExtRowStats_Object = MibTableColumn
bgpPeerExtRowStats = _BgpPeerExtRowStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 3),
    _BgpPeerExtRowStats_Type()
)
bgpPeerExtRowStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtRowStats.setStatus("current")
_BgpPeerExtActivate_Type = TruthValue
_BgpPeerExtActivate_Object = MibTableColumn
bgpPeerExtActivate = _BgpPeerExtActivate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 4),
    _BgpPeerExtActivate_Type()
)
bgpPeerExtActivate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtActivate.setStatus("current")
_BgpPeerExtPassive_Type = TruthValue
_BgpPeerExtPassive_Object = MibTableColumn
bgpPeerExtPassive = _BgpPeerExtPassive_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 5),
    _BgpPeerExtPassive_Type()
)
bgpPeerExtPassive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtPassive.setStatus("current")


class _BgpPeerExtDescription_Type(OctetString):
    """Custom type bgpPeerExtDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BgpPeerExtDescription_Type.__name__ = "OctetString"
_BgpPeerExtDescription_Object = MibTableColumn
bgpPeerExtDescription = _BgpPeerExtDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 6),
    _BgpPeerExtDescription_Type()
)
bgpPeerExtDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtDescription.setStatus("current")
_BgpPeerExtCapabilityRouteRefresh_Type = TruthValue
_BgpPeerExtCapabilityRouteRefresh_Object = MibTableColumn
bgpPeerExtCapabilityRouteRefresh = _BgpPeerExtCapabilityRouteRefresh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 7),
    _BgpPeerExtCapabilityRouteRefresh_Type()
)
bgpPeerExtCapabilityRouteRefresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtCapabilityRouteRefresh.setStatus("current")
_BgpPeerExtCapabilityDynamic_Type = TruthValue
_BgpPeerExtCapabilityDynamic_Object = MibTableColumn
bgpPeerExtCapabilityDynamic = _BgpPeerExtCapabilityDynamic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 8),
    _BgpPeerExtCapabilityDynamic_Type()
)
bgpPeerExtCapabilityDynamic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtCapabilityDynamic.setStatus("current")
_BgpPeerExtDontCapabilityNegotiate_Type = TruthValue
_BgpPeerExtDontCapabilityNegotiate_Object = MibTableColumn
bgpPeerExtDontCapabilityNegotiate = _BgpPeerExtDontCapabilityNegotiate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 9),
    _BgpPeerExtDontCapabilityNegotiate_Type()
)
bgpPeerExtDontCapabilityNegotiate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtDontCapabilityNegotiate.setStatus("current")


class _BgpPeerExtCapabilityOrf_Type(Integer32):
    """Custom type bgpPeerExtCapabilityOrf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("send", 1),
          ("receive", 2),
          ("both", 3),
          ("none", 4))
    )


_BgpPeerExtCapabilityOrf_Type.__name__ = "Integer32"
_BgpPeerExtCapabilityOrf_Object = MibTableColumn
bgpPeerExtCapabilityOrf = _BgpPeerExtCapabilityOrf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 10),
    _BgpPeerExtCapabilityOrf_Type()
)
bgpPeerExtCapabilityOrf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtCapabilityOrf.setStatus("current")
_BgpPeerExtNextHopSelf_Type = TruthValue
_BgpPeerExtNextHopSelf_Object = MibTableColumn
bgpPeerExtNextHopSelf = _BgpPeerExtNextHopSelf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 11),
    _BgpPeerExtNextHopSelf_Type()
)
bgpPeerExtNextHopSelf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtNextHopSelf.setStatus("current")
_BgpPeerExtRemovePrivateAS_Type = TruthValue
_BgpPeerExtRemovePrivateAS_Object = MibTableColumn
bgpPeerExtRemovePrivateAS = _BgpPeerExtRemovePrivateAS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 12),
    _BgpPeerExtRemovePrivateAS_Type()
)
bgpPeerExtRemovePrivateAS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtRemovePrivateAS.setStatus("current")


class _BgpPeerExtSendCommunity_Type(Integer32):
    """Custom type bgpPeerExtSendCommunity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("standard", 1),
          ("extended", 2),
          ("both", 3),
          ("none", 4))
    )


_BgpPeerExtSendCommunity_Type.__name__ = "Integer32"
_BgpPeerExtSendCommunity_Object = MibTableColumn
bgpPeerExtSendCommunity = _BgpPeerExtSendCommunity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 13),
    _BgpPeerExtSendCommunity_Type()
)
bgpPeerExtSendCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtSendCommunity.setStatus("current")
_BgpPeerExtSoftReconfig_Type = TruthValue
_BgpPeerExtSoftReconfig_Object = MibTableColumn
bgpPeerExtSoftReconfig = _BgpPeerExtSoftReconfig_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 14),
    _BgpPeerExtSoftReconfig_Type()
)
bgpPeerExtSoftReconfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtSoftReconfig.setStatus("current")
_BgpPeerExtRouteReflectorClient_Type = TruthValue
_BgpPeerExtRouteReflectorClient_Object = MibTableColumn
bgpPeerExtRouteReflectorClient = _BgpPeerExtRouteReflectorClient_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 15),
    _BgpPeerExtRouteReflectorClient_Type()
)
bgpPeerExtRouteReflectorClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtRouteReflectorClient.setStatus("current")
_BgpPeerExtRouteServerClient_Type = TruthValue
_BgpPeerExtRouteServerClient_Object = MibTableColumn
bgpPeerExtRouteServerClient = _BgpPeerExtRouteServerClient_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 16),
    _BgpPeerExtRouteServerClient_Type()
)
bgpPeerExtRouteServerClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtRouteServerClient.setStatus("current")
_BgpPeerExtAttrUnchangedASPath_Type = TruthValue
_BgpPeerExtAttrUnchangedASPath_Object = MibTableColumn
bgpPeerExtAttrUnchangedASPath = _BgpPeerExtAttrUnchangedASPath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 17),
    _BgpPeerExtAttrUnchangedASPath_Type()
)
bgpPeerExtAttrUnchangedASPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtAttrUnchangedASPath.setStatus("current")
_BgpPeerExtAttrUnchangedNexthop_Type = TruthValue
_BgpPeerExtAttrUnchangedNexthop_Object = MibTableColumn
bgpPeerExtAttrUnchangedNexthop = _BgpPeerExtAttrUnchangedNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 18),
    _BgpPeerExtAttrUnchangedNexthop_Type()
)
bgpPeerExtAttrUnchangedNexthop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtAttrUnchangedNexthop.setStatus("current")
_BgpPeerExtAttrUnchangedMed_Type = TruthValue
_BgpPeerExtAttrUnchangedMed_Object = MibTableColumn
bgpPeerExtAttrUnchangedMed = _BgpPeerExtAttrUnchangedMed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 19),
    _BgpPeerExtAttrUnchangedMed_Type()
)
bgpPeerExtAttrUnchangedMed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtAttrUnchangedMed.setStatus("current")
_BgpPeerExtUpdateSource_Type = Integer32
_BgpPeerExtUpdateSource_Object = MibTableColumn
bgpPeerExtUpdateSource = _BgpPeerExtUpdateSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 20),
    _BgpPeerExtUpdateSource_Type()
)
bgpPeerExtUpdateSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtUpdateSource.setStatus("current")
_BgpPeerExtDefaultOriginate_Type = TruthValue
_BgpPeerExtDefaultOriginate_Object = MibTableColumn
bgpPeerExtDefaultOriginate = _BgpPeerExtDefaultOriginate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 21),
    _BgpPeerExtDefaultOriginate_Type()
)
bgpPeerExtDefaultOriginate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtDefaultOriginate.setStatus("current")
_BgpPeerExtPort_Type = Integer32
_BgpPeerExtPort_Object = MibTableColumn
bgpPeerExtPort = _BgpPeerExtPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 22),
    _BgpPeerExtPort_Type()
)
bgpPeerExtPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtPort.setStatus("current")
_BgpPeerExtWeight_Type = Integer32
_BgpPeerExtWeight_Object = MibTableColumn
bgpPeerExtWeight = _BgpPeerExtWeight_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 23),
    _BgpPeerExtWeight_Type()
)
bgpPeerExtWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtWeight.setStatus("current")
_BgpPeerExtCollideEstablished_Type = TruthValue
_BgpPeerExtCollideEstablished_Object = MibTableColumn
bgpPeerExtCollideEstablished = _BgpPeerExtCollideEstablished_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 24),
    _BgpPeerExtCollideEstablished_Type()
)
bgpPeerExtCollideEstablished.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtCollideEstablished.setStatus("current")
_BgpPeerExtOverrideCapability_Type = TruthValue
_BgpPeerExtOverrideCapability_Object = MibTableColumn
bgpPeerExtOverrideCapability = _BgpPeerExtOverrideCapability_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 25),
    _BgpPeerExtOverrideCapability_Type()
)
bgpPeerExtOverrideCapability.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtOverrideCapability.setStatus("current")
_BgpPeerExtStrictCapabilityMatch_Type = TruthValue
_BgpPeerExtStrictCapabilityMatch_Object = MibTableColumn
bgpPeerExtStrictCapabilityMatch = _BgpPeerExtStrictCapabilityMatch_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 26),
    _BgpPeerExtStrictCapabilityMatch_Type()
)
bgpPeerExtStrictCapabilityMatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtStrictCapabilityMatch.setStatus("current")


class _BgpPeerExtAllowasIn_Type(Integer32):
    """Custom type bgpPeerExtAllowasIn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_BgpPeerExtAllowasIn_Type.__name__ = "Integer32"
_BgpPeerExtAllowasIn_Object = MibTableColumn
bgpPeerExtAllowasIn = _BgpPeerExtAllowasIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 27),
    _BgpPeerExtAllowasIn_Type()
)
bgpPeerExtAllowasIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtAllowasIn.setStatus("current")
_BgpPeerExtAsOverride_Type = TruthValue
_BgpPeerExtAsOverride_Object = MibTableColumn
bgpPeerExtAsOverride = _BgpPeerExtAsOverride_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 28),
    _BgpPeerExtAsOverride_Type()
)
bgpPeerExtAsOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtAsOverride.setStatus("current")
_BgpPeerExtMemberOfPeerGroupIndex_Type = Integer32
_BgpPeerExtMemberOfPeerGroupIndex_Object = MibTableColumn
bgpPeerExtMemberOfPeerGroupIndex = _BgpPeerExtMemberOfPeerGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 4, 1, 29),
    _BgpPeerExtMemberOfPeerGroupIndex_Type()
)
bgpPeerExtMemberOfPeerGroupIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerExtMemberOfPeerGroupIndex.setStatus("current")
_BgpPeerGroupTable_Object = MibTable
bgpPeerGroupTable = _BgpPeerGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5)
)
if mibBuilder.loadTexts:
    bgpPeerGroupTable.setStatus("current")
_BgpPeerGroupEntry_Object = MibTableRow
bgpPeerGroupEntry = _BgpPeerGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1)
)
bgpPeerGroupEntry.setIndexNames(
    (0, "SWITCH", "bgpPeerGroupIndex"),
)
if mibBuilder.loadTexts:
    bgpPeerGroupEntry.setStatus("current")


class _BgpPeerGroupIndex_Type(Integer32):
    """Custom type bgpPeerGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BgpPeerGroupIndex_Type.__name__ = "Integer32"
_BgpPeerGroupIndex_Object = MibTableColumn
bgpPeerGroupIndex = _BgpPeerGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 1),
    _BgpPeerGroupIndex_Type()
)
bgpPeerGroupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bgpPeerGroupIndex.setStatus("current")


class _BgpPeerGroupName_Type(OctetString):
    """Custom type bgpPeerGroupName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_BgpPeerGroupName_Type.__name__ = "OctetString"
_BgpPeerGroupName_Object = MibTableColumn
bgpPeerGroupName = _BgpPeerGroupName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 2),
    _BgpPeerGroupName_Type()
)
bgpPeerGroupName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupName.setStatus("current")
_BgpPeerGroupRowStats_Type = RowStatus
_BgpPeerGroupRowStats_Object = MibTableColumn
bgpPeerGroupRowStats = _BgpPeerGroupRowStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 3),
    _BgpPeerGroupRowStats_Type()
)
bgpPeerGroupRowStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupRowStats.setStatus("current")


class _BgpPeerGroupRemoteAS_Type(Integer32):
    """Custom type bgpPeerGroupRemoteAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BgpPeerGroupRemoteAS_Type.__name__ = "Integer32"
_BgpPeerGroupRemoteAS_Object = MibTableColumn
bgpPeerGroupRemoteAS = _BgpPeerGroupRemoteAS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 4),
    _BgpPeerGroupRemoteAS_Type()
)
bgpPeerGroupRemoteAS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupRemoteAS.setStatus("current")
_BgpPeerGroupActivate_Type = TruthValue
_BgpPeerGroupActivate_Object = MibTableColumn
bgpPeerGroupActivate = _BgpPeerGroupActivate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 5),
    _BgpPeerGroupActivate_Type()
)
bgpPeerGroupActivate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupActivate.setStatus("current")
_BgpPeerGroupPassive_Type = TruthValue
_BgpPeerGroupPassive_Object = MibTableColumn
bgpPeerGroupPassive = _BgpPeerGroupPassive_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 6),
    _BgpPeerGroupPassive_Type()
)
bgpPeerGroupPassive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupPassive.setStatus("current")


class _BgpPeerGroupDescription_Type(OctetString):
    """Custom type bgpPeerGroupDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BgpPeerGroupDescription_Type.__name__ = "OctetString"
_BgpPeerGroupDescription_Object = MibTableColumn
bgpPeerGroupDescription = _BgpPeerGroupDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 7),
    _BgpPeerGroupDescription_Type()
)
bgpPeerGroupDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupDescription.setStatus("current")
_BgpPeerGroupCapabilityRouteRefresh_Type = TruthValue
_BgpPeerGroupCapabilityRouteRefresh_Object = MibTableColumn
bgpPeerGroupCapabilityRouteRefresh = _BgpPeerGroupCapabilityRouteRefresh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 8),
    _BgpPeerGroupCapabilityRouteRefresh_Type()
)
bgpPeerGroupCapabilityRouteRefresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupCapabilityRouteRefresh.setStatus("current")
_BgpPeerGroupCapabilityDynamic_Type = TruthValue
_BgpPeerGroupCapabilityDynamic_Object = MibTableColumn
bgpPeerGroupCapabilityDynamic = _BgpPeerGroupCapabilityDynamic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 9),
    _BgpPeerGroupCapabilityDynamic_Type()
)
bgpPeerGroupCapabilityDynamic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupCapabilityDynamic.setStatus("current")
_BgpPeerGroupDontCapabilityNegotiate_Type = TruthValue
_BgpPeerGroupDontCapabilityNegotiate_Object = MibTableColumn
bgpPeerGroupDontCapabilityNegotiate = _BgpPeerGroupDontCapabilityNegotiate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 10),
    _BgpPeerGroupDontCapabilityNegotiate_Type()
)
bgpPeerGroupDontCapabilityNegotiate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupDontCapabilityNegotiate.setStatus("current")


class _BgpPeerGroupCapabilityOrf_Type(Integer32):
    """Custom type bgpPeerGroupCapabilityOrf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("send", 1),
          ("receive", 2),
          ("both", 3),
          ("none", 4))
    )


_BgpPeerGroupCapabilityOrf_Type.__name__ = "Integer32"
_BgpPeerGroupCapabilityOrf_Object = MibTableColumn
bgpPeerGroupCapabilityOrf = _BgpPeerGroupCapabilityOrf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 11),
    _BgpPeerGroupCapabilityOrf_Type()
)
bgpPeerGroupCapabilityOrf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupCapabilityOrf.setStatus("current")
_BgpPeerGroupNextHopSelf_Type = TruthValue
_BgpPeerGroupNextHopSelf_Object = MibTableColumn
bgpPeerGroupNextHopSelf = _BgpPeerGroupNextHopSelf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 12),
    _BgpPeerGroupNextHopSelf_Type()
)
bgpPeerGroupNextHopSelf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupNextHopSelf.setStatus("current")
_BgpPeerGroupRemovePrivateAS_Type = TruthValue
_BgpPeerGroupRemovePrivateAS_Object = MibTableColumn
bgpPeerGroupRemovePrivateAS = _BgpPeerGroupRemovePrivateAS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 13),
    _BgpPeerGroupRemovePrivateAS_Type()
)
bgpPeerGroupRemovePrivateAS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupRemovePrivateAS.setStatus("current")


class _BgpPeerGroupSendCommunity_Type(Integer32):
    """Custom type bgpPeerGroupSendCommunity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("standard", 1),
          ("extended", 2),
          ("both", 3),
          ("none", 4))
    )


_BgpPeerGroupSendCommunity_Type.__name__ = "Integer32"
_BgpPeerGroupSendCommunity_Object = MibTableColumn
bgpPeerGroupSendCommunity = _BgpPeerGroupSendCommunity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 14),
    _BgpPeerGroupSendCommunity_Type()
)
bgpPeerGroupSendCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupSendCommunity.setStatus("current")
_BgpPeerGroupSoftReconfig_Type = TruthValue
_BgpPeerGroupSoftReconfig_Object = MibTableColumn
bgpPeerGroupSoftReconfig = _BgpPeerGroupSoftReconfig_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 15),
    _BgpPeerGroupSoftReconfig_Type()
)
bgpPeerGroupSoftReconfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupSoftReconfig.setStatus("current")
_BgpPeerGroupRouteReflectorClient_Type = TruthValue
_BgpPeerGroupRouteReflectorClient_Object = MibTableColumn
bgpPeerGroupRouteReflectorClient = _BgpPeerGroupRouteReflectorClient_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 16),
    _BgpPeerGroupRouteReflectorClient_Type()
)
bgpPeerGroupRouteReflectorClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupRouteReflectorClient.setStatus("current")
_BgpPeerGroupRouteServerClient_Type = TruthValue
_BgpPeerGroupRouteServerClient_Object = MibTableColumn
bgpPeerGroupRouteServerClient = _BgpPeerGroupRouteServerClient_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 17),
    _BgpPeerGroupRouteServerClient_Type()
)
bgpPeerGroupRouteServerClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupRouteServerClient.setStatus("current")
_BgpPeerGroupAttrUnchangedASPath_Type = TruthValue
_BgpPeerGroupAttrUnchangedASPath_Object = MibTableColumn
bgpPeerGroupAttrUnchangedASPath = _BgpPeerGroupAttrUnchangedASPath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 18),
    _BgpPeerGroupAttrUnchangedASPath_Type()
)
bgpPeerGroupAttrUnchangedASPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupAttrUnchangedASPath.setStatus("current")
_BgpPeerGroupAttrUnchangedNexthop_Type = TruthValue
_BgpPeerGroupAttrUnchangedNexthop_Object = MibTableColumn
bgpPeerGroupAttrUnchangedNexthop = _BgpPeerGroupAttrUnchangedNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 19),
    _BgpPeerGroupAttrUnchangedNexthop_Type()
)
bgpPeerGroupAttrUnchangedNexthop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupAttrUnchangedNexthop.setStatus("current")
_BgpPeerGroupAttrUnchangedMed_Type = TruthValue
_BgpPeerGroupAttrUnchangedMed_Object = MibTableColumn
bgpPeerGroupAttrUnchangedMed = _BgpPeerGroupAttrUnchangedMed_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 20),
    _BgpPeerGroupAttrUnchangedMed_Type()
)
bgpPeerGroupAttrUnchangedMed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupAttrUnchangedMed.setStatus("current")
_BgpPeerGroupUpdateSource_Type = Integer32
_BgpPeerGroupUpdateSource_Object = MibTableColumn
bgpPeerGroupUpdateSource = _BgpPeerGroupUpdateSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 21),
    _BgpPeerGroupUpdateSource_Type()
)
bgpPeerGroupUpdateSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupUpdateSource.setStatus("current")
_BgpPeerGroupDefaultOriginate_Type = TruthValue
_BgpPeerGroupDefaultOriginate_Object = MibTableColumn
bgpPeerGroupDefaultOriginate = _BgpPeerGroupDefaultOriginate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 22),
    _BgpPeerGroupDefaultOriginate_Type()
)
bgpPeerGroupDefaultOriginate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupDefaultOriginate.setStatus("current")
_BgpPeerGroupPort_Type = Integer32
_BgpPeerGroupPort_Object = MibTableColumn
bgpPeerGroupPort = _BgpPeerGroupPort_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 23),
    _BgpPeerGroupPort_Type()
)
bgpPeerGroupPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupPort.setStatus("current")
_BgpPeerGroupWeight_Type = Integer32
_BgpPeerGroupWeight_Object = MibTableColumn
bgpPeerGroupWeight = _BgpPeerGroupWeight_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 24),
    _BgpPeerGroupWeight_Type()
)
bgpPeerGroupWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupWeight.setStatus("current")
_BgpPeerGroupCollideEstablished_Type = TruthValue
_BgpPeerGroupCollideEstablished_Object = MibTableColumn
bgpPeerGroupCollideEstablished = _BgpPeerGroupCollideEstablished_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 25),
    _BgpPeerGroupCollideEstablished_Type()
)
bgpPeerGroupCollideEstablished.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupCollideEstablished.setStatus("current")
_BgpPeerGroupOverrideCapability_Type = TruthValue
_BgpPeerGroupOverrideCapability_Object = MibTableColumn
bgpPeerGroupOverrideCapability = _BgpPeerGroupOverrideCapability_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 26),
    _BgpPeerGroupOverrideCapability_Type()
)
bgpPeerGroupOverrideCapability.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupOverrideCapability.setStatus("current")
_BgpPeerGroupStrictCapabilityMatch_Type = TruthValue
_BgpPeerGroupStrictCapabilityMatch_Object = MibTableColumn
bgpPeerGroupStrictCapabilityMatch = _BgpPeerGroupStrictCapabilityMatch_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 27),
    _BgpPeerGroupStrictCapabilityMatch_Type()
)
bgpPeerGroupStrictCapabilityMatch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupStrictCapabilityMatch.setStatus("current")


class _BgpPeerGroupAllowasIn_Type(Integer32):
    """Custom type bgpPeerGroupAllowasIn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_BgpPeerGroupAllowasIn_Type.__name__ = "Integer32"
_BgpPeerGroupAllowasIn_Object = MibTableColumn
bgpPeerGroupAllowasIn = _BgpPeerGroupAllowasIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 28),
    _BgpPeerGroupAllowasIn_Type()
)
bgpPeerGroupAllowasIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupAllowasIn.setStatus("current")
_BgpPeerGroupAsOverride_Type = TruthValue
_BgpPeerGroupAsOverride_Object = MibTableColumn
bgpPeerGroupAsOverride = _BgpPeerGroupAsOverride_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 5, 1, 29),
    _BgpPeerGroupAsOverride_Type()
)
bgpPeerGroupAsOverride.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpPeerGroupAsOverride.setStatus("current")
_BgpAddressFamily_ObjectIdentity = ObjectIdentity
bgpAddressFamily = _BgpAddressFamily_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6)
)


class _BgpAddressFamilyName_Type(OctetString):
    """Custom type bgpAddressFamilyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BgpAddressFamilyName_Type.__name__ = "OctetString"
_BgpAddressFamilyName_Object = MibScalar
bgpAddressFamilyName = _BgpAddressFamilyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 1),
    _BgpAddressFamilyName_Type()
)
bgpAddressFamilyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bgpAddressFamilyName.setStatus("current")


class _BgpAddressFamilyRouterId_Type(OctetString):
    """Custom type bgpAddressFamilyRouterId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BgpAddressFamilyRouterId_Type.__name__ = "OctetString"
_BgpAddressFamilyRouterId_Object = MibScalar
bgpAddressFamilyRouterId = _BgpAddressFamilyRouterId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 2),
    _BgpAddressFamilyRouterId_Type()
)
bgpAddressFamilyRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyRouterId.setStatus("current")
_BgpAddressFamilyRedistConnect_Type = TruthValue
_BgpAddressFamilyRedistConnect_Object = MibScalar
bgpAddressFamilyRedistConnect = _BgpAddressFamilyRedistConnect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 3),
    _BgpAddressFamilyRedistConnect_Type()
)
bgpAddressFamilyRedistConnect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyRedistConnect.setStatus("current")
_BgpAddressFamilyRedistStatic_Type = TruthValue
_BgpAddressFamilyRedistStatic_Object = MibScalar
bgpAddressFamilyRedistStatic = _BgpAddressFamilyRedistStatic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 4),
    _BgpAddressFamilyRedistStatic_Type()
)
bgpAddressFamilyRedistStatic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyRedistStatic.setStatus("current")
_BgpAddressFamilyRedistRip_Type = TruthValue
_BgpAddressFamilyRedistRip_Object = MibScalar
bgpAddressFamilyRedistRip = _BgpAddressFamilyRedistRip_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 5),
    _BgpAddressFamilyRedistRip_Type()
)
bgpAddressFamilyRedistRip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyRedistRip.setStatus("current")
_BgpAddressFamilyRedistOspf_Type = TruthValue
_BgpAddressFamilyRedistOspf_Object = MibScalar
bgpAddressFamilyRedistOspf = _BgpAddressFamilyRedistOspf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 6),
    _BgpAddressFamilyRedistOspf_Type()
)
bgpAddressFamilyRedistOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyRedistOspf.setStatus("current")
_BgpAddressFamilySynchronization_Type = TruthValue
_BgpAddressFamilySynchronization_Object = MibScalar
bgpAddressFamilySynchronization = _BgpAddressFamilySynchronization_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 7),
    _BgpAddressFamilySynchronization_Type()
)
bgpAddressFamilySynchronization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilySynchronization.setStatus("current")
_BgpAddressFamilyDefaultInfoOrig_Type = TruthValue
_BgpAddressFamilyDefaultInfoOrig_Object = MibScalar
bgpAddressFamilyDefaultInfoOrig = _BgpAddressFamilyDefaultInfoOrig_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 8),
    _BgpAddressFamilyDefaultInfoOrig_Type()
)
bgpAddressFamilyDefaultInfoOrig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyDefaultInfoOrig.setStatus("current")
_BgpAddressFamilyNetworkSynch_Type = TruthValue
_BgpAddressFamilyNetworkSynch_Object = MibScalar
bgpAddressFamilyNetworkSynch = _BgpAddressFamilyNetworkSynch_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 6, 9),
    _BgpAddressFamilyNetworkSynch_Type()
)
bgpAddressFamilyNetworkSynch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpAddressFamilyNetworkSynch.setStatus("current")
_BgpClearTable_ObjectIdentity = ObjectIdentity
bgpClearTable = _BgpClearTable_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7)
)
_BgpClearAll_Type = TruthValue
_BgpClearAll_Object = MibScalar
bgpClearAll = _BgpClearAll_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 1),
    _BgpClearAll_Type()
)
bgpClearAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearAll.setStatus("current")
_BgpClearExternalPeers_Type = TruthValue
_BgpClearExternalPeers_Object = MibScalar
bgpClearExternalPeers = _BgpClearExternalPeers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 2),
    _BgpClearExternalPeers_Type()
)
bgpClearExternalPeers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalPeers.setStatus("current")
_BgpClearUnicastSoftOut_Type = TruthValue
_BgpClearUnicastSoftOut_Object = MibScalar
bgpClearUnicastSoftOut = _BgpClearUnicastSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 3),
    _BgpClearUnicastSoftOut_Type()
)
bgpClearUnicastSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearUnicastSoftOut.setStatus("current")
_BgpClearMulticastSoftOut_Type = TruthValue
_BgpClearMulticastSoftOut_Object = MibScalar
bgpClearMulticastSoftOut = _BgpClearMulticastSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 4),
    _BgpClearMulticastSoftOut_Type()
)
bgpClearMulticastSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearMulticastSoftOut.setStatus("current")
_BgpClearVpnv4UnicastSoftOut_Type = TruthValue
_BgpClearVpnv4UnicastSoftOut_Object = MibScalar
bgpClearVpnv4UnicastSoftOut = _BgpClearVpnv4UnicastSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 5),
    _BgpClearVpnv4UnicastSoftOut_Type()
)
bgpClearVpnv4UnicastSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearVpnv4UnicastSoftOut.setStatus("current")
_BgpClearExternalSoftOut_Type = TruthValue
_BgpClearExternalSoftOut_Object = MibScalar
bgpClearExternalSoftOut = _BgpClearExternalSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 6),
    _BgpClearExternalSoftOut_Type()
)
bgpClearExternalSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalSoftOut.setStatus("current")
_BgpClearExternalUnicastSoftOut_Type = TruthValue
_BgpClearExternalUnicastSoftOut_Object = MibScalar
bgpClearExternalUnicastSoftOut = _BgpClearExternalUnicastSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 7),
    _BgpClearExternalUnicastSoftOut_Type()
)
bgpClearExternalUnicastSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalUnicastSoftOut.setStatus("current")
_BgpClearExternalMulticastSoftOut_Type = TruthValue
_BgpClearExternalMulticastSoftOut_Object = MibScalar
bgpClearExternalMulticastSoftOut = _BgpClearExternalMulticastSoftOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 8),
    _BgpClearExternalMulticastSoftOut_Type()
)
bgpClearExternalMulticastSoftOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalMulticastSoftOut.setStatus("current")
_BgpClearSoftIn_Type = TruthValue
_BgpClearSoftIn_Object = MibScalar
bgpClearSoftIn = _BgpClearSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 9),
    _BgpClearSoftIn_Type()
)
bgpClearSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearSoftIn.setStatus("current")
_BgpClearInPrefixFilter_Type = TruthValue
_BgpClearInPrefixFilter_Object = MibScalar
bgpClearInPrefixFilter = _BgpClearInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 10),
    _BgpClearInPrefixFilter_Type()
)
bgpClearInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearInPrefixFilter.setStatus("current")
_BgpClearUnicastSoftIn_Type = TruthValue
_BgpClearUnicastSoftIn_Object = MibScalar
bgpClearUnicastSoftIn = _BgpClearUnicastSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 11),
    _BgpClearUnicastSoftIn_Type()
)
bgpClearUnicastSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearUnicastSoftIn.setStatus("current")
_BgpClearMulticastSoftIn_Type = TruthValue
_BgpClearMulticastSoftIn_Object = MibScalar
bgpClearMulticastSoftIn = _BgpClearMulticastSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 12),
    _BgpClearMulticastSoftIn_Type()
)
bgpClearMulticastSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearMulticastSoftIn.setStatus("current")
_BgpClearUnicastInPrefixFilter_Type = TruthValue
_BgpClearUnicastInPrefixFilter_Object = MibScalar
bgpClearUnicastInPrefixFilter = _BgpClearUnicastInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 13),
    _BgpClearUnicastInPrefixFilter_Type()
)
bgpClearUnicastInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearUnicastInPrefixFilter.setStatus("current")
_BgpClearMulticastInPrefixFilter_Type = TruthValue
_BgpClearMulticastInPrefixFilter_Object = MibScalar
bgpClearMulticastInPrefixFilter = _BgpClearMulticastInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 14),
    _BgpClearMulticastInPrefixFilter_Type()
)
bgpClearMulticastInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearMulticastInPrefixFilter.setStatus("current")
_BgpClearVpnv4UnicastSoftIn_Type = TruthValue
_BgpClearVpnv4UnicastSoftIn_Object = MibScalar
bgpClearVpnv4UnicastSoftIn = _BgpClearVpnv4UnicastSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 15),
    _BgpClearVpnv4UnicastSoftIn_Type()
)
bgpClearVpnv4UnicastSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearVpnv4UnicastSoftIn.setStatus("current")
_BgpClearExternalSoftIn_Type = TruthValue
_BgpClearExternalSoftIn_Object = MibScalar
bgpClearExternalSoftIn = _BgpClearExternalSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 16),
    _BgpClearExternalSoftIn_Type()
)
bgpClearExternalSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalSoftIn.setStatus("current")
_BgpClearExternalInPrefixFilter_Type = TruthValue
_BgpClearExternalInPrefixFilter_Object = MibScalar
bgpClearExternalInPrefixFilter = _BgpClearExternalInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 17),
    _BgpClearExternalInPrefixFilter_Type()
)
bgpClearExternalInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalInPrefixFilter.setStatus("current")
_BgpClearExternalUnicastSoftIn_Type = TruthValue
_BgpClearExternalUnicastSoftIn_Object = MibScalar
bgpClearExternalUnicastSoftIn = _BgpClearExternalUnicastSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 18),
    _BgpClearExternalUnicastSoftIn_Type()
)
bgpClearExternalUnicastSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalUnicastSoftIn.setStatus("current")
_BgpClearExternalMulticastSoftIn_Type = TruthValue
_BgpClearExternalMulticastSoftIn_Object = MibScalar
bgpClearExternalMulticastSoftIn = _BgpClearExternalMulticastSoftIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 19),
    _BgpClearExternalMulticastSoftIn_Type()
)
bgpClearExternalMulticastSoftIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalMulticastSoftIn.setStatus("current")
_BgpClearExternalUnicastInPrefixFilter_Type = TruthValue
_BgpClearExternalUnicastInPrefixFilter_Object = MibScalar
bgpClearExternalUnicastInPrefixFilter = _BgpClearExternalUnicastInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 20),
    _BgpClearExternalUnicastInPrefixFilter_Type()
)
bgpClearExternalUnicastInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalUnicastInPrefixFilter.setStatus("current")
_BgpClearExternalMulticastInPrefixFilter_Type = TruthValue
_BgpClearExternalMulticastInPrefixFilter_Object = MibScalar
bgpClearExternalMulticastInPrefixFilter = _BgpClearExternalMulticastInPrefixFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 21),
    _BgpClearExternalMulticastInPrefixFilter_Type()
)
bgpClearExternalMulticastInPrefixFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalMulticastInPrefixFilter.setStatus("current")
_BgpClearUnicastSoft_Type = TruthValue
_BgpClearUnicastSoft_Object = MibScalar
bgpClearUnicastSoft = _BgpClearUnicastSoft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 22),
    _BgpClearUnicastSoft_Type()
)
bgpClearUnicastSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearUnicastSoft.setStatus("current")
_BgpClearMulticastSoft_Type = TruthValue
_BgpClearMulticastSoft_Object = MibScalar
bgpClearMulticastSoft = _BgpClearMulticastSoft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 23),
    _BgpClearMulticastSoft_Type()
)
bgpClearMulticastSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearMulticastSoft.setStatus("current")
_BgpClearVpnv4UnicastSoft_Type = TruthValue
_BgpClearVpnv4UnicastSoft_Object = MibScalar
bgpClearVpnv4UnicastSoft = _BgpClearVpnv4UnicastSoft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 24),
    _BgpClearVpnv4UnicastSoft_Type()
)
bgpClearVpnv4UnicastSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearVpnv4UnicastSoft.setStatus("current")
_BgpClearExternalUnicastSoft_Type = TruthValue
_BgpClearExternalUnicastSoft_Object = MibScalar
bgpClearExternalUnicastSoft = _BgpClearExternalUnicastSoft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 25),
    _BgpClearExternalUnicastSoft_Type()
)
bgpClearExternalUnicastSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalUnicastSoft.setStatus("current")
_BgpClearExternalMulticastSoft_Type = TruthValue
_BgpClearExternalMulticastSoft_Object = MibScalar
bgpClearExternalMulticastSoft = _BgpClearExternalMulticastSoft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 26),
    _BgpClearExternalMulticastSoft_Type()
)
bgpClearExternalMulticastSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearExternalMulticastSoft.setStatus("current")
_BgpClearDampening_Type = TruthValue
_BgpClearDampening_Object = MibScalar
bgpClearDampening = _BgpClearDampening_Object(
    (1, 3, 6, 1, 4, 1, 27975, 68, 7, 27),
    _BgpClearDampening_Type()
)
bgpClearDampening.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bgpClearDampening.setStatus("current")
_Mpls_ObjectIdentity = ObjectIdentity
mpls = _Mpls_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69)
)
_MplsLspTunnelingTable_Object = MibTable
mplsLspTunnelingTable = _MplsLspTunnelingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1)
)
if mibBuilder.loadTexts:
    mplsLspTunnelingTable.setStatus("current")
_MplsLspTunnelingEntry_Object = MibTableRow
mplsLspTunnelingEntry = _MplsLspTunnelingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1)
)
mplsLspTunnelingEntry.setIndexNames(
    (0, "SWITCH", "mplsLspTunnelingInLabel"),
)
if mibBuilder.loadTexts:
    mplsLspTunnelingEntry.setStatus("current")


class _MplsLspTunnelingInLabel_Type(Integer32):
    """Custom type mplsLspTunnelingInLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspTunnelingInLabel_Type.__name__ = "Integer32"
_MplsLspTunnelingInLabel_Object = MibTableColumn
mplsLspTunnelingInLabel = _MplsLspTunnelingInLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 1),
    _MplsLspTunnelingInLabel_Type()
)
mplsLspTunnelingInLabel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspTunnelingInLabel.setStatus("current")


class _MplsLspTunnelingOutLabel_Type(Integer32):
    """Custom type mplsLspTunnelingOutLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspTunnelingOutLabel_Type.__name__ = "Integer32"
_MplsLspTunnelingOutLabel_Object = MibTableColumn
mplsLspTunnelingOutLabel = _MplsLspTunnelingOutLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 2),
    _MplsLspTunnelingOutLabel_Type()
)
mplsLspTunnelingOutLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspTunnelingOutLabel.setStatus("current")
_MplsLspTunnelingDestAddr_Type = IpAddress
_MplsLspTunnelingDestAddr_Object = MibTableColumn
mplsLspTunnelingDestAddr = _MplsLspTunnelingDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 3),
    _MplsLspTunnelingDestAddr_Type()
)
mplsLspTunnelingDestAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspTunnelingDestAddr.setStatus("current")
_MplsLspTunnelingMaskLen_Type = Integer32
_MplsLspTunnelingMaskLen_Object = MibTableColumn
mplsLspTunnelingMaskLen = _MplsLspTunnelingMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 4),
    _MplsLspTunnelingMaskLen_Type()
)
mplsLspTunnelingMaskLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspTunnelingMaskLen.setStatus("current")
_MplsLspTunnelingRowStatus_Type = RowStatus
_MplsLspTunnelingRowStatus_Object = MibTableColumn
mplsLspTunnelingRowStatus = _MplsLspTunnelingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 10),
    _MplsLspTunnelingRowStatus_Type()
)
mplsLspTunnelingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspTunnelingRowStatus.setStatus("current")


class _MplsLspTunnelingState_Type(Integer32):
    """Custom type mplsLspTunnelingState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("selected", 1),
          ("non-selected", 2))
    )


_MplsLspTunnelingState_Type.__name__ = "Integer32"
_MplsLspTunnelingState_Object = MibTableColumn
mplsLspTunnelingState = _MplsLspTunnelingState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1, 1, 11),
    _MplsLspTunnelingState_Type()
)
mplsLspTunnelingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspTunnelingState.setStatus("current")
_MplsMapRouteTable_Object = MibTable
mplsMapRouteTable = _MplsMapRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2)
)
if mibBuilder.loadTexts:
    mplsMapRouteTable.setStatus("current")
_MplsMapRouteEntry_Object = MibTableRow
mplsMapRouteEntry = _MplsMapRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1)
)
mplsMapRouteEntry.setIndexNames(
    (0, "SWITCH", "mplsMapRouteSrcAddr"),
    (0, "SWITCH", "mplsMapRouteSrcMaskLen"),
)
if mibBuilder.loadTexts:
    mplsMapRouteEntry.setStatus("current")
_MplsMapRouteSrcAddr_Type = IpAddress
_MplsMapRouteSrcAddr_Object = MibTableColumn
mplsMapRouteSrcAddr = _MplsMapRouteSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 1),
    _MplsMapRouteSrcAddr_Type()
)
mplsMapRouteSrcAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsMapRouteSrcAddr.setStatus("current")


class _MplsMapRouteSrcMaskLen_Type(Integer32):
    """Custom type mplsMapRouteSrcMaskLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_MplsMapRouteSrcMaskLen_Type.__name__ = "Integer32"
_MplsMapRouteSrcMaskLen_Object = MibTableColumn
mplsMapRouteSrcMaskLen = _MplsMapRouteSrcMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 2),
    _MplsMapRouteSrcMaskLen_Type()
)
mplsMapRouteSrcMaskLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsMapRouteSrcMaskLen.setStatus("current")
_MplsMapRouteDestAddr_Type = IpAddress
_MplsMapRouteDestAddr_Object = MibTableColumn
mplsMapRouteDestAddr = _MplsMapRouteDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 3),
    _MplsMapRouteDestAddr_Type()
)
mplsMapRouteDestAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsMapRouteDestAddr.setStatus("current")
_MplsMapRouteDestMaskLen_Type = Integer32
_MplsMapRouteDestMaskLen_Object = MibTableColumn
mplsMapRouteDestMaskLen = _MplsMapRouteDestMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 4),
    _MplsMapRouteDestMaskLen_Type()
)
mplsMapRouteDestMaskLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsMapRouteDestMaskLen.setStatus("current")


class _MplsMapRouteTunnelName_Type(OctetString):
    """Custom type mplsMapRouteTunnelName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsMapRouteTunnelName_Type.__name__ = "OctetString"
_MplsMapRouteTunnelName_Object = MibTableColumn
mplsMapRouteTunnelName = _MplsMapRouteTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 5),
    _MplsMapRouteTunnelName_Type()
)
mplsMapRouteTunnelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsMapRouteTunnelName.setStatus("current")
_MplsMapRouteRowStatus_Type = RowStatus
_MplsMapRouteRowStatus_Object = MibTableColumn
mplsMapRouteRowStatus = _MplsMapRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 2, 1, 10),
    _MplsMapRouteRowStatus_Type()
)
mplsMapRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsMapRouteRowStatus.setStatus("current")


class _MplsEnableAllInterfaces_Type(Integer32):
    """Custom type mplsEnableAllInterfaces based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsEnableAllInterfaces_Type.__name__ = "Integer32"
_MplsEnableAllInterfaces_Object = MibScalar
mplsEnableAllInterfaces = _MplsEnableAllInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 3),
    _MplsEnableAllInterfaces_Type()
)
mplsEnableAllInterfaces.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsEnableAllInterfaces.setStatus("current")
_MplsVpwsTable_Object = MibTable
mplsVpwsTable = _MplsVpwsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5)
)
if mibBuilder.loadTexts:
    mplsVpwsTable.setStatus("current")
_MplsVpwsEntry_Object = MibTableRow
mplsVpwsEntry = _MplsVpwsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1)
)
mplsVpwsEntry.setIndexNames(
    (0, "SWITCH", "mplsVpwsVcId"),
)
if mibBuilder.loadTexts:
    mplsVpwsEntry.setStatus("current")


class _MplsVpwsVcId_Type(Unsigned32):
    """Custom type mplsVpwsVcId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVpwsVcId_Type.__name__ = "Unsigned32"
_MplsVpwsVcId_Object = MibTableColumn
mplsVpwsVcId = _MplsVpwsVcId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 1),
    _MplsVpwsVcId_Type()
)
mplsVpwsVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVpwsVcId.setStatus("current")


class _MplsVpwsVcName_Type(OctetString):
    """Custom type mplsVpwsVcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVpwsVcName_Type.__name__ = "OctetString"
_MplsVpwsVcName_Object = MibTableColumn
mplsVpwsVcName = _MplsVpwsVcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 2),
    _MplsVpwsVcName_Type()
)
mplsVpwsVcName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsVcName.setStatus("current")
_MplsVpwsPeerAddr_Type = IpAddress
_MplsVpwsPeerAddr_Object = MibTableColumn
mplsVpwsPeerAddr = _MplsVpwsPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 3),
    _MplsVpwsPeerAddr_Type()
)
mplsVpwsPeerAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsPeerAddr.setStatus("current")
_MplsVpwsIsManual_Type = Integer32
_MplsVpwsIsManual_Object = MibTableColumn
mplsVpwsIsManual = _MplsVpwsIsManual_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 4),
    _MplsVpwsIsManual_Type()
)
mplsVpwsIsManual.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsIsManual.setStatus("current")


class _MplsVpwsMtu_Type(Integer32):
    """Custom type mplsVpwsMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 65535),
    )


_MplsVpwsMtu_Type.__name__ = "Integer32"
_MplsVpwsMtu_Object = MibTableColumn
mplsVpwsMtu = _MplsVpwsMtu_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 5),
    _MplsVpwsMtu_Type()
)
mplsVpwsMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsMtu.setStatus("current")


class _MplsVpwsPwMode_Type(Integer32):
    """Custom type mplsVpwsPwMode based on Integer32"""
    defaultValue = 0


_MplsVpwsPwMode_Type.__name__ = "Integer32"
_MplsVpwsPwMode_Object = MibTableColumn
mplsVpwsPwMode = _MplsVpwsPwMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 6),
    _MplsVpwsPwMode_Type()
)
mplsVpwsPwMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsPwMode.setStatus("current")


class _MplsVpwsControlWord_Type(Integer32):
    """Custom type mplsVpwsControlWord based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVpwsControlWord_Type.__name__ = "Integer32"
_MplsVpwsControlWord_Object = MibTableColumn
mplsVpwsControlWord = _MplsVpwsControlWord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 7),
    _MplsVpwsControlWord_Type()
)
mplsVpwsControlWord.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsControlWord.setStatus("current")


class _MplsVpwsStats_Type(Integer32):
    """Custom type mplsVpwsStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVpwsStats_Type.__name__ = "Integer32"
_MplsVpwsStats_Object = MibTableColumn
mplsVpwsStats = _MplsVpwsStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 8),
    _MplsVpwsStats_Type()
)
mplsVpwsStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsStats.setStatus("current")
_MplsVpwsRowStatus_Type = RowStatus
_MplsVpwsRowStatus_Object = MibTableColumn
mplsVpwsRowStatus = _MplsVpwsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 15),
    _MplsVpwsRowStatus_Type()
)
mplsVpwsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsRowStatus.setStatus("current")


class _MplsVpwsState_Type(Integer32):
    """Custom type mplsVpwsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsVpwsState_Type.__name__ = "Integer32"
_MplsVpwsState_Object = MibTableColumn
mplsVpwsState = _MplsVpwsState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 5, 1, 16),
    _MplsVpwsState_Type()
)
mplsVpwsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVpwsState.setStatus("current")
_MplsVpwsFibTable_Object = MibTable
mplsVpwsFibTable = _MplsVpwsFibTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6)
)
if mibBuilder.loadTexts:
    mplsVpwsFibTable.setStatus("current")
_MplsVpwsFibEntry_Object = MibTableRow
mplsVpwsFibEntry = _MplsVpwsFibEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6, 1)
)
mplsVpwsFibEntry.setIndexNames(
    (0, "SWITCH", "mplsVpwsFibVcId"),
)
if mibBuilder.loadTexts:
    mplsVpwsFibEntry.setStatus("current")


class _MplsVpwsFibVcId_Type(Unsigned32):
    """Custom type mplsVpwsFibVcId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVpwsFibVcId_Type.__name__ = "Unsigned32"
_MplsVpwsFibVcId_Object = MibTableColumn
mplsVpwsFibVcId = _MplsVpwsFibVcId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6, 1, 1),
    _MplsVpwsFibVcId_Type()
)
mplsVpwsFibVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVpwsFibVcId.setStatus("current")


class _MplsVpwsFibInLabel_Type(Integer32):
    """Custom type mplsVpwsFibInLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsVpwsFibInLabel_Type.__name__ = "Integer32"
_MplsVpwsFibInLabel_Object = MibTableColumn
mplsVpwsFibInLabel = _MplsVpwsFibInLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6, 1, 2),
    _MplsVpwsFibInLabel_Type()
)
mplsVpwsFibInLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVpwsFibInLabel.setStatus("current")


class _MplsVpwsFibOutLabel_Type(Integer32):
    """Custom type mplsVpwsFibOutLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsVpwsFibOutLabel_Type.__name__ = "Integer32"
_MplsVpwsFibOutLabel_Object = MibTableColumn
mplsVpwsFibOutLabel = _MplsVpwsFibOutLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6, 1, 3),
    _MplsVpwsFibOutLabel_Type()
)
mplsVpwsFibOutLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVpwsFibOutLabel.setStatus("current")
_MplsVpwsFibRowStatus_Type = RowStatus
_MplsVpwsFibRowStatus_Object = MibTableColumn
mplsVpwsFibRowStatus = _MplsVpwsFibRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 6, 1, 4),
    _MplsVpwsFibRowStatus_Type()
)
mplsVpwsFibRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVpwsFibRowStatus.setStatus("current")
_MplsVplsTable_Object = MibTable
mplsVplsTable = _MplsVplsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8)
)
if mibBuilder.loadTexts:
    mplsVplsTable.setStatus("current")
_MplsVplsEntry_Object = MibTableRow
mplsVplsEntry = _MplsVplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1)
)
mplsVplsEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsId"),
)
if mibBuilder.loadTexts:
    mplsVplsEntry.setStatus("current")


class _MplsVplsId_Type(Unsigned32):
    """Custom type mplsVplsId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVplsId_Type.__name__ = "Unsigned32"
_MplsVplsId_Object = MibTableColumn
mplsVplsId = _MplsVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 1),
    _MplsVplsId_Type()
)
mplsVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsId.setStatus("current")


class _MplsVplsName_Type(OctetString):
    """Custom type mplsVplsName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_MplsVplsName_Type.__name__ = "OctetString"
_MplsVplsName_Object = MibTableColumn
mplsVplsName = _MplsVplsName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 2),
    _MplsVplsName_Type()
)
mplsVplsName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsName.setStatus("current")


class _MplsVplsWhiteList_Type(Integer32):
    """Custom type mplsVplsWhiteList based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsWhiteList_Type.__name__ = "Integer32"
_MplsVplsWhiteList_Object = MibTableColumn
mplsVplsWhiteList = _MplsVplsWhiteList_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 5),
    _MplsVplsWhiteList_Type()
)
mplsVplsWhiteList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsWhiteList.setStatus("current")
_MplsVplsRowStatus_Type = RowStatus
_MplsVplsRowStatus_Object = MibTableColumn
mplsVplsRowStatus = _MplsVplsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 10),
    _MplsVplsRowStatus_Type()
)
mplsVplsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsRowStatus.setStatus("current")


class _MplsVplsDescription_Type(OctetString):
    """Custom type mplsVplsDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsDescription_Type.__name__ = "OctetString"
_MplsVplsDescription_Object = MibTableColumn
mplsVplsDescription = _MplsVplsDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 11),
    _MplsVplsDescription_Type()
)
mplsVplsDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsDescription.setStatus("current")


class _MplsVplsMtu_Type(Integer32):
    """Custom type mplsVplsMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(576, 65535),
    )


_MplsVplsMtu_Type.__name__ = "Integer32"
_MplsVplsMtu_Object = MibTableColumn
mplsVplsMtu = _MplsVplsMtu_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 12),
    _MplsVplsMtu_Type()
)
mplsVplsMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsMtu.setStatus("current")


class _MplsVplsMacLearning_Type(Integer32):
    """Custom type mplsVplsMacLearning based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsMacLearning_Type.__name__ = "Integer32"
_MplsVplsMacLearning_Object = MibTableColumn
mplsVplsMacLearning = _MplsVplsMacLearning_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 13),
    _MplsVplsMacLearning_Type()
)
mplsVplsMacLearning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsMacLearning.setStatus("current")


class _MplsVplsMacLimitNum_Type(Unsigned32):
    """Custom type mplsVplsMacLimitNum based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MplsVplsMacLimitNum_Type.__name__ = "Unsigned32"
_MplsVplsMacLimitNum_Object = MibTableColumn
mplsVplsMacLimitNum = _MplsVplsMacLimitNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 14),
    _MplsVplsMacLimitNum_Type()
)
mplsVplsMacLimitNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsMacLimitNum.setStatus("current")


class _MplsVplsMacLimitAction_Type(Integer32):
    """Custom type mplsVplsMacLimitAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("warn", 2),
          ("discard", 3))
    )


_MplsVplsMacLimitAction_Type.__name__ = "Integer32"
_MplsVplsMacLimitAction_Object = MibTableColumn
mplsVplsMacLimitAction = _MplsVplsMacLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 15),
    _MplsVplsMacLimitAction_Type()
)
mplsVplsMacLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsMacLimitAction.setStatus("current")


class _MplsVplsAllowFlooding_Type(Integer32):
    """Custom type mplsVplsAllowFlooding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsAllowFlooding_Type.__name__ = "Integer32"
_MplsVplsAllowFlooding_Object = MibTableColumn
mplsVplsAllowFlooding = _MplsVplsAllowFlooding_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 16),
    _MplsVplsAllowFlooding_Type()
)
mplsVplsAllowFlooding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsAllowFlooding.setStatus("current")


class _MplsVplsState_Type(Integer32):
    """Custom type mplsVplsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsVplsState_Type.__name__ = "Integer32"
_MplsVplsState_Object = MibTableColumn
mplsVplsState = _MplsVplsState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 8, 1, 20),
    _MplsVplsState_Type()
)
mplsVplsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsState.setStatus("current")
_MplsVplsPeerTable_Object = MibTable
mplsVplsPeerTable = _MplsVplsPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9)
)
if mibBuilder.loadTexts:
    mplsVplsPeerTable.setStatus("current")
_MplsVplsPeerEntry_Object = MibTableRow
mplsVplsPeerEntry = _MplsVplsPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1)
)
mplsVplsPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsPeerVplsId"),
    (0, "SWITCH", "mplsVplsPeerPeerAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsPeerEntry.setStatus("current")


class _MplsVplsPeerVplsId_Type(Unsigned32):
    """Custom type mplsVplsPeerVplsId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVplsPeerVplsId_Type.__name__ = "Unsigned32"
_MplsVplsPeerVplsId_Object = MibTableColumn
mplsVplsPeerVplsId = _MplsVplsPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 1),
    _MplsVplsPeerVplsId_Type()
)
mplsVplsPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsPeerVplsId.setStatus("current")
_MplsVplsPeerPeerAddr_Type = IpAddress
_MplsVplsPeerPeerAddr_Object = MibTableColumn
mplsVplsPeerPeerAddr = _MplsVplsPeerPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 2),
    _MplsVplsPeerPeerAddr_Type()
)
mplsVplsPeerPeerAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsPeerPeerAddr.setStatus("current")
_MplsVplsPeerType_Type = Integer32
_MplsVplsPeerType_Object = MibTableColumn
mplsVplsPeerType = _MplsVplsPeerType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 3),
    _MplsVplsPeerType_Type()
)
mplsVplsPeerType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsPeerType.setStatus("current")
_MplsVplsPeerIsManul_Type = Integer32
_MplsVplsPeerIsManul_Object = MibTableColumn
mplsVplsPeerIsManul = _MplsVplsPeerIsManul_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 4),
    _MplsVplsPeerIsManul_Type()
)
mplsVplsPeerIsManul.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsPeerIsManul.setStatus("current")


class _MplsVplsPeerControlWord_Type(Integer32):
    """Custom type mplsVplsPeerControlWord based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsPeerControlWord_Type.__name__ = "Integer32"
_MplsVplsPeerControlWord_Object = MibTableColumn
mplsVplsPeerControlWord = _MplsVplsPeerControlWord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 5),
    _MplsVplsPeerControlWord_Type()
)
mplsVplsPeerControlWord.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsPeerControlWord.setStatus("current")


class _MplsVplsPeerStats_Type(Integer32):
    """Custom type mplsVplsPeerStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsPeerStats_Type.__name__ = "Integer32"
_MplsVplsPeerStats_Object = MibTableColumn
mplsVplsPeerStats = _MplsVplsPeerStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 6),
    _MplsVplsPeerStats_Type()
)
mplsVplsPeerStats.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsPeerStats.setStatus("current")


class _MplsVplsPeerPEType_Type(Integer32):
    """Custom type mplsVplsPeerPEType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("spe", 1),
          ("upe", 2))
    )


_MplsVplsPeerPEType_Type.__name__ = "Integer32"
_MplsVplsPeerPEType_Object = MibTableColumn
mplsVplsPeerPEType = _MplsVplsPeerPEType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 7),
    _MplsVplsPeerPEType_Type()
)
mplsVplsPeerPEType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsPeerPEType.setStatus("current")
_MplsVplsPeerRowStatus_Type = RowStatus
_MplsVplsPeerRowStatus_Object = MibTableColumn
mplsVplsPeerRowStatus = _MplsVplsPeerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 15),
    _MplsVplsPeerRowStatus_Type()
)
mplsVplsPeerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsPeerRowStatus.setStatus("current")


class _MplsVplsPeerState_Type(Integer32):
    """Custom type mplsVplsPeerState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_MplsVplsPeerState_Type.__name__ = "Integer32"
_MplsVplsPeerState_Object = MibTableColumn
mplsVplsPeerState = _MplsVplsPeerState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 9, 1, 16),
    _MplsVplsPeerState_Type()
)
mplsVplsPeerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsPeerState.setStatus("current")
_MplsVplsFibAddTable_Object = MibTable
mplsVplsFibAddTable = _MplsVplsFibAddTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10)
)
if mibBuilder.loadTexts:
    mplsVplsFibAddTable.setStatus("current")
_MplsVplsFibAddEntry_Object = MibTableRow
mplsVplsFibAddEntry = _MplsVplsFibAddEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1)
)
mplsVplsFibAddEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsFibAddVplsId"),
    (0, "SWITCH", "mplsVplsFibAddPeerAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsFibAddEntry.setStatus("current")


class _MplsVplsFibAddVplsId_Type(Integer32):
    """Custom type mplsVplsFibAddVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsFibAddVplsId_Type.__name__ = "Integer32"
_MplsVplsFibAddVplsId_Object = MibTableColumn
mplsVplsFibAddVplsId = _MplsVplsFibAddVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1, 1),
    _MplsVplsFibAddVplsId_Type()
)
mplsVplsFibAddVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsFibAddVplsId.setStatus("current")
_MplsVplsFibAddPeerAddr_Type = IpAddress
_MplsVplsFibAddPeerAddr_Object = MibTableColumn
mplsVplsFibAddPeerAddr = _MplsVplsFibAddPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1, 2),
    _MplsVplsFibAddPeerAddr_Type()
)
mplsVplsFibAddPeerAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsFibAddPeerAddr.setStatus("current")


class _MplsVplsFibAddInLabel_Type(Integer32):
    """Custom type mplsVplsFibAddInLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 2063),
    )


_MplsVplsFibAddInLabel_Type.__name__ = "Integer32"
_MplsVplsFibAddInLabel_Object = MibTableColumn
mplsVplsFibAddInLabel = _MplsVplsFibAddInLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1, 3),
    _MplsVplsFibAddInLabel_Type()
)
mplsVplsFibAddInLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsFibAddInLabel.setStatus("current")


class _MplsVplsFibAddOutLabel_Type(Integer32):
    """Custom type mplsVplsFibAddOutLabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsVplsFibAddOutLabel_Type.__name__ = "Integer32"
_MplsVplsFibAddOutLabel_Object = MibTableColumn
mplsVplsFibAddOutLabel = _MplsVplsFibAddOutLabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1, 4),
    _MplsVplsFibAddOutLabel_Type()
)
mplsVplsFibAddOutLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsFibAddOutLabel.setStatus("current")
_MplsVplsFibAddRowStatus_Type = RowStatus
_MplsVplsFibAddRowStatus_Object = MibTableColumn
mplsVplsFibAddRowStatus = _MplsVplsFibAddRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 10, 1, 5),
    _MplsVplsFibAddRowStatus_Type()
)
mplsVplsFibAddRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsFibAddRowStatus.setStatus("current")
_MplsInterfaceMplsVpwsTable_Object = MibTable
mplsInterfaceMplsVpwsTable = _MplsInterfaceMplsVpwsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11)
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsTable.setStatus("current")
_MplsInterfaceMplsVpwsEntry_Object = MibTableRow
mplsInterfaceMplsVpwsEntry = _MplsInterfaceMplsVpwsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1)
)
mplsInterfaceMplsVpwsEntry.setIndexNames(
    (0, "SWITCH", "mplsInterfaceMplsVpwsIfIndex"),
    (0, "SWITCH", "mplsInterfaceMplsVpwsVcName"),
    (0, "SWITCH", "mplsInterfaceMplsVpwsVlanId"),
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsEntry.setStatus("current")


class _MplsInterfaceMplsVpwsIfIndex_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_MplsInterfaceMplsVpwsIfIndex_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsIfIndex_Object = MibTableColumn
mplsInterfaceMplsVpwsIfIndex = _MplsInterfaceMplsVpwsIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 1),
    _MplsInterfaceMplsVpwsIfIndex_Type()
)
mplsInterfaceMplsVpwsIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsIfIndex.setStatus("current")


class _MplsInterfaceMplsVpwsVcName_Type(OctetString):
    """Custom type mplsInterfaceMplsVpwsVcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsInterfaceMplsVpwsVcName_Type.__name__ = "OctetString"
_MplsInterfaceMplsVpwsVcName_Object = MibTableColumn
mplsInterfaceMplsVpwsVcName = _MplsInterfaceMplsVpwsVcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 2),
    _MplsInterfaceMplsVpwsVcName_Type()
)
mplsInterfaceMplsVpwsVcName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsVcName.setStatus("current")


class _MplsInterfaceMplsVpwsVlanId_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MplsInterfaceMplsVpwsVlanId_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsVlanId_Object = MibTableColumn
mplsInterfaceMplsVpwsVlanId = _MplsInterfaceMplsVpwsVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 3),
    _MplsInterfaceMplsVpwsVlanId_Type()
)
mplsInterfaceMplsVpwsVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsVlanId.setStatus("current")


class _MplsInterfaceMplsVpwsBundling_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsBundling based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVpwsBundling_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsBundling_Object = MibTableColumn
mplsInterfaceMplsVpwsBundling = _MplsInterfaceMplsVpwsBundling_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 4),
    _MplsInterfaceMplsVpwsBundling_Type()
)
mplsInterfaceMplsVpwsBundling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsBundling.setStatus("current")


class _MplsInterfaceMplsVpwsStatisticEn_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsStatisticEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVpwsStatisticEn_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsStatisticEn_Object = MibTableColumn
mplsInterfaceMplsVpwsStatisticEn = _MplsInterfaceMplsVpwsStatisticEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 5),
    _MplsInterfaceMplsVpwsStatisticEn_Type()
)
mplsInterfaceMplsVpwsStatisticEn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsStatisticEn.setStatus("current")


class _MplsInterfaceMplsVpwsReplaceDscp_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsReplaceDscp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVpwsReplaceDscp_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsReplaceDscp_Object = MibTableColumn
mplsInterfaceMplsVpwsReplaceDscp = _MplsInterfaceMplsVpwsReplaceDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 6),
    _MplsInterfaceMplsVpwsReplaceDscp_Type()
)
mplsInterfaceMplsVpwsReplaceDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsReplaceDscp.setStatus("current")


class _MplsInterfaceMplsVpwsReplaceCos_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsReplaceCos based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVpwsReplaceCos_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsReplaceCos_Object = MibTableColumn
mplsInterfaceMplsVpwsReplaceCos = _MplsInterfaceMplsVpwsReplaceCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 7),
    _MplsInterfaceMplsVpwsReplaceCos_Type()
)
mplsInterfaceMplsVpwsReplaceCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsReplaceCos.setStatus("current")


class _MplsInterfaceMplsVpwsVlanOperation_Type(OctetString):
    """Custom type mplsInterfaceMplsVpwsVlanOperation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MplsInterfaceMplsVpwsVlanOperation_Type.__name__ = "OctetString"
_MplsInterfaceMplsVpwsVlanOperation_Object = MibTableColumn
mplsInterfaceMplsVpwsVlanOperation = _MplsInterfaceMplsVpwsVlanOperation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 8),
    _MplsInterfaceMplsVpwsVlanOperation_Type()
)
mplsInterfaceMplsVpwsVlanOperation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsVlanOperation.setStatus("current")
_MplsInterfaceMplsVpwsRowStatus_Type = RowStatus
_MplsInterfaceMplsVpwsRowStatus_Object = MibTableColumn
mplsInterfaceMplsVpwsRowStatus = _MplsInterfaceMplsVpwsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 11, 1, 10),
    _MplsInterfaceMplsVpwsRowStatus_Type()
)
mplsInterfaceMplsVpwsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsRowStatus.setStatus("current")
_MplsInterfacePropertyTable_Object = MibTable
mplsInterfacePropertyTable = _MplsInterfacePropertyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12)
)
if mibBuilder.loadTexts:
    mplsInterfacePropertyTable.setStatus("current")
_MplsInterfacePropertyEntry_Object = MibTableRow
mplsInterfacePropertyEntry = _MplsInterfacePropertyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1)
)
mplsInterfacePropertyEntry.setIndexNames(
    (0, "SWITCH", "mplsInterfacePropertyIfIndex"),
)
if mibBuilder.loadTexts:
    mplsInterfacePropertyEntry.setStatus("current")


class _MplsInterfacePropertyIfIndex_Type(Integer32):
    """Custom type mplsInterfacePropertyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 48),
    )


_MplsInterfacePropertyIfIndex_Type.__name__ = "Integer32"
_MplsInterfacePropertyIfIndex_Object = MibTableColumn
mplsInterfacePropertyIfIndex = _MplsInterfacePropertyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 1),
    _MplsInterfacePropertyIfIndex_Type()
)
mplsInterfacePropertyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfacePropertyIfIndex.setStatus("current")


class _MplsInterfaceLabelSwitching_Type(Integer32):
    """Custom type mplsInterfaceLabelSwitching based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceLabelSwitching_Type.__name__ = "Integer32"
_MplsInterfaceLabelSwitching_Object = MibTableColumn
mplsInterfaceLabelSwitching = _MplsInterfaceLabelSwitching_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 4),
    _MplsInterfaceLabelSwitching_Type()
)
mplsInterfaceLabelSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceLabelSwitching.setStatus("current")
_MplsInterfaceTPP2PTxMac_Type = MacAddress
_MplsInterfaceTPP2PTxMac_Object = MibTableColumn
mplsInterfaceTPP2PTxMac = _MplsInterfaceTPP2PTxMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 5),
    _MplsInterfaceTPP2PTxMac_Type()
)
mplsInterfaceTPP2PTxMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceTPP2PTxMac.setStatus("current")
_MplsInterfaceCRCNumberThresholdRising_Type = OctetString
_MplsInterfaceCRCNumberThresholdRising_Object = MibTableColumn
mplsInterfaceCRCNumberThresholdRising = _MplsInterfaceCRCNumberThresholdRising_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 6),
    _MplsInterfaceCRCNumberThresholdRising_Type()
)
mplsInterfaceCRCNumberThresholdRising.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceCRCNumberThresholdRising.setStatus("current")
_MplsInterfaceCRCNumberThresholdFalling_Type = OctetString
_MplsInterfaceCRCNumberThresholdFalling_Object = MibTableColumn
mplsInterfaceCRCNumberThresholdFalling = _MplsInterfaceCRCNumberThresholdFalling_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 7),
    _MplsInterfaceCRCNumberThresholdFalling_Type()
)
mplsInterfaceCRCNumberThresholdFalling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceCRCNumberThresholdFalling.setStatus("current")


class _MplsInterfaceCRCRateThresholdRising_Type(Integer32):
    """Custom type mplsInterfaceCRCRateThresholdRising based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_MplsInterfaceCRCRateThresholdRising_Type.__name__ = "Integer32"
_MplsInterfaceCRCRateThresholdRising_Object = MibTableColumn
mplsInterfaceCRCRateThresholdRising = _MplsInterfaceCRCRateThresholdRising_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 8),
    _MplsInterfaceCRCRateThresholdRising_Type()
)
mplsInterfaceCRCRateThresholdRising.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceCRCRateThresholdRising.setStatus("current")


class _MplsInterfaceCRCRateThresholdFalling_Type(Integer32):
    """Custom type mplsInterfaceCRCRateThresholdFalling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_MplsInterfaceCRCRateThresholdFalling_Type.__name__ = "Integer32"
_MplsInterfaceCRCRateThresholdFalling_Object = MibTableColumn
mplsInterfaceCRCRateThresholdFalling = _MplsInterfaceCRCRateThresholdFalling_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 9),
    _MplsInterfaceCRCRateThresholdFalling_Type()
)
mplsInterfaceCRCRateThresholdFalling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsInterfaceCRCRateThresholdFalling.setStatus("current")


class _MplsInterfaceCRCAlarmStatus_Type(Integer32):
    """Custom type mplsInterfaceCRCAlarmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsInterfaceCRCAlarmStatus_Type.__name__ = "Integer32"
_MplsInterfaceCRCAlarmStatus_Object = MibTableColumn
mplsInterfaceCRCAlarmStatus = _MplsInterfaceCRCAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 12, 1, 10),
    _MplsInterfaceCRCAlarmStatus_Type()
)
mplsInterfaceCRCAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsInterfaceCRCAlarmStatus.setStatus("current")
_MplsInterfaceMplsVplsTable_Object = MibTable
mplsInterfaceMplsVplsTable = _MplsInterfaceMplsVplsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13)
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsTable.setStatus("current")
_MplsInterfaceMplsVplsEntry_Object = MibTableRow
mplsInterfaceMplsVplsEntry = _MplsInterfaceMplsVplsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1)
)
mplsInterfaceMplsVplsEntry.setIndexNames(
    (0, "SWITCH", "mplsInterfaceMplsVplsIfIndex"),
    (0, "SWITCH", "mplsInterfaceMplsVplsVplsName"),
    (0, "SWITCH", "mplsInterfaceMplsVplsVlanId"),
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsEntry.setStatus("current")


class _MplsInterfaceMplsVplsIfIndex_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_MplsInterfaceMplsVplsIfIndex_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsIfIndex_Object = MibTableColumn
mplsInterfaceMplsVplsIfIndex = _MplsInterfaceMplsVplsIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 1),
    _MplsInterfaceMplsVplsIfIndex_Type()
)
mplsInterfaceMplsVplsIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsIfIndex.setStatus("current")


class _MplsInterfaceMplsVplsVplsName_Type(OctetString):
    """Custom type mplsInterfaceMplsVplsVplsName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsInterfaceMplsVplsVplsName_Type.__name__ = "OctetString"
_MplsInterfaceMplsVplsVplsName_Object = MibTableColumn
mplsInterfaceMplsVplsVplsName = _MplsInterfaceMplsVplsVplsName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 2),
    _MplsInterfaceMplsVplsVplsName_Type()
)
mplsInterfaceMplsVplsVplsName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsVplsName.setStatus("current")


class _MplsInterfaceMplsVplsVlanId_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MplsInterfaceMplsVplsVlanId_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsVlanId_Object = MibTableColumn
mplsInterfaceMplsVplsVlanId = _MplsInterfaceMplsVplsVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 3),
    _MplsInterfaceMplsVplsVlanId_Type()
)
mplsInterfaceMplsVplsVlanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsVlanId.setStatus("current")


class _MplsInterfaceMplsVplsBundling_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsBundling based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVplsBundling_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsBundling_Object = MibTableColumn
mplsInterfaceMplsVplsBundling = _MplsInterfaceMplsVplsBundling_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 4),
    _MplsInterfaceMplsVplsBundling_Type()
)
mplsInterfaceMplsVplsBundling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsBundling.setStatus("current")


class _MplsInterfaceMplsVplsStatisticEn_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsStatisticEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVplsStatisticEn_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsStatisticEn_Object = MibTableColumn
mplsInterfaceMplsVplsStatisticEn = _MplsInterfaceMplsVplsStatisticEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 5),
    _MplsInterfaceMplsVplsStatisticEn_Type()
)
mplsInterfaceMplsVplsStatisticEn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsStatisticEn.setStatus("current")


class _MplsInterfaceMplsVplsETreeACType_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsETreeACType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("leaf", 1),
          ("root", 2))
    )


_MplsInterfaceMplsVplsETreeACType_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsETreeACType_Object = MibTableColumn
mplsInterfaceMplsVplsETreeACType = _MplsInterfaceMplsVplsETreeACType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 6),
    _MplsInterfaceMplsVplsETreeACType_Type()
)
mplsInterfaceMplsVplsETreeACType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsETreeACType.setStatus("current")


class _MplsInterfaceMplsVplsReplaceDscp_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsReplaceDscp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVplsReplaceDscp_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsReplaceDscp_Object = MibTableColumn
mplsInterfaceMplsVplsReplaceDscp = _MplsInterfaceMplsVplsReplaceDscp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 7),
    _MplsInterfaceMplsVplsReplaceDscp_Type()
)
mplsInterfaceMplsVplsReplaceDscp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsReplaceDscp.setStatus("current")


class _MplsInterfaceMplsVplsReplaceCos_Type(Integer32):
    """Custom type mplsInterfaceMplsVplsReplaceCos based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVplsReplaceCos_Type.__name__ = "Integer32"
_MplsInterfaceMplsVplsReplaceCos_Object = MibTableColumn
mplsInterfaceMplsVplsReplaceCos = _MplsInterfaceMplsVplsReplaceCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 8),
    _MplsInterfaceMplsVplsReplaceCos_Type()
)
mplsInterfaceMplsVplsReplaceCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsReplaceCos.setStatus("current")


class _MplsInterfaceMplsVplsVlanOperation_Type(OctetString):
    """Custom type mplsInterfaceMplsVplsVlanOperation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MplsInterfaceMplsVplsVlanOperation_Type.__name__ = "OctetString"
_MplsInterfaceMplsVplsVlanOperation_Object = MibTableColumn
mplsInterfaceMplsVplsVlanOperation = _MplsInterfaceMplsVplsVlanOperation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 9),
    _MplsInterfaceMplsVplsVlanOperation_Type()
)
mplsInterfaceMplsVplsVlanOperation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsVlanOperation.setStatus("current")
_MplsInterfaceMplsVplsRowStatus_Type = RowStatus
_MplsInterfaceMplsVplsRowStatus_Object = MibTableColumn
mplsInterfaceMplsVplsRowStatus = _MplsInterfaceMplsVplsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 13, 1, 10),
    _MplsInterfaceMplsVplsRowStatus_Type()
)
mplsInterfaceMplsVplsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVplsRowStatus.setStatus("current")
_MplsLspPeTable_Object = MibTable
mplsLspPeTable = _MplsLspPeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14)
)
if mibBuilder.loadTexts:
    mplsLspPeTable.setStatus("current")
_MplsLspPeEntry_Object = MibTableRow
mplsLspPeEntry = _MplsLspPeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1)
)
mplsLspPeEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPeName"),
)
if mibBuilder.loadTexts:
    mplsLspPeEntry.setStatus("current")


class _MplsLspPeName_Type(OctetString):
    """Custom type mplsLspPeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPeName_Type.__name__ = "OctetString"
_MplsLspPeName_Object = MibTableColumn
mplsLspPeName = _MplsLspPeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 1),
    _MplsLspPeName_Type()
)
mplsLspPeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPeName.setStatus("current")
_MplsLspPeRowStatus_Type = RowStatus
_MplsLspPeRowStatus_Object = MibTableColumn
mplsLspPeRowStatus = _MplsLspPeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 10),
    _MplsLspPeRowStatus_Type()
)
mplsLspPeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeRowStatus.setStatus("current")


class _MplsLspPeState_Type(Integer32):
    """Custom type mplsLspPeState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsLspPeState_Type.__name__ = "Integer32"
_MplsLspPeState_Object = MibTableColumn
mplsLspPeState = _MplsLspPeState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 11),
    _MplsLspPeState_Type()
)
mplsLspPeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeState.setStatus("current")


class _MplsLspPeDescription_Type(OctetString):
    """Custom type mplsLspPeDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPeDescription_Type.__name__ = "OctetString"
_MplsLspPeDescription_Object = MibTableColumn
mplsLspPeDescription = _MplsLspPeDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 12),
    _MplsLspPeDescription_Type()
)
mplsLspPeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeDescription.setStatus("current")


class _MplsLspPeOAMMegLevel_Type(Integer32):
    """Custom type mplsLspPeOAMMegLevel based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsLspPeOAMMegLevel_Type.__name__ = "Integer32"
_MplsLspPeOAMMegLevel_Object = MibTableColumn
mplsLspPeOAMMegLevel = _MplsLspPeOAMMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 20),
    _MplsLspPeOAMMegLevel_Type()
)
mplsLspPeOAMMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMegLevel.setStatus("current")


class _MplsLspPeOAMMegId_Type(OctetString):
    """Custom type mplsLspPeOAMMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsLspPeOAMMegId_Type.__name__ = "OctetString"
_MplsLspPeOAMMegId_Object = MibTableColumn
mplsLspPeOAMMegId = _MplsLspPeOAMMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 21),
    _MplsLspPeOAMMegId_Type()
)
mplsLspPeOAMMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMegId.setStatus("current")


class _MplsLspPeOAMMegIdIcc_Type(Integer32):
    """Custom type mplsLspPeOAMMegIdIcc based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_MplsLspPeOAMMegIdIcc_Type.__name__ = "Integer32"
_MplsLspPeOAMMegIdIcc_Object = MibTableColumn
mplsLspPeOAMMegIdIcc = _MplsLspPeOAMMegIdIcc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 22),
    _MplsLspPeOAMMegIdIcc_Type()
)
mplsLspPeOAMMegIdIcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMegIdIcc.setStatus("current")


class _MplsLspPeOAMMepId_Type(Integer32):
    """Custom type mplsLspPeOAMMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_MplsLspPeOAMMepId_Type.__name__ = "Integer32"
_MplsLspPeOAMMepId_Object = MibTableColumn
mplsLspPeOAMMepId = _MplsLspPeOAMMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 23),
    _MplsLspPeOAMMepId_Type()
)
mplsLspPeOAMMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMepId.setStatus("current")


class _MplsLspPeOAMMepInterval_Type(Integer32):
    """Custom type mplsLspPeOAMMepInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("three-point-three-ms", 1),
          ("ten-ms", 2),
          ("one-hundred-ms", 3),
          ("one-sec", 4),
          ("ten-sec", 5),
          ("one-min", 6),
          ("ten-min", 7))
    )


_MplsLspPeOAMMepInterval_Type.__name__ = "Integer32"
_MplsLspPeOAMMepInterval_Object = MibTableColumn
mplsLspPeOAMMepInterval = _MplsLspPeOAMMepInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 24),
    _MplsLspPeOAMMepInterval_Type()
)
mplsLspPeOAMMepInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMepInterval.setStatus("current")


class _MplsLspPeOAMMepExp_Type(Integer32):
    """Custom type mplsLspPeOAMMepExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsLspPeOAMMepExp_Type.__name__ = "Integer32"
_MplsLspPeOAMMepExp_Object = MibTableColumn
mplsLspPeOAMMepExp = _MplsLspPeOAMMepExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 25),
    _MplsLspPeOAMMepExp_Type()
)
mplsLspPeOAMMepExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMMepExp.setStatus("current")


class _MplsLspPeOAMRMepId_Type(Integer32):
    """Custom type mplsLspPeOAMRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_MplsLspPeOAMRMepId_Type.__name__ = "Integer32"
_MplsLspPeOAMRMepId_Object = MibTableColumn
mplsLspPeOAMRMepId = _MplsLspPeOAMRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 26),
    _MplsLspPeOAMRMepId_Type()
)
mplsLspPeOAMRMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMRMepId.setStatus("current")


class _MplsLspPeOAMCCState_Type(Integer32):
    """Custom type mplsLspPeOAMCCState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMCCState_Type.__name__ = "Integer32"
_MplsLspPeOAMCCState_Object = MibTableColumn
mplsLspPeOAMCCState = _MplsLspPeOAMCCState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 27),
    _MplsLspPeOAMCCState_Type()
)
mplsLspPeOAMCCState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMCCState.setStatus("current")


class _MplsLspPeOAMEventCacheSize_Type(Integer32):
    """Custom type mplsLspPeOAMEventCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_MplsLspPeOAMEventCacheSize_Type.__name__ = "Integer32"
_MplsLspPeOAMEventCacheSize_Object = MibTableColumn
mplsLspPeOAMEventCacheSize = _MplsLspPeOAMEventCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 28),
    _MplsLspPeOAMEventCacheSize_Type()
)
mplsLspPeOAMEventCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMEventCacheSize.setStatus("current")


class _MplsLspPeOAM1dmCacheSize_Type(Integer32):
    """Custom type mplsLspPeOAM1dmCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_MplsLspPeOAM1dmCacheSize_Type.__name__ = "Integer32"
_MplsLspPeOAM1dmCacheSize_Object = MibTableColumn
mplsLspPeOAM1dmCacheSize = _MplsLspPeOAM1dmCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 29),
    _MplsLspPeOAM1dmCacheSize_Type()
)
mplsLspPeOAM1dmCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAM1dmCacheSize.setStatus("current")


class _MplsLspPeOAMAisInterval_Type(Integer32):
    """Custom type mplsLspPeOAMAisInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_MplsLspPeOAMAisInterval_Type.__name__ = "Integer32"
_MplsLspPeOAMAisInterval_Object = MibTableColumn
mplsLspPeOAMAisInterval = _MplsLspPeOAMAisInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 30),
    _MplsLspPeOAMAisInterval_Type()
)
mplsLspPeOAMAisInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMAisInterval.setStatus("current")


class _MplsLspPeOAMAisClientSupress_Type(Integer32):
    """Custom type mplsLspPeOAMAisClientSupress based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMAisClientSupress_Type.__name__ = "Integer32"
_MplsLspPeOAMAisClientSupress_Object = MibTableColumn
mplsLspPeOAMAisClientSupress = _MplsLspPeOAMAisClientSupress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 31),
    _MplsLspPeOAMAisClientSupress_Type()
)
mplsLspPeOAMAisClientSupress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMAisClientSupress.setStatus("current")


class _MplsLspPeOAMLckInterval_Type(Integer32):
    """Custom type mplsLspPeOAMLckInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_MplsLspPeOAMLckInterval_Type.__name__ = "Integer32"
_MplsLspPeOAMLckInterval_Object = MibTableColumn
mplsLspPeOAMLckInterval = _MplsLspPeOAMLckInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 32),
    _MplsLspPeOAMLckInterval_Type()
)
mplsLspPeOAMLckInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLckInterval.setStatus("current")


class _MplsLspPeOAMLck_Type(Integer32):
    """Custom type mplsLspPeOAMLck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMLck_Type.__name__ = "Integer32"
_MplsLspPeOAMLck_Object = MibTableColumn
mplsLspPeOAMLck = _MplsLspPeOAMLck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 33),
    _MplsLspPeOAMLck_Type()
)
mplsLspPeOAMLck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLck.setStatus("current")


class _MplsLspPeOAMEvtLOC_Type(Integer32):
    """Custom type mplsLspPeOAMEvtLOC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtLOC_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtLOC_Object = MibTableColumn
mplsLspPeOAMEvtLOC = _MplsLspPeOAMEvtLOC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 34),
    _MplsLspPeOAMEvtLOC_Type()
)
mplsLspPeOAMEvtLOC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtLOC.setStatus("current")


class _MplsLspPeOAMEvtUMP_Type(Integer32):
    """Custom type mplsLspPeOAMEvtUMP based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtUMP_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtUMP_Object = MibTableColumn
mplsLspPeOAMEvtUMP = _MplsLspPeOAMEvtUMP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 35),
    _MplsLspPeOAMEvtUMP_Type()
)
mplsLspPeOAMEvtUMP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtUMP.setStatus("current")


class _MplsLspPeOAMEvtUIN_Type(Integer32):
    """Custom type mplsLspPeOAMEvtUIN based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtUIN_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtUIN_Object = MibTableColumn
mplsLspPeOAMEvtUIN = _MplsLspPeOAMEvtUIN_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 36),
    _MplsLspPeOAMEvtUIN_Type()
)
mplsLspPeOAMEvtUIN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtUIN.setStatus("current")


class _MplsLspPeOAMEvtUMG_Type(Integer32):
    """Custom type mplsLspPeOAMEvtUMG based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtUMG_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtUMG_Object = MibTableColumn
mplsLspPeOAMEvtUMG = _MplsLspPeOAMEvtUMG_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 37),
    _MplsLspPeOAMEvtUMG_Type()
)
mplsLspPeOAMEvtUMG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtUMG.setStatus("current")


class _MplsLspPeOAMEvtULV_Type(Integer32):
    """Custom type mplsLspPeOAMEvtULV based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtULV_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtULV_Object = MibTableColumn
mplsLspPeOAMEvtULV = _MplsLspPeOAMEvtULV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 38),
    _MplsLspPeOAMEvtULV_Type()
)
mplsLspPeOAMEvtULV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtULV.setStatus("current")


class _MplsLspPeOAMEvtW1ST_Type(Integer32):
    """Custom type mplsLspPeOAMEvtW1ST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtW1ST_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtW1ST_Object = MibTableColumn
mplsLspPeOAMEvtW1ST = _MplsLspPeOAMEvtW1ST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 39),
    _MplsLspPeOAMEvtW1ST_Type()
)
mplsLspPeOAMEvtW1ST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtW1ST.setStatus("current")


class _MplsLspPeOAMEvtRDIR_Type(Integer32):
    """Custom type mplsLspPeOAMEvtRDIR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtRDIR_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtRDIR_Object = MibTableColumn
mplsLspPeOAMEvtRDIR = _MplsLspPeOAMEvtRDIR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 40),
    _MplsLspPeOAMEvtRDIR_Type()
)
mplsLspPeOAMEvtRDIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtRDIR.setStatus("current")


class _MplsLspPeOAMEvtRDIT_Type(Integer32):
    """Custom type mplsLspPeOAMEvtRDIT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtRDIT_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtRDIT_Object = MibTableColumn
mplsLspPeOAMEvtRDIT = _MplsLspPeOAMEvtRDIT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 41),
    _MplsLspPeOAMEvtRDIT_Type()
)
mplsLspPeOAMEvtRDIT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtRDIT.setStatus("current")


class _MplsLspPeOAMEvtAISR_Type(Integer32):
    """Custom type mplsLspPeOAMEvtAISR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtAISR_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtAISR_Object = MibTableColumn
mplsLspPeOAMEvtAISR = _MplsLspPeOAMEvtAISR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 42),
    _MplsLspPeOAMEvtAISR_Type()
)
mplsLspPeOAMEvtAISR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtAISR.setStatus("current")


class _MplsLspPeOAMEvtAIST_Type(Integer32):
    """Custom type mplsLspPeOAMEvtAIST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtAIST_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtAIST_Object = MibTableColumn
mplsLspPeOAMEvtAIST = _MplsLspPeOAMEvtAIST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 43),
    _MplsLspPeOAMEvtAIST_Type()
)
mplsLspPeOAMEvtAIST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtAIST.setStatus("current")


class _MplsLspPeOAMEvtAISD_Type(Integer32):
    """Custom type mplsLspPeOAMEvtAISD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtAISD_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtAISD_Object = MibTableColumn
mplsLspPeOAMEvtAISD = _MplsLspPeOAMEvtAISD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 44),
    _MplsLspPeOAMEvtAISD_Type()
)
mplsLspPeOAMEvtAISD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtAISD.setStatus("current")


class _MplsLspPeOAMEvtLCKR_Type(Integer32):
    """Custom type mplsLspPeOAMEvtLCKR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtLCKR_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtLCKR_Object = MibTableColumn
mplsLspPeOAMEvtLCKR = _MplsLspPeOAMEvtLCKR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 45),
    _MplsLspPeOAMEvtLCKR_Type()
)
mplsLspPeOAMEvtLCKR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtLCKR.setStatus("current")


class _MplsLspPeOAMEvtLCKT_Type(Integer32):
    """Custom type mplsLspPeOAMEvtLCKT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtLCKT_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtLCKT_Object = MibTableColumn
mplsLspPeOAMEvtLCKT = _MplsLspPeOAMEvtLCKT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 46),
    _MplsLspPeOAMEvtLCKT_Type()
)
mplsLspPeOAMEvtLCKT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtLCKT.setStatus("current")


class _MplsLspPeOAMEvtLCKD_Type(Integer32):
    """Custom type mplsLspPeOAMEvtLCKD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtLCKD_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtLCKD_Object = MibTableColumn
mplsLspPeOAMEvtLCKD = _MplsLspPeOAMEvtLCKD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 47),
    _MplsLspPeOAMEvtLCKD_Type()
)
mplsLspPeOAMEvtLCKD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtLCKD.setStatus("current")


class _MplsLspPeOAMLckTxEnable_Type(Integer32):
    """Custom type mplsLspPeOAMLckTxEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMLckTxEnable_Type.__name__ = "Integer32"
_MplsLspPeOAMLckTxEnable_Object = MibTableColumn
mplsLspPeOAMLckTxEnable = _MplsLspPeOAMLckTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 48),
    _MplsLspPeOAMLckTxEnable_Type()
)
mplsLspPeOAMLckTxEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLckTxEnable.setStatus("current")


class _MplsLspPeOAMEvtCRC_Type(Integer32):
    """Custom type mplsLspPeOAMEvtCRC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeOAMEvtCRC_Type.__name__ = "Integer32"
_MplsLspPeOAMEvtCRC_Object = MibTableColumn
mplsLspPeOAMEvtCRC = _MplsLspPeOAMEvtCRC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 49),
    _MplsLspPeOAMEvtCRC_Type()
)
mplsLspPeOAMEvtCRC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMEvtCRC.setStatus("current")


class _MplsLspPeOAMState_Type(Integer32):
    """Custom type mplsLspPeOAMState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("fail", 1),
          ("ok", 2))
    )


_MplsLspPeOAMState_Type.__name__ = "Integer32"
_MplsLspPeOAMState_Object = MibTableColumn
mplsLspPeOAMState = _MplsLspPeOAMState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 50),
    _MplsLspPeOAMState_Type()
)
mplsLspPeOAMState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMState.setStatus("current")
_MplsLspPeIngressPkts_Type = Counter64
_MplsLspPeIngressPkts_Object = MibTableColumn
mplsLspPeIngressPkts = _MplsLspPeIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 51),
    _MplsLspPeIngressPkts_Type()
)
mplsLspPeIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeIngressPkts.setStatus("current")
_MplsLspPeIngressBytes_Type = Counter64
_MplsLspPeIngressBytes_Object = MibTableColumn
mplsLspPeIngressBytes = _MplsLspPeIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 52),
    _MplsLspPeIngressBytes_Type()
)
mplsLspPeIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeIngressBytes.setStatus("current")
_MplsLspPeEgressPkts_Type = Counter64
_MplsLspPeEgressPkts_Object = MibTableColumn
mplsLspPeEgressPkts = _MplsLspPeEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 53),
    _MplsLspPeEgressPkts_Type()
)
mplsLspPeEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeEgressPkts.setStatus("current")
_MplsLspPeEgressBytes_Type = Counter64
_MplsLspPeEgressBytes_Object = MibTableColumn
mplsLspPeEgressBytes = _MplsLspPeEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 54),
    _MplsLspPeEgressBytes_Type()
)
mplsLspPeEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeEgressBytes.setStatus("current")


class _MplsLspPeStats_Type(Integer32):
    """Custom type mplsLspPeStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPeStats_Type.__name__ = "Integer32"
_MplsLspPeStats_Object = MibTableColumn
mplsLspPeStats = _MplsLspPeStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 55),
    _MplsLspPeStats_Type()
)
mplsLspPeStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeStats.setStatus("current")


class _MplsLspPeBandwidth_Type(Integer32):
    """Custom type mplsLspPeBandwidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_MplsLspPeBandwidth_Type.__name__ = "Integer32"
_MplsLspPeBandwidth_Object = MibTableColumn
mplsLspPeBandwidth = _MplsLspPeBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 56),
    _MplsLspPeBandwidth_Type()
)
mplsLspPeBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeBandwidth.setStatus("current")


class _MplsLspPeOAMLmDualExp_Type(Integer32):
    """Custom type mplsLspPeOAMLmDualExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_MplsLspPeOAMLmDualExp_Type.__name__ = "Integer32"
_MplsLspPeOAMLmDualExp_Object = MibTableColumn
mplsLspPeOAMLmDualExp = _MplsLspPeOAMLmDualExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 61),
    _MplsLspPeOAMLmDualExp_Type()
)
mplsLspPeOAMLmDualExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmDualExp.setStatus("current")


class _MplsLspPeOAMLmDualStatInterval_Type(Integer32):
    """Custom type mplsLspPeOAMLmDualStatInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_MplsLspPeOAMLmDualStatInterval_Type.__name__ = "Integer32"
_MplsLspPeOAMLmDualStatInterval_Object = MibTableColumn
mplsLspPeOAMLmDualStatInterval = _MplsLspPeOAMLmDualStatInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 62),
    _MplsLspPeOAMLmDualStatInterval_Type()
)
mplsLspPeOAMLmDualStatInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmDualStatInterval.setStatus("current")


class _MplsLspPeOAMLmDualCacheSize_Type(Integer32):
    """Custom type mplsLspPeOAMLmDualCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_MplsLspPeOAMLmDualCacheSize_Type.__name__ = "Integer32"
_MplsLspPeOAMLmDualCacheSize_Object = MibTableColumn
mplsLspPeOAMLmDualCacheSize = _MplsLspPeOAMLmDualCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 63),
    _MplsLspPeOAMLmDualCacheSize_Type()
)
mplsLspPeOAMLmDualCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmDualCacheSize.setStatus("current")


class _MplsLspPeOAMLmSingleExp_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_MplsLspPeOAMLmSingleExp_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleExp_Object = MibTableColumn
mplsLspPeOAMLmSingleExp = _MplsLspPeOAMLmSingleExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 66),
    _MplsLspPeOAMLmSingleExp_Type()
)
mplsLspPeOAMLmSingleExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleExp.setStatus("current")


class _MplsLspPeOAMLmSingleInterval_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_MplsLspPeOAMLmSingleInterval_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleInterval_Object = MibTableColumn
mplsLspPeOAMLmSingleInterval = _MplsLspPeOAMLmSingleInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 67),
    _MplsLspPeOAMLmSingleInterval_Type()
)
mplsLspPeOAMLmSingleInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleInterval.setStatus("current")


class _MplsLspPeOAMLmSingleCacheSize_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_MplsLspPeOAMLmSingleCacheSize_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleCacheSize_Object = MibTableColumn
mplsLspPeOAMLmSingleCacheSize = _MplsLspPeOAMLmSingleCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 68),
    _MplsLspPeOAMLmSingleCacheSize_Type()
)
mplsLspPeOAMLmSingleCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleCacheSize.setStatus("current")


class _MplsLspPeOAMLmEnableState_Type(Integer32):
    """Custom type mplsLspPeOAMLmEnableState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("enable-dual", 1),
          ("enable-single", 2),
          ("disable", 3))
    )


_MplsLspPeOAMLmEnableState_Type.__name__ = "Integer32"
_MplsLspPeOAMLmEnableState_Object = MibTableColumn
mplsLspPeOAMLmEnableState = _MplsLspPeOAMLmEnableState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 70),
    _MplsLspPeOAMLmEnableState_Type()
)
mplsLspPeOAMLmEnableState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmEnableState.setStatus("current")


class _MplsLspPeOAMLmLocalLossThreshold_Type(Integer32):
    """Custom type mplsLspPeOAMLmLocalLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsLspPeOAMLmLocalLossThreshold_Type.__name__ = "Integer32"
_MplsLspPeOAMLmLocalLossThreshold_Object = MibTableColumn
mplsLspPeOAMLmLocalLossThreshold = _MplsLspPeOAMLmLocalLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 71),
    _MplsLspPeOAMLmLocalLossThreshold_Type()
)
mplsLspPeOAMLmLocalLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmLocalLossThreshold.setStatus("current")


class _MplsLspPeOAMLmRemoteLossThreshold_Type(Integer32):
    """Custom type mplsLspPeOAMLmRemoteLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsLspPeOAMLmRemoteLossThreshold_Type.__name__ = "Integer32"
_MplsLspPeOAMLmRemoteLossThreshold_Object = MibTableColumn
mplsLspPeOAMLmRemoteLossThreshold = _MplsLspPeOAMLmRemoteLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 72),
    _MplsLspPeOAMLmRemoteLossThreshold_Type()
)
mplsLspPeOAMLmRemoteLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmRemoteLossThreshold.setStatus("current")


class _MplsLspPeOAMLmSingleRxCount_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleRxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MplsLspPeOAMLmSingleRxCount_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleRxCount_Object = MibTableColumn
mplsLspPeOAMLmSingleRxCount = _MplsLspPeOAMLmSingleRxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 73),
    _MplsLspPeOAMLmSingleRxCount_Type()
)
mplsLspPeOAMLmSingleRxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleRxCount.setStatus("current")


class _MplsLspPeOAMLmSingleTxCount_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleTxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MplsLspPeOAMLmSingleTxCount_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleTxCount_Object = MibTableColumn
mplsLspPeOAMLmSingleTxCount = _MplsLspPeOAMLmSingleTxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 74),
    _MplsLspPeOAMLmSingleTxCount_Type()
)
mplsLspPeOAMLmSingleTxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleTxCount.setStatus("current")


class _MplsLspPeOAMLmSingleSuccessRate_Type(Integer32):
    """Custom type mplsLspPeOAMLmSingleSuccessRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsLspPeOAMLmSingleSuccessRate_Type.__name__ = "Integer32"
_MplsLspPeOAMLmSingleSuccessRate_Object = MibTableColumn
mplsLspPeOAMLmSingleSuccessRate = _MplsLspPeOAMLmSingleSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 75),
    _MplsLspPeOAMLmSingleSuccessRate_Type()
)
mplsLspPeOAMLmSingleSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleSuccessRate.setStatus("current")


class _MplsLspPeOAMLmSingleStartTime_Type(OctetString):
    """Custom type mplsLspPeOAMLmSingleStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsLspPeOAMLmSingleStartTime_Type.__name__ = "OctetString"
_MplsLspPeOAMLmSingleStartTime_Object = MibTableColumn
mplsLspPeOAMLmSingleStartTime = _MplsLspPeOAMLmSingleStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 76),
    _MplsLspPeOAMLmSingleStartTime_Type()
)
mplsLspPeOAMLmSingleStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleStartTime.setStatus("current")


class _MplsLspPeOAMLmSingleEndTime_Type(OctetString):
    """Custom type mplsLspPeOAMLmSingleEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsLspPeOAMLmSingleEndTime_Type.__name__ = "OctetString"
_MplsLspPeOAMLmSingleEndTime_Object = MibTableColumn
mplsLspPeOAMLmSingleEndTime = _MplsLspPeOAMLmSingleEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 14, 1, 77),
    _MplsLspPeOAMLmSingleEndTime_Type()
)
mplsLspPeOAMLmSingleEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPeOAMLmSingleEndTime.setStatus("current")
_MplsLspPeIngressTable_Object = MibTable
mplsLspPeIngressTable = _MplsLspPeIngressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 15)
)
if mibBuilder.loadTexts:
    mplsLspPeIngressTable.setStatus("current")
_MplsLspPeIngressEntry_Object = MibTableRow
mplsLspPeIngressEntry = _MplsLspPeIngressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 15, 1)
)
mplsLspPeIngressEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPeIngressLspName"),
)
if mibBuilder.loadTexts:
    mplsLspPeIngressEntry.setStatus("current")


class _MplsLspPeIngressLspName_Type(OctetString):
    """Custom type mplsLspPeIngressLspName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPeIngressLspName_Type.__name__ = "OctetString"
_MplsLspPeIngressLspName_Object = MibTableColumn
mplsLspPeIngressLspName = _MplsLspPeIngressLspName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 15, 1, 1),
    _MplsLspPeIngressLspName_Type()
)
mplsLspPeIngressLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPeIngressLspName.setStatus("current")


class _MplsLspPeIngressInlabel_Type(Integer32):
    """Custom type mplsLspPeIngressInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPeIngressInlabel_Type.__name__ = "Integer32"
_MplsLspPeIngressInlabel_Object = MibTableColumn
mplsLspPeIngressInlabel = _MplsLspPeIngressInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 15, 1, 2),
    _MplsLspPeIngressInlabel_Type()
)
mplsLspPeIngressInlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPeIngressInlabel.setStatus("current")
_MplsLspPeIngressRowStatus_Type = RowStatus
_MplsLspPeIngressRowStatus_Object = MibTableColumn
mplsLspPeIngressRowStatus = _MplsLspPeIngressRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 15, 1, 10),
    _MplsLspPeIngressRowStatus_Type()
)
mplsLspPeIngressRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeIngressRowStatus.setStatus("current")
_MplsLspPeEgressTable_Object = MibTable
mplsLspPeEgressTable = _MplsLspPeEgressTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16)
)
if mibBuilder.loadTexts:
    mplsLspPeEgressTable.setStatus("current")
_MplsLspPeEgressEntry_Object = MibTableRow
mplsLspPeEgressEntry = _MplsLspPeEgressEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1)
)
mplsLspPeEgressEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPeEgressLspName"),
)
if mibBuilder.loadTexts:
    mplsLspPeEgressEntry.setStatus("current")


class _MplsLspPeEgressLspName_Type(OctetString):
    """Custom type mplsLspPeEgressLspName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPeEgressLspName_Type.__name__ = "OctetString"
_MplsLspPeEgressLspName_Object = MibTableColumn
mplsLspPeEgressLspName = _MplsLspPeEgressLspName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 1),
    _MplsLspPeEgressLspName_Type()
)
mplsLspPeEgressLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPeEgressLspName.setStatus("current")


class _MplsLspPeEgressOutlabel_Type(Integer32):
    """Custom type mplsLspPeEgressOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPeEgressOutlabel_Type.__name__ = "Integer32"
_MplsLspPeEgressOutlabel_Object = MibTableColumn
mplsLspPeEgressOutlabel = _MplsLspPeEgressOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 2),
    _MplsLspPeEgressOutlabel_Type()
)
mplsLspPeEgressOutlabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeEgressOutlabel.setStatus("current")
_MplsLspPeEgressNextHop_Type = IpAddress
_MplsLspPeEgressNextHop_Object = MibTableColumn
mplsLspPeEgressNextHop = _MplsLspPeEgressNextHop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 3),
    _MplsLspPeEgressNextHop_Type()
)
mplsLspPeEgressNextHop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeEgressNextHop.setStatus("current")


class _MplsLspPeEgressOutIfindex_Type(Integer32):
    """Custom type mplsLspPeEgressOutIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPeEgressOutIfindex_Type.__name__ = "Integer32"
_MplsLspPeEgressOutIfindex_Object = MibTableColumn
mplsLspPeEgressOutIfindex = _MplsLspPeEgressOutIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 4),
    _MplsLspPeEgressOutIfindex_Type()
)
mplsLspPeEgressOutIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeEgressOutIfindex.setStatus("current")


class _MplsLspPeEgressOutMemIfindex_Type(Integer32):
    """Custom type mplsLspPeEgressOutMemIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPeEgressOutMemIfindex_Type.__name__ = "Integer32"
_MplsLspPeEgressOutMemIfindex_Object = MibTableColumn
mplsLspPeEgressOutMemIfindex = _MplsLspPeEgressOutMemIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 5),
    _MplsLspPeEgressOutMemIfindex_Type()
)
mplsLspPeEgressOutMemIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeEgressOutMemIfindex.setStatus("current")
_MplsLspPeEgressRowStatus_Type = RowStatus
_MplsLspPeEgressRowStatus_Object = MibTableColumn
mplsLspPeEgressRowStatus = _MplsLspPeEgressRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 16, 1, 10),
    _MplsLspPeEgressRowStatus_Type()
)
mplsLspPeEgressRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeEgressRowStatus.setStatus("current")
_MplsLspPTable_Object = MibTable
mplsLspPTable = _MplsLspPTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17)
)
if mibBuilder.loadTexts:
    mplsLspPTable.setStatus("current")
_MplsLspPEntry_Object = MibTableRow
mplsLspPEntry = _MplsLspPEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1)
)
mplsLspPEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPName"),
)
if mibBuilder.loadTexts:
    mplsLspPEntry.setStatus("current")


class _MplsLspPName_Type(OctetString):
    """Custom type mplsLspPName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPName_Type.__name__ = "OctetString"
_MplsLspPName_Object = MibTableColumn
mplsLspPName = _MplsLspPName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 1),
    _MplsLspPName_Type()
)
mplsLspPName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPName.setStatus("current")
_MplsLspPRowStatus_Type = RowStatus
_MplsLspPRowStatus_Object = MibTableColumn
mplsLspPRowStatus = _MplsLspPRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 10),
    _MplsLspPRowStatus_Type()
)
mplsLspPRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPRowStatus.setStatus("current")


class _MplsLspPOAMMegId_Type(OctetString):
    """Custom type mplsLspPOAMMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsLspPOAMMegId_Type.__name__ = "OctetString"
_MplsLspPOAMMegId_Object = MibTableColumn
mplsLspPOAMMegId = _MplsLspPOAMMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 11),
    _MplsLspPOAMMegId_Type()
)
mplsLspPOAMMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPOAMMegId.setStatus("current")


class _MplsLspPOAMMegIdIcc_Type(Integer32):
    """Custom type mplsLspPOAMMegIdIcc based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_MplsLspPOAMMegIdIcc_Type.__name__ = "Integer32"
_MplsLspPOAMMegIdIcc_Object = MibTableColumn
mplsLspPOAMMegIdIcc = _MplsLspPOAMMegIdIcc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 12),
    _MplsLspPOAMMegIdIcc_Type()
)
mplsLspPOAMMegIdIcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPOAMMegIdIcc.setStatus("current")


class _MplsLspPOAMMipState_Type(Integer32):
    """Custom type mplsLspPOAMMipState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPOAMMipState_Type.__name__ = "Integer32"
_MplsLspPOAMMipState_Object = MibTableColumn
mplsLspPOAMMipState = _MplsLspPOAMMipState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 13),
    _MplsLspPOAMMipState_Type()
)
mplsLspPOAMMipState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPOAMMipState.setStatus("current")


class _MplsLspPOAMMegLevel_Type(Integer32):
    """Custom type mplsLspPOAMMegLevel based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsLspPOAMMegLevel_Type.__name__ = "Integer32"
_MplsLspPOAMMegLevel_Object = MibTableColumn
mplsLspPOAMMegLevel = _MplsLspPOAMMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 14),
    _MplsLspPOAMMegLevel_Type()
)
mplsLspPOAMMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPOAMMegLevel.setStatus("current")


class _MplsLspPDescription_Type(OctetString):
    """Custom type mplsLspPDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPDescription_Type.__name__ = "OctetString"
_MplsLspPDescription_Object = MibTableColumn
mplsLspPDescription = _MplsLspPDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 15),
    _MplsLspPDescription_Type()
)
mplsLspPDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPDescription.setStatus("current")


class _MplsLspPStats_Type(Integer32):
    """Custom type mplsLspPStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPStats_Type.__name__ = "Integer32"
_MplsLspPStats_Object = MibTableColumn
mplsLspPStats = _MplsLspPStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 17, 1, 16),
    _MplsLspPStats_Type()
)
mplsLspPStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPStats.setStatus("current")
_MplsLspPEastTable_Object = MibTable
mplsLspPEastTable = _MplsLspPEastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18)
)
if mibBuilder.loadTexts:
    mplsLspPEastTable.setStatus("current")
_MplsLspPEastEntry_Object = MibTableRow
mplsLspPEastEntry = _MplsLspPEastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1)
)
mplsLspPEastEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPEastLspName"),
)
if mibBuilder.loadTexts:
    mplsLspPEastEntry.setStatus("current")


class _MplsLspPEastLspName_Type(OctetString):
    """Custom type mplsLspPEastLspName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPEastLspName_Type.__name__ = "OctetString"
_MplsLspPEastLspName_Object = MibTableColumn
mplsLspPEastLspName = _MplsLspPEastLspName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 1),
    _MplsLspPEastLspName_Type()
)
mplsLspPEastLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPEastLspName.setStatus("current")


class _MplsLspPEastInlabel_Type(Integer32):
    """Custom type mplsLspPEastInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPEastInlabel_Type.__name__ = "Integer32"
_MplsLspPEastInlabel_Object = MibTableColumn
mplsLspPEastInlabel = _MplsLspPEastInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 2),
    _MplsLspPEastInlabel_Type()
)
mplsLspPEastInlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPEastInlabel.setStatus("current")


class _MplsLspPEastOutlabel_Type(Integer32):
    """Custom type mplsLspPEastOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPEastOutlabel_Type.__name__ = "Integer32"
_MplsLspPEastOutlabel_Object = MibTableColumn
mplsLspPEastOutlabel = _MplsLspPEastOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 3),
    _MplsLspPEastOutlabel_Type()
)
mplsLspPEastOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPEastOutlabel.setStatus("current")
_MplsLspPEastNextHop_Type = IpAddress
_MplsLspPEastNextHop_Object = MibTableColumn
mplsLspPEastNextHop = _MplsLspPEastNextHop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 4),
    _MplsLspPEastNextHop_Type()
)
mplsLspPEastNextHop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPEastNextHop.setStatus("current")


class _MplsLspPEastTunnel_Type(OctetString):
    """Custom type mplsLspPEastTunnel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPEastTunnel_Type.__name__ = "OctetString"
_MplsLspPEastTunnel_Object = MibTableColumn
mplsLspPEastTunnel = _MplsLspPEastTunnel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 5),
    _MplsLspPEastTunnel_Type()
)
mplsLspPEastTunnel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPEastTunnel.setStatus("current")


class _MplsLspPEastOutIfindex_Type(Integer32):
    """Custom type mplsLspPEastOutIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPEastOutIfindex_Type.__name__ = "Integer32"
_MplsLspPEastOutIfindex_Object = MibTableColumn
mplsLspPEastOutIfindex = _MplsLspPEastOutIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 6),
    _MplsLspPEastOutIfindex_Type()
)
mplsLspPEastOutIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPEastOutIfindex.setStatus("current")


class _MplsLspPEastOutMemIfindex_Type(Integer32):
    """Custom type mplsLspPEastOutMemIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPEastOutMemIfindex_Type.__name__ = "Integer32"
_MplsLspPEastOutMemIfindex_Object = MibTableColumn
mplsLspPEastOutMemIfindex = _MplsLspPEastOutMemIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 7),
    _MplsLspPEastOutMemIfindex_Type()
)
mplsLspPEastOutMemIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPEastOutMemIfindex.setStatus("current")


class _MplsLspPEastReplaceExp_Type(Integer32):
    """Custom type mplsLspPEastReplaceExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPEastReplaceExp_Type.__name__ = "Integer32"
_MplsLspPEastReplaceExp_Object = MibTableColumn
mplsLspPEastReplaceExp = _MplsLspPEastReplaceExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 8),
    _MplsLspPEastReplaceExp_Type()
)
mplsLspPEastReplaceExp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPEastReplaceExp.setStatus("current")
_MplsLspPEastRowStatus_Type = RowStatus
_MplsLspPEastRowStatus_Object = MibTableColumn
mplsLspPEastRowStatus = _MplsLspPEastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 10),
    _MplsLspPEastRowStatus_Type()
)
mplsLspPEastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPEastRowStatus.setStatus("current")


class _MplsLspPEastState_Type(Integer32):
    """Custom type mplsLspPEastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsLspPEastState_Type.__name__ = "Integer32"
_MplsLspPEastState_Object = MibTableColumn
mplsLspPEastState = _MplsLspPEastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 11),
    _MplsLspPEastState_Type()
)
mplsLspPEastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPEastState.setStatus("current")
_MplsLspPEastIngressPkts_Type = Counter64
_MplsLspPEastIngressPkts_Object = MibTableColumn
mplsLspPEastIngressPkts = _MplsLspPEastIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 20),
    _MplsLspPEastIngressPkts_Type()
)
mplsLspPEastIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPEastIngressPkts.setStatus("current")
_MplsLspPEastIngressbytes_Type = Counter64
_MplsLspPEastIngressbytes_Object = MibTableColumn
mplsLspPEastIngressbytes = _MplsLspPEastIngressbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 21),
    _MplsLspPEastIngressbytes_Type()
)
mplsLspPEastIngressbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPEastIngressbytes.setStatus("current")
_MplsLspPEastEgressPkts_Type = Counter64
_MplsLspPEastEgressPkts_Object = MibTableColumn
mplsLspPEastEgressPkts = _MplsLspPEastEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 22),
    _MplsLspPEastEgressPkts_Type()
)
mplsLspPEastEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPEastEgressPkts.setStatus("current")
_MplsLspPEastEgressBytes_Type = Counter64
_MplsLspPEastEgressBytes_Object = MibTableColumn
mplsLspPEastEgressBytes = _MplsLspPEastEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 18, 1, 23),
    _MplsLspPEastEgressBytes_Type()
)
mplsLspPEastEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPEastEgressBytes.setStatus("current")
_MplsLspPWestTable_Object = MibTable
mplsLspPWestTable = _MplsLspPWestTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19)
)
if mibBuilder.loadTexts:
    mplsLspPWestTable.setStatus("current")
_MplsLspPWestEntry_Object = MibTableRow
mplsLspPWestEntry = _MplsLspPWestEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1)
)
mplsLspPWestEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPWestLspName"),
)
if mibBuilder.loadTexts:
    mplsLspPWestEntry.setStatus("current")


class _MplsLspPWestLspName_Type(OctetString):
    """Custom type mplsLspPWestLspName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPWestLspName_Type.__name__ = "OctetString"
_MplsLspPWestLspName_Object = MibTableColumn
mplsLspPWestLspName = _MplsLspPWestLspName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 1),
    _MplsLspPWestLspName_Type()
)
mplsLspPWestLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPWestLspName.setStatus("current")


class _MplsLspPWestInlabel_Type(Integer32):
    """Custom type mplsLspPWestInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPWestInlabel_Type.__name__ = "Integer32"
_MplsLspPWestInlabel_Object = MibTableColumn
mplsLspPWestInlabel = _MplsLspPWestInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 2),
    _MplsLspPWestInlabel_Type()
)
mplsLspPWestInlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPWestInlabel.setStatus("current")


class _MplsLspPWestOutlabel_Type(Integer32):
    """Custom type mplsLspPWestOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsLspPWestOutlabel_Type.__name__ = "Integer32"
_MplsLspPWestOutlabel_Object = MibTableColumn
mplsLspPWestOutlabel = _MplsLspPWestOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 3),
    _MplsLspPWestOutlabel_Type()
)
mplsLspPWestOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPWestOutlabel.setStatus("current")
_MplsLspPWestNextHop_Type = IpAddress
_MplsLspPWestNextHop_Object = MibTableColumn
mplsLspPWestNextHop = _MplsLspPWestNextHop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 4),
    _MplsLspPWestNextHop_Type()
)
mplsLspPWestNextHop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPWestNextHop.setStatus("current")


class _MplsLspPWestTunnel_Type(OctetString):
    """Custom type mplsLspPWestTunnel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPWestTunnel_Type.__name__ = "OctetString"
_MplsLspPWestTunnel_Object = MibTableColumn
mplsLspPWestTunnel = _MplsLspPWestTunnel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 5),
    _MplsLspPWestTunnel_Type()
)
mplsLspPWestTunnel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsLspPWestTunnel.setStatus("current")


class _MplsLspPWestOutIfindex_Type(Integer32):
    """Custom type mplsLspPWestOutIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPWestOutIfindex_Type.__name__ = "Integer32"
_MplsLspPWestOutIfindex_Object = MibTableColumn
mplsLspPWestOutIfindex = _MplsLspPWestOutIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 6),
    _MplsLspPWestOutIfindex_Type()
)
mplsLspPWestOutIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPWestOutIfindex.setStatus("current")


class _MplsLspPWestOutMemIfindex_Type(Integer32):
    """Custom type mplsLspPWestOutMemIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsLspPWestOutMemIfindex_Type.__name__ = "Integer32"
_MplsLspPWestOutMemIfindex_Object = MibTableColumn
mplsLspPWestOutMemIfindex = _MplsLspPWestOutMemIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 7),
    _MplsLspPWestOutMemIfindex_Type()
)
mplsLspPWestOutMemIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPWestOutMemIfindex.setStatus("current")


class _MplsLspPWestReplaceExp_Type(Integer32):
    """Custom type mplsLspPWestReplaceExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsLspPWestReplaceExp_Type.__name__ = "Integer32"
_MplsLspPWestReplaceExp_Object = MibTableColumn
mplsLspPWestReplaceExp = _MplsLspPWestReplaceExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 8),
    _MplsLspPWestReplaceExp_Type()
)
mplsLspPWestReplaceExp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPWestReplaceExp.setStatus("current")
_MplsLspPWestRowStatus_Type = RowStatus
_MplsLspPWestRowStatus_Object = MibTableColumn
mplsLspPWestRowStatus = _MplsLspPWestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 10),
    _MplsLspPWestRowStatus_Type()
)
mplsLspPWestRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPWestRowStatus.setStatus("current")


class _MplsLspPWestState_Type(Integer32):
    """Custom type mplsLspPWestState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsLspPWestState_Type.__name__ = "Integer32"
_MplsLspPWestState_Object = MibTableColumn
mplsLspPWestState = _MplsLspPWestState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 11),
    _MplsLspPWestState_Type()
)
mplsLspPWestState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPWestState.setStatus("current")
_MplsLspPWestIngressPkts_Type = Counter64
_MplsLspPWestIngressPkts_Object = MibTableColumn
mplsLspPWestIngressPkts = _MplsLspPWestIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 20),
    _MplsLspPWestIngressPkts_Type()
)
mplsLspPWestIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPWestIngressPkts.setStatus("current")
_MplsLspPWestIngressbytes_Type = Counter64
_MplsLspPWestIngressbytes_Object = MibTableColumn
mplsLspPWestIngressbytes = _MplsLspPWestIngressbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 21),
    _MplsLspPWestIngressbytes_Type()
)
mplsLspPWestIngressbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPWestIngressbytes.setStatus("current")
_MplsLspPWestEgressPkts_Type = Counter64
_MplsLspPWestEgressPkts_Object = MibTableColumn
mplsLspPWestEgressPkts = _MplsLspPWestEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 22),
    _MplsLspPWestEgressPkts_Type()
)
mplsLspPWestEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPWestEgressPkts.setStatus("current")
_MplsLspPWestEgressBytes_Type = Counter64
_MplsLspPWestEgressBytes_Object = MibTableColumn
mplsLspPWestEgressBytes = _MplsLspPWestEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 19, 1, 23),
    _MplsLspPWestEgressBytes_Type()
)
mplsLspPWestEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsLspPWestEgressBytes.setStatus("current")
_MplsTunnelTable_Object = MibTable
mplsTunnelTable = _MplsTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20)
)
if mibBuilder.loadTexts:
    mplsTunnelTable.setStatus("current")
_MplsTunnelEntry_Object = MibTableRow
mplsTunnelEntry = _MplsTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1)
)
mplsTunnelEntry.setIndexNames(
    (0, "SWITCH", "mplsTunnelName"),
)
if mibBuilder.loadTexts:
    mplsTunnelEntry.setStatus("current")


class _MplsTunnelName_Type(OctetString):
    """Custom type mplsTunnelName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsTunnelName_Type.__name__ = "OctetString"
_MplsTunnelName_Object = MibTableColumn
mplsTunnelName = _MplsTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 1),
    _MplsTunnelName_Type()
)
mplsTunnelName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTunnelName.setStatus("current")


class _MplsTunnelApsType_Type(Integer32):
    """Custom type mplsTunnelApsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aps", 1),
          ("non-aps", 2))
    )


_MplsTunnelApsType_Type.__name__ = "Integer32"
_MplsTunnelApsType_Object = MibTableColumn
mplsTunnelApsType = _MplsTunnelApsType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 2),
    _MplsTunnelApsType_Type()
)
mplsTunnelApsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTunnelApsType.setStatus("current")
_MplsTunnelRowStatus_Type = RowStatus
_MplsTunnelRowStatus_Object = MibTableColumn
mplsTunnelRowStatus = _MplsTunnelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 10),
    _MplsTunnelRowStatus_Type()
)
mplsTunnelRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTunnelRowStatus.setStatus("current")


class _MplsTunnelPrimaryLspPe_Type(OctetString):
    """Custom type mplsTunnelPrimaryLspPe based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTunnelPrimaryLspPe_Type.__name__ = "OctetString"
_MplsTunnelPrimaryLspPe_Object = MibTableColumn
mplsTunnelPrimaryLspPe = _MplsTunnelPrimaryLspPe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 11),
    _MplsTunnelPrimaryLspPe_Type()
)
mplsTunnelPrimaryLspPe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelPrimaryLspPe.setStatus("current")


class _MplsTunnelSecondaryLspPe_Type(OctetString):
    """Custom type mplsTunnelSecondaryLspPe based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTunnelSecondaryLspPe_Type.__name__ = "OctetString"
_MplsTunnelSecondaryLspPe_Object = MibTableColumn
mplsTunnelSecondaryLspPe = _MplsTunnelSecondaryLspPe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 12),
    _MplsTunnelSecondaryLspPe_Type()
)
mplsTunnelSecondaryLspPe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelSecondaryLspPe.setStatus("current")


class _MplsTunnelDescription_Type(OctetString):
    """Custom type mplsTunnelDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsTunnelDescription_Type.__name__ = "OctetString"
_MplsTunnelDescription_Object = MibTableColumn
mplsTunnelDescription = _MplsTunnelDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 13),
    _MplsTunnelDescription_Type()
)
mplsTunnelDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelDescription.setStatus("current")


class _MplsTunnelSelectedLspPe_Type(OctetString):
    """Custom type mplsTunnelSelectedLspPe based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsTunnelSelectedLspPe_Type.__name__ = "OctetString"
_MplsTunnelSelectedLspPe_Object = MibTableColumn
mplsTunnelSelectedLspPe = _MplsTunnelSelectedLspPe_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 25),
    _MplsTunnelSelectedLspPe_Type()
)
mplsTunnelSelectedLspPe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelSelectedLspPe.setStatus("current")


class _MplsTunnelG8131Mode_Type(Integer32):
    """Custom type mplsTunnelG8131Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 1),
          ("non-revertive", 2))
    )


_MplsTunnelG8131Mode_Type.__name__ = "Integer32"
_MplsTunnelG8131Mode_Object = MibTableColumn
mplsTunnelG8131Mode = _MplsTunnelG8131Mode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 30),
    _MplsTunnelG8131Mode_Type()
)
mplsTunnelG8131Mode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131Mode.setStatus("current")


class _MplsTunnelG8131WTRTimer_Type(Integer32):
    """Custom type mplsTunnelG8131WTRTimer based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12),
    )


_MplsTunnelG8131WTRTimer_Type.__name__ = "Integer32"
_MplsTunnelG8131WTRTimer_Object = MibTableColumn
mplsTunnelG8131WTRTimer = _MplsTunnelG8131WTRTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 31),
    _MplsTunnelG8131WTRTimer_Type()
)
mplsTunnelG8131WTRTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelG8131WTRTimer.setStatus("current")


class _MplsTunnelG8131HoldOffTimer_Type(Integer32):
    """Custom type mplsTunnelG8131HoldOffTimer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsTunnelG8131HoldOffTimer_Type.__name__ = "Integer32"
_MplsTunnelG8131HoldOffTimer_Object = MibTableColumn
mplsTunnelG8131HoldOffTimer = _MplsTunnelG8131HoldOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 32),
    _MplsTunnelG8131HoldOffTimer_Type()
)
mplsTunnelG8131HoldOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelG8131HoldOffTimer.setStatus("current")


class _MplsTunnelG8131Action_Type(Integer32):
    """Custom type mplsTunnelG8131Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("force-switch", 1),
          ("manual-swtich-to-working", 2),
          ("manual-switch-to-protection", 3),
          ("lockout", 4),
          ("exercise", 5),
          ("clear", 6))
    )


_MplsTunnelG8131Action_Type.__name__ = "Integer32"
_MplsTunnelG8131Action_Object = MibTableColumn
mplsTunnelG8131Action = _MplsTunnelG8131Action_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 33),
    _MplsTunnelG8131Action_Type()
)
mplsTunnelG8131Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTunnelG8131Action.setStatus("current")


class _MplsTunnelG8131WorkingLSP_Type(OctetString):
    """Custom type mplsTunnelG8131WorkingLSP based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTunnelG8131WorkingLSP_Type.__name__ = "OctetString"
_MplsTunnelG8131WorkingLSP_Object = MibTableColumn
mplsTunnelG8131WorkingLSP = _MplsTunnelG8131WorkingLSP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 40),
    _MplsTunnelG8131WorkingLSP_Type()
)
mplsTunnelG8131WorkingLSP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131WorkingLSP.setStatus("current")


class _MplsTunnelG8131ProtectionLSP_Type(OctetString):
    """Custom type mplsTunnelG8131ProtectionLSP based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTunnelG8131ProtectionLSP_Type.__name__ = "OctetString"
_MplsTunnelG8131ProtectionLSP_Object = MibTableColumn
mplsTunnelG8131ProtectionLSP = _MplsTunnelG8131ProtectionLSP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 41),
    _MplsTunnelG8131ProtectionLSP_Type()
)
mplsTunnelG8131ProtectionLSP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131ProtectionLSP.setStatus("current")


class _MplsTunnelG8131ActivePath_Type(Integer32):
    """Custom type mplsTunnelG8131ActivePath based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("working-lsp", 1),
          ("protection-lsp", 2))
    )


_MplsTunnelG8131ActivePath_Type.__name__ = "Integer32"
_MplsTunnelG8131ActivePath_Object = MibTableColumn
mplsTunnelG8131ActivePath = _MplsTunnelG8131ActivePath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 42),
    _MplsTunnelG8131ActivePath_Type()
)
mplsTunnelG8131ActivePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131ActivePath.setStatus("current")
_MplsTunnelG8131WTRTimeLeft_Type = Integer32
_MplsTunnelG8131WTRTimeLeft_Object = MibTableColumn
mplsTunnelG8131WTRTimeLeft = _MplsTunnelG8131WTRTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 43),
    _MplsTunnelG8131WTRTimeLeft_Type()
)
mplsTunnelG8131WTRTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131WTRTimeLeft.setStatus("current")
_MplsTunnelG8131HoldOffTimeLeft_Type = Integer32
_MplsTunnelG8131HoldOffTimeLeft_Object = MibTableColumn
mplsTunnelG8131HoldOffTimeLeft = _MplsTunnelG8131HoldOffTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 44),
    _MplsTunnelG8131HoldOffTimeLeft_Type()
)
mplsTunnelG8131HoldOffTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131HoldOffTimeLeft.setStatus("current")


class _MplsTunnelG8131DFOPState_Type(Integer32):
    """Custom type mplsTunnelG8131DFOPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("not-in-defect-mode", 1),
          ("b-bit-mismatch-defect", 2),
          ("r-bit-mismatch-defect", 3),
          ("invalid-request-state", 4),
          ("aps-recv-on-working-entity", 5),
          ("aps-pdu-not-recv-after-state-change", 6),
          ("a-bit-mismatch-defect", 7),
          ("d-bit-mismatch-defect", 8),
          ("t-bit-mismatch-defect", 9))
    )


_MplsTunnelG8131DFOPState_Type.__name__ = "Integer32"
_MplsTunnelG8131DFOPState_Object = MibTableColumn
mplsTunnelG8131DFOPState = _MplsTunnelG8131DFOPState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 45),
    _MplsTunnelG8131DFOPState_Type()
)
mplsTunnelG8131DFOPState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131DFOPState.setStatus("current")


class _MplsTunnelG8131CurrentState_Type(Integer32):
    """Custom type mplsTunnelG8131CurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsTunnelG8131CurrentState_Type.__name__ = "Integer32"
_MplsTunnelG8131CurrentState_Object = MibTableColumn
mplsTunnelG8131CurrentState = _MplsTunnelG8131CurrentState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 46),
    _MplsTunnelG8131CurrentState_Type()
)
mplsTunnelG8131CurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131CurrentState.setStatus("current")


class _MplsTunnelG8131LastState_Type(Integer32):
    """Custom type mplsTunnelG8131LastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsTunnelG8131LastState_Type.__name__ = "Integer32"
_MplsTunnelG8131LastState_Object = MibTableColumn
mplsTunnelG8131LastState = _MplsTunnelG8131LastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 47),
    _MplsTunnelG8131LastState_Type()
)
mplsTunnelG8131LastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131LastState.setStatus("current")


class _MplsTunnelG8131CurrentEvent_Type(Integer32):
    """Custom type mplsTunnelG8131CurrentEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsTunnelG8131CurrentEvent_Type.__name__ = "Integer32"
_MplsTunnelG8131CurrentEvent_Object = MibTableColumn
mplsTunnelG8131CurrentEvent = _MplsTunnelG8131CurrentEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 48),
    _MplsTunnelG8131CurrentEvent_Type()
)
mplsTunnelG8131CurrentEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131CurrentEvent.setStatus("current")


class _MplsTunnelG8131FarEndLastEvent_Type(Integer32):
    """Custom type mplsTunnelG8131FarEndLastEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsTunnelG8131FarEndLastEvent_Type.__name__ = "Integer32"
_MplsTunnelG8131FarEndLastEvent_Object = MibTableColumn
mplsTunnelG8131FarEndLastEvent = _MplsTunnelG8131FarEndLastEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 49),
    _MplsTunnelG8131FarEndLastEvent_Type()
)
mplsTunnelG8131FarEndLastEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131FarEndLastEvent.setStatus("current")


class _MplsTunnelG8131RequestSignal_Type(Integer32):
    """Custom type mplsTunnelG8131RequestSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("null", 2),
          ("none", 3))
    )


_MplsTunnelG8131RequestSignal_Type.__name__ = "Integer32"
_MplsTunnelG8131RequestSignal_Object = MibTableColumn
mplsTunnelG8131RequestSignal = _MplsTunnelG8131RequestSignal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 20, 1, 50),
    _MplsTunnelG8131RequestSignal_Type()
)
mplsTunnelG8131RequestSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTunnelG8131RequestSignal.setStatus("current")
_MplsPwSPeTable_Object = MibTable
mplsPwSPeTable = _MplsPwSPeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23)
)
if mibBuilder.loadTexts:
    mplsPwSPeTable.setStatus("current")
_MplsPwSPeEntry_Object = MibTableRow
mplsPwSPeEntry = _MplsPwSPeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1)
)
mplsPwSPeEntry.setIndexNames(
    (0, "SWITCH", "mplsPwSPeName"),
)
if mibBuilder.loadTexts:
    mplsPwSPeEntry.setStatus("current")


class _MplsPwSPeName_Type(OctetString):
    """Custom type mplsPwSPeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwSPeName_Type.__name__ = "OctetString"
_MplsPwSPeName_Object = MibTableColumn
mplsPwSPeName = _MplsPwSPeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 1),
    _MplsPwSPeName_Type()
)
mplsPwSPeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsPwSPeName.setStatus("current")
_MplsPwSPeRowStatus_Type = RowStatus
_MplsPwSPeRowStatus_Object = MibTableColumn
mplsPwSPeRowStatus = _MplsPwSPeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 10),
    _MplsPwSPeRowStatus_Type()
)
mplsPwSPeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwSPeRowStatus.setStatus("current")


class _MplsPwSPeOAMMegId_Type(OctetString):
    """Custom type mplsPwSPeOAMMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsPwSPeOAMMegId_Type.__name__ = "OctetString"
_MplsPwSPeOAMMegId_Object = MibTableColumn
mplsPwSPeOAMMegId = _MplsPwSPeOAMMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 11),
    _MplsPwSPeOAMMegId_Type()
)
mplsPwSPeOAMMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeOAMMegId.setStatus("current")


class _MplsPwSPeOAMMegIdIcc_Type(Integer32):
    """Custom type mplsPwSPeOAMMegIdIcc based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_MplsPwSPeOAMMegIdIcc_Type.__name__ = "Integer32"
_MplsPwSPeOAMMegIdIcc_Object = MibTableColumn
mplsPwSPeOAMMegIdIcc = _MplsPwSPeOAMMegIdIcc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 12),
    _MplsPwSPeOAMMegIdIcc_Type()
)
mplsPwSPeOAMMegIdIcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeOAMMegIdIcc.setStatus("current")


class _MplsPwSPeOAMMipState_Type(Integer32):
    """Custom type mplsPwSPeOAMMipState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwSPeOAMMipState_Type.__name__ = "Integer32"
_MplsPwSPeOAMMipState_Object = MibTableColumn
mplsPwSPeOAMMipState = _MplsPwSPeOAMMipState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 13),
    _MplsPwSPeOAMMipState_Type()
)
mplsPwSPeOAMMipState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeOAMMipState.setStatus("current")


class _MplsPwSPeOAMMegLevel_Type(Integer32):
    """Custom type mplsPwSPeOAMMegLevel based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsPwSPeOAMMegLevel_Type.__name__ = "Integer32"
_MplsPwSPeOAMMegLevel_Object = MibTableColumn
mplsPwSPeOAMMegLevel = _MplsPwSPeOAMMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 14),
    _MplsPwSPeOAMMegLevel_Type()
)
mplsPwSPeOAMMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeOAMMegLevel.setStatus("current")


class _MplsPwSPeDescription_Type(OctetString):
    """Custom type mplsPwSPeDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwSPeDescription_Type.__name__ = "OctetString"
_MplsPwSPeDescription_Object = MibTableColumn
mplsPwSPeDescription = _MplsPwSPeDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 15),
    _MplsPwSPeDescription_Type()
)
mplsPwSPeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeDescription.setStatus("current")


class _MplsPwSpeStats_Type(Integer32):
    """Custom type mplsPwSpeStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwSpeStats_Type.__name__ = "Integer32"
_MplsPwSpeStats_Object = MibTableColumn
mplsPwSpeStats = _MplsPwSpeStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 23, 1, 16),
    _MplsPwSpeStats_Type()
)
mplsPwSpeStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSpeStats.setStatus("current")
_MplsPwSPeEastTable_Object = MibTable
mplsPwSPeEastTable = _MplsPwSPeEastTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24)
)
if mibBuilder.loadTexts:
    mplsPwSPeEastTable.setStatus("current")
_MplsPwSPeEastEntry_Object = MibTableRow
mplsPwSPeEastEntry = _MplsPwSPeEastEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1)
)
mplsPwSPeEastEntry.setIndexNames(
    (0, "SWITCH", "mplsPwSPeEastPwName"),
)
if mibBuilder.loadTexts:
    mplsPwSPeEastEntry.setStatus("current")


class _MplsPwSPeEastPwName_Type(OctetString):
    """Custom type mplsPwSPeEastPwName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwSPeEastPwName_Type.__name__ = "OctetString"
_MplsPwSPeEastPwName_Object = MibTableColumn
mplsPwSPeEastPwName = _MplsPwSPeEastPwName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 1),
    _MplsPwSPeEastPwName_Type()
)
mplsPwSPeEastPwName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsPwSPeEastPwName.setStatus("current")


class _MplsPwSPeEastInlabel_Type(Integer32):
    """Custom type mplsPwSPeEastInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwSPeEastInlabel_Type.__name__ = "Integer32"
_MplsPwSPeEastInlabel_Object = MibTableColumn
mplsPwSPeEastInlabel = _MplsPwSPeEastInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 2),
    _MplsPwSPeEastInlabel_Type()
)
mplsPwSPeEastInlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeEastInlabel.setStatus("current")


class _MplsPwSPeEastOutlabel_Type(Integer32):
    """Custom type mplsPwSPeEastOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwSPeEastOutlabel_Type.__name__ = "Integer32"
_MplsPwSPeEastOutlabel_Object = MibTableColumn
mplsPwSPeEastOutlabel = _MplsPwSPeEastOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 3),
    _MplsPwSPeEastOutlabel_Type()
)
mplsPwSPeEastOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeEastOutlabel.setStatus("current")


class _MplsPwSPeEastTunnelName_Type(OctetString):
    """Custom type mplsPwSPeEastTunnelName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsPwSPeEastTunnelName_Type.__name__ = "OctetString"
_MplsPwSPeEastTunnelName_Object = MibTableColumn
mplsPwSPeEastTunnelName = _MplsPwSPeEastTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 4),
    _MplsPwSPeEastTunnelName_Type()
)
mplsPwSPeEastTunnelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeEastTunnelName.setStatus("current")


class _MplsPwSPeEastCtrlWord_Type(Integer32):
    """Custom type mplsPwSPeEastCtrlWord based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("control-word", 1),
          ("no-control-word", 2))
    )


_MplsPwSPeEastCtrlWord_Type.__name__ = "Integer32"
_MplsPwSPeEastCtrlWord_Object = MibTableColumn
mplsPwSPeEastCtrlWord = _MplsPwSPeEastCtrlWord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 5),
    _MplsPwSPeEastCtrlWord_Type()
)
mplsPwSPeEastCtrlWord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastCtrlWord.setStatus("current")
_MplsPwSPeEastRowStatus_Type = RowStatus
_MplsPwSPeEastRowStatus_Object = MibTableColumn
mplsPwSPeEastRowStatus = _MplsPwSPeEastRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 10),
    _MplsPwSPeEastRowStatus_Type()
)
mplsPwSPeEastRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwSPeEastRowStatus.setStatus("current")


class _MplsPwSPeEastState_Type(Integer32):
    """Custom type mplsPwSPeEastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_MplsPwSPeEastState_Type.__name__ = "Integer32"
_MplsPwSPeEastState_Object = MibTableColumn
mplsPwSPeEastState = _MplsPwSPeEastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 11),
    _MplsPwSPeEastState_Type()
)
mplsPwSPeEastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastState.setStatus("current")
_MplsPwSPeEastIngressPkts_Type = Counter64
_MplsPwSPeEastIngressPkts_Object = MibTableColumn
mplsPwSPeEastIngressPkts = _MplsPwSPeEastIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 20),
    _MplsPwSPeEastIngressPkts_Type()
)
mplsPwSPeEastIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastIngressPkts.setStatus("current")
_MplsPwSPeEastIngressbytes_Type = Counter64
_MplsPwSPeEastIngressbytes_Object = MibTableColumn
mplsPwSPeEastIngressbytes = _MplsPwSPeEastIngressbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 21),
    _MplsPwSPeEastIngressbytes_Type()
)
mplsPwSPeEastIngressbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastIngressbytes.setStatus("current")
_MplsPwSPeEastEgressPkts_Type = Counter64
_MplsPwSPeEastEgressPkts_Object = MibTableColumn
mplsPwSPeEastEgressPkts = _MplsPwSPeEastEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 22),
    _MplsPwSPeEastEgressPkts_Type()
)
mplsPwSPeEastEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastEgressPkts.setStatus("current")
_MplsPwSPeEastEgressBytes_Type = Counter64
_MplsPwSPeEastEgressBytes_Object = MibTableColumn
mplsPwSPeEastEgressBytes = _MplsPwSPeEastEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 24, 1, 23),
    _MplsPwSPeEastEgressBytes_Type()
)
mplsPwSPeEastEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeEastEgressBytes.setStatus("current")
_MplsPwSPeWestTable_Object = MibTable
mplsPwSPeWestTable = _MplsPwSPeWestTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25)
)
if mibBuilder.loadTexts:
    mplsPwSPeWestTable.setStatus("current")
_MplsPwSPeWestEntry_Object = MibTableRow
mplsPwSPeWestEntry = _MplsPwSPeWestEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1)
)
mplsPwSPeWestEntry.setIndexNames(
    (0, "SWITCH", "mplsPwSPeWestPwName"),
)
if mibBuilder.loadTexts:
    mplsPwSPeWestEntry.setStatus("current")


class _MplsPwSPeWestPwName_Type(OctetString):
    """Custom type mplsPwSPeWestPwName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwSPeWestPwName_Type.__name__ = "OctetString"
_MplsPwSPeWestPwName_Object = MibTableColumn
mplsPwSPeWestPwName = _MplsPwSPeWestPwName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 1),
    _MplsPwSPeWestPwName_Type()
)
mplsPwSPeWestPwName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsPwSPeWestPwName.setStatus("current")


class _MplsPwSPeWestInlabel_Type(Integer32):
    """Custom type mplsPwSPeWestInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwSPeWestInlabel_Type.__name__ = "Integer32"
_MplsPwSPeWestInlabel_Object = MibTableColumn
mplsPwSPeWestInlabel = _MplsPwSPeWestInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 2),
    _MplsPwSPeWestInlabel_Type()
)
mplsPwSPeWestInlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeWestInlabel.setStatus("current")


class _MplsPwSPeWestOutlabel_Type(Integer32):
    """Custom type mplsPwSPeWestOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwSPeWestOutlabel_Type.__name__ = "Integer32"
_MplsPwSPeWestOutlabel_Object = MibTableColumn
mplsPwSPeWestOutlabel = _MplsPwSPeWestOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 3),
    _MplsPwSPeWestOutlabel_Type()
)
mplsPwSPeWestOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeWestOutlabel.setStatus("current")


class _MplsPwSPeWestTunnelName_Type(OctetString):
    """Custom type mplsPwSPeWestTunnelName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsPwSPeWestTunnelName_Type.__name__ = "OctetString"
_MplsPwSPeWestTunnelName_Object = MibTableColumn
mplsPwSPeWestTunnelName = _MplsPwSPeWestTunnelName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 4),
    _MplsPwSPeWestTunnelName_Type()
)
mplsPwSPeWestTunnelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwSPeWestTunnelName.setStatus("current")


class _MplsPwSPeWestCtrlWord_Type(Integer32):
    """Custom type mplsPwSPeWestCtrlWord based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("control-word", 1),
          ("no-control-word", 2))
    )


_MplsPwSPeWestCtrlWord_Type.__name__ = "Integer32"
_MplsPwSPeWestCtrlWord_Object = MibTableColumn
mplsPwSPeWestCtrlWord = _MplsPwSPeWestCtrlWord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 5),
    _MplsPwSPeWestCtrlWord_Type()
)
mplsPwSPeWestCtrlWord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestCtrlWord.setStatus("current")
_MplsPwSPeWestRowStatus_Type = RowStatus
_MplsPwSPeWestRowStatus_Object = MibTableColumn
mplsPwSPeWestRowStatus = _MplsPwSPeWestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 10),
    _MplsPwSPeWestRowStatus_Type()
)
mplsPwSPeWestRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwSPeWestRowStatus.setStatus("current")


class _MplsPwSPeWestState_Type(Integer32):
    """Custom type mplsPwSPeWestState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_MplsPwSPeWestState_Type.__name__ = "Integer32"
_MplsPwSPeWestState_Object = MibTableColumn
mplsPwSPeWestState = _MplsPwSPeWestState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 11),
    _MplsPwSPeWestState_Type()
)
mplsPwSPeWestState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestState.setStatus("current")
_MplsPwSPeWestIngressPkts_Type = Counter64
_MplsPwSPeWestIngressPkts_Object = MibTableColumn
mplsPwSPeWestIngressPkts = _MplsPwSPeWestIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 20),
    _MplsPwSPeWestIngressPkts_Type()
)
mplsPwSPeWestIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestIngressPkts.setStatus("current")
_MplsPwSPeWestIngressbytes_Type = Counter64
_MplsPwSPeWestIngressbytes_Object = MibTableColumn
mplsPwSPeWestIngressbytes = _MplsPwSPeWestIngressbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 21),
    _MplsPwSPeWestIngressbytes_Type()
)
mplsPwSPeWestIngressbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestIngressbytes.setStatus("current")
_MplsPwSPeWestEgressPkts_Type = Counter64
_MplsPwSPeWestEgressPkts_Object = MibTableColumn
mplsPwSPeWestEgressPkts = _MplsPwSPeWestEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 22),
    _MplsPwSPeWestEgressPkts_Type()
)
mplsPwSPeWestEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestEgressPkts.setStatus("current")
_MplsPwSPeWestEgressBytes_Type = Counter64
_MplsPwSPeWestEgressBytes_Object = MibTableColumn
mplsPwSPeWestEgressBytes = _MplsPwSPeWestEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 25, 1, 23),
    _MplsPwSPeWestEgressBytes_Type()
)
mplsPwSPeWestEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwSPeWestEgressBytes.setStatus("current")
_MplsVplsStaticFdbTable_Object = MibTable
mplsVplsStaticFdbTable = _MplsVplsStaticFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26)
)
if mibBuilder.loadTexts:
    mplsVplsStaticFdbTable.setStatus("current")
_MplsVplsStaticFdbEntry_Object = MibTableRow
mplsVplsStaticFdbEntry = _MplsVplsStaticFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1)
)
mplsVplsStaticFdbEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsStaticFdbVplsId"),
    (0, "SWITCH", "mplsVplsStaticFdbMacAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsStaticFdbEntry.setStatus("current")


class _MplsVplsStaticFdbVplsId_Type(Integer32):
    """Custom type mplsVplsStaticFdbVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsStaticFdbVplsId_Type.__name__ = "Integer32"
_MplsVplsStaticFdbVplsId_Object = MibTableColumn
mplsVplsStaticFdbVplsId = _MplsVplsStaticFdbVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 1),
    _MplsVplsStaticFdbVplsId_Type()
)
mplsVplsStaticFdbVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbVplsId.setStatus("current")
_MplsVplsStaticFdbMacAddr_Type = MacAddress
_MplsVplsStaticFdbMacAddr_Object = MibTableColumn
mplsVplsStaticFdbMacAddr = _MplsVplsStaticFdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 2),
    _MplsVplsStaticFdbMacAddr_Type()
)
mplsVplsStaticFdbMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbMacAddr.setStatus("current")


class _MplsVplsStaticFdbType_Type(Integer32):
    """Custom type mplsVplsStaticFdbType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("discard", 2))
    )


_MplsVplsStaticFdbType_Type.__name__ = "Integer32"
_MplsVplsStaticFdbType_Object = MibTableColumn
mplsVplsStaticFdbType = _MplsVplsStaticFdbType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 3),
    _MplsVplsStaticFdbType_Type()
)
mplsVplsStaticFdbType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbType.setStatus("current")


class _MplsVplsStaticFdbIfName_Type(OctetString):
    """Custom type mplsVplsStaticFdbIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_MplsVplsStaticFdbIfName_Type.__name__ = "OctetString"
_MplsVplsStaticFdbIfName_Object = MibTableColumn
mplsVplsStaticFdbIfName = _MplsVplsStaticFdbIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 4),
    _MplsVplsStaticFdbIfName_Type()
)
mplsVplsStaticFdbIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbIfName.setStatus("current")
_MplsVplsStaticFdbPeerIp_Type = IpAddress
_MplsVplsStaticFdbPeerIp_Object = MibTableColumn
mplsVplsStaticFdbPeerIp = _MplsVplsStaticFdbPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 5),
    _MplsVplsStaticFdbPeerIp_Type()
)
mplsVplsStaticFdbPeerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbPeerIp.setStatus("current")


class _MplsVplsStaticFdbTPPeerName_Type(OctetString):
    """Custom type mplsVplsStaticFdbTPPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsStaticFdbTPPeerName_Type.__name__ = "OctetString"
_MplsVplsStaticFdbTPPeerName_Object = MibTableColumn
mplsVplsStaticFdbTPPeerName = _MplsVplsStaticFdbTPPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 6),
    _MplsVplsStaticFdbTPPeerName_Type()
)
mplsVplsStaticFdbTPPeerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbTPPeerName.setStatus("current")
_MplsVplsStaticFdbRowStatus_Type = RowStatus
_MplsVplsStaticFdbRowStatus_Object = MibTableColumn
mplsVplsStaticFdbRowStatus = _MplsVplsStaticFdbRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 26, 1, 10),
    _MplsVplsStaticFdbRowStatus_Type()
)
mplsVplsStaticFdbRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsStaticFdbRowStatus.setStatus("current")
_MplsStaticFtnTable_Object = MibTable
mplsStaticFtnTable = _MplsStaticFtnTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27)
)
if mibBuilder.loadTexts:
    mplsStaticFtnTable.setStatus("current")
_MplsStaticFtnEntry_Object = MibTableRow
mplsStaticFtnEntry = _MplsStaticFtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1)
)
mplsStaticFtnEntry.setIndexNames(
    (0, "SWITCH", "mplsStaticFtnFecPrefix"),
    (0, "SWITCH", "mplsStaticFtnFecPrefixLen"),
    (0, "SWITCH", "mplsStaticFtnNexthop"),
)
if mibBuilder.loadTexts:
    mplsStaticFtnEntry.setStatus("current")
_MplsStaticFtnFecPrefix_Type = IpAddress
_MplsStaticFtnFecPrefix_Object = MibTableColumn
mplsStaticFtnFecPrefix = _MplsStaticFtnFecPrefix_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1, 1),
    _MplsStaticFtnFecPrefix_Type()
)
mplsStaticFtnFecPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsStaticFtnFecPrefix.setStatus("current")
_MplsStaticFtnFecPrefixLen_Type = Integer32
_MplsStaticFtnFecPrefixLen_Object = MibTableColumn
mplsStaticFtnFecPrefixLen = _MplsStaticFtnFecPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1, 2),
    _MplsStaticFtnFecPrefixLen_Type()
)
mplsStaticFtnFecPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsStaticFtnFecPrefixLen.setStatus("current")
_MplsStaticFtnNexthop_Type = IpAddress
_MplsStaticFtnNexthop_Object = MibTableColumn
mplsStaticFtnNexthop = _MplsStaticFtnNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1, 3),
    _MplsStaticFtnNexthop_Type()
)
mplsStaticFtnNexthop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsStaticFtnNexthop.setStatus("current")
_MplsStaticFtnOutlabel_Type = Integer32
_MplsStaticFtnOutlabel_Object = MibTableColumn
mplsStaticFtnOutlabel = _MplsStaticFtnOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1, 4),
    _MplsStaticFtnOutlabel_Type()
)
mplsStaticFtnOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsStaticFtnOutlabel.setStatus("current")
_MplsStaticFtnRowStatus_Type = RowStatus
_MplsStaticFtnRowStatus_Object = MibTableColumn
mplsStaticFtnRowStatus = _MplsStaticFtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 27, 1, 10),
    _MplsStaticFtnRowStatus_Type()
)
mplsStaticFtnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsStaticFtnRowStatus.setStatus("current")
_MplsFtnDatabaseTable_Object = MibTable
mplsFtnDatabaseTable = _MplsFtnDatabaseTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28)
)
if mibBuilder.loadTexts:
    mplsFtnDatabaseTable.setStatus("current")
_MplsFtnDatabaseEntry_Object = MibTableRow
mplsFtnDatabaseEntry = _MplsFtnDatabaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1)
)
mplsFtnDatabaseEntry.setIndexNames(
    (0, "SWITCH", "mplsFtnDatabaseIndex"),
)
if mibBuilder.loadTexts:
    mplsFtnDatabaseEntry.setStatus("current")
_MplsFtnDatabaseIndex_Type = Integer32
_MplsFtnDatabaseIndex_Object = MibTableColumn
mplsFtnDatabaseIndex = _MplsFtnDatabaseIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 1),
    _MplsFtnDatabaseIndex_Type()
)
mplsFtnDatabaseIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsFtnDatabaseIndex.setStatus("current")
_MplsFtnDatabaseFecPrefix_Type = IpAddress
_MplsFtnDatabaseFecPrefix_Object = MibTableColumn
mplsFtnDatabaseFecPrefix = _MplsFtnDatabaseFecPrefix_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 2),
    _MplsFtnDatabaseFecPrefix_Type()
)
mplsFtnDatabaseFecPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseFecPrefix.setStatus("current")
_MplsFtnDatabaseFecPrefixLen_Type = Integer32
_MplsFtnDatabaseFecPrefixLen_Object = MibTableColumn
mplsFtnDatabaseFecPrefixLen = _MplsFtnDatabaseFecPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 3),
    _MplsFtnDatabaseFecPrefixLen_Type()
)
mplsFtnDatabaseFecPrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseFecPrefixLen.setStatus("current")
_MplsFtnDatabaseOutlabel_Type = Integer32
_MplsFtnDatabaseOutlabel_Object = MibTableColumn
mplsFtnDatabaseOutlabel = _MplsFtnDatabaseOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 4),
    _MplsFtnDatabaseOutlabel_Type()
)
mplsFtnDatabaseOutlabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseOutlabel.setStatus("current")
_MplsFtnDatabaseNexthop_Type = IpAddress
_MplsFtnDatabaseNexthop_Object = MibTableColumn
mplsFtnDatabaseNexthop = _MplsFtnDatabaseNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 5),
    _MplsFtnDatabaseNexthop_Type()
)
mplsFtnDatabaseNexthop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseNexthop.setStatus("current")
_MplsFtnDatabaseOutInterface_Type = OctetString
_MplsFtnDatabaseOutInterface_Object = MibTableColumn
mplsFtnDatabaseOutInterface = _MplsFtnDatabaseOutInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 6),
    _MplsFtnDatabaseOutInterface_Type()
)
mplsFtnDatabaseOutInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseOutInterface.setStatus("current")


class _MplsFtnDatabaseState_Type(Integer32):
    """Custom type mplsFtnDatabaseState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsFtnDatabaseState_Type.__name__ = "Integer32"
_MplsFtnDatabaseState_Object = MibTableColumn
mplsFtnDatabaseState = _MplsFtnDatabaseState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 28, 1, 7),
    _MplsFtnDatabaseState_Type()
)
mplsFtnDatabaseState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsFtnDatabaseState.setStatus("current")
_MplsStaticIlmTable_Object = MibTable
mplsStaticIlmTable = _MplsStaticIlmTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29)
)
if mibBuilder.loadTexts:
    mplsStaticIlmTable.setStatus("current")
_MplsStaticIlmEntry_Object = MibTableRow
mplsStaticIlmEntry = _MplsStaticIlmEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1)
)
mplsStaticIlmEntry.setIndexNames(
    (0, "SWITCH", "mplsStaticIlmInlabel"),
)
if mibBuilder.loadTexts:
    mplsStaticIlmEntry.setStatus("current")


class _MplsStaticIlmInlabel_Type(Integer32):
    """Custom type mplsStaticIlmInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsStaticIlmInlabel_Type.__name__ = "Integer32"
_MplsStaticIlmInlabel_Object = MibTableColumn
mplsStaticIlmInlabel = _MplsStaticIlmInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1, 1),
    _MplsStaticIlmInlabel_Type()
)
mplsStaticIlmInlabel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsStaticIlmInlabel.setStatus("current")


class _MplsStaticIlmOpcode_Type(Integer32):
    """Custom type mplsStaticIlmOpcode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("swap", 1),
          ("pop", 2))
    )


_MplsStaticIlmOpcode_Type.__name__ = "Integer32"
_MplsStaticIlmOpcode_Object = MibTableColumn
mplsStaticIlmOpcode = _MplsStaticIlmOpcode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1, 2),
    _MplsStaticIlmOpcode_Type()
)
mplsStaticIlmOpcode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsStaticIlmOpcode.setStatus("current")
_MplsStaticIlmNexthop_Type = IpAddress
_MplsStaticIlmNexthop_Object = MibTableColumn
mplsStaticIlmNexthop = _MplsStaticIlmNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1, 3),
    _MplsStaticIlmNexthop_Type()
)
mplsStaticIlmNexthop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsStaticIlmNexthop.setStatus("current")


class _MplsStaticIlmOutlabel_Type(Integer32):
    """Custom type mplsStaticIlmOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(16, 1048575),
    )


_MplsStaticIlmOutlabel_Type.__name__ = "Integer32"
_MplsStaticIlmOutlabel_Object = MibTableColumn
mplsStaticIlmOutlabel = _MplsStaticIlmOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1, 4),
    _MplsStaticIlmOutlabel_Type()
)
mplsStaticIlmOutlabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsStaticIlmOutlabel.setStatus("current")
_MplsStaticIlmRowStatus_Type = RowStatus
_MplsStaticIlmRowStatus_Object = MibTableColumn
mplsStaticIlmRowStatus = _MplsStaticIlmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 29, 1, 10),
    _MplsStaticIlmRowStatus_Type()
)
mplsStaticIlmRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsStaticIlmRowStatus.setStatus("current")
_MplsIlmDatabaseTable_Object = MibTable
mplsIlmDatabaseTable = _MplsIlmDatabaseTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30)
)
if mibBuilder.loadTexts:
    mplsIlmDatabaseTable.setStatus("current")
_MplsIlmDatabaseEntry_Object = MibTableRow
mplsIlmDatabaseEntry = _MplsIlmDatabaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1)
)
mplsIlmDatabaseEntry.setIndexNames(
    (0, "SWITCH", "mplsIlmDatabaseIndex"),
)
if mibBuilder.loadTexts:
    mplsIlmDatabaseEntry.setStatus("current")
_MplsIlmDatabaseIndex_Type = Integer32
_MplsIlmDatabaseIndex_Object = MibTableColumn
mplsIlmDatabaseIndex = _MplsIlmDatabaseIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 1),
    _MplsIlmDatabaseIndex_Type()
)
mplsIlmDatabaseIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsIlmDatabaseIndex.setStatus("current")
_MplsIlmDatabaseFecPrefix_Type = IpAddress
_MplsIlmDatabaseFecPrefix_Object = MibTableColumn
mplsIlmDatabaseFecPrefix = _MplsIlmDatabaseFecPrefix_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 2),
    _MplsIlmDatabaseFecPrefix_Type()
)
mplsIlmDatabaseFecPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseFecPrefix.setStatus("current")
_MplsIlmDatabaseFecPrefixLen_Type = Integer32
_MplsIlmDatabaseFecPrefixLen_Object = MibTableColumn
mplsIlmDatabaseFecPrefixLen = _MplsIlmDatabaseFecPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 3),
    _MplsIlmDatabaseFecPrefixLen_Type()
)
mplsIlmDatabaseFecPrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseFecPrefixLen.setStatus("current")
_MplsIlmDatabaseInlabel_Type = Integer32
_MplsIlmDatabaseInlabel_Object = MibTableColumn
mplsIlmDatabaseInlabel = _MplsIlmDatabaseInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 4),
    _MplsIlmDatabaseInlabel_Type()
)
mplsIlmDatabaseInlabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseInlabel.setStatus("current")
_MplsIlmDatabaseOutlabel_Type = Integer32
_MplsIlmDatabaseOutlabel_Object = MibTableColumn
mplsIlmDatabaseOutlabel = _MplsIlmDatabaseOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 5),
    _MplsIlmDatabaseOutlabel_Type()
)
mplsIlmDatabaseOutlabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseOutlabel.setStatus("current")
_MplsIlmDatabaseNexthop_Type = IpAddress
_MplsIlmDatabaseNexthop_Object = MibTableColumn
mplsIlmDatabaseNexthop = _MplsIlmDatabaseNexthop_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 6),
    _MplsIlmDatabaseNexthop_Type()
)
mplsIlmDatabaseNexthop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseNexthop.setStatus("current")
_MplsIlmDatabaseOutInterface_Type = OctetString
_MplsIlmDatabaseOutInterface_Object = MibTableColumn
mplsIlmDatabaseOutInterface = _MplsIlmDatabaseOutInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 7),
    _MplsIlmDatabaseOutInterface_Type()
)
mplsIlmDatabaseOutInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseOutInterface.setStatus("current")


class _MplsIlmDatabaseState_Type(Integer32):
    """Custom type mplsIlmDatabaseState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_MplsIlmDatabaseState_Type.__name__ = "Integer32"
_MplsIlmDatabaseState_Object = MibTableColumn
mplsIlmDatabaseState = _MplsIlmDatabaseState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 8),
    _MplsIlmDatabaseState_Type()
)
mplsIlmDatabaseState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseState.setStatus("current")
_MplsIlmDatabaseNexthopMac_Type = MacAddress
_MplsIlmDatabaseNexthopMac_Object = MibTableColumn
mplsIlmDatabaseNexthopMac = _MplsIlmDatabaseNexthopMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 30, 1, 11),
    _MplsIlmDatabaseNexthopMac_Type()
)
mplsIlmDatabaseNexthopMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsIlmDatabaseNexthopMac.setStatus("current")
_MplsPwTpeTable_Object = MibTable
mplsPwTpeTable = _MplsPwTpeTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31)
)
if mibBuilder.loadTexts:
    mplsPwTpeTable.setStatus("current")
_MplsPwTpeEntry_Object = MibTableRow
mplsPwTpeEntry = _MplsPwTpeEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1)
)
mplsPwTpeEntry.setIndexNames(
    (0, "SWITCH", "mplsPwTpeName"),
)
if mibBuilder.loadTexts:
    mplsPwTpeEntry.setStatus("current")


class _MplsPwTpeName_Type(OctetString):
    """Custom type mplsPwTpeName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwTpeName_Type.__name__ = "OctetString"
_MplsPwTpeName_Object = MibTableColumn
mplsPwTpeName = _MplsPwTpeName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 1),
    _MplsPwTpeName_Type()
)
mplsPwTpeName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsPwTpeName.setStatus("current")
_MplsPwTpeRowStatus_Type = RowStatus
_MplsPwTpeRowStatus_Object = MibTableColumn
mplsPwTpeRowStatus = _MplsPwTpeRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 10),
    _MplsPwTpeRowStatus_Type()
)
mplsPwTpeRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeRowStatus.setStatus("current")


class _MplsPwTpeDescription_Type(OctetString):
    """Custom type mplsPwTpeDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwTpeDescription_Type.__name__ = "OctetString"
_MplsPwTpeDescription_Object = MibTableColumn
mplsPwTpeDescription = _MplsPwTpeDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 11),
    _MplsPwTpeDescription_Type()
)
mplsPwTpeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeDescription.setStatus("current")


class _MplsPwTpeOAMMegLevel_Type(Integer32):
    """Custom type mplsPwTpeOAMMegLevel based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsPwTpeOAMMegLevel_Type.__name__ = "Integer32"
_MplsPwTpeOAMMegLevel_Object = MibTableColumn
mplsPwTpeOAMMegLevel = _MplsPwTpeOAMMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 20),
    _MplsPwTpeOAMMegLevel_Type()
)
mplsPwTpeOAMMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMegLevel.setStatus("current")


class _MplsPwTpeOAMMegId_Type(OctetString):
    """Custom type mplsPwTpeOAMMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsPwTpeOAMMegId_Type.__name__ = "OctetString"
_MplsPwTpeOAMMegId_Object = MibTableColumn
mplsPwTpeOAMMegId = _MplsPwTpeOAMMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 21),
    _MplsPwTpeOAMMegId_Type()
)
mplsPwTpeOAMMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMegId.setStatus("current")


class _MplsPwTpeOAMMegIdIcc_Type(Integer32):
    """Custom type mplsPwTpeOAMMegIdIcc based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_MplsPwTpeOAMMegIdIcc_Type.__name__ = "Integer32"
_MplsPwTpeOAMMegIdIcc_Object = MibTableColumn
mplsPwTpeOAMMegIdIcc = _MplsPwTpeOAMMegIdIcc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 22),
    _MplsPwTpeOAMMegIdIcc_Type()
)
mplsPwTpeOAMMegIdIcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMegIdIcc.setStatus("current")


class _MplsPwTpeOAMMepId_Type(Integer32):
    """Custom type mplsPwTpeOAMMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_MplsPwTpeOAMMepId_Type.__name__ = "Integer32"
_MplsPwTpeOAMMepId_Object = MibTableColumn
mplsPwTpeOAMMepId = _MplsPwTpeOAMMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 23),
    _MplsPwTpeOAMMepId_Type()
)
mplsPwTpeOAMMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMepId.setStatus("current")


class _MplsPwTpeOAMMepInterval_Type(Integer32):
    """Custom type mplsPwTpeOAMMepInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("three-point-three-ms", 1),
          ("ten-ms", 2),
          ("one-hundred-ms", 3),
          ("one-sec", 4),
          ("ten-sec", 5),
          ("one-min", 6),
          ("ten-min", 7))
    )


_MplsPwTpeOAMMepInterval_Type.__name__ = "Integer32"
_MplsPwTpeOAMMepInterval_Object = MibTableColumn
mplsPwTpeOAMMepInterval = _MplsPwTpeOAMMepInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 24),
    _MplsPwTpeOAMMepInterval_Type()
)
mplsPwTpeOAMMepInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMepInterval.setStatus("current")


class _MplsPwTpeOAMMepExp_Type(Integer32):
    """Custom type mplsPwTpeOAMMepExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MplsPwTpeOAMMepExp_Type.__name__ = "Integer32"
_MplsPwTpeOAMMepExp_Object = MibTableColumn
mplsPwTpeOAMMepExp = _MplsPwTpeOAMMepExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 25),
    _MplsPwTpeOAMMepExp_Type()
)
mplsPwTpeOAMMepExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMMepExp.setStatus("current")


class _MplsPwTpeOAMRMepId_Type(Integer32):
    """Custom type mplsPwTpeOAMRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_MplsPwTpeOAMRMepId_Type.__name__ = "Integer32"
_MplsPwTpeOAMRMepId_Object = MibTableColumn
mplsPwTpeOAMRMepId = _MplsPwTpeOAMRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 26),
    _MplsPwTpeOAMRMepId_Type()
)
mplsPwTpeOAMRMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMRMepId.setStatus("current")


class _MplsPwTpeOAMCCState_Type(Integer32):
    """Custom type mplsPwTpeOAMCCState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMCCState_Type.__name__ = "Integer32"
_MplsPwTpeOAMCCState_Object = MibTableColumn
mplsPwTpeOAMCCState = _MplsPwTpeOAMCCState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 27),
    _MplsPwTpeOAMCCState_Type()
)
mplsPwTpeOAMCCState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMCCState.setStatus("current")


class _MplsPwTpeOAMEventCacheSize_Type(Integer32):
    """Custom type mplsPwTpeOAMEventCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_MplsPwTpeOAMEventCacheSize_Type.__name__ = "Integer32"
_MplsPwTpeOAMEventCacheSize_Object = MibTableColumn
mplsPwTpeOAMEventCacheSize = _MplsPwTpeOAMEventCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 28),
    _MplsPwTpeOAMEventCacheSize_Type()
)
mplsPwTpeOAMEventCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEventCacheSize.setStatus("current")


class _MplsPwTpeOAM1dmCacheSize_Type(Integer32):
    """Custom type mplsPwTpeOAM1dmCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_MplsPwTpeOAM1dmCacheSize_Type.__name__ = "Integer32"
_MplsPwTpeOAM1dmCacheSize_Object = MibTableColumn
mplsPwTpeOAM1dmCacheSize = _MplsPwTpeOAM1dmCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 29),
    _MplsPwTpeOAM1dmCacheSize_Type()
)
mplsPwTpeOAM1dmCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAM1dmCacheSize.setStatus("current")


class _MplsPwTpeOAMAisClientSupress_Type(Integer32):
    """Custom type mplsPwTpeOAMAisClientSupress based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMAisClientSupress_Type.__name__ = "Integer32"
_MplsPwTpeOAMAisClientSupress_Object = MibTableColumn
mplsPwTpeOAMAisClientSupress = _MplsPwTpeOAMAisClientSupress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 30),
    _MplsPwTpeOAMAisClientSupress_Type()
)
mplsPwTpeOAMAisClientSupress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMAisClientSupress.setStatus("current")


class _MplsPwTpeOAMLck_Type(Integer32):
    """Custom type mplsPwTpeOAMLck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMLck_Type.__name__ = "Integer32"
_MplsPwTpeOAMLck_Object = MibTableColumn
mplsPwTpeOAMLck = _MplsPwTpeOAMLck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 31),
    _MplsPwTpeOAMLck_Type()
)
mplsPwTpeOAMLck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLck.setStatus("current")


class _MplsPwTpeOAMEvtLOC_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtLOC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtLOC_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtLOC_Object = MibTableColumn
mplsPwTpeOAMEvtLOC = _MplsPwTpeOAMEvtLOC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 32),
    _MplsPwTpeOAMEvtLOC_Type()
)
mplsPwTpeOAMEvtLOC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtLOC.setStatus("current")


class _MplsPwTpeOAMEvtUMP_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtUMP based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtUMP_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtUMP_Object = MibTableColumn
mplsPwTpeOAMEvtUMP = _MplsPwTpeOAMEvtUMP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 33),
    _MplsPwTpeOAMEvtUMP_Type()
)
mplsPwTpeOAMEvtUMP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtUMP.setStatus("current")


class _MplsPwTpeOAMEvtUIN_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtUIN based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtUIN_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtUIN_Object = MibTableColumn
mplsPwTpeOAMEvtUIN = _MplsPwTpeOAMEvtUIN_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 34),
    _MplsPwTpeOAMEvtUIN_Type()
)
mplsPwTpeOAMEvtUIN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtUIN.setStatus("current")


class _MplsPwTpeOAMEvtUMG_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtUMG based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtUMG_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtUMG_Object = MibTableColumn
mplsPwTpeOAMEvtUMG = _MplsPwTpeOAMEvtUMG_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 35),
    _MplsPwTpeOAMEvtUMG_Type()
)
mplsPwTpeOAMEvtUMG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtUMG.setStatus("current")


class _MplsPwTpeOAMEvtULV_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtULV based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtULV_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtULV_Object = MibTableColumn
mplsPwTpeOAMEvtULV = _MplsPwTpeOAMEvtULV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 36),
    _MplsPwTpeOAMEvtULV_Type()
)
mplsPwTpeOAMEvtULV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtULV.setStatus("current")


class _MplsPwTpeOAMEvtW1ST_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtW1ST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtW1ST_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtW1ST_Object = MibTableColumn
mplsPwTpeOAMEvtW1ST = _MplsPwTpeOAMEvtW1ST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 37),
    _MplsPwTpeOAMEvtW1ST_Type()
)
mplsPwTpeOAMEvtW1ST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtW1ST.setStatus("current")


class _MplsPwTpeOAMEvtRDIR_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtRDIR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtRDIR_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtRDIR_Object = MibTableColumn
mplsPwTpeOAMEvtRDIR = _MplsPwTpeOAMEvtRDIR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 38),
    _MplsPwTpeOAMEvtRDIR_Type()
)
mplsPwTpeOAMEvtRDIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtRDIR.setStatus("current")


class _MplsPwTpeOAMEvtRDIT_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtRDIT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtRDIT_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtRDIT_Object = MibTableColumn
mplsPwTpeOAMEvtRDIT = _MplsPwTpeOAMEvtRDIT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 39),
    _MplsPwTpeOAMEvtRDIT_Type()
)
mplsPwTpeOAMEvtRDIT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtRDIT.setStatus("current")


class _MplsPwTpeOAMEvtAISR_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtAISR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtAISR_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtAISR_Object = MibTableColumn
mplsPwTpeOAMEvtAISR = _MplsPwTpeOAMEvtAISR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 40),
    _MplsPwTpeOAMEvtAISR_Type()
)
mplsPwTpeOAMEvtAISR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtAISR.setStatus("current")


class _MplsPwTpeOAMEvtAIST_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtAIST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtAIST_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtAIST_Object = MibTableColumn
mplsPwTpeOAMEvtAIST = _MplsPwTpeOAMEvtAIST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 41),
    _MplsPwTpeOAMEvtAIST_Type()
)
mplsPwTpeOAMEvtAIST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtAIST.setStatus("current")


class _MplsPwTpeOAMEvtAISD_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtAISD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtAISD_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtAISD_Object = MibTableColumn
mplsPwTpeOAMEvtAISD = _MplsPwTpeOAMEvtAISD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 42),
    _MplsPwTpeOAMEvtAISD_Type()
)
mplsPwTpeOAMEvtAISD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtAISD.setStatus("current")


class _MplsPwTpeOAMEvtLCKR_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtLCKR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtLCKR_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtLCKR_Object = MibTableColumn
mplsPwTpeOAMEvtLCKR = _MplsPwTpeOAMEvtLCKR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 43),
    _MplsPwTpeOAMEvtLCKR_Type()
)
mplsPwTpeOAMEvtLCKR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtLCKR.setStatus("current")


class _MplsPwTpeOAMEvtLCKT_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtLCKT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtLCKT_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtLCKT_Object = MibTableColumn
mplsPwTpeOAMEvtLCKT = _MplsPwTpeOAMEvtLCKT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 44),
    _MplsPwTpeOAMEvtLCKT_Type()
)
mplsPwTpeOAMEvtLCKT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtLCKT.setStatus("current")


class _MplsPwTpeOAMEvtLCKD_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtLCKD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtLCKD_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtLCKD_Object = MibTableColumn
mplsPwTpeOAMEvtLCKD = _MplsPwTpeOAMEvtLCKD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 45),
    _MplsPwTpeOAMEvtLCKD_Type()
)
mplsPwTpeOAMEvtLCKD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtLCKD.setStatus("current")


class _MplsPwTpeOAMEvtCRC_Type(Integer32):
    """Custom type mplsPwTpeOAMEvtCRC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeOAMEvtCRC_Type.__name__ = "Integer32"
_MplsPwTpeOAMEvtCRC_Object = MibTableColumn
mplsPwTpeOAMEvtCRC = _MplsPwTpeOAMEvtCRC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 46),
    _MplsPwTpeOAMEvtCRC_Type()
)
mplsPwTpeOAMEvtCRC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMEvtCRC.setStatus("current")


class _MplsPwTpeOAMState_Type(Integer32):
    """Custom type mplsPwTpeOAMState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("fail", 1),
          ("ok", 2))
    )


_MplsPwTpeOAMState_Type.__name__ = "Integer32"
_MplsPwTpeOAMState_Object = MibTableColumn
mplsPwTpeOAMState = _MplsPwTpeOAMState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 50),
    _MplsPwTpeOAMState_Type()
)
mplsPwTpeOAMState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMState.setStatus("current")
_MplsPwTpeIngressPkts_Type = Counter64
_MplsPwTpeIngressPkts_Object = MibTableColumn
mplsPwTpeIngressPkts = _MplsPwTpeIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 51),
    _MplsPwTpeIngressPkts_Type()
)
mplsPwTpeIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeIngressPkts.setStatus("current")
_MplsPwTpeIngressBytes_Type = Counter64
_MplsPwTpeIngressBytes_Object = MibTableColumn
mplsPwTpeIngressBytes = _MplsPwTpeIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 52),
    _MplsPwTpeIngressBytes_Type()
)
mplsPwTpeIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeIngressBytes.setStatus("current")
_MplsPwTpeEgressPkts_Type = Counter64
_MplsPwTpeEgressPkts_Object = MibTableColumn
mplsPwTpeEgressPkts = _MplsPwTpeEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 53),
    _MplsPwTpeEgressPkts_Type()
)
mplsPwTpeEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeEgressPkts.setStatus("current")
_MplsPwTpeEgressBytes_Type = Counter64
_MplsPwTpeEgressBytes_Object = MibTableColumn
mplsPwTpeEgressBytes = _MplsPwTpeEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 54),
    _MplsPwTpeEgressBytes_Type()
)
mplsPwTpeEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeEgressBytes.setStatus("current")


class _MplsPwTpeStats_Type(Integer32):
    """Custom type mplsPwTpeStats based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsPwTpeStats_Type.__name__ = "Integer32"
_MplsPwTpeStats_Object = MibTableColumn
mplsPwTpeStats = _MplsPwTpeStats_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 55),
    _MplsPwTpeStats_Type()
)
mplsPwTpeStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeStats.setStatus("current")


class _MplsPwTpeBandwidth_Type(Integer32):
    """Custom type mplsPwTpeBandwidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 1000000),
    )


_MplsPwTpeBandwidth_Type.__name__ = "Integer32"
_MplsPwTpeBandwidth_Object = MibTableColumn
mplsPwTpeBandwidth = _MplsPwTpeBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 56),
    _MplsPwTpeBandwidth_Type()
)
mplsPwTpeBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeBandwidth.setStatus("current")


class _MplsPwTpeOAMLmDualExp_Type(Integer32):
    """Custom type mplsPwTpeOAMLmDualExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_MplsPwTpeOAMLmDualExp_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmDualExp_Object = MibTableColumn
mplsPwTpeOAMLmDualExp = _MplsPwTpeOAMLmDualExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 61),
    _MplsPwTpeOAMLmDualExp_Type()
)
mplsPwTpeOAMLmDualExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmDualExp.setStatus("current")


class _MplsPwTpeOAMLmDualStatInterval_Type(Integer32):
    """Custom type mplsPwTpeOAMLmDualStatInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_MplsPwTpeOAMLmDualStatInterval_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmDualStatInterval_Object = MibTableColumn
mplsPwTpeOAMLmDualStatInterval = _MplsPwTpeOAMLmDualStatInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 62),
    _MplsPwTpeOAMLmDualStatInterval_Type()
)
mplsPwTpeOAMLmDualStatInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmDualStatInterval.setStatus("current")


class _MplsPwTpeOAMLmDualCacheSize_Type(Integer32):
    """Custom type mplsPwTpeOAMLmDualCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_MplsPwTpeOAMLmDualCacheSize_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmDualCacheSize_Object = MibTableColumn
mplsPwTpeOAMLmDualCacheSize = _MplsPwTpeOAMLmDualCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 63),
    _MplsPwTpeOAMLmDualCacheSize_Type()
)
mplsPwTpeOAMLmDualCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmDualCacheSize.setStatus("current")


class _MplsPwTpeOAMLmSingleExp_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_MplsPwTpeOAMLmSingleExp_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleExp_Object = MibTableColumn
mplsPwTpeOAMLmSingleExp = _MplsPwTpeOAMLmSingleExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 66),
    _MplsPwTpeOAMLmSingleExp_Type()
)
mplsPwTpeOAMLmSingleExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleExp.setStatus("current")


class _MplsPwTpeOAMLmSingleInterval_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_MplsPwTpeOAMLmSingleInterval_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleInterval_Object = MibTableColumn
mplsPwTpeOAMLmSingleInterval = _MplsPwTpeOAMLmSingleInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 67),
    _MplsPwTpeOAMLmSingleInterval_Type()
)
mplsPwTpeOAMLmSingleInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleInterval.setStatus("current")


class _MplsPwTpeOAMLmSingleCacheSize_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_MplsPwTpeOAMLmSingleCacheSize_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleCacheSize_Object = MibTableColumn
mplsPwTpeOAMLmSingleCacheSize = _MplsPwTpeOAMLmSingleCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 68),
    _MplsPwTpeOAMLmSingleCacheSize_Type()
)
mplsPwTpeOAMLmSingleCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleCacheSize.setStatus("current")


class _MplsPwTpeOAMLmEnableState_Type(Integer32):
    """Custom type mplsPwTpeOAMLmEnableState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("enable-dual", 1),
          ("enable-single", 2),
          ("disable", 3))
    )


_MplsPwTpeOAMLmEnableState_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmEnableState_Object = MibTableColumn
mplsPwTpeOAMLmEnableState = _MplsPwTpeOAMLmEnableState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 70),
    _MplsPwTpeOAMLmEnableState_Type()
)
mplsPwTpeOAMLmEnableState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmEnableState.setStatus("current")


class _MplsPwTpeOAMLmLocalLossThreshold_Type(Integer32):
    """Custom type mplsPwTpeOAMLmLocalLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsPwTpeOAMLmLocalLossThreshold_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmLocalLossThreshold_Object = MibTableColumn
mplsPwTpeOAMLmLocalLossThreshold = _MplsPwTpeOAMLmLocalLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 71),
    _MplsPwTpeOAMLmLocalLossThreshold_Type()
)
mplsPwTpeOAMLmLocalLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmLocalLossThreshold.setStatus("current")


class _MplsPwTpeOAMLmRemoteLossThreshold_Type(Integer32):
    """Custom type mplsPwTpeOAMLmRemoteLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsPwTpeOAMLmRemoteLossThreshold_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmRemoteLossThreshold_Object = MibTableColumn
mplsPwTpeOAMLmRemoteLossThreshold = _MplsPwTpeOAMLmRemoteLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 72),
    _MplsPwTpeOAMLmRemoteLossThreshold_Type()
)
mplsPwTpeOAMLmRemoteLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmRemoteLossThreshold.setStatus("current")


class _MplsPwTpeOAMLmSingleRxCount_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleRxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MplsPwTpeOAMLmSingleRxCount_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleRxCount_Object = MibTableColumn
mplsPwTpeOAMLmSingleRxCount = _MplsPwTpeOAMLmSingleRxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 73),
    _MplsPwTpeOAMLmSingleRxCount_Type()
)
mplsPwTpeOAMLmSingleRxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleRxCount.setStatus("current")


class _MplsPwTpeOAMLmSingleTxCount_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleTxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MplsPwTpeOAMLmSingleTxCount_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleTxCount_Object = MibTableColumn
mplsPwTpeOAMLmSingleTxCount = _MplsPwTpeOAMLmSingleTxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 74),
    _MplsPwTpeOAMLmSingleTxCount_Type()
)
mplsPwTpeOAMLmSingleTxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleTxCount.setStatus("current")


class _MplsPwTpeOAMLmSingleSuccessRate_Type(Integer32):
    """Custom type mplsPwTpeOAMLmSingleSuccessRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsPwTpeOAMLmSingleSuccessRate_Type.__name__ = "Integer32"
_MplsPwTpeOAMLmSingleSuccessRate_Object = MibTableColumn
mplsPwTpeOAMLmSingleSuccessRate = _MplsPwTpeOAMLmSingleSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 75),
    _MplsPwTpeOAMLmSingleSuccessRate_Type()
)
mplsPwTpeOAMLmSingleSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleSuccessRate.setStatus("current")


class _MplsPwTpeOAMLmSingleStartTime_Type(OctetString):
    """Custom type mplsPwTpeOAMLmSingleStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsPwTpeOAMLmSingleStartTime_Type.__name__ = "OctetString"
_MplsPwTpeOAMLmSingleStartTime_Object = MibTableColumn
mplsPwTpeOAMLmSingleStartTime = _MplsPwTpeOAMLmSingleStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 76),
    _MplsPwTpeOAMLmSingleStartTime_Type()
)
mplsPwTpeOAMLmSingleStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleStartTime.setStatus("current")


class _MplsPwTpeOAMLmSingleEndTime_Type(OctetString):
    """Custom type mplsPwTpeOAMLmSingleEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsPwTpeOAMLmSingleEndTime_Type.__name__ = "OctetString"
_MplsPwTpeOAMLmSingleEndTime_Object = MibTableColumn
mplsPwTpeOAMLmSingleEndTime = _MplsPwTpeOAMLmSingleEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 31, 1, 77),
    _MplsPwTpeOAMLmSingleEndTime_Type()
)
mplsPwTpeOAMLmSingleEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsPwTpeOAMLmSingleEndTime.setStatus("current")
_MplsPwTpeConfTable_Object = MibTable
mplsPwTpeConfTable = _MplsPwTpeConfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32)
)
if mibBuilder.loadTexts:
    mplsPwTpeConfTable.setStatus("current")
_MplsPwTpeConfEntry_Object = MibTableRow
mplsPwTpeConfEntry = _MplsPwTpeConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1)
)
mplsPwTpeConfEntry.setIndexNames(
    (0, "SWITCH", "mplsPwTpeName"),
)
if mibBuilder.loadTexts:
    mplsPwTpeConfEntry.setStatus("current")


class _MplsPwTpeConfInlabel_Type(Integer32):
    """Custom type mplsPwTpeConfInlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwTpeConfInlabel_Type.__name__ = "Integer32"
_MplsPwTpeConfInlabel_Object = MibTableColumn
mplsPwTpeConfInlabel = _MplsPwTpeConfInlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1, 1),
    _MplsPwTpeConfInlabel_Type()
)
mplsPwTpeConfInlabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeConfInlabel.setStatus("current")


class _MplsPwTpeConfOutlabel_Type(Integer32):
    """Custom type mplsPwTpeConfOutlabel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 1048575),
    )


_MplsPwTpeConfOutlabel_Type.__name__ = "Integer32"
_MplsPwTpeConfOutlabel_Object = MibTableColumn
mplsPwTpeConfOutlabel = _MplsPwTpeConfOutlabel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1, 2),
    _MplsPwTpeConfOutlabel_Type()
)
mplsPwTpeConfOutlabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeConfOutlabel.setStatus("current")


class _MplsPwTpeConfPwMode_Type(Integer32):
    """Custom type mplsPwTpeConfPwMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("raw", 1),
          ("tagged", 2))
    )


_MplsPwTpeConfPwMode_Type.__name__ = "Integer32"
_MplsPwTpeConfPwMode_Object = MibTableColumn
mplsPwTpeConfPwMode = _MplsPwTpeConfPwMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1, 3),
    _MplsPwTpeConfPwMode_Type()
)
mplsPwTpeConfPwMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeConfPwMode.setStatus("current")


class _MplsPwTpeConfTunnel_Type(OctetString):
    """Custom type mplsPwTpeConfTunnel based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsPwTpeConfTunnel_Type.__name__ = "OctetString"
_MplsPwTpeConfTunnel_Object = MibTableColumn
mplsPwTpeConfTunnel = _MplsPwTpeConfTunnel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1, 4),
    _MplsPwTpeConfTunnel_Type()
)
mplsPwTpeConfTunnel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeConfTunnel.setStatus("current")
_MplsPwTpeConfRowStatus_Type = RowStatus
_MplsPwTpeConfRowStatus_Object = MibTableColumn
mplsPwTpeConfRowStatus = _MplsPwTpeConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 32, 1, 10),
    _MplsPwTpeConfRowStatus_Type()
)
mplsPwTpeConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsPwTpeConfRowStatus.setStatus("current")
_MplsTPVpwsTable_Object = MibTable
mplsTPVpwsTable = _MplsTPVpwsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33)
)
if mibBuilder.loadTexts:
    mplsTPVpwsTable.setStatus("current")
_MplsTPVpwsEntry_Object = MibTableRow
mplsTPVpwsEntry = _MplsTPVpwsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1)
)
mplsTPVpwsEntry.setIndexNames(
    (0, "SWITCH", "mplsTPVpwsVcId"),
)
if mibBuilder.loadTexts:
    mplsTPVpwsEntry.setStatus("current")


class _MplsTPVpwsVcId_Type(Integer32):
    """Custom type mplsTPVpwsVcId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 424967295),
    )


_MplsTPVpwsVcId_Type.__name__ = "Integer32"
_MplsTPVpwsVcId_Object = MibTableColumn
mplsTPVpwsVcId = _MplsTPVpwsVcId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 1),
    _MplsTPVpwsVcId_Type()
)
mplsTPVpwsVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTPVpwsVcId.setStatus("current")


class _MplsTPVpwsVcName_Type(OctetString):
    """Custom type mplsTPVpwsVcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsTPVpwsVcName_Type.__name__ = "OctetString"
_MplsTPVpwsVcName_Object = MibTableColumn
mplsTPVpwsVcName = _MplsTPVpwsVcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 2),
    _MplsTPVpwsVcName_Type()
)
mplsTPVpwsVcName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTPVpwsVcName.setStatus("current")


class _MplsTPVpwsApsType_Type(Integer32):
    """Custom type mplsTPVpwsApsType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aps", 1),
          ("non-aps", 2))
    )


_MplsTPVpwsApsType_Type.__name__ = "Integer32"
_MplsTPVpwsApsType_Object = MibTableColumn
mplsTPVpwsApsType = _MplsTPVpwsApsType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 3),
    _MplsTPVpwsApsType_Type()
)
mplsTPVpwsApsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTPVpwsApsType.setStatus("current")


class _MplsTPVpwsVlanOperation_Type(Integer32):
    """Custom type mplsTPVpwsVlanOperation based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ac-vlan-operation", 1),
          ("no-ac-vlan-operation", 2))
    )


_MplsTPVpwsVlanOperation_Type.__name__ = "Integer32"
_MplsTPVpwsVlanOperation_Object = MibTableColumn
mplsTPVpwsVlanOperation = _MplsTPVpwsVlanOperation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 4),
    _MplsTPVpwsVlanOperation_Type()
)
mplsTPVpwsVlanOperation.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTPVpwsVlanOperation.setStatus("current")
_MplsTPVpwsRowStatus_Type = RowStatus
_MplsTPVpwsRowStatus_Object = MibTableColumn
mplsTPVpwsRowStatus = _MplsTPVpwsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 10),
    _MplsTPVpwsRowStatus_Type()
)
mplsTPVpwsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsTPVpwsRowStatus.setStatus("current")


class _MplsTPVpwsPrimaryPw_Type(OctetString):
    """Custom type mplsTPVpwsPrimaryPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTPVpwsPrimaryPw_Type.__name__ = "OctetString"
_MplsTPVpwsPrimaryPw_Object = MibTableColumn
mplsTPVpwsPrimaryPw = _MplsTPVpwsPrimaryPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 11),
    _MplsTPVpwsPrimaryPw_Type()
)
mplsTPVpwsPrimaryPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsPrimaryPw.setStatus("current")


class _MplsTPVpwsSecondaryPw_Type(OctetString):
    """Custom type mplsTPVpwsSecondaryPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTPVpwsSecondaryPw_Type.__name__ = "OctetString"
_MplsTPVpwsSecondaryPw_Object = MibTableColumn
mplsTPVpwsSecondaryPw = _MplsTPVpwsSecondaryPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 12),
    _MplsTPVpwsSecondaryPw_Type()
)
mplsTPVpwsSecondaryPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsSecondaryPw.setStatus("current")


class _MplsTPVpwsSelectedPw_Type(OctetString):
    """Custom type mplsTPVpwsSelectedPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTPVpwsSelectedPw_Type.__name__ = "OctetString"
_MplsTPVpwsSelectedPw_Object = MibTableColumn
mplsTPVpwsSelectedPw = _MplsTPVpwsSelectedPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 13),
    _MplsTPVpwsSelectedPw_Type()
)
mplsTPVpwsSelectedPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsSelectedPw.setStatus("current")


class _MplsTPVpwsDescription_Type(OctetString):
    """Custom type mplsTPVpwsDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsTPVpwsDescription_Type.__name__ = "OctetString"
_MplsTPVpwsDescription_Object = MibTableColumn
mplsTPVpwsDescription = _MplsTPVpwsDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 18),
    _MplsTPVpwsDescription_Type()
)
mplsTPVpwsDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsDescription.setStatus("current")
_MplsTPAcVpwsIngressPkts_Type = Counter64
_MplsTPAcVpwsIngressPkts_Object = MibTableColumn
mplsTPAcVpwsIngressPkts = _MplsTPAcVpwsIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 21),
    _MplsTPAcVpwsIngressPkts_Type()
)
mplsTPAcVpwsIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPAcVpwsIngressPkts.setStatus("current")
_MplsTPAcVpwsIngressbytes_Type = Counter64
_MplsTPAcVpwsIngressbytes_Object = MibTableColumn
mplsTPAcVpwsIngressbytes = _MplsTPAcVpwsIngressbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 22),
    _MplsTPAcVpwsIngressbytes_Type()
)
mplsTPAcVpwsIngressbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPAcVpwsIngressbytes.setStatus("current")
_MplsTPAcVpwsEgressPkts_Type = Counter64
_MplsTPAcVpwsEgressPkts_Object = MibTableColumn
mplsTPAcVpwsEgressPkts = _MplsTPAcVpwsEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 23),
    _MplsTPAcVpwsEgressPkts_Type()
)
mplsTPAcVpwsEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPAcVpwsEgressPkts.setStatus("current")
_MplsTPAcVpwsEgressBytes_Type = Counter64
_MplsTPAcVpwsEgressBytes_Object = MibTableColumn
mplsTPAcVpwsEgressBytes = _MplsTPAcVpwsEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 24),
    _MplsTPAcVpwsEgressBytes_Type()
)
mplsTPAcVpwsEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPAcVpwsEgressBytes.setStatus("current")


class _MplsTPVpwsG8131Mode_Type(Integer32):
    """Custom type mplsTPVpwsG8131Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 1),
          ("non-revertive", 2))
    )


_MplsTPVpwsG8131Mode_Type.__name__ = "Integer32"
_MplsTPVpwsG8131Mode_Object = MibTableColumn
mplsTPVpwsG8131Mode = _MplsTPVpwsG8131Mode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 30),
    _MplsTPVpwsG8131Mode_Type()
)
mplsTPVpwsG8131Mode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131Mode.setStatus("current")


class _MplsTPVpwsG8131WTRTimer_Type(Integer32):
    """Custom type mplsTPVpwsG8131WTRTimer based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12),
    )


_MplsTPVpwsG8131WTRTimer_Type.__name__ = "Integer32"
_MplsTPVpwsG8131WTRTimer_Object = MibTableColumn
mplsTPVpwsG8131WTRTimer = _MplsTPVpwsG8131WTRTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 31),
    _MplsTPVpwsG8131WTRTimer_Type()
)
mplsTPVpwsG8131WTRTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131WTRTimer.setStatus("current")


class _MplsTPVpwsG8131HoldOffTimer_Type(Integer32):
    """Custom type mplsTPVpwsG8131HoldOffTimer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsTPVpwsG8131HoldOffTimer_Type.__name__ = "Integer32"
_MplsTPVpwsG8131HoldOffTimer_Object = MibTableColumn
mplsTPVpwsG8131HoldOffTimer = _MplsTPVpwsG8131HoldOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 32),
    _MplsTPVpwsG8131HoldOffTimer_Type()
)
mplsTPVpwsG8131HoldOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131HoldOffTimer.setStatus("current")


class _MplsTPVpwsG8131Action_Type(Integer32):
    """Custom type mplsTPVpwsG8131Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("force-switch", 1),
          ("manual-swtich-to-working", 2),
          ("manual-switch-to-protection", 3),
          ("lockout", 4),
          ("exercise", 5),
          ("clear", 6))
    )


_MplsTPVpwsG8131Action_Type.__name__ = "Integer32"
_MplsTPVpwsG8131Action_Object = MibTableColumn
mplsTPVpwsG8131Action = _MplsTPVpwsG8131Action_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 33),
    _MplsTPVpwsG8131Action_Type()
)
mplsTPVpwsG8131Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131Action.setStatus("current")


class _MplsTPVpwsG8131WorkingPw_Type(OctetString):
    """Custom type mplsTPVpwsG8131WorkingPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTPVpwsG8131WorkingPw_Type.__name__ = "OctetString"
_MplsTPVpwsG8131WorkingPw_Object = MibTableColumn
mplsTPVpwsG8131WorkingPw = _MplsTPVpwsG8131WorkingPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 40),
    _MplsTPVpwsG8131WorkingPw_Type()
)
mplsTPVpwsG8131WorkingPw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131WorkingPw.setStatus("current")


class _MplsTPVpwsG8131ProtectionPw_Type(OctetString):
    """Custom type mplsTPVpwsG8131ProtectionPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsTPVpwsG8131ProtectionPw_Type.__name__ = "OctetString"
_MplsTPVpwsG8131ProtectionPw_Object = MibTableColumn
mplsTPVpwsG8131ProtectionPw = _MplsTPVpwsG8131ProtectionPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 41),
    _MplsTPVpwsG8131ProtectionPw_Type()
)
mplsTPVpwsG8131ProtectionPw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131ProtectionPw.setStatus("current")


class _MplsTPVpwsG8131ActivePath_Type(Integer32):
    """Custom type mplsTPVpwsG8131ActivePath based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("working-lsp", 1),
          ("protection-lsp", 2))
    )


_MplsTPVpwsG8131ActivePath_Type.__name__ = "Integer32"
_MplsTPVpwsG8131ActivePath_Object = MibTableColumn
mplsTPVpwsG8131ActivePath = _MplsTPVpwsG8131ActivePath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 42),
    _MplsTPVpwsG8131ActivePath_Type()
)
mplsTPVpwsG8131ActivePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131ActivePath.setStatus("current")
_MplsTPVpwsG8131WTRTimeLeft_Type = Integer32
_MplsTPVpwsG8131WTRTimeLeft_Object = MibTableColumn
mplsTPVpwsG8131WTRTimeLeft = _MplsTPVpwsG8131WTRTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 43),
    _MplsTPVpwsG8131WTRTimeLeft_Type()
)
mplsTPVpwsG8131WTRTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131WTRTimeLeft.setStatus("current")
_MplsTPVpwsG8131HoldOffTimeLeft_Type = Integer32
_MplsTPVpwsG8131HoldOffTimeLeft_Object = MibTableColumn
mplsTPVpwsG8131HoldOffTimeLeft = _MplsTPVpwsG8131HoldOffTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 44),
    _MplsTPVpwsG8131HoldOffTimeLeft_Type()
)
mplsTPVpwsG8131HoldOffTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131HoldOffTimeLeft.setStatus("current")


class _MplsTPVpwsG8131DFOPState_Type(Integer32):
    """Custom type mplsTPVpwsG8131DFOPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("not-in-defect-mode", 1),
          ("b-bit-mismatch-defect", 2),
          ("r-bit-mismatch-defect", 3),
          ("invalid-request-state", 4),
          ("aps-recv-on-working-entity", 5),
          ("aps-pdu-not-recv-after-state-change", 6),
          ("a-bit-mismatch-defect", 7),
          ("d-bit-mismatch-defect", 8),
          ("t-bit-mismatch-defect", 9))
    )


_MplsTPVpwsG8131DFOPState_Type.__name__ = "Integer32"
_MplsTPVpwsG8131DFOPState_Object = MibTableColumn
mplsTPVpwsG8131DFOPState = _MplsTPVpwsG8131DFOPState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 45),
    _MplsTPVpwsG8131DFOPState_Type()
)
mplsTPVpwsG8131DFOPState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131DFOPState.setStatus("current")


class _MplsTPVpwsG8131CurrentState_Type(Integer32):
    """Custom type mplsTPVpwsG8131CurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsTPVpwsG8131CurrentState_Type.__name__ = "Integer32"
_MplsTPVpwsG8131CurrentState_Object = MibTableColumn
mplsTPVpwsG8131CurrentState = _MplsTPVpwsG8131CurrentState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 46),
    _MplsTPVpwsG8131CurrentState_Type()
)
mplsTPVpwsG8131CurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131CurrentState.setStatus("current")


class _MplsTPVpwsG8131LastState_Type(Integer32):
    """Custom type mplsTPVpwsG8131LastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsTPVpwsG8131LastState_Type.__name__ = "Integer32"
_MplsTPVpwsG8131LastState_Object = MibTableColumn
mplsTPVpwsG8131LastState = _MplsTPVpwsG8131LastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 47),
    _MplsTPVpwsG8131LastState_Type()
)
mplsTPVpwsG8131LastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131LastState.setStatus("current")


class _MplsTPVpwsG8131CurrentEvent_Type(Integer32):
    """Custom type mplsTPVpwsG8131CurrentEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsTPVpwsG8131CurrentEvent_Type.__name__ = "Integer32"
_MplsTPVpwsG8131CurrentEvent_Object = MibTableColumn
mplsTPVpwsG8131CurrentEvent = _MplsTPVpwsG8131CurrentEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 48),
    _MplsTPVpwsG8131CurrentEvent_Type()
)
mplsTPVpwsG8131CurrentEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131CurrentEvent.setStatus("current")


class _MplsTPVpwsG8131FarEndLastEvent_Type(Integer32):
    """Custom type mplsTPVpwsG8131FarEndLastEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsTPVpwsG8131FarEndLastEvent_Type.__name__ = "Integer32"
_MplsTPVpwsG8131FarEndLastEvent_Object = MibTableColumn
mplsTPVpwsG8131FarEndLastEvent = _MplsTPVpwsG8131FarEndLastEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 49),
    _MplsTPVpwsG8131FarEndLastEvent_Type()
)
mplsTPVpwsG8131FarEndLastEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131FarEndLastEvent.setStatus("current")


class _MplsTPVpwsG8131RequestSignal_Type(Integer32):
    """Custom type mplsTPVpwsG8131RequestSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("null", 2),
          ("none", 3))
    )


_MplsTPVpwsG8131RequestSignal_Type.__name__ = "Integer32"
_MplsTPVpwsG8131RequestSignal_Object = MibTableColumn
mplsTPVpwsG8131RequestSignal = _MplsTPVpwsG8131RequestSignal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 50),
    _MplsTPVpwsG8131RequestSignal_Type()
)
mplsTPVpwsG8131RequestSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsG8131RequestSignal.setStatus("current")


class _MplsTPVpwsOAMCsfInterval_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_MplsTPVpwsOAMCsfInterval_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfInterval_Object = MibTableColumn
mplsTPVpwsOAMCsfInterval = _MplsTPVpwsOAMCsfInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 60),
    _MplsTPVpwsOAMCsfInterval_Type()
)
mplsTPVpwsOAMCsfInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfInterval.setStatus("current")


class _MplsTPVpwsOAMCSFRxDown_Type(Integer32):
    """Custom type mplsTPVpwsOAMCSFRxDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_MplsTPVpwsOAMCSFRxDown_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCSFRxDown_Object = MibTableColumn
mplsTPVpwsOAMCSFRxDown = _MplsTPVpwsOAMCSFRxDown_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 61),
    _MplsTPVpwsOAMCSFRxDown_Type()
)
mplsTPVpwsOAMCSFRxDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCSFRxDown.setStatus("current")


class _MplsTPVpwsOAMCSFRxRelay_Type(Integer32):
    """Custom type mplsTPVpwsOAMCSFRxRelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
    )


_MplsTPVpwsOAMCSFRxRelay_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCSFRxRelay_Object = MibTableColumn
mplsTPVpwsOAMCSFRxRelay = _MplsTPVpwsOAMCSFRxRelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 62),
    _MplsTPVpwsOAMCSFRxRelay_Type()
)
mplsTPVpwsOAMCSFRxRelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCSFRxRelay.setStatus("current")


class _MplsTPVpwsOAMCSFRxRelayMdName_Type(OctetString):
    """Custom type mplsTPVpwsOAMCSFRxRelayMdName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 44),
    )


_MplsTPVpwsOAMCSFRxRelayMdName_Type.__name__ = "OctetString"
_MplsTPVpwsOAMCSFRxRelayMdName_Object = MibTableColumn
mplsTPVpwsOAMCSFRxRelayMdName = _MplsTPVpwsOAMCSFRxRelayMdName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 63),
    _MplsTPVpwsOAMCSFRxRelayMdName_Type()
)
mplsTPVpwsOAMCSFRxRelayMdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCSFRxRelayMdName.setStatus("current")


class _MplsTPVpwsOAMCSFRxRelayMaVid_Type(Integer32):
    """Custom type mplsTPVpwsOAMCSFRxRelayMaVid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_MplsTPVpwsOAMCSFRxRelayMaVid_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCSFRxRelayMaVid_Object = MibTableColumn
mplsTPVpwsOAMCSFRxRelayMaVid = _MplsTPVpwsOAMCSFRxRelayMaVid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 64),
    _MplsTPVpwsOAMCSFRxRelayMaVid_Type()
)
mplsTPVpwsOAMCSFRxRelayMaVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCSFRxRelayMaVid.setStatus("current")


class _MplsTPVpwsOAMCSFRxRelayMepId_Type(Integer32):
    """Custom type mplsTPVpwsOAMCSFRxRelayMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_MplsTPVpwsOAMCSFRxRelayMepId_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCSFRxRelayMepId_Object = MibTableColumn
mplsTPVpwsOAMCSFRxRelayMepId = _MplsTPVpwsOAMCSFRxRelayMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 33, 1, 65),
    _MplsTPVpwsOAMCSFRxRelayMepId_Type()
)
mplsTPVpwsOAMCSFRxRelayMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCSFRxRelayMepId.setStatus("current")
_MplsVplsTPPeerTable_Object = MibTable
mplsVplsTPPeerTable = _MplsVplsTPPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34)
)
if mibBuilder.loadTexts:
    mplsVplsTPPeerTable.setStatus("current")
_MplsVplsTPPeerEntry_Object = MibTableRow
mplsVplsTPPeerEntry = _MplsVplsTPPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1)
)
mplsVplsTPPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsTPPeerVplsId"),
    (0, "SWITCH", "mplsVplsTPPeerName"),
)
if mibBuilder.loadTexts:
    mplsVplsTPPeerEntry.setStatus("current")


class _MplsVplsTPPeerVplsId_Type(Unsigned32):
    """Custom type mplsVplsTPPeerVplsId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVplsTPPeerVplsId_Type.__name__ = "Unsigned32"
_MplsVplsTPPeerVplsId_Object = MibTableColumn
mplsVplsTPPeerVplsId = _MplsVplsTPPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 1),
    _MplsVplsTPPeerVplsId_Type()
)
mplsVplsTPPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsTPPeerVplsId.setStatus("current")


class _MplsVplsTPPeerName_Type(OctetString):
    """Custom type mplsVplsTPPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsTPPeerName_Type.__name__ = "OctetString"
_MplsVplsTPPeerName_Object = MibTableColumn
mplsVplsTPPeerName = _MplsVplsTPPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 2),
    _MplsVplsTPPeerName_Type()
)
mplsVplsTPPeerName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsTPPeerName.setStatus("current")


class _MplsVplsTPPeerApsType_Type(Integer32):
    """Custom type mplsVplsTPPeerApsType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aps", 1),
          ("non-aps", 2))
    )


_MplsVplsTPPeerApsType_Type.__name__ = "Integer32"
_MplsVplsTPPeerApsType_Object = MibTableColumn
mplsVplsTPPeerApsType = _MplsVplsTPPeerApsType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 3),
    _MplsVplsTPPeerApsType_Type()
)
mplsVplsTPPeerApsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsTPPeerApsType.setStatus("current")


class _MplsVplsTPPeerPEType_Type(Integer32):
    """Custom type mplsVplsTPPeerPEType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("spe", 1),
          ("upe", 2))
    )


_MplsVplsTPPeerPEType_Type.__name__ = "Integer32"
_MplsVplsTPPeerPEType_Object = MibTableColumn
mplsVplsTPPeerPEType = _MplsVplsTPPeerPEType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 4),
    _MplsVplsTPPeerPEType_Type()
)
mplsVplsTPPeerPEType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsTPPeerPEType.setStatus("current")
_MplsVplsTPPeerRowStatus_Type = RowStatus
_MplsVplsTPPeerRowStatus_Object = MibTableColumn
mplsVplsTPPeerRowStatus = _MplsVplsTPPeerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 10),
    _MplsVplsTPPeerRowStatus_Type()
)
mplsVplsTPPeerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsTPPeerRowStatus.setStatus("current")


class _MplsVplsTPPeerPrimaryPw_Type(OctetString):
    """Custom type mplsVplsTPPeerPrimaryPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsTPPeerPrimaryPw_Type.__name__ = "OctetString"
_MplsVplsTPPeerPrimaryPw_Object = MibTableColumn
mplsVplsTPPeerPrimaryPw = _MplsVplsTPPeerPrimaryPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 11),
    _MplsVplsTPPeerPrimaryPw_Type()
)
mplsVplsTPPeerPrimaryPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerPrimaryPw.setStatus("current")


class _MplsVplsTPPeerSecondaryPw_Type(OctetString):
    """Custom type mplsVplsTPPeerSecondaryPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsTPPeerSecondaryPw_Type.__name__ = "OctetString"
_MplsVplsTPPeerSecondaryPw_Object = MibTableColumn
mplsVplsTPPeerSecondaryPw = _MplsVplsTPPeerSecondaryPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 12),
    _MplsVplsTPPeerSecondaryPw_Type()
)
mplsVplsTPPeerSecondaryPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerSecondaryPw.setStatus("current")


class _MplsVplsTPPeerSelectedPw_Type(OctetString):
    """Custom type mplsVplsTPPeerSelectedPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsTPPeerSelectedPw_Type.__name__ = "OctetString"
_MplsVplsTPPeerSelectedPw_Object = MibTableColumn
mplsVplsTPPeerSelectedPw = _MplsVplsTPPeerSelectedPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 13),
    _MplsVplsTPPeerSelectedPw_Type()
)
mplsVplsTPPeerSelectedPw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerSelectedPw.setStatus("current")


class _MplsVplsTPPeerDescription_Type(OctetString):
    """Custom type mplsVplsTPPeerDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsTPPeerDescription_Type.__name__ = "OctetString"
_MplsVplsTPPeerDescription_Object = MibTableColumn
mplsVplsTPPeerDescription = _MplsVplsTPPeerDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 18),
    _MplsVplsTPPeerDescription_Type()
)
mplsVplsTPPeerDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerDescription.setStatus("current")


class _MplsVplsTPPeerG8131Mode_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 1),
          ("non-revertive", 2))
    )


_MplsVplsTPPeerG8131Mode_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131Mode_Object = MibTableColumn
mplsVplsTPPeerG8131Mode = _MplsVplsTPPeerG8131Mode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 30),
    _MplsVplsTPPeerG8131Mode_Type()
)
mplsVplsTPPeerG8131Mode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131Mode.setStatus("current")


class _MplsVplsTPPeerG8131WTRTimer_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131WTRTimer based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12),
    )


_MplsVplsTPPeerG8131WTRTimer_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131WTRTimer_Object = MibTableColumn
mplsVplsTPPeerG8131WTRTimer = _MplsVplsTPPeerG8131WTRTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 31),
    _MplsVplsTPPeerG8131WTRTimer_Type()
)
mplsVplsTPPeerG8131WTRTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131WTRTimer.setStatus("current")


class _MplsVplsTPPeerG8131HoldOffTimer_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131HoldOffTimer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MplsVplsTPPeerG8131HoldOffTimer_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131HoldOffTimer_Object = MibTableColumn
mplsVplsTPPeerG8131HoldOffTimer = _MplsVplsTPPeerG8131HoldOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 32),
    _MplsVplsTPPeerG8131HoldOffTimer_Type()
)
mplsVplsTPPeerG8131HoldOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131HoldOffTimer.setStatus("current")


class _MplsVplsTPPeerG8131Action_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131Action based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("force-switch", 1),
          ("manual-swtich-to-working", 2),
          ("manual-switch-to-protection", 3),
          ("lockout", 4),
          ("exercise", 5),
          ("clear", 6))
    )


_MplsVplsTPPeerG8131Action_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131Action_Object = MibTableColumn
mplsVplsTPPeerG8131Action = _MplsVplsTPPeerG8131Action_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 33),
    _MplsVplsTPPeerG8131Action_Type()
)
mplsVplsTPPeerG8131Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131Action.setStatus("current")


class _MplsVplsTPPeerG8131WorkingPw_Type(OctetString):
    """Custom type mplsVplsTPPeerG8131WorkingPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsTPPeerG8131WorkingPw_Type.__name__ = "OctetString"
_MplsVplsTPPeerG8131WorkingPw_Object = MibTableColumn
mplsVplsTPPeerG8131WorkingPw = _MplsVplsTPPeerG8131WorkingPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 40),
    _MplsVplsTPPeerG8131WorkingPw_Type()
)
mplsVplsTPPeerG8131WorkingPw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131WorkingPw.setStatus("current")


class _MplsVplsTPPeerG8131ProtectionPw_Type(OctetString):
    """Custom type mplsVplsTPPeerG8131ProtectionPw based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_MplsVplsTPPeerG8131ProtectionPw_Type.__name__ = "OctetString"
_MplsVplsTPPeerG8131ProtectionPw_Object = MibTableColumn
mplsVplsTPPeerG8131ProtectionPw = _MplsVplsTPPeerG8131ProtectionPw_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 41),
    _MplsVplsTPPeerG8131ProtectionPw_Type()
)
mplsVplsTPPeerG8131ProtectionPw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131ProtectionPw.setStatus("current")


class _MplsVplsTPPeerG8131ActivePath_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131ActivePath based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("working-lsp", 1),
          ("protection-lsp", 2))
    )


_MplsVplsTPPeerG8131ActivePath_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131ActivePath_Object = MibTableColumn
mplsVplsTPPeerG8131ActivePath = _MplsVplsTPPeerG8131ActivePath_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 42),
    _MplsVplsTPPeerG8131ActivePath_Type()
)
mplsVplsTPPeerG8131ActivePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131ActivePath.setStatus("current")
_MplsVplsTPPeerG8131WTRTimeLeft_Type = Integer32
_MplsVplsTPPeerG8131WTRTimeLeft_Object = MibTableColumn
mplsVplsTPPeerG8131WTRTimeLeft = _MplsVplsTPPeerG8131WTRTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 43),
    _MplsVplsTPPeerG8131WTRTimeLeft_Type()
)
mplsVplsTPPeerG8131WTRTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131WTRTimeLeft.setStatus("current")
_MplsVplsTPPeerG8131HoldOffTimeLeft_Type = Integer32
_MplsVplsTPPeerG8131HoldOffTimeLeft_Object = MibTableColumn
mplsVplsTPPeerG8131HoldOffTimeLeft = _MplsVplsTPPeerG8131HoldOffTimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 44),
    _MplsVplsTPPeerG8131HoldOffTimeLeft_Type()
)
mplsVplsTPPeerG8131HoldOffTimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131HoldOffTimeLeft.setStatus("current")


class _MplsVplsTPPeerG8131DFOPState_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131DFOPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("not-in-defect-mode", 1),
          ("b-bit-mismatch-defect", 2),
          ("r-bit-mismatch-defect", 3),
          ("invalid-request-state", 4),
          ("aps-recv-on-working-entity", 5),
          ("aps-pdu-not-recv-after-state-change", 6),
          ("a-bit-mismatch-defect", 7),
          ("d-bit-mismatch-defect", 8),
          ("t-bit-mismatch-defect", 9))
    )


_MplsVplsTPPeerG8131DFOPState_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131DFOPState_Object = MibTableColumn
mplsVplsTPPeerG8131DFOPState = _MplsVplsTPPeerG8131DFOPState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 45),
    _MplsVplsTPPeerG8131DFOPState_Type()
)
mplsVplsTPPeerG8131DFOPState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131DFOPState.setStatus("current")


class _MplsVplsTPPeerG8131CurrentState_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131CurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsVplsTPPeerG8131CurrentState_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131CurrentState_Object = MibTableColumn
mplsVplsTPPeerG8131CurrentState = _MplsVplsTPPeerG8131CurrentState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 46),
    _MplsVplsTPPeerG8131CurrentState_Type()
)
mplsVplsTPPeerG8131CurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131CurrentState.setStatus("current")


class _MplsVplsTPPeerG8131LastState_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131LastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no-request-working-active", 0),
          ("no-request-protection-avtive", 1),
          ("lockout-of-protection", 2),
          ("forced-switch", 3),
          ("signal-fail-on-working", 4),
          ("signal-fail-on-protection", 5),
          ("signal-degrade-on-working", 6),
          ("signal-degrade-on-protection", 7),
          ("manual-switch-to-protection", 8),
          ("manual-switch-to-working", 9),
          ("wait-to-restore", 10),
          ("do-not-revert", 11),
          ("exercise-on-working", 12),
          ("exercise-on-protection", 13),
          ("reverse-request-on-working", 14),
          ("reverse-request-on-protection", 15),
          ("none", 16))
    )


_MplsVplsTPPeerG8131LastState_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131LastState_Object = MibTableColumn
mplsVplsTPPeerG8131LastState = _MplsVplsTPPeerG8131LastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 47),
    _MplsVplsTPPeerG8131LastState_Type()
)
mplsVplsTPPeerG8131LastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131LastState.setStatus("current")


class _MplsVplsTPPeerG8131CurrentEvent_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131CurrentEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsVplsTPPeerG8131CurrentEvent_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131CurrentEvent_Object = MibTableColumn
mplsVplsTPPeerG8131CurrentEvent = _MplsVplsTPPeerG8131CurrentEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 48),
    _MplsVplsTPPeerG8131CurrentEvent_Type()
)
mplsVplsTPPeerG8131CurrentEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131CurrentEvent.setStatus("current")


class _MplsVplsTPPeerG8131FarEndLastEvent_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131FarEndLastEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("local-lockout", 0),
          ("local-force-switch", 1),
          ("local-signal-fail-on-working", 2),
          ("local-working-recover-from-signal-fail", 3),
          ("local-signal-fail-on-protection", 4),
          ("local-protection-recover-from-signal-fail", 5),
          ("local-signal-degrade-on-working", 6),
          ("local-working-recover-from-signal-degrade", 7),
          ("local-signal-degrade-on-protection", 8),
          ("local-protection-recover-from-signal-degrade", 9),
          ("local-manual-switch-to-protection", 10),
          ("local-manual-switch-to-working", 11),
          ("local-clear", 12),
          ("local-exercise", 13),
          ("local-wtr-timer-expire", 14),
          ("remote-lockout", 15),
          ("remote-signal-fail-on-protection", 16),
          ("remote-force-switch", 17),
          ("remote-signal-fail-on-working", 18),
          ("remote-signal-degrade-on-working", 19),
          ("remote-signal-degrade-on-protection", 20),
          ("remote-manual-switch-to-protection", 21),
          ("remote-manual-switch-to-working", 22),
          ("remote-wait-to-restore", 23),
          ("remote-exercise-on-working", 24),
          ("remote-exercise-on-protection", 25),
          ("remote-reverse-request-on-working", 26),
          ("remote-reverse-request-on-protection", 27),
          ("remote-no-request-null", 28),
          ("remote-no-request-normal", 29),
          ("remote-do-not-revert", 30),
          ("none", 31))
    )


_MplsVplsTPPeerG8131FarEndLastEvent_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131FarEndLastEvent_Object = MibTableColumn
mplsVplsTPPeerG8131FarEndLastEvent = _MplsVplsTPPeerG8131FarEndLastEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 49),
    _MplsVplsTPPeerG8131FarEndLastEvent_Type()
)
mplsVplsTPPeerG8131FarEndLastEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131FarEndLastEvent.setStatus("current")


class _MplsVplsTPPeerG8131RequestSignal_Type(Integer32):
    """Custom type mplsVplsTPPeerG8131RequestSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("null", 2),
          ("none", 3))
    )


_MplsVplsTPPeerG8131RequestSignal_Type.__name__ = "Integer32"
_MplsVplsTPPeerG8131RequestSignal_Object = MibTableColumn
mplsVplsTPPeerG8131RequestSignal = _MplsVplsTPPeerG8131RequestSignal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 34, 1, 50),
    _MplsVplsTPPeerG8131RequestSignal_Type()
)
mplsVplsTPPeerG8131RequestSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsTPPeerG8131RequestSignal.setStatus("current")
_MplsLspPeAisClientTable_Object = MibTable
mplsLspPeAisClientTable = _MplsLspPeAisClientTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 35)
)
if mibBuilder.loadTexts:
    mplsLspPeAisClientTable.setStatus("current")
_MplsLspPeAisClientEntry_Object = MibTableRow
mplsLspPeAisClientEntry = _MplsLspPeAisClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 35, 1)
)
mplsLspPeAisClientEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPeName"),
    (0, "SWITCH", "lspPeAisClientBindType"),
    (0, "SWITCH", "lspPeAisClientBindName"),
)
if mibBuilder.loadTexts:
    mplsLspPeAisClientEntry.setStatus("current")


class _LspPeAisClientBindType_Type(Integer32):
    """Custom type lspPeAisClientBindType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lsp-p", 1),
          ("pw-spe", 2),
          ("pw-tpe", 3))
    )


_LspPeAisClientBindType_Type.__name__ = "Integer32"
_LspPeAisClientBindType_Object = MibTableColumn
lspPeAisClientBindType = _LspPeAisClientBindType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 35, 1, 1),
    _LspPeAisClientBindType_Type()
)
lspPeAisClientBindType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lspPeAisClientBindType.setStatus("current")


class _LspPeAisClientBindName_Type(OctetString):
    """Custom type lspPeAisClientBindName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_LspPeAisClientBindName_Type.__name__ = "OctetString"
_LspPeAisClientBindName_Object = MibTableColumn
lspPeAisClientBindName = _LspPeAisClientBindName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 35, 1, 2),
    _LspPeAisClientBindName_Type()
)
lspPeAisClientBindName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lspPeAisClientBindName.setStatus("current")
_LspPeAisClientRowStatus_Type = RowStatus
_LspPeAisClientRowStatus_Object = MibTableColumn
lspPeAisClientRowStatus = _LspPeAisClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 35, 1, 10),
    _LspPeAisClientRowStatus_Type()
)
lspPeAisClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    lspPeAisClientRowStatus.setStatus("current")
_MplsLspPeLckClientTable_Object = MibTable
mplsLspPeLckClientTable = _MplsLspPeLckClientTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 36)
)
if mibBuilder.loadTexts:
    mplsLspPeLckClientTable.setStatus("current")
_MplsLspPeLckClientEntry_Object = MibTableRow
mplsLspPeLckClientEntry = _MplsLspPeLckClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 36, 1)
)
mplsLspPeLckClientEntry.setIndexNames(
    (0, "SWITCH", "mplsLspPeName"),
    (0, "SWITCH", "mplsLspPeLckClientBindType"),
    (0, "SWITCH", "mplsLspPeLckClientBindName"),
)
if mibBuilder.loadTexts:
    mplsLspPeLckClientEntry.setStatus("current")


class _MplsLspPeLckClientBindType_Type(Integer32):
    """Custom type mplsLspPeLckClientBindType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lsp-p", 1),
          ("pw-spe", 2),
          ("pw-tpe", 3))
    )


_MplsLspPeLckClientBindType_Type.__name__ = "Integer32"
_MplsLspPeLckClientBindType_Object = MibTableColumn
mplsLspPeLckClientBindType = _MplsLspPeLckClientBindType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 36, 1, 1),
    _MplsLspPeLckClientBindType_Type()
)
mplsLspPeLckClientBindType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPeLckClientBindType.setStatus("current")


class _MplsLspPeLckClientBindName_Type(OctetString):
    """Custom type mplsLspPeLckClientBindName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsLspPeLckClientBindName_Type.__name__ = "OctetString"
_MplsLspPeLckClientBindName_Object = MibTableColumn
mplsLspPeLckClientBindName = _MplsLspPeLckClientBindName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 36, 1, 2),
    _MplsLspPeLckClientBindName_Type()
)
mplsLspPeLckClientBindName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsLspPeLckClientBindName.setStatus("current")
_MplsLspPeLckClientRowStatus_Type = RowStatus
_MplsLspPeLckClientRowStatus_Object = MibTableColumn
mplsLspPeLckClientRowStatus = _MplsLspPeLckClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 36, 1, 10),
    _MplsLspPeLckClientRowStatus_Type()
)
mplsLspPeLckClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsLspPeLckClientRowStatus.setStatus("current")
_MplsTpOAMSdReason_ObjectIdentity = ObjectIdentity
mplsTpOAMSdReason = _MplsTpOAMSdReason_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 44)
)


class _SdReasonAisRx_Type(Integer32):
    """Custom type sdReasonAisRx based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SdReasonAisRx_Type.__name__ = "Integer32"
_SdReasonAisRx_Object = MibScalar
sdReasonAisRx = _SdReasonAisRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 44, 1),
    _SdReasonAisRx_Type()
)
sdReasonAisRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sdReasonAisRx.setStatus("current")


class _SdReasonAisDefect_Type(Integer32):
    """Custom type sdReasonAisDefect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SdReasonAisDefect_Type.__name__ = "Integer32"
_SdReasonAisDefect_Object = MibScalar
sdReasonAisDefect = _SdReasonAisDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 44, 2),
    _SdReasonAisDefect_Type()
)
sdReasonAisDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sdReasonAisDefect.setStatus("current")


class _SdReasonCRC_Type(Integer32):
    """Custom type sdReasonCRC based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SdReasonCRC_Type.__name__ = "Integer32"
_SdReasonCRC_Object = MibScalar
sdReasonCRC = _SdReasonCRC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 44, 3),
    _SdReasonCRC_Type()
)
sdReasonCRC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sdReasonCRC.setStatus("current")
_MplsDCNManagementIp_Type = IpAddress
_MplsDCNManagementIp_Object = MibScalar
mplsDCNManagementIp = _MplsDCNManagementIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 45),
    _MplsDCNManagementIp_Type()
)
mplsDCNManagementIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsDCNManagementIp.setStatus("current")


class _MplsTrustTopMostExp_Type(Integer32):
    """Custom type mplsTrustTopMostExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsTrustTopMostExp_Type.__name__ = "Integer32"
_MplsTrustTopMostExp_Object = MibScalar
mplsTrustTopMostExp = _MplsTrustTopMostExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 46),
    _MplsTrustTopMostExp_Type()
)
mplsTrustTopMostExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTrustTopMostExp.setStatus("current")


class _MplsTpChannelType_Type(OctetString):
    """Custom type mplsTpChannelType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 4),
    )


_MplsTpChannelType_Type.__name__ = "OctetString"
_MplsTpChannelType_Object = MibScalar
mplsTpChannelType = _MplsTpChannelType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 47),
    _MplsTpChannelType_Type()
)
mplsTpChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpChannelType.setStatus("current")
_MplsTpNodeId_Type = IpAddress
_MplsTpNodeId_Object = MibScalar
mplsTpNodeId = _MplsTpNodeId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 48),
    _MplsTpNodeId_Type()
)
mplsTpNodeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpNodeId.setStatus("current")
_MplsTpOAMSfReason_ObjectIdentity = ObjectIdentity
mplsTpOAMSfReason = _MplsTpOAMSfReason_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49)
)


class _SfReasonAisDefect_Type(Integer32):
    """Custom type sfReasonAisDefect based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SfReasonAisDefect_Type.__name__ = "Integer32"
_SfReasonAisDefect_Object = MibScalar
sfReasonAisDefect = _SfReasonAisDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49, 1),
    _SfReasonAisDefect_Type()
)
sfReasonAisDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sfReasonAisDefect.setStatus("current")


class _SfReasonLoc_Type(Integer32):
    """Custom type sfReasonLoc based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SfReasonLoc_Type.__name__ = "Integer32"
_SfReasonLoc_Object = MibScalar
sfReasonLoc = _SfReasonLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49, 2),
    _SfReasonLoc_Type()
)
sfReasonLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sfReasonLoc.setStatus("current")


class _SfReasonRdiRx_Type(Integer32):
    """Custom type sfReasonRdiRx based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SfReasonRdiRx_Type.__name__ = "Integer32"
_SfReasonRdiRx_Object = MibScalar
sfReasonRdiRx = _SfReasonRdiRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49, 3),
    _SfReasonRdiRx_Type()
)
sfReasonRdiRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sfReasonRdiRx.setStatus("current")


class _SfReasonAisRx_Type(Integer32):
    """Custom type sfReasonAisRx based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SfReasonAisRx_Type.__name__ = "Integer32"
_SfReasonAisRx_Object = MibScalar
sfReasonAisRx = _SfReasonAisRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49, 4),
    _SfReasonAisRx_Type()
)
sfReasonAisRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sfReasonAisRx.setStatus("current")


class _SfReasonCsfDefect_Type(Integer32):
    """Custom type sfReasonCsfDefect based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SfReasonCsfDefect_Type.__name__ = "Integer32"
_SfReasonCsfDefect_Object = MibScalar
sfReasonCsfDefect = _SfReasonCsfDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 49, 5),
    _SfReasonCsfDefect_Type()
)
sfReasonCsfDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sfReasonCsfDefect.setStatus("current")
_MplsTpOAMRdiReason_ObjectIdentity = ObjectIdentity
mplsTpOAMRdiReason = _MplsTpOAMRdiReason_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 50)
)


class _RdiReasonLoc_Type(Integer32):
    """Custom type rdiReasonLoc based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RdiReasonLoc_Type.__name__ = "Integer32"
_RdiReasonLoc_Object = MibScalar
rdiReasonLoc = _RdiReasonLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 50, 1),
    _RdiReasonLoc_Type()
)
rdiReasonLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdiReasonLoc.setStatus("current")


class _RdiReasonCCError_Type(Integer32):
    """Custom type rdiReasonCCError based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RdiReasonCCError_Type.__name__ = "Integer32"
_RdiReasonCCError_Object = MibScalar
rdiReasonCCError = _RdiReasonCCError_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 50, 2),
    _RdiReasonCCError_Type()
)
rdiReasonCCError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdiReasonCCError.setStatus("current")


class _RdiReasonCCMisMerge_Type(Integer32):
    """Custom type rdiReasonCCMisMerge based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RdiReasonCCMisMerge_Type.__name__ = "Integer32"
_RdiReasonCCMisMerge_Object = MibScalar
rdiReasonCCMisMerge = _RdiReasonCCMisMerge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 50, 3),
    _RdiReasonCCMisMerge_Type()
)
rdiReasonCCMisMerge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rdiReasonCCMisMerge.setStatus("current")
_MplsTpOAMAisReason_ObjectIdentity = ObjectIdentity
mplsTpOAMAisReason = _MplsTpOAMAisReason_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51)
)


class _AisReasonLoc_Type(Integer32):
    """Custom type aisReasonLoc based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonLoc_Type.__name__ = "Integer32"
_AisReasonLoc_Object = MibScalar
aisReasonLoc = _AisReasonLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 1),
    _AisReasonLoc_Type()
)
aisReasonLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonLoc.setStatus("current")


class _AisReasonUnExpRMepID_Type(Integer32):
    """Custom type aisReasonUnExpRMepID based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonUnExpRMepID_Type.__name__ = "Integer32"
_AisReasonUnExpRMepID_Object = MibScalar
aisReasonUnExpRMepID = _AisReasonUnExpRMepID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 2),
    _AisReasonUnExpRMepID_Type()
)
aisReasonUnExpRMepID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonUnExpRMepID.setStatus("current")


class _AisReasonUnExpInterval_Type(Integer32):
    """Custom type aisReasonUnExpInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonUnExpInterval_Type.__name__ = "Integer32"
_AisReasonUnExpInterval_Object = MibScalar
aisReasonUnExpInterval = _AisReasonUnExpInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 3),
    _AisReasonUnExpInterval_Type()
)
aisReasonUnExpInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonUnExpInterval.setStatus("current")


class _AisReasonUnExpMegId_Type(Integer32):
    """Custom type aisReasonUnExpMegId based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonUnExpMegId_Type.__name__ = "Integer32"
_AisReasonUnExpMegId_Object = MibScalar
aisReasonUnExpMegId = _AisReasonUnExpMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 4),
    _AisReasonUnExpMegId_Type()
)
aisReasonUnExpMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonUnExpMegId.setStatus("current")


class _AisReasonUnExpMegLevel_Type(Integer32):
    """Custom type aisReasonUnExpMegLevel based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonUnExpMegLevel_Type.__name__ = "Integer32"
_AisReasonUnExpMegLevel_Object = MibScalar
aisReasonUnExpMegLevel = _AisReasonUnExpMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 5),
    _AisReasonUnExpMegLevel_Type()
)
aisReasonUnExpMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonUnExpMegLevel.setStatus("current")


class _AisReasonAisDefect_Type(Integer32):
    """Custom type aisReasonAisDefect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonAisDefect_Type.__name__ = "Integer32"
_AisReasonAisDefect_Object = MibScalar
aisReasonAisDefect = _AisReasonAisDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 6),
    _AisReasonAisDefect_Type()
)
aisReasonAisDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonAisDefect.setStatus("current")


class _AisReasonLockRx_Type(Integer32):
    """Custom type aisReasonLockRx based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AisReasonLockRx_Type.__name__ = "Integer32"
_AisReasonLockRx_Object = MibScalar
aisReasonLockRx = _AisReasonLockRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 51, 7),
    _AisReasonLockRx_Type()
)
aisReasonLockRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aisReasonLockRx.setStatus("current")
_MplsTpOAMEventRuleTable_Object = MibTable
mplsTpOAMEventRuleTable = _MplsTpOAMEventRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52)
)
if mibBuilder.loadTexts:
    mplsTpOAMEventRuleTable.setStatus("current")
_MplsTpOAMEventRuleEntry_Object = MibTableRow
mplsTpOAMEventRuleEntry = _MplsTpOAMEventRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52, 1)
)
mplsTpOAMEventRuleEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMEventId"),
)
if mibBuilder.loadTexts:
    mplsTpOAMEventRuleEntry.setStatus("current")


class _MplsTpOAMEventRuleId_Type(Integer32):
    """Custom type mplsTpOAMEventRuleId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("loc", 1),
          ("unExpRMepID", 2),
          ("unExpInterval", 3),
          ("unExpMegId", 4),
          ("unExpMegLevel", 5),
          ("rdiRx", 6),
          ("rdiTx", 7),
          ("waitFirstCC", 8),
          ("aisRx", 9),
          ("aisTx", 10),
          ("aisDefect", 11),
          ("eventCacheFull", 12),
          ("oneDmCacheFull", 13),
          ("lockRx", 14),
          ("lockTx", 15),
          ("lockDefect", 16),
          ("crcDefect", 17))
    )


_MplsTpOAMEventRuleId_Type.__name__ = "Integer32"
_MplsTpOAMEventRuleId_Object = MibTableColumn
mplsTpOAMEventRuleId = _MplsTpOAMEventRuleId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52, 1, 1),
    _MplsTpOAMEventRuleId_Type()
)
mplsTpOAMEventRuleId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMEventRuleId.setStatus("current")


class _MplsTpOAMEventLog_Type(Integer32):
    """Custom type mplsTpOAMEventLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsTpOAMEventLog_Type.__name__ = "Integer32"
_MplsTpOAMEventLog_Object = MibTableColumn
mplsTpOAMEventLog = _MplsTpOAMEventLog_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52, 1, 2),
    _MplsTpOAMEventLog_Type()
)
mplsTpOAMEventLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpOAMEventLog.setStatus("current")


class _MplsTpOAMEventTrap_Type(Integer32):
    """Custom type mplsTpOAMEventTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsTpOAMEventTrap_Type.__name__ = "Integer32"
_MplsTpOAMEventTrap_Object = MibTableColumn
mplsTpOAMEventTrap = _MplsTpOAMEventTrap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52, 1, 3),
    _MplsTpOAMEventTrap_Type()
)
mplsTpOAMEventTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpOAMEventTrap.setStatus("current")


class _MplsTpOAMEventCache_Type(Integer32):
    """Custom type mplsTpOAMEventCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsTpOAMEventCache_Type.__name__ = "Integer32"
_MplsTpOAMEventCache_Object = MibTableColumn
mplsTpOAMEventCache = _MplsTpOAMEventCache_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 52, 1, 4),
    _MplsTpOAMEventCache_Type()
)
mplsTpOAMEventCache.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpOAMEventCache.setStatus("current")
_MplsTpSectionTable_Object = MibTable
mplsTpSectionTable = _MplsTpSectionTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53)
)
if mibBuilder.loadTexts:
    mplsTpSectionTable.setStatus("current")
_MplsTpSectionEntry_Object = MibTableRow
mplsTpSectionEntry = _MplsTpSectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1)
)
mplsTpSectionEntry.setIndexNames(
    (0, "SWITCH", "sectionName"),
)
if mibBuilder.loadTexts:
    mplsTpSectionEntry.setStatus("current")


class _SectionName_Type(OctetString):
    """Custom type sectionName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SectionName_Type.__name__ = "OctetString"
_SectionName_Object = MibTableColumn
sectionName = _SectionName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 1),
    _SectionName_Type()
)
sectionName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sectionName.setStatus("current")
_SectionRowStatus_Type = RowStatus
_SectionRowStatus_Object = MibTableColumn
sectionRowStatus = _SectionRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 10),
    _SectionRowStatus_Type()
)
sectionRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sectionRowStatus.setStatus("current")
_SectionPeer_Type = IpAddress
_SectionPeer_Object = MibTableColumn
sectionPeer = _SectionPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 11),
    _SectionPeer_Type()
)
sectionPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionPeer.setStatus("current")


class _SectionOutIfindex_Type(Integer32):
    """Custom type sectionOutIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SectionOutIfindex_Type.__name__ = "Integer32"
_SectionOutIfindex_Object = MibTableColumn
sectionOutIfindex = _SectionOutIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 12),
    _SectionOutIfindex_Type()
)
sectionOutIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionOutIfindex.setStatus("current")


class _SectionOutMemIfindex_Type(Integer32):
    """Custom type sectionOutMemIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SectionOutMemIfindex_Type.__name__ = "Integer32"
_SectionOutMemIfindex_Object = MibTableColumn
sectionOutMemIfindex = _SectionOutMemIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 13),
    _SectionOutMemIfindex_Type()
)
sectionOutMemIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionOutMemIfindex.setStatus("current")


class _SectionDescription_Type(OctetString):
    """Custom type sectionDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_SectionDescription_Type.__name__ = "OctetString"
_SectionDescription_Object = MibTableColumn
sectionDescription = _SectionDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 14),
    _SectionDescription_Type()
)
sectionDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionDescription.setStatus("current")


class _SectionMegLevel_Type(Integer32):
    """Custom type sectionMegLevel based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SectionMegLevel_Type.__name__ = "Integer32"
_SectionMegLevel_Object = MibTableColumn
sectionMegLevel = _SectionMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 19),
    _SectionMegLevel_Type()
)
sectionMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMegLevel.setStatus("current")


class _SectionMegId_Type(OctetString):
    """Custom type sectionMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_SectionMegId_Type.__name__ = "OctetString"
_SectionMegId_Object = MibTableColumn
sectionMegId = _SectionMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 20),
    _SectionMegId_Type()
)
sectionMegId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMegId.setStatus("current")


class _SectionMegIdIcc_Type(Integer32):
    """Custom type sectionMegIdIcc based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_SectionMegIdIcc_Type.__name__ = "Integer32"
_SectionMegIdIcc_Object = MibTableColumn
sectionMegIdIcc = _SectionMegIdIcc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 21),
    _SectionMegIdIcc_Type()
)
sectionMegIdIcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMegIdIcc.setStatus("current")


class _SectionMepId_Type(Integer32):
    """Custom type sectionMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SectionMepId_Type.__name__ = "Integer32"
_SectionMepId_Object = MibTableColumn
sectionMepId = _SectionMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 22),
    _SectionMepId_Type()
)
sectionMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMepId.setStatus("current")


class _SectionMepInterval_Type(Integer32):
    """Custom type sectionMepInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("three-point-three-ms", 1),
          ("ten-ms", 2),
          ("one-hundred-ms", 3),
          ("one-sec", 4),
          ("ten-sec", 5),
          ("one-min", 6),
          ("ten-min", 7))
    )


_SectionMepInterval_Type.__name__ = "Integer32"
_SectionMepInterval_Object = MibTableColumn
sectionMepInterval = _SectionMepInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 23),
    _SectionMepInterval_Type()
)
sectionMepInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMepInterval.setStatus("current")


class _SectionMepExp_Type(Integer32):
    """Custom type sectionMepExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SectionMepExp_Type.__name__ = "Integer32"
_SectionMepExp_Object = MibTableColumn
sectionMepExp = _SectionMepExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 24),
    _SectionMepExp_Type()
)
sectionMepExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionMepExp.setStatus("current")


class _SectionRMepId_Type(Integer32):
    """Custom type sectionRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_SectionRMepId_Type.__name__ = "Integer32"
_SectionRMepId_Object = MibTableColumn
sectionRMepId = _SectionRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 25),
    _SectionRMepId_Type()
)
sectionRMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionRMepId.setStatus("current")


class _SectionCCState_Type(Integer32):
    """Custom type sectionCCState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionCCState_Type.__name__ = "Integer32"
_SectionCCState_Object = MibTableColumn
sectionCCState = _SectionCCState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 26),
    _SectionCCState_Type()
)
sectionCCState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionCCState.setStatus("current")


class _SectionEventCacheSize_Type(Integer32):
    """Custom type sectionEventCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_SectionEventCacheSize_Type.__name__ = "Integer32"
_SectionEventCacheSize_Object = MibTableColumn
sectionEventCacheSize = _SectionEventCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 27),
    _SectionEventCacheSize_Type()
)
sectionEventCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionEventCacheSize.setStatus("current")


class _Section1dmCacheSize_Type(Integer32):
    """Custom type section1dmCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_Section1dmCacheSize_Type.__name__ = "Integer32"
_Section1dmCacheSize_Object = MibTableColumn
section1dmCacheSize = _Section1dmCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 28),
    _Section1dmCacheSize_Type()
)
section1dmCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    section1dmCacheSize.setStatus("current")


class _SectionAisInterval_Type(Integer32):
    """Custom type sectionAisInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_SectionAisInterval_Type.__name__ = "Integer32"
_SectionAisInterval_Object = MibTableColumn
sectionAisInterval = _SectionAisInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 29),
    _SectionAisInterval_Type()
)
sectionAisInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionAisInterval.setStatus("current")


class _SectionLck_Type(Integer32):
    """Custom type sectionLck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionLck_Type.__name__ = "Integer32"
_SectionLck_Object = MibTableColumn
sectionLck = _SectionLck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 31),
    _SectionLck_Type()
)
sectionLck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLck.setStatus("current")


class _SectionLckInterval_Type(Integer32):
    """Custom type sectionLckInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_SectionLckInterval_Type.__name__ = "Integer32"
_SectionLckInterval_Object = MibTableColumn
sectionLckInterval = _SectionLckInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 32),
    _SectionLckInterval_Type()
)
sectionLckInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLckInterval.setStatus("current")


class _SectionState_Type(Integer32):
    """Custom type sectionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("fail", 1),
          ("ok", 2))
    )


_SectionState_Type.__name__ = "Integer32"
_SectionState_Object = MibTableColumn
sectionState = _SectionState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 33),
    _SectionState_Type()
)
sectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionState.setStatus("current")


class _SectionEvtLOC_Type(Integer32):
    """Custom type sectionEvtLOC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtLOC_Type.__name__ = "Integer32"
_SectionEvtLOC_Object = MibTableColumn
sectionEvtLOC = _SectionEvtLOC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 34),
    _SectionEvtLOC_Type()
)
sectionEvtLOC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtLOC.setStatus("current")


class _SectionEvtUMP_Type(Integer32):
    """Custom type sectionEvtUMP based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtUMP_Type.__name__ = "Integer32"
_SectionEvtUMP_Object = MibTableColumn
sectionEvtUMP = _SectionEvtUMP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 35),
    _SectionEvtUMP_Type()
)
sectionEvtUMP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtUMP.setStatus("current")


class _SectionEvtUIN_Type(Integer32):
    """Custom type sectionEvtUIN based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtUIN_Type.__name__ = "Integer32"
_SectionEvtUIN_Object = MibTableColumn
sectionEvtUIN = _SectionEvtUIN_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 36),
    _SectionEvtUIN_Type()
)
sectionEvtUIN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtUIN.setStatus("current")


class _SectionEvtUMG_Type(Integer32):
    """Custom type sectionEvtUMG based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtUMG_Type.__name__ = "Integer32"
_SectionEvtUMG_Object = MibTableColumn
sectionEvtUMG = _SectionEvtUMG_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 37),
    _SectionEvtUMG_Type()
)
sectionEvtUMG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtUMG.setStatus("current")


class _SectionEvtULV_Type(Integer32):
    """Custom type sectionEvtULV based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtULV_Type.__name__ = "Integer32"
_SectionEvtULV_Object = MibTableColumn
sectionEvtULV = _SectionEvtULV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 38),
    _SectionEvtULV_Type()
)
sectionEvtULV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtULV.setStatus("current")


class _SectionEvtW1ST_Type(Integer32):
    """Custom type sectionEvtW1ST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtW1ST_Type.__name__ = "Integer32"
_SectionEvtW1ST_Object = MibTableColumn
sectionEvtW1ST = _SectionEvtW1ST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 39),
    _SectionEvtW1ST_Type()
)
sectionEvtW1ST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtW1ST.setStatus("current")


class _SectionEvtRDIR_Type(Integer32):
    """Custom type sectionEvtRDIR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtRDIR_Type.__name__ = "Integer32"
_SectionEvtRDIR_Object = MibTableColumn
sectionEvtRDIR = _SectionEvtRDIR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 40),
    _SectionEvtRDIR_Type()
)
sectionEvtRDIR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtRDIR.setStatus("current")


class _SectionEvtRDIT_Type(Integer32):
    """Custom type sectionEvtRDIT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtRDIT_Type.__name__ = "Integer32"
_SectionEvtRDIT_Object = MibTableColumn
sectionEvtRDIT = _SectionEvtRDIT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 41),
    _SectionEvtRDIT_Type()
)
sectionEvtRDIT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtRDIT.setStatus("current")


class _SectionEvtAISR_Type(Integer32):
    """Custom type sectionEvtAISR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtAISR_Type.__name__ = "Integer32"
_SectionEvtAISR_Object = MibTableColumn
sectionEvtAISR = _SectionEvtAISR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 42),
    _SectionEvtAISR_Type()
)
sectionEvtAISR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtAISR.setStatus("current")


class _SectionEvtAIST_Type(Integer32):
    """Custom type sectionEvtAIST based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtAIST_Type.__name__ = "Integer32"
_SectionEvtAIST_Object = MibTableColumn
sectionEvtAIST = _SectionEvtAIST_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 43),
    _SectionEvtAIST_Type()
)
sectionEvtAIST.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtAIST.setStatus("current")


class _SectionEvtAISD_Type(Integer32):
    """Custom type sectionEvtAISD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtAISD_Type.__name__ = "Integer32"
_SectionEvtAISD_Object = MibTableColumn
sectionEvtAISD = _SectionEvtAISD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 44),
    _SectionEvtAISD_Type()
)
sectionEvtAISD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtAISD.setStatus("current")


class _SectionEvtLCKR_Type(Integer32):
    """Custom type sectionEvtLCKR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtLCKR_Type.__name__ = "Integer32"
_SectionEvtLCKR_Object = MibTableColumn
sectionEvtLCKR = _SectionEvtLCKR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 45),
    _SectionEvtLCKR_Type()
)
sectionEvtLCKR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtLCKR.setStatus("current")


class _SectionEvtLCKT_Type(Integer32):
    """Custom type sectionEvtLCKT based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtLCKT_Type.__name__ = "Integer32"
_SectionEvtLCKT_Object = MibTableColumn
sectionEvtLCKT = _SectionEvtLCKT_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 46),
    _SectionEvtLCKT_Type()
)
sectionEvtLCKT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtLCKT.setStatus("current")


class _SectionEvtLCKD_Type(Integer32):
    """Custom type sectionEvtLCKD based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtLCKD_Type.__name__ = "Integer32"
_SectionEvtLCKD_Object = MibTableColumn
sectionEvtLCKD = _SectionEvtLCKD_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 47),
    _SectionEvtLCKD_Type()
)
sectionEvtLCKD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtLCKD.setStatus("current")


class _SectionLckTxEnable_Type(Integer32):
    """Custom type sectionLckTxEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionLckTxEnable_Type.__name__ = "Integer32"
_SectionLckTxEnable_Object = MibTableColumn
sectionLckTxEnable = _SectionLckTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 48),
    _SectionLckTxEnable_Type()
)
sectionLckTxEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLckTxEnable.setStatus("current")


class _SectionEvtCRC_Type(Integer32):
    """Custom type sectionEvtCRC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SectionEvtCRC_Type.__name__ = "Integer32"
_SectionEvtCRC_Object = MibTableColumn
sectionEvtCRC = _SectionEvtCRC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 49),
    _SectionEvtCRC_Type()
)
sectionEvtCRC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionEvtCRC.setStatus("current")


class _SectionOAMState_Type(Integer32):
    """Custom type sectionOAMState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("fail", 1),
          ("ok", 2))
    )


_SectionOAMState_Type.__name__ = "Integer32"
_SectionOAMState_Object = MibTableColumn
sectionOAMState = _SectionOAMState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 50),
    _SectionOAMState_Type()
)
sectionOAMState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionOAMState.setStatus("current")


class _SectionLmDualExp_Type(Integer32):
    """Custom type sectionLmDualExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_SectionLmDualExp_Type.__name__ = "Integer32"
_SectionLmDualExp_Object = MibTableColumn
sectionLmDualExp = _SectionLmDualExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 61),
    _SectionLmDualExp_Type()
)
sectionLmDualExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmDualExp.setStatus("current")


class _SectionLmDualStatInterval_Type(Integer32):
    """Custom type sectionLmDualStatInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SectionLmDualStatInterval_Type.__name__ = "Integer32"
_SectionLmDualStatInterval_Object = MibTableColumn
sectionLmDualStatInterval = _SectionLmDualStatInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 62),
    _SectionLmDualStatInterval_Type()
)
sectionLmDualStatInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmDualStatInterval.setStatus("current")


class _SectionLmDualCacheSize_Type(Integer32):
    """Custom type sectionLmDualCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_SectionLmDualCacheSize_Type.__name__ = "Integer32"
_SectionLmDualCacheSize_Object = MibTableColumn
sectionLmDualCacheSize = _SectionLmDualCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 63),
    _SectionLmDualCacheSize_Type()
)
sectionLmDualCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmDualCacheSize.setStatus("current")


class _SectionLmSingleExp_Type(Integer32):
    """Custom type sectionLmSingleExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_SectionLmSingleExp_Type.__name__ = "Integer32"
_SectionLmSingleExp_Object = MibTableColumn
sectionLmSingleExp = _SectionLmSingleExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 66),
    _SectionLmSingleExp_Type()
)
sectionLmSingleExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmSingleExp.setStatus("current")


class _SectionLmSingleInterval_Type(Integer32):
    """Custom type sectionLmSingleInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_SectionLmSingleInterval_Type.__name__ = "Integer32"
_SectionLmSingleInterval_Object = MibTableColumn
sectionLmSingleInterval = _SectionLmSingleInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 67),
    _SectionLmSingleInterval_Type()
)
sectionLmSingleInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmSingleInterval.setStatus("current")


class _SectionLmSingleCacheSize_Type(Integer32):
    """Custom type sectionLmSingleCacheSize based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_SectionLmSingleCacheSize_Type.__name__ = "Integer32"
_SectionLmSingleCacheSize_Object = MibTableColumn
sectionLmSingleCacheSize = _SectionLmSingleCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 68),
    _SectionLmSingleCacheSize_Type()
)
sectionLmSingleCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmSingleCacheSize.setStatus("current")


class _SectionLmEnableState_Type(Integer32):
    """Custom type sectionLmEnableState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("enable-dual", 1),
          ("enable-single", 2),
          ("disable", 3))
    )


_SectionLmEnableState_Type.__name__ = "Integer32"
_SectionLmEnableState_Object = MibTableColumn
sectionLmEnableState = _SectionLmEnableState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 70),
    _SectionLmEnableState_Type()
)
sectionLmEnableState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmEnableState.setStatus("current")


class _SectionLmLocalLossThreshold_Type(Integer32):
    """Custom type sectionLmLocalLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SectionLmLocalLossThreshold_Type.__name__ = "Integer32"
_SectionLmLocalLossThreshold_Object = MibTableColumn
sectionLmLocalLossThreshold = _SectionLmLocalLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 71),
    _SectionLmLocalLossThreshold_Type()
)
sectionLmLocalLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmLocalLossThreshold.setStatus("current")


class _SectionLmRemoteLossThreshold_Type(Integer32):
    """Custom type sectionLmRemoteLossThreshold based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SectionLmRemoteLossThreshold_Type.__name__ = "Integer32"
_SectionLmRemoteLossThreshold_Object = MibTableColumn
sectionLmRemoteLossThreshold = _SectionLmRemoteLossThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 72),
    _SectionLmRemoteLossThreshold_Type()
)
sectionLmRemoteLossThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sectionLmRemoteLossThreshold.setStatus("current")


class _SectionLmSingleRxCount_Type(Integer32):
    """Custom type sectionLmSingleRxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SectionLmSingleRxCount_Type.__name__ = "Integer32"
_SectionLmSingleRxCount_Object = MibTableColumn
sectionLmSingleRxCount = _SectionLmSingleRxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 73),
    _SectionLmSingleRxCount_Type()
)
sectionLmSingleRxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLmSingleRxCount.setStatus("current")


class _SectionLmSingleTxCount_Type(Integer32):
    """Custom type sectionLmSingleTxCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SectionLmSingleTxCount_Type.__name__ = "Integer32"
_SectionLmSingleTxCount_Object = MibTableColumn
sectionLmSingleTxCount = _SectionLmSingleTxCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 74),
    _SectionLmSingleTxCount_Type()
)
sectionLmSingleTxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLmSingleTxCount.setStatus("current")


class _SectionLmSingleSuccessRate_Type(Integer32):
    """Custom type sectionLmSingleSuccessRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SectionLmSingleSuccessRate_Type.__name__ = "Integer32"
_SectionLmSingleSuccessRate_Object = MibTableColumn
sectionLmSingleSuccessRate = _SectionLmSingleSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 75),
    _SectionLmSingleSuccessRate_Type()
)
sectionLmSingleSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLmSingleSuccessRate.setStatus("current")


class _SectionLmSingleStartTime_Type(OctetString):
    """Custom type sectionLmSingleStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_SectionLmSingleStartTime_Type.__name__ = "OctetString"
_SectionLmSingleStartTime_Object = MibTableColumn
sectionLmSingleStartTime = _SectionLmSingleStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 76),
    _SectionLmSingleStartTime_Type()
)
sectionLmSingleStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLmSingleStartTime.setStatus("current")


class _SectionLmSingleEndTime_Type(OctetString):
    """Custom type sectionLmSingleEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_SectionLmSingleEndTime_Type.__name__ = "OctetString"
_SectionLmSingleEndTime_Object = MibTableColumn
sectionLmSingleEndTime = _SectionLmSingleEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 53, 1, 77),
    _SectionLmSingleEndTime_Type()
)
sectionLmSingleEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sectionLmSingleEndTime.setStatus("current")
_MplsTpSectionAisClientTable_Object = MibTable
mplsTpSectionAisClientTable = _MplsTpSectionAisClientTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 54)
)
if mibBuilder.loadTexts:
    mplsTpSectionAisClientTable.setStatus("current")
_MplsTpSectionAisClientEntry_Object = MibTableRow
mplsTpSectionAisClientEntry = _MplsTpSectionAisClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 54, 1)
)
mplsTpSectionAisClientEntry.setIndexNames(
    (0, "SWITCH", "sectionName"),
    (0, "SWITCH", "sectionAisClientBindType"),
    (0, "SWITCH", "sectionAisClientBindName"),
)
if mibBuilder.loadTexts:
    mplsTpSectionAisClientEntry.setStatus("current")


class _SectionAisClientBindType_Type(Integer32):
    """Custom type sectionAisClientBindType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lsp-p", 1),
          ("lsp-pe", 2))
    )


_SectionAisClientBindType_Type.__name__ = "Integer32"
_SectionAisClientBindType_Object = MibTableColumn
sectionAisClientBindType = _SectionAisClientBindType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 54, 1, 1),
    _SectionAisClientBindType_Type()
)
sectionAisClientBindType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sectionAisClientBindType.setStatus("current")


class _SectionAisClientBindName_Type(OctetString):
    """Custom type sectionAisClientBindName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_SectionAisClientBindName_Type.__name__ = "OctetString"
_SectionAisClientBindName_Object = MibTableColumn
sectionAisClientBindName = _SectionAisClientBindName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 54, 1, 2),
    _SectionAisClientBindName_Type()
)
sectionAisClientBindName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sectionAisClientBindName.setStatus("current")
_SectionAisClientRowStatus_Type = RowStatus
_SectionAisClientRowStatus_Object = MibTableColumn
sectionAisClientRowStatus = _SectionAisClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 54, 1, 10),
    _SectionAisClientRowStatus_Type()
)
sectionAisClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sectionAisClientRowStatus.setStatus("current")
_MplsTpSectionLckClientTable_Object = MibTable
mplsTpSectionLckClientTable = _MplsTpSectionLckClientTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 55)
)
if mibBuilder.loadTexts:
    mplsTpSectionLckClientTable.setStatus("current")
_MplsTpSectionLckClientEntry_Object = MibTableRow
mplsTpSectionLckClientEntry = _MplsTpSectionLckClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 55, 1)
)
mplsTpSectionLckClientEntry.setIndexNames(
    (0, "SWITCH", "sectionName"),
    (0, "SWITCH", "sectionLckClientBindType"),
    (0, "SWITCH", "sectionLckClientBindName"),
)
if mibBuilder.loadTexts:
    mplsTpSectionLckClientEntry.setStatus("current")


class _SectionLckClientBindType_Type(Integer32):
    """Custom type sectionLckClientBindType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lsp-p", 1),
          ("lsp-pe", 2))
    )


_SectionLckClientBindType_Type.__name__ = "Integer32"
_SectionLckClientBindType_Object = MibTableColumn
sectionLckClientBindType = _SectionLckClientBindType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 55, 1, 1),
    _SectionLckClientBindType_Type()
)
sectionLckClientBindType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sectionLckClientBindType.setStatus("current")


class _SectionLckClientBindName_Type(OctetString):
    """Custom type sectionLckClientBindName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_SectionLckClientBindName_Type.__name__ = "OctetString"
_SectionLckClientBindName_Object = MibTableColumn
sectionLckClientBindName = _SectionLckClientBindName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 55, 1, 2),
    _SectionLckClientBindName_Type()
)
sectionLckClientBindName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sectionLckClientBindName.setStatus("current")
_SectionLckClientRowStatus_Type = RowStatus
_SectionLckClientRowStatus_Object = MibTableColumn
sectionLckClientRowStatus = _SectionLckClientRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 55, 1, 10),
    _SectionLckClientRowStatus_Type()
)
sectionLckClientRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    sectionLckClientRowStatus.setStatus("current")


class _MplsTpOAMClearCache_Type(Integer32):
    """Custom type mplsTpOAMClearCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("event-cache", 1),
          ("onedm-cache", 2),
          ("statistics-cache", 3))
    )


_MplsTpOAMClearCache_Type.__name__ = "Integer32"
_MplsTpOAMClearCache_Object = MibScalar
mplsTpOAMClearCache = _MplsTpOAMClearCache_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 56),
    _MplsTpOAMClearCache_Type()
)
mplsTpOAMClearCache.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpOAMClearCache.setStatus("current")
_MplsTpOAMLoopbackDiscoveryTable_Object = MibTable
mplsTpOAMLoopbackDiscoveryTable = _MplsTpOAMLoopbackDiscoveryTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60)
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackDiscoveryTable.setStatus("current")
_MplsTpOAMLoopbackDiscoveryEntry_Object = MibTableRow
mplsTpOAMLoopbackDiscoveryEntry = _MplsTpOAMLoopbackDiscoveryEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1)
)
mplsTpOAMLoopbackDiscoveryEntry.setIndexNames(
    (0, "SWITCH", "oamDiscoveryIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackDiscoveryEntry.setStatus("current")


class _OamDiscoveryIndex_Type(Integer32):
    """Custom type oamDiscoveryIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_OamDiscoveryIndex_Type.__name__ = "Integer32"
_OamDiscoveryIndex_Object = MibTableColumn
oamDiscoveryIndex = _OamDiscoveryIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 1),
    _OamDiscoveryIndex_Type()
)
oamDiscoveryIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamDiscoveryIndex.setStatus("current")


class _OamDiscoveryServiceType_Type(Integer32):
    """Custom type oamDiscoveryServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_OamDiscoveryServiceType_Type.__name__ = "Integer32"
_OamDiscoveryServiceType_Object = MibTableColumn
oamDiscoveryServiceType = _OamDiscoveryServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 2),
    _OamDiscoveryServiceType_Type()
)
oamDiscoveryServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryServiceType.setStatus("current")


class _OamDiscoveryServiceName_Type(OctetString):
    """Custom type oamDiscoveryServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_OamDiscoveryServiceName_Type.__name__ = "OctetString"
_OamDiscoveryServiceName_Object = MibTableColumn
oamDiscoveryServiceName = _OamDiscoveryServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 3),
    _OamDiscoveryServiceName_Type()
)
oamDiscoveryServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryServiceName.setStatus("current")


class _OamDiscoveryStartTTL_Type(Integer32):
    """Custom type oamDiscoveryStartTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamDiscoveryStartTTL_Type.__name__ = "Integer32"
_OamDiscoveryStartTTL_Object = MibTableColumn
oamDiscoveryStartTTL = _OamDiscoveryStartTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 5),
    _OamDiscoveryStartTTL_Type()
)
oamDiscoveryStartTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryStartTTL.setStatus("current")


class _OamDiscoveryEndTTL_Type(Integer32):
    """Custom type oamDiscoveryEndTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamDiscoveryEndTTL_Type.__name__ = "Integer32"
_OamDiscoveryEndTTL_Object = MibTableColumn
oamDiscoveryEndTTL = _OamDiscoveryEndTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 6),
    _OamDiscoveryEndTTL_Type()
)
oamDiscoveryEndTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryEndTTL.setStatus("current")


class _OamDiscoveryMepIdTlv_Type(Integer32):
    """Custom type oamDiscoveryMepIdTlv based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("request", 1),
          ("no-request", 2))
    )


_OamDiscoveryMepIdTlv_Type.__name__ = "Integer32"
_OamDiscoveryMepIdTlv_Object = MibTableColumn
oamDiscoveryMepIdTlv = _OamDiscoveryMepIdTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 7),
    _OamDiscoveryMepIdTlv_Type()
)
oamDiscoveryMepIdTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryMepIdTlv.setStatus("current")


class _OamDiscoveryDataTlv_Type(Integer32):
    """Custom type oamDiscoveryDataTlv based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1500),
    )


_OamDiscoveryDataTlv_Type.__name__ = "Integer32"
_OamDiscoveryDataTlv_Object = MibTableColumn
oamDiscoveryDataTlv = _OamDiscoveryDataTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 8),
    _OamDiscoveryDataTlv_Type()
)
oamDiscoveryDataTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryDataTlv.setStatus("current")


class _OamDiscoveryTimeout_Type(Integer32):
    """Custom type oamDiscoveryTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamDiscoveryTimeout_Type.__name__ = "Integer32"
_OamDiscoveryTimeout_Object = MibTableColumn
oamDiscoveryTimeout = _OamDiscoveryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 9),
    _OamDiscoveryTimeout_Type()
)
oamDiscoveryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryTimeout.setStatus("current")


class _OamDiscoveryExp_Type(Integer32):
    """Custom type oamDiscoveryExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OamDiscoveryExp_Type.__name__ = "Integer32"
_OamDiscoveryExp_Object = MibTableColumn
oamDiscoveryExp = _OamDiscoveryExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 10),
    _OamDiscoveryExp_Type()
)
oamDiscoveryExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryExp.setStatus("current")


class _OamDiscoveryTstTlv_Type(Integer32):
    """Custom type oamDiscoveryTstTlv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1500),
    )


_OamDiscoveryTstTlv_Type.__name__ = "Integer32"
_OamDiscoveryTstTlv_Object = MibTableColumn
oamDiscoveryTstTlv = _OamDiscoveryTstTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 11),
    _OamDiscoveryTstTlv_Type()
)
oamDiscoveryTstTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryTstTlv.setStatus("current")


class _OamDiscoveryTstPattern_Type(Integer32):
    """Custom type oamDiscoveryTstPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_OamDiscoveryTstPattern_Type.__name__ = "Integer32"
_OamDiscoveryTstPattern_Object = MibTableColumn
oamDiscoveryTstPattern = _OamDiscoveryTstPattern_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 12),
    _OamDiscoveryTstPattern_Type()
)
oamDiscoveryTstPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDiscoveryTstPattern.setStatus("current")
_OamDiscoveryRowstatus_Type = RowStatus
_OamDiscoveryRowstatus_Object = MibTableColumn
oamDiscoveryRowstatus = _OamDiscoveryRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 15),
    _OamDiscoveryRowstatus_Type()
)
oamDiscoveryRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oamDiscoveryRowstatus.setStatus("current")


class _OamDiscoveryOperState_Type(Integer32):
    """Custom type oamDiscoveryOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_OamDiscoveryOperState_Type.__name__ = "Integer32"
_OamDiscoveryOperState_Object = MibTableColumn
oamDiscoveryOperState = _OamDiscoveryOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 16),
    _OamDiscoveryOperState_Type()
)
oamDiscoveryOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryOperState.setStatus("current")
_OamDiscoveryTimeSpent_Type = Integer32
_OamDiscoveryTimeSpent_Object = MibTableColumn
oamDiscoveryTimeSpent = _OamDiscoveryTimeSpent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 17),
    _OamDiscoveryTimeSpent_Type()
)
oamDiscoveryTimeSpent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryTimeSpent.setStatus("current")
_OamDiscoverySuccessRate_Type = Integer32
_OamDiscoverySuccessRate_Object = MibTableColumn
oamDiscoverySuccessRate = _OamDiscoverySuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 60, 1, 18),
    _OamDiscoverySuccessRate_Type()
)
oamDiscoverySuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoverySuccessRate.setStatus("current")
_MplsTpOAMDiscoveryResultTable_Object = MibTable
mplsTpOAMDiscoveryResultTable = _MplsTpOAMDiscoveryResultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61)
)
if mibBuilder.loadTexts:
    mplsTpOAMDiscoveryResultTable.setStatus("current")
_MplsTpOAMDiscoveryResultEntry_Object = MibTableRow
mplsTpOAMDiscoveryResultEntry = _MplsTpOAMDiscoveryResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1)
)
mplsTpOAMDiscoveryResultEntry.setIndexNames(
    (0, "SWITCH", "oamDiscoveryResultTTL"),
)
if mibBuilder.loadTexts:
    mplsTpOAMDiscoveryResultEntry.setStatus("current")
_OamDiscoveryResultTTL_Type = Integer32
_OamDiscoveryResultTTL_Object = MibTableColumn
oamDiscoveryResultTTL = _OamDiscoveryResultTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 1),
    _OamDiscoveryResultTTL_Type()
)
oamDiscoveryResultTTL.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamDiscoveryResultTTL.setStatus("current")


class _OamDiscoveryResultReplyType_Type(Integer32):
    """Custom type oamDiscoveryResultReplyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mip", 1),
          ("mep", 2))
    )


_OamDiscoveryResultReplyType_Type.__name__ = "Integer32"
_OamDiscoveryResultReplyType_Object = MibTableColumn
oamDiscoveryResultReplyType = _OamDiscoveryResultReplyType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 2),
    _OamDiscoveryResultReplyType_Type()
)
oamDiscoveryResultReplyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryResultReplyType.setStatus("current")
_OamDiscoveryResultMepId_Type = Integer32
_OamDiscoveryResultMepId_Object = MibTableColumn
oamDiscoveryResultMepId = _OamDiscoveryResultMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 3),
    _OamDiscoveryResultMepId_Type()
)
oamDiscoveryResultMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryResultMepId.setStatus("current")
_OamDiscoveryResultICC_Type = OctetString
_OamDiscoveryResultICC_Object = MibTableColumn
oamDiscoveryResultICC = _OamDiscoveryResultICC_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 4),
    _OamDiscoveryResultICC_Type()
)
oamDiscoveryResultICC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryResultICC.setStatus("current")
_OamDiscoveryResultNodeId_Type = IpAddress
_OamDiscoveryResultNodeId_Object = MibTableColumn
oamDiscoveryResultNodeId = _OamDiscoveryResultNodeId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 5),
    _OamDiscoveryResultNodeId_Type()
)
oamDiscoveryResultNodeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryResultNodeId.setStatus("current")
_OamDiscoveryResultIfNum_Type = Integer32
_OamDiscoveryResultIfNum_Object = MibTableColumn
oamDiscoveryResultIfNum = _OamDiscoveryResultIfNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 61, 1, 6),
    _OamDiscoveryResultIfNum_Type()
)
oamDiscoveryResultIfNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDiscoveryResultIfNum.setStatus("current")
_MplsTpOAMLoopbackRmepTable_Object = MibTable
mplsTpOAMLoopbackRmepTable = _MplsTpOAMLoopbackRmepTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62)
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackRmepTable.setStatus("current")
_MplsTpOAMLoopbackRmepEntry_Object = MibTableRow
mplsTpOAMLoopbackRmepEntry = _MplsTpOAMLoopbackRmepEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1)
)
mplsTpOAMLoopbackRmepEntry.setIndexNames(
    (0, "SWITCH", "oamRmepIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackRmepEntry.setStatus("current")


class _OamRmepIndex_Type(Integer32):
    """Custom type oamRmepIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_OamRmepIndex_Type.__name__ = "Integer32"
_OamRmepIndex_Object = MibTableColumn
oamRmepIndex = _OamRmepIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 1),
    _OamRmepIndex_Type()
)
oamRmepIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamRmepIndex.setStatus("current")


class _OamRmepServiceType_Type(Integer32):
    """Custom type oamRmepServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_OamRmepServiceType_Type.__name__ = "Integer32"
_OamRmepServiceType_Object = MibTableColumn
oamRmepServiceType = _OamRmepServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 2),
    _OamRmepServiceType_Type()
)
oamRmepServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepServiceType.setStatus("current")


class _OamRmepServiceName_Type(OctetString):
    """Custom type oamRmepServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_OamRmepServiceName_Type.__name__ = "OctetString"
_OamRmepServiceName_Object = MibTableColumn
oamRmepServiceName = _OamRmepServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 3),
    _OamRmepServiceName_Type()
)
oamRmepServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepServiceName.setStatus("current")


class _OamRmepId_Type(Integer32):
    """Custom type oamRmepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_OamRmepId_Type.__name__ = "Integer32"
_OamRmepId_Object = MibTableColumn
oamRmepId = _OamRmepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 5),
    _OamRmepId_Type()
)
oamRmepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepId.setStatus("current")


class _OamRmepMepIdTlv_Type(Integer32):
    """Custom type oamRmepMepIdTlv based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("request", 1),
          ("no-request", 2))
    )


_OamRmepMepIdTlv_Type.__name__ = "Integer32"
_OamRmepMepIdTlv_Object = MibTableColumn
oamRmepMepIdTlv = _OamRmepMepIdTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 6),
    _OamRmepMepIdTlv_Type()
)
oamRmepMepIdTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepMepIdTlv.setStatus("current")


class _OamRmepDataTlv_Type(Integer32):
    """Custom type oamRmepDataTlv based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
    )


_OamRmepDataTlv_Type.__name__ = "Integer32"
_OamRmepDataTlv_Object = MibTableColumn
oamRmepDataTlv = _OamRmepDataTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 7),
    _OamRmepDataTlv_Type()
)
oamRmepDataTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepDataTlv.setStatus("current")


class _OamRmepTimeout_Type(Integer32):
    """Custom type oamRmepTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamRmepTimeout_Type.__name__ = "Integer32"
_OamRmepTimeout_Object = MibTableColumn
oamRmepTimeout = _OamRmepTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 8),
    _OamRmepTimeout_Type()
)
oamRmepTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepTimeout.setStatus("current")


class _OamRmepRepeat_Type(Integer32):
    """Custom type oamRmepRepeat based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamRmepRepeat_Type.__name__ = "Integer32"
_OamRmepRepeat_Object = MibTableColumn
oamRmepRepeat = _OamRmepRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 9),
    _OamRmepRepeat_Type()
)
oamRmepRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepRepeat.setStatus("current")


class _OamRmepExp_Type(Integer32):
    """Custom type oamRmepExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OamRmepExp_Type.__name__ = "Integer32"
_OamRmepExp_Object = MibTableColumn
oamRmepExp = _OamRmepExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 10),
    _OamRmepExp_Type()
)
oamRmepExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamRmepExp.setStatus("current")
_OamRmepRowstatus_Type = RowStatus
_OamRmepRowstatus_Object = MibTableColumn
oamRmepRowstatus = _OamRmepRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 15),
    _OamRmepRowstatus_Type()
)
oamRmepRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oamRmepRowstatus.setStatus("current")


class _OamRmepOperState_Type(Integer32):
    """Custom type oamRmepOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_OamRmepOperState_Type.__name__ = "Integer32"
_OamRmepOperState_Object = MibTableColumn
oamRmepOperState = _OamRmepOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 16),
    _OamRmepOperState_Type()
)
oamRmepOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamRmepOperState.setStatus("current")
_OamRmepTimeSpent_Type = Integer32
_OamRmepTimeSpent_Object = MibTableColumn
oamRmepTimeSpent = _OamRmepTimeSpent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 17),
    _OamRmepTimeSpent_Type()
)
oamRmepTimeSpent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamRmepTimeSpent.setStatus("current")
_OamRmepSuccessRate_Type = Integer32
_OamRmepSuccessRate_Object = MibTableColumn
oamRmepSuccessRate = _OamRmepSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 62, 1, 18),
    _OamRmepSuccessRate_Type()
)
oamRmepSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamRmepSuccessRate.setStatus("current")
_MplsTpOAMLoopbackMipTable_Object = MibTable
mplsTpOAMLoopbackMipTable = _MplsTpOAMLoopbackMipTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64)
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackMipTable.setStatus("current")
_MplsTpOAMLoopbackMipEntry_Object = MibTableRow
mplsTpOAMLoopbackMipEntry = _MplsTpOAMLoopbackMipEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1)
)
mplsTpOAMLoopbackMipEntry.setIndexNames(
    (0, "SWITCH", "oamMipIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLoopbackMipEntry.setStatus("current")


class _OamMipIndex_Type(Integer32):
    """Custom type oamMipIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_OamMipIndex_Type.__name__ = "Integer32"
_OamMipIndex_Object = MibTableColumn
oamMipIndex = _OamMipIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 1),
    _OamMipIndex_Type()
)
oamMipIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamMipIndex.setStatus("current")


class _OamMipServiceType_Type(Integer32):
    """Custom type oamMipServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_OamMipServiceType_Type.__name__ = "Integer32"
_OamMipServiceType_Object = MibTableColumn
oamMipServiceType = _OamMipServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 2),
    _OamMipServiceType_Type()
)
oamMipServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipServiceType.setStatus("current")


class _OamMipServiceName_Type(OctetString):
    """Custom type oamMipServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_OamMipServiceName_Type.__name__ = "OctetString"
_OamMipServiceName_Object = MibTableColumn
oamMipServiceName = _OamMipServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 3),
    _OamMipServiceName_Type()
)
oamMipServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipServiceName.setStatus("current")


class _OamMipTTL_Type(Integer32):
    """Custom type oamMipTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamMipTTL_Type.__name__ = "Integer32"
_OamMipTTL_Object = MibTableColumn
oamMipTTL = _OamMipTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 5),
    _OamMipTTL_Type()
)
oamMipTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipTTL.setStatus("current")
_OamMipNodeId_Type = IpAddress
_OamMipNodeId_Object = MibTableColumn
oamMipNodeId = _OamMipNodeId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 6),
    _OamMipNodeId_Type()
)
oamMipNodeId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipNodeId.setStatus("current")


class _OamMipMepIdTlv_Type(Integer32):
    """Custom type oamMipMepIdTlv based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("request", 1),
          ("no-request", 2))
    )


_OamMipMepIdTlv_Type.__name__ = "Integer32"
_OamMipMepIdTlv_Object = MibTableColumn
oamMipMepIdTlv = _OamMipMepIdTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 7),
    _OamMipMepIdTlv_Type()
)
oamMipMepIdTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipMepIdTlv.setStatus("current")


class _OamMipDataTlv_Type(Integer32):
    """Custom type oamMipDataTlv based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
    )


_OamMipDataTlv_Type.__name__ = "Integer32"
_OamMipDataTlv_Object = MibTableColumn
oamMipDataTlv = _OamMipDataTlv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 8),
    _OamMipDataTlv_Type()
)
oamMipDataTlv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipDataTlv.setStatus("current")


class _OamMipTimeout_Type(Integer32):
    """Custom type oamMipTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamMipTimeout_Type.__name__ = "Integer32"
_OamMipTimeout_Object = MibTableColumn
oamMipTimeout = _OamMipTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 9),
    _OamMipTimeout_Type()
)
oamMipTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipTimeout.setStatus("current")


class _OamMipRepeat_Type(Integer32):
    """Custom type oamMipRepeat based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamMipRepeat_Type.__name__ = "Integer32"
_OamMipRepeat_Object = MibTableColumn
oamMipRepeat = _OamMipRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 10),
    _OamMipRepeat_Type()
)
oamMipRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipRepeat.setStatus("current")


class _OamMipExp_Type(Integer32):
    """Custom type oamMipExp based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OamMipExp_Type.__name__ = "Integer32"
_OamMipExp_Object = MibTableColumn
oamMipExp = _OamMipExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 11),
    _OamMipExp_Type()
)
oamMipExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamMipExp.setStatus("current")
_OamMipRowstatus_Type = RowStatus
_OamMipRowstatus_Object = MibTableColumn
oamMipRowstatus = _OamMipRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 15),
    _OamMipRowstatus_Type()
)
oamMipRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oamMipRowstatus.setStatus("current")


class _OamMipOperState_Type(Integer32):
    """Custom type oamMipOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_OamMipOperState_Type.__name__ = "Integer32"
_OamMipOperState_Object = MibTableColumn
oamMipOperState = _OamMipOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 16),
    _OamMipOperState_Type()
)
oamMipOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamMipOperState.setStatus("current")
_OamMipTimeSpent_Type = Integer32
_OamMipTimeSpent_Object = MibTableColumn
oamMipTimeSpent = _OamMipTimeSpent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 17),
    _OamMipTimeSpent_Type()
)
oamMipTimeSpent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamMipTimeSpent.setStatus("current")
_OamMipSuccessRate_Type = Integer32
_OamMipSuccessRate_Object = MibTableColumn
oamMipSuccessRate = _OamMipSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 64, 1, 18),
    _OamMipSuccessRate_Type()
)
oamMipSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamMipSuccessRate.setStatus("current")
_MplsTpOAM1dmRequestTable_Object = MibTable
mplsTpOAM1dmRequestTable = _MplsTpOAM1dmRequestTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65)
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmRequestTable.setStatus("current")
_MplsTpOAM1dmRequestEntry_Object = MibTableRow
mplsTpOAM1dmRequestEntry = _MplsTpOAM1dmRequestEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1)
)
mplsTpOAM1dmRequestEntry.setIndexNames(
    (0, "SWITCH", "oam1dmReqIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmRequestEntry.setStatus("current")


class _Oam1dmReqIndex_Type(Integer32):
    """Custom type oam1dmReqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_Oam1dmReqIndex_Type.__name__ = "Integer32"
_Oam1dmReqIndex_Object = MibTableColumn
oam1dmReqIndex = _Oam1dmReqIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 1),
    _Oam1dmReqIndex_Type()
)
oam1dmReqIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oam1dmReqIndex.setStatus("current")


class _Oam1dmReqServiceType_Type(Integer32):
    """Custom type oam1dmReqServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_Oam1dmReqServiceType_Type.__name__ = "Integer32"
_Oam1dmReqServiceType_Object = MibTableColumn
oam1dmReqServiceType = _Oam1dmReqServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 2),
    _Oam1dmReqServiceType_Type()
)
oam1dmReqServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oam1dmReqServiceType.setStatus("current")


class _Oam1dmReqServiceName_Type(OctetString):
    """Custom type oam1dmReqServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_Oam1dmReqServiceName_Type.__name__ = "OctetString"
_Oam1dmReqServiceName_Object = MibTableColumn
oam1dmReqServiceName = _Oam1dmReqServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 3),
    _Oam1dmReqServiceName_Type()
)
oam1dmReqServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oam1dmReqServiceName.setStatus("current")


class _Oam1dmReqRepeat_Type(Integer32):
    """Custom type oam1dmReqRepeat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_Oam1dmReqRepeat_Type.__name__ = "Integer32"
_Oam1dmReqRepeat_Object = MibTableColumn
oam1dmReqRepeat = _Oam1dmReqRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 5),
    _Oam1dmReqRepeat_Type()
)
oam1dmReqRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oam1dmReqRepeat.setStatus("current")


class _Oam1dmReqExp_Type(Integer32):
    """Custom type oam1dmReqExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Oam1dmReqExp_Type.__name__ = "Integer32"
_Oam1dmReqExp_Object = MibTableColumn
oam1dmReqExp = _Oam1dmReqExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 6),
    _Oam1dmReqExp_Type()
)
oam1dmReqExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oam1dmReqExp.setStatus("current")


class _Oam1dmReqInterval_Type(Integer32):
    """Custom type oam1dmReqInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_Oam1dmReqInterval_Type.__name__ = "Integer32"
_Oam1dmReqInterval_Object = MibTableColumn
oam1dmReqInterval = _Oam1dmReqInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 7),
    _Oam1dmReqInterval_Type()
)
oam1dmReqInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oam1dmReqInterval.setStatus("current")
_Oam1dmReqRowstatus_Type = RowStatus
_Oam1dmReqRowstatus_Object = MibTableColumn
oam1dmReqRowstatus = _Oam1dmReqRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 15),
    _Oam1dmReqRowstatus_Type()
)
oam1dmReqRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oam1dmReqRowstatus.setStatus("current")


class _Oam1dmReqOperState_Type(Integer32):
    """Custom type oam1dmReqOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_Oam1dmReqOperState_Type.__name__ = "Integer32"
_Oam1dmReqOperState_Object = MibTableColumn
oam1dmReqOperState = _Oam1dmReqOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 65, 1, 16),
    _Oam1dmReqOperState_Type()
)
oam1dmReqOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oam1dmReqOperState.setStatus("current")
_MplsTpOAMDmmRequestTable_Object = MibTable
mplsTpOAMDmmRequestTable = _MplsTpOAMDmmRequestTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67)
)
if mibBuilder.loadTexts:
    mplsTpOAMDmmRequestTable.setStatus("current")
_MplsTpOAMDmmRequestEntry_Object = MibTableRow
mplsTpOAMDmmRequestEntry = _MplsTpOAMDmmRequestEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1)
)
mplsTpOAMDmmRequestEntry.setIndexNames(
    (0, "SWITCH", "oamDmmReqIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMDmmRequestEntry.setStatus("current")


class _OamDmmReqIndex_Type(Integer32):
    """Custom type oamDmmReqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_OamDmmReqIndex_Type.__name__ = "Integer32"
_OamDmmReqIndex_Object = MibTableColumn
oamDmmReqIndex = _OamDmmReqIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 1),
    _OamDmmReqIndex_Type()
)
oamDmmReqIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamDmmReqIndex.setStatus("current")


class _OamDmmReqServiceType_Type(Integer32):
    """Custom type oamDmmReqServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_OamDmmReqServiceType_Type.__name__ = "Integer32"
_OamDmmReqServiceType_Object = MibTableColumn
oamDmmReqServiceType = _OamDmmReqServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 2),
    _OamDmmReqServiceType_Type()
)
oamDmmReqServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDmmReqServiceType.setStatus("current")


class _OamDmmReqServiceName_Type(OctetString):
    """Custom type oamDmmReqServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_OamDmmReqServiceName_Type.__name__ = "OctetString"
_OamDmmReqServiceName_Object = MibTableColumn
oamDmmReqServiceName = _OamDmmReqServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 3),
    _OamDmmReqServiceName_Type()
)
oamDmmReqServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDmmReqServiceName.setStatus("current")


class _OamDmmReqRepeat_Type(Integer32):
    """Custom type oamDmmReqRepeat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_OamDmmReqRepeat_Type.__name__ = "Integer32"
_OamDmmReqRepeat_Object = MibTableColumn
oamDmmReqRepeat = _OamDmmReqRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 5),
    _OamDmmReqRepeat_Type()
)
oamDmmReqRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDmmReqRepeat.setStatus("current")


class _OamDmmReqExp_Type(Integer32):
    """Custom type oamDmmReqExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_OamDmmReqExp_Type.__name__ = "Integer32"
_OamDmmReqExp_Object = MibTableColumn
oamDmmReqExp = _OamDmmReqExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 6),
    _OamDmmReqExp_Type()
)
oamDmmReqExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDmmReqExp.setStatus("current")


class _OamDmmReqInterval_Type(Integer32):
    """Custom type oamDmmReqInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_OamDmmReqInterval_Type.__name__ = "Integer32"
_OamDmmReqInterval_Object = MibTableColumn
oamDmmReqInterval = _OamDmmReqInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 7),
    _OamDmmReqInterval_Type()
)
oamDmmReqInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDmmReqInterval.setStatus("current")
_OamDmmReqRowstatus_Type = RowStatus
_OamDmmReqRowstatus_Object = MibTableColumn
oamDmmReqRowstatus = _OamDmmReqRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 15),
    _OamDmmReqRowstatus_Type()
)
oamDmmReqRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oamDmmReqRowstatus.setStatus("current")


class _OamDmmReqOperState_Type(Integer32):
    """Custom type oamDmmReqOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_OamDmmReqOperState_Type.__name__ = "Integer32"
_OamDmmReqOperState_Object = MibTableColumn
oamDmmReqOperState = _OamDmmReqOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 16),
    _OamDmmReqOperState_Type()
)
oamDmmReqOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqOperState.setStatus("current")


class _OamDmmReqSuccessRate_Type(Integer32):
    """Custom type oamDmmReqSuccessRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_OamDmmReqSuccessRate_Type.__name__ = "Integer32"
_OamDmmReqSuccessRate_Object = MibTableColumn
oamDmmReqSuccessRate = _OamDmmReqSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 17),
    _OamDmmReqSuccessRate_Type()
)
oamDmmReqSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqSuccessRate.setStatus("current")
_OamDmmReqAverDelay_Type = Counter64
_OamDmmReqAverDelay_Object = MibTableColumn
oamDmmReqAverDelay = _OamDmmReqAverDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 18),
    _OamDmmReqAverDelay_Type()
)
oamDmmReqAverDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqAverDelay.setStatus("current")
_OamDmmReqAverVar_Type = Counter64
_OamDmmReqAverVar_Object = MibTableColumn
oamDmmReqAverVar = _OamDmmReqAverVar_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 19),
    _OamDmmReqAverVar_Type()
)
oamDmmReqAverVar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqAverVar.setStatus("current")
_OamDmmReqMaxDelay_Type = Counter64
_OamDmmReqMaxDelay_Object = MibTableColumn
oamDmmReqMaxDelay = _OamDmmReqMaxDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 20),
    _OamDmmReqMaxDelay_Type()
)
oamDmmReqMaxDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqMaxDelay.setStatus("current")
_OamDmmReqMinDelay_Type = Counter64
_OamDmmReqMinDelay_Object = MibTableColumn
oamDmmReqMinDelay = _OamDmmReqMinDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 67, 1, 21),
    _OamDmmReqMinDelay_Type()
)
oamDmmReqMinDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamDmmReqMinDelay.setStatus("current")
_MplsTpOAMDmmResultTable_Object = MibTable
mplsTpOAMDmmResultTable = _MplsTpOAMDmmResultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68)
)
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultTable.setStatus("current")
_MplsTpOAMDmmResultEntry_Object = MibTableRow
mplsTpOAMDmmResultEntry = _MplsTpOAMDmmResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1)
)
mplsTpOAMDmmResultEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMDmmResultIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultEntry.setStatus("current")
_MplsTpOAMDmmResultIndex_Type = Integer32
_MplsTpOAMDmmResultIndex_Object = MibTableColumn
mplsTpOAMDmmResultIndex = _MplsTpOAMDmmResultIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1, 1),
    _MplsTpOAMDmmResultIndex_Type()
)
mplsTpOAMDmmResultIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultIndex.setStatus("current")
_MplsTpOAMDmmResultDelay_Type = Counter64
_MplsTpOAMDmmResultDelay_Object = MibTableColumn
mplsTpOAMDmmResultDelay = _MplsTpOAMDmmResultDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1, 2),
    _MplsTpOAMDmmResultDelay_Type()
)
mplsTpOAMDmmResultDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultDelay.setStatus("current")
_MplsTpOAMDmmResultVariation_Type = Counter64
_MplsTpOAMDmmResultVariation_Object = MibTableColumn
mplsTpOAMDmmResultVariation = _MplsTpOAMDmmResultVariation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1, 3),
    _MplsTpOAMDmmResultVariation_Type()
)
mplsTpOAMDmmResultVariation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultVariation.setStatus("current")
_MplsTpOAMDmmResultExp_Type = Integer32
_MplsTpOAMDmmResultExp_Object = MibTableColumn
mplsTpOAMDmmResultExp = _MplsTpOAMDmmResultExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1, 4),
    _MplsTpOAMDmmResultExp_Type()
)
mplsTpOAMDmmResultExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultExp.setStatus("current")
_MplsTpOAMDmmResultTime_Type = OctetString
_MplsTpOAMDmmResultTime_Object = MibTableColumn
mplsTpOAMDmmResultTime = _MplsTpOAMDmmResultTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 68, 1, 5),
    _MplsTpOAMDmmResultTime_Type()
)
mplsTpOAMDmmResultTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMDmmResultTime.setStatus("current")
_MplsTpOAMResourceTable_Object = MibTable
mplsTpOAMResourceTable = _MplsTpOAMResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 70)
)
if mibBuilder.loadTexts:
    mplsTpOAMResourceTable.setStatus("current")
_MplsTpOAMResourceEntry_Object = MibTableRow
mplsTpOAMResourceEntry = _MplsTpOAMResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 70, 1)
)
mplsTpOAMResourceEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMResourceId"),
)
if mibBuilder.loadTexts:
    mplsTpOAMResourceEntry.setStatus("current")


class _MplsTpOAMResourceId_Type(Integer32):
    """Custom type mplsTpOAMResourceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("meg", 2),
          ("local-mep", 3),
          ("remote-mep", 4),
          ("mip", 5),
          ("csf", 6))
    )


_MplsTpOAMResourceId_Type.__name__ = "Integer32"
_MplsTpOAMResourceId_Object = MibTableColumn
mplsTpOAMResourceId = _MplsTpOAMResourceId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 70, 1, 1),
    _MplsTpOAMResourceId_Type()
)
mplsTpOAMResourceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMResourceId.setStatus("current")
_MplsTpOAMResourceMax_Type = Integer32
_MplsTpOAMResourceMax_Object = MibTableColumn
mplsTpOAMResourceMax = _MplsTpOAMResourceMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 70, 1, 2),
    _MplsTpOAMResourceMax_Type()
)
mplsTpOAMResourceMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMResourceMax.setStatus("current")
_MplsTpOAMResourceCurrent_Type = Integer32
_MplsTpOAMResourceCurrent_Object = MibTableColumn
mplsTpOAMResourceCurrent = _MplsTpOAMResourceCurrent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 70, 1, 3),
    _MplsTpOAMResourceCurrent_Type()
)
mplsTpOAMResourceCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMResourceCurrent.setStatus("current")
_MplsTpOAMStatisticTable_Object = MibTable
mplsTpOAMStatisticTable = _MplsTpOAMStatisticTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71)
)
if mibBuilder.loadTexts:
    mplsTpOAMStatisticTable.setStatus("current")
_MplsTpOAMStatisticEntry_Object = MibTableRow
mplsTpOAMStatisticEntry = _MplsTpOAMStatisticEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71, 1)
)
mplsTpOAMStatisticEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMStatisticPktType"),
)
if mibBuilder.loadTexts:
    mplsTpOAMStatisticEntry.setStatus("current")


class _MplsTpOAMStatisticPktType_Type(Integer32):
    """Custom type mplsTpOAMStatisticPktType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("lbm", 1),
          ("lbr", 2),
          ("ais", 3),
          ("one-dm", 4),
          ("dmm", 5),
          ("dmr", 6),
          ("unexp-cc", 7),
          ("unknown", 8),
          ("lck", 9),
          ("csf", 10),
          ("aps", 11))
    )


_MplsTpOAMStatisticPktType_Type.__name__ = "Integer32"
_MplsTpOAMStatisticPktType_Object = MibTableColumn
mplsTpOAMStatisticPktType = _MplsTpOAMStatisticPktType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71, 1, 1),
    _MplsTpOAMStatisticPktType_Type()
)
mplsTpOAMStatisticPktType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMStatisticPktType.setStatus("current")
_MplsTpOAMStatisticTx_Type = Integer32
_MplsTpOAMStatisticTx_Object = MibTableColumn
mplsTpOAMStatisticTx = _MplsTpOAMStatisticTx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71, 1, 2),
    _MplsTpOAMStatisticTx_Type()
)
mplsTpOAMStatisticTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMStatisticTx.setStatus("current")
_MplsTpOAMStatisticRx_Type = Integer32
_MplsTpOAMStatisticRx_Object = MibTableColumn
mplsTpOAMStatisticRx = _MplsTpOAMStatisticRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71, 1, 3),
    _MplsTpOAMStatisticRx_Type()
)
mplsTpOAMStatisticRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMStatisticRx.setStatus("current")
_MplsTpOAMStatisticRxErr_Type = Integer32
_MplsTpOAMStatisticRxErr_Object = MibTableColumn
mplsTpOAMStatisticRxErr = _MplsTpOAMStatisticRxErr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 71, 1, 4),
    _MplsTpOAMStatisticRxErr_Type()
)
mplsTpOAMStatisticRxErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMStatisticRxErr.setStatus("current")
_MplsTpOAMEventTable_Object = MibTable
mplsTpOAMEventTable = _MplsTpOAMEventTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72)
)
if mibBuilder.loadTexts:
    mplsTpOAMEventTable.setStatus("current")
_MplsTpOAMEventEntry_Object = MibTableRow
mplsTpOAMEventEntry = _MplsTpOAMEventEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1)
)
mplsTpOAMEventEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMEventIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMEventEntry.setStatus("current")
_MplsTpOAMEventIndex_Type = Integer32
_MplsTpOAMEventIndex_Object = MibTableColumn
mplsTpOAMEventIndex = _MplsTpOAMEventIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 1),
    _MplsTpOAMEventIndex_Type()
)
mplsTpOAMEventIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMEventIndex.setStatus("current")


class _MplsTpOAMEventService_Type(Integer32):
    """Custom type mplsTpOAMEventService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp", 2),
          ("pw-tpe", 3))
    )


_MplsTpOAMEventService_Type.__name__ = "Integer32"
_MplsTpOAMEventService_Object = MibTableColumn
mplsTpOAMEventService = _MplsTpOAMEventService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 2),
    _MplsTpOAMEventService_Type()
)
mplsTpOAMEventService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventService.setStatus("current")
_MplsTpOAMEventMegId_Type = OctetString
_MplsTpOAMEventMegId_Object = MibTableColumn
mplsTpOAMEventMegId = _MplsTpOAMEventMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 3),
    _MplsTpOAMEventMegId_Type()
)
mplsTpOAMEventMegId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventMegId.setStatus("current")
_MplsTpOAMEventMepId_Type = Integer32
_MplsTpOAMEventMepId_Object = MibTableColumn
mplsTpOAMEventMepId = _MplsTpOAMEventMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 4),
    _MplsTpOAMEventMepId_Type()
)
mplsTpOAMEventMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventMepId.setStatus("current")


class _MplsTpOAMEventId_Type(Integer32):
    """Custom type mplsTpOAMEventId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("loc", 1),
          ("unExpRMepId", 2),
          ("unExpInterval", 3),
          ("unExpMegId", 4),
          ("unExpLevel", 5),
          ("rdiRx", 6),
          ("rdiTx", 7),
          ("waitFistCCM", 8),
          ("aisRx", 9),
          ("aisTx", 10),
          ("aisDefect", 11),
          ("eventFull", 12),
          ("oneDmFull", 13),
          ("lockRx", 14),
          ("lockTx", 15),
          ("lockDefect", 16),
          ("crcDefect", 17))
    )


_MplsTpOAMEventId_Type.__name__ = "Integer32"
_MplsTpOAMEventId_Object = MibTableColumn
mplsTpOAMEventId = _MplsTpOAMEventId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 5),
    _MplsTpOAMEventId_Type()
)
mplsTpOAMEventId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventId.setStatus("current")


class _MplsTpOAMEventAction_Type(Integer32):
    """Custom type mplsTpOAMEventAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("occur", 1),
          ("clear", 2))
    )


_MplsTpOAMEventAction_Type.__name__ = "Integer32"
_MplsTpOAMEventAction_Object = MibTableColumn
mplsTpOAMEventAction = _MplsTpOAMEventAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 6),
    _MplsTpOAMEventAction_Type()
)
mplsTpOAMEventAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventAction.setStatus("current")
_MplsTpOAMEventTime_Type = OctetString
_MplsTpOAMEventTime_Object = MibTableColumn
mplsTpOAMEventTime = _MplsTpOAMEventTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 72, 1, 7),
    _MplsTpOAMEventTime_Type()
)
mplsTpOAMEventTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMEventTime.setStatus("current")
_MplsTpOAM1dmTable_Object = MibTable
mplsTpOAM1dmTable = _MplsTpOAM1dmTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73)
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmTable.setStatus("current")
_MplsTpOAM1dmEntry_Object = MibTableRow
mplsTpOAM1dmEntry = _MplsTpOAM1dmEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1)
)
mplsTpOAM1dmEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAM1dmMegId"),
    (0, "SWITCH", "mplsTpOAM1dmIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmEntry.setStatus("current")
_MplsTpOAM1dmMegId_Type = OctetString
_MplsTpOAM1dmMegId_Object = MibTableColumn
mplsTpOAM1dmMegId = _MplsTpOAM1dmMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 1),
    _MplsTpOAM1dmMegId_Type()
)
mplsTpOAM1dmMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAM1dmMegId.setStatus("current")
_MplsTpOAM1dmIndex_Type = Integer32
_MplsTpOAM1dmIndex_Object = MibTableColumn
mplsTpOAM1dmIndex = _MplsTpOAM1dmIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 2),
    _MplsTpOAM1dmIndex_Type()
)
mplsTpOAM1dmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAM1dmIndex.setStatus("current")


class _MplsTpOAM1dmService_Type(Integer32):
    """Custom type mplsTpOAM1dmService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp", 2),
          ("pw-tpe", 3))
    )


_MplsTpOAM1dmService_Type.__name__ = "Integer32"
_MplsTpOAM1dmService_Object = MibTableColumn
mplsTpOAM1dmService = _MplsTpOAM1dmService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 3),
    _MplsTpOAM1dmService_Type()
)
mplsTpOAM1dmService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmService.setStatus("current")
_MplsTpOAM1dmMepId_Type = Integer32
_MplsTpOAM1dmMepId_Object = MibTableColumn
mplsTpOAM1dmMepId = _MplsTpOAM1dmMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 4),
    _MplsTpOAM1dmMepId_Type()
)
mplsTpOAM1dmMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmMepId.setStatus("current")
_MplsTpOAM1dmDelay_Type = Counter64
_MplsTpOAM1dmDelay_Object = MibTableColumn
mplsTpOAM1dmDelay = _MplsTpOAM1dmDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 5),
    _MplsTpOAM1dmDelay_Type()
)
mplsTpOAM1dmDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmDelay.setStatus("current")
_MplsTpOAM1dmVariation_Type = Counter64
_MplsTpOAM1dmVariation_Object = MibTableColumn
mplsTpOAM1dmVariation = _MplsTpOAM1dmVariation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 6),
    _MplsTpOAM1dmVariation_Type()
)
mplsTpOAM1dmVariation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmVariation.setStatus("current")
_MplsTpOAM1dmExp_Type = Integer32
_MplsTpOAM1dmExp_Object = MibTableColumn
mplsTpOAM1dmExp = _MplsTpOAM1dmExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 7),
    _MplsTpOAM1dmExp_Type()
)
mplsTpOAM1dmExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmExp.setStatus("current")
_MplsTpOAM1dmTime_Type = OctetString
_MplsTpOAM1dmTime_Object = MibTableColumn
mplsTpOAM1dmTime = _MplsTpOAM1dmTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 73, 1, 8),
    _MplsTpOAM1dmTime_Type()
)
mplsTpOAM1dmTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmTime.setStatus("current")
_MplsTpOAM1dmStatisticTable_Object = MibTable
mplsTpOAM1dmStatisticTable = _MplsTpOAM1dmStatisticTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74)
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatisticTable.setStatus("current")
_MplsTpOAM1dmStatisticEntry_Object = MibTableRow
mplsTpOAM1dmStatisticEntry = _MplsTpOAM1dmStatisticEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1)
)
mplsTpOAM1dmStatisticEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAM1dmStatMegId"),
)
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatisticEntry.setStatus("current")


class _MplsTpOAM1dmStatMegId_Type(OctetString):
    """Custom type mplsTpOAM1dmStatMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsTpOAM1dmStatMegId_Type.__name__ = "OctetString"
_MplsTpOAM1dmStatMegId_Object = MibTableColumn
mplsTpOAM1dmStatMegId = _MplsTpOAM1dmStatMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1, 1),
    _MplsTpOAM1dmStatMegId_Type()
)
mplsTpOAM1dmStatMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatMegId.setStatus("current")
_MplsTpOAM1dmStatMinDelay_Type = Counter64
_MplsTpOAM1dmStatMinDelay_Object = MibTableColumn
mplsTpOAM1dmStatMinDelay = _MplsTpOAM1dmStatMinDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1, 2),
    _MplsTpOAM1dmStatMinDelay_Type()
)
mplsTpOAM1dmStatMinDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatMinDelay.setStatus("current")
_MplsTpOAM1dmStatMaxDelay_Type = Counter64
_MplsTpOAM1dmStatMaxDelay_Object = MibTableColumn
mplsTpOAM1dmStatMaxDelay = _MplsTpOAM1dmStatMaxDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1, 3),
    _MplsTpOAM1dmStatMaxDelay_Type()
)
mplsTpOAM1dmStatMaxDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatMaxDelay.setStatus("current")
_MplsTpOAM1dmStatAverDelay_Type = Counter64
_MplsTpOAM1dmStatAverDelay_Object = MibTableColumn
mplsTpOAM1dmStatAverDelay = _MplsTpOAM1dmStatAverDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1, 4),
    _MplsTpOAM1dmStatAverDelay_Type()
)
mplsTpOAM1dmStatAverDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatAverDelay.setStatus("current")
_MplsTpOAM1dmStatAverVariation_Type = Counter64
_MplsTpOAM1dmStatAverVariation_Object = MibTableColumn
mplsTpOAM1dmStatAverVariation = _MplsTpOAM1dmStatAverVariation_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 74, 1, 5),
    _MplsTpOAM1dmStatAverVariation_Type()
)
mplsTpOAM1dmStatAverVariation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAM1dmStatAverVariation.setStatus("current")
_MplsTpOAMMPStatisticTable_Object = MibTable
mplsTpOAMMPStatisticTable = _MplsTpOAMMPStatisticTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75)
)
if mibBuilder.loadTexts:
    mplsTpOAMMPStatisticTable.setStatus("current")
_MplsTpOAMMPStatisticEntry_Object = MibTableRow
mplsTpOAMMPStatisticEntry = _MplsTpOAMMPStatisticEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1)
)
mplsTpOAMMPStatisticEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMMPStatMegId"),
    (0, "SWITCH", "mplsTpOAMMPStatPktType"),
)
if mibBuilder.loadTexts:
    mplsTpOAMMPStatisticEntry.setStatus("current")


class _MplsTpOAMMPStatMegId_Type(OctetString):
    """Custom type mplsTpOAMMPStatMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsTpOAMMPStatMegId_Type.__name__ = "OctetString"
_MplsTpOAMMPStatMegId_Object = MibTableColumn
mplsTpOAMMPStatMegId = _MplsTpOAMMPStatMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1, 1),
    _MplsTpOAMMPStatMegId_Type()
)
mplsTpOAMMPStatMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMMPStatMegId.setStatus("current")


class _MplsTpOAMMPStatPktType_Type(Integer32):
    """Custom type mplsTpOAMMPStatPktType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("lbm", 1),
          ("lbr", 2),
          ("ais", 3),
          ("one-dm", 4),
          ("dmm", 5),
          ("dmr", 6),
          ("unexp-cc", 7),
          ("unknown", 8),
          ("lck", 9),
          ("csf", 10),
          ("aps", 11))
    )


_MplsTpOAMMPStatPktType_Type.__name__ = "Integer32"
_MplsTpOAMMPStatPktType_Object = MibTableColumn
mplsTpOAMMPStatPktType = _MplsTpOAMMPStatPktType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1, 2),
    _MplsTpOAMMPStatPktType_Type()
)
mplsTpOAMMPStatPktType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMMPStatPktType.setStatus("current")
_MplsTpOAMMPStatTx_Type = Counter64
_MplsTpOAMMPStatTx_Object = MibTableColumn
mplsTpOAMMPStatTx = _MplsTpOAMMPStatTx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1, 3),
    _MplsTpOAMMPStatTx_Type()
)
mplsTpOAMMPStatTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMMPStatTx.setStatus("current")
_MplsTpOAMMPStatRx_Type = Counter64
_MplsTpOAMMPStatRx_Object = MibTableColumn
mplsTpOAMMPStatRx = _MplsTpOAMMPStatRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1, 4),
    _MplsTpOAMMPStatRx_Type()
)
mplsTpOAMMPStatRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMMPStatRx.setStatus("current")
_MplsTpOAMMPStatRxErr_Type = Counter64
_MplsTpOAMMPStatRxErr_Object = MibTableColumn
mplsTpOAMMPStatRxErr = _MplsTpOAMMPStatRxErr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 75, 1, 5),
    _MplsTpOAMMPStatRxErr_Type()
)
mplsTpOAMMPStatRxErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMMPStatRxErr.setStatus("current")
_MplsTpOAMMepEventDefectTable_Object = MibTable
mplsTpOAMMepEventDefectTable = _MplsTpOAMMepEventDefectTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 76)
)
if mibBuilder.loadTexts:
    mplsTpOAMMepEventDefectTable.setStatus("current")
_MplsTpOAMMepEventDefectEntry_Object = MibTableRow
mplsTpOAMMepEventDefectEntry = _MplsTpOAMMepEventDefectEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 76, 1)
)
mplsTpOAMMepEventDefectEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMMepEvtMegId"),
    (0, "SWITCH", "mplsTpOAMMepEvtId"),
)
if mibBuilder.loadTexts:
    mplsTpOAMMepEventDefectEntry.setStatus("current")


class _MplsTpOAMMepEvtMegId_Type(OctetString):
    """Custom type mplsTpOAMMepEvtMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsTpOAMMepEvtMegId_Type.__name__ = "OctetString"
_MplsTpOAMMepEvtMegId_Object = MibTableColumn
mplsTpOAMMepEvtMegId = _MplsTpOAMMepEvtMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 76, 1, 1),
    _MplsTpOAMMepEvtMegId_Type()
)
mplsTpOAMMepEvtMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMMepEvtMegId.setStatus("current")


class _MplsTpOAMMepEvtId_Type(Integer32):
    """Custom type mplsTpOAMMepEvtId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("loc", 1),
          ("unExpRMepId", 2),
          ("unExpInterval", 3),
          ("unExpMegId", 4),
          ("unExpLevel", 5),
          ("rdiRx", 6),
          ("rdiTx", 7),
          ("waitFistCCM", 8),
          ("aisRx", 9),
          ("aisTx", 10),
          ("aisDefect", 11),
          ("eventFull", 12),
          ("oneDmFull", 13),
          ("lockRx", 14),
          ("lockTx", 15),
          ("lockDefect", 16),
          ("crcDefect", 17))
    )


_MplsTpOAMMepEvtId_Type.__name__ = "Integer32"
_MplsTpOAMMepEvtId_Object = MibTableColumn
mplsTpOAMMepEvtId = _MplsTpOAMMepEvtId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 76, 1, 2),
    _MplsTpOAMMepEvtId_Type()
)
mplsTpOAMMepEvtId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMMepEvtId.setStatus("current")


class _MplsTpOAMMepEvtDefect_Type(Integer32):
    """Custom type mplsTpOAMMepEvtDefect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_MplsTpOAMMepEvtDefect_Type.__name__ = "Integer32"
_MplsTpOAMMepEvtDefect_Object = MibTableColumn
mplsTpOAMMepEvtDefect = _MplsTpOAMMepEvtDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 76, 1, 3),
    _MplsTpOAMMepEvtDefect_Type()
)
mplsTpOAMMepEvtDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMMepEvtDefect.setStatus("current")
_MplsTPVpwsOAMCsfTable_Object = MibTable
mplsTPVpwsOAMCsfTable = _MplsTPVpwsOAMCsfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77)
)
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfTable.setStatus("current")
_MplsTPVpwsOAMCsfEntry_Object = MibTableRow
mplsTPVpwsOAMCsfEntry = _MplsTPVpwsOAMCsfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1)
)
mplsTPVpwsOAMCsfEntry.setIndexNames(
    (0, "SWITCH", "mplsTPVpwsOAMCsfVcId"),
)
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfEntry.setStatus("current")


class _MplsTPVpwsOAMCsfVcId_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfVcId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 424967295),
    )


_MplsTPVpwsOAMCsfVcId_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfVcId_Object = MibTableColumn
mplsTPVpwsOAMCsfVcId = _MplsTPVpwsOAMCsfVcId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 1),
    _MplsTPVpwsOAMCsfVcId_Type()
)
mplsTPVpwsOAMCsfVcId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfVcId.setStatus("current")


class _MplsTPVpwsOAMCsfSrvState_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfSrvState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("los", 0),
          ("fdi", 1),
          ("rdi", 2),
          ("ok", 3),
          ("init", 4))
    )


_MplsTPVpwsOAMCsfSrvState_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfSrvState_Object = MibTableColumn
mplsTPVpwsOAMCsfSrvState = _MplsTPVpwsOAMCsfSrvState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 2),
    _MplsTPVpwsOAMCsfSrvState_Type()
)
mplsTPVpwsOAMCsfSrvState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfSrvState.setStatus("current")


class _MplsTPVpwsOAMCsfClientState_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfClientState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("los", 0),
          ("fdi", 1),
          ("rdi", 2),
          ("dc", 3),
          ("init", 4))
    )


_MplsTPVpwsOAMCsfClientState_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfClientState_Object = MibTableColumn
mplsTPVpwsOAMCsfClientState = _MplsTPVpwsOAMCsfClientState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 3),
    _MplsTPVpwsOAMCsfClientState_Type()
)
mplsTPVpwsOAMCsfClientState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfClientState.setStatus("current")


class _MplsTPVpwsOAMCsfDCReason_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfDCReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("timeout", 1),
          ("dci", 2),
          ("invalid", 3))
    )


_MplsTPVpwsOAMCsfDCReason_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfDCReason_Object = MibTableColumn
mplsTPVpwsOAMCsfDCReason = _MplsTPVpwsOAMCsfDCReason_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 4),
    _MplsTPVpwsOAMCsfDCReason_Type()
)
mplsTPVpwsOAMCsfDCReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfDCReason.setStatus("current")


class _MplsTPVpwsOAMCsfClientInterval_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(60, 60),
    )


_MplsTPVpwsOAMCsfClientInterval_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfClientInterval_Object = MibTableColumn
mplsTPVpwsOAMCsfClientInterval = _MplsTPVpwsOAMCsfClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 5),
    _MplsTPVpwsOAMCsfClientInterval_Type()
)
mplsTPVpwsOAMCsfClientInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfClientInterval.setStatus("current")


class _MplsTPVpwsOAMCsfACDownEn_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfACDownEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("down", 1))
    )


_MplsTPVpwsOAMCsfACDownEn_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfACDownEn_Object = MibTableColumn
mplsTPVpwsOAMCsfACDownEn = _MplsTPVpwsOAMCsfACDownEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 6),
    _MplsTPVpwsOAMCsfACDownEn_Type()
)
mplsTPVpwsOAMCsfACDownEn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfACDownEn.setStatus("current")


class _MplsTPVpwsOAMCsfACStatus_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfACStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("up", 0),
          ("down", 1),
          ("admin-down", 2),
          ("errdisable", 3),
          ("csf-ac-down", 4),
          ("absent", 5))
    )


_MplsTPVpwsOAMCsfACStatus_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfACStatus_Object = MibTableColumn
mplsTPVpwsOAMCsfACStatus = _MplsTPVpwsOAMCsfACStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 7),
    _MplsTPVpwsOAMCsfACStatus_Type()
)
mplsTPVpwsOAMCsfACStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfACStatus.setStatus("current")


class _MplsTPVpwsOAMCsfTxCSFPacket_Type(Integer32):
    """Custom type mplsTPVpwsOAMCsfTxCSFPacket based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("yes", 1),
          ("no", 2))
    )


_MplsTPVpwsOAMCsfTxCSFPacket_Type.__name__ = "Integer32"
_MplsTPVpwsOAMCsfTxCSFPacket_Object = MibTableColumn
mplsTPVpwsOAMCsfTxCSFPacket = _MplsTPVpwsOAMCsfTxCSFPacket_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 77, 1, 8),
    _MplsTPVpwsOAMCsfTxCSFPacket_Type()
)
mplsTPVpwsOAMCsfTxCSFPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTPVpwsOAMCsfTxCSFPacket.setStatus("current")
_MplsVplsDynamicFdbTable_Object = MibTable
mplsVplsDynamicFdbTable = _MplsVplsDynamicFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78)
)
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbTable.setStatus("current")
_MplsVplsDynamicFdbEntry_Object = MibTableRow
mplsVplsDynamicFdbEntry = _MplsVplsDynamicFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1)
)
mplsVplsDynamicFdbEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsDynamicFdbVplsId"),
    (0, "SWITCH", "mplsVplsDynamicFdbMacAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbEntry.setStatus("current")


class _MplsVplsDynamicFdbVplsId_Type(Integer32):
    """Custom type mplsVplsDynamicFdbVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsDynamicFdbVplsId_Type.__name__ = "Integer32"
_MplsVplsDynamicFdbVplsId_Object = MibTableColumn
mplsVplsDynamicFdbVplsId = _MplsVplsDynamicFdbVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1, 1),
    _MplsVplsDynamicFdbVplsId_Type()
)
mplsVplsDynamicFdbVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbVplsId.setStatus("current")
_MplsVplsDynamicFdbMacAddr_Type = MacAddress
_MplsVplsDynamicFdbMacAddr_Object = MibTableColumn
mplsVplsDynamicFdbMacAddr = _MplsVplsDynamicFdbMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1, 2),
    _MplsVplsDynamicFdbMacAddr_Type()
)
mplsVplsDynamicFdbMacAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbMacAddr.setStatus("current")


class _MplsVplsDynamicFdbIfName_Type(OctetString):
    """Custom type mplsVplsDynamicFdbIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_MplsVplsDynamicFdbIfName_Type.__name__ = "OctetString"
_MplsVplsDynamicFdbIfName_Object = MibTableColumn
mplsVplsDynamicFdbIfName = _MplsVplsDynamicFdbIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1, 3),
    _MplsVplsDynamicFdbIfName_Type()
)
mplsVplsDynamicFdbIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbIfName.setStatus("current")
_MplsVplsDynamicFdbPeerIp_Type = IpAddress
_MplsVplsDynamicFdbPeerIp_Object = MibTableColumn
mplsVplsDynamicFdbPeerIp = _MplsVplsDynamicFdbPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1, 4),
    _MplsVplsDynamicFdbPeerIp_Type()
)
mplsVplsDynamicFdbPeerIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbPeerIp.setStatus("current")


class _MplsVplsDynamicFdbTPPeerName_Type(OctetString):
    """Custom type mplsVplsDynamicFdbTPPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsDynamicFdbTPPeerName_Type.__name__ = "OctetString"
_MplsVplsDynamicFdbTPPeerName_Object = MibTableColumn
mplsVplsDynamicFdbTPPeerName = _MplsVplsDynamicFdbTPPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 78, 1, 5),
    _MplsVplsDynamicFdbTPPeerName_Type()
)
mplsVplsDynamicFdbTPPeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsDynamicFdbTPPeerName.setStatus("current")
_MplsGlobal_ObjectIdentity = ObjectIdentity
mplsGlobal = _MplsGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 79)
)


class _MplsGlobalCurrentStaticLabelBlockNum_Type(Integer32):
    """Custom type mplsGlobalCurrentStaticLabelBlockNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_MplsGlobalCurrentStaticLabelBlockNum_Type.__name__ = "Integer32"
_MplsGlobalCurrentStaticLabelBlockNum_Object = MibScalar
mplsGlobalCurrentStaticLabelBlockNum = _MplsGlobalCurrentStaticLabelBlockNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 79, 1),
    _MplsGlobalCurrentStaticLabelBlockNum_Type()
)
mplsGlobalCurrentStaticLabelBlockNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsGlobalCurrentStaticLabelBlockNum.setStatus("current")


class _MplsGlobalCurrentDynamicLabelBlockNum_Type(Integer32):
    """Custom type mplsGlobalCurrentDynamicLabelBlockNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8192),
    )


_MplsGlobalCurrentDynamicLabelBlockNum_Type.__name__ = "Integer32"
_MplsGlobalCurrentDynamicLabelBlockNum_Object = MibScalar
mplsGlobalCurrentDynamicLabelBlockNum = _MplsGlobalCurrentDynamicLabelBlockNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 79, 2),
    _MplsGlobalCurrentDynamicLabelBlockNum_Type()
)
mplsGlobalCurrentDynamicLabelBlockNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsGlobalCurrentDynamicLabelBlockNum.setStatus("current")


class _MplsGlobalConfigStaticLabelBlockNum_Type(Integer32):
    """Custom type mplsGlobalConfigStaticLabelBlockNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_MplsGlobalConfigStaticLabelBlockNum_Type.__name__ = "Integer32"
_MplsGlobalConfigStaticLabelBlockNum_Object = MibScalar
mplsGlobalConfigStaticLabelBlockNum = _MplsGlobalConfigStaticLabelBlockNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 79, 3),
    _MplsGlobalConfigStaticLabelBlockNum_Type()
)
mplsGlobalConfigStaticLabelBlockNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsGlobalConfigStaticLabelBlockNum.setStatus("current")
_MplsVplsIgspGlbInfo_ObjectIdentity = ObjectIdentity
mplsVplsIgspGlbInfo = _MplsVplsIgspGlbInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 80)
)


class _MplsVplsIgspGlbInfoMaxMemNum_Type(Integer32):
    """Custom type mplsVplsIgspGlbInfoMaxMemNum based on Integer32"""
    defaultValue = 16384

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16384),
    )


_MplsVplsIgspGlbInfoMaxMemNum_Type.__name__ = "Integer32"
_MplsVplsIgspGlbInfoMaxMemNum_Object = MibScalar
mplsVplsIgspGlbInfoMaxMemNum = _MplsVplsIgspGlbInfoMaxMemNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 80, 1),
    _MplsVplsIgspGlbInfoMaxMemNum_Type()
)
mplsVplsIgspGlbInfoMaxMemNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspGlbInfoMaxMemNum.setStatus("current")


class _MplsVplsIgspGlbInfoQuerierTcnCnt_Type(Integer32):
    """Custom type mplsVplsIgspGlbInfoQuerierTcnCnt based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_MplsVplsIgspGlbInfoQuerierTcnCnt_Type.__name__ = "Integer32"
_MplsVplsIgspGlbInfoQuerierTcnCnt_Object = MibScalar
mplsVplsIgspGlbInfoQuerierTcnCnt = _MplsVplsIgspGlbInfoQuerierTcnCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 80, 2),
    _MplsVplsIgspGlbInfoQuerierTcnCnt_Type()
)
mplsVplsIgspGlbInfoQuerierTcnCnt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspGlbInfoQuerierTcnCnt.setStatus("current")


class _MplsVplsIgspGlbInfoQuerierTcnInterval_Type(Integer32):
    """Custom type mplsVplsIgspGlbInfoQuerierTcnInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_MplsVplsIgspGlbInfoQuerierTcnInterval_Type.__name__ = "Integer32"
_MplsVplsIgspGlbInfoQuerierTcnInterval_Object = MibScalar
mplsVplsIgspGlbInfoQuerierTcnInterval = _MplsVplsIgspGlbInfoQuerierTcnInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 80, 3),
    _MplsVplsIgspGlbInfoQuerierTcnInterval_Type()
)
mplsVplsIgspGlbInfoQuerierTcnInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspGlbInfoQuerierTcnInterval.setStatus("current")


class _MplsVplsIgspGlbInfoCurrMemNum_Type(Integer32):
    """Custom type mplsVplsIgspGlbInfoCurrMemNum based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MplsVplsIgspGlbInfoCurrMemNum_Type.__name__ = "Integer32"
_MplsVplsIgspGlbInfoCurrMemNum_Object = MibScalar
mplsVplsIgspGlbInfoCurrMemNum = _MplsVplsIgspGlbInfoCurrMemNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 80, 4),
    _MplsVplsIgspGlbInfoCurrMemNum_Type()
)
mplsVplsIgspGlbInfoCurrMemNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsIgspGlbInfoCurrMemNum.setStatus("current")
_MplsVplsIgspCfgTable_Object = MibTable
mplsVplsIgspCfgTable = _MplsVplsIgspCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81)
)
if mibBuilder.loadTexts:
    mplsVplsIgspCfgTable.setStatus("current")
_MplsVplsIgspCfgEntry_Object = MibTableRow
mplsVplsIgspCfgEntry = _MplsVplsIgspCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1)
)
mplsVplsIgspCfgEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsIgspVplsId"),
)
if mibBuilder.loadTexts:
    mplsVplsIgspCfgEntry.setStatus("current")


class _MplsVplsIgspVplsId_Type(Integer32):
    """Custom type mplsVplsIgspVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsIgspVplsId_Type.__name__ = "Integer32"
_MplsVplsIgspVplsId_Object = MibTableColumn
mplsVplsIgspVplsId = _MplsVplsIgspVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 1),
    _MplsVplsIgspVplsId_Type()
)
mplsVplsIgspVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspVplsId.setStatus("current")


class _MplsVplsIgspStatus_Type(Integer32):
    """Custom type mplsVplsIgspStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsIgspStatus_Type.__name__ = "Integer32"
_MplsVplsIgspStatus_Object = MibTableColumn
mplsVplsIgspStatus = _MplsVplsIgspStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 2),
    _MplsVplsIgspStatus_Type()
)
mplsVplsIgspStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspStatus.setStatus("current")


class _MplsVplsIgspFastLeave_Type(Integer32):
    """Custom type mplsVplsIgspFastLeave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsIgspFastLeave_Type.__name__ = "Integer32"
_MplsVplsIgspFastLeave_Object = MibTableColumn
mplsVplsIgspFastLeave = _MplsVplsIgspFastLeave_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 3),
    _MplsVplsIgspFastLeave_Type()
)
mplsVplsIgspFastLeave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspFastLeave.setStatus("current")


class _MplsVplsIgspVersion_Type(Integer32):
    """Custom type mplsVplsIgspVersion based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_MplsVplsIgspVersion_Type.__name__ = "Integer32"
_MplsVplsIgspVersion_Object = MibTableColumn
mplsVplsIgspVersion = _MplsVplsIgspVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 4),
    _MplsVplsIgspVersion_Type()
)
mplsVplsIgspVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspVersion.setStatus("current")


class _MplsVplsIgspMaxMemNum_Type(Integer32):
    """Custom type mplsVplsIgspMaxMemNum based on Integer32"""
    defaultValue = 16384

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16384),
    )


_MplsVplsIgspMaxMemNum_Type.__name__ = "Integer32"
_MplsVplsIgspMaxMemNum_Object = MibTableColumn
mplsVplsIgspMaxMemNum = _MplsVplsIgspMaxMemNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 5),
    _MplsVplsIgspMaxMemNum_Type()
)
mplsVplsIgspMaxMemNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspMaxMemNum.setStatus("current")


class _MplsVplsIgspReportSuppr_Type(Integer32):
    """Custom type mplsVplsIgspReportSuppr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsIgspReportSuppr_Type.__name__ = "Integer32"
_MplsVplsIgspReportSuppr_Object = MibTableColumn
mplsVplsIgspReportSuppr = _MplsVplsIgspReportSuppr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 6),
    _MplsVplsIgspReportSuppr_Type()
)
mplsVplsIgspReportSuppr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspReportSuppr.setStatus("current")


class _MplsVplsIgspLastMemQueryCnt_Type(Integer32):
    """Custom type mplsVplsIgspLastMemQueryCnt based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_MplsVplsIgspLastMemQueryCnt_Type.__name__ = "Integer32"
_MplsVplsIgspLastMemQueryCnt_Object = MibTableColumn
mplsVplsIgspLastMemQueryCnt = _MplsVplsIgspLastMemQueryCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 7),
    _MplsVplsIgspLastMemQueryCnt_Type()
)
mplsVplsIgspLastMemQueryCnt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspLastMemQueryCnt.setStatus("current")


class _MplsVplsIgspLastMemQueryInteval_Type(Integer32):
    """Custom type mplsVplsIgspLastMemQueryInteval based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 25500),
    )


_MplsVplsIgspLastMemQueryInteval_Type.__name__ = "Integer32"
_MplsVplsIgspLastMemQueryInteval_Object = MibTableColumn
mplsVplsIgspLastMemQueryInteval = _MplsVplsIgspLastMemQueryInteval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 8),
    _MplsVplsIgspLastMemQueryInteval_Type()
)
mplsVplsIgspLastMemQueryInteval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspLastMemQueryInteval.setStatus("current")


class _MplsVplsIgspRobuVari_Type(Integer32):
    """Custom type mplsVplsIgspRobuVari based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_MplsVplsIgspRobuVari_Type.__name__ = "Integer32"
_MplsVplsIgspRobuVari_Object = MibTableColumn
mplsVplsIgspRobuVari = _MplsVplsIgspRobuVari_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 9),
    _MplsVplsIgspRobuVari_Type()
)
mplsVplsIgspRobuVari.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspRobuVari.setStatus("current")


class _MplsVplsIgspAccessGroup_Type(OctetString):
    """Custom type mplsVplsIgspAccessGroup based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsIgspAccessGroup_Type.__name__ = "OctetString"
_MplsVplsIgspAccessGroup_Object = MibTableColumn
mplsVplsIgspAccessGroup = _MplsVplsIgspAccessGroup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 10),
    _MplsVplsIgspAccessGroup_Type()
)
mplsVplsIgspAccessGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspAccessGroup.setStatus("current")


class _MplsVplsIgspQuerierStatus_Type(Integer32):
    """Custom type mplsVplsIgspQuerierStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsVplsIgspQuerierStatus_Type.__name__ = "Integer32"
_MplsVplsIgspQuerierStatus_Object = MibTableColumn
mplsVplsIgspQuerierStatus = _MplsVplsIgspQuerierStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 11),
    _MplsVplsIgspQuerierStatus_Type()
)
mplsVplsIgspQuerierStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspQuerierStatus.setStatus("current")


class _MplsVplsIgspQuerierTimeout_Type(Integer32):
    """Custom type mplsVplsIgspQuerierTimeout based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_MplsVplsIgspQuerierTimeout_Type.__name__ = "Integer32"
_MplsVplsIgspQuerierTimeout_Object = MibTableColumn
mplsVplsIgspQuerierTimeout = _MplsVplsIgspQuerierTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 12),
    _MplsVplsIgspQuerierTimeout_Type()
)
mplsVplsIgspQuerierTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspQuerierTimeout.setStatus("current")
_MplsVplsIgspQuerierAdd_Type = IpAddress
_MplsVplsIgspQuerierAdd_Object = MibTableColumn
mplsVplsIgspQuerierAdd = _MplsVplsIgspQuerierAdd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 13),
    _MplsVplsIgspQuerierAdd_Type()
)
mplsVplsIgspQuerierAdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspQuerierAdd.setStatus("current")


class _MplsVplsIgspQueryInterval_Type(Integer32):
    """Custom type mplsVplsIgspQueryInterval based on Integer32"""
    defaultValue = 125

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 18000),
    )


_MplsVplsIgspQueryInterval_Type.__name__ = "Integer32"
_MplsVplsIgspQueryInterval_Object = MibTableColumn
mplsVplsIgspQueryInterval = _MplsVplsIgspQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 14),
    _MplsVplsIgspQueryInterval_Type()
)
mplsVplsIgspQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspQueryInterval.setStatus("current")


class _MplsVplsIgspQueryMaxResponTime_Type(Integer32):
    """Custom type mplsVplsIgspQueryMaxResponTime based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_MplsVplsIgspQueryMaxResponTime_Type.__name__ = "Integer32"
_MplsVplsIgspQueryMaxResponTime_Object = MibTableColumn
mplsVplsIgspQueryMaxResponTime = _MplsVplsIgspQueryMaxResponTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 15),
    _MplsVplsIgspQueryMaxResponTime_Type()
)
mplsVplsIgspQueryMaxResponTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspQueryMaxResponTime.setStatus("current")
_MplsVplsIgspElectedQuerier_Type = IpAddress
_MplsVplsIgspElectedQuerier_Object = MibTableColumn
mplsVplsIgspElectedQuerier = _MplsVplsIgspElectedQuerier_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 16),
    _MplsVplsIgspElectedQuerier_Type()
)
mplsVplsIgspElectedQuerier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsIgspElectedQuerier.setStatus("current")


class _MplsVplsIgspQueryOperationalState_Type(Integer32):
    """Custom type mplsVplsIgspQueryOperationalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("querier", 1),
          ("non-querier", 2))
    )


_MplsVplsIgspQueryOperationalState_Type.__name__ = "Integer32"
_MplsVplsIgspQueryOperationalState_Object = MibTableColumn
mplsVplsIgspQueryOperationalState = _MplsVplsIgspQueryOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 17),
    _MplsVplsIgspQueryOperationalState_Type()
)
mplsVplsIgspQueryOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsIgspQueryOperationalState.setStatus("current")


class _MplsVplsIgspBundingCtrlVlan_Type(Integer32):
    """Custom type mplsVplsIgspBundingCtrlVlan based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_MplsVplsIgspBundingCtrlVlan_Type.__name__ = "Integer32"
_MplsVplsIgspBundingCtrlVlan_Object = MibTableColumn
mplsVplsIgspBundingCtrlVlan = _MplsVplsIgspBundingCtrlVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 81, 1, 18),
    _MplsVplsIgspBundingCtrlVlan_Type()
)
mplsVplsIgspBundingCtrlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsVplsIgspBundingCtrlVlan.setStatus("current")
_MplsVplsIgspMrouterIfTable_Object = MibTable
mplsVplsIgspMrouterIfTable = _MplsVplsIgspMrouterIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 82)
)
if mibBuilder.loadTexts:
    mplsVplsIgspMrouterIfTable.setStatus("current")
_MplsVplsIgspMrouterIfEntry_Object = MibTableRow
mplsVplsIgspMrouterIfEntry = _MplsVplsIgspMrouterIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 82, 1)
)
mplsVplsIgspMrouterIfEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsIgspMrouterIfVplsId"),
    (0, "SWITCH", "mplsVplsIgspMrouterIfIndex"),
)
if mibBuilder.loadTexts:
    mplsVplsIgspMrouterIfEntry.setStatus("current")


class _MplsVplsIgspMrouterIfVplsId_Type(Integer32):
    """Custom type mplsVplsIgspMrouterIfVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsIgspMrouterIfVplsId_Type.__name__ = "Integer32"
_MplsVplsIgspMrouterIfVplsId_Object = MibTableColumn
mplsVplsIgspMrouterIfVplsId = _MplsVplsIgspMrouterIfVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 82, 1, 1),
    _MplsVplsIgspMrouterIfVplsId_Type()
)
mplsVplsIgspMrouterIfVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspMrouterIfVplsId.setStatus("current")


class _MplsVplsIgspMrouterIfIndex_Type(Integer32):
    """Custom type mplsVplsIgspMrouterIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MplsVplsIgspMrouterIfIndex_Type.__name__ = "Integer32"
_MplsVplsIgspMrouterIfIndex_Object = MibTableColumn
mplsVplsIgspMrouterIfIndex = _MplsVplsIgspMrouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 82, 1, 2),
    _MplsVplsIgspMrouterIfIndex_Type()
)
mplsVplsIgspMrouterIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspMrouterIfIndex.setStatus("current")
_MplsVplsIgspMrouterIfRowstatus_Type = RowStatus
_MplsVplsIgspMrouterIfRowstatus_Object = MibTableColumn
mplsVplsIgspMrouterIfRowstatus = _MplsVplsIgspMrouterIfRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 82, 1, 10),
    _MplsVplsIgspMrouterIfRowstatus_Type()
)
mplsVplsIgspMrouterIfRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsIgspMrouterIfRowstatus.setStatus("current")
_MplsVplsMrouterPeerTable_Object = MibTable
mplsVplsMrouterPeerTable = _MplsVplsMrouterPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 83)
)
if mibBuilder.loadTexts:
    mplsVplsMrouterPeerTable.setStatus("current")
_MplsVplsMrouterPeerEntry_Object = MibTableRow
mplsVplsMrouterPeerEntry = _MplsVplsMrouterPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 83, 1)
)
mplsVplsMrouterPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsMrouterPeerVplsId"),
    (0, "SWITCH", "mplsVplsMrouterPeer"),
)
if mibBuilder.loadTexts:
    mplsVplsMrouterPeerEntry.setStatus("current")


class _MplsVplsMrouterPeerVplsId_Type(Integer32):
    """Custom type mplsVplsMrouterPeerVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsMrouterPeerVplsId_Type.__name__ = "Integer32"
_MplsVplsMrouterPeerVplsId_Object = MibTableColumn
mplsVplsMrouterPeerVplsId = _MplsVplsMrouterPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 83, 1, 1),
    _MplsVplsMrouterPeerVplsId_Type()
)
mplsVplsMrouterPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsMrouterPeerVplsId.setStatus("current")


class _MplsVplsMrouterPeer_Type(OctetString):
    """Custom type mplsVplsMrouterPeer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsMrouterPeer_Type.__name__ = "OctetString"
_MplsVplsMrouterPeer_Object = MibTableColumn
mplsVplsMrouterPeer = _MplsVplsMrouterPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 83, 1, 2),
    _MplsVplsMrouterPeer_Type()
)
mplsVplsMrouterPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsMrouterPeer.setStatus("current")
_MplsVplsMrouterPeerRowstatus_Type = RowStatus
_MplsVplsMrouterPeerRowstatus_Object = MibTableColumn
mplsVplsMrouterPeerRowstatus = _MplsVplsMrouterPeerRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 83, 1, 10),
    _MplsVplsMrouterPeerRowstatus_Type()
)
mplsVplsMrouterPeerRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsMrouterPeerRowstatus.setStatus("current")
_MplsVplsIgspSgIfTable_Object = MibTable
mplsVplsIgspSgIfTable = _MplsVplsIgspSgIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84)
)
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfTable.setStatus("current")
_MplsVplsIgspSgIfEntry_Object = MibTableRow
mplsVplsIgspSgIfEntry = _MplsVplsIgspSgIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1)
)
mplsVplsIgspSgIfEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsIgspSgIfVplsId"),
    (0, "SWITCH", "mplsVplsIgspSgIfMadd"),
    (0, "SWITCH", "mplsVplsIgspSgIfIndex"),
    (0, "SWITCH", "mplsVplsIgspSgIfSourceAdd"),
)
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfEntry.setStatus("current")


class _MplsVplsIgspSgIfVplsId_Type(Integer32):
    """Custom type mplsVplsIgspSgIfVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVplsIgspSgIfVplsId_Type.__name__ = "Integer32"
_MplsVplsIgspSgIfVplsId_Object = MibTableColumn
mplsVplsIgspSgIfVplsId = _MplsVplsIgspSgIfVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1, 1),
    _MplsVplsIgspSgIfVplsId_Type()
)
mplsVplsIgspSgIfVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfVplsId.setStatus("current")
_MplsVplsIgspSgIfMadd_Type = IpAddress
_MplsVplsIgspSgIfMadd_Object = MibTableColumn
mplsVplsIgspSgIfMadd = _MplsVplsIgspSgIfMadd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1, 2),
    _MplsVplsIgspSgIfMadd_Type()
)
mplsVplsIgspSgIfMadd.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfMadd.setStatus("current")


class _MplsVplsIgspSgIfIndex_Type(Integer32):
    """Custom type mplsVplsIgspSgIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MplsVplsIgspSgIfIndex_Type.__name__ = "Integer32"
_MplsVplsIgspSgIfIndex_Object = MibTableColumn
mplsVplsIgspSgIfIndex = _MplsVplsIgspSgIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1, 3),
    _MplsVplsIgspSgIfIndex_Type()
)
mplsVplsIgspSgIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfIndex.setStatus("current")
_MplsVplsIgspSgIfSourceAdd_Type = IpAddress
_MplsVplsIgspSgIfSourceAdd_Object = MibTableColumn
mplsVplsIgspSgIfSourceAdd = _MplsVplsIgspSgIfSourceAdd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1, 4),
    _MplsVplsIgspSgIfSourceAdd_Type()
)
mplsVplsIgspSgIfSourceAdd.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfSourceAdd.setStatus("current")
_MplsVplsIgspSgIfRowstatus_Type = RowStatus
_MplsVplsIgspSgIfRowstatus_Object = MibTableColumn
mplsVplsIgspSgIfRowstatus = _MplsVplsIgspSgIfRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 84, 1, 10),
    _MplsVplsIgspSgIfRowstatus_Type()
)
mplsVplsIgspSgIfRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsIgspSgIfRowstatus.setStatus("current")
_MplsVplsIgspSgPeerTable_Object = MibTable
mplsVplsIgspSgPeerTable = _MplsVplsIgspSgPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85)
)
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerTable.setStatus("current")
_MplsVplsIgspSgPeerEntry_Object = MibTableRow
mplsVplsIgspSgPeerEntry = _MplsVplsIgspSgPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1)
)
mplsVplsIgspSgPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsIgspSgPeerVplsId"),
    (0, "SWITCH", "mplsVplsIgspSgPeerMadd"),
    (0, "SWITCH", "mplsVplsIgspSgPeer"),
    (0, "SWITCH", "mplsVplsIgspSgPeerSourceAdd"),
)
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerEntry.setStatus("current")


class _MplsVplsIgspSgPeerVplsId_Type(Integer32):
    """Custom type mplsVplsIgspSgPeerVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_MplsVplsIgspSgPeerVplsId_Type.__name__ = "Integer32"
_MplsVplsIgspSgPeerVplsId_Object = MibTableColumn
mplsVplsIgspSgPeerVplsId = _MplsVplsIgspSgPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1, 1),
    _MplsVplsIgspSgPeerVplsId_Type()
)
mplsVplsIgspSgPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerVplsId.setStatus("current")
_MplsVplsIgspSgPeerMadd_Type = IpAddress
_MplsVplsIgspSgPeerMadd_Object = MibTableColumn
mplsVplsIgspSgPeerMadd = _MplsVplsIgspSgPeerMadd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1, 2),
    _MplsVplsIgspSgPeerMadd_Type()
)
mplsVplsIgspSgPeerMadd.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerMadd.setStatus("current")


class _MplsVplsIgspSgPeer_Type(OctetString):
    """Custom type mplsVplsIgspSgPeer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsIgspSgPeer_Type.__name__ = "OctetString"
_MplsVplsIgspSgPeer_Object = MibTableColumn
mplsVplsIgspSgPeer = _MplsVplsIgspSgPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1, 3),
    _MplsVplsIgspSgPeer_Type()
)
mplsVplsIgspSgPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeer.setStatus("current")
_MplsVplsIgspSgPeerSourceAdd_Type = IpAddress
_MplsVplsIgspSgPeerSourceAdd_Object = MibTableColumn
mplsVplsIgspSgPeerSourceAdd = _MplsVplsIgspSgPeerSourceAdd_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1, 4),
    _MplsVplsIgspSgPeerSourceAdd_Type()
)
mplsVplsIgspSgPeerSourceAdd.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerSourceAdd.setStatus("current")
_MplsVplsIgspSgPeerRowstatus_Type = RowStatus
_MplsVplsIgspSgPeerRowstatus_Object = MibTableColumn
mplsVplsIgspSgPeerRowstatus = _MplsVplsIgspSgPeerRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 85, 1, 10),
    _MplsVplsIgspSgPeerRowstatus_Type()
)
mplsVplsIgspSgPeerRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsIgspSgPeerRowstatus.setStatus("current")
_MplsVplsIgspMaxGrpMemIfTable_Object = MibTable
mplsVplsIgspMaxGrpMemIfTable = _MplsVplsIgspMaxGrpMemIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86)
)
if mibBuilder.loadTexts:
    mplsVplsIgspMaxGrpMemIfTable.setStatus("current")
_MplsVplsIgspMaxGrpMemIfEntry_Object = MibTableRow
mplsVplsIgspMaxGrpMemIfEntry = _MplsVplsIgspMaxGrpMemIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1)
)
mplsVplsIgspMaxGrpMemIfEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsIgspMaxGrpMemIfVplsId"),
    (0, "SWITCH", "mplsVplsIgspMaxGrpMemIfIndex"),
)
if mibBuilder.loadTexts:
    mplsVplsIgspMaxGrpMemIfEntry.setStatus("current")


class _MplsVplsIgspMaxGrpMemIfVplsId_Type(Integer32):
    """Custom type mplsVplsIgspMaxGrpMemIfVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsIgspMaxGrpMemIfVplsId_Type.__name__ = "Integer32"
_MplsVplsIgspMaxGrpMemIfVplsId_Object = MibTableColumn
mplsVplsIgspMaxGrpMemIfVplsId = _MplsVplsIgspMaxGrpMemIfVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1, 1),
    _MplsVplsIgspMaxGrpMemIfVplsId_Type()
)
mplsVplsIgspMaxGrpMemIfVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspMaxGrpMemIfVplsId.setStatus("current")


class _MplsVplsIgspMaxGrpMemIfIndex_Type(Integer32):
    """Custom type mplsVplsIgspMaxGrpMemIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MplsVplsIgspMaxGrpMemIfIndex_Type.__name__ = "Integer32"
_MplsVplsIgspMaxGrpMemIfIndex_Object = MibTableColumn
mplsVplsIgspMaxGrpMemIfIndex = _MplsVplsIgspMaxGrpMemIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1, 2),
    _MplsVplsIgspMaxGrpMemIfIndex_Type()
)
mplsVplsIgspMaxGrpMemIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsIgspMaxGrpMemIfIndex.setStatus("current")


class _MplsVplsIgspIfMaxGrpMemNum_Type(Integer32):
    """Custom type mplsVplsIgspIfMaxGrpMemNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MplsVplsIgspIfMaxGrpMemNum_Type.__name__ = "Integer32"
_MplsVplsIgspIfMaxGrpMemNum_Object = MibTableColumn
mplsVplsIgspIfMaxGrpMemNum = _MplsVplsIgspIfMaxGrpMemNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1, 3),
    _MplsVplsIgspIfMaxGrpMemNum_Type()
)
mplsVplsIgspIfMaxGrpMemNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsIgspIfMaxGrpMemNum.setStatus("current")
_MplsVplsIgspMaxGrpMemIfRowstatus_Type = RowStatus
_MplsVplsIgspMaxGrpMemIfRowstatus_Object = MibTableColumn
mplsVplsIgspMaxGrpMemIfRowstatus = _MplsVplsIgspMaxGrpMemIfRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1, 10),
    _MplsVplsIgspMaxGrpMemIfRowstatus_Type()
)
mplsVplsIgspMaxGrpMemIfRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsIgspMaxGrpMemIfRowstatus.setStatus("current")
_MplsVplsIgspIfMaxGrpMemCount_Type = Integer32
_MplsVplsIgspIfMaxGrpMemCount_Object = MibTableColumn
mplsVplsIgspIfMaxGrpMemCount = _MplsVplsIgspIfMaxGrpMemCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 86, 1, 11),
    _MplsVplsIgspIfMaxGrpMemCount_Type()
)
mplsVplsIgspIfMaxGrpMemCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsIgspIfMaxGrpMemCount.setStatus("current")
_MplsVplsMaxGrpMemPeerTable_Object = MibTable
mplsVplsMaxGrpMemPeerTable = _MplsVplsMaxGrpMemPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87)
)
if mibBuilder.loadTexts:
    mplsVplsMaxGrpMemPeerTable.setStatus("current")
_MplsVplsMaxGrpMemPeerEntry_Object = MibTableRow
mplsVplsMaxGrpMemPeerEntry = _MplsVplsMaxGrpMemPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1)
)
mplsVplsMaxGrpMemPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsMaxGrpMemPeerVplsId"),
    (0, "SWITCH", "mplsVplsMaxGrpMemPeer"),
)
if mibBuilder.loadTexts:
    mplsVplsMaxGrpMemPeerEntry.setStatus("current")


class _MplsVplsMaxGrpMemPeerVplsId_Type(Integer32):
    """Custom type mplsVplsMaxGrpMemPeerVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsMaxGrpMemPeerVplsId_Type.__name__ = "Integer32"
_MplsVplsMaxGrpMemPeerVplsId_Object = MibTableColumn
mplsVplsMaxGrpMemPeerVplsId = _MplsVplsMaxGrpMemPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1, 1),
    _MplsVplsMaxGrpMemPeerVplsId_Type()
)
mplsVplsMaxGrpMemPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsMaxGrpMemPeerVplsId.setStatus("current")


class _MplsVplsMaxGrpMemPeer_Type(OctetString):
    """Custom type mplsVplsMaxGrpMemPeer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsMaxGrpMemPeer_Type.__name__ = "OctetString"
_MplsVplsMaxGrpMemPeer_Object = MibTableColumn
mplsVplsMaxGrpMemPeer = _MplsVplsMaxGrpMemPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1, 2),
    _MplsVplsMaxGrpMemPeer_Type()
)
mplsVplsMaxGrpMemPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsMaxGrpMemPeer.setStatus("current")


class _MplsVplsPeerMaxGrpMemNum_Type(Integer32):
    """Custom type mplsVplsPeerMaxGrpMemNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MplsVplsPeerMaxGrpMemNum_Type.__name__ = "Integer32"
_MplsVplsPeerMaxGrpMemNum_Object = MibTableColumn
mplsVplsPeerMaxGrpMemNum = _MplsVplsPeerMaxGrpMemNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1, 3),
    _MplsVplsPeerMaxGrpMemNum_Type()
)
mplsVplsPeerMaxGrpMemNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsPeerMaxGrpMemNum.setStatus("current")
_MplsVplsMaxGrpMemPeerRowstatus_Type = RowStatus
_MplsVplsMaxGrpMemPeerRowstatus_Object = MibTableColumn
mplsVplsMaxGrpMemPeerRowstatus = _MplsVplsMaxGrpMemPeerRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1, 10),
    _MplsVplsMaxGrpMemPeerRowstatus_Type()
)
mplsVplsMaxGrpMemPeerRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsVplsMaxGrpMemPeerRowstatus.setStatus("current")
_MplsVplsPeerMaxGrpMemCount_Type = Integer32
_MplsVplsPeerMaxGrpMemCount_Object = MibTableColumn
mplsVplsPeerMaxGrpMemCount = _MplsVplsPeerMaxGrpMemCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 87, 1, 11),
    _MplsVplsPeerMaxGrpMemCount_Type()
)
mplsVplsPeerMaxGrpMemCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsPeerMaxGrpMemCount.setStatus("current")
_MplsVplsShowMrouterIfTable_Object = MibTable
mplsVplsShowMrouterIfTable = _MplsVplsShowMrouterIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88)
)
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfTable.setStatus("current")
_MplsVplsShowMrouterIfEntry_Object = MibTableRow
mplsVplsShowMrouterIfEntry = _MplsVplsShowMrouterIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1)
)
mplsVplsShowMrouterIfEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsShowMrouterIfVplsId"),
    (0, "SWITCH", "mplsVplsShowMrouterIfIndex"),
)
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfEntry.setStatus("current")


class _MplsVplsShowMrouterIfVplsId_Type(Integer32):
    """Custom type mplsVplsShowMrouterIfVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsShowMrouterIfVplsId_Type.__name__ = "Integer32"
_MplsVplsShowMrouterIfVplsId_Object = MibTableColumn
mplsVplsShowMrouterIfVplsId = _MplsVplsShowMrouterIfVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 1),
    _MplsVplsShowMrouterIfVplsId_Type()
)
mplsVplsShowMrouterIfVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfVplsId.setStatus("current")


class _MplsVplsShowMrouterIfIndex_Type(Integer32):
    """Custom type mplsVplsShowMrouterIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MplsVplsShowMrouterIfIndex_Type.__name__ = "Integer32"
_MplsVplsShowMrouterIfIndex_Object = MibTableColumn
mplsVplsShowMrouterIfIndex = _MplsVplsShowMrouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 2),
    _MplsVplsShowMrouterIfIndex_Type()
)
mplsVplsShowMrouterIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfIndex.setStatus("current")


class _MplsVplsShowMrouterIfName_Type(OctetString):
    """Custom type mplsVplsShowMrouterIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowMrouterIfName_Type.__name__ = "OctetString"
_MplsVplsShowMrouterIfName_Object = MibTableColumn
mplsVplsShowMrouterIfName = _MplsVplsShowMrouterIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 3),
    _MplsVplsShowMrouterIfName_Type()
)
mplsVplsShowMrouterIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfName.setStatus("current")


class _MplsVplsShowMrouterIfMode_Type(Integer32):
    """Custom type mplsVplsShowMrouterIfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("both", 3))
    )


_MplsVplsShowMrouterIfMode_Type.__name__ = "Integer32"
_MplsVplsShowMrouterIfMode_Object = MibTableColumn
mplsVplsShowMrouterIfMode = _MplsVplsShowMrouterIfMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 4),
    _MplsVplsShowMrouterIfMode_Type()
)
mplsVplsShowMrouterIfMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfMode.setStatus("current")


class _MplsVplsShowMrouterIfUptime_Type(OctetString):
    """Custom type mplsVplsShowMrouterIfUptime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowMrouterIfUptime_Type.__name__ = "OctetString"
_MplsVplsShowMrouterIfUptime_Object = MibTableColumn
mplsVplsShowMrouterIfUptime = _MplsVplsShowMrouterIfUptime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 5),
    _MplsVplsShowMrouterIfUptime_Type()
)
mplsVplsShowMrouterIfUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfUptime.setStatus("current")


class _MplsVplsShowMrouterIfExprietime_Type(OctetString):
    """Custom type mplsVplsShowMrouterIfExprietime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowMrouterIfExprietime_Type.__name__ = "OctetString"
_MplsVplsShowMrouterIfExprietime_Object = MibTableColumn
mplsVplsShowMrouterIfExprietime = _MplsVplsShowMrouterIfExprietime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 88, 1, 6),
    _MplsVplsShowMrouterIfExprietime_Type()
)
mplsVplsShowMrouterIfExprietime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterIfExprietime.setStatus("current")
_MplsVplsShowMrouterPeerTable_Object = MibTable
mplsVplsShowMrouterPeerTable = _MplsVplsShowMrouterPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89)
)
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerTable.setStatus("current")
_MplsVplsShowMrouterPeerEntry_Object = MibTableRow
mplsVplsShowMrouterPeerEntry = _MplsVplsShowMrouterPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1)
)
mplsVplsShowMrouterPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsShowMrouterPeerVplsId"),
    (0, "SWITCH", "mplsVplsShowMrouterPeer"),
)
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerEntry.setStatus("current")


class _MplsVplsShowMrouterPeerVplsId_Type(Integer32):
    """Custom type mplsVplsShowMrouterPeerVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsShowMrouterPeerVplsId_Type.__name__ = "Integer32"
_MplsVplsShowMrouterPeerVplsId_Object = MibTableColumn
mplsVplsShowMrouterPeerVplsId = _MplsVplsShowMrouterPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 1),
    _MplsVplsShowMrouterPeerVplsId_Type()
)
mplsVplsShowMrouterPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerVplsId.setStatus("current")


class _MplsVplsShowMrouterPeer_Type(OctetString):
    """Custom type mplsVplsShowMrouterPeer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowMrouterPeer_Type.__name__ = "OctetString"
_MplsVplsShowMrouterPeer_Object = MibTableColumn
mplsVplsShowMrouterPeer = _MplsVplsShowMrouterPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 2),
    _MplsVplsShowMrouterPeer_Type()
)
mplsVplsShowMrouterPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeer.setStatus("current")


class _MplsVplsShowMrouterPeerName_Type(OctetString):
    """Custom type mplsVplsShowMrouterPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowMrouterPeerName_Type.__name__ = "OctetString"
_MplsVplsShowMrouterPeerName_Object = MibTableColumn
mplsVplsShowMrouterPeerName = _MplsVplsShowMrouterPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 3),
    _MplsVplsShowMrouterPeerName_Type()
)
mplsVplsShowMrouterPeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerName.setStatus("current")


class _MplsVplsShowMrouterPeerMode_Type(Integer32):
    """Custom type mplsVplsShowMrouterPeerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("static", 1),
          ("dynamic", 2),
          ("both", 3))
    )


_MplsVplsShowMrouterPeerMode_Type.__name__ = "Integer32"
_MplsVplsShowMrouterPeerMode_Object = MibTableColumn
mplsVplsShowMrouterPeerMode = _MplsVplsShowMrouterPeerMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 4),
    _MplsVplsShowMrouterPeerMode_Type()
)
mplsVplsShowMrouterPeerMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerMode.setStatus("current")


class _MplsVplsShowMrouterPeerUptime_Type(OctetString):
    """Custom type mplsVplsShowMrouterPeerUptime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowMrouterPeerUptime_Type.__name__ = "OctetString"
_MplsVplsShowMrouterPeerUptime_Object = MibTableColumn
mplsVplsShowMrouterPeerUptime = _MplsVplsShowMrouterPeerUptime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 5),
    _MplsVplsShowMrouterPeerUptime_Type()
)
mplsVplsShowMrouterPeerUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerUptime.setStatus("current")


class _MplsVplsShowMrouterPeerExprietime_Type(OctetString):
    """Custom type mplsVplsShowMrouterPeerExprietime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowMrouterPeerExprietime_Type.__name__ = "OctetString"
_MplsVplsShowMrouterPeerExprietime_Object = MibTableColumn
mplsVplsShowMrouterPeerExprietime = _MplsVplsShowMrouterPeerExprietime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 89, 1, 6),
    _MplsVplsShowMrouterPeerExprietime_Type()
)
mplsVplsShowMrouterPeerExprietime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowMrouterPeerExprietime.setStatus("current")
_MplsVplsShowGroupIfTable_Object = MibTable
mplsVplsShowGroupIfTable = _MplsVplsShowGroupIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90)
)
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfTable.setStatus("current")
_MplsVplsShowGroupIfEntry_Object = MibTableRow
mplsVplsShowGroupIfEntry = _MplsVplsShowGroupIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1)
)
mplsVplsShowGroupIfEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsShowGroupIfVplsId"),
    (0, "SWITCH", "mplsVplsShowGroupIfIndex"),
    (0, "SWITCH", "mplsVplsShowGroupIfAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfEntry.setStatus("current")


class _MplsVplsShowGroupIfVplsId_Type(Integer32):
    """Custom type mplsVplsShowGroupIfVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsShowGroupIfVplsId_Type.__name__ = "Integer32"
_MplsVplsShowGroupIfVplsId_Object = MibTableColumn
mplsVplsShowGroupIfVplsId = _MplsVplsShowGroupIfVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 1),
    _MplsVplsShowGroupIfVplsId_Type()
)
mplsVplsShowGroupIfVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfVplsId.setStatus("current")


class _MplsVplsShowGroupIfIndex_Type(Integer32):
    """Custom type mplsVplsShowGroupIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_MplsVplsShowGroupIfIndex_Type.__name__ = "Integer32"
_MplsVplsShowGroupIfIndex_Object = MibTableColumn
mplsVplsShowGroupIfIndex = _MplsVplsShowGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 2),
    _MplsVplsShowGroupIfIndex_Type()
)
mplsVplsShowGroupIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfIndex.setStatus("current")
_MplsVplsShowGroupIfAddr_Type = IpAddress
_MplsVplsShowGroupIfAddr_Object = MibTableColumn
mplsVplsShowGroupIfAddr = _MplsVplsShowGroupIfAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 3),
    _MplsVplsShowGroupIfAddr_Type()
)
mplsVplsShowGroupIfAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfAddr.setStatus("current")


class _MplsVplsShowGroupIfName_Type(OctetString):
    """Custom type mplsVplsShowGroupIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowGroupIfName_Type.__name__ = "OctetString"
_MplsVplsShowGroupIfName_Object = MibTableColumn
mplsVplsShowGroupIfName = _MplsVplsShowGroupIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 4),
    _MplsVplsShowGroupIfName_Type()
)
mplsVplsShowGroupIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfName.setStatus("current")


class _MplsVplsShowGroupIfUptime_Type(OctetString):
    """Custom type mplsVplsShowGroupIfUptime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowGroupIfUptime_Type.__name__ = "OctetString"
_MplsVplsShowGroupIfUptime_Object = MibTableColumn
mplsVplsShowGroupIfUptime = _MplsVplsShowGroupIfUptime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 5),
    _MplsVplsShowGroupIfUptime_Type()
)
mplsVplsShowGroupIfUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfUptime.setStatus("current")


class _MplsVplsShowGroupIfExprietime_Type(OctetString):
    """Custom type mplsVplsShowGroupIfExprietime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowGroupIfExprietime_Type.__name__ = "OctetString"
_MplsVplsShowGroupIfExprietime_Object = MibTableColumn
mplsVplsShowGroupIfExprietime = _MplsVplsShowGroupIfExprietime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 6),
    _MplsVplsShowGroupIfExprietime_Type()
)
mplsVplsShowGroupIfExprietime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfExprietime.setStatus("current")
_MplsVplsShowGroupIfLastReporter_Type = IpAddress
_MplsVplsShowGroupIfLastReporter_Object = MibTableColumn
mplsVplsShowGroupIfLastReporter = _MplsVplsShowGroupIfLastReporter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 90, 1, 7),
    _MplsVplsShowGroupIfLastReporter_Type()
)
mplsVplsShowGroupIfLastReporter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupIfLastReporter.setStatus("current")
_MplsVplsShowGroupPeerTable_Object = MibTable
mplsVplsShowGroupPeerTable = _MplsVplsShowGroupPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91)
)
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerTable.setStatus("current")
_MplsVplsShowGroupPeerEntry_Object = MibTableRow
mplsVplsShowGroupPeerEntry = _MplsVplsShowGroupPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1)
)
mplsVplsShowGroupPeerEntry.setIndexNames(
    (0, "SWITCH", "mplsVplsShowGroupPeerVplsId"),
    (0, "SWITCH", "mplsVplsShowGroupPeer"),
    (0, "SWITCH", "mplsVplsShowGroupPeerAddr"),
)
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerEntry.setStatus("current")


class _MplsVplsShowGroupPeerVplsId_Type(Integer32):
    """Custom type mplsVplsShowGroupPeerVplsId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_MplsVplsShowGroupPeerVplsId_Type.__name__ = "Integer32"
_MplsVplsShowGroupPeerVplsId_Object = MibTableColumn
mplsVplsShowGroupPeerVplsId = _MplsVplsShowGroupPeerVplsId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 1),
    _MplsVplsShowGroupPeerVplsId_Type()
)
mplsVplsShowGroupPeerVplsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerVplsId.setStatus("current")


class _MplsVplsShowGroupPeer_Type(OctetString):
    """Custom type mplsVplsShowGroupPeer based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowGroupPeer_Type.__name__ = "OctetString"
_MplsVplsShowGroupPeer_Object = MibTableColumn
mplsVplsShowGroupPeer = _MplsVplsShowGroupPeer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 2),
    _MplsVplsShowGroupPeer_Type()
)
mplsVplsShowGroupPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeer.setStatus("current")
_MplsVplsShowGroupPeerAddr_Type = IpAddress
_MplsVplsShowGroupPeerAddr_Object = MibTableColumn
mplsVplsShowGroupPeerAddr = _MplsVplsShowGroupPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 3),
    _MplsVplsShowGroupPeerAddr_Type()
)
mplsVplsShowGroupPeerAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerAddr.setStatus("current")


class _MplsVplsShowGroupPeerName_Type(OctetString):
    """Custom type mplsVplsShowGroupPeerName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsVplsShowGroupPeerName_Type.__name__ = "OctetString"
_MplsVplsShowGroupPeerName_Object = MibTableColumn
mplsVplsShowGroupPeerName = _MplsVplsShowGroupPeerName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 4),
    _MplsVplsShowGroupPeerName_Type()
)
mplsVplsShowGroupPeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerName.setStatus("current")


class _MplsVplsShowGroupPeerUptime_Type(OctetString):
    """Custom type mplsVplsShowGroupPeerUptime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowGroupPeerUptime_Type.__name__ = "OctetString"
_MplsVplsShowGroupPeerUptime_Object = MibTableColumn
mplsVplsShowGroupPeerUptime = _MplsVplsShowGroupPeerUptime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 5),
    _MplsVplsShowGroupPeerUptime_Type()
)
mplsVplsShowGroupPeerUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerUptime.setStatus("current")


class _MplsVplsShowGroupPeerExprietime_Type(OctetString):
    """Custom type mplsVplsShowGroupPeerExprietime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 27),
    )


_MplsVplsShowGroupPeerExprietime_Type.__name__ = "OctetString"
_MplsVplsShowGroupPeerExprietime_Object = MibTableColumn
mplsVplsShowGroupPeerExprietime = _MplsVplsShowGroupPeerExprietime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 6),
    _MplsVplsShowGroupPeerExprietime_Type()
)
mplsVplsShowGroupPeerExprietime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerExprietime.setStatus("current")
_MplsVplsShowGroupPeerLastReporter_Type = IpAddress
_MplsVplsShowGroupPeerLastReporter_Object = MibTableColumn
mplsVplsShowGroupPeerLastReporter = _MplsVplsShowGroupPeerLastReporter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 91, 1, 7),
    _MplsVplsShowGroupPeerLastReporter_Type()
)
mplsVplsShowGroupPeerLastReporter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsVplsShowGroupPeerLastReporter.setStatus("current")
_MplsInterfaceMplsVpwsPolicyTable_Object = MibTable
mplsInterfaceMplsVpwsPolicyTable = _MplsInterfaceMplsVpwsPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92)
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyTable.setStatus("current")
_MplsInterfaceMplsVpwsPolicyEntry_Object = MibTableRow
mplsInterfaceMplsVpwsPolicyEntry = _MplsInterfaceMplsVpwsPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1)
)
mplsInterfaceMplsVpwsPolicyEntry.setIndexNames(
    (0, "SWITCH", "mplsInterfaceMplsVpwsPolicyIfIndex"),
)
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyEntry.setStatus("current")


class _MplsInterfaceMplsVpwsPolicyIfIndex_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsPolicyIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_MplsInterfaceMplsVpwsPolicyIfIndex_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsPolicyIfIndex_Object = MibTableColumn
mplsInterfaceMplsVpwsPolicyIfIndex = _MplsInterfaceMplsVpwsPolicyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1, 1),
    _MplsInterfaceMplsVpwsPolicyIfIndex_Type()
)
mplsInterfaceMplsVpwsPolicyIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyIfIndex.setStatus("current")


class _MplsInterfaceMplsVpwsPolicyVcName_Type(OctetString):
    """Custom type mplsInterfaceMplsVpwsPolicyVcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsInterfaceMplsVpwsPolicyVcName_Type.__name__ = "OctetString"
_MplsInterfaceMplsVpwsPolicyVcName_Object = MibTableColumn
mplsInterfaceMplsVpwsPolicyVcName = _MplsInterfaceMplsVpwsPolicyVcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1, 2),
    _MplsInterfaceMplsVpwsPolicyVcName_Type()
)
mplsInterfaceMplsVpwsPolicyVcName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyVcName.setStatus("current")


class _MplsInterfaceMplsVpwsPolicyName_Type(OctetString):
    """Custom type mplsInterfaceMplsVpwsPolicyName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_MplsInterfaceMplsVpwsPolicyName_Type.__name__ = "OctetString"
_MplsInterfaceMplsVpwsPolicyName_Object = MibTableColumn
mplsInterfaceMplsVpwsPolicyName = _MplsInterfaceMplsVpwsPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1, 3),
    _MplsInterfaceMplsVpwsPolicyName_Type()
)
mplsInterfaceMplsVpwsPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyName.setStatus("current")


class _MplsInterfaceMplsVpwsPolicyStatis_Type(Integer32):
    """Custom type mplsInterfaceMplsVpwsPolicyStatis based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_MplsInterfaceMplsVpwsPolicyStatis_Type.__name__ = "Integer32"
_MplsInterfaceMplsVpwsPolicyStatis_Object = MibTableColumn
mplsInterfaceMplsVpwsPolicyStatis = _MplsInterfaceMplsVpwsPolicyStatis_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1, 4),
    _MplsInterfaceMplsVpwsPolicyStatis_Type()
)
mplsInterfaceMplsVpwsPolicyStatis.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyStatis.setStatus("current")
_MplsInterfaceMplsVpwsPolicyRowStatus_Type = RowStatus
_MplsInterfaceMplsVpwsPolicyRowStatus_Object = MibTableColumn
mplsInterfaceMplsVpwsPolicyRowStatus = _MplsInterfaceMplsVpwsPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 92, 1, 10),
    _MplsInterfaceMplsVpwsPolicyRowStatus_Type()
)
mplsInterfaceMplsVpwsPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    mplsInterfaceMplsVpwsPolicyRowStatus.setStatus("current")
_MplsTpOAMLmmTable_Object = MibTable
mplsTpOAMLmmTable = _MplsTpOAMLmmTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93)
)
if mibBuilder.loadTexts:
    mplsTpOAMLmmTable.setStatus("current")
_MplsTpOAMLmmEntry_Object = MibTableRow
mplsTpOAMLmmEntry = _MplsTpOAMLmmEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1)
)
mplsTpOAMLmmEntry.setIndexNames(
    (0, "SWITCH", "oamLmmIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLmmEntry.setStatus("current")


class _OamLmmIndex_Type(Integer32):
    """Custom type oamLmmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_OamLmmIndex_Type.__name__ = "Integer32"
_OamLmmIndex_Object = MibTableColumn
oamLmmIndex = _OamLmmIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 1),
    _OamLmmIndex_Type()
)
oamLmmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamLmmIndex.setStatus("current")


class _OamLmmServiceType_Type(Integer32):
    """Custom type oamLmmServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp-pe", 2),
          ("pw-tpe", 3))
    )


_OamLmmServiceType_Type.__name__ = "Integer32"
_OamLmmServiceType_Object = MibTableColumn
oamLmmServiceType = _OamLmmServiceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 2),
    _OamLmmServiceType_Type()
)
oamLmmServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLmmServiceType.setStatus("current")


class _OamLmmServiceName_Type(OctetString):
    """Custom type oamLmmServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_OamLmmServiceName_Type.__name__ = "OctetString"
_OamLmmServiceName_Object = MibTableColumn
oamLmmServiceName = _OamLmmServiceName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 3),
    _OamLmmServiceName_Type()
)
oamLmmServiceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLmmServiceName.setStatus("current")


class _OamLmmRepeat_Type(Integer32):
    """Custom type oamLmmRepeat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_OamLmmRepeat_Type.__name__ = "Integer32"
_OamLmmRepeat_Object = MibTableColumn
oamLmmRepeat = _OamLmmRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 4),
    _OamLmmRepeat_Type()
)
oamLmmRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLmmRepeat.setStatus("current")


class _OamLmmInterval_Type(Integer32):
    """Custom type oamLmmInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("one-hundred-ms", 1),
          ("one-sec", 2),
          ("ten-sec", 3))
    )


_OamLmmInterval_Type.__name__ = "Integer32"
_OamLmmInterval_Object = MibTableColumn
oamLmmInterval = _OamLmmInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 5),
    _OamLmmInterval_Type()
)
oamLmmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLmmInterval.setStatus("current")
_OamLmmRowstatus_Type = RowStatus
_OamLmmRowstatus_Object = MibTableColumn
oamLmmRowstatus = _OamLmmRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 93, 1, 15),
    _OamLmmRowstatus_Type()
)
oamLmmRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    oamLmmRowstatus.setStatus("current")
_MplsTpOAMLmDualTable_Object = MibTable
mplsTpOAMLmDualTable = _MplsTpOAMLmDualTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94)
)
if mibBuilder.loadTexts:
    mplsTpOAMLmDualTable.setStatus("current")
_MplsTpOAMLmDualEntry_Object = MibTableRow
mplsTpOAMLmDualEntry = _MplsTpOAMLmDualEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1)
)
mplsTpOAMLmDualEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMLmDualMegId"),
    (0, "SWITCH", "mplsTpOAMLmDualIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLmDualEntry.setStatus("current")
_MplsTpOAMLmDualMegId_Type = OctetString
_MplsTpOAMLmDualMegId_Object = MibTableColumn
mplsTpOAMLmDualMegId = _MplsTpOAMLmDualMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 1),
    _MplsTpOAMLmDualMegId_Type()
)
mplsTpOAMLmDualMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMegId.setStatus("current")
_MplsTpOAMLmDualIndex_Type = Integer32
_MplsTpOAMLmDualIndex_Object = MibTableColumn
mplsTpOAMLmDualIndex = _MplsTpOAMLmDualIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 2),
    _MplsTpOAMLmDualIndex_Type()
)
mplsTpOAMLmDualIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualIndex.setStatus("current")


class _MplsTpOAMLmDualService_Type(Integer32):
    """Custom type mplsTpOAMLmDualService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp", 2),
          ("pw-tpe", 3))
    )


_MplsTpOAMLmDualService_Type.__name__ = "Integer32"
_MplsTpOAMLmDualService_Object = MibTableColumn
mplsTpOAMLmDualService = _MplsTpOAMLmDualService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 3),
    _MplsTpOAMLmDualService_Type()
)
mplsTpOAMLmDualService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualService.setStatus("current")
_MplsTpOAMLmDualMepId_Type = Integer32
_MplsTpOAMLmDualMepId_Object = MibTableColumn
mplsTpOAMLmDualMepId = _MplsTpOAMLmDualMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 4),
    _MplsTpOAMLmDualMepId_Type()
)
mplsTpOAMLmDualMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMepId.setStatus("current")


class _MplsTpOAMLmDualExp_Type(Integer32):
    """Custom type mplsTpOAMLmDualExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_MplsTpOAMLmDualExp_Type.__name__ = "Integer32"
_MplsTpOAMLmDualExp_Object = MibTableColumn
mplsTpOAMLmDualExp = _MplsTpOAMLmDualExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 5),
    _MplsTpOAMLmDualExp_Type()
)
mplsTpOAMLmDualExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualExp.setStatus("current")
_MplsTpOAMLmDualLocalLoss_Type = Integer32
_MplsTpOAMLmDualLocalLoss_Object = MibTableColumn
mplsTpOAMLmDualLocalLoss = _MplsTpOAMLmDualLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 6),
    _MplsTpOAMLmDualLocalLoss_Type()
)
mplsTpOAMLmDualLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLocalLoss.setStatus("current")
_MplsTpOAMLmDualLocalLossRatio_Type = Integer32
_MplsTpOAMLmDualLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmDualLocalLossRatio = _MplsTpOAMLmDualLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 7),
    _MplsTpOAMLmDualLocalLossRatio_Type()
)
mplsTpOAMLmDualLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLocalLossRatio.setStatus("current")
_MplsTpOAMLmDualRemoteLoss_Type = Integer32
_MplsTpOAMLmDualRemoteLoss_Object = MibTableColumn
mplsTpOAMLmDualRemoteLoss = _MplsTpOAMLmDualRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 8),
    _MplsTpOAMLmDualRemoteLoss_Type()
)
mplsTpOAMLmDualRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualRemoteLoss.setStatus("current")
_MplsTpOAMLmDualRemoteLossRatio_Type = Integer32
_MplsTpOAMLmDualRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmDualRemoteLossRatio = _MplsTpOAMLmDualRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 94, 1, 9),
    _MplsTpOAMLmDualRemoteLossRatio_Type()
)
mplsTpOAMLmDualRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualRemoteLossRatio.setStatus("current")
_MplsTpOAMLmDualLossTable_Object = MibTable
mplsTpOAMLmDualLossTable = _MplsTpOAMLmDualLossTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95)
)
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossTable.setStatus("current")
_MplsTpOAMLmDualLossEntry_Object = MibTableRow
mplsTpOAMLmDualLossEntry = _MplsTpOAMLmDualLossEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1)
)
mplsTpOAMLmDualLossEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMLmDualLossMegId"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossEntry.setStatus("current")


class _MplsTpOAMLmDualLossMegId_Type(OctetString):
    """Custom type mplsTpOAMLmDualLossMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsTpOAMLmDualLossMegId_Type.__name__ = "OctetString"
_MplsTpOAMLmDualLossMegId_Object = MibTableColumn
mplsTpOAMLmDualLossMegId = _MplsTpOAMLmDualLossMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 1),
    _MplsTpOAMLmDualLossMegId_Type()
)
mplsTpOAMLmDualLossMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossMegId.setStatus("current")
_MplsTpOAMLmDualLossMepId_Type = Integer32
_MplsTpOAMLmDualLossMepId_Object = MibTableColumn
mplsTpOAMLmDualLossMepId = _MplsTpOAMLmDualLossMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 2),
    _MplsTpOAMLmDualLossMepId_Type()
)
mplsTpOAMLmDualLossMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossMepId.setStatus("current")


class _MplsTpOAMLmDualLossStartTime_Type(OctetString):
    """Custom type mplsTpOAMLmDualLossStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsTpOAMLmDualLossStartTime_Type.__name__ = "OctetString"
_MplsTpOAMLmDualLossStartTime_Object = MibTableColumn
mplsTpOAMLmDualLossStartTime = _MplsTpOAMLmDualLossStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 3),
    _MplsTpOAMLmDualLossStartTime_Type()
)
mplsTpOAMLmDualLossStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossStartTime.setStatus("current")


class _MplsTpOAMLmDualLossEndTime_Type(OctetString):
    """Custom type mplsTpOAMLmDualLossEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsTpOAMLmDualLossEndTime_Type.__name__ = "OctetString"
_MplsTpOAMLmDualLossEndTime_Object = MibTableColumn
mplsTpOAMLmDualLossEndTime = _MplsTpOAMLmDualLossEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 4),
    _MplsTpOAMLmDualLossEndTime_Type()
)
mplsTpOAMLmDualLossEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualLossEndTime.setStatus("current")
_MplsTpOAMLmDualStatusInterval_Type = Integer32
_MplsTpOAMLmDualStatusInterval_Object = MibTableColumn
mplsTpOAMLmDualStatusInterval = _MplsTpOAMLmDualStatusInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 5),
    _MplsTpOAMLmDualStatusInterval_Type()
)
mplsTpOAMLmDualStatusInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualStatusInterval.setStatus("current")
_MplsTpOAMLmDualMaxLocalLoss_Type = Integer32
_MplsTpOAMLmDualMaxLocalLoss_Object = MibTableColumn
mplsTpOAMLmDualMaxLocalLoss = _MplsTpOAMLmDualMaxLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 6),
    _MplsTpOAMLmDualMaxLocalLoss_Type()
)
mplsTpOAMLmDualMaxLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMaxLocalLoss.setStatus("current")
_MplsTpOAMLmDualMaxLocalLossRatio_Type = Integer32
_MplsTpOAMLmDualMaxLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmDualMaxLocalLossRatio = _MplsTpOAMLmDualMaxLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 7),
    _MplsTpOAMLmDualMaxLocalLossRatio_Type()
)
mplsTpOAMLmDualMaxLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMaxLocalLossRatio.setStatus("current")
_MplsTpOAMLmDualMinLocalLoss_Type = Integer32
_MplsTpOAMLmDualMinLocalLoss_Object = MibTableColumn
mplsTpOAMLmDualMinLocalLoss = _MplsTpOAMLmDualMinLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 8),
    _MplsTpOAMLmDualMinLocalLoss_Type()
)
mplsTpOAMLmDualMinLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMinLocalLoss.setStatus("current")
_MplsTpOAMLmDualMinLocalLossRatio_Type = Integer32
_MplsTpOAMLmDualMinLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmDualMinLocalLossRatio = _MplsTpOAMLmDualMinLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 9),
    _MplsTpOAMLmDualMinLocalLossRatio_Type()
)
mplsTpOAMLmDualMinLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMinLocalLossRatio.setStatus("current")
_MplsTpOAMLmDualMaxRemoteLoss_Type = Integer32
_MplsTpOAMLmDualMaxRemoteLoss_Object = MibTableColumn
mplsTpOAMLmDualMaxRemoteLoss = _MplsTpOAMLmDualMaxRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 10),
    _MplsTpOAMLmDualMaxRemoteLoss_Type()
)
mplsTpOAMLmDualMaxRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMaxRemoteLoss.setStatus("current")
_MplsTpOAMLmDualMaxRemoteLossRatio_Type = Integer32
_MplsTpOAMLmDualMaxRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmDualMaxRemoteLossRatio = _MplsTpOAMLmDualMaxRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 11),
    _MplsTpOAMLmDualMaxRemoteLossRatio_Type()
)
mplsTpOAMLmDualMaxRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMaxRemoteLossRatio.setStatus("current")
_MplsTpOAMLmDualMinRemoteLoss_Type = Integer32
_MplsTpOAMLmDualMinRemoteLoss_Object = MibTableColumn
mplsTpOAMLmDualMinRemoteLoss = _MplsTpOAMLmDualMinRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 12),
    _MplsTpOAMLmDualMinRemoteLoss_Type()
)
mplsTpOAMLmDualMinRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMinRemoteLoss.setStatus("current")
_MplsTpOAMLmDualMinRemoteLossRatio_Type = Integer32
_MplsTpOAMLmDualMinRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmDualMinRemoteLossRatio = _MplsTpOAMLmDualMinRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 95, 1, 13),
    _MplsTpOAMLmDualMinRemoteLossRatio_Type()
)
mplsTpOAMLmDualMinRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmDualMinRemoteLossRatio.setStatus("current")
_MplsTpOAMLmSingleTable_Object = MibTable
mplsTpOAMLmSingleTable = _MplsTpOAMLmSingleTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96)
)
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleTable.setStatus("current")
_MplsTpOAMLmSingleEntry_Object = MibTableRow
mplsTpOAMLmSingleEntry = _MplsTpOAMLmSingleEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1)
)
mplsTpOAMLmSingleEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMLmSingleMegId"),
    (0, "SWITCH", "mplsTpOAMLmSingleIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleEntry.setStatus("current")
_MplsTpOAMLmSingleMegId_Type = OctetString
_MplsTpOAMLmSingleMegId_Object = MibTableColumn
mplsTpOAMLmSingleMegId = _MplsTpOAMLmSingleMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 1),
    _MplsTpOAMLmSingleMegId_Type()
)
mplsTpOAMLmSingleMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMegId.setStatus("current")
_MplsTpOAMLmSingleIndex_Type = Integer32
_MplsTpOAMLmSingleIndex_Object = MibTableColumn
mplsTpOAMLmSingleIndex = _MplsTpOAMLmSingleIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 2),
    _MplsTpOAMLmSingleIndex_Type()
)
mplsTpOAMLmSingleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleIndex.setStatus("current")


class _MplsTpOAMLmSingleService_Type(Integer32):
    """Custom type mplsTpOAMLmSingleService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("section", 1),
          ("lsp", 2),
          ("pw-tpe", 3))
    )


_MplsTpOAMLmSingleService_Type.__name__ = "Integer32"
_MplsTpOAMLmSingleService_Object = MibTableColumn
mplsTpOAMLmSingleService = _MplsTpOAMLmSingleService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 3),
    _MplsTpOAMLmSingleService_Type()
)
mplsTpOAMLmSingleService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleService.setStatus("current")
_MplsTpOAMLmSingleMepId_Type = Integer32
_MplsTpOAMLmSingleMepId_Object = MibTableColumn
mplsTpOAMLmSingleMepId = _MplsTpOAMLmSingleMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 4),
    _MplsTpOAMLmSingleMepId_Type()
)
mplsTpOAMLmSingleMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMepId.setStatus("current")


class _MplsTpOAMLmSingleExp_Type(Integer32):
    """Custom type mplsTpOAMLmSingleExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_MplsTpOAMLmSingleExp_Type.__name__ = "Integer32"
_MplsTpOAMLmSingleExp_Object = MibTableColumn
mplsTpOAMLmSingleExp = _MplsTpOAMLmSingleExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 5),
    _MplsTpOAMLmSingleExp_Type()
)
mplsTpOAMLmSingleExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleExp.setStatus("current")
_MplsTpOAMLmSingleLocalLoss_Type = Integer32
_MplsTpOAMLmSingleLocalLoss_Object = MibTableColumn
mplsTpOAMLmSingleLocalLoss = _MplsTpOAMLmSingleLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 6),
    _MplsTpOAMLmSingleLocalLoss_Type()
)
mplsTpOAMLmSingleLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLocalLoss.setStatus("current")
_MplsTpOAMLmSingleLocalLossRatio_Type = Integer32
_MplsTpOAMLmSingleLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleLocalLossRatio = _MplsTpOAMLmSingleLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 7),
    _MplsTpOAMLmSingleLocalLossRatio_Type()
)
mplsTpOAMLmSingleLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLocalLossRatio.setStatus("current")
_MplsTpOAMLmSingleRemoteLoss_Type = Integer32
_MplsTpOAMLmSingleRemoteLoss_Object = MibTableColumn
mplsTpOAMLmSingleRemoteLoss = _MplsTpOAMLmSingleRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 8),
    _MplsTpOAMLmSingleRemoteLoss_Type()
)
mplsTpOAMLmSingleRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleRemoteLoss.setStatus("current")
_MplsTpOAMLmSingleRemoteLossRatio_Type = Integer32
_MplsTpOAMLmSingleRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleRemoteLossRatio = _MplsTpOAMLmSingleRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 96, 1, 9),
    _MplsTpOAMLmSingleRemoteLossRatio_Type()
)
mplsTpOAMLmSingleRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleRemoteLossRatio.setStatus("current")
_MplsTpOAMLmSingleLossTable_Object = MibTable
mplsTpOAMLmSingleLossTable = _MplsTpOAMLmSingleLossTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97)
)
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossTable.setStatus("current")
_MplsTpOAMLmSingleLossEntry_Object = MibTableRow
mplsTpOAMLmSingleLossEntry = _MplsTpOAMLmSingleLossEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1)
)
mplsTpOAMLmSingleLossEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMLmSingleLossMegId"),
)
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossEntry.setStatus("current")


class _MplsTpOAMLmSingleLossMegId_Type(OctetString):
    """Custom type mplsTpOAMLmSingleLossMegId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 12),
    )


_MplsTpOAMLmSingleLossMegId_Type.__name__ = "OctetString"
_MplsTpOAMLmSingleLossMegId_Object = MibTableColumn
mplsTpOAMLmSingleLossMegId = _MplsTpOAMLmSingleLossMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 1),
    _MplsTpOAMLmSingleLossMegId_Type()
)
mplsTpOAMLmSingleLossMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossMegId.setStatus("current")
_MplsTpOAMLmSingleLossMepId_Type = Integer32
_MplsTpOAMLmSingleLossMepId_Object = MibTableColumn
mplsTpOAMLmSingleLossMepId = _MplsTpOAMLmSingleLossMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 2),
    _MplsTpOAMLmSingleLossMepId_Type()
)
mplsTpOAMLmSingleLossMepId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossMepId.setStatus("current")


class _MplsTpOAMLmSingleLossStartTime_Type(OctetString):
    """Custom type mplsTpOAMLmSingleLossStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsTpOAMLmSingleLossStartTime_Type.__name__ = "OctetString"
_MplsTpOAMLmSingleLossStartTime_Object = MibTableColumn
mplsTpOAMLmSingleLossStartTime = _MplsTpOAMLmSingleLossStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 3),
    _MplsTpOAMLmSingleLossStartTime_Type()
)
mplsTpOAMLmSingleLossStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossStartTime.setStatus("current")


class _MplsTpOAMLmSingleLossEndTime_Type(OctetString):
    """Custom type mplsTpOAMLmSingleLossEndTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_MplsTpOAMLmSingleLossEndTime_Type.__name__ = "OctetString"
_MplsTpOAMLmSingleLossEndTime_Object = MibTableColumn
mplsTpOAMLmSingleLossEndTime = _MplsTpOAMLmSingleLossEndTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 4),
    _MplsTpOAMLmSingleLossEndTime_Type()
)
mplsTpOAMLmSingleLossEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleLossEndTime.setStatus("current")
_MplsTpOAMLmSingleMaxLocalLoss_Type = Integer32
_MplsTpOAMLmSingleMaxLocalLoss_Object = MibTableColumn
mplsTpOAMLmSingleMaxLocalLoss = _MplsTpOAMLmSingleMaxLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 5),
    _MplsTpOAMLmSingleMaxLocalLoss_Type()
)
mplsTpOAMLmSingleMaxLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMaxLocalLoss.setStatus("current")
_MplsTpOAMLmSingleMaxLocalLossRatio_Type = Integer32
_MplsTpOAMLmSingleMaxLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleMaxLocalLossRatio = _MplsTpOAMLmSingleMaxLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 6),
    _MplsTpOAMLmSingleMaxLocalLossRatio_Type()
)
mplsTpOAMLmSingleMaxLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMaxLocalLossRatio.setStatus("current")
_MplsTpOAMLmSingleMinLocalLoss_Type = Integer32
_MplsTpOAMLmSingleMinLocalLoss_Object = MibTableColumn
mplsTpOAMLmSingleMinLocalLoss = _MplsTpOAMLmSingleMinLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 7),
    _MplsTpOAMLmSingleMinLocalLoss_Type()
)
mplsTpOAMLmSingleMinLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMinLocalLoss.setStatus("current")
_MplsTpOAMLmSingleMinLocalLossRatio_Type = Integer32
_MplsTpOAMLmSingleMinLocalLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleMinLocalLossRatio = _MplsTpOAMLmSingleMinLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 8),
    _MplsTpOAMLmSingleMinLocalLossRatio_Type()
)
mplsTpOAMLmSingleMinLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMinLocalLossRatio.setStatus("current")
_MplsTpOAMLmSingleMaxRemoteLoss_Type = Integer32
_MplsTpOAMLmSingleMaxRemoteLoss_Object = MibTableColumn
mplsTpOAMLmSingleMaxRemoteLoss = _MplsTpOAMLmSingleMaxRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 9),
    _MplsTpOAMLmSingleMaxRemoteLoss_Type()
)
mplsTpOAMLmSingleMaxRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMaxRemoteLoss.setStatus("current")
_MplsTpOAMLmSingleMaxRemoteLossRatio_Type = Integer32
_MplsTpOAMLmSingleMaxRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleMaxRemoteLossRatio = _MplsTpOAMLmSingleMaxRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 10),
    _MplsTpOAMLmSingleMaxRemoteLossRatio_Type()
)
mplsTpOAMLmSingleMaxRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMaxRemoteLossRatio.setStatus("current")
_MplsTpOAMLmSingleMinRemoteLoss_Type = Integer32
_MplsTpOAMLmSingleMinRemoteLoss_Object = MibTableColumn
mplsTpOAMLmSingleMinRemoteLoss = _MplsTpOAMLmSingleMinRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 11),
    _MplsTpOAMLmSingleMinRemoteLoss_Type()
)
mplsTpOAMLmSingleMinRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMinRemoteLoss.setStatus("current")
_MplsTpOAMLmSingleMinRemoteLossRatio_Type = Integer32
_MplsTpOAMLmSingleMinRemoteLossRatio_Object = MibTableColumn
mplsTpOAMLmSingleMinRemoteLossRatio = _MplsTpOAMLmSingleMinRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 97, 1, 12),
    _MplsTpOAMLmSingleMinRemoteLossRatio_Type()
)
mplsTpOAMLmSingleMinRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMLmSingleMinRemoteLossRatio.setStatus("current")
_MplsTpOAMSingleLMCacheTable_Object = MibTable
mplsTpOAMSingleLMCacheTable = _MplsTpOAMSingleLMCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100)
)
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheTable.setStatus("current")
_MplsTpOAMSingleLMCacheEntry_Object = MibTableRow
mplsTpOAMSingleLMCacheEntry = _MplsTpOAMSingleLMCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1)
)
mplsTpOAMSingleLMCacheEntry.setIndexNames(
    (0, "SWITCH", "mplsTpOAMSingleLMCacheMegId"),
    (0, "SWITCH", "mplsTpOAMSingleLMCacheIndex"),
)
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheEntry.setStatus("current")
_MplsTpOAMSingleLMCacheMegId_Type = OctetString
_MplsTpOAMSingleLMCacheMegId_Object = MibTableColumn
mplsTpOAMSingleLMCacheMegId = _MplsTpOAMSingleLMCacheMegId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 1),
    _MplsTpOAMSingleLMCacheMegId_Type()
)
mplsTpOAMSingleLMCacheMegId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheMegId.setStatus("current")
_MplsTpOAMSingleLMCacheIndex_Type = Integer32
_MplsTpOAMSingleLMCacheIndex_Object = MibTableColumn
mplsTpOAMSingleLMCacheIndex = _MplsTpOAMSingleLMCacheIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 2),
    _MplsTpOAMSingleLMCacheIndex_Type()
)
mplsTpOAMSingleLMCacheIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheIndex.setStatus("current")


class _MplsTpOAMSingleLMCacheExpValue_Type(Integer32):
    """Custom type mplsTpOAMSingleLMCacheExpValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_MplsTpOAMSingleLMCacheExpValue_Type.__name__ = "Integer32"
_MplsTpOAMSingleLMCacheExpValue_Object = MibTableColumn
mplsTpOAMSingleLMCacheExpValue = _MplsTpOAMSingleLMCacheExpValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 3),
    _MplsTpOAMSingleLMCacheExpValue_Type()
)
mplsTpOAMSingleLMCacheExpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheExpValue.setStatus("current")
_MplsTpOAMSingleLMCacheLocalLoss_Type = Integer32
_MplsTpOAMSingleLMCacheLocalLoss_Object = MibTableColumn
mplsTpOAMSingleLMCacheLocalLoss = _MplsTpOAMSingleLMCacheLocalLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 4),
    _MplsTpOAMSingleLMCacheLocalLoss_Type()
)
mplsTpOAMSingleLMCacheLocalLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheLocalLoss.setStatus("current")
_MplsTpOAMSingleLMCacheLocalLossRatio_Type = Integer32
_MplsTpOAMSingleLMCacheLocalLossRatio_Object = MibTableColumn
mplsTpOAMSingleLMCacheLocalLossRatio = _MplsTpOAMSingleLMCacheLocalLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 5),
    _MplsTpOAMSingleLMCacheLocalLossRatio_Type()
)
mplsTpOAMSingleLMCacheLocalLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheLocalLossRatio.setStatus("current")
_MplsTpOAMSingleLMCacheRemoteLoss_Type = Integer32
_MplsTpOAMSingleLMCacheRemoteLoss_Object = MibTableColumn
mplsTpOAMSingleLMCacheRemoteLoss = _MplsTpOAMSingleLMCacheRemoteLoss_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 6),
    _MplsTpOAMSingleLMCacheRemoteLoss_Type()
)
mplsTpOAMSingleLMCacheRemoteLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheRemoteLoss.setStatus("current")
_MplsTpOAMSingleLMCacheRemoteLossRatio_Type = Integer32
_MplsTpOAMSingleLMCacheRemoteLossRatio_Object = MibTableColumn
mplsTpOAMSingleLMCacheRemoteLossRatio = _MplsTpOAMSingleLMCacheRemoteLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 7),
    _MplsTpOAMSingleLMCacheRemoteLossRatio_Type()
)
mplsTpOAMSingleLMCacheRemoteLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheRemoteLossRatio.setStatus("current")
_MplsTpOAMSingleLMCacheTime_Type = OctetString
_MplsTpOAMSingleLMCacheTime_Object = MibTableColumn
mplsTpOAMSingleLMCacheTime = _MplsTpOAMSingleLMCacheTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 69, 100, 1, 8),
    _MplsTpOAMSingleLMCacheTime_Type()
)
mplsTpOAMSingleLMCacheTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mplsTpOAMSingleLMCacheTime.setStatus("current")
_MplsTrapGroup_ObjectIdentity = ObjectIdentity
mplsTrapGroup = _MplsTrapGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000)
)
_Smartlink_ObjectIdentity = ObjectIdentity
smartlink = _Smartlink_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 70)
)


class _SmartlinkRelayEnable_Type(Integer32):
    """Custom type smartlinkRelayEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_SmartlinkRelayEnable_Type.__name__ = "Integer32"
_SmartlinkRelayEnable_Object = MibScalar
smartlinkRelayEnable = _SmartlinkRelayEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 1),
    _SmartlinkRelayEnable_Type()
)
smartlinkRelayEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkRelayEnable.setStatus("current")


class _SmartlinkClearStatistic_Type(Integer32):
    """Custom type smartlinkClearStatistic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("yes", 1)
    )


_SmartlinkClearStatistic_Type.__name__ = "Integer32"
_SmartlinkClearStatistic_Object = MibScalar
smartlinkClearStatistic = _SmartlinkClearStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 2),
    _SmartlinkClearStatistic_Type()
)
smartlinkClearStatistic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkClearStatistic.setStatus("current")
_SmartlinkGroupTable_Object = MibTable
smartlinkGroupTable = _SmartlinkGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3)
)
if mibBuilder.loadTexts:
    smartlinkGroupTable.setStatus("current")
_SmartlinkGroupEntry_Object = MibTableRow
smartlinkGroupEntry = _SmartlinkGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1)
)
smartlinkGroupEntry.setIndexNames(
    (0, "SWITCH", "smartlinkGroupindex"),
)
if mibBuilder.loadTexts:
    smartlinkGroupEntry.setStatus("current")


class _SmartlinkGroupindex_Type(Integer32):
    """Custom type smartlinkGroupindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_SmartlinkGroupindex_Type.__name__ = "Integer32"
_SmartlinkGroupindex_Object = MibTableColumn
smartlinkGroupindex = _SmartlinkGroupindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 1),
    _SmartlinkGroupindex_Type()
)
smartlinkGroupindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    smartlinkGroupindex.setStatus("current")
_SmartlinkGroupRowStatus_Type = RowStatus
_SmartlinkGroupRowStatus_Object = MibTableColumn
smartlinkGroupRowStatus = _SmartlinkGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 2),
    _SmartlinkGroupRowStatus_Type()
)
smartlinkGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    smartlinkGroupRowStatus.setStatus("current")
_SmartlinkGroupMasterIntf_Type = InterfaceIndex
_SmartlinkGroupMasterIntf_Object = MibTableColumn
smartlinkGroupMasterIntf = _SmartlinkGroupMasterIntf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 3),
    _SmartlinkGroupMasterIntf_Type()
)
smartlinkGroupMasterIntf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupMasterIntf.setStatus("current")
_SmartlinkGroupMasterDnCnt_Type = Integer32
_SmartlinkGroupMasterDnCnt_Object = MibTableColumn
smartlinkGroupMasterDnCnt = _SmartlinkGroupMasterDnCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 4),
    _SmartlinkGroupMasterDnCnt_Type()
)
smartlinkGroupMasterDnCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupMasterDnCnt.setStatus("current")
_SmartlinkGroupMasterlstDnTime_Type = OctetString
_SmartlinkGroupMasterlstDnTime_Object = MibTableColumn
smartlinkGroupMasterlstDnTime = _SmartlinkGroupMasterlstDnTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 5),
    _SmartlinkGroupMasterlstDnTime_Type()
)
smartlinkGroupMasterlstDnTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupMasterlstDnTime.setStatus("current")
_SmartlinkGroupMasterflhCnt_Type = Integer32
_SmartlinkGroupMasterflhCnt_Object = MibTableColumn
smartlinkGroupMasterflhCnt = _SmartlinkGroupMasterflhCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 6),
    _SmartlinkGroupMasterflhCnt_Type()
)
smartlinkGroupMasterflhCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupMasterflhCnt.setStatus("current")
_SmartlinkGroupMasterlstflhTime_Type = OctetString
_SmartlinkGroupMasterlstflhTime_Object = MibTableColumn
smartlinkGroupMasterlstflhTime = _SmartlinkGroupMasterlstflhTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 7),
    _SmartlinkGroupMasterlstflhTime_Type()
)
smartlinkGroupMasterlstflhTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupMasterlstflhTime.setStatus("current")
_SmartlinkGroupSlaveIntf_Type = InterfaceIndex
_SmartlinkGroupSlaveIntf_Object = MibTableColumn
smartlinkGroupSlaveIntf = _SmartlinkGroupSlaveIntf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 8),
    _SmartlinkGroupSlaveIntf_Type()
)
smartlinkGroupSlaveIntf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupSlaveIntf.setStatus("current")
_SmartlinkGroupSlaveDnCnt_Type = Integer32
_SmartlinkGroupSlaveDnCnt_Object = MibTableColumn
smartlinkGroupSlaveDnCnt = _SmartlinkGroupSlaveDnCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 9),
    _SmartlinkGroupSlaveDnCnt_Type()
)
smartlinkGroupSlaveDnCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupSlaveDnCnt.setStatus("current")
_SmartlinkGroupSlavelstDnTime_Type = OctetString
_SmartlinkGroupSlavelstDnTime_Object = MibTableColumn
smartlinkGroupSlavelstDnTime = _SmartlinkGroupSlavelstDnTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 10),
    _SmartlinkGroupSlavelstDnTime_Type()
)
smartlinkGroupSlavelstDnTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupSlavelstDnTime.setStatus("current")
_SmartlinkGroupSlaveflhCnt_Type = Integer32
_SmartlinkGroupSlaveflhCnt_Object = MibTableColumn
smartlinkGroupSlaveflhCnt = _SmartlinkGroupSlaveflhCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 11),
    _SmartlinkGroupSlaveflhCnt_Type()
)
smartlinkGroupSlaveflhCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupSlaveflhCnt.setStatus("current")
_SmartlinkGroupSlavelstflhTime_Type = OctetString
_SmartlinkGroupSlavelstflhTime_Object = MibTableColumn
smartlinkGroupSlavelstflhTime = _SmartlinkGroupSlavelstflhTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 12),
    _SmartlinkGroupSlavelstflhTime_Type()
)
smartlinkGroupSlavelstflhTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkGroupSlavelstflhTime.setStatus("current")


class _SmartlinkGroupMstpInstance_Type(OctetString):
    """Custom type smartlinkGroupMstpInstance based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4094),
    )


_SmartlinkGroupMstpInstance_Type.__name__ = "OctetString"
_SmartlinkGroupMstpInstance_Object = MibTableColumn
smartlinkGroupMstpInstance = _SmartlinkGroupMstpInstance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 13),
    _SmartlinkGroupMstpInstance_Type()
)
smartlinkGroupMstpInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupMstpInstance.setStatus("current")


class _SmartlinkGroupLoadBalanceInstance_Type(OctetString):
    """Custom type smartlinkGroupLoadBalanceInstance based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4094),
    )


_SmartlinkGroupLoadBalanceInstance_Type.__name__ = "OctetString"
_SmartlinkGroupLoadBalanceInstance_Object = MibTableColumn
smartlinkGroupLoadBalanceInstance = _SmartlinkGroupLoadBalanceInstance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 14),
    _SmartlinkGroupLoadBalanceInstance_Type()
)
smartlinkGroupLoadBalanceInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupLoadBalanceInstance.setStatus("current")


class _SmartlinkGroupRestoreEnable_Type(Integer32):
    """Custom type smartlinkGroupRestoreEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SmartlinkGroupRestoreEnable_Type.__name__ = "Integer32"
_SmartlinkGroupRestoreEnable_Object = MibTableColumn
smartlinkGroupRestoreEnable = _SmartlinkGroupRestoreEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 15),
    _SmartlinkGroupRestoreEnable_Type()
)
smartlinkGroupRestoreEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupRestoreEnable.setStatus("current")


class _SmartlinkGroupRestoreTime_Type(Integer32):
    """Custom type smartlinkGroupRestoreTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 1200),
    )


_SmartlinkGroupRestoreTime_Type.__name__ = "Integer32"
_SmartlinkGroupRestoreTime_Object = MibTableColumn
smartlinkGroupRestoreTime = _SmartlinkGroupRestoreTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 16),
    _SmartlinkGroupRestoreTime_Type()
)
smartlinkGroupRestoreTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupRestoreTime.setStatus("current")


class _SmartlinkGroupControlVlan_Type(Integer32):
    """Custom type smartlinkGroupControlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_SmartlinkGroupControlVlan_Type.__name__ = "Integer32"
_SmartlinkGroupControlVlan_Object = MibTableColumn
smartlinkGroupControlVlan = _SmartlinkGroupControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 17),
    _SmartlinkGroupControlVlan_Type()
)
smartlinkGroupControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupControlVlan.setStatus("current")


class _SmartlinkGroupControlVlanPassword_Type(OctetString):
    """Custom type smartlinkGroupControlVlanPassword based on OctetString"""
    defaultValue = OctetString("default")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 15),
    )


_SmartlinkGroupControlVlanPassword_Type.__name__ = "OctetString"
_SmartlinkGroupControlVlanPassword_Object = MibTableColumn
smartlinkGroupControlVlanPassword = _SmartlinkGroupControlVlanPassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 18),
    _SmartlinkGroupControlVlanPassword_Type()
)
smartlinkGroupControlVlanPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupControlVlanPassword.setStatus("current")


class _SmartlinkGroupEnable_Type(Integer32):
    """Custom type smartlinkGroupEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enabled", 1),
          ("disabled", 2))
    )


_SmartlinkGroupEnable_Type.__name__ = "Integer32"
_SmartlinkGroupEnable_Object = MibTableColumn
smartlinkGroupEnable = _SmartlinkGroupEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 3, 1, 19),
    _SmartlinkGroupEnable_Type()
)
smartlinkGroupEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkGroupEnable.setStatus("current")
_SmartlinkRcvFlushintfTable_Object = MibTable
smartlinkRcvFlushintfTable = _SmartlinkRcvFlushintfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4)
)
if mibBuilder.loadTexts:
    smartlinkRcvFlushintfTable.setStatus("current")
_SmartlinkRcvFlushintfEntry_Object = MibTableRow
smartlinkRcvFlushintfEntry = _SmartlinkRcvFlushintfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4, 1)
)
smartlinkRcvFlushintfEntry.setIndexNames(
    (0, "SWITCH", "smartlinkGroupindex"),
)
if mibBuilder.loadTexts:
    smartlinkRcvFlushintfEntry.setStatus("current")
_SmartlinkRcvFlushintfindex_Type = InterfaceIndex
_SmartlinkRcvFlushintfindex_Object = MibTableColumn
smartlinkRcvFlushintfindex = _SmartlinkRcvFlushintfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4, 1, 1),
    _SmartlinkRcvFlushintfindex_Type()
)
smartlinkRcvFlushintfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    smartlinkRcvFlushintfindex.setStatus("current")


class _SmartlinkRcvFlushintfVlan_Type(Integer32):
    """Custom type smartlinkRcvFlushintfVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_SmartlinkRcvFlushintfVlan_Type.__name__ = "Integer32"
_SmartlinkRcvFlushintfVlan_Object = MibTableColumn
smartlinkRcvFlushintfVlan = _SmartlinkRcvFlushintfVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4, 1, 2),
    _SmartlinkRcvFlushintfVlan_Type()
)
smartlinkRcvFlushintfVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkRcvFlushintfVlan.setStatus("current")


class _SmartlinkRcvFlushintfVlanPassword_Type(OctetString):
    """Custom type smartlinkRcvFlushintfVlanPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SmartlinkRcvFlushintfVlanPassword_Type.__name__ = "OctetString"
_SmartlinkRcvFlushintfVlanPassword_Object = MibTableColumn
smartlinkRcvFlushintfVlanPassword = _SmartlinkRcvFlushintfVlanPassword_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4, 1, 3),
    _SmartlinkRcvFlushintfVlanPassword_Type()
)
smartlinkRcvFlushintfVlanPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartlinkRcvFlushintfVlanPassword.setStatus("current")
_MartlinkRcvFlushintfSetState_Type = RowStatus
_MartlinkRcvFlushintfSetState_Object = MibTableColumn
martlinkRcvFlushintfSetState = _MartlinkRcvFlushintfSetState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 4, 1, 4),
    _MartlinkRcvFlushintfSetState_Type()
)
martlinkRcvFlushintfSetState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    martlinkRcvFlushintfSetState.setStatus("current")
_SmartlinkRcvFlushPktNum_Type = Integer32
_SmartlinkRcvFlushPktNum_Object = MibScalar
smartlinkRcvFlushPktNum = _SmartlinkRcvFlushPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 5),
    _SmartlinkRcvFlushPktNum_Type()
)
smartlinkRcvFlushPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkRcvFlushPktNum.setStatus("current")
_SmartlinkProcFlushPktNum_Type = Integer32
_SmartlinkProcFlushPktNum_Object = MibScalar
smartlinkProcFlushPktNum = _SmartlinkProcFlushPktNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 70, 6),
    _SmartlinkProcFlushPktNum_Type()
)
smartlinkProcFlushPktNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smartlinkProcFlushPktNum.setStatus("current")
_Flowctrl_ObjectIdentity = ObjectIdentity
flowctrl = _Flowctrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 71)
)
_FlowctrlSendEnableTable_Object = MibTable
flowctrlSendEnableTable = _FlowctrlSendEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 1)
)
if mibBuilder.loadTexts:
    flowctrlSendEnableTable.setStatus("current")
_FlowctrlSendEnableEntry_Object = MibTableRow
flowctrlSendEnableEntry = _FlowctrlSendEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 1, 1)
)
flowctrlSendEnableEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    flowctrlSendEnableEntry.setStatus("current")


class _FlowctrlSendEnable_Type(Integer32):
    """Custom type flowctrlSendEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("off", 2))
    )


_FlowctrlSendEnable_Type.__name__ = "Integer32"
_FlowctrlSendEnable_Object = MibTableColumn
flowctrlSendEnable = _FlowctrlSendEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 1, 1, 1),
    _FlowctrlSendEnable_Type()
)
flowctrlSendEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    flowctrlSendEnable.setStatus("current")
_FlowctrlReceiveEnableTable_Object = MibTable
flowctrlReceiveEnableTable = _FlowctrlReceiveEnableTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 2)
)
if mibBuilder.loadTexts:
    flowctrlReceiveEnableTable.setStatus("current")
_FlowctrlReceiveEnableEntry_Object = MibTableRow
flowctrlReceiveEnableEntry = _FlowctrlReceiveEnableEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 2, 1)
)
flowctrlReceiveEnableEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    flowctrlReceiveEnableEntry.setStatus("current")


class _FlowctrlReceiveEnable_Type(Integer32):
    """Custom type flowctrlReceiveEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("on", 1),
          ("off", 2))
    )


_FlowctrlReceiveEnable_Type.__name__ = "Integer32"
_FlowctrlReceiveEnable_Object = MibTableColumn
flowctrlReceiveEnable = _FlowctrlReceiveEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 71, 2, 1, 1),
    _FlowctrlReceiveEnable_Type()
)
flowctrlReceiveEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    flowctrlReceiveEnable.setStatus("current")
_Cputraffic_ObjectIdentity = ObjectIdentity
cputraffic = _Cputraffic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 72)
)


class _CputrafficLimitTotalRate_Type(Integer32):
    """Custom type cputrafficLimitTotalRate based on Integer32"""
    defaultValue = 2048

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_CputrafficLimitTotalRate_Type.__name__ = "Integer32"
_CputrafficLimitTotalRate_Object = MibScalar
cputrafficLimitTotalRate = _CputrafficLimitTotalRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 1),
    _CputrafficLimitTotalRate_Type()
)
cputrafficLimitTotalRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cputrafficLimitTotalRate.setStatus("current")
_CputrafficLimitReasonRate_ObjectIdentity = ObjectIdentity
cputrafficLimitReasonRate = _CputrafficLimitReasonRate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2)
)


class _ArpReasonRate_Type(Integer32):
    """Custom type arpReasonRate based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_ArpReasonRate_Type.__name__ = "Integer32"
_ArpReasonRate_Object = MibScalar
arpReasonRate = _ArpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 1),
    _ArpReasonRate_Type()
)
arpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpReasonRate.setStatus("current")


class _BpduReasonRate_Type(Integer32):
    """Custom type bpduReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_BpduReasonRate_Type.__name__ = "Integer32"
_BpduReasonRate_Object = MibScalar
bpduReasonRate = _BpduReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 2),
    _BpduReasonRate_Type()
)
bpduReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bpduReasonRate.setStatus("current")


class _CfmReasonRate_Type(Integer32):
    """Custom type cfmReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_CfmReasonRate_Type.__name__ = "Integer32"
_CfmReasonRate_Object = MibScalar
cfmReasonRate = _CfmReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 3),
    _CfmReasonRate_Type()
)
cfmReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmReasonRate.setStatus("current")


class _DhcpReasonRate_Type(Integer32):
    """Custom type dhcpReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_DhcpReasonRate_Type.__name__ = "Integer32"
_DhcpReasonRate_Object = MibScalar
dhcpReasonRate = _DhcpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 4),
    _DhcpReasonRate_Type()
)
dhcpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpReasonRate.setStatus("current")


class _EapolReasonRate_Type(Integer32):
    """Custom type eapolReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_EapolReasonRate_Type.__name__ = "Integer32"
_EapolReasonRate_Object = MibScalar
eapolReasonRate = _EapolReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 5),
    _EapolReasonRate_Type()
)
eapolReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eapolReasonRate.setStatus("current")


class _ErpsReasonRate_Type(Integer32):
    """Custom type erpsReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_ErpsReasonRate_Type.__name__ = "Integer32"
_ErpsReasonRate_Object = MibScalar
erpsReasonRate = _ErpsReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 6),
    _ErpsReasonRate_Type()
)
erpsReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    erpsReasonRate.setStatus("current")


class _SflowIngressReasonRate_Type(Integer32):
    """Custom type sflowIngressReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_SflowIngressReasonRate_Type.__name__ = "Integer32"
_SflowIngressReasonRate_Object = MibScalar
sflowIngressReasonRate = _SflowIngressReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 7),
    _SflowIngressReasonRate_Type()
)
sflowIngressReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sflowIngressReasonRate.setStatus("current")


class _IcmpRedirectReasonRate_Type(Integer32):
    """Custom type icmpRedirectReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_IcmpRedirectReasonRate_Type.__name__ = "Integer32"
_IcmpRedirectReasonRate_Object = MibScalar
icmpRedirectReasonRate = _IcmpRedirectReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 8),
    _IcmpRedirectReasonRate_Type()
)
icmpRedirectReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpRedirectReasonRate.setStatus("current")


class _IgmpReasonRate_Type(Integer32):
    """Custom type igmpReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_IgmpReasonRate_Type.__name__ = "Integer32"
_IgmpReasonRate_Object = MibScalar
igmpReasonRate = _IgmpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 9),
    _IgmpReasonRate_Type()
)
igmpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpReasonRate.setStatus("current")


class _IpOptionReasonRate_Type(Integer32):
    """Custom type ipOptionReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_IpOptionReasonRate_Type.__name__ = "Integer32"
_IpOptionReasonRate_Object = MibScalar
ipOptionReasonRate = _IpOptionReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 10),
    _IpOptionReasonRate_Type()
)
ipOptionReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipOptionReasonRate.setStatus("current")


class _IpDaReasonRate_Type(Integer32):
    """Custom type ipDaReasonRate based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_IpDaReasonRate_Type.__name__ = "Integer32"
_IpDaReasonRate_Object = MibScalar
ipDaReasonRate = _IpDaReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 11),
    _IpDaReasonRate_Type()
)
ipDaReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipDaReasonRate.setStatus("current")


class _LdpReasonRate_Type(Integer32):
    """Custom type ldpReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_LdpReasonRate_Type.__name__ = "Integer32"
_LdpReasonRate_Object = MibScalar
ldpReasonRate = _LdpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 12),
    _LdpReasonRate_Type()
)
ldpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpReasonRate.setStatus("current")


class _MacSaMismatchReasonRate_Type(Integer32):
    """Custom type macSaMismatchReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_MacSaMismatchReasonRate_Type.__name__ = "Integer32"
_MacSaMismatchReasonRate_Object = MibScalar
macSaMismatchReasonRate = _MacSaMismatchReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 13),
    _MacSaMismatchReasonRate_Type()
)
macSaMismatchReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macSaMismatchReasonRate.setStatus("current")


class _McastRpfFailReasonRate_Type(Integer32):
    """Custom type mcastRpfFailReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_McastRpfFailReasonRate_Type.__name__ = "Integer32"
_McastRpfFailReasonRate_Object = MibScalar
mcastRpfFailReasonRate = _McastRpfFailReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 14),
    _McastRpfFailReasonRate_Type()
)
mcastRpfFailReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcastRpfFailReasonRate.setStatus("current")


class _MplsTtlFailReasonRate_Type(Integer32):
    """Custom type mplsTtlFailReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_MplsTtlFailReasonRate_Type.__name__ = "Integer32"
_MplsTtlFailReasonRate_Object = MibScalar
mplsTtlFailReasonRate = _MplsTtlFailReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 15),
    _MplsTtlFailReasonRate_Type()
)
mplsTtlFailReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTtlFailReasonRate.setStatus("current")


class _MtuDontFragReasonRate_Type(Integer32):
    """Custom type mtuDontFragReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_MtuDontFragReasonRate_Type.__name__ = "Integer32"
_MtuDontFragReasonRate_Object = MibScalar
mtuDontFragReasonRate = _MtuDontFragReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 16),
    _MtuDontFragReasonRate_Type()
)
mtuDontFragReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mtuDontFragReasonRate.setStatus("current")


class _MtuFragReasonRate_Type(Integer32):
    """Custom type mtuFragReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_MtuFragReasonRate_Type.__name__ = "Integer32"
_MtuFragReasonRate_Object = MibScalar
mtuFragReasonRate = _MtuFragReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 17),
    _MtuFragReasonRate_Type()
)
mtuFragReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mtuFragReasonRate.setStatus("current")


class _OspfReasonRate_Type(Integer32):
    """Custom type ospfReasonRate based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_OspfReasonRate_Type.__name__ = "Integer32"
_OspfReasonRate_Object = MibScalar
ospfReasonRate = _OspfReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 18),
    _OspfReasonRate_Type()
)
ospfReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfReasonRate.setStatus("current")


class _PimReasonRate_Type(Integer32):
    """Custom type pimReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_PimReasonRate_Type.__name__ = "Integer32"
_PimReasonRate_Object = MibScalar
pimReasonRate = _PimReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 19),
    _PimReasonRate_Type()
)
pimReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimReasonRate.setStatus("current")


class _PortSecurityDiscardReasonRate_Type(Integer32):
    """Custom type portSecurityDiscardReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_PortSecurityDiscardReasonRate_Type.__name__ = "Integer32"
_PortSecurityDiscardReasonRate_Object = MibScalar
portSecurityDiscardReasonRate = _PortSecurityDiscardReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 20),
    _PortSecurityDiscardReasonRate_Type()
)
portSecurityDiscardReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portSecurityDiscardReasonRate.setStatus("current")


class _PtpReasonRate_Type(Integer32):
    """Custom type ptpReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_PtpReasonRate_Type.__name__ = "Integer32"
_PtpReasonRate_Object = MibScalar
ptpReasonRate = _PtpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 21),
    _PtpReasonRate_Type()
)
ptpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpReasonRate.setStatus("current")


class _RipReasonRate_Type(Integer32):
    """Custom type ripReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_RipReasonRate_Type.__name__ = "Integer32"
_RipReasonRate_Object = MibScalar
ripReasonRate = _RipReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 22),
    _RipReasonRate_Type()
)
ripReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripReasonRate.setStatus("current")


class _RsvpReasonRate_Type(Integer32):
    """Custom type rsvpReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_RsvpReasonRate_Type.__name__ = "Integer32"
_RsvpReasonRate_Object = MibScalar
rsvpReasonRate = _RsvpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 23),
    _RsvpReasonRate_Type()
)
rsvpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpReasonRate.setStatus("current")


class _SlowProtoReasonRate_Type(Integer32):
    """Custom type slowProtoReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_SlowProtoReasonRate_Type.__name__ = "Integer32"
_SlowProtoReasonRate_Object = MibScalar
slowProtoReasonRate = _SlowProtoReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 24),
    _SlowProtoReasonRate_Type()
)
slowProtoReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slowProtoReasonRate.setStatus("current")


class _SmartLinkReasonRate_Type(Integer32):
    """Custom type smartLinkReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_SmartLinkReasonRate_Type.__name__ = "Integer32"
_SmartLinkReasonRate_Object = MibScalar
smartLinkReasonRate = _SmartLinkReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 25),
    _SmartLinkReasonRate_Type()
)
smartLinkReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartLinkReasonRate.setStatus("current")


class _UcastIpTtlFailReasonRate_Type(Integer32):
    """Custom type ucastIpTtlFailReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000),
    )


_UcastIpTtlFailReasonRate_Type.__name__ = "Integer32"
_UcastIpTtlFailReasonRate_Object = MibScalar
ucastIpTtlFailReasonRate = _UcastIpTtlFailReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 26),
    _UcastIpTtlFailReasonRate_Type()
)
ucastIpTtlFailReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ucastIpTtlFailReasonRate.setStatus("current")


class _VlanSecurityDiscardReasonRate_Type(Integer32):
    """Custom type vlanSecurityDiscardReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_VlanSecurityDiscardReasonRate_Type.__name__ = "Integer32"
_VlanSecurityDiscardReasonRate_Object = MibScalar
vlanSecurityDiscardReasonRate = _VlanSecurityDiscardReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 27),
    _VlanSecurityDiscardReasonRate_Type()
)
vlanSecurityDiscardReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanSecurityDiscardReasonRate.setStatus("current")


class _VrrpReasonRate_Type(Integer32):
    """Custom type vrrpReasonRate based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_VrrpReasonRate_Type.__name__ = "Integer32"
_VrrpReasonRate_Object = MibScalar
vrrpReasonRate = _VrrpReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 28),
    _VrrpReasonRate_Type()
)
vrrpReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vrrpReasonRate.setStatus("current")


class _MldReasonRate_Type(Integer32):
    """Custom type mldReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_MldReasonRate_Type.__name__ = "Integer32"
_MldReasonRate_Object = MibScalar
mldReasonRate = _MldReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 29),
    _MldReasonRate_Type()
)
mldReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldReasonRate.setStatus("current")


class _SflowEgressReasonRate_Type(Integer32):
    """Custom type sflowEgressReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_SflowEgressReasonRate_Type.__name__ = "Integer32"
_SflowEgressReasonRate_Object = MibScalar
sflowEgressReasonRate = _SflowEgressReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 30),
    _SflowEgressReasonRate_Type()
)
sflowEgressReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sflowEgressReasonRate.setStatus("current")


class _UdldReasonRate_Type(Integer32):
    """Custom type udldReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_UdldReasonRate_Type.__name__ = "Integer32"
_UdldReasonRate_Object = MibScalar
udldReasonRate = _UdldReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 31),
    _UdldReasonRate_Type()
)
udldReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udldReasonRate.setStatus("current")


class _FwdToCpuReasonRate_Type(Integer32):
    """Custom type fwdToCpuReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_FwdToCpuReasonRate_Type.__name__ = "Integer32"
_FwdToCpuReasonRate_Object = MibScalar
fwdToCpuReasonRate = _FwdToCpuReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 32),
    _FwdToCpuReasonRate_Type()
)
fwdToCpuReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fwdToCpuReasonRate.setStatus("current")


class _MplsTpPwOamReasonRate_Type(Integer32):
    """Custom type mplsTpPwOamReasonRate based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_MplsTpPwOamReasonRate_Type.__name__ = "Integer32"
_MplsTpPwOamReasonRate_Object = MibScalar
mplsTpPwOamReasonRate = _MplsTpPwOamReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 33),
    _MplsTpPwOamReasonRate_Type()
)
mplsTpPwOamReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpPwOamReasonRate.setStatus("current")


class _Dot1xMacBypassReasonRate_Type(Integer32):
    """Custom type dot1xMacBypassReasonRate based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_Dot1xMacBypassReasonRate_Type.__name__ = "Integer32"
_Dot1xMacBypassReasonRate_Object = MibScalar
dot1xMacBypassReasonRate = _Dot1xMacBypassReasonRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 2, 34),
    _Dot1xMacBypassReasonRate_Type()
)
dot1xMacBypassReasonRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xMacBypassReasonRate.setStatus("current")
_CputrafficLimitReasonClass_ObjectIdentity = ObjectIdentity
cputrafficLimitReasonClass = _CputrafficLimitReasonClass_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3)
)


class _ArpReasonClass_Type(Integer32):
    """Custom type arpReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ArpReasonClass_Type.__name__ = "Integer32"
_ArpReasonClass_Object = MibScalar
arpReasonClass = _ArpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 1),
    _ArpReasonClass_Type()
)
arpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpReasonClass.setStatus("current")


class _BpduReasonClass_Type(Integer32):
    """Custom type bpduReasonClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_BpduReasonClass_Type.__name__ = "Integer32"
_BpduReasonClass_Object = MibScalar
bpduReasonClass = _BpduReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 2),
    _BpduReasonClass_Type()
)
bpduReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bpduReasonClass.setStatus("current")


class _CfmReasonClass_Type(Integer32):
    """Custom type cfmReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_CfmReasonClass_Type.__name__ = "Integer32"
_CfmReasonClass_Object = MibScalar
cfmReasonClass = _CfmReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 3),
    _CfmReasonClass_Type()
)
cfmReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmReasonClass.setStatus("current")


class _DhcpReasonClass_Type(Integer32):
    """Custom type dhcpReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_DhcpReasonClass_Type.__name__ = "Integer32"
_DhcpReasonClass_Object = MibScalar
dhcpReasonClass = _DhcpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 4),
    _DhcpReasonClass_Type()
)
dhcpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dhcpReasonClass.setStatus("current")


class _EapolReasonClass_Type(Integer32):
    """Custom type eapolReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_EapolReasonClass_Type.__name__ = "Integer32"
_EapolReasonClass_Object = MibScalar
eapolReasonClass = _EapolReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 5),
    _EapolReasonClass_Type()
)
eapolReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eapolReasonClass.setStatus("current")


class _ErpsReasonClass_Type(Integer32):
    """Custom type erpsReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ErpsReasonClass_Type.__name__ = "Integer32"
_ErpsReasonClass_Object = MibScalar
erpsReasonClass = _ErpsReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 6),
    _ErpsReasonClass_Type()
)
erpsReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    erpsReasonClass.setStatus("current")


class _SflowIngressReasonClass_Type(Integer32):
    """Custom type sflowIngressReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SflowIngressReasonClass_Type.__name__ = "Integer32"
_SflowIngressReasonClass_Object = MibScalar
sflowIngressReasonClass = _SflowIngressReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 7),
    _SflowIngressReasonClass_Type()
)
sflowIngressReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sflowIngressReasonClass.setStatus("current")


class _IcmpRedirectReasonClass_Type(Integer32):
    """Custom type icmpRedirectReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_IcmpRedirectReasonClass_Type.__name__ = "Integer32"
_IcmpRedirectReasonClass_Object = MibScalar
icmpRedirectReasonClass = _IcmpRedirectReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 8),
    _IcmpRedirectReasonClass_Type()
)
icmpRedirectReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpRedirectReasonClass.setStatus("current")


class _IgmpReasonClass_Type(Integer32):
    """Custom type igmpReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_IgmpReasonClass_Type.__name__ = "Integer32"
_IgmpReasonClass_Object = MibScalar
igmpReasonClass = _IgmpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 9),
    _IgmpReasonClass_Type()
)
igmpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    igmpReasonClass.setStatus("current")


class _IpOptionReasonClass_Type(Integer32):
    """Custom type ipOptionReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_IpOptionReasonClass_Type.__name__ = "Integer32"
_IpOptionReasonClass_Object = MibScalar
ipOptionReasonClass = _IpOptionReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 10),
    _IpOptionReasonClass_Type()
)
ipOptionReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipOptionReasonClass.setStatus("current")


class _IpDaReasonClass_Type(Integer32):
    """Custom type ipDaReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_IpDaReasonClass_Type.__name__ = "Integer32"
_IpDaReasonClass_Object = MibScalar
ipDaReasonClass = _IpDaReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 11),
    _IpDaReasonClass_Type()
)
ipDaReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipDaReasonClass.setStatus("current")


class _LdpReasonClass_Type(Integer32):
    """Custom type ldpReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_LdpReasonClass_Type.__name__ = "Integer32"
_LdpReasonClass_Object = MibScalar
ldpReasonClass = _LdpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 12),
    _LdpReasonClass_Type()
)
ldpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldpReasonClass.setStatus("current")


class _MacSaMismatchReasonClass_Type(Integer32):
    """Custom type macSaMismatchReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MacSaMismatchReasonClass_Type.__name__ = "Integer32"
_MacSaMismatchReasonClass_Object = MibScalar
macSaMismatchReasonClass = _MacSaMismatchReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 13),
    _MacSaMismatchReasonClass_Type()
)
macSaMismatchReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    macSaMismatchReasonClass.setStatus("current")


class _McastRpfFailReasonClass_Type(Integer32):
    """Custom type mcastRpfFailReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_McastRpfFailReasonClass_Type.__name__ = "Integer32"
_McastRpfFailReasonClass_Object = MibScalar
mcastRpfFailReasonClass = _McastRpfFailReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 14),
    _McastRpfFailReasonClass_Type()
)
mcastRpfFailReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcastRpfFailReasonClass.setStatus("current")


class _MplsTtlFailReasonClass_Type(Integer32):
    """Custom type mplsTtlFailReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MplsTtlFailReasonClass_Type.__name__ = "Integer32"
_MplsTtlFailReasonClass_Object = MibScalar
mplsTtlFailReasonClass = _MplsTtlFailReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 15),
    _MplsTtlFailReasonClass_Type()
)
mplsTtlFailReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTtlFailReasonClass.setStatus("current")


class _MtuDontFragReasonClass_Type(Integer32):
    """Custom type mtuDontFragReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MtuDontFragReasonClass_Type.__name__ = "Integer32"
_MtuDontFragReasonClass_Object = MibScalar
mtuDontFragReasonClass = _MtuDontFragReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 16),
    _MtuDontFragReasonClass_Type()
)
mtuDontFragReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mtuDontFragReasonClass.setStatus("current")


class _MtuFragReasonClass_Type(Integer32):
    """Custom type mtuFragReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MtuFragReasonClass_Type.__name__ = "Integer32"
_MtuFragReasonClass_Object = MibScalar
mtuFragReasonClass = _MtuFragReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 17),
    _MtuFragReasonClass_Type()
)
mtuFragReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mtuFragReasonClass.setStatus("current")


class _OspfReasonClass_Type(Integer32):
    """Custom type ospfReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_OspfReasonClass_Type.__name__ = "Integer32"
_OspfReasonClass_Object = MibScalar
ospfReasonClass = _OspfReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 18),
    _OspfReasonClass_Type()
)
ospfReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfReasonClass.setStatus("current")


class _PimReasonClass_Type(Integer32):
    """Custom type pimReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_PimReasonClass_Type.__name__ = "Integer32"
_PimReasonClass_Object = MibScalar
pimReasonClass = _PimReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 19),
    _PimReasonClass_Type()
)
pimReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pimReasonClass.setStatus("current")


class _PortSecurityDiscardReasonClass_Type(Integer32):
    """Custom type portSecurityDiscardReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_PortSecurityDiscardReasonClass_Type.__name__ = "Integer32"
_PortSecurityDiscardReasonClass_Object = MibScalar
portSecurityDiscardReasonClass = _PortSecurityDiscardReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 20),
    _PortSecurityDiscardReasonClass_Type()
)
portSecurityDiscardReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portSecurityDiscardReasonClass.setStatus("current")


class _PtpReasonClass_Type(Integer32):
    """Custom type ptpReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_PtpReasonClass_Type.__name__ = "Integer32"
_PtpReasonClass_Object = MibScalar
ptpReasonClass = _PtpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 21),
    _PtpReasonClass_Type()
)
ptpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpReasonClass.setStatus("current")


class _RipReasonClass_Type(Integer32):
    """Custom type ripReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_RipReasonClass_Type.__name__ = "Integer32"
_RipReasonClass_Object = MibScalar
ripReasonClass = _RipReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 22),
    _RipReasonClass_Type()
)
ripReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripReasonClass.setStatus("current")


class _RsvpReasonClass_Type(Integer32):
    """Custom type rsvpReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_RsvpReasonClass_Type.__name__ = "Integer32"
_RsvpReasonClass_Object = MibScalar
rsvpReasonClass = _RsvpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 23),
    _RsvpReasonClass_Type()
)
rsvpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpReasonClass.setStatus("current")


class _SlowProtoReasonClass_Type(Integer32):
    """Custom type slowProtoReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SlowProtoReasonClass_Type.__name__ = "Integer32"
_SlowProtoReasonClass_Object = MibScalar
slowProtoReasonClass = _SlowProtoReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 24),
    _SlowProtoReasonClass_Type()
)
slowProtoReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slowProtoReasonClass.setStatus("current")


class _SmartLinkReasonClass_Type(Integer32):
    """Custom type smartLinkReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SmartLinkReasonClass_Type.__name__ = "Integer32"
_SmartLinkReasonClass_Object = MibScalar
smartLinkReasonClass = _SmartLinkReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 25),
    _SmartLinkReasonClass_Type()
)
smartLinkReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    smartLinkReasonClass.setStatus("current")


class _UcastIpTtlFailReasonClass_Type(Integer32):
    """Custom type ucastIpTtlFailReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_UcastIpTtlFailReasonClass_Type.__name__ = "Integer32"
_UcastIpTtlFailReasonClass_Object = MibScalar
ucastIpTtlFailReasonClass = _UcastIpTtlFailReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 26),
    _UcastIpTtlFailReasonClass_Type()
)
ucastIpTtlFailReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ucastIpTtlFailReasonClass.setStatus("current")


class _VlanSecurityDiscardReasonClass_Type(Integer32):
    """Custom type vlanSecurityDiscardReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_VlanSecurityDiscardReasonClass_Type.__name__ = "Integer32"
_VlanSecurityDiscardReasonClass_Object = MibScalar
vlanSecurityDiscardReasonClass = _VlanSecurityDiscardReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 27),
    _VlanSecurityDiscardReasonClass_Type()
)
vlanSecurityDiscardReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vlanSecurityDiscardReasonClass.setStatus("current")


class _VrrpReasonClass_Type(Integer32):
    """Custom type vrrpReasonClass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_VrrpReasonClass_Type.__name__ = "Integer32"
_VrrpReasonClass_Object = MibScalar
vrrpReasonClass = _VrrpReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 28),
    _VrrpReasonClass_Type()
)
vrrpReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vrrpReasonClass.setStatus("current")


class _MldReasonClass_Type(Integer32):
    """Custom type mldReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MldReasonClass_Type.__name__ = "Integer32"
_MldReasonClass_Object = MibScalar
mldReasonClass = _MldReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 29),
    _MldReasonClass_Type()
)
mldReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mldReasonClass.setStatus("current")


class _SflowEgressReasonClass_Type(Integer32):
    """Custom type sflowEgressReasonClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SflowEgressReasonClass_Type.__name__ = "Integer32"
_SflowEgressReasonClass_Object = MibScalar
sflowEgressReasonClass = _SflowEgressReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 30),
    _SflowEgressReasonClass_Type()
)
sflowEgressReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sflowEgressReasonClass.setStatus("current")


class _UdldReasonClass_Type(Integer32):
    """Custom type udldReasonClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_UdldReasonClass_Type.__name__ = "Integer32"
_UdldReasonClass_Object = MibScalar
udldReasonClass = _UdldReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 31),
    _UdldReasonClass_Type()
)
udldReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udldReasonClass.setStatus("current")


class _MplsTpPwOamReasonClass_Type(Integer32):
    """Custom type mplsTpPwOamReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MplsTpPwOamReasonClass_Type.__name__ = "Integer32"
_MplsTpPwOamReasonClass_Object = MibScalar
mplsTpPwOamReasonClass = _MplsTpPwOamReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 33),
    _MplsTpPwOamReasonClass_Type()
)
mplsTpPwOamReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mplsTpPwOamReasonClass.setStatus("current")


class _Dot1xMacBypassReasonClass_Type(Integer32):
    """Custom type dot1xMacBypassReasonClass based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Dot1xMacBypassReasonClass_Type.__name__ = "Integer32"
_Dot1xMacBypassReasonClass_Object = MibScalar
dot1xMacBypassReasonClass = _Dot1xMacBypassReasonClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 72, 3, 34),
    _Dot1xMacBypassReasonClass_Type()
)
dot1xMacBypassReasonClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1xMacBypassReasonClass.setStatus("current")
_Portisolate_ObjectIdentity = ObjectIdentity
portisolate = _Portisolate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 73)
)


class _PortIsolateMode_Type(Integer32):
    """Custom type portIsolateMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("l2", 1),
          ("all", 2))
    )


_PortIsolateMode_Type.__name__ = "Integer32"
_PortIsolateMode_Object = MibScalar
portIsolateMode = _PortIsolateMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 73, 1),
    _PortIsolateMode_Type()
)
portIsolateMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    portIsolateMode.setStatus("current")
_Phyloopback_ObjectIdentity = ObjectIdentity
phyloopback = _Phyloopback_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 74)
)
_PhyloopbackTable_Object = MibTable
phyloopbackTable = _PhyloopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1)
)
if mibBuilder.loadTexts:
    phyloopbackTable.setStatus("current")
_PhyloopbackEntry_Object = MibTableRow
phyloopbackEntry = _PhyloopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1)
)
phyloopbackEntry.setIndexNames(
    (0, "SWITCH", "phyloopbackIfindex"),
)
if mibBuilder.loadTexts:
    phyloopbackEntry.setStatus("current")


class _PhyloopbackIfindex_Type(Integer32):
    """Custom type phyloopbackIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_PhyloopbackIfindex_Type.__name__ = "Integer32"
_PhyloopbackIfindex_Object = MibTableColumn
phyloopbackIfindex = _PhyloopbackIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1, 1),
    _PhyloopbackIfindex_Type()
)
phyloopbackIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    phyloopbackIfindex.setStatus("current")


class _PhyloopbackType_Type(Integer32):
    """Custom type phyloopbackType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("internal", 0),
          ("external", 1),
          ("port", 2))
    )


_PhyloopbackType_Type.__name__ = "Integer32"
_PhyloopbackType_Object = MibTableColumn
phyloopbackType = _PhyloopbackType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1, 2),
    _PhyloopbackType_Type()
)
phyloopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phyloopbackType.setStatus("current")


class _PhyloopbackDstIfindex_Type(Integer32):
    """Custom type phyloopbackDstIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_PhyloopbackDstIfindex_Type.__name__ = "Integer32"
_PhyloopbackDstIfindex_Object = MibTableColumn
phyloopbackDstIfindex = _PhyloopbackDstIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1, 3),
    _PhyloopbackDstIfindex_Type()
)
phyloopbackDstIfindex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phyloopbackDstIfindex.setStatus("current")


class _PhyloopbackMacAddrSwap_Type(Integer32):
    """Custom type phyloopbackMacAddrSwap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PhyloopbackMacAddrSwap_Type.__name__ = "Integer32"
_PhyloopbackMacAddrSwap_Object = MibTableColumn
phyloopbackMacAddrSwap = _PhyloopbackMacAddrSwap_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1, 4),
    _PhyloopbackMacAddrSwap_Type()
)
phyloopbackMacAddrSwap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phyloopbackMacAddrSwap.setStatus("current")
_PhyloopbackRowStatus_Type = RowStatus
_PhyloopbackRowStatus_Object = MibTableColumn
phyloopbackRowStatus = _PhyloopbackRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 74, 1, 1, 5),
    _PhyloopbackRowStatus_Type()
)
phyloopbackRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    phyloopbackRowStatus.setStatus("current")
_Monitorlink_ObjectIdentity = ObjectIdentity
monitorlink = _Monitorlink_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 75)
)


class _MonitorLinkRecoverTime_Type(Integer32):
    """Custom type monitorLinkRecoverTime based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 60),
    )


_MonitorLinkRecoverTime_Type.__name__ = "Integer32"
_MonitorLinkRecoverTime_Object = MibScalar
monitorLinkRecoverTime = _MonitorLinkRecoverTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 1),
    _MonitorLinkRecoverTime_Type()
)
monitorLinkRecoverTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    monitorLinkRecoverTime.setStatus("current")
_MonitorLinkGroupTable_Object = MibTable
monitorLinkGroupTable = _MonitorLinkGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 2)
)
if mibBuilder.loadTexts:
    monitorLinkGroupTable.setStatus("current")
_MonitorLinkGroupEntry_Object = MibTableRow
monitorLinkGroupEntry = _MonitorLinkGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 2, 1)
)
monitorLinkGroupEntry.setIndexNames(
    (0, "SWITCH", "groupIndex"),
)
if mibBuilder.loadTexts:
    monitorLinkGroupEntry.setStatus("current")


class _GroupIndex_Type(Integer32):
    """Custom type groupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_GroupIndex_Type.__name__ = "Integer32"
_GroupIndex_Object = MibTableColumn
groupIndex = _GroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 2, 1, 1),
    _GroupIndex_Type()
)
groupIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    groupIndex.setStatus("current")


class _GroupStatus_Type(Integer32):
    """Custom type groupStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2),
          ("idle", 3))
    )


_GroupStatus_Type.__name__ = "Integer32"
_GroupStatus_Object = MibTableColumn
groupStatus = _GroupStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 2, 1, 2),
    _GroupStatus_Type()
)
groupStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    groupStatus.setStatus("current")
_GroupRowStatus_Type = RowStatus
_GroupRowStatus_Object = MibTableColumn
groupRowStatus = _GroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 2, 1, 3),
    _GroupRowStatus_Type()
)
groupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    groupRowStatus.setStatus("current")
_MonitorLinkMemberTable_Object = MibTable
monitorLinkMemberTable = _MonitorLinkMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3)
)
if mibBuilder.loadTexts:
    monitorLinkMemberTable.setStatus("current")
_MonitorLinkMemberEntry_Object = MibTableRow
monitorLinkMemberEntry = _MonitorLinkMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1)
)
monitorLinkMemberEntry.setIndexNames(
    (0, "SWITCH", "groupIndex"),
    (0, "SWITCH", "memberLinkType"),
    (0, "SWITCH", "memberIndex"),
)
if mibBuilder.loadTexts:
    monitorLinkMemberEntry.setStatus("current")


class _MemberLinkType_Type(Integer32):
    """Custom type memberLinkType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("up-link", 0),
          ("down-link", 1))
    )


_MemberLinkType_Type.__name__ = "Integer32"
_MemberLinkType_Object = MibTableColumn
memberLinkType = _MemberLinkType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 1),
    _MemberLinkType_Type()
)
memberLinkType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    memberLinkType.setStatus("current")


class _MemberIndex_Type(Integer32):
    """Custom type memberIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MemberIndex_Type.__name__ = "Integer32"
_MemberIndex_Object = MibTableColumn
memberIndex = _MemberIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 2),
    _MemberIndex_Type()
)
memberIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    memberIndex.setStatus("current")


class _MemberType_Type(Integer32):
    """Custom type memberType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smart-link", 0),
          ("interface", 1))
    )


_MemberType_Type.__name__ = "Integer32"
_MemberType_Object = MibTableColumn
memberType = _MemberType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 3),
    _MemberType_Type()
)
memberType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    memberType.setStatus("current")


class _MemberIdentify_Type(Integer32):
    """Custom type memberIdentify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_MemberIdentify_Type.__name__ = "Integer32"
_MemberIdentify_Object = MibTableColumn
memberIdentify = _MemberIdentify_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 4),
    _MemberIdentify_Type()
)
memberIdentify.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    memberIdentify.setStatus("current")
_MemberUptime_Type = TimeTicks
_MemberUptime_Object = MibTableColumn
memberUptime = _MemberUptime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 5),
    _MemberUptime_Type()
)
memberUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memberUptime.setStatus("current")
_MemberDowntime_Type = TimeTicks
_MemberDowntime_Object = MibTableColumn
memberDowntime = _MemberDowntime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 6),
    _MemberDowntime_Type()
)
memberDowntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memberDowntime.setStatus("current")
_MemberUpCounter_Type = Counter32
_MemberUpCounter_Object = MibTableColumn
memberUpCounter = _MemberUpCounter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 7),
    _MemberUpCounter_Type()
)
memberUpCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memberUpCounter.setStatus("current")
_MemberDownCounter_Type = Counter32
_MemberDownCounter_Object = MibTableColumn
memberDownCounter = _MemberDownCounter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 8),
    _MemberDownCounter_Type()
)
memberDownCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memberDownCounter.setStatus("current")
_MemberRowStatus_Type = RowStatus
_MemberRowStatus_Object = MibTableColumn
memberRowStatus = _MemberRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 75, 3, 1, 9),
    _MemberRowStatus_Type()
)
memberRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    memberRowStatus.setStatus("current")
_Udld_ObjectIdentity = ObjectIdentity
udld = _Udld_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 76)
)


class _UdldGlobalState_Type(Integer32):
    """Custom type udldGlobalState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_UdldGlobalState_Type.__name__ = "Integer32"
_UdldGlobalState_Object = MibScalar
udldGlobalState = _UdldGlobalState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 1),
    _UdldGlobalState_Type()
)
udldGlobalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udldGlobalState.setStatus("current")


class _UdldMsgInterval_Type(Integer32):
    """Custom type udldMsgInterval based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 90),
    )


_UdldMsgInterval_Type.__name__ = "Integer32"
_UdldMsgInterval_Object = MibScalar
udldMsgInterval = _UdldMsgInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 2),
    _UdldMsgInterval_Type()
)
udldMsgInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udldMsgInterval.setStatus("current")


class _UdldOperate_Type(Integer32):
    """Custom type udldOperate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_UdldOperate_Type.__name__ = "Integer32"
_UdldOperate_Object = MibScalar
udldOperate = _UdldOperate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 3),
    _UdldOperate_Type()
)
udldOperate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udldOperate.setStatus("current")
_UdldIfTable_Object = MibTable
udldIfTable = _UdldIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4)
)
if mibBuilder.loadTexts:
    udldIfTable.setStatus("current")
_UdldIfEntry_Object = MibTableRow
udldIfEntry = _UdldIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4, 1)
)
udldIfEntry.setIndexNames(
    (0, "SWITCH", "udldIfIndex"),
)
if mibBuilder.loadTexts:
    udldIfEntry.setStatus("current")


class _UdldIfIndex_Type(Integer32):
    """Custom type udldIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UdldIfIndex_Type.__name__ = "Integer32"
_UdldIfIndex_Object = MibTableColumn
udldIfIndex = _UdldIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4, 1, 1),
    _UdldIfIndex_Type()
)
udldIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    udldIfIndex.setStatus("current")


class _UdldIfName_Type(OctetString):
    """Custom type udldIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_UdldIfName_Type.__name__ = "OctetString"
_UdldIfName_Object = MibTableColumn
udldIfName = _UdldIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4, 1, 2),
    _UdldIfName_Type()
)
udldIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udldIfName.setStatus("current")


class _UdldState_Type(Integer32):
    """Custom type udldState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("normal", 2),
          ("aggressive", 3))
    )


_UdldState_Type.__name__ = "Integer32"
_UdldState_Object = MibTableColumn
udldState = _UdldState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4, 1, 3),
    _UdldState_Type()
)
udldState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    udldState.setStatus("current")


class _UdldLinkState_Type(Integer32):
    """Custom type udldLinkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("linkUp", 0),
          ("unknown", 1),
          ("detection", 2),
          ("exDetection", 3),
          ("bidirectional", 4),
          ("unidirectional", 5),
          ("selfLoop", 7),
          ("linkdown", 8),
          ("inActive", 9))
    )


_UdldLinkState_Type.__name__ = "Integer32"
_UdldLinkState_Object = MibTableColumn
udldLinkState = _UdldLinkState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 76, 4, 1, 4),
    _UdldLinkState_Type()
)
udldLinkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udldLinkState.setStatus("current")
_PolicyBasedRouting_ObjectIdentity = ObjectIdentity
policyBasedRouting = _PolicyBasedRouting_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 77)
)
_PbrTable_Object = MibTable
pbrTable = _PbrTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 77, 1)
)
if mibBuilder.loadTexts:
    pbrTable.setStatus("current")
_PbrEntry_Object = MibTableRow
pbrEntry = _PbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 77, 1, 1)
)
pbrEntry.setIndexNames(
    (0, "SWITCH", "pbrIfIndex"),
)
if mibBuilder.loadTexts:
    pbrEntry.setStatus("current")


class _PbrIfIndex_Type(Integer32):
    """Custom type pbrIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PbrIfIndex_Type.__name__ = "Integer32"
_PbrIfIndex_Object = MibTableColumn
pbrIfIndex = _PbrIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 77, 1, 1, 1),
    _PbrIfIndex_Type()
)
pbrIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pbrIfIndex.setStatus("current")


class _PbrPolicyRmapName_Type(OctetString):
    """Custom type pbrPolicyRmapName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_PbrPolicyRmapName_Type.__name__ = "OctetString"
_PbrPolicyRmapName_Object = MibTableColumn
pbrPolicyRmapName = _PbrPolicyRmapName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 77, 1, 1, 2),
    _PbrPolicyRmapName_Type()
)
pbrPolicyRmapName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pbrPolicyRmapName.setStatus("current")
_PbrRowStatus_Type = RowStatus
_PbrRowStatus_Object = MibTableColumn
pbrRowStatus = _PbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 77, 1, 1, 9),
    _PbrRowStatus_Type()
)
pbrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pbrRowStatus.setStatus("current")
_Ddos_ObjectIdentity = ObjectIdentity
ddos = _Ddos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 78)
)


class _DdosICMPIntercept_Type(Integer32):
    """Custom type ddosICMPIntercept based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 1000),
    )


_DdosICMPIntercept_Type.__name__ = "Integer32"
_DdosICMPIntercept_Object = MibScalar
ddosICMPIntercept = _DdosICMPIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 1),
    _DdosICMPIntercept_Type()
)
ddosICMPIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosICMPIntercept.setStatus("current")


class _DdosUDPIntercept_Type(Integer32):
    """Custom type ddosUDPIntercept based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 1000),
    )


_DdosUDPIntercept_Type.__name__ = "Integer32"
_DdosUDPIntercept_Object = MibScalar
ddosUDPIntercept = _DdosUDPIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 2),
    _DdosUDPIntercept_Type()
)
ddosUDPIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosUDPIntercept.setStatus("current")


class _DdosTCPIntercept_Type(Integer32):
    """Custom type ddosTCPIntercept based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 1000),
    )


_DdosTCPIntercept_Type.__name__ = "Integer32"
_DdosTCPIntercept_Object = MibScalar
ddosTCPIntercept = _DdosTCPIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 3),
    _DdosTCPIntercept_Type()
)
ddosTCPIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosTCPIntercept.setStatus("current")


class _DdosSmurfIntercept_Type(Integer32):
    """Custom type ddosSmurfIntercept based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DdosSmurfIntercept_Type.__name__ = "Integer32"
_DdosSmurfIntercept_Object = MibScalar
ddosSmurfIntercept = _DdosSmurfIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 4),
    _DdosSmurfIntercept_Type()
)
ddosSmurfIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosSmurfIntercept.setStatus("current")


class _DdosSmalpktIntercept_Type(Integer32):
    """Custom type ddosSmalpktIntercept based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(28, 65535),
    )


_DdosSmalpktIntercept_Type.__name__ = "Integer32"
_DdosSmalpktIntercept_Object = MibScalar
ddosSmalpktIntercept = _DdosSmalpktIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 5),
    _DdosSmalpktIntercept_Type()
)
ddosSmalpktIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosSmalpktIntercept.setStatus("current")


class _DdosFraggleIntercept_Type(Integer32):
    """Custom type ddosFraggleIntercept based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DdosFraggleIntercept_Type.__name__ = "Integer32"
_DdosFraggleIntercept_Object = MibScalar
ddosFraggleIntercept = _DdosFraggleIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 6),
    _DdosFraggleIntercept_Type()
)
ddosFraggleIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosFraggleIntercept.setStatus("current")


class _DdosIpeqIntercept_Type(Integer32):
    """Custom type ddosIpeqIntercept based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DdosIpeqIntercept_Type.__name__ = "Integer32"
_DdosIpeqIntercept_Object = MibScalar
ddosIpeqIntercept = _DdosIpeqIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 7),
    _DdosIpeqIntercept_Type()
)
ddosIpeqIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosIpeqIntercept.setStatus("current")


class _DdosMaceqIntercept_Type(Integer32):
    """Custom type ddosMaceqIntercept based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_DdosMaceqIntercept_Type.__name__ = "Integer32"
_DdosMaceqIntercept_Object = MibScalar
ddosMaceqIntercept = _DdosMaceqIntercept_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 8),
    _DdosMaceqIntercept_Type()
)
ddosMaceqIntercept.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosMaceqIntercept.setStatus("current")


class _DdosSmalPktStatistic_Type(Counter32):
    """Custom type ddosSmalPktStatistic based on Counter32"""
    defaultValue = 0


_DdosSmalPktStatistic_Type.__name__ = "Counter32"
_DdosSmalPktStatistic_Object = MibScalar
ddosSmalPktStatistic = _DdosSmalPktStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 9),
    _DdosSmalPktStatistic_Type()
)
ddosSmalPktStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosSmalPktStatistic.setStatus("current")


class _DdosICMPStatistic_Type(Counter32):
    """Custom type ddosICMPStatistic based on Counter32"""
    defaultValue = 0


_DdosICMPStatistic_Type.__name__ = "Counter32"
_DdosICMPStatistic_Object = MibScalar
ddosICMPStatistic = _DdosICMPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 10),
    _DdosICMPStatistic_Type()
)
ddosICMPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosICMPStatistic.setStatus("current")


class _DdosSmurfStatistic_Type(Counter32):
    """Custom type ddosSmurfStatistic based on Counter32"""
    defaultValue = 0


_DdosSmurfStatistic_Type.__name__ = "Counter32"
_DdosSmurfStatistic_Object = MibScalar
ddosSmurfStatistic = _DdosSmurfStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 11),
    _DdosSmurfStatistic_Type()
)
ddosSmurfStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosSmurfStatistic.setStatus("current")


class _DdosTCPStatistic_Type(Counter32):
    """Custom type ddosTCPStatistic based on Counter32"""
    defaultValue = 0


_DdosTCPStatistic_Type.__name__ = "Counter32"
_DdosTCPStatistic_Object = MibScalar
ddosTCPStatistic = _DdosTCPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 12),
    _DdosTCPStatistic_Type()
)
ddosTCPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosTCPStatistic.setStatus("current")


class _DdosFraggleStatistic_Type(Counter32):
    """Custom type ddosFraggleStatistic based on Counter32"""
    defaultValue = 0


_DdosFraggleStatistic_Type.__name__ = "Counter32"
_DdosFraggleStatistic_Object = MibScalar
ddosFraggleStatistic = _DdosFraggleStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 13),
    _DdosFraggleStatistic_Type()
)
ddosFraggleStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosFraggleStatistic.setStatus("current")


class _DdosUDPStatistic_Type(Counter32):
    """Custom type ddosUDPStatistic based on Counter32"""
    defaultValue = 0


_DdosUDPStatistic_Type.__name__ = "Counter32"
_DdosUDPStatistic_Object = MibScalar
ddosUDPStatistic = _DdosUDPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 14),
    _DdosUDPStatistic_Type()
)
ddosUDPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosUDPStatistic.setStatus("current")


class _DdosClearStatistic_Type(Integer32):
    """Custom type ddosClearStatistic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("clearStatistic", 1)
    )


_DdosClearStatistic_Type.__name__ = "Integer32"
_DdosClearStatistic_Object = MibScalar
ddosClearStatistic = _DdosClearStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 15),
    _DdosClearStatistic_Type()
)
ddosClearStatistic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ddosClearStatistic.setStatus("current")


class _DdosmgifSmalPktStatistic_Type(Counter32):
    """Custom type ddosmgifSmalPktStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifSmalPktStatistic_Type.__name__ = "Counter32"
_DdosmgifSmalPktStatistic_Object = MibScalar
ddosmgifSmalPktStatistic = _DdosmgifSmalPktStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 16),
    _DdosmgifSmalPktStatistic_Type()
)
ddosmgifSmalPktStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifSmalPktStatistic.setStatus("current")


class _DdosmgifICMPStatistic_Type(Counter32):
    """Custom type ddosmgifICMPStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifICMPStatistic_Type.__name__ = "Counter32"
_DdosmgifICMPStatistic_Object = MibScalar
ddosmgifICMPStatistic = _DdosmgifICMPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 17),
    _DdosmgifICMPStatistic_Type()
)
ddosmgifICMPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifICMPStatistic.setStatus("current")


class _DdosmgifSmurfStatistic_Type(Counter32):
    """Custom type ddosmgifSmurfStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifSmurfStatistic_Type.__name__ = "Counter32"
_DdosmgifSmurfStatistic_Object = MibScalar
ddosmgifSmurfStatistic = _DdosmgifSmurfStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 18),
    _DdosmgifSmurfStatistic_Type()
)
ddosmgifSmurfStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifSmurfStatistic.setStatus("current")


class _DdosmgifTCPStatistic_Type(Counter32):
    """Custom type ddosmgifTCPStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifTCPStatistic_Type.__name__ = "Counter32"
_DdosmgifTCPStatistic_Object = MibScalar
ddosmgifTCPStatistic = _DdosmgifTCPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 19),
    _DdosmgifTCPStatistic_Type()
)
ddosmgifTCPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifTCPStatistic.setStatus("current")


class _DdosmgifFraggleStatistic_Type(Counter32):
    """Custom type ddosmgifFraggleStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifFraggleStatistic_Type.__name__ = "Counter32"
_DdosmgifFraggleStatistic_Object = MibScalar
ddosmgifFraggleStatistic = _DdosmgifFraggleStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 20),
    _DdosmgifFraggleStatistic_Type()
)
ddosmgifFraggleStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifFraggleStatistic.setStatus("current")


class _DdosmgifUDPStatistic_Type(Counter32):
    """Custom type ddosmgifUDPStatistic based on Counter32"""
    defaultValue = 0


_DdosmgifUDPStatistic_Type.__name__ = "Counter32"
_DdosmgifUDPStatistic_Object = MibScalar
ddosmgifUDPStatistic = _DdosmgifUDPStatistic_Object(
    (1, 3, 6, 1, 4, 1, 27975, 78, 21),
    _DdosmgifUDPStatistic_Type()
)
ddosmgifUDPStatistic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ddosmgifUDPStatistic.setStatus("current")
_L2ping_ObjectIdentity = ObjectIdentity
l2ping = _L2ping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 79)
)
_L2PingResponseTable_Object = MibTable
l2PingResponseTable = _L2PingResponseTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 79, 1)
)
if mibBuilder.loadTexts:
    l2PingResponseTable.setStatus("current")
_L2PingResponseEntry_Object = MibTableRow
l2PingResponseEntry = _L2PingResponseEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 79, 1, 1)
)
l2PingResponseEntry.setIndexNames(
    (0, "SWITCH", "l2pingResponseIfindex"),
)
if mibBuilder.loadTexts:
    l2PingResponseEntry.setStatus("current")


class _L2pingResponseIfindex_Type(Integer32):
    """Custom type l2pingResponseIfindex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_L2pingResponseIfindex_Type.__name__ = "Integer32"
_L2pingResponseIfindex_Object = MibTableColumn
l2pingResponseIfindex = _L2pingResponseIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 79, 1, 1, 1),
    _L2pingResponseIfindex_Type()
)
l2pingResponseIfindex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    l2pingResponseIfindex.setStatus("current")


class _L2pingResponseEnable_Type(Integer32):
    """Custom type l2pingResponseEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_L2pingResponseEnable_Type.__name__ = "Integer32"
_L2pingResponseEnable_Object = MibTableColumn
l2pingResponseEnable = _L2pingResponseEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 79, 1, 1, 2),
    _L2pingResponseEnable_Type()
)
l2pingResponseEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    l2pingResponseEnable.setStatus("current")
_Ipg_ObjectIdentity = ObjectIdentity
ipg = _Ipg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 80)
)
_SyncE_ObjectIdentity = ObjectIdentity
syncE = _SyncE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 81)
)


class _SyncEDeviceClockID_Type(OctetString):
    """Custom type syncEDeviceClockID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SyncEDeviceClockID_Type.__name__ = "OctetString"
_SyncEDeviceClockID_Object = MibScalar
syncEDeviceClockID = _SyncEDeviceClockID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 1),
    _SyncEDeviceClockID_Type()
)
syncEDeviceClockID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEDeviceClockID.setStatus("current")


class _SyncEGlbEnable_Type(Integer32):
    """Custom type syncEGlbEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEGlbEnable_Type.__name__ = "Integer32"
_SyncEGlbEnable_Object = MibScalar
syncEGlbEnable = _SyncEGlbEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 2),
    _SyncEGlbEnable_Type()
)
syncEGlbEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEGlbEnable.setStatus("current")


class _SyncESsmGlbEnable_Type(Integer32):
    """Custom type syncESsmGlbEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncESsmGlbEnable_Type.__name__ = "Integer32"
_SyncESsmGlbEnable_Object = MibScalar
syncESsmGlbEnable = _SyncESsmGlbEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 3),
    _SyncESsmGlbEnable_Type()
)
syncESsmGlbEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncESsmGlbEnable.setStatus("current")


class _SyncEDeviceType_Type(Integer32):
    """Custom type syncEDeviceType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("master-only", 1),
          ("slave-only", 2),
          ("none", 3))
    )


_SyncEDeviceType_Type.__name__ = "Integer32"
_SyncEDeviceType_Object = MibScalar
syncEDeviceType = _SyncEDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 4),
    _SyncEDeviceType_Type()
)
syncEDeviceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEDeviceType.setStatus("current")


class _SyncELocalQuality_Type(Integer32):
    """Custom type syncELocalQuality based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("op2-prs", 1),
          ("op1-prc", 2),
          ("op2-eec2", 3),
          ("op1-eec1", 4),
          ("op1-dnu", 5),
          ("op2-dus", 6))
    )


_SyncELocalQuality_Type.__name__ = "Integer32"
_SyncELocalQuality_Object = MibScalar
syncELocalQuality = _SyncELocalQuality_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 5),
    _SyncELocalQuality_Type()
)
syncELocalQuality.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncELocalQuality.setStatus("current")


class _SyncELockedQuality_Type(Integer32):
    """Custom type syncELockedQuality based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("prs", 1),
          ("prc", 2),
          ("stu", 3),
          ("ssua", 4),
          ("tnc", 5),
          ("st2", 6),
          ("ssub", 7),
          ("eec2", 8),
          ("eec1", 9),
          ("smc", 10),
          ("st3e", 11),
          ("prov", 12),
          ("dnu", 13),
          ("dus", 14))
    )


_SyncELockedQuality_Type.__name__ = "Integer32"
_SyncELockedQuality_Object = MibScalar
syncELockedQuality = _SyncELockedQuality_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 6),
    _SyncELockedQuality_Type()
)
syncELockedQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncELockedQuality.setStatus("current")


class _SyncELocalPriority_Type(Integer32):
    """Custom type syncELocalPriority based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SyncELocalPriority_Type.__name__ = "Integer32"
_SyncELocalPriority_Object = MibScalar
syncELocalPriority = _SyncELocalPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 7),
    _SyncELocalPriority_Type()
)
syncELocalPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncELocalPriority.setStatus("current")


class _SyncESelectedInterface_Type(Integer32):
    """Custom type syncESelectedInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyncESelectedInterface_Type.__name__ = "Integer32"
_SyncESelectedInterface_Object = MibScalar
syncESelectedInterface = _SyncESelectedInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 8),
    _SyncESelectedInterface_Type()
)
syncESelectedInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncESelectedInterface.setStatus("current")


class _SyncEExtensionEnable_Type(Integer32):
    """Custom type syncEExtensionEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEExtensionEnable_Type.__name__ = "Integer32"
_SyncEExtensionEnable_Object = MibScalar
syncEExtensionEnable = _SyncEExtensionEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 9),
    _SyncEExtensionEnable_Type()
)
syncEExtensionEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEExtensionEnable.setStatus("current")


class _SyncEClockState_Type(Integer32):
    """Custom type syncEClockState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("master-clock", 1),
          ("freerun", 2),
          ("holdover", 3),
          ("lock", 4),
          ("unlock", 5))
    )


_SyncEClockState_Type.__name__ = "Integer32"
_SyncEClockState_Object = MibScalar
syncEClockState = _SyncEClockState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 10),
    _SyncEClockState_Type()
)
syncEClockState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEClockState.setStatus("current")


class _SyncEOptionMode_Type(Integer32):
    """Custom type syncEOptionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("op1", 1),
          ("op2", 2))
    )


_SyncEOptionMode_Type.__name__ = "Integer32"
_SyncEOptionMode_Object = MibScalar
syncEOptionMode = _SyncEOptionMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 11),
    _SyncEOptionMode_Type()
)
syncEOptionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEOptionMode.setStatus("current")


class _SyncESwitchForceIF_Type(Integer32):
    """Custom type syncESwitchForceIF based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_SyncESwitchForceIF_Type.__name__ = "Integer32"
_SyncESwitchForceIF_Object = MibScalar
syncESwitchForceIF = _SyncESwitchForceIF_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 12),
    _SyncESwitchForceIF_Type()
)
syncESwitchForceIF.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncESwitchForceIF.setStatus("current")
_SyncEIfTable_Object = MibTable
syncEIfTable = _SyncEIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13)
)
if mibBuilder.loadTexts:
    syncEIfTable.setStatus("current")
_SyncEIfEntry_Object = MibTableRow
syncEIfEntry = _SyncEIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1)
)
syncEIfEntry.setIndexNames(
    (0, "SWITCH", "syncEIfIndex"),
)
if mibBuilder.loadTexts:
    syncEIfEntry.setStatus("current")


class _SyncEIfIndex_Type(Integer32):
    """Custom type syncEIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SyncEIfIndex_Type.__name__ = "Integer32"
_SyncEIfIndex_Object = MibTableColumn
syncEIfIndex = _SyncEIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 1),
    _SyncEIfIndex_Type()
)
syncEIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    syncEIfIndex.setStatus("current")


class _SyncEIfSyncEEnable_Type(Integer32):
    """Custom type syncEIfSyncEEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEIfSyncEEnable_Type.__name__ = "Integer32"
_SyncEIfSyncEEnable_Object = MibTableColumn
syncEIfSyncEEnable = _SyncEIfSyncEEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 2),
    _SyncEIfSyncEEnable_Type()
)
syncEIfSyncEEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfSyncEEnable.setStatus("current")


class _SyncEIfSyncEPduMode_Type(Integer32):
    """Custom type syncEIfSyncEPduMode based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("rx", 1),
          ("tx", 2),
          ("all", 3),
          ("none-all", 4),
          ("none-rx", 5),
          ("none-tx", 6))
    )


_SyncEIfSyncEPduMode_Type.__name__ = "Integer32"
_SyncEIfSyncEPduMode_Object = MibTableColumn
syncEIfSyncEPduMode = _SyncEIfSyncEPduMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 3),
    _SyncEIfSyncEPduMode_Type()
)
syncEIfSyncEPduMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfSyncEPduMode.setStatus("current")


class _SyncEIfPortPriority_Type(Integer32):
    """Custom type syncEIfPortPriority based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SyncEIfPortPriority_Type.__name__ = "Integer32"
_SyncEIfPortPriority_Object = MibTableColumn
syncEIfPortPriority = _SyncEIfPortPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 4),
    _SyncEIfPortPriority_Type()
)
syncEIfPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfPortPriority.setStatus("current")


class _SyncEIfPortUp_Type(Integer32):
    """Custom type syncEIfPortUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEIfPortUp_Type.__name__ = "Integer32"
_SyncEIfPortUp_Object = MibTableColumn
syncEIfPortUp = _SyncEIfPortUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 5),
    _SyncEIfPortUp_Type()
)
syncEIfPortUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEIfPortUp.setStatus("current")


class _SyncEIfPortQuality_Type(Integer32):
    """Custom type syncEIfPortQuality based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("prs", 1),
          ("prc", 2),
          ("stu", 3),
          ("ssua", 4),
          ("tnc", 5),
          ("st2", 6),
          ("ssub", 7),
          ("eec2", 8),
          ("eec1", 9),
          ("smc", 10),
          ("st3e", 11),
          ("prov", 12),
          ("dnu", 13),
          ("dus", 14),
          ("na", 15))
    )


_SyncEIfPortQuality_Type.__name__ = "Integer32"
_SyncEIfPortQuality_Object = MibTableColumn
syncEIfPortQuality = _SyncEIfPortQuality_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 6),
    _SyncEIfPortQuality_Type()
)
syncEIfPortQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEIfPortQuality.setStatus("current")


class _SyncEIfSendTimerState_Type(Integer32):
    """Custom type syncEIfSendTimerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEIfSendTimerState_Type.__name__ = "Integer32"
_SyncEIfSendTimerState_Object = MibTableColumn
syncEIfSendTimerState = _SyncEIfSendTimerState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 7),
    _SyncEIfSendTimerState_Type()
)
syncEIfSendTimerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEIfSendTimerState.setStatus("current")


class _SyncEIfTimeoutTimerState_Type(Integer32):
    """Custom type syncEIfTimeoutTimerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEIfTimeoutTimerState_Type.__name__ = "Integer32"
_SyncEIfTimeoutTimerState_Object = MibTableColumn
syncEIfTimeoutTimerState = _SyncEIfTimeoutTimerState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 8),
    _SyncEIfTimeoutTimerState_Type()
)
syncEIfTimeoutTimerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEIfTimeoutTimerState.setStatus("current")


class _SyncEIfSendQuality_Type(Integer32):
    """Custom type syncEIfSendQuality based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("prs", 1),
          ("prc", 2),
          ("stu", 3),
          ("ssua", 4),
          ("tnc", 5),
          ("st2", 6),
          ("ssub", 7),
          ("eec2", 8),
          ("eec1", 9),
          ("smc", 10),
          ("st3e", 11),
          ("prov", 12),
          ("dnu", 13),
          ("dus", 14),
          ("na", 15))
    )


_SyncEIfSendQuality_Type.__name__ = "Integer32"
_SyncEIfSendQuality_Object = MibTableColumn
syncEIfSendQuality = _SyncEIfSendQuality_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 9),
    _SyncEIfSendQuality_Type()
)
syncEIfSendQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syncEIfSendQuality.setStatus("current")


class _SyncEIFDNUgroup_Type(Integer32):
    """Custom type syncEIFDNUgroup based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SyncEIFDNUgroup_Type.__name__ = "Integer32"
_SyncEIFDNUgroup_Object = MibTableColumn
syncEIFDNUgroup = _SyncEIFDNUgroup_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 10),
    _SyncEIFDNUgroup_Type()
)
syncEIFDNUgroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIFDNUgroup.setStatus("current")


class _SyncEIfReplaceClockId_Type(Integer32):
    """Custom type syncEIfReplaceClockId based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_SyncEIfReplaceClockId_Type.__name__ = "Integer32"
_SyncEIfReplaceClockId_Object = MibTableColumn
syncEIfReplaceClockId = _SyncEIfReplaceClockId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 11),
    _SyncEIfReplaceClockId_Type()
)
syncEIfReplaceClockId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfReplaceClockId.setStatus("current")


class _SyncEIfForcibleRxQL_Type(Integer32):
    """Custom type syncEIfForcibleRxQL based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("prs", 1),
          ("prc", 2),
          ("stu", 3),
          ("ssua", 4),
          ("tnc", 5),
          ("st2", 6),
          ("ssub", 7),
          ("eec2", 8),
          ("eec1", 9),
          ("smc", 10),
          ("st3e", 11),
          ("prov", 12),
          ("dnu", 13),
          ("dus", 14),
          ("na", 15))
    )


_SyncEIfForcibleRxQL_Type.__name__ = "Integer32"
_SyncEIfForcibleRxQL_Object = MibTableColumn
syncEIfForcibleRxQL = _SyncEIfForcibleRxQL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 12),
    _SyncEIfForcibleRxQL_Type()
)
syncEIfForcibleRxQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfForcibleRxQL.setStatus("current")


class _SyncEIfForcibleTxQL_Type(Integer32):
    """Custom type syncEIfForcibleTxQL based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("prs", 1),
          ("prc", 2),
          ("stu", 3),
          ("ssua", 4),
          ("tnc", 5),
          ("st2", 6),
          ("ssub", 7),
          ("eec2", 8),
          ("eec1", 9),
          ("smc", 10),
          ("st3e", 11),
          ("prov", 12),
          ("dnu", 13),
          ("dus", 14),
          ("na", 15))
    )


_SyncEIfForcibleTxQL_Type.__name__ = "Integer32"
_SyncEIfForcibleTxQL_Object = MibTableColumn
syncEIfForcibleTxQL = _SyncEIfForcibleTxQL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 13, 1, 13),
    _SyncEIfForcibleTxQL_Type()
)
syncEIfForcibleTxQL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEIfForcibleTxQL.setStatus("current")


class _SyncEClockRecoverySelect_Type(Integer32):
    """Custom type syncEClockRecoverySelect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("synce", 1),
          ("bits1", 2),
          ("bits2", 3))
    )


_SyncEClockRecoverySelect_Type.__name__ = "Integer32"
_SyncEClockRecoverySelect_Object = MibScalar
syncEClockRecoverySelect = _SyncEClockRecoverySelect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 81, 15),
    _SyncEClockRecoverySelect_Type()
)
syncEClockRecoverySelect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syncEClockRecoverySelect.setStatus("current")
_SyncENotifications_ObjectIdentity = ObjectIdentity
syncENotifications = _SyncENotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 81, 100)
)
_ArpConfig_ObjectIdentity = ObjectIdentity
arpConfig = _ArpConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 82)
)


class _ArpGratuitousRecvEn_Type(Integer32):
    """Custom type arpGratuitousRecvEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_ArpGratuitousRecvEn_Type.__name__ = "Integer32"
_ArpGratuitousRecvEn_Object = MibScalar
arpGratuitousRecvEn = _ArpGratuitousRecvEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 82, 1),
    _ArpGratuitousRecvEn_Type()
)
arpGratuitousRecvEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arpGratuitousRecvEn.setStatus("current")
_ArpAllEntries_Type = Integer32
_ArpAllEntries_Object = MibScalar
arpAllEntries = _ArpAllEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 82, 2),
    _ArpAllEntries_Type()
)
arpAllEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpAllEntries.setStatus("current")
_ArpAllIncompleteEntries_Type = Integer32
_ArpAllIncompleteEntries_Object = MibScalar
arpAllIncompleteEntries = _ArpAllIncompleteEntries_Object(
    (1, 3, 6, 1, 4, 1, 27975, 82, 3),
    _ArpAllIncompleteEntries_Type()
)
arpAllIncompleteEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpAllIncompleteEntries.setStatus("current")
_Cfm_ObjectIdentity = ObjectIdentity
cfm = _Cfm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 83)
)


class _CfmEn_Type(Integer32):
    """Custom type cfmEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmEn_Type.__name__ = "Integer32"
_CfmEn_Object = MibScalar
cfmEn = _CfmEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 1),
    _CfmEn_Type()
)
cfmEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmEn.setStatus("current")


class _CfmLinktraceCacheEn_Type(Integer32):
    """Custom type cfmLinktraceCacheEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLinktraceCacheEn_Type.__name__ = "Integer32"
_CfmLinktraceCacheEn_Object = MibScalar
cfmLinktraceCacheEn = _CfmLinktraceCacheEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 4),
    _CfmLinktraceCacheEn_Type()
)
cfmLinktraceCacheEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceCacheEn.setStatus("current")


class _CfmLinktraceCacheSize_Type(Integer32):
    """Custom type cfmLinktraceCacheSize based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmLinktraceCacheSize_Type.__name__ = "Integer32"
_CfmLinktraceCacheSize_Object = MibScalar
cfmLinktraceCacheSize = _CfmLinktraceCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 5),
    _CfmLinktraceCacheSize_Type()
)
cfmLinktraceCacheSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceCacheSize.setStatus("current")


class _CfmLinktraceHoldTime_Type(Integer32):
    """Custom type cfmLinktraceHoldTime based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 65535),
    )


_CfmLinktraceHoldTime_Type.__name__ = "Integer32"
_CfmLinktraceHoldTime_Object = MibScalar
cfmLinktraceHoldTime = _CfmLinktraceHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 6),
    _CfmLinktraceHoldTime_Type()
)
cfmLinktraceHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceHoldTime.setStatus("current")


class _CfmMipFdbDatabaseSize_Type(Integer32):
    """Custom type cfmMipFdbDatabaseSize based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmMipFdbDatabaseSize_Type.__name__ = "Integer32"
_CfmMipFdbDatabaseSize_Object = MibScalar
cfmMipFdbDatabaseSize = _CfmMipFdbDatabaseSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 7),
    _CfmMipFdbDatabaseSize_Type()
)
cfmMipFdbDatabaseSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMipFdbDatabaseSize.setStatus("current")


class _CfmMipFdbHoldTime_Type(Integer32):
    """Custom type cfmMipFdbHoldTime based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmMipFdbHoldTime_Type.__name__ = "Integer32"
_CfmMipFdbHoldTime_Object = MibScalar
cfmMipFdbHoldTime = _CfmMipFdbHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 8),
    _CfmMipFdbHoldTime_Type()
)
cfmMipFdbHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMipFdbHoldTime.setStatus("current")


class _CfmSFReasonLoc_Type(Integer32):
    """Custom type cfmSFReasonLoc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmSFReasonLoc_Type.__name__ = "Integer32"
_CfmSFReasonLoc_Object = MibScalar
cfmSFReasonLoc = _CfmSFReasonLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 11),
    _CfmSFReasonLoc_Type()
)
cfmSFReasonLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmSFReasonLoc.setStatus("current")


class _CfmSFReasonRxRdi_Type(Integer32):
    """Custom type cfmSFReasonRxRdi based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmSFReasonRxRdi_Type.__name__ = "Integer32"
_CfmSFReasonRxRdi_Object = MibScalar
cfmSFReasonRxRdi = _CfmSFReasonRxRdi_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 12),
    _CfmSFReasonRxRdi_Type()
)
cfmSFReasonRxRdi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmSFReasonRxRdi.setStatus("current")


class _CfmSFReasonAisDefect_Type(Integer32):
    """Custom type cfmSFReasonAisDefect based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmSFReasonAisDefect_Type.__name__ = "Integer32"
_CfmSFReasonAisDefect_Object = MibScalar
cfmSFReasonAisDefect = _CfmSFReasonAisDefect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 13),
    _CfmSFReasonAisDefect_Type()
)
cfmSFReasonAisDefect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmSFReasonAisDefect.setStatus("current")


class _CfmMDErrorClearLevel_Type(Integer32):
    """Custom type cfmMDErrorClearLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMDErrorClearLevel_Type.__name__ = "Integer32"
_CfmMDErrorClearLevel_Object = MibScalar
cfmMDErrorClearLevel = _CfmMDErrorClearLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 14),
    _CfmMDErrorClearLevel_Type()
)
cfmMDErrorClearLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMDErrorClearLevel.setStatus("current")


class _CfmMipFdbClear_Type(Integer32):
    """Custom type cfmMipFdbClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_CfmMipFdbClear_Type.__name__ = "Integer32"
_CfmMipFdbClear_Object = MibScalar
cfmMipFdbClear = _CfmMipFdbClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 15),
    _CfmMipFdbClear_Type()
)
cfmMipFdbClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMipFdbClear.setStatus("current")


class _CfmLinkTraceCacheClear_Type(Integer32):
    """Custom type cfmLinkTraceCacheClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_CfmLinkTraceCacheClear_Type.__name__ = "Integer32"
_CfmLinkTraceCacheClear_Object = MibScalar
cfmLinkTraceCacheClear = _CfmLinkTraceCacheClear_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 17),
    _CfmLinkTraceCacheClear_Type()
)
cfmLinkTraceCacheClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinkTraceCacheClear.setStatus("current")
_CfmMDTable_Object = MibTable
cfmMDTable = _CfmMDTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 18)
)
if mibBuilder.loadTexts:
    cfmMDTable.setStatus("current")
_CfmMDEntry_Object = MibTableRow
cfmMDEntry = _CfmMDEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 18, 1)
)
cfmMDEntry.setIndexNames(
    (0, "SWITCH", "cfmMDLevel"),
)
if mibBuilder.loadTexts:
    cfmMDEntry.setStatus("current")


class _CfmMDLevel_Type(Integer32):
    """Custom type cfmMDLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMDLevel_Type.__name__ = "Integer32"
_CfmMDLevel_Object = MibTableColumn
cfmMDLevel = _CfmMDLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 18, 1, 1),
    _CfmMDLevel_Type()
)
cfmMDLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMDLevel.setStatus("current")


class _CfmMDName_Type(OctetString):
    """Custom type cfmMDName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 43),
    )


_CfmMDName_Type.__name__ = "OctetString"
_CfmMDName_Object = MibTableColumn
cfmMDName = _CfmMDName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 18, 1, 2),
    _CfmMDName_Type()
)
cfmMDName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMDName.setStatus("current")
_CfmMDRowStatus_Type = RowStatus
_CfmMDRowStatus_Object = MibTableColumn
cfmMDRowStatus = _CfmMDRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 18, 1, 6),
    _CfmMDRowStatus_Type()
)
cfmMDRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmMDRowStatus.setStatus("current")
_CfmMATable_Object = MibTable
cfmMATable = _CfmMATable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19)
)
if mibBuilder.loadTexts:
    cfmMATable.setStatus("current")
_CfmMAEntry_Object = MibTableRow
cfmMAEntry = _CfmMAEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1)
)
cfmMAEntry.setIndexNames(
    (0, "SWITCH", "cfmMAIndex"),
    (0, "SWITCH", "cfmMAVlan"),
)
if mibBuilder.loadTexts:
    cfmMAEntry.setStatus("current")


class _CfmMAIndex_Type(Integer32):
    """Custom type cfmMAIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMAIndex_Type.__name__ = "Integer32"
_CfmMAIndex_Object = MibTableColumn
cfmMAIndex = _CfmMAIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 1),
    _CfmMAIndex_Type()
)
cfmMAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMAIndex.setStatus("current")


class _CfmMAVlan_Type(Integer32):
    """Custom type cfmMAVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmMAVlan_Type.__name__ = "Integer32"
_CfmMAVlan_Object = MibTableColumn
cfmMAVlan = _CfmMAVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 2),
    _CfmMAVlan_Type()
)
cfmMAVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMAVlan.setStatus("current")


class _CfmMAName_Type(OctetString):
    """Custom type cfmMAName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 43),
    )


_CfmMAName_Type.__name__ = "OctetString"
_CfmMAName_Object = MibTableColumn
cfmMAName = _CfmMAName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 3),
    _CfmMAName_Type()
)
cfmMAName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMAName.setStatus("current")
_CfmMARowStatus_Type = RowStatus
_CfmMARowStatus_Object = MibTableColumn
cfmMARowStatus = _CfmMARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 7),
    _CfmMARowStatus_Type()
)
cfmMARowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmMARowStatus.setStatus("current")


class _CfmMACCEn_Type(Integer32):
    """Custom type cfmMACCEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmMACCEn_Type.__name__ = "Integer32"
_CfmMACCEn_Object = MibTableColumn
cfmMACCEn = _CfmMACCEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 8),
    _CfmMACCEn_Type()
)
cfmMACCEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMACCEn.setStatus("current")


class _CfmMACCVlanPriority_Type(Integer32):
    """Custom type cfmMACCVlanPriority based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMACCVlanPriority_Type.__name__ = "Integer32"
_CfmMACCVlanPriority_Object = MibTableColumn
cfmMACCVlanPriority = _CfmMACCVlanPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 9),
    _CfmMACCVlanPriority_Type()
)
cfmMACCVlanPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMACCVlanPriority.setStatus("current")


class _CfmMAErrorWriteEn_Type(Integer32):
    """Custom type cfmMAErrorWriteEn based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmMAErrorWriteEn_Type.__name__ = "Integer32"
_CfmMAErrorWriteEn_Object = MibTableColumn
cfmMAErrorWriteEn = _CfmMAErrorWriteEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 10),
    _CfmMAErrorWriteEn_Type()
)
cfmMAErrorWriteEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMAErrorWriteEn.setStatus("current")


class _CfmMAAisSuppressAlarm_Type(Integer32):
    """Custom type cfmMAAisSuppressAlarm based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmMAAisSuppressAlarm_Type.__name__ = "Integer32"
_CfmMAAisSuppressAlarm_Object = MibTableColumn
cfmMAAisSuppressAlarm = _CfmMAAisSuppressAlarm_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 19, 1, 11),
    _CfmMAAisSuppressAlarm_Type()
)
cfmMAAisSuppressAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMAAisSuppressAlarm.setStatus("current")
_CfmMepTable_Object = MibTable
cfmMepTable = _CfmMepTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20)
)
if mibBuilder.loadTexts:
    cfmMepTable.setStatus("current")
_CfmMepEntry_Object = MibTableRow
cfmMepEntry = _CfmMepEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1)
)
cfmMepEntry.setIndexNames(
    (0, "SWITCH", "cfmMepLevel"),
    (0, "SWITCH", "cfmMepVlan"),
    (0, "SWITCH", "cfmMepId"),
)
if mibBuilder.loadTexts:
    cfmMepEntry.setStatus("current")


class _CfmMepLevel_Type(Integer32):
    """Custom type cfmMepLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMepLevel_Type.__name__ = "Integer32"
_CfmMepLevel_Object = MibTableColumn
cfmMepLevel = _CfmMepLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 1),
    _CfmMepLevel_Type()
)
cfmMepLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMepLevel.setStatus("current")


class _CfmMepVlan_Type(Integer32):
    """Custom type cfmMepVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmMepVlan_Type.__name__ = "Integer32"
_CfmMepVlan_Object = MibTableColumn
cfmMepVlan = _CfmMepVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 2),
    _CfmMepVlan_Type()
)
cfmMepVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMepVlan.setStatus("current")


class _CfmMepId_Type(Integer32):
    """Custom type cfmMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmMepId_Type.__name__ = "Integer32"
_CfmMepId_Object = MibTableColumn
cfmMepId = _CfmMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 3),
    _CfmMepId_Type()
)
cfmMepId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMepId.setStatus("current")


class _CfmMepDirection_Type(Integer32):
    """Custom type cfmMepDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_CfmMepDirection_Type.__name__ = "Integer32"
_CfmMepDirection_Object = MibTableColumn
cfmMepDirection = _CfmMepDirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 4),
    _CfmMepDirection_Type()
)
cfmMepDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMepDirection.setStatus("current")


class _CfmMepInterval_Type(Integer32):
    """Custom type cfmMepInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CfmMepInterval_Type.__name__ = "Integer32"
_CfmMepInterval_Object = MibTableColumn
cfmMepInterval = _CfmMepInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 5),
    _CfmMepInterval_Type()
)
cfmMepInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMepInterval.setStatus("current")
_CfmMepIfIndex_Type = Integer32
_CfmMepIfIndex_Object = MibTableColumn
cfmMepIfIndex = _CfmMepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 6),
    _CfmMepIfIndex_Type()
)
cfmMepIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMepIfIndex.setStatus("current")
_CfmMepRowStatus_Type = RowStatus
_CfmMepRowStatus_Object = MibTableColumn
cfmMepRowStatus = _CfmMepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 10),
    _CfmMepRowStatus_Type()
)
cfmMepRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmMepRowStatus.setStatus("current")


class _CfmMepRdi_Type(Integer32):
    """Custom type cfmMepRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmMepRdi_Type.__name__ = "Integer32"
_CfmMepRdi_Object = MibTableColumn
cfmMepRdi = _CfmMepRdi_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 11),
    _CfmMepRdi_Type()
)
cfmMepRdi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmMepRdi.setStatus("current")


class _CfmMepAisCondition_Type(Integer32):
    """Custom type cfmMepAisCondition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmMepAisCondition_Type.__name__ = "Integer32"
_CfmMepAisCondition_Object = MibTableColumn
cfmMepAisCondition = _CfmMepAisCondition_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 20, 1, 12),
    _CfmMepAisCondition_Type()
)
cfmMepAisCondition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmMepAisCondition.setStatus("current")
_CfmRMepTable_Object = MibTable
cfmRMepTable = _CfmRMepTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21)
)
if mibBuilder.loadTexts:
    cfmRMepTable.setStatus("current")
_CfmRMepEntry_Object = MibTableRow
cfmRMepEntry = _CfmRMepEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1)
)
cfmRMepEntry.setIndexNames(
    (0, "SWITCH", "cfmRMepLevel"),
    (0, "SWITCH", "cfmRMepVlan"),
    (0, "SWITCH", "cfmRMepId"),
)
if mibBuilder.loadTexts:
    cfmRMepEntry.setStatus("current")


class _CfmRMepLevel_Type(Integer32):
    """Custom type cfmRMepLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmRMepLevel_Type.__name__ = "Integer32"
_CfmRMepLevel_Object = MibTableColumn
cfmRMepLevel = _CfmRMepLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 1),
    _CfmRMepLevel_Type()
)
cfmRMepLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmRMepLevel.setStatus("current")


class _CfmRMepVlan_Type(Integer32):
    """Custom type cfmRMepVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmRMepVlan_Type.__name__ = "Integer32"
_CfmRMepVlan_Object = MibTableColumn
cfmRMepVlan = _CfmRMepVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 2),
    _CfmRMepVlan_Type()
)
cfmRMepVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmRMepVlan.setStatus("current")


class _CfmRMepId_Type(Integer32):
    """Custom type cfmRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmRMepId_Type.__name__ = "Integer32"
_CfmRMepId_Object = MibTableColumn
cfmRMepId = _CfmRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 3),
    _CfmRMepId_Type()
)
cfmRMepId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmRMepId.setStatus("current")
_CfmRMepIfIndex_Type = Integer32
_CfmRMepIfIndex_Object = MibTableColumn
cfmRMepIfIndex = _CfmRMepIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 4),
    _CfmRMepIfIndex_Type()
)
cfmRMepIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmRMepIfIndex.setStatus("current")
_CfmRMepAddr_Type = OctetString
_CfmRMepAddr_Object = MibTableColumn
cfmRMepAddr = _CfmRMepAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 5),
    _CfmRMepAddr_Type()
)
cfmRMepAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmRMepAddr.setStatus("current")


class _CfmRMepFlag_Type(Integer32):
    """Custom type cfmRMepFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("configured", 1),
          ("macConfigured", 2))
    )


_CfmRMepFlag_Type.__name__ = "Integer32"
_CfmRMepFlag_Object = MibTableColumn
cfmRMepFlag = _CfmRMepFlag_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 6),
    _CfmRMepFlag_Type()
)
cfmRMepFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmRMepFlag.setStatus("current")
_CfmRMepRowStatus_Type = RowStatus
_CfmRMepRowStatus_Object = MibTableColumn
cfmRMepRowStatus = _CfmRMepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 10),
    _CfmRMepRowStatus_Type()
)
cfmRMepRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmRMepRowStatus.setStatus("current")


class _CfmRMepRdi_Type(Integer32):
    """Custom type cfmRMepRdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmRMepRdi_Type.__name__ = "Integer32"
_CfmRMepRdi_Object = MibTableColumn
cfmRMepRdi = _CfmRMepRdi_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 21, 1, 11),
    _CfmRMepRdi_Type()
)
cfmRMepRdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmRMepRdi.setStatus("current")
_CfmMipTable_Object = MibTable
cfmMipTable = _CfmMipTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22)
)
if mibBuilder.loadTexts:
    cfmMipTable.setStatus("current")
_CfmMipEntry_Object = MibTableRow
cfmMipEntry = _CfmMipEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22, 1)
)
cfmMipEntry.setIndexNames(
    (0, "SWITCH", "cfmMipLevel"),
    (0, "SWITCH", "cfmMipVlan"),
    (0, "SWITCH", "cfmMipIfIndex"),
)
if mibBuilder.loadTexts:
    cfmMipEntry.setStatus("current")


class _CfmMipLevel_Type(Integer32):
    """Custom type cfmMipLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMipLevel_Type.__name__ = "Integer32"
_CfmMipLevel_Object = MibTableColumn
cfmMipLevel = _CfmMipLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22, 1, 1),
    _CfmMipLevel_Type()
)
cfmMipLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipLevel.setStatus("current")


class _CfmMipVlan_Type(Integer32):
    """Custom type cfmMipVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmMipVlan_Type.__name__ = "Integer32"
_CfmMipVlan_Object = MibTableColumn
cfmMipVlan = _CfmMipVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22, 1, 2),
    _CfmMipVlan_Type()
)
cfmMipVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipVlan.setStatus("current")
_CfmMipIfIndex_Type = Integer32
_CfmMipIfIndex_Object = MibTableColumn
cfmMipIfIndex = _CfmMipIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22, 1, 3),
    _CfmMipIfIndex_Type()
)
cfmMipIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipIfIndex.setStatus("current")
_CfmMipRowStatus_Type = RowStatus
_CfmMipRowStatus_Object = MibTableColumn
cfmMipRowStatus = _CfmMipRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 22, 1, 7),
    _CfmMipRowStatus_Type()
)
cfmMipRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmMipRowStatus.setStatus("current")
_CfmAisServerTable_Object = MibTable
cfmAisServerTable = _CfmAisServerTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23)
)
if mibBuilder.loadTexts:
    cfmAisServerTable.setStatus("current")
_CfmAisServerEntry_Object = MibTableRow
cfmAisServerEntry = _CfmAisServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23, 1)
)
cfmAisServerEntry.setIndexNames(
    (0, "SWITCH", "cfmAisServerIfIndex"),
)
if mibBuilder.loadTexts:
    cfmAisServerEntry.setStatus("current")
_CfmAisServerIfIndex_Type = Integer32
_CfmAisServerIfIndex_Object = MibTableColumn
cfmAisServerIfIndex = _CfmAisServerIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23, 1, 1),
    _CfmAisServerIfIndex_Type()
)
cfmAisServerIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmAisServerIfIndex.setStatus("current")


class _CfmAisServerLevel_Type(Integer32):
    """Custom type cfmAisServerLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmAisServerLevel_Type.__name__ = "Integer32"
_CfmAisServerLevel_Object = MibTableColumn
cfmAisServerLevel = _CfmAisServerLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23, 1, 2),
    _CfmAisServerLevel_Type()
)
cfmAisServerLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisServerLevel.setStatus("current")


class _CfmAisServerInterval_Type(Integer32):
    """Custom type cfmAisServerInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_CfmAisServerInterval_Type.__name__ = "Integer32"
_CfmAisServerInterval_Object = MibTableColumn
cfmAisServerInterval = _CfmAisServerInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23, 1, 3),
    _CfmAisServerInterval_Type()
)
cfmAisServerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisServerInterval.setStatus("current")
_CfmAisServerRowStatus_Type = RowStatus
_CfmAisServerRowStatus_Object = MibTableColumn
cfmAisServerRowStatus = _CfmAisServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 23, 1, 7),
    _CfmAisServerRowStatus_Type()
)
cfmAisServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmAisServerRowStatus.setStatus("current")
_CfmAisTable_Object = MibTable
cfmAisTable = _CfmAisTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24)
)
if mibBuilder.loadTexts:
    cfmAisTable.setStatus("current")
_CfmAisEntry_Object = MibTableRow
cfmAisEntry = _CfmAisEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1)
)
cfmAisEntry.setIndexNames(
    (0, "SWITCH", "cfmAisLevel"),
    (0, "SWITCH", "cfmAisVlan"),
    (0, "SWITCH", "cfmAisMepId"),
)
if mibBuilder.loadTexts:
    cfmAisEntry.setStatus("current")


class _CfmAisLevel_Type(Integer32):
    """Custom type cfmAisLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmAisLevel_Type.__name__ = "Integer32"
_CfmAisLevel_Object = MibTableColumn
cfmAisLevel = _CfmAisLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 1),
    _CfmAisLevel_Type()
)
cfmAisLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmAisLevel.setStatus("current")


class _CfmAisVlan_Type(Integer32):
    """Custom type cfmAisVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmAisVlan_Type.__name__ = "Integer32"
_CfmAisVlan_Object = MibTableColumn
cfmAisVlan = _CfmAisVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 2),
    _CfmAisVlan_Type()
)
cfmAisVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmAisVlan.setStatus("current")


class _CfmAisMepId_Type(Integer32):
    """Custom type cfmAisMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmAisMepId_Type.__name__ = "Integer32"
_CfmAisMepId_Object = MibTableColumn
cfmAisMepId = _CfmAisMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 3),
    _CfmAisMepId_Type()
)
cfmAisMepId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmAisMepId.setStatus("current")
_CfmAisIfIndex_Type = Integer32
_CfmAisIfIndex_Object = MibTableColumn
cfmAisIfIndex = _CfmAisIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 4),
    _CfmAisIfIndex_Type()
)
cfmAisIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisIfIndex.setStatus("current")


class _CfmAisConfigLoc_Type(Integer32):
    """Custom type cfmAisConfigLoc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisConfigLoc_Type.__name__ = "Integer32"
_CfmAisConfigLoc_Object = MibTableColumn
cfmAisConfigLoc = _CfmAisConfigLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 5),
    _CfmAisConfigLoc_Type()
)
cfmAisConfigLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisConfigLoc.setStatus("current")


class _CfmAisConfigMismerge_Type(Integer32):
    """Custom type cfmAisConfigMismerge based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisConfigMismerge_Type.__name__ = "Integer32"
_CfmAisConfigMismerge_Object = MibTableColumn
cfmAisConfigMismerge = _CfmAisConfigMismerge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 6),
    _CfmAisConfigMismerge_Type()
)
cfmAisConfigMismerge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisConfigMismerge.setStatus("current")


class _CfmAisConfigUnexpectedMep_Type(Integer32):
    """Custom type cfmAisConfigUnexpectedMep based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisConfigUnexpectedMep_Type.__name__ = "Integer32"
_CfmAisConfigUnexpectedMep_Object = MibTableColumn
cfmAisConfigUnexpectedMep = _CfmAisConfigUnexpectedMep_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 7),
    _CfmAisConfigUnexpectedMep_Type()
)
cfmAisConfigUnexpectedMep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisConfigUnexpectedMep.setStatus("current")


class _CfmAisConfigUnexpectedMegLevel_Type(Integer32):
    """Custom type cfmAisConfigUnexpectedMegLevel based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisConfigUnexpectedMegLevel_Type.__name__ = "Integer32"
_CfmAisConfigUnexpectedMegLevel_Object = MibTableColumn
cfmAisConfigUnexpectedMegLevel = _CfmAisConfigUnexpectedMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 8),
    _CfmAisConfigUnexpectedMegLevel_Type()
)
cfmAisConfigUnexpectedMegLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisConfigUnexpectedMegLevel.setStatus("current")


class _CfmAisConfigUnexpectedPeriod_Type(Integer32):
    """Custom type cfmAisConfigUnexpectedPeriod based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisConfigUnexpectedPeriod_Type.__name__ = "Integer32"
_CfmAisConfigUnexpectedPeriod_Object = MibTableColumn
cfmAisConfigUnexpectedPeriod = _CfmAisConfigUnexpectedPeriod_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 9),
    _CfmAisConfigUnexpectedPeriod_Type()
)
cfmAisConfigUnexpectedPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisConfigUnexpectedPeriod.setStatus("current")


class _CfmAisPacketType_Type(Integer32):
    """Custom type cfmAisPacketType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("uniscast", 1),
          ("multicast", 2))
    )


_CfmAisPacketType_Type.__name__ = "Integer32"
_CfmAisPacketType_Object = MibTableColumn
cfmAisPacketType = _CfmAisPacketType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 10),
    _CfmAisPacketType_Type()
)
cfmAisPacketType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisPacketType.setStatus("current")
_CfmAisDestAddr_Type = MacAddress
_CfmAisDestAddr_Object = MibTableColumn
cfmAisDestAddr = _CfmAisDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 11),
    _CfmAisDestAddr_Type()
)
cfmAisDestAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisDestAddr.setStatus("current")


class _CfmAisDestLevel_Type(Integer32):
    """Custom type cfmAisDestLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CfmAisDestLevel_Type.__name__ = "Integer32"
_CfmAisDestLevel_Object = MibTableColumn
cfmAisDestLevel = _CfmAisDestLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 12),
    _CfmAisDestLevel_Type()
)
cfmAisDestLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmAisDestLevel.setStatus("current")
_CfmAisRowStatus_Type = RowStatus
_CfmAisRowStatus_Object = MibTableColumn
cfmAisRowStatus = _CfmAisRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 16),
    _CfmAisRowStatus_Type()
)
cfmAisRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmAisRowStatus.setStatus("current")


class _CfmAisDetectLoc_Type(Integer32):
    """Custom type cfmAisDetectLoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisDetectLoc_Type.__name__ = "Integer32"
_CfmAisDetectLoc_Object = MibTableColumn
cfmAisDetectLoc = _CfmAisDetectLoc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 17),
    _CfmAisDetectLoc_Type()
)
cfmAisDetectLoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisDetectLoc.setStatus("current")


class _CfmAisDetectMismerge_Type(Integer32):
    """Custom type cfmAisDetectMismerge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisDetectMismerge_Type.__name__ = "Integer32"
_CfmAisDetectMismerge_Object = MibTableColumn
cfmAisDetectMismerge = _CfmAisDetectMismerge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 18),
    _CfmAisDetectMismerge_Type()
)
cfmAisDetectMismerge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisDetectMismerge.setStatus("current")


class _CfmAisDetectUnexpectedMep_Type(Integer32):
    """Custom type cfmAisDetectUnexpectedMep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisDetectUnexpectedMep_Type.__name__ = "Integer32"
_CfmAisDetectUnexpectedMep_Object = MibTableColumn
cfmAisDetectUnexpectedMep = _CfmAisDetectUnexpectedMep_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 19),
    _CfmAisDetectUnexpectedMep_Type()
)
cfmAisDetectUnexpectedMep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisDetectUnexpectedMep.setStatus("current")


class _CfmAisDetectUnexpectedMegLevel_Type(Integer32):
    """Custom type cfmAisDetectUnexpectedMegLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisDetectUnexpectedMegLevel_Type.__name__ = "Integer32"
_CfmAisDetectUnexpectedMegLevel_Object = MibTableColumn
cfmAisDetectUnexpectedMegLevel = _CfmAisDetectUnexpectedMegLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 20),
    _CfmAisDetectUnexpectedMegLevel_Type()
)
cfmAisDetectUnexpectedMegLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisDetectUnexpectedMegLevel.setStatus("current")


class _CfmAisDetectUnexpectedPeriod_Type(Integer32):
    """Custom type cfmAisDetectUnexpectedPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmAisDetectUnexpectedPeriod_Type.__name__ = "Integer32"
_CfmAisDetectUnexpectedPeriod_Object = MibTableColumn
cfmAisDetectUnexpectedPeriod = _CfmAisDetectUnexpectedPeriod_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 24, 1, 21),
    _CfmAisDetectUnexpectedPeriod_Type()
)
cfmAisDetectUnexpectedPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmAisDetectUnexpectedPeriod.setStatus("current")
_CfmLoopbackTable_Object = MibTable
cfmLoopbackTable = _CfmLoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25)
)
if mibBuilder.loadTexts:
    cfmLoopbackTable.setStatus("current")
_CfmLoopbackEntry_Object = MibTableRow
cfmLoopbackEntry = _CfmLoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1)
)
cfmLoopbackEntry.setIndexNames(
    (0, "SWITCH", "cfmLoopbackIndex"),
)
if mibBuilder.loadTexts:
    cfmLoopbackEntry.setStatus("current")


class _CfmLoopbackIndex_Type(Integer32):
    """Custom type cfmLoopbackIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_CfmLoopbackIndex_Type.__name__ = "Integer32"
_CfmLoopbackIndex_Object = MibTableColumn
cfmLoopbackIndex = _CfmLoopbackIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 1),
    _CfmLoopbackIndex_Type()
)
cfmLoopbackIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmLoopbackIndex.setStatus("current")


class _CfmLoopbackLevel_Type(Integer32):
    """Custom type cfmLoopbackLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmLoopbackLevel_Type.__name__ = "Integer32"
_CfmLoopbackLevel_Object = MibTableColumn
cfmLoopbackLevel = _CfmLoopbackLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 2),
    _CfmLoopbackLevel_Type()
)
cfmLoopbackLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackLevel.setStatus("current")


class _CfmLoopbackVlan_Type(Integer32):
    """Custom type cfmLoopbackVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmLoopbackVlan_Type.__name__ = "Integer32"
_CfmLoopbackVlan_Object = MibTableColumn
cfmLoopbackVlan = _CfmLoopbackVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 3),
    _CfmLoopbackVlan_Type()
)
cfmLoopbackVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackVlan.setStatus("current")


class _CfmLoopbackMepId_Type(Integer32):
    """Custom type cfmLoopbackMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmLoopbackMepId_Type.__name__ = "Integer32"
_CfmLoopbackMepId_Object = MibTableColumn
cfmLoopbackMepId = _CfmLoopbackMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 4),
    _CfmLoopbackMepId_Type()
)
cfmLoopbackMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackMepId.setStatus("current")


class _CfmLoopbackFrameType_Type(Integer32):
    """Custom type cfmLoopbackFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unicast", 1),
          ("multicast", 2))
    )


_CfmLoopbackFrameType_Type.__name__ = "Integer32"
_CfmLoopbackFrameType_Object = MibTableColumn
cfmLoopbackFrameType = _CfmLoopbackFrameType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 5),
    _CfmLoopbackFrameType_Type()
)
cfmLoopbackFrameType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackFrameType.setStatus("current")


class _CfmLoopbackRMepId_Type(Integer32):
    """Custom type cfmLoopbackRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_CfmLoopbackRMepId_Type.__name__ = "Integer32"
_CfmLoopbackRMepId_Object = MibTableColumn
cfmLoopbackRMepId = _CfmLoopbackRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 6),
    _CfmLoopbackRMepId_Type()
)
cfmLoopbackRMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackRMepId.setStatus("current")
_CfmLoopbackRmac_Type = MacAddress
_CfmLoopbackRmac_Object = MibTableColumn
cfmLoopbackRmac = _CfmLoopbackRmac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 7),
    _CfmLoopbackRmac_Type()
)
cfmLoopbackRmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackRmac.setStatus("current")


class _CfmLoopbackRepeat_Type(Integer32):
    """Custom type cfmLoopbackRepeat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CfmLoopbackRepeat_Type.__name__ = "Integer32"
_CfmLoopbackRepeat_Object = MibTableColumn
cfmLoopbackRepeat = _CfmLoopbackRepeat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 8),
    _CfmLoopbackRepeat_Type()
)
cfmLoopbackRepeat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackRepeat.setStatus("current")


class _CfmLoopbackExp_Type(Integer32):
    """Custom type cfmLoopbackExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmLoopbackExp_Type.__name__ = "Integer32"
_CfmLoopbackExp_Object = MibTableColumn
cfmLoopbackExp = _CfmLoopbackExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 9),
    _CfmLoopbackExp_Type()
)
cfmLoopbackExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackExp.setStatus("current")


class _CfmLoopbackTimeout_Type(Integer32):
    """Custom type cfmLoopbackTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmLoopbackTimeout_Type.__name__ = "Integer32"
_CfmLoopbackTimeout_Object = MibTableColumn
cfmLoopbackTimeout = _CfmLoopbackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 10),
    _CfmLoopbackTimeout_Type()
)
cfmLoopbackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLoopbackTimeout.setStatus("current")
_CfmLoopbackRowStatus_Type = RowStatus
_CfmLoopbackRowStatus_Object = MibTableColumn
cfmLoopbackRowStatus = _CfmLoopbackRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 13),
    _CfmLoopbackRowStatus_Type()
)
cfmLoopbackRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmLoopbackRowStatus.setStatus("current")


class _CfmLoopbackOperState_Type(Integer32):
    """Custom type cfmLoopbackOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_CfmLoopbackOperState_Type.__name__ = "Integer32"
_CfmLoopbackOperState_Object = MibTableColumn
cfmLoopbackOperState = _CfmLoopbackOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 14),
    _CfmLoopbackOperState_Type()
)
cfmLoopbackOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLoopbackOperState.setStatus("current")


class _CfmLoopbackSuccessRate_Type(Integer32):
    """Custom type cfmLoopbackSuccessRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CfmLoopbackSuccessRate_Type.__name__ = "Integer32"
_CfmLoopbackSuccessRate_Object = MibTableColumn
cfmLoopbackSuccessRate = _CfmLoopbackSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 25, 1, 15),
    _CfmLoopbackSuccessRate_Type()
)
cfmLoopbackSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLoopbackSuccessRate.setStatus("current")
_CfmLinktraceTable_Object = MibTable
cfmLinktraceTable = _CfmLinktraceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26)
)
if mibBuilder.loadTexts:
    cfmLinktraceTable.setStatus("current")
_CfmLinktraceEntry_Object = MibTableRow
cfmLinktraceEntry = _CfmLinktraceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1)
)
cfmLinktraceEntry.setIndexNames(
    (0, "SWITCH", "cfmLinktraceIndex"),
)
if mibBuilder.loadTexts:
    cfmLinktraceEntry.setStatus("current")


class _CfmLinktraceIndex_Type(Integer32):
    """Custom type cfmLinktraceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_CfmLinktraceIndex_Type.__name__ = "Integer32"
_CfmLinktraceIndex_Object = MibTableColumn
cfmLinktraceIndex = _CfmLinktraceIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 1),
    _CfmLinktraceIndex_Type()
)
cfmLinktraceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmLinktraceIndex.setStatus("current")


class _CfmLinktraceLevel_Type(Integer32):
    """Custom type cfmLinktraceLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmLinktraceLevel_Type.__name__ = "Integer32"
_CfmLinktraceLevel_Object = MibTableColumn
cfmLinktraceLevel = _CfmLinktraceLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 2),
    _CfmLinktraceLevel_Type()
)
cfmLinktraceLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceLevel.setStatus("current")


class _CfmLinktraceVlan_Type(Integer32):
    """Custom type cfmLinktraceVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmLinktraceVlan_Type.__name__ = "Integer32"
_CfmLinktraceVlan_Object = MibTableColumn
cfmLinktraceVlan = _CfmLinktraceVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 3),
    _CfmLinktraceVlan_Type()
)
cfmLinktraceVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceVlan.setStatus("current")


class _CfmLinktraceMepId_Type(Integer32):
    """Custom type cfmLinktraceMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmLinktraceMepId_Type.__name__ = "Integer32"
_CfmLinktraceMepId_Object = MibTableColumn
cfmLinktraceMepId = _CfmLinktraceMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 4),
    _CfmLinktraceMepId_Type()
)
cfmLinktraceMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceMepId.setStatus("current")


class _CfmLinktraceRMepId_Type(Integer32):
    """Custom type cfmLinktraceRMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8191),
    )


_CfmLinktraceRMepId_Type.__name__ = "Integer32"
_CfmLinktraceRMepId_Object = MibTableColumn
cfmLinktraceRMepId = _CfmLinktraceRMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 5),
    _CfmLinktraceRMepId_Type()
)
cfmLinktraceRMepId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceRMepId.setStatus("current")
_CfmLinktraceRmac_Type = MacAddress
_CfmLinktraceRmac_Object = MibTableColumn
cfmLinktraceRmac = _CfmLinktraceRmac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 6),
    _CfmLinktraceRmac_Type()
)
cfmLinktraceRmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceRmac.setStatus("current")


class _CfmLinktraceTtl_Type(Integer32):
    """Custom type cfmLinktraceTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CfmLinktraceTtl_Type.__name__ = "Integer32"
_CfmLinktraceTtl_Object = MibTableColumn
cfmLinktraceTtl = _CfmLinktraceTtl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 7),
    _CfmLinktraceTtl_Type()
)
cfmLinktraceTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceTtl.setStatus("current")


class _CfmLinktraceExp_Type(Integer32):
    """Custom type cfmLinktraceExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmLinktraceExp_Type.__name__ = "Integer32"
_CfmLinktraceExp_Object = MibTableColumn
cfmLinktraceExp = _CfmLinktraceExp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 8),
    _CfmLinktraceExp_Type()
)
cfmLinktraceExp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceExp.setStatus("current")


class _CfmLinktraceTimeout_Type(Integer32):
    """Custom type cfmLinktraceTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmLinktraceTimeout_Type.__name__ = "Integer32"
_CfmLinktraceTimeout_Object = MibTableColumn
cfmLinktraceTimeout = _CfmLinktraceTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 9),
    _CfmLinktraceTimeout_Type()
)
cfmLinktraceTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceTimeout.setStatus("current")


class _CfmLinktraceEgressIdTLV_Type(Integer32):
    """Custom type cfmLinktraceEgressIdTLV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLinktraceEgressIdTLV_Type.__name__ = "Integer32"
_CfmLinktraceEgressIdTLV_Object = MibTableColumn
cfmLinktraceEgressIdTLV = _CfmLinktraceEgressIdTLV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 10),
    _CfmLinktraceEgressIdTLV_Type()
)
cfmLinktraceEgressIdTLV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceEgressIdTLV.setStatus("current")


class _CfmLinktraceSenderIdTLV_Type(Integer32):
    """Custom type cfmLinktraceSenderIdTLV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLinktraceSenderIdTLV_Type.__name__ = "Integer32"
_CfmLinktraceSenderIdTLV_Object = MibTableColumn
cfmLinktraceSenderIdTLV = _CfmLinktraceSenderIdTLV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 11),
    _CfmLinktraceSenderIdTLV_Type()
)
cfmLinktraceSenderIdTLV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceSenderIdTLV.setStatus("current")


class _CfmLinktraceOrganizationSpecTLV_Type(Integer32):
    """Custom type cfmLinktraceOrganizationSpecTLV based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLinktraceOrganizationSpecTLV_Type.__name__ = "Integer32"
_CfmLinktraceOrganizationSpecTLV_Object = MibTableColumn
cfmLinktraceOrganizationSpecTLV = _CfmLinktraceOrganizationSpecTLV_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 12),
    _CfmLinktraceOrganizationSpecTLV_Type()
)
cfmLinktraceOrganizationSpecTLV.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfmLinktraceOrganizationSpecTLV.setStatus("current")
_CfmLinktraceRowStatus_Type = RowStatus
_CfmLinktraceRowStatus_Object = MibTableColumn
cfmLinktraceRowStatus = _CfmLinktraceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 16),
    _CfmLinktraceRowStatus_Type()
)
cfmLinktraceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    cfmLinktraceRowStatus.setStatus("current")


class _CfmLinktraceOperState_Type(Integer32):
    """Custom type cfmLinktraceOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 1),
          ("in-progress", 2))
    )


_CfmLinktraceOperState_Type.__name__ = "Integer32"
_CfmLinktraceOperState_Object = MibTableColumn
cfmLinktraceOperState = _CfmLinktraceOperState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 26, 1, 17),
    _CfmLinktraceOperState_Type()
)
cfmLinktraceOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLinktraceOperState.setStatus("current")
_CfmMipFdbTable_Object = MibTable
cfmMipFdbTable = _CfmMipFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29)
)
if mibBuilder.loadTexts:
    cfmMipFdbTable.setStatus("current")
_CfmMipFdbEntry_Object = MibTableRow
cfmMipFdbEntry = _CfmMipFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1)
)
cfmMipFdbEntry.setIndexNames(
    (0, "SWITCH", "cfmMipFdbVlan"),
    (0, "SWITCH", "cfmMipFdbMacAddress"),
    (0, "SWITCH", "cfmMipFdbLevel"),
)
if mibBuilder.loadTexts:
    cfmMipFdbEntry.setStatus("current")


class _CfmMipFdbVlan_Type(Integer32):
    """Custom type cfmMipFdbVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_CfmMipFdbVlan_Type.__name__ = "Integer32"
_CfmMipFdbVlan_Object = MibTableColumn
cfmMipFdbVlan = _CfmMipFdbVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1, 1),
    _CfmMipFdbVlan_Type()
)
cfmMipFdbVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipFdbVlan.setStatus("current")
_CfmMipFdbMacAddress_Type = MacAddress
_CfmMipFdbMacAddress_Object = MibTableColumn
cfmMipFdbMacAddress = _CfmMipFdbMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1, 2),
    _CfmMipFdbMacAddress_Type()
)
cfmMipFdbMacAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipFdbMacAddress.setStatus("current")


class _CfmMipFdbLevel_Type(Integer32):
    """Custom type cfmMipFdbLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmMipFdbLevel_Type.__name__ = "Integer32"
_CfmMipFdbLevel_Object = MibTableColumn
cfmMipFdbLevel = _CfmMipFdbLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1, 3),
    _CfmMipFdbLevel_Type()
)
cfmMipFdbLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmMipFdbLevel.setStatus("current")
_CfmMipFdbIfIndex_Type = Integer32
_CfmMipFdbIfIndex_Object = MibTableColumn
cfmMipFdbIfIndex = _CfmMipFdbIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1, 4),
    _CfmMipFdbIfIndex_Type()
)
cfmMipFdbIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmMipFdbIfIndex.setStatus("current")


class _CfmMipFdbAgeTime_Type(Integer32):
    """Custom type cfmMipFdbAgeTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmMipFdbAgeTime_Type.__name__ = "Integer32"
_CfmMipFdbAgeTime_Object = MibTableColumn
cfmMipFdbAgeTime = _CfmMipFdbAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 29, 1, 5),
    _CfmMipFdbAgeTime_Type()
)
cfmMipFdbAgeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmMipFdbAgeTime.setStatus("current")
_CfmErrorTable_Object = MibTable
cfmErrorTable = _CfmErrorTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30)
)
if mibBuilder.loadTexts:
    cfmErrorTable.setStatus("current")
_CfmErrorEntry_Object = MibTableRow
cfmErrorEntry = _CfmErrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1)
)
cfmErrorEntry.setIndexNames(
    (0, "SWITCH", "cfmErrorLevel"),
    (0, "SWITCH", "cfmErrorVlan"),
    (0, "SWITCH", "cfmErrorMepId"),
    (0, "SWITCH", "cfmErrorIndex"),
)
if mibBuilder.loadTexts:
    cfmErrorEntry.setStatus("current")


class _CfmErrorLevel_Type(Integer32):
    """Custom type cfmErrorLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmErrorLevel_Type.__name__ = "Integer32"
_CfmErrorLevel_Object = MibTableColumn
cfmErrorLevel = _CfmErrorLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 1),
    _CfmErrorLevel_Type()
)
cfmErrorLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmErrorLevel.setStatus("current")


class _CfmErrorVlan_Type(Integer32):
    """Custom type cfmErrorVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmErrorVlan_Type.__name__ = "Integer32"
_CfmErrorVlan_Object = MibTableColumn
cfmErrorVlan = _CfmErrorVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 2),
    _CfmErrorVlan_Type()
)
cfmErrorVlan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmErrorVlan.setStatus("current")


class _CfmErrorMepId_Type(Integer32):
    """Custom type cfmErrorMepId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_CfmErrorMepId_Type.__name__ = "Integer32"
_CfmErrorMepId_Object = MibTableColumn
cfmErrorMepId = _CfmErrorMepId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 3),
    _CfmErrorMepId_Type()
)
cfmErrorMepId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmErrorMepId.setStatus("current")


class _CfmErrorIndex_Type(Integer32):
    """Custom type cfmErrorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_CfmErrorIndex_Type.__name__ = "Integer32"
_CfmErrorIndex_Object = MibTableColumn
cfmErrorIndex = _CfmErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 4),
    _CfmErrorIndex_Type()
)
cfmErrorIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmErrorIndex.setStatus("current")
_CfmErrorRmac_Type = MacAddress
_CfmErrorRmac_Object = MibTableColumn
cfmErrorRmac = _CfmErrorRmac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 5),
    _CfmErrorRmac_Type()
)
cfmErrorRmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmErrorRmac.setStatus("current")


class _CfmErrorReason_Type(Integer32):
    """Custom type cfmErrorReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22)
        )
    )
    namedValues = NamedValues(
        *(("rdi", 2),
          ("rdi-clear", 3),
          ("loc", 4),
          ("loc-clear", 5),
          ("unexpected-mep", 6),
          ("unexpected-mep-clear", 7),
          ("unexpected-period", 8),
          ("unexpected-period-clear", 9),
          ("mismerge", 10),
          ("mismerge-clear", 11),
          ("unexpected-meg-level", 12),
          ("unexpected-meg-level-clear", 13),
          ("recieve-ais", 14),
          ("no-receive-ais-in-35-period", 15),
          ("lck-receive-cause-ais", 16),
          ("lck-receive-cause-ais-clear", 17),
          ("enter-lck-condition", 18),
          ("exit-lck-condiftion", 19),
          ("enter-csf-condition", 20),
          ("exit-csf-condition", 21),
          ("rmep-first-packet-receive", 22))
    )


_CfmErrorReason_Type.__name__ = "Integer32"
_CfmErrorReason_Object = MibTableColumn
cfmErrorReason = _CfmErrorReason_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 6),
    _CfmErrorReason_Type()
)
cfmErrorReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmErrorReason.setStatus("current")


class _CfmErrorReportTime_Type(OctetString):
    """Custom type cfmErrorReportTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CfmErrorReportTime_Type.__name__ = "OctetString"
_CfmErrorReportTime_Object = MibTableColumn
cfmErrorReportTime = _CfmErrorReportTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 30, 1, 7),
    _CfmErrorReportTime_Type()
)
cfmErrorReportTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmErrorReportTime.setStatus("current")
_CfmLTCacheTable_Object = MibTable
cfmLTCacheTable = _CfmLTCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31)
)
if mibBuilder.loadTexts:
    cfmLTCacheTable.setStatus("current")
_CfmLTCacheEntry_Object = MibTableRow
cfmLTCacheEntry = _CfmLTCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1)
)
cfmLTCacheEntry.setIndexNames(
    (0, "SWITCH", "cfmLTCacheIndex"),
)
if mibBuilder.loadTexts:
    cfmLTCacheEntry.setStatus("current")


class _CfmLTCacheIndex_Type(Integer32):
    """Custom type cfmLTCacheIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmLTCacheIndex_Type.__name__ = "Integer32"
_CfmLTCacheIndex_Object = MibTableColumn
cfmLTCacheIndex = _CfmLTCacheIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 1),
    _CfmLTCacheIndex_Type()
)
cfmLTCacheIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmLTCacheIndex.setStatus("current")


class _CfmLTCacheLevel_Type(Integer32):
    """Custom type cfmLTCacheLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CfmLTCacheLevel_Type.__name__ = "Integer32"
_CfmLTCacheLevel_Object = MibTableColumn
cfmLTCacheLevel = _CfmLTCacheLevel_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 2),
    _CfmLTCacheLevel_Type()
)
cfmLTCacheLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheLevel.setStatus("current")


class _CfmLTCacheVlan_Type(Integer32):
    """Custom type cfmLTCacheVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_CfmLTCacheVlan_Type.__name__ = "Integer32"
_CfmLTCacheVlan_Object = MibTableColumn
cfmLTCacheVlan = _CfmLTCacheVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 3),
    _CfmLTCacheVlan_Type()
)
cfmLTCacheVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheVlan.setStatus("current")
_CfmLTCacheTargetMacAddress_Type = MacAddress
_CfmLTCacheTargetMacAddress_Object = MibTableColumn
cfmLTCacheTargetMacAddress = _CfmLTCacheTargetMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 4),
    _CfmLTCacheTargetMacAddress_Type()
)
cfmLTCacheTargetMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheTargetMacAddress.setStatus("current")


class _CfmLTCacheStartTime_Type(OctetString):
    """Custom type cfmLTCacheStartTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CfmLTCacheStartTime_Type.__name__ = "OctetString"
_CfmLTCacheStartTime_Object = MibTableColumn
cfmLTCacheStartTime = _CfmLTCacheStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 5),
    _CfmLTCacheStartTime_Type()
)
cfmLTCacheStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheStartTime.setStatus("current")


class _CfmLTCacheAge_Type(Integer32):
    """Custom type cfmLTCacheAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CfmLTCacheAge_Type.__name__ = "Integer32"
_CfmLTCacheAge_Object = MibTableColumn
cfmLTCacheAge = _CfmLTCacheAge_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 6),
    _CfmLTCacheAge_Type()
)
cfmLTCacheAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheAge.setStatus("current")


class _CfmLTCacheHops_Type(Integer32):
    """Custom type cfmLTCacheHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CfmLTCacheHops_Type.__name__ = "Integer32"
_CfmLTCacheHops_Object = MibTableColumn
cfmLTCacheHops = _CfmLTCacheHops_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 7),
    _CfmLTCacheHops_Type()
)
cfmLTCacheHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheHops.setStatus("current")


class _CfmLTCacheTTL_Type(Integer32):
    """Custom type cfmLTCacheTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CfmLTCacheTTL_Type.__name__ = "Integer32"
_CfmLTCacheTTL_Object = MibTableColumn
cfmLTCacheTTL = _CfmLTCacheTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 8),
    _CfmLTCacheTTL_Type()
)
cfmLTCacheTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheTTL.setStatus("current")


class _CfmLTCacheForwarded_Type(Integer32):
    """Custom type cfmLTCacheForwarded based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLTCacheForwarded_Type.__name__ = "Integer32"
_CfmLTCacheForwarded_Object = MibTableColumn
cfmLTCacheForwarded = _CfmLTCacheForwarded_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 9),
    _CfmLTCacheForwarded_Type()
)
cfmLTCacheForwarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheForwarded.setStatus("current")


class _CfmLTCacheTerminalMEP_Type(Integer32):
    """Custom type cfmLTCacheTerminalMEP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLTCacheTerminalMEP_Type.__name__ = "Integer32"
_CfmLTCacheTerminalMEP_Object = MibTableColumn
cfmLTCacheTerminalMEP = _CfmLTCacheTerminalMEP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 10),
    _CfmLTCacheTerminalMEP_Type()
)
cfmLTCacheTerminalMEP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheTerminalMEP.setStatus("current")


class _CfmLTCacheRelayAction_Type(Integer32):
    """Custom type cfmLTCacheRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("relayNone", 0),
          ("relayHit", 1),
          ("relayFdb", 2),
          ("relayMipFdb", 3))
    )


_CfmLTCacheRelayAction_Type.__name__ = "Integer32"
_CfmLTCacheRelayAction_Object = MibTableColumn
cfmLTCacheRelayAction = _CfmLTCacheRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 11),
    _CfmLTCacheRelayAction_Type()
)
cfmLTCacheRelayAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheRelayAction.setStatus("current")


class _CfmLTCacheIngressAction_Type(Integer32):
    """Custom type cfmLTCacheIngressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ingNone", 0),
          ("ingOK", 1),
          ("ingDown", 2),
          ("ingBlocked", 3),
          ("ingNotMemVlan", 4))
    )


_CfmLTCacheIngressAction_Type.__name__ = "Integer32"
_CfmLTCacheIngressAction_Object = MibTableColumn
cfmLTCacheIngressAction = _CfmLTCacheIngressAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 12),
    _CfmLTCacheIngressAction_Type()
)
cfmLTCacheIngressAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheIngressAction.setStatus("current")
_CfmLTCacheIngressMacAddress_Type = MacAddress
_CfmLTCacheIngressMacAddress_Object = MibTableColumn
cfmLTCacheIngressMacAddress = _CfmLTCacheIngressMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 13),
    _CfmLTCacheIngressMacAddress_Type()
)
cfmLTCacheIngressMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheIngressMacAddress.setStatus("current")


class _CfmLTCacheIngressIfName_Type(OctetString):
    """Custom type cfmLTCacheIngressIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_CfmLTCacheIngressIfName_Type.__name__ = "OctetString"
_CfmLTCacheIngressIfName_Object = MibTableColumn
cfmLTCacheIngressIfName = _CfmLTCacheIngressIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 14),
    _CfmLTCacheIngressIfName_Type()
)
cfmLTCacheIngressIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheIngressIfName.setStatus("current")


class _CfmLTCacheEgressAction_Type(Integer32):
    """Custom type cfmLTCacheEgressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("egrNone", 0),
          ("egrOK", 1),
          ("egrDown", 2),
          ("egrBlocked", 3),
          ("egrNotMemVlan", 4))
    )


_CfmLTCacheEgressAction_Type.__name__ = "Integer32"
_CfmLTCacheEgressAction_Object = MibTableColumn
cfmLTCacheEgressAction = _CfmLTCacheEgressAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 15),
    _CfmLTCacheEgressAction_Type()
)
cfmLTCacheEgressAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheEgressAction.setStatus("current")
_CfmLTCacheEgressMacAddress_Type = MacAddress
_CfmLTCacheEgressMacAddress_Object = MibTableColumn
cfmLTCacheEgressMacAddress = _CfmLTCacheEgressMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 16),
    _CfmLTCacheEgressMacAddress_Type()
)
cfmLTCacheEgressMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheEgressMacAddress.setStatus("current")


class _CfmLTCacheEgressIfName_Type(OctetString):
    """Custom type cfmLTCacheEgressIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_CfmLTCacheEgressIfName_Type.__name__ = "OctetString"
_CfmLTCacheEgressIfName_Object = MibTableColumn
cfmLTCacheEgressIfName = _CfmLTCacheEgressIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 17),
    _CfmLTCacheEgressIfName_Type()
)
cfmLTCacheEgressIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheEgressIfName.setStatus("current")
_CfmLTCacheLastEgressID_Type = MacAddress
_CfmLTCacheLastEgressID_Object = MibTableColumn
cfmLTCacheLastEgressID = _CfmLTCacheLastEgressID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 18),
    _CfmLTCacheLastEgressID_Type()
)
cfmLTCacheLastEgressID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheLastEgressID.setStatus("current")
_CfmLTCacheNextEgressID_Type = MacAddress
_CfmLTCacheNextEgressID_Object = MibTableColumn
cfmLTCacheNextEgressID = _CfmLTCacheNextEgressID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 31, 1, 19),
    _CfmLTCacheNextEgressID_Type()
)
cfmLTCacheNextEgressID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTCacheNextEgressID.setStatus("current")
_CfmLTResultTable_Object = MibTable
cfmLTResultTable = _CfmLTResultTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32)
)
if mibBuilder.loadTexts:
    cfmLTResultTable.setStatus("current")
_CfmLTResultEntry_Object = MibTableRow
cfmLTResultEntry = _CfmLTResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1)
)
cfmLTResultEntry.setIndexNames(
    (0, "SWITCH", "cfmLTResultHops"),
)
if mibBuilder.loadTexts:
    cfmLTResultEntry.setStatus("current")


class _CfmLTResultHops_Type(Integer32):
    """Custom type cfmLTResultHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CfmLTResultHops_Type.__name__ = "Integer32"
_CfmLTResultHops_Object = MibTableColumn
cfmLTResultHops = _CfmLTResultHops_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 1),
    _CfmLTResultHops_Type()
)
cfmLTResultHops.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cfmLTResultHops.setStatus("current")


class _CfmLTResultTTL_Type(Integer32):
    """Custom type cfmLTResultTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CfmLTResultTTL_Type.__name__ = "Integer32"
_CfmLTResultTTL_Object = MibTableColumn
cfmLTResultTTL = _CfmLTResultTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 2),
    _CfmLTResultTTL_Type()
)
cfmLTResultTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultTTL.setStatus("current")


class _CfmLTResultForwarded_Type(Integer32):
    """Custom type cfmLTResultForwarded based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLTResultForwarded_Type.__name__ = "Integer32"
_CfmLTResultForwarded_Object = MibTableColumn
cfmLTResultForwarded = _CfmLTResultForwarded_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 3),
    _CfmLTResultForwarded_Type()
)
cfmLTResultForwarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultForwarded.setStatus("current")


class _CfmLTResultTerminalMEP_Type(Integer32):
    """Custom type cfmLTResultTerminalMEP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_CfmLTResultTerminalMEP_Type.__name__ = "Integer32"
_CfmLTResultTerminalMEP_Object = MibTableColumn
cfmLTResultTerminalMEP = _CfmLTResultTerminalMEP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 4),
    _CfmLTResultTerminalMEP_Type()
)
cfmLTResultTerminalMEP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultTerminalMEP.setStatus("current")


class _CfmLTResultRelayAction_Type(Integer32):
    """Custom type cfmLTResultRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("relayHit", 1),
          ("relayFdb", 2),
          ("relayMipFdb", 3))
    )


_CfmLTResultRelayAction_Type.__name__ = "Integer32"
_CfmLTResultRelayAction_Object = MibTableColumn
cfmLTResultRelayAction = _CfmLTResultRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 5),
    _CfmLTResultRelayAction_Type()
)
cfmLTResultRelayAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultRelayAction.setStatus("current")


class _CfmLTResultIngressAction_Type(Integer32):
    """Custom type cfmLTResultIngressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ingOK", 1),
          ("ingBlocked", 2))
    )


_CfmLTResultIngressAction_Type.__name__ = "Integer32"
_CfmLTResultIngressAction_Object = MibTableColumn
cfmLTResultIngressAction = _CfmLTResultIngressAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 6),
    _CfmLTResultIngressAction_Type()
)
cfmLTResultIngressAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultIngressAction.setStatus("current")
_CfmLTResultIngressMacAddress_Type = MacAddress
_CfmLTResultIngressMacAddress_Object = MibTableColumn
cfmLTResultIngressMacAddress = _CfmLTResultIngressMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 7),
    _CfmLTResultIngressMacAddress_Type()
)
cfmLTResultIngressMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultIngressMacAddress.setStatus("current")


class _CfmLTResultIngressIfName_Type(OctetString):
    """Custom type cfmLTResultIngressIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_CfmLTResultIngressIfName_Type.__name__ = "OctetString"
_CfmLTResultIngressIfName_Object = MibTableColumn
cfmLTResultIngressIfName = _CfmLTResultIngressIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 8),
    _CfmLTResultIngressIfName_Type()
)
cfmLTResultIngressIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultIngressIfName.setStatus("current")


class _CfmLTResultEgressAction_Type(Integer32):
    """Custom type cfmLTResultEgressAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("egrOK", 1),
          ("egrDown", 2),
          ("egrBlocked", 3),
          ("egrNotMemVlan", 4))
    )


_CfmLTResultEgressAction_Type.__name__ = "Integer32"
_CfmLTResultEgressAction_Object = MibTableColumn
cfmLTResultEgressAction = _CfmLTResultEgressAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 9),
    _CfmLTResultEgressAction_Type()
)
cfmLTResultEgressAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultEgressAction.setStatus("current")
_CfmLTResultEgressMacAddress_Type = MacAddress
_CfmLTResultEgressMacAddress_Object = MibTableColumn
cfmLTResultEgressMacAddress = _CfmLTResultEgressMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 10),
    _CfmLTResultEgressMacAddress_Type()
)
cfmLTResultEgressMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultEgressMacAddress.setStatus("current")


class _CfmLTResultEgressIfName_Type(OctetString):
    """Custom type cfmLTResultEgressIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_CfmLTResultEgressIfName_Type.__name__ = "OctetString"
_CfmLTResultEgressIfName_Object = MibTableColumn
cfmLTResultEgressIfName = _CfmLTResultEgressIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 11),
    _CfmLTResultEgressIfName_Type()
)
cfmLTResultEgressIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultEgressIfName.setStatus("current")
_CfmLTResultLastEgressID_Type = MacAddress
_CfmLTResultLastEgressID_Object = MibTableColumn
cfmLTResultLastEgressID = _CfmLTResultLastEgressID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 12),
    _CfmLTResultLastEgressID_Type()
)
cfmLTResultLastEgressID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultLastEgressID.setStatus("current")
_CfmLTResultNextEgressID_Type = MacAddress
_CfmLTResultNextEgressID_Object = MibTableColumn
cfmLTResultNextEgressID = _CfmLTResultNextEgressID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 83, 32, 1, 13),
    _CfmLTResultNextEgressID_Type()
)
cfmLTResultNextEgressID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cfmLTResultNextEgressID.setStatus("current")
_CfmTrap_ObjectIdentity = ObjectIdentity
cfmTrap = _CfmTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 83, 1000)
)
_Efm_ObjectIdentity = ObjectIdentity
efm = _Efm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 84)
)
_EfmOAMIfTable_Object = MibTable
efmOAMIfTable = _EfmOAMIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1)
)
if mibBuilder.loadTexts:
    efmOAMIfTable.setStatus("current")
_EfmOAMIfEntry_Object = MibTableRow
efmOAMIfEntry = _EfmOAMIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1)
)
efmOAMIfEntry.setIndexNames(
    (0, "SWITCH", "efmOAMIfIndex"),
)
if mibBuilder.loadTexts:
    efmOAMIfEntry.setStatus("current")


class _EfmOAMIfIndex_Type(Integer32):
    """Custom type efmOAMIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_EfmOAMIfIndex_Type.__name__ = "Integer32"
_EfmOAMIfIndex_Object = MibTableColumn
efmOAMIfIndex = _EfmOAMIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 1),
    _EfmOAMIfIndex_Type()
)
efmOAMIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    efmOAMIfIndex.setStatus("current")


class _EfmOAMEnable_Type(Integer32):
    """Custom type efmOAMEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMEnable_Type.__name__ = "Integer32"
_EfmOAMEnable_Object = MibTableColumn
efmOAMEnable = _EfmOAMEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 2),
    _EfmOAMEnable_Type()
)
efmOAMEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMEnable.setStatus("current")


class _EfmOAMMode_Type(Integer32):
    """Custom type efmOAMMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_EfmOAMMode_Type.__name__ = "Integer32"
_EfmOAMMode_Object = MibTableColumn
efmOAMMode = _EfmOAMMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 3),
    _EfmOAMMode_Type()
)
efmOAMMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMMode.setStatus("current")


class _EfmOAMMinRate_Type(Integer32):
    """Custom type efmOAMMinRate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_EfmOAMMinRate_Type.__name__ = "Integer32"
_EfmOAMMinRate_Object = MibTableColumn
efmOAMMinRate = _EfmOAMMinRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 4),
    _EfmOAMMinRate_Type()
)
efmOAMMinRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMMinRate.setStatus("current")


class _EfmOAMMaxRate_Type(Integer32):
    """Custom type efmOAMMaxRate based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_EfmOAMMaxRate_Type.__name__ = "Integer32"
_EfmOAMMaxRate_Object = MibTableColumn
efmOAMMaxRate = _EfmOAMMaxRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 5),
    _EfmOAMMaxRate_Type()
)
efmOAMMaxRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMMaxRate.setStatus("current")


class _EfmOAMLinkMonitorEn_Type(Integer32):
    """Custom type efmOAMLinkMonitorEn based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMLinkMonitorEn_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorEn_Object = MibTableColumn
efmOAMLinkMonitorEn = _EfmOAMLinkMonitorEn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 6),
    _EfmOAMLinkMonitorEn_Type()
)
efmOAMLinkMonitorEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorEn.setStatus("current")


class _EfmOAMLinkMonitorSupported_Type(Integer32):
    """Custom type efmOAMLinkMonitorSupported based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMLinkMonitorSupported_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorSupported_Object = MibTableColumn
efmOAMLinkMonitorSupported = _EfmOAMLinkMonitorSupported_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 7),
    _EfmOAMLinkMonitorSupported_Type()
)
efmOAMLinkMonitorSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorSupported.setStatus("current")


class _EfmOAMLinkMonitorFrameHigh_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameHigh based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_EfmOAMLinkMonitorFrameHigh_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameHigh_Object = MibTableColumn
efmOAMLinkMonitorFrameHigh = _EfmOAMLinkMonitorFrameHigh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 8),
    _EfmOAMLinkMonitorFrameHigh_Type()
)
efmOAMLinkMonitorFrameHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameHigh.setStatus("current")


class _EfmOAMLinkMonitorFrameLow_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameLow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_EfmOAMLinkMonitorFrameLow_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameLow_Object = MibTableColumn
efmOAMLinkMonitorFrameLow = _EfmOAMLinkMonitorFrameLow_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 9),
    _EfmOAMLinkMonitorFrameLow_Type()
)
efmOAMLinkMonitorFrameLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameLow.setStatus("current")


class _EfmOAMLinkMonitorFrameWin_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameWin based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_EfmOAMLinkMonitorFrameWin_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameWin_Object = MibTableColumn
efmOAMLinkMonitorFrameWin = _EfmOAMLinkMonitorFrameWin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 10),
    _EfmOAMLinkMonitorFrameWin_Type()
)
efmOAMLinkMonitorFrameWin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameWin.setStatus("current")


class _EfmOAMLinkMonitorFrameSecHigh_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameSecHigh based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
    )


_EfmOAMLinkMonitorFrameSecHigh_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameSecHigh_Object = MibTableColumn
efmOAMLinkMonitorFrameSecHigh = _EfmOAMLinkMonitorFrameSecHigh_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 11),
    _EfmOAMLinkMonitorFrameSecHigh_Type()
)
efmOAMLinkMonitorFrameSecHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameSecHigh.setStatus("current")


class _EfmOAMLinkMonitorFrameSecLow_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameSecLow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 900),
    )


_EfmOAMLinkMonitorFrameSecLow_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameSecLow_Object = MibTableColumn
efmOAMLinkMonitorFrameSecLow = _EfmOAMLinkMonitorFrameSecLow_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 12),
    _EfmOAMLinkMonitorFrameSecLow_Type()
)
efmOAMLinkMonitorFrameSecLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameSecLow.setStatus("current")


class _EfmOAMLinkMonitorFrameSecWin_Type(Integer32):
    """Custom type efmOAMLinkMonitorFrameSecWin based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 9000),
    )


_EfmOAMLinkMonitorFrameSecWin_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorFrameSecWin_Object = MibTableColumn
efmOAMLinkMonitorFrameSecWin = _EfmOAMLinkMonitorFrameSecWin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 13),
    _EfmOAMLinkMonitorFrameSecWin_Type()
)
efmOAMLinkMonitorFrameSecWin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorFrameSecWin.setStatus("current")


class _EfmOAMLinkMonitorHighThreAction_Type(Integer32):
    """Custom type efmOAMLinkMonitorHighThreAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("error-disable-interface", 1),
          ("none", 2))
    )


_EfmOAMLinkMonitorHighThreAction_Type.__name__ = "Integer32"
_EfmOAMLinkMonitorHighThreAction_Object = MibTableColumn
efmOAMLinkMonitorHighThreAction = _EfmOAMLinkMonitorHighThreAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 14),
    _EfmOAMLinkMonitorHighThreAction_Type()
)
efmOAMLinkMonitorHighThreAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMLinkMonitorHighThreAction.setStatus("current")


class _EfmOAMRemoteLoopbackSupported_Type(Integer32):
    """Custom type efmOAMRemoteLoopbackSupported based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMRemoteLoopbackSupported_Type.__name__ = "Integer32"
_EfmOAMRemoteLoopbackSupported_Object = MibTableColumn
efmOAMRemoteLoopbackSupported = _EfmOAMRemoteLoopbackSupported_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 15),
    _EfmOAMRemoteLoopbackSupported_Type()
)
efmOAMRemoteLoopbackSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteLoopbackSupported.setStatus("current")


class _EfmOAMRemoteLoopbackTimeout_Type(Integer32):
    """Custom type efmOAMRemoteLoopbackTimeout based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_EfmOAMRemoteLoopbackTimeout_Type.__name__ = "Integer32"
_EfmOAMRemoteLoopbackTimeout_Object = MibTableColumn
efmOAMRemoteLoopbackTimeout = _EfmOAMRemoteLoopbackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 16),
    _EfmOAMRemoteLoopbackTimeout_Type()
)
efmOAMRemoteLoopbackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteLoopbackTimeout.setStatus("current")


class _EfmOAMRemoteLoopbackState_Type(Integer32):
    """Custom type efmOAMRemoteLoopbackState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMRemoteLoopbackState_Type.__name__ = "Integer32"
_EfmOAMRemoteLoopbackState_Object = MibTableColumn
efmOAMRemoteLoopbackState = _EfmOAMRemoteLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 17),
    _EfmOAMRemoteLoopbackState_Type()
)
efmOAMRemoteLoopbackState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteLoopbackState.setStatus("current")


class _EfmOAMTimeout_Type(Integer32):
    """Custom type efmOAMTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 30),
    )


_EfmOAMTimeout_Type.__name__ = "Integer32"
_EfmOAMTimeout_Object = MibTableColumn
efmOAMTimeout = _EfmOAMTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 18),
    _EfmOAMTimeout_Type()
)
efmOAMTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMTimeout.setStatus("current")


class _EfmOAMRemoteFailureCriticalEvent_Type(Integer32):
    """Custom type efmOAMRemoteFailureCriticalEvent based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMRemoteFailureCriticalEvent_Type.__name__ = "Integer32"
_EfmOAMRemoteFailureCriticalEvent_Object = MibTableColumn
efmOAMRemoteFailureCriticalEvent = _EfmOAMRemoteFailureCriticalEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 19),
    _EfmOAMRemoteFailureCriticalEvent_Type()
)
efmOAMRemoteFailureCriticalEvent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteFailureCriticalEvent.setStatus("current")


class _EfmOAMRemoteFailureDyingGasp_Type(Integer32):
    """Custom type efmOAMRemoteFailureDyingGasp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMRemoteFailureDyingGasp_Type.__name__ = "Integer32"
_EfmOAMRemoteFailureDyingGasp_Object = MibTableColumn
efmOAMRemoteFailureDyingGasp = _EfmOAMRemoteFailureDyingGasp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 20),
    _EfmOAMRemoteFailureDyingGasp_Type()
)
efmOAMRemoteFailureDyingGasp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteFailureDyingGasp.setStatus("current")


class _EfmOAMRemoteFailureLinkFailure_Type(Integer32):
    """Custom type efmOAMRemoteFailureLinkFailure based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_EfmOAMRemoteFailureLinkFailure_Type.__name__ = "Integer32"
_EfmOAMRemoteFailureLinkFailure_Object = MibTableColumn
efmOAMRemoteFailureLinkFailure = _EfmOAMRemoteFailureLinkFailure_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 1, 1, 21),
    _EfmOAMRemoteFailureLinkFailure_Type()
)
efmOAMRemoteFailureLinkFailure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    efmOAMRemoteFailureLinkFailure.setStatus("current")
_EfmOAMDiscoveryTable_Object = MibTable
efmOAMDiscoveryTable = _EfmOAMDiscoveryTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3)
)
if mibBuilder.loadTexts:
    efmOAMDiscoveryTable.setStatus("current")
_EfmOAMDiscoveryEntry_Object = MibTableRow
efmOAMDiscoveryEntry = _EfmOAMDiscoveryEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1)
)
efmOAMDiscoveryEntry.setIndexNames(
    (0, "SWITCH", "efmOAMDiscoveryIfIndex"),
)
if mibBuilder.loadTexts:
    efmOAMDiscoveryEntry.setStatus("current")


class _EfmOAMDiscoveryIfIndex_Type(Integer32):
    """Custom type efmOAMDiscoveryIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_EfmOAMDiscoveryIfIndex_Type.__name__ = "Integer32"
_EfmOAMDiscoveryIfIndex_Object = MibTableColumn
efmOAMDiscoveryIfIndex = _EfmOAMDiscoveryIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 1),
    _EfmOAMDiscoveryIfIndex_Type()
)
efmOAMDiscoveryIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    efmOAMDiscoveryIfIndex.setStatus("current")


class _EfmOAMDiscoveryLocalMode_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_EfmOAMDiscoveryLocalMode_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalMode_Object = MibTableColumn
efmOAMDiscoveryLocalMode = _EfmOAMDiscoveryLocalMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 2),
    _EfmOAMDiscoveryLocalMode_Type()
)
efmOAMDiscoveryLocalMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalMode.setStatus("current")


class _EfmOAMDiscoveryLocalUnidirection_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalUnidirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryLocalUnidirection_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalUnidirection_Object = MibTableColumn
efmOAMDiscoveryLocalUnidirection = _EfmOAMDiscoveryLocalUnidirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 3),
    _EfmOAMDiscoveryLocalUnidirection_Type()
)
efmOAMDiscoveryLocalUnidirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalUnidirection.setStatus("current")


class _EfmOAMDiscoveryLocalLinkMonitor_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalLinkMonitor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryLocalLinkMonitor_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalLinkMonitor_Object = MibTableColumn
efmOAMDiscoveryLocalLinkMonitor = _EfmOAMDiscoveryLocalLinkMonitor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 4),
    _EfmOAMDiscoveryLocalLinkMonitor_Type()
)
efmOAMDiscoveryLocalLinkMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalLinkMonitor.setStatus("current")


class _EfmOAMDiscoveryLocalRemoteLoopback_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalRemoteLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryLocalRemoteLoopback_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalRemoteLoopback_Object = MibTableColumn
efmOAMDiscoveryLocalRemoteLoopback = _EfmOAMDiscoveryLocalRemoteLoopback_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 5),
    _EfmOAMDiscoveryLocalRemoteLoopback_Type()
)
efmOAMDiscoveryLocalRemoteLoopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalRemoteLoopback.setStatus("current")


class _EfmOAMDiscoveryLocalMibRetrieve_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalMibRetrieve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryLocalMibRetrieve_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalMibRetrieve_Object = MibTableColumn
efmOAMDiscoveryLocalMibRetrieve = _EfmOAMDiscoveryLocalMibRetrieve_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 6),
    _EfmOAMDiscoveryLocalMibRetrieve_Type()
)
efmOAMDiscoveryLocalMibRetrieve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalMibRetrieve.setStatus("current")
_EfmOAMDiscoveryLocalMtuSize_Type = Integer32
_EfmOAMDiscoveryLocalMtuSize_Object = MibTableColumn
efmOAMDiscoveryLocalMtuSize = _EfmOAMDiscoveryLocalMtuSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 7),
    _EfmOAMDiscoveryLocalMtuSize_Type()
)
efmOAMDiscoveryLocalMtuSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalMtuSize.setStatus("current")


class _EfmOAMDiscoveryLocalPortStatus_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("fault", 1),
          ("active-send-local", 2),
          ("passive-wait", 3),
          ("send-local-remote", 4),
          ("send-local-remote-ok", 5),
          ("send-any", 6))
    )


_EfmOAMDiscoveryLocalPortStatus_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalPortStatus_Object = MibTableColumn
efmOAMDiscoveryLocalPortStatus = _EfmOAMDiscoveryLocalPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 8),
    _EfmOAMDiscoveryLocalPortStatus_Type()
)
efmOAMDiscoveryLocalPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalPortStatus.setStatus("current")


class _EfmOAMDiscoveryLocalLoopbackStatus_Type(Integer32):
    """Custom type efmOAMDiscoveryLocalLoopbackStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("local-loopback", 1),
          ("remote-loopback", 2),
          ("no-loopback", 3))
    )


_EfmOAMDiscoveryLocalLoopbackStatus_Type.__name__ = "Integer32"
_EfmOAMDiscoveryLocalLoopbackStatus_Object = MibTableColumn
efmOAMDiscoveryLocalLoopbackStatus = _EfmOAMDiscoveryLocalLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 9),
    _EfmOAMDiscoveryLocalLoopbackStatus_Type()
)
efmOAMDiscoveryLocalLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalLoopbackStatus.setStatus("current")
_EfmOAMDiscoveryLocalPduRevision_Type = Integer32
_EfmOAMDiscoveryLocalPduRevision_Object = MibTableColumn
efmOAMDiscoveryLocalPduRevision = _EfmOAMDiscoveryLocalPduRevision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 10),
    _EfmOAMDiscoveryLocalPduRevision_Type()
)
efmOAMDiscoveryLocalPduRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryLocalPduRevision.setStatus("current")
_EfmOAMDiscoveryRemoteMacAddress_Type = MacAddress
_EfmOAMDiscoveryRemoteMacAddress_Object = MibTableColumn
efmOAMDiscoveryRemoteMacAddress = _EfmOAMDiscoveryRemoteMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 11),
    _EfmOAMDiscoveryRemoteMacAddress_Type()
)
efmOAMDiscoveryRemoteMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteMacAddress.setStatus("current")
_EfmOAMDiscoveryRemotePduRevision_Type = Integer32
_EfmOAMDiscoveryRemotePduRevision_Object = MibTableColumn
efmOAMDiscoveryRemotePduRevision = _EfmOAMDiscoveryRemotePduRevision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 12),
    _EfmOAMDiscoveryRemotePduRevision_Type()
)
efmOAMDiscoveryRemotePduRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemotePduRevision.setStatus("current")


class _EfmOAMDiscoveryRemoteVendor_Type(OctetString):
    """Custom type efmOAMDiscoveryRemoteVendor based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 3),
    )
    fixed_length = 3


_EfmOAMDiscoveryRemoteVendor_Type.__name__ = "OctetString"
_EfmOAMDiscoveryRemoteVendor_Object = MibTableColumn
efmOAMDiscoveryRemoteVendor = _EfmOAMDiscoveryRemoteVendor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 13),
    _EfmOAMDiscoveryRemoteVendor_Type()
)
efmOAMDiscoveryRemoteVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteVendor.setStatus("current")


class _EfmOAMDiscoveryRemoteMode_Type(Integer32):
    """Custom type efmOAMDiscoveryRemoteMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_EfmOAMDiscoveryRemoteMode_Type.__name__ = "Integer32"
_EfmOAMDiscoveryRemoteMode_Object = MibTableColumn
efmOAMDiscoveryRemoteMode = _EfmOAMDiscoveryRemoteMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 14),
    _EfmOAMDiscoveryRemoteMode_Type()
)
efmOAMDiscoveryRemoteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteMode.setStatus("current")


class _EfmOAMDiscoveryRemoteUnidirection_Type(Integer32):
    """Custom type efmOAMDiscoveryRemoteUnidirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryRemoteUnidirection_Type.__name__ = "Integer32"
_EfmOAMDiscoveryRemoteUnidirection_Object = MibTableColumn
efmOAMDiscoveryRemoteUnidirection = _EfmOAMDiscoveryRemoteUnidirection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 15),
    _EfmOAMDiscoveryRemoteUnidirection_Type()
)
efmOAMDiscoveryRemoteUnidirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteUnidirection.setStatus("current")


class _EfmOAMDiscoveryRemoteLinkMonitor_Type(Integer32):
    """Custom type efmOAMDiscoveryRemoteLinkMonitor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryRemoteLinkMonitor_Type.__name__ = "Integer32"
_EfmOAMDiscoveryRemoteLinkMonitor_Object = MibTableColumn
efmOAMDiscoveryRemoteLinkMonitor = _EfmOAMDiscoveryRemoteLinkMonitor_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 16),
    _EfmOAMDiscoveryRemoteLinkMonitor_Type()
)
efmOAMDiscoveryRemoteLinkMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteLinkMonitor.setStatus("current")


class _EfmOAMDiscoveryRemoteRemoteLoopback_Type(Integer32):
    """Custom type efmOAMDiscoveryRemoteRemoteLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryRemoteRemoteLoopback_Type.__name__ = "Integer32"
_EfmOAMDiscoveryRemoteRemoteLoopback_Object = MibTableColumn
efmOAMDiscoveryRemoteRemoteLoopback = _EfmOAMDiscoveryRemoteRemoteLoopback_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 17),
    _EfmOAMDiscoveryRemoteRemoteLoopback_Type()
)
efmOAMDiscoveryRemoteRemoteLoopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteRemoteLoopback.setStatus("current")


class _EfmOAMDiscoveryRemoteMibRetrieve_Type(Integer32):
    """Custom type efmOAMDiscoveryRemoteMibRetrieve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("supported", 1),
          ("un-supported", 2))
    )


_EfmOAMDiscoveryRemoteMibRetrieve_Type.__name__ = "Integer32"
_EfmOAMDiscoveryRemoteMibRetrieve_Object = MibTableColumn
efmOAMDiscoveryRemoteMibRetrieve = _EfmOAMDiscoveryRemoteMibRetrieve_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 18),
    _EfmOAMDiscoveryRemoteMibRetrieve_Type()
)
efmOAMDiscoveryRemoteMibRetrieve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteMibRetrieve.setStatus("current")
_EfmOAMDiscoveryRemoteMtuSize_Type = Integer32
_EfmOAMDiscoveryRemoteMtuSize_Object = MibTableColumn
efmOAMDiscoveryRemoteMtuSize = _EfmOAMDiscoveryRemoteMtuSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 3, 1, 19),
    _EfmOAMDiscoveryRemoteMtuSize_Type()
)
efmOAMDiscoveryRemoteMtuSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMDiscoveryRemoteMtuSize.setStatus("current")
_EfmOAMStateTable_Object = MibTable
efmOAMStateTable = _EfmOAMStateTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4)
)
if mibBuilder.loadTexts:
    efmOAMStateTable.setStatus("current")
_EfmOAMStateEntry_Object = MibTableRow
efmOAMStateEntry = _EfmOAMStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1)
)
efmOAMStateEntry.setIndexNames(
    (0, "SWITCH", "efmOAMStateIfIndex"),
)
if mibBuilder.loadTexts:
    efmOAMStateEntry.setStatus("current")


class _EfmOAMStateIfIndex_Type(Integer32):
    """Custom type efmOAMStateIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_EfmOAMStateIfIndex_Type.__name__ = "Integer32"
_EfmOAMStateIfIndex_Object = MibTableColumn
efmOAMStateIfIndex = _EfmOAMStateIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 1),
    _EfmOAMStateIfIndex_Type()
)
efmOAMStateIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    efmOAMStateIfIndex.setStatus("current")


class _EfmOAMStateLocalLinkStatus_Type(Integer32):
    """Custom type efmOAMStateLocalLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ok", 1),
          ("fault", 2))
    )


_EfmOAMStateLocalLinkStatus_Type.__name__ = "Integer32"
_EfmOAMStateLocalLinkStatus_Object = MibTableColumn
efmOAMStateLocalLinkStatus = _EfmOAMStateLocalLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 2),
    _EfmOAMStateLocalLinkStatus_Type()
)
efmOAMStateLocalLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalLinkStatus.setStatus("current")


class _EfmOAMStateLocalPduStatus_Type(Integer32):
    """Custom type efmOAMStateLocalPduStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lfInfo", 1),
          ("rxInfo", 2),
          ("info", 3),
          ("any", 4))
    )


_EfmOAMStateLocalPduStatus_Type.__name__ = "Integer32"
_EfmOAMStateLocalPduStatus_Object = MibTableColumn
efmOAMStateLocalPduStatus = _EfmOAMStateLocalPduStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 3),
    _EfmOAMStateLocalPduStatus_Type()
)
efmOAMStateLocalPduStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalPduStatus.setStatus("current")


class _EfmOAMStateLocalSatisfied_Type(Integer32):
    """Custom type efmOAMStateLocalSatisfied based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_EfmOAMStateLocalSatisfied_Type.__name__ = "Integer32"
_EfmOAMStateLocalSatisfied_Object = MibTableColumn
efmOAMStateLocalSatisfied = _EfmOAMStateLocalSatisfied_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 4),
    _EfmOAMStateLocalSatisfied_Type()
)
efmOAMStateLocalSatisfied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalSatisfied.setStatus("current")


class _EfmOAMStateLocalStable_Type(Integer32):
    """Custom type efmOAMStateLocalStable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_EfmOAMStateLocalStable_Type.__name__ = "Integer32"
_EfmOAMStateLocalStable_Object = MibTableColumn
efmOAMStateLocalStable = _EfmOAMStateLocalStable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 5),
    _EfmOAMStateLocalStable_Type()
)
efmOAMStateLocalStable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalStable.setStatus("current")


class _EfmOAMStateRemoteStateValid_Type(Integer32):
    """Custom type efmOAMStateRemoteStateValid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_EfmOAMStateRemoteStateValid_Type.__name__ = "Integer32"
_EfmOAMStateRemoteStateValid_Object = MibTableColumn
efmOAMStateRemoteStateValid = _EfmOAMStateRemoteStateValid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 6),
    _EfmOAMStateRemoteStateValid_Type()
)
efmOAMStateRemoteStateValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateRemoteStateValid.setStatus("current")


class _EfmOAMStateRemoteStable_Type(Integer32):
    """Custom type efmOAMStateRemoteStable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_EfmOAMStateRemoteStable_Type.__name__ = "Integer32"
_EfmOAMStateRemoteStable_Object = MibTableColumn
efmOAMStateRemoteStable = _EfmOAMStateRemoteStable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 7),
    _EfmOAMStateRemoteStable_Type()
)
efmOAMStateRemoteStable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateRemoteStable.setStatus("current")


class _EfmOAMStateLocalPaserState_Type(Integer32):
    """Custom type efmOAMStateLocalPaserState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("loopback", 2),
          ("discard", 3),
          ("invalid", 4))
    )


_EfmOAMStateLocalPaserState_Type.__name__ = "Integer32"
_EfmOAMStateLocalPaserState_Object = MibTableColumn
efmOAMStateLocalPaserState = _EfmOAMStateLocalPaserState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 8),
    _EfmOAMStateLocalPaserState_Type()
)
efmOAMStateLocalPaserState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalPaserState.setStatus("current")


class _EfmOAMStateLocalMultiplexerState_Type(Integer32):
    """Custom type efmOAMStateLocalMultiplexerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("discard", 2),
          ("invalid", 3))
    )


_EfmOAMStateLocalMultiplexerState_Type.__name__ = "Integer32"
_EfmOAMStateLocalMultiplexerState_Object = MibTableColumn
efmOAMStateLocalMultiplexerState = _EfmOAMStateLocalMultiplexerState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 9),
    _EfmOAMStateLocalMultiplexerState_Type()
)
efmOAMStateLocalMultiplexerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateLocalMultiplexerState.setStatus("current")


class _EfmOAMStateRemotePaserState_Type(Integer32):
    """Custom type efmOAMStateRemotePaserState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("loopback", 2),
          ("discard", 3),
          ("invalid", 4))
    )


_EfmOAMStateRemotePaserState_Type.__name__ = "Integer32"
_EfmOAMStateRemotePaserState_Object = MibTableColumn
efmOAMStateRemotePaserState = _EfmOAMStateRemotePaserState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 10),
    _EfmOAMStateRemotePaserState_Type()
)
efmOAMStateRemotePaserState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateRemotePaserState.setStatus("current")


class _EfmOAMStateRemoteMultiplexerState_Type(Integer32):
    """Custom type efmOAMStateRemoteMultiplexerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("forward", 1),
          ("discard", 2),
          ("invalid", 3))
    )


_EfmOAMStateRemoteMultiplexerState_Type.__name__ = "Integer32"
_EfmOAMStateRemoteMultiplexerState_Object = MibTableColumn
efmOAMStateRemoteMultiplexerState = _EfmOAMStateRemoteMultiplexerState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 4, 1, 11),
    _EfmOAMStateRemoteMultiplexerState_Type()
)
efmOAMStateRemoteMultiplexerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMStateRemoteMultiplexerState.setStatus("current")
_EfmOAMStatisticTable_Object = MibTable
efmOAMStatisticTable = _EfmOAMStatisticTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5)
)
if mibBuilder.loadTexts:
    efmOAMStatisticTable.setStatus("current")
_EfmOAMStatisticEntry_Object = MibTableRow
efmOAMStatisticEntry = _EfmOAMStatisticEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1)
)
efmOAMStatisticEntry.setIndexNames(
    (0, "SWITCH", "efmOAMStatisticIfIndex"),
)
if mibBuilder.loadTexts:
    efmOAMStatisticEntry.setStatus("current")


class _EfmOAMStatisticIfIndex_Type(Integer32):
    """Custom type efmOAMStatisticIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_EfmOAMStatisticIfIndex_Type.__name__ = "Integer32"
_EfmOAMStatisticIfIndex_Object = MibTableColumn
efmOAMStatisticIfIndex = _EfmOAMStatisticIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 1),
    _EfmOAMStatisticIfIndex_Type()
)
efmOAMStatisticIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    efmOAMStatisticIfIndex.setStatus("current")
_EfmOAMPduInfomationTx_Type = Integer32
_EfmOAMPduInfomationTx_Object = MibTableColumn
efmOAMPduInfomationTx = _EfmOAMPduInfomationTx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 2),
    _EfmOAMPduInfomationTx_Type()
)
efmOAMPduInfomationTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduInfomationTx.setStatus("current")
_EfmOAMPduInfomationRx_Type = Integer32
_EfmOAMPduInfomationRx_Object = MibTableColumn
efmOAMPduInfomationRx = _EfmOAMPduInfomationRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 3),
    _EfmOAMPduInfomationRx_Type()
)
efmOAMPduInfomationRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduInfomationRx.setStatus("current")
_EfmOAMPduEvtNotificationTx_Type = Integer32
_EfmOAMPduEvtNotificationTx_Object = MibTableColumn
efmOAMPduEvtNotificationTx = _EfmOAMPduEvtNotificationTx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 4),
    _EfmOAMPduEvtNotificationTx_Type()
)
efmOAMPduEvtNotificationTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduEvtNotificationTx.setStatus("current")
_EfmOAMPduEvtNotificationRx_Type = Integer32
_EfmOAMPduEvtNotificationRx_Object = MibTableColumn
efmOAMPduEvtNotificationRx = _EfmOAMPduEvtNotificationRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 5),
    _EfmOAMPduEvtNotificationRx_Type()
)
efmOAMPduEvtNotificationRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduEvtNotificationRx.setStatus("current")
_EfmOAMPduLoopbackControlTx_Type = Integer32
_EfmOAMPduLoopbackControlTx_Object = MibTableColumn
efmOAMPduLoopbackControlTx = _EfmOAMPduLoopbackControlTx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 6),
    _EfmOAMPduLoopbackControlTx_Type()
)
efmOAMPduLoopbackControlTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduLoopbackControlTx.setStatus("current")
_EfmOAMPduLoopbackControlRx_Type = Integer32
_EfmOAMPduLoopbackControlRx_Object = MibTableColumn
efmOAMPduLoopbackControlRx = _EfmOAMPduLoopbackControlRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 7),
    _EfmOAMPduLoopbackControlRx_Type()
)
efmOAMPduLoopbackControlRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduLoopbackControlRx.setStatus("current")
_EfmOAMPduUnsupportedRx_Type = Integer32
_EfmOAMPduUnsupportedRx_Object = MibTableColumn
efmOAMPduUnsupportedRx = _EfmOAMPduUnsupportedRx_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 8),
    _EfmOAMPduUnsupportedRx_Type()
)
efmOAMPduUnsupportedRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMPduUnsupportedRx.setStatus("current")
_EfmOAMLocalLinkFaultRecords_Type = Integer32
_EfmOAMLocalLinkFaultRecords_Object = MibTableColumn
efmOAMLocalLinkFaultRecords = _EfmOAMLocalLinkFaultRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 9),
    _EfmOAMLocalLinkFaultRecords_Type()
)
efmOAMLocalLinkFaultRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLocalLinkFaultRecords.setStatus("current")
_EfmOAMLocalDyingGaspRecords_Type = Integer32
_EfmOAMLocalDyingGaspRecords_Object = MibTableColumn
efmOAMLocalDyingGaspRecords = _EfmOAMLocalDyingGaspRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 10),
    _EfmOAMLocalDyingGaspRecords_Type()
)
efmOAMLocalDyingGaspRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLocalDyingGaspRecords.setStatus("current")
_EfmOAMLocalCriticalEvtRecords_Type = Integer32
_EfmOAMLocalCriticalEvtRecords_Object = MibTableColumn
efmOAMLocalCriticalEvtRecords = _EfmOAMLocalCriticalEvtRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 11),
    _EfmOAMLocalCriticalEvtRecords_Type()
)
efmOAMLocalCriticalEvtRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLocalCriticalEvtRecords.setStatus("current")
_EfmOAMRemoteLinkFaultRecords_Type = Integer32
_EfmOAMRemoteLinkFaultRecords_Object = MibTableColumn
efmOAMRemoteLinkFaultRecords = _EfmOAMRemoteLinkFaultRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 12),
    _EfmOAMRemoteLinkFaultRecords_Type()
)
efmOAMRemoteLinkFaultRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteLinkFaultRecords.setStatus("current")
_EfmOAMRemoteDyingGaspRecords_Type = Integer32
_EfmOAMRemoteDyingGaspRecords_Object = MibTableColumn
efmOAMRemoteDyingGaspRecords = _EfmOAMRemoteDyingGaspRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 13),
    _EfmOAMRemoteDyingGaspRecords_Type()
)
efmOAMRemoteDyingGaspRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteDyingGaspRecords.setStatus("current")
_EfmOAMRemoteCriticalEvtRecords_Type = Integer32
_EfmOAMRemoteCriticalEvtRecords_Object = MibTableColumn
efmOAMRemoteCriticalEvtRecords = _EfmOAMRemoteCriticalEvtRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 14),
    _EfmOAMRemoteCriticalEvtRecords_Type()
)
efmOAMRemoteCriticalEvtRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteCriticalEvtRecords.setStatus("current")
_EfmOAMLocalErrorFrameRecords_Type = Integer32
_EfmOAMLocalErrorFrameRecords_Object = MibTableColumn
efmOAMLocalErrorFrameRecords = _EfmOAMLocalErrorFrameRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 15),
    _EfmOAMLocalErrorFrameRecords_Type()
)
efmOAMLocalErrorFrameRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLocalErrorFrameRecords.setStatus("current")
_EfmOAMLocalErrorFrameSecondRecords_Type = Integer32
_EfmOAMLocalErrorFrameSecondRecords_Object = MibTableColumn
efmOAMLocalErrorFrameSecondRecords = _EfmOAMLocalErrorFrameSecondRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 16),
    _EfmOAMLocalErrorFrameSecondRecords_Type()
)
efmOAMLocalErrorFrameSecondRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLocalErrorFrameSecondRecords.setStatus("current")
_EfmOAMRemoteErrorSymbolPeriodRecords_Type = Integer32
_EfmOAMRemoteErrorSymbolPeriodRecords_Object = MibTableColumn
efmOAMRemoteErrorSymbolPeriodRecords = _EfmOAMRemoteErrorSymbolPeriodRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 17),
    _EfmOAMRemoteErrorSymbolPeriodRecords_Type()
)
efmOAMRemoteErrorSymbolPeriodRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteErrorSymbolPeriodRecords.setStatus("current")
_EfmOAMRemoteErrorFrameRecords_Type = Integer32
_EfmOAMRemoteErrorFrameRecords_Object = MibTableColumn
efmOAMRemoteErrorFrameRecords = _EfmOAMRemoteErrorFrameRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 18),
    _EfmOAMRemoteErrorFrameRecords_Type()
)
efmOAMRemoteErrorFrameRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteErrorFrameRecords.setStatus("current")
_EfmOAMRemoteErrorFramePeriodRecords_Type = Integer32
_EfmOAMRemoteErrorFramePeriodRecords_Object = MibTableColumn
efmOAMRemoteErrorFramePeriodRecords = _EfmOAMRemoteErrorFramePeriodRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 19),
    _EfmOAMRemoteErrorFramePeriodRecords_Type()
)
efmOAMRemoteErrorFramePeriodRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteErrorFramePeriodRecords.setStatus("current")
_EfmOAMRemoteErrorFrameSecondRecords_Type = Integer32
_EfmOAMRemoteErrorFrameSecondRecords_Object = MibTableColumn
efmOAMRemoteErrorFrameSecondRecords = _EfmOAMRemoteErrorFrameSecondRecords_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 20),
    _EfmOAMRemoteErrorFrameSecondRecords_Type()
)
efmOAMRemoteErrorFrameSecondRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMRemoteErrorFrameSecondRecords.setStatus("current")
_EfmOAMLoopbackTestPktsSent_Type = Integer32
_EfmOAMLoopbackTestPktsSent_Object = MibTableColumn
efmOAMLoopbackTestPktsSent = _EfmOAMLoopbackTestPktsSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 21),
    _EfmOAMLoopbackTestPktsSent_Type()
)
efmOAMLoopbackTestPktsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLoopbackTestPktsSent.setStatus("current")
_EfmOAMLoopbackTestPktsRecv_Type = Integer32
_EfmOAMLoopbackTestPktsRecv_Object = MibTableColumn
efmOAMLoopbackTestPktsRecv = _EfmOAMLoopbackTestPktsRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 22),
    _EfmOAMLoopbackTestPktsRecv_Type()
)
efmOAMLoopbackTestPktsRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLoopbackTestPktsRecv.setStatus("current")
_EfmOAMLoopbackTestPercentValidRate_Type = Integer32
_EfmOAMLoopbackTestPercentValidRate_Object = MibTableColumn
efmOAMLoopbackTestPercentValidRate = _EfmOAMLoopbackTestPercentValidRate_Object(
    (1, 3, 6, 1, 4, 1, 27975, 84, 5, 1, 23),
    _EfmOAMLoopbackTestPercentValidRate_Type()
)
efmOAMLoopbackTestPercentValidRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    efmOAMLoopbackTestPercentValidRate.setStatus("current")
_Ptp_ObjectIdentity = ObjectIdentity
ptp = _Ptp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 85)
)
_PtpGlobalInfo_ObjectIdentity = ObjectIdentity
ptpGlobalInfo = _PtpGlobalInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1)
)
_PtpPortNum_Type = Integer32
_PtpPortNum_Object = MibScalar
ptpPortNum = _PtpPortNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 1),
    _PtpPortNum_Type()
)
ptpPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpPortNum.setStatus("current")


class _PtpUtcOffset_Type(Integer32):
    """Custom type ptpUtcOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpUtcOffset_Type.__name__ = "Integer32"
_PtpUtcOffset_Object = MibScalar
ptpUtcOffset = _PtpUtcOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 2),
    _PtpUtcOffset_Type()
)
ptpUtcOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpUtcOffset.setStatus("current")
_PtpLocalClockIdentity_Type = OctetString
_PtpLocalClockIdentity_Object = MibScalar
ptpLocalClockIdentity = _PtpLocalClockIdentity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 3),
    _PtpLocalClockIdentity_Type()
)
ptpLocalClockIdentity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpLocalClockIdentity.setStatus("current")
_PtpBMCRecMem_Type = OctetString
_PtpBMCRecMem_Object = MibScalar
ptpBMCRecMem = _PtpBMCRecMem_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 4),
    _PtpBMCRecMem_Type()
)
ptpBMCRecMem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCRecMem.setStatus("current")
_PtpBMCParentClockId_Type = OctetString
_PtpBMCParentClockId_Object = MibScalar
ptpBMCParentClockId = _PtpBMCParentClockId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 5),
    _PtpBMCParentClockId_Type()
)
ptpBMCParentClockId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCParentClockId.setStatus("current")


class _PtpBMCParentPortNum_Type(Integer32):
    """Custom type ptpBMCParentPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCParentPortNum_Type.__name__ = "Integer32"
_PtpBMCParentPortNum_Object = MibScalar
ptpBMCParentPortNum = _PtpBMCParentPortNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 6),
    _PtpBMCParentPortNum_Type()
)
ptpBMCParentPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCParentPortNum.setStatus("current")
_PtpBMCMeanPathDelay_Type = Counter64
_PtpBMCMeanPathDelay_Object = MibScalar
ptpBMCMeanPathDelay = _PtpBMCMeanPathDelay_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 7),
    _PtpBMCMeanPathDelay_Type()
)
ptpBMCMeanPathDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCMeanPathDelay.setStatus("current")
_PtpBMCOffsetFromMaster_Type = Counter64
_PtpBMCOffsetFromMaster_Object = MibScalar
ptpBMCOffsetFromMaster = _PtpBMCOffsetFromMaster_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 8),
    _PtpBMCOffsetFromMaster_Type()
)
ptpBMCOffsetFromMaster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCOffsetFromMaster.setStatus("current")


class _PtpBMCStepRemoved_Type(Integer32):
    """Custom type ptpBMCStepRemoved based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCStepRemoved_Type.__name__ = "Integer32"
_PtpBMCStepRemoved_Object = MibScalar
ptpBMCStepRemoved = _PtpBMCStepRemoved_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 9),
    _PtpBMCStepRemoved_Type()
)
ptpBMCStepRemoved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCStepRemoved.setStatus("current")
_PtpBMCGMClockId_Type = OctetString
_PtpBMCGMClockId_Object = MibScalar
ptpBMCGMClockId = _PtpBMCGMClockId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 10),
    _PtpBMCGMClockId_Type()
)
ptpBMCGMClockId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMClockId.setStatus("current")


class _PtpBMCGMPriority1_Type(Integer32):
    """Custom type ptpBMCGMPriority1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCGMPriority1_Type.__name__ = "Integer32"
_PtpBMCGMPriority1_Object = MibScalar
ptpBMCGMPriority1 = _PtpBMCGMPriority1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 11),
    _PtpBMCGMPriority1_Type()
)
ptpBMCGMPriority1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMPriority1.setStatus("current")


class _PtpBMCGMPriority2_Type(Integer32):
    """Custom type ptpBMCGMPriority2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCGMPriority2_Type.__name__ = "Integer32"
_PtpBMCGMPriority2_Object = MibScalar
ptpBMCGMPriority2 = _PtpBMCGMPriority2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 12),
    _PtpBMCGMPriority2_Type()
)
ptpBMCGMPriority2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMPriority2.setStatus("current")


class _PtpBMCGMClockAccuracy_Type(Integer32):
    """Custom type ptpBMCGMClockAccuracy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCGMClockAccuracy_Type.__name__ = "Integer32"
_PtpBMCGMClockAccuracy_Object = MibScalar
ptpBMCGMClockAccuracy = _PtpBMCGMClockAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 13),
    _PtpBMCGMClockAccuracy_Type()
)
ptpBMCGMClockAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMClockAccuracy.setStatus("current")


class _PtpBMCGMClockClass_Type(Integer32):
    """Custom type ptpBMCGMClockClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCGMClockClass_Type.__name__ = "Integer32"
_PtpBMCGMClockClass_Object = MibScalar
ptpBMCGMClockClass = _PtpBMCGMClockClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 14),
    _PtpBMCGMClockClass_Type()
)
ptpBMCGMClockClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMClockClass.setStatus("current")
_PtpBMCGMTimeSource_Type = OctetString
_PtpBMCGMTimeSource_Object = MibScalar
ptpBMCGMTimeSource = _PtpBMCGMTimeSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 15),
    _PtpBMCGMTimeSource_Type()
)
ptpBMCGMTimeSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMTimeSource.setStatus("current")


class _PtpBMCGMUtcOffset_Type(Integer32):
    """Custom type ptpBMCGMUtcOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpBMCGMUtcOffset_Type.__name__ = "Integer32"
_PtpBMCGMUtcOffset_Object = MibScalar
ptpBMCGMUtcOffset = _PtpBMCGMUtcOffset_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 16),
    _PtpBMCGMUtcOffset_Type()
)
ptpBMCGMUtcOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMUtcOffset.setStatus("current")
_PtpBMCGMUTCOffsetValid_Type = TruthValue
_PtpBMCGMUTCOffsetValid_Object = MibScalar
ptpBMCGMUTCOffsetValid = _PtpBMCGMUTCOffsetValid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 17),
    _PtpBMCGMUTCOffsetValid_Type()
)
ptpBMCGMUTCOffsetValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMUTCOffsetValid.setStatus("current")
_PtpBMCGMTimeScale_Type = OctetString
_PtpBMCGMTimeScale_Object = MibScalar
ptpBMCGMTimeScale = _PtpBMCGMTimeScale_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 18),
    _PtpBMCGMTimeScale_Type()
)
ptpBMCGMTimeScale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMTimeScale.setStatus("current")


class _PtpBMCGMTimeTraceable_Type(Integer32):
    """Custom type ptpBMCGMTimeTraceable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_PtpBMCGMTimeTraceable_Type.__name__ = "Integer32"
_PtpBMCGMTimeTraceable_Object = MibScalar
ptpBMCGMTimeTraceable = _PtpBMCGMTimeTraceable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 19),
    _PtpBMCGMTimeTraceable_Type()
)
ptpBMCGMTimeTraceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMTimeTraceable.setStatus("current")


class _PtpBMCGMLeap59_Type(Integer32):
    """Custom type ptpBMCGMLeap59 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_PtpBMCGMLeap59_Type.__name__ = "Integer32"
_PtpBMCGMLeap59_Object = MibScalar
ptpBMCGMLeap59 = _PtpBMCGMLeap59_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 20),
    _PtpBMCGMLeap59_Type()
)
ptpBMCGMLeap59.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMLeap59.setStatus("current")


class _PtpBMCGMLeap61_Type(Integer32):
    """Custom type ptpBMCGMLeap61 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_PtpBMCGMLeap61_Type.__name__ = "Integer32"
_PtpBMCGMLeap61_Object = MibScalar
ptpBMCGMLeap61 = _PtpBMCGMLeap61_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 21),
    _PtpBMCGMLeap61_Type()
)
ptpBMCGMLeap61.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMLeap61.setStatus("current")


class _PtpBMCGMFrequencyTraceable_Type(Integer32):
    """Custom type ptpBMCGMFrequencyTraceable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("true", 1),
          ("false", 2))
    )


_PtpBMCGMFrequencyTraceable_Type.__name__ = "Integer32"
_PtpBMCGMFrequencyTraceable_Object = MibScalar
ptpBMCGMFrequencyTraceable = _PtpBMCGMFrequencyTraceable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 22),
    _PtpBMCGMFrequencyTraceable_Type()
)
ptpBMCGMFrequencyTraceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpBMCGMFrequencyTraceable.setStatus("current")
_PtpClearStatistics_Type = Integer32
_PtpClearStatistics_Object = MibScalar
ptpClearStatistics = _PtpClearStatistics_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 23),
    _PtpClearStatistics_Type()
)
ptpClearStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpClearStatistics.setStatus("current")


class _PtpDeviceType_Type(Integer32):
    """Custom type ptpDeviceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("oc", 0),
          ("bc", 1),
          ("e2etc", 2),
          ("p2ptc", 3))
    )


_PtpDeviceType_Type.__name__ = "Integer32"
_PtpDeviceType_Object = MibScalar
ptpDeviceType = _PtpDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 24),
    _PtpDeviceType_Type()
)
ptpDeviceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpDeviceType.setStatus("current")


class _PtpGlobalEnable_Type(Integer32):
    """Custom type ptpGlobalEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpGlobalEnable_Type.__name__ = "Integer32"
_PtpGlobalEnable_Object = MibScalar
ptpGlobalEnable = _PtpGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 25),
    _PtpGlobalEnable_Type()
)
ptpGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpGlobalEnable.setStatus("current")


class _PtpDomain_Type(Integer32):
    """Custom type ptpDomain based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpDomain_Type.__name__ = "Integer32"
_PtpDomain_Object = MibScalar
ptpDomain = _PtpDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 26),
    _PtpDomain_Type()
)
ptpDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpDomain.setStatus("current")


class _PtpTcPrimaryDomain_Type(Integer32):
    """Custom type ptpTcPrimaryDomain based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpTcPrimaryDomain_Type.__name__ = "Integer32"
_PtpTcPrimaryDomain_Object = MibScalar
ptpTcPrimaryDomain = _PtpTcPrimaryDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 27),
    _PtpTcPrimaryDomain_Type()
)
ptpTcPrimaryDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpTcPrimaryDomain.setStatus("current")


class _PtpSlaveOnly_Type(Integer32):
    """Custom type ptpSlaveOnly based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpSlaveOnly_Type.__name__ = "Integer32"
_PtpSlaveOnly_Object = MibScalar
ptpSlaveOnly = _PtpSlaveOnly_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 28),
    _PtpSlaveOnly_Type()
)
ptpSlaveOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpSlaveOnly.setStatus("current")


class _PtpPriority1_Type(Integer32):
    """Custom type ptpPriority1 based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpPriority1_Type.__name__ = "Integer32"
_PtpPriority1_Object = MibScalar
ptpPriority1 = _PtpPriority1_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 29),
    _PtpPriority1_Type()
)
ptpPriority1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpPriority1.setStatus("current")


class _PtpPriority2_Type(Integer32):
    """Custom type ptpPriority2 based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PtpPriority2_Type.__name__ = "Integer32"
_PtpPriority2_Object = MibScalar
ptpPriority2 = _PtpPriority2_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 30),
    _PtpPriority2_Type()
)
ptpPriority2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpPriority2.setStatus("current")


class _PtpClockAccuracy_Type(Integer32):
    """Custom type ptpClockAccuracy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 19),
    )


_PtpClockAccuracy_Type.__name__ = "Integer32"
_PtpClockAccuracy_Object = MibScalar
ptpClockAccuracy = _PtpClockAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 31),
    _PtpClockAccuracy_Type()
)
ptpClockAccuracy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpClockAccuracy.setStatus("current")


class _PtpClockClass_Type(Integer32):
    """Custom type ptpClockClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(6,
              7,
              13,
              14,
              52,
              58,
              187,
              193,
              248)
        )
    )
    namedValues = NamedValues(
        *(("class6", 6),
          ("class7", 7),
          ("class13", 13),
          ("class14", 14),
          ("class52", 52),
          ("class58", 58),
          ("class187", 187),
          ("class193", 193),
          ("class248", 248))
    )


_PtpClockClass_Type.__name__ = "Integer32"
_PtpClockClass_Object = MibScalar
ptpClockClass = _PtpClockClass_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 32),
    _PtpClockClass_Type()
)
ptpClockClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpClockClass.setStatus("current")


class _PtpLeap59_Type(Integer32):
    """Custom type ptpLeap59 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpLeap59_Type.__name__ = "Integer32"
_PtpLeap59_Object = MibScalar
ptpLeap59 = _PtpLeap59_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 33),
    _PtpLeap59_Type()
)
ptpLeap59.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpLeap59.setStatus("current")


class _PtpLeap61_Type(Integer32):
    """Custom type ptpLeap61 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpLeap61_Type.__name__ = "Integer32"
_PtpLeap61_Object = MibScalar
ptpLeap61 = _PtpLeap61_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 34),
    _PtpLeap61_Type()
)
ptpLeap61.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpLeap61.setStatus("current")


class _PtpTimeSource_Type(Integer32):
    """Custom type ptpTimeSource based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("atomic-clock", 1),
          ("gps", 2),
          ("internal-oscillator", 3),
          ("ptp", 4),
          ("ntp", 5),
          ("hand-set", 6),
          ("other", 7),
          ("terrestrial-radio", 8))
    )


_PtpTimeSource_Type.__name__ = "Integer32"
_PtpTimeSource_Object = MibScalar
ptpTimeSource = _PtpTimeSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 35),
    _PtpTimeSource_Type()
)
ptpTimeSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpTimeSource.setStatus("current")


class _PtpClockTodOutput_Type(Integer32):
    """Custom type ptpClockTodOutput based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpClockTodOutput_Type.__name__ = "Integer32"
_PtpClockTodOutput_Object = MibScalar
ptpClockTodOutput = _PtpClockTodOutput_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 36),
    _PtpClockTodOutput_Type()
)
ptpClockTodOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpClockTodOutput.setStatus("current")


class _PtpClockSyncInterfaceOutput_Type(Integer32):
    """Custom type ptpClockSyncInterfaceOutput based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpClockSyncInterfaceOutput_Type.__name__ = "Integer32"
_PtpClockSyncInterfaceOutput_Object = MibScalar
ptpClockSyncInterfaceOutput = _PtpClockSyncInterfaceOutput_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 37),
    _PtpClockSyncInterfaceOutput_Type()
)
ptpClockSyncInterfaceOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpClockSyncInterfaceOutput.setStatus("current")


class _PtpTodPulseDelayCorrection_Type(Integer32):
    """Custom type ptpTodPulseDelayCorrection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_PtpTodPulseDelayCorrection_Type.__name__ = "Integer32"
_PtpTodPulseDelayCorrection_Object = MibScalar
ptpTodPulseDelayCorrection = _PtpTodPulseDelayCorrection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 1, 38),
    _PtpTodPulseDelayCorrection_Type()
)
ptpTodPulseDelayCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpTodPulseDelayCorrection.setStatus("current")
_PtpIfConfigureTable_Object = MibTable
ptpIfConfigureTable = _PtpIfConfigureTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2)
)
if mibBuilder.loadTexts:
    ptpIfConfigureTable.setStatus("current")
_PtpIfConfigureEntry_Object = MibTableRow
ptpIfConfigureEntry = _PtpIfConfigureEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1)
)
ptpIfConfigureEntry.setIndexNames(
    (0, "SWITCH", "ptpIfIndex"),
)
if mibBuilder.loadTexts:
    ptpIfConfigureEntry.setStatus("current")


class _PtpIfIndex_Type(Integer32):
    """Custom type ptpIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_PtpIfIndex_Type.__name__ = "Integer32"
_PtpIfIndex_Object = MibTableColumn
ptpIfIndex = _PtpIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 1),
    _PtpIfIndex_Type()
)
ptpIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ptpIfIndex.setStatus("current")


class _PtpAnnounceInterval_Type(Integer32):
    """Custom type ptpAnnounceInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10),
    )


_PtpAnnounceInterval_Type.__name__ = "Integer32"
_PtpAnnounceInterval_Object = MibTableColumn
ptpAnnounceInterval = _PtpAnnounceInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 2),
    _PtpAnnounceInterval_Type()
)
ptpAnnounceInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpAnnounceInterval.setStatus("current")


class _PtpSyncInterval_Type(Integer32):
    """Custom type ptpSyncInterval based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10),
    )


_PtpSyncInterval_Type.__name__ = "Integer32"
_PtpSyncInterval_Object = MibTableColumn
ptpSyncInterval = _PtpSyncInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 3),
    _PtpSyncInterval_Type()
)
ptpSyncInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpSyncInterval.setStatus("current")


class _PtpMinDelayreqInterval_Type(Integer32):
    """Custom type ptpMinDelayreqInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10),
    )


_PtpMinDelayreqInterval_Type.__name__ = "Integer32"
_PtpMinDelayreqInterval_Object = MibTableColumn
ptpMinDelayreqInterval = _PtpMinDelayreqInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 4),
    _PtpMinDelayreqInterval_Type()
)
ptpMinDelayreqInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpMinDelayreqInterval.setStatus("current")


class _PtpMinPdelayreqInterval_Type(Integer32):
    """Custom type ptpMinPdelayreqInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10),
    )


_PtpMinPdelayreqInterval_Type.__name__ = "Integer32"
_PtpMinPdelayreqInterval_Object = MibTableColumn
ptpMinPdelayreqInterval = _PtpMinPdelayreqInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 5),
    _PtpMinPdelayreqInterval_Type()
)
ptpMinPdelayreqInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpMinPdelayreqInterval.setStatus("current")


class _PtpAnnounceReceiptTimeout_Type(Integer32):
    """Custom type ptpAnnounceReceiptTimeout based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 255),
    )


_PtpAnnounceReceiptTimeout_Type.__name__ = "Integer32"
_PtpAnnounceReceiptTimeout_Object = MibTableColumn
ptpAnnounceReceiptTimeout = _PtpAnnounceReceiptTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 6),
    _PtpAnnounceReceiptTimeout_Type()
)
ptpAnnounceReceiptTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpAnnounceReceiptTimeout.setStatus("current")


class _PtpDelayMechanism_Type(Integer32):
    """Custom type ptpDelayMechanism based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("peer", 2),
          ("disable", 3))
    )


_PtpDelayMechanism_Type.__name__ = "Integer32"
_PtpDelayMechanism_Object = MibTableColumn
ptpDelayMechanism = _PtpDelayMechanism_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 7),
    _PtpDelayMechanism_Type()
)
ptpDelayMechanism.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpDelayMechanism.setStatus("current")


class _PtpEnable_Type(Integer32):
    """Custom type ptpEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_PtpEnable_Type.__name__ = "Integer32"
_PtpEnable_Object = MibTableColumn
ptpEnable = _PtpEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 8),
    _PtpEnable_Type()
)
ptpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpEnable.setStatus("current")


class _PtpAsymmetryCorrection_Type(Integer32):
    """Custom type ptpAsymmetryCorrection based on Integer32"""
    defaultValue = 0


_PtpAsymmetryCorrection_Type.__name__ = "Integer32"
_PtpAsymmetryCorrection_Object = MibTableColumn
ptpAsymmetryCorrection = _PtpAsymmetryCorrection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 9),
    _PtpAsymmetryCorrection_Type()
)
ptpAsymmetryCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpAsymmetryCorrection.setStatus("current")


class _PtpProtocolMac_Type(Integer32):
    """Custom type ptpProtocolMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enable", 1)
    )


_PtpProtocolMac_Type.__name__ = "Integer32"
_PtpProtocolMac_Object = MibTableColumn
ptpProtocolMac = _PtpProtocolMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 10),
    _PtpProtocolMac_Type()
)
ptpProtocolMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpProtocolMac.setStatus("current")


class _PtpUdpSrcIp_Type(OctetString):
    """Custom type ptpUdpSrcIp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_PtpUdpSrcIp_Type.__name__ = "OctetString"
_PtpUdpSrcIp_Object = MibTableColumn
ptpUdpSrcIp = _PtpUdpSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 11),
    _PtpUdpSrcIp_Type()
)
ptpUdpSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpUdpSrcIp.setStatus("current")


class _PtpVlanId_Type(Integer32):
    """Custom type ptpVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_PtpVlanId_Type.__name__ = "Integer32"
_PtpVlanId_Object = MibTableColumn
ptpVlanId = _PtpVlanId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 12),
    _PtpVlanId_Type()
)
ptpVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ptpVlanId.setStatus("current")


class _PtpCos_Type(Integer32):
    """Custom type ptpCos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_PtpCos_Type.__name__ = "Integer32"
_PtpCos_Object = MibTableColumn
ptpCos = _PtpCos_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 13),
    _PtpCos_Type()
)
ptpCos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ptpCos.setStatus("current")


class _PtpIfName_Type(OctetString):
    """Custom type ptpIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_PtpIfName_Type.__name__ = "OctetString"
_PtpIfName_Object = MibTableColumn
ptpIfName = _PtpIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 14),
    _PtpIfName_Type()
)
ptpIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfName.setStatus("current")


class _PtpIfState_Type(Integer32):
    """Custom type ptpIfState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("initializing", 1),
          ("faulty", 2),
          ("disabled", 3),
          ("listening", 4),
          ("premaster", 5),
          ("master", 6),
          ("passive", 7),
          ("uncalibrated", 8),
          ("slave", 9))
    )


_PtpIfState_Type.__name__ = "Integer32"
_PtpIfState_Object = MibTableColumn
ptpIfState = _PtpIfState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 15),
    _PtpIfState_Type()
)
ptpIfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfState.setStatus("current")
_PtpIfStep_Type = Integer32
_PtpIfStep_Object = MibTableColumn
ptpIfStep = _PtpIfStep_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 16),
    _PtpIfStep_Type()
)
ptpIfStep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfStep.setStatus("current")


class _PtpIfPortId_Type(OctetString):
    """Custom type ptpIfPortId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_PtpIfPortId_Type.__name__ = "OctetString"
_PtpIfPortId_Object = MibTableColumn
ptpIfPortId = _PtpIfPortId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 17),
    _PtpIfPortId_Type()
)
ptpIfPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfPortId.setStatus("current")
_PtpIfRcvAnn_Type = Integer32
_PtpIfRcvAnn_Object = MibTableColumn
ptpIfRcvAnn = _PtpIfRcvAnn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 18),
    _PtpIfRcvAnn_Type()
)
ptpIfRcvAnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvAnn.setStatus("current")
_PtpIfRcvDelayReq_Type = Integer32
_PtpIfRcvDelayReq_Object = MibTableColumn
ptpIfRcvDelayReq = _PtpIfRcvDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 19),
    _PtpIfRcvDelayReq_Type()
)
ptpIfRcvDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvDelayReq.setStatus("current")
_PtpIfRcvDelayResp_Type = Integer32
_PtpIfRcvDelayResp_Object = MibTableColumn
ptpIfRcvDelayResp = _PtpIfRcvDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 20),
    _PtpIfRcvDelayResp_Type()
)
ptpIfRcvDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvDelayResp.setStatus("current")
_PtpIfRcvFollowUp_Type = Integer32
_PtpIfRcvFollowUp_Object = MibTableColumn
ptpIfRcvFollowUp = _PtpIfRcvFollowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 21),
    _PtpIfRcvFollowUp_Type()
)
ptpIfRcvFollowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvFollowUp.setStatus("current")
_PtpIfRcvUnknown_Type = Integer32
_PtpIfRcvUnknown_Object = MibTableColumn
ptpIfRcvUnknown = _PtpIfRcvUnknown_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 22),
    _PtpIfRcvUnknown_Type()
)
ptpIfRcvUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvUnknown.setStatus("current")
_PtpIfRcvSync_Type = Integer32
_PtpIfRcvSync_Object = MibTableColumn
ptpIfRcvSync = _PtpIfRcvSync_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 23),
    _PtpIfRcvSync_Type()
)
ptpIfRcvSync.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvSync.setStatus("current")
_PtpIfRcvPDelayReq_Type = Integer32
_PtpIfRcvPDelayReq_Object = MibTableColumn
ptpIfRcvPDelayReq = _PtpIfRcvPDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 24),
    _PtpIfRcvPDelayReq_Type()
)
ptpIfRcvPDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvPDelayReq.setStatus("current")
_PtpIfRcvPDelayResp_Type = Integer32
_PtpIfRcvPDelayResp_Object = MibTableColumn
ptpIfRcvPDelayResp = _PtpIfRcvPDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 25),
    _PtpIfRcvPDelayResp_Type()
)
ptpIfRcvPDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvPDelayResp.setStatus("current")
_PtpIfRcvPDelayRespFowllowUp_Type = Integer32
_PtpIfRcvPDelayRespFowllowUp_Object = MibTableColumn
ptpIfRcvPDelayRespFowllowUp = _PtpIfRcvPDelayRespFowllowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 26),
    _PtpIfRcvPDelayRespFowllowUp_Type()
)
ptpIfRcvPDelayRespFowllowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfRcvPDelayRespFowllowUp.setStatus("current")
_PtpIfSendAnn_Type = Integer32
_PtpIfSendAnn_Object = MibTableColumn
ptpIfSendAnn = _PtpIfSendAnn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 27),
    _PtpIfSendAnn_Type()
)
ptpIfSendAnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendAnn.setStatus("current")
_PtpIfSendDelayReq_Type = Integer32
_PtpIfSendDelayReq_Object = MibTableColumn
ptpIfSendDelayReq = _PtpIfSendDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 28),
    _PtpIfSendDelayReq_Type()
)
ptpIfSendDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendDelayReq.setStatus("current")
_PtpIfSendDelayResp_Type = Integer32
_PtpIfSendDelayResp_Object = MibTableColumn
ptpIfSendDelayResp = _PtpIfSendDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 29),
    _PtpIfSendDelayResp_Type()
)
ptpIfSendDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendDelayResp.setStatus("current")
_PtpIfSendFollowUp_Type = Integer32
_PtpIfSendFollowUp_Object = MibTableColumn
ptpIfSendFollowUp = _PtpIfSendFollowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 30),
    _PtpIfSendFollowUp_Type()
)
ptpIfSendFollowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendFollowUp.setStatus("current")
_PtpIfSendUnknown_Type = Integer32
_PtpIfSendUnknown_Object = MibTableColumn
ptpIfSendUnknown = _PtpIfSendUnknown_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 31),
    _PtpIfSendUnknown_Type()
)
ptpIfSendUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendUnknown.setStatus("current")
_PtpIfSendSync_Type = Integer32
_PtpIfSendSync_Object = MibTableColumn
ptpIfSendSync = _PtpIfSendSync_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 32),
    _PtpIfSendSync_Type()
)
ptpIfSendSync.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendSync.setStatus("current")
_PtpIfSendPDelayReq_Type = Integer32
_PtpIfSendPDelayReq_Object = MibTableColumn
ptpIfSendPDelayReq = _PtpIfSendPDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 33),
    _PtpIfSendPDelayReq_Type()
)
ptpIfSendPDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendPDelayReq.setStatus("current")
_PtpIfSendPDelayResp_Type = Integer32
_PtpIfSendPDelayResp_Object = MibTableColumn
ptpIfSendPDelayResp = _PtpIfSendPDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 34),
    _PtpIfSendPDelayResp_Type()
)
ptpIfSendPDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendPDelayResp.setStatus("current")
_PtpIfSendPDelayRespFowllowUp_Type = Integer32
_PtpIfSendPDelayRespFowllowUp_Object = MibTableColumn
ptpIfSendPDelayRespFowllowUp = _PtpIfSendPDelayRespFowllowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 35),
    _PtpIfSendPDelayRespFowllowUp_Type()
)
ptpIfSendPDelayRespFowllowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfSendPDelayRespFowllowUp.setStatus("current")
_PtpIfDiscardAnn_Type = Integer32
_PtpIfDiscardAnn_Object = MibTableColumn
ptpIfDiscardAnn = _PtpIfDiscardAnn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 36),
    _PtpIfDiscardAnn_Type()
)
ptpIfDiscardAnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardAnn.setStatus("current")
_PtpIfDiscardDelayReq_Type = Integer32
_PtpIfDiscardDelayReq_Object = MibTableColumn
ptpIfDiscardDelayReq = _PtpIfDiscardDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 37),
    _PtpIfDiscardDelayReq_Type()
)
ptpIfDiscardDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardDelayReq.setStatus("current")
_PtpIfDiscardDelayResp_Type = Integer32
_PtpIfDiscardDelayResp_Object = MibTableColumn
ptpIfDiscardDelayResp = _PtpIfDiscardDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 38),
    _PtpIfDiscardDelayResp_Type()
)
ptpIfDiscardDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardDelayResp.setStatus("current")
_PtpIfDiscardFollowUp_Type = Integer32
_PtpIfDiscardFollowUp_Object = MibTableColumn
ptpIfDiscardFollowUp = _PtpIfDiscardFollowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 39),
    _PtpIfDiscardFollowUp_Type()
)
ptpIfDiscardFollowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardFollowUp.setStatus("current")
_PtpIfDiscardUnknown_Type = Integer32
_PtpIfDiscardUnknown_Object = MibTableColumn
ptpIfDiscardUnknown = _PtpIfDiscardUnknown_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 40),
    _PtpIfDiscardUnknown_Type()
)
ptpIfDiscardUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardUnknown.setStatus("current")
_PtpIfDiscardSync_Type = Integer32
_PtpIfDiscardSync_Object = MibTableColumn
ptpIfDiscardSync = _PtpIfDiscardSync_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 41),
    _PtpIfDiscardSync_Type()
)
ptpIfDiscardSync.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardSync.setStatus("current")
_PtpIfDiscardPDelayReq_Type = Integer32
_PtpIfDiscardPDelayReq_Object = MibTableColumn
ptpIfDiscardPDelayReq = _PtpIfDiscardPDelayReq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 42),
    _PtpIfDiscardPDelayReq_Type()
)
ptpIfDiscardPDelayReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardPDelayReq.setStatus("current")
_PtpIfDiscardPDelayResp_Type = Integer32
_PtpIfDiscardPDelayResp_Object = MibTableColumn
ptpIfDiscardPDelayResp = _PtpIfDiscardPDelayResp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 43),
    _PtpIfDiscardPDelayResp_Type()
)
ptpIfDiscardPDelayResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardPDelayResp.setStatus("current")
_PtpIfDiscardPDelayRespFowllowUp_Type = Integer32
_PtpIfDiscardPDelayRespFowllowUp_Object = MibTableColumn
ptpIfDiscardPDelayRespFowllowUp = _PtpIfDiscardPDelayRespFowllowUp_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 44),
    _PtpIfDiscardPDelayRespFowllowUp_Type()
)
ptpIfDiscardPDelayRespFowllowUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpIfDiscardPDelayRespFowllowUp.setStatus("current")


class _PtpIfIngressLatency_Type(Integer32):
    """Custom type ptpIfIngressLatency based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PtpIfIngressLatency_Type.__name__ = "Integer32"
_PtpIfIngressLatency_Object = MibTableColumn
ptpIfIngressLatency = _PtpIfIngressLatency_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 45),
    _PtpIfIngressLatency_Type()
)
ptpIfIngressLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpIfIngressLatency.setStatus("current")


class _PtpIfEgressLatency_Type(Integer32):
    """Custom type ptpIfEgressLatency based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PtpIfEgressLatency_Type.__name__ = "Integer32"
_PtpIfEgressLatency_Object = MibTableColumn
ptpIfEgressLatency = _PtpIfEgressLatency_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 2, 1, 46),
    _PtpIfEgressLatency_Type()
)
ptpIfEgressLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpIfEgressLatency.setStatus("current")
_PtpForeignMasterTable_Object = MibTable
ptpForeignMasterTable = _PtpForeignMasterTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3)
)
if mibBuilder.loadTexts:
    ptpForeignMasterTable.setStatus("current")
_PtpForeignMasterEntry_Object = MibTableRow
ptpForeignMasterEntry = _PtpForeignMasterEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1)
)
ptpForeignMasterEntry.setIndexNames(
    (0, "SWITCH", "ptpFMIndex"),
    (0, "SWITCH", "ptpFMNodeIndex"),
)
if mibBuilder.loadTexts:
    ptpForeignMasterEntry.setStatus("current")
_PtpFMIndex_Type = Integer32
_PtpFMIndex_Object = MibTableColumn
ptpFMIndex = _PtpFMIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 1),
    _PtpFMIndex_Type()
)
ptpFMIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ptpFMIndex.setStatus("current")
_PtpFMNodeIndex_Type = Integer32
_PtpFMNodeIndex_Object = MibTableColumn
ptpFMNodeIndex = _PtpFMNodeIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 2),
    _PtpFMNodeIndex_Type()
)
ptpFMNodeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ptpFMNodeIndex.setStatus("current")
_PtpFMBest_Type = TruthValue
_PtpFMBest_Object = MibTableColumn
ptpFMBest = _PtpFMBest_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 3),
    _PtpFMBest_Type()
)
ptpFMBest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpFMBest.setStatus("current")


class _PtpFMClockID_Type(OctetString):
    """Custom type ptpFMClockID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_PtpFMClockID_Type.__name__ = "OctetString"
_PtpFMClockID_Object = MibTableColumn
ptpFMClockID = _PtpFMClockID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 4),
    _PtpFMClockID_Type()
)
ptpFMClockID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpFMClockID.setStatus("current")
_PtpFMPortNum_Type = Integer32
_PtpFMPortNum_Object = MibTableColumn
ptpFMPortNum = _PtpFMPortNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 5),
    _PtpFMPortNum_Type()
)
ptpFMPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpFMPortNum.setStatus("current")
_PtpFMQualification_Type = Integer32
_PtpFMQualification_Object = MibTableColumn
ptpFMQualification = _PtpFMQualification_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 6),
    _PtpFMQualification_Type()
)
ptpFMQualification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpFMQualification.setStatus("current")


class _PtpFMIfName_Type(OctetString):
    """Custom type ptpFMIfName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_PtpFMIfName_Type.__name__ = "OctetString"
_PtpFMIfName_Object = MibTableColumn
ptpFMIfName = _PtpFMIfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 85, 3, 1, 7),
    _PtpFMIfName_Type()
)
ptpFMIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpFMIfName.setStatus("current")
_PtpNotifications_ObjectIdentity = ObjectIdentity
ptpNotifications = _PtpNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 85, 100)
)
_Pm_ObjectIdentity = ObjectIdentity
pm = _Pm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90)
)
_PmThresholdTable_Object = MibTable
pmThresholdTable = _PmThresholdTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1)
)
if mibBuilder.loadTexts:
    pmThresholdTable.setStatus("current")
_PmThresholdEntry_Object = MibTableRow
pmThresholdEntry = _PmThresholdEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1, 1)
)
pmThresholdEntry.setIndexNames(
    (0, "SWITCH", "pmThresholdIndex"),
)
if mibBuilder.loadTexts:
    pmThresholdEntry.setStatus("current")


class _PmThresholdIndex_Type(Integer32):
    """Custom type pmThresholdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39)
        )
    )
    namedValues = NamedValues(
        *(("unit-temperature-min", 1),
          ("unit-temperature-max", 2),
          ("sfp-rx-power-min", 3),
          ("sfp-rx-power-max", 4),
          ("sfp-tx-power-min", 5),
          ("sfp-tx-power-max", 6),
          ("if-dropped-events", 7),
          ("if-input-packets", 8),
          ("if-input-bytes", 9),
          ("if-input-broadcasts", 10),
          ("if-input-multicasts", 11),
          ("if-crc-errors", 12),
          ("if-collisions", 13),
          ("if-undersized-packets", 14),
          ("if-oversized-packets", 15),
          ("if-fragments", 16),
          ("if-jabbers", 17),
          ("if-packet-64", 18),
          ("if-packet-65-127", 19),
          ("if-packet-128-255", 20),
          ("if-packet-256-511", 21),
          ("if-packet-512-1023", 22),
          ("if-packet-1024", 23),
          ("if-output-packets", 24),
          ("if-output-bytes", 25),
          ("lsp-pe-out-packets", 26),
          ("lsp-pe-out-bytes", 27),
          ("lsp-p-east-ingress-packets", 28),
          ("lsp-p-east-ingress-bytes", 29),
          ("lsp-p-west-ingress-packets", 30),
          ("lsp-p-west-ingress-bytes", 31),
          ("vpws-ingress-packets", 32),
          ("vpws-ingress-bytes", 33),
          ("vpws-egress-packets", 34),
          ("vpws-egress-bytes", 35),
          ("vpls-ingress-packets", 36),
          ("vpls-ingress-bytes", 37),
          ("vpls-egress-packets", 38),
          ("vpls-egress-bytes", 39))
    )


_PmThresholdIndex_Type.__name__ = "Integer32"
_PmThresholdIndex_Object = MibTableColumn
pmThresholdIndex = _PmThresholdIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1, 1, 1),
    _PmThresholdIndex_Type()
)
pmThresholdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmThresholdIndex.setStatus("current")
_PmThreshold15mValue_Type = OctetString
_PmThreshold15mValue_Object = MibTableColumn
pmThreshold15mValue = _PmThreshold15mValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1, 1, 2),
    _PmThreshold15mValue_Type()
)
pmThreshold15mValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pmThreshold15mValue.setStatus("current")
_PmThreshold1hValue_Type = OctetString
_PmThreshold1hValue_Object = MibTableColumn
pmThreshold1hValue = _PmThreshold1hValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1, 1, 3),
    _PmThreshold1hValue_Type()
)
pmThreshold1hValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pmThreshold1hValue.setStatus("current")
_PmThreshold1dValue_Type = OctetString
_PmThreshold1dValue_Object = MibTableColumn
pmThreshold1dValue = _PmThreshold1dValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 1, 1, 4),
    _PmThreshold1dValue_Type()
)
pmThreshold1dValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pmThreshold1dValue.setStatus("current")
_PmUnitTempr_ObjectIdentity = ObjectIdentity
pmUnitTempr = _PmUnitTempr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100)
)
_PmUnitTemprCurr15mTable_Object = MibTable
pmUnitTemprCurr15mTable = _PmUnitTemprCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1)
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mTable.setStatus("current")
_PmUnitTemprCurr15mEntry_Object = MibTableRow
pmUnitTemprCurr15mEntry = _PmUnitTemprCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1)
)
pmUnitTemprCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mEntry.setStatus("current")
_PmUnitTemprCurr15mIndex_Type = Integer32
_PmUnitTemprCurr15mIndex_Object = MibTableColumn
pmUnitTemprCurr15mIndex = _PmUnitTemprCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 1),
    _PmUnitTemprCurr15mIndex_Type()
)
pmUnitTemprCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mIndex.setStatus("current")
_PmUnitTemprCurr15mId_Type = OctetString
_PmUnitTemprCurr15mId_Object = MibTableColumn
pmUnitTemprCurr15mId = _PmUnitTemprCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 2),
    _PmUnitTemprCurr15mId_Type()
)
pmUnitTemprCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mId.setStatus("current")


class _PmUnitTemprCurr15mUnitType_Type(Integer32):
    """Custom type pmUnitTemprCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprCurr15mUnitType_Type.__name__ = "Integer32"
_PmUnitTemprCurr15mUnitType_Object = MibTableColumn
pmUnitTemprCurr15mUnitType = _PmUnitTemprCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 3),
    _PmUnitTemprCurr15mUnitType_Type()
)
pmUnitTemprCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mUnitType.setStatus("current")
_PmUnitTemprCurr15mAverage_Type = Counter64
_PmUnitTemprCurr15mAverage_Object = MibTableColumn
pmUnitTemprCurr15mAverage = _PmUnitTemprCurr15mAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 4),
    _PmUnitTemprCurr15mAverage_Type()
)
pmUnitTemprCurr15mAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mAverage.setStatus("current")
_PmUnitTemprCurr15mMin_Type = Counter64
_PmUnitTemprCurr15mMin_Object = MibTableColumn
pmUnitTemprCurr15mMin = _PmUnitTemprCurr15mMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 5),
    _PmUnitTemprCurr15mMin_Type()
)
pmUnitTemprCurr15mMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mMin.setStatus("current")
_PmUnitTemprCurr15mMax_Type = Counter64
_PmUnitTemprCurr15mMax_Object = MibTableColumn
pmUnitTemprCurr15mMax = _PmUnitTemprCurr15mMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 6),
    _PmUnitTemprCurr15mMax_Type()
)
pmUnitTemprCurr15mMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mMax.setStatus("current")
_PmUnitTemprCurr15mStartTime_Type = DateAndTime
_PmUnitTemprCurr15mStartTime_Object = MibTableColumn
pmUnitTemprCurr15mStartTime = _PmUnitTemprCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 100),
    _PmUnitTemprCurr15mStartTime_Type()
)
pmUnitTemprCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mStartTime.setStatus("current")
_PmUnitTemprCurr15mStopTime_Type = DateAndTime
_PmUnitTemprCurr15mStopTime_Object = MibTableColumn
pmUnitTemprCurr15mStopTime = _PmUnitTemprCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 1, 1, 101),
    _PmUnitTemprCurr15mStopTime_Type()
)
pmUnitTemprCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr15mStopTime.setStatus("current")
_PmUnitTemprPrev15mTable_Object = MibTable
pmUnitTemprPrev15mTable = _PmUnitTemprPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2)
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mTable.setStatus("current")
_PmUnitTemprPrev15mEntry_Object = MibTableRow
pmUnitTemprPrev15mEntry = _PmUnitTemprPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1)
)
pmUnitTemprPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mEntry.setStatus("current")
_PmUnitTemprPrev15mIndex_Type = Integer32
_PmUnitTemprPrev15mIndex_Object = MibTableColumn
pmUnitTemprPrev15mIndex = _PmUnitTemprPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 1),
    _PmUnitTemprPrev15mIndex_Type()
)
pmUnitTemprPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mIndex.setStatus("current")
_PmUnitTemprPrev15mId_Type = OctetString
_PmUnitTemprPrev15mId_Object = MibTableColumn
pmUnitTemprPrev15mId = _PmUnitTemprPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 2),
    _PmUnitTemprPrev15mId_Type()
)
pmUnitTemprPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mId.setStatus("current")


class _PmUnitTemprPrev15mUnitType_Type(Integer32):
    """Custom type pmUnitTemprPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprPrev15mUnitType_Type.__name__ = "Integer32"
_PmUnitTemprPrev15mUnitType_Object = MibTableColumn
pmUnitTemprPrev15mUnitType = _PmUnitTemprPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 3),
    _PmUnitTemprPrev15mUnitType_Type()
)
pmUnitTemprPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mUnitType.setStatus("current")
_PmUnitTemprPrev15mAverage_Type = Counter64
_PmUnitTemprPrev15mAverage_Object = MibTableColumn
pmUnitTemprPrev15mAverage = _PmUnitTemprPrev15mAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 4),
    _PmUnitTemprPrev15mAverage_Type()
)
pmUnitTemprPrev15mAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mAverage.setStatus("current")
_PmUnitTemprPrev15mMin_Type = Counter64
_PmUnitTemprPrev15mMin_Object = MibTableColumn
pmUnitTemprPrev15mMin = _PmUnitTemprPrev15mMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 5),
    _PmUnitTemprPrev15mMin_Type()
)
pmUnitTemprPrev15mMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mMin.setStatus("current")
_PmUnitTemprPrev15mMax_Type = Counter64
_PmUnitTemprPrev15mMax_Object = MibTableColumn
pmUnitTemprPrev15mMax = _PmUnitTemprPrev15mMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 6),
    _PmUnitTemprPrev15mMax_Type()
)
pmUnitTemprPrev15mMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mMax.setStatus("current")
_PmUnitTemprPrev15mStartTime_Type = DateAndTime
_PmUnitTemprPrev15mStartTime_Object = MibTableColumn
pmUnitTemprPrev15mStartTime = _PmUnitTemprPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 100),
    _PmUnitTemprPrev15mStartTime_Type()
)
pmUnitTemprPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mStartTime.setStatus("current")
_PmUnitTemprPrev15mStopTime_Type = DateAndTime
_PmUnitTemprPrev15mStopTime_Object = MibTableColumn
pmUnitTemprPrev15mStopTime = _PmUnitTemprPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 2, 1, 101),
    _PmUnitTemprPrev15mStopTime_Type()
)
pmUnitTemprPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev15mStopTime.setStatus("current")
_PmUnitTemprCurr1hTable_Object = MibTable
pmUnitTemprCurr1hTable = _PmUnitTemprCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3)
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hTable.setStatus("current")
_PmUnitTemprCurr1hEntry_Object = MibTableRow
pmUnitTemprCurr1hEntry = _PmUnitTemprCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1)
)
pmUnitTemprCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hEntry.setStatus("current")
_PmUnitTemprCurr1hIndex_Type = Integer32
_PmUnitTemprCurr1hIndex_Object = MibTableColumn
pmUnitTemprCurr1hIndex = _PmUnitTemprCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 1),
    _PmUnitTemprCurr1hIndex_Type()
)
pmUnitTemprCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hIndex.setStatus("current")
_PmUnitTemprCurr1hId_Type = OctetString
_PmUnitTemprCurr1hId_Object = MibTableColumn
pmUnitTemprCurr1hId = _PmUnitTemprCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 2),
    _PmUnitTemprCurr1hId_Type()
)
pmUnitTemprCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hId.setStatus("current")


class _PmUnitTemprCurr1hUnitType_Type(Integer32):
    """Custom type pmUnitTemprCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprCurr1hUnitType_Type.__name__ = "Integer32"
_PmUnitTemprCurr1hUnitType_Object = MibTableColumn
pmUnitTemprCurr1hUnitType = _PmUnitTemprCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 3),
    _PmUnitTemprCurr1hUnitType_Type()
)
pmUnitTemprCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hUnitType.setStatus("current")
_PmUnitTemprCurr1hAverage_Type = Counter64
_PmUnitTemprCurr1hAverage_Object = MibTableColumn
pmUnitTemprCurr1hAverage = _PmUnitTemprCurr1hAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 4),
    _PmUnitTemprCurr1hAverage_Type()
)
pmUnitTemprCurr1hAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hAverage.setStatus("current")
_PmUnitTemprCurr1hMin_Type = Counter64
_PmUnitTemprCurr1hMin_Object = MibTableColumn
pmUnitTemprCurr1hMin = _PmUnitTemprCurr1hMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 5),
    _PmUnitTemprCurr1hMin_Type()
)
pmUnitTemprCurr1hMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hMin.setStatus("current")
_PmUnitTemprCurr1hMax_Type = Counter64
_PmUnitTemprCurr1hMax_Object = MibTableColumn
pmUnitTemprCurr1hMax = _PmUnitTemprCurr1hMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 6),
    _PmUnitTemprCurr1hMax_Type()
)
pmUnitTemprCurr1hMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hMax.setStatus("current")
_PmUnitTemprCurr1hStartTime_Type = DateAndTime
_PmUnitTemprCurr1hStartTime_Object = MibTableColumn
pmUnitTemprCurr1hStartTime = _PmUnitTemprCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 100),
    _PmUnitTemprCurr1hStartTime_Type()
)
pmUnitTemprCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hStartTime.setStatus("current")
_PmUnitTemprCurr1hStopTime_Type = DateAndTime
_PmUnitTemprCurr1hStopTime_Object = MibTableColumn
pmUnitTemprCurr1hStopTime = _PmUnitTemprCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 3, 1, 101),
    _PmUnitTemprCurr1hStopTime_Type()
)
pmUnitTemprCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1hStopTime.setStatus("current")
_PmUnitTemprPrev1hTable_Object = MibTable
pmUnitTemprPrev1hTable = _PmUnitTemprPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4)
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hTable.setStatus("current")
_PmUnitTemprPrev1hEntry_Object = MibTableRow
pmUnitTemprPrev1hEntry = _PmUnitTemprPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1)
)
pmUnitTemprPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hEntry.setStatus("current")
_PmUnitTemprPrev1hIndex_Type = Integer32
_PmUnitTemprPrev1hIndex_Object = MibTableColumn
pmUnitTemprPrev1hIndex = _PmUnitTemprPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 1),
    _PmUnitTemprPrev1hIndex_Type()
)
pmUnitTemprPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hIndex.setStatus("current")
_PmUnitTemprPrev1hId_Type = OctetString
_PmUnitTemprPrev1hId_Object = MibTableColumn
pmUnitTemprPrev1hId = _PmUnitTemprPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 2),
    _PmUnitTemprPrev1hId_Type()
)
pmUnitTemprPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hId.setStatus("current")


class _PmUnitTemprPrev1hUnitType_Type(Integer32):
    """Custom type pmUnitTemprPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprPrev1hUnitType_Type.__name__ = "Integer32"
_PmUnitTemprPrev1hUnitType_Object = MibTableColumn
pmUnitTemprPrev1hUnitType = _PmUnitTemprPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 3),
    _PmUnitTemprPrev1hUnitType_Type()
)
pmUnitTemprPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hUnitType.setStatus("current")
_PmUnitTemprPrev1hAverage_Type = Counter64
_PmUnitTemprPrev1hAverage_Object = MibTableColumn
pmUnitTemprPrev1hAverage = _PmUnitTemprPrev1hAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 4),
    _PmUnitTemprPrev1hAverage_Type()
)
pmUnitTemprPrev1hAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hAverage.setStatus("current")
_PmUnitTemprPrev1hMin_Type = Counter64
_PmUnitTemprPrev1hMin_Object = MibTableColumn
pmUnitTemprPrev1hMin = _PmUnitTemprPrev1hMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 5),
    _PmUnitTemprPrev1hMin_Type()
)
pmUnitTemprPrev1hMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hMin.setStatus("current")
_PmUnitTemprPrev1hMax_Type = Counter64
_PmUnitTemprPrev1hMax_Object = MibTableColumn
pmUnitTemprPrev1hMax = _PmUnitTemprPrev1hMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 6),
    _PmUnitTemprPrev1hMax_Type()
)
pmUnitTemprPrev1hMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hMax.setStatus("current")
_PmUnitTemprPrev1hStartTime_Type = DateAndTime
_PmUnitTemprPrev1hStartTime_Object = MibTableColumn
pmUnitTemprPrev1hStartTime = _PmUnitTemprPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 100),
    _PmUnitTemprPrev1hStartTime_Type()
)
pmUnitTemprPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hStartTime.setStatus("current")
_PmUnitTemprPrev1hStopTime_Type = DateAndTime
_PmUnitTemprPrev1hStopTime_Object = MibTableColumn
pmUnitTemprPrev1hStopTime = _PmUnitTemprPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 4, 1, 101),
    _PmUnitTemprPrev1hStopTime_Type()
)
pmUnitTemprPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1hStopTime.setStatus("current")
_PmUnitTemprCurr1dTable_Object = MibTable
pmUnitTemprCurr1dTable = _PmUnitTemprCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5)
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dTable.setStatus("current")
_PmUnitTemprCurr1dEntry_Object = MibTableRow
pmUnitTemprCurr1dEntry = _PmUnitTemprCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1)
)
pmUnitTemprCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dEntry.setStatus("current")
_PmUnitTemprCurr1dIndex_Type = Integer32
_PmUnitTemprCurr1dIndex_Object = MibTableColumn
pmUnitTemprCurr1dIndex = _PmUnitTemprCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 1),
    _PmUnitTemprCurr1dIndex_Type()
)
pmUnitTemprCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dIndex.setStatus("current")
_PmUnitTemprCurr1dId_Type = OctetString
_PmUnitTemprCurr1dId_Object = MibTableColumn
pmUnitTemprCurr1dId = _PmUnitTemprCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 2),
    _PmUnitTemprCurr1dId_Type()
)
pmUnitTemprCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dId.setStatus("current")


class _PmUnitTemprCurr1dUnitType_Type(Integer32):
    """Custom type pmUnitTemprCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprCurr1dUnitType_Type.__name__ = "Integer32"
_PmUnitTemprCurr1dUnitType_Object = MibTableColumn
pmUnitTemprCurr1dUnitType = _PmUnitTemprCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 3),
    _PmUnitTemprCurr1dUnitType_Type()
)
pmUnitTemprCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dUnitType.setStatus("current")
_PmUnitTemprCurr1dAverage_Type = Counter64
_PmUnitTemprCurr1dAverage_Object = MibTableColumn
pmUnitTemprCurr1dAverage = _PmUnitTemprCurr1dAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 4),
    _PmUnitTemprCurr1dAverage_Type()
)
pmUnitTemprCurr1dAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dAverage.setStatus("current")
_PmUnitTemprCurr1dMin_Type = Counter64
_PmUnitTemprCurr1dMin_Object = MibTableColumn
pmUnitTemprCurr1dMin = _PmUnitTemprCurr1dMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 5),
    _PmUnitTemprCurr1dMin_Type()
)
pmUnitTemprCurr1dMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dMin.setStatus("current")
_PmUnitTemprCurr1dMax_Type = Counter64
_PmUnitTemprCurr1dMax_Object = MibTableColumn
pmUnitTemprCurr1dMax = _PmUnitTemprCurr1dMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 6),
    _PmUnitTemprCurr1dMax_Type()
)
pmUnitTemprCurr1dMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dMax.setStatus("current")
_PmUnitTemprCurr1dStartTime_Type = DateAndTime
_PmUnitTemprCurr1dStartTime_Object = MibTableColumn
pmUnitTemprCurr1dStartTime = _PmUnitTemprCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 100),
    _PmUnitTemprCurr1dStartTime_Type()
)
pmUnitTemprCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dStartTime.setStatus("current")
_PmUnitTemprCurr1dStopTime_Type = DateAndTime
_PmUnitTemprCurr1dStopTime_Object = MibTableColumn
pmUnitTemprCurr1dStopTime = _PmUnitTemprCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 5, 1, 101),
    _PmUnitTemprCurr1dStopTime_Type()
)
pmUnitTemprCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprCurr1dStopTime.setStatus("current")
_PmUnitTemprPrev1dTable_Object = MibTable
pmUnitTemprPrev1dTable = _PmUnitTemprPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6)
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dTable.setStatus("current")
_PmUnitTemprPrev1dEntry_Object = MibTableRow
pmUnitTemprPrev1dEntry = _PmUnitTemprPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1)
)
pmUnitTemprPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmUnitTemprPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dEntry.setStatus("current")
_PmUnitTemprPrev1dIndex_Type = Integer32
_PmUnitTemprPrev1dIndex_Object = MibTableColumn
pmUnitTemprPrev1dIndex = _PmUnitTemprPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 1),
    _PmUnitTemprPrev1dIndex_Type()
)
pmUnitTemprPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dIndex.setStatus("current")
_PmUnitTemprPrev1dId_Type = OctetString
_PmUnitTemprPrev1dId_Object = MibTableColumn
pmUnitTemprPrev1dId = _PmUnitTemprPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 2),
    _PmUnitTemprPrev1dId_Type()
)
pmUnitTemprPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dId.setStatus("current")


class _PmUnitTemprPrev1dUnitType_Type(Integer32):
    """Custom type pmUnitTemprPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmUnitTemprPrev1dUnitType_Type.__name__ = "Integer32"
_PmUnitTemprPrev1dUnitType_Object = MibTableColumn
pmUnitTemprPrev1dUnitType = _PmUnitTemprPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 3),
    _PmUnitTemprPrev1dUnitType_Type()
)
pmUnitTemprPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dUnitType.setStatus("current")
_PmUnitTemprPrev1dAverage_Type = Counter64
_PmUnitTemprPrev1dAverage_Object = MibTableColumn
pmUnitTemprPrev1dAverage = _PmUnitTemprPrev1dAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 4),
    _PmUnitTemprPrev1dAverage_Type()
)
pmUnitTemprPrev1dAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dAverage.setStatus("current")
_PmUnitTemprPrev1dMin_Type = Counter64
_PmUnitTemprPrev1dMin_Object = MibTableColumn
pmUnitTemprPrev1dMin = _PmUnitTemprPrev1dMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 5),
    _PmUnitTemprPrev1dMin_Type()
)
pmUnitTemprPrev1dMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dMin.setStatus("current")
_PmUnitTemprPrev1dMax_Type = Counter64
_PmUnitTemprPrev1dMax_Object = MibTableColumn
pmUnitTemprPrev1dMax = _PmUnitTemprPrev1dMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 6),
    _PmUnitTemprPrev1dMax_Type()
)
pmUnitTemprPrev1dMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dMax.setStatus("current")
_PmUnitTemprPrev1dStartTime_Type = DateAndTime
_PmUnitTemprPrev1dStartTime_Object = MibTableColumn
pmUnitTemprPrev1dStartTime = _PmUnitTemprPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 100),
    _PmUnitTemprPrev1dStartTime_Type()
)
pmUnitTemprPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dStartTime.setStatus("current")
_PmUnitTemprPrev1dStopTime_Type = DateAndTime
_PmUnitTemprPrev1dStopTime_Object = MibTableColumn
pmUnitTemprPrev1dStopTime = _PmUnitTemprPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 6, 1, 101),
    _PmUnitTemprPrev1dStopTime_Type()
)
pmUnitTemprPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmUnitTemprPrev1dStopTime.setStatus("current")
_PmTcaUnitTemprMin15mTable_Object = MibTable
pmTcaUnitTemprMin15mTable = _PmTcaUnitTemprMin15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mTable.setStatus("current")
_PmTcaUnitTemprMin15mEntry_Object = MibTableRow
pmTcaUnitTemprMin15mEntry = _PmTcaUnitTemprMin15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1)
)
pmTcaUnitTemprMin15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMin15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mEntry.setStatus("current")
_PmTcaUnitTemprMin15mIndex_Type = Integer32
_PmTcaUnitTemprMin15mIndex_Object = MibTableColumn
pmTcaUnitTemprMin15mIndex = _PmTcaUnitTemprMin15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 1),
    _PmTcaUnitTemprMin15mIndex_Type()
)
pmTcaUnitTemprMin15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mIndex.setStatus("current")
_PmTcaUnitTemprMin15mId_Type = OctetString
_PmTcaUnitTemprMin15mId_Object = MibTableColumn
pmTcaUnitTemprMin15mId = _PmTcaUnitTemprMin15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 2),
    _PmTcaUnitTemprMin15mId_Type()
)
pmTcaUnitTemprMin15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mId.setStatus("current")


class _PmTcaUnitTemprMin15mUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMin15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMin15mUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMin15mUnitType_Object = MibTableColumn
pmTcaUnitTemprMin15mUnitType = _PmTcaUnitTemprMin15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 3),
    _PmTcaUnitTemprMin15mUnitType_Type()
)
pmTcaUnitTemprMin15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mUnitType.setStatus("current")
_PmTcaUnitTemprMin15mCnt_Type = Counter64
_PmTcaUnitTemprMin15mCnt_Object = MibTableColumn
pmTcaUnitTemprMin15mCnt = _PmTcaUnitTemprMin15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 4),
    _PmTcaUnitTemprMin15mCnt_Type()
)
pmTcaUnitTemprMin15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mCnt.setStatus("current")
_PmTcaUnitTemprMin15mThreshold_Type = Counter64
_PmTcaUnitTemprMin15mThreshold_Object = MibTableColumn
pmTcaUnitTemprMin15mThreshold = _PmTcaUnitTemprMin15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 5),
    _PmTcaUnitTemprMin15mThreshold_Type()
)
pmTcaUnitTemprMin15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mThreshold.setStatus("current")
_PmTcaUnitTemprMin15mOccurTime_Type = DateAndTime
_PmTcaUnitTemprMin15mOccurTime_Object = MibTableColumn
pmTcaUnitTemprMin15mOccurTime = _PmTcaUnitTemprMin15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 7, 1, 6),
    _PmTcaUnitTemprMin15mOccurTime_Type()
)
pmTcaUnitTemprMin15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin15mOccurTime.setStatus("current")
_PmTcaUnitTemprMin1hTable_Object = MibTable
pmTcaUnitTemprMin1hTable = _PmTcaUnitTemprMin1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hTable.setStatus("current")
_PmTcaUnitTemprMin1hEntry_Object = MibTableRow
pmTcaUnitTemprMin1hEntry = _PmTcaUnitTemprMin1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1)
)
pmTcaUnitTemprMin1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMin1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hEntry.setStatus("current")
_PmTcaUnitTemprMin1hIndex_Type = Integer32
_PmTcaUnitTemprMin1hIndex_Object = MibTableColumn
pmTcaUnitTemprMin1hIndex = _PmTcaUnitTemprMin1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 1),
    _PmTcaUnitTemprMin1hIndex_Type()
)
pmTcaUnitTemprMin1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hIndex.setStatus("current")
_PmTcaUnitTemprMin1hId_Type = OctetString
_PmTcaUnitTemprMin1hId_Object = MibTableColumn
pmTcaUnitTemprMin1hId = _PmTcaUnitTemprMin1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 2),
    _PmTcaUnitTemprMin1hId_Type()
)
pmTcaUnitTemprMin1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hId.setStatus("current")


class _PmTcaUnitTemprMin1hUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMin1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMin1hUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMin1hUnitType_Object = MibTableColumn
pmTcaUnitTemprMin1hUnitType = _PmTcaUnitTemprMin1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 3),
    _PmTcaUnitTemprMin1hUnitType_Type()
)
pmTcaUnitTemprMin1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hUnitType.setStatus("current")
_PmTcaUnitTemprMin1hCnt_Type = Counter64
_PmTcaUnitTemprMin1hCnt_Object = MibTableColumn
pmTcaUnitTemprMin1hCnt = _PmTcaUnitTemprMin1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 4),
    _PmTcaUnitTemprMin1hCnt_Type()
)
pmTcaUnitTemprMin1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hCnt.setStatus("current")
_PmTcaUnitTemprMin1hThreshold_Type = Counter64
_PmTcaUnitTemprMin1hThreshold_Object = MibTableColumn
pmTcaUnitTemprMin1hThreshold = _PmTcaUnitTemprMin1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 5),
    _PmTcaUnitTemprMin1hThreshold_Type()
)
pmTcaUnitTemprMin1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hThreshold.setStatus("current")
_PmTcaUnitTemprMin1hOccurTime_Type = DateAndTime
_PmTcaUnitTemprMin1hOccurTime_Object = MibTableColumn
pmTcaUnitTemprMin1hOccurTime = _PmTcaUnitTemprMin1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 8, 1, 6),
    _PmTcaUnitTemprMin1hOccurTime_Type()
)
pmTcaUnitTemprMin1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1hOccurTime.setStatus("current")
_PmTcaUnitTemprMin1dTable_Object = MibTable
pmTcaUnitTemprMin1dTable = _PmTcaUnitTemprMin1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dTable.setStatus("current")
_PmTcaUnitTemprMin1dEntry_Object = MibTableRow
pmTcaUnitTemprMin1dEntry = _PmTcaUnitTemprMin1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1)
)
pmTcaUnitTemprMin1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMin1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dEntry.setStatus("current")
_PmTcaUnitTemprMin1dIndex_Type = Integer32
_PmTcaUnitTemprMin1dIndex_Object = MibTableColumn
pmTcaUnitTemprMin1dIndex = _PmTcaUnitTemprMin1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 1),
    _PmTcaUnitTemprMin1dIndex_Type()
)
pmTcaUnitTemprMin1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dIndex.setStatus("current")
_PmTcaUnitTemprMin1dId_Type = OctetString
_PmTcaUnitTemprMin1dId_Object = MibTableColumn
pmTcaUnitTemprMin1dId = _PmTcaUnitTemprMin1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 2),
    _PmTcaUnitTemprMin1dId_Type()
)
pmTcaUnitTemprMin1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dId.setStatus("current")


class _PmTcaUnitTemprMin1dUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMin1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMin1dUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMin1dUnitType_Object = MibTableColumn
pmTcaUnitTemprMin1dUnitType = _PmTcaUnitTemprMin1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 3),
    _PmTcaUnitTemprMin1dUnitType_Type()
)
pmTcaUnitTemprMin1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dUnitType.setStatus("current")
_PmTcaUnitTemprMin1dCnt_Type = Counter64
_PmTcaUnitTemprMin1dCnt_Object = MibTableColumn
pmTcaUnitTemprMin1dCnt = _PmTcaUnitTemprMin1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 4),
    _PmTcaUnitTemprMin1dCnt_Type()
)
pmTcaUnitTemprMin1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dCnt.setStatus("current")
_PmTcaUnitTemprMin1dThreshold_Type = Counter64
_PmTcaUnitTemprMin1dThreshold_Object = MibTableColumn
pmTcaUnitTemprMin1dThreshold = _PmTcaUnitTemprMin1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 5),
    _PmTcaUnitTemprMin1dThreshold_Type()
)
pmTcaUnitTemprMin1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dThreshold.setStatus("current")
_PmTcaUnitTemprMin1dOccurTime_Type = DateAndTime
_PmTcaUnitTemprMin1dOccurTime_Object = MibTableColumn
pmTcaUnitTemprMin1dOccurTime = _PmTcaUnitTemprMin1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 9, 1, 6),
    _PmTcaUnitTemprMin1dOccurTime_Type()
)
pmTcaUnitTemprMin1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMin1dOccurTime.setStatus("current")
_PmTcaUnitTemprMax15mTable_Object = MibTable
pmTcaUnitTemprMax15mTable = _PmTcaUnitTemprMax15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mTable.setStatus("current")
_PmTcaUnitTemprMax15mEntry_Object = MibTableRow
pmTcaUnitTemprMax15mEntry = _PmTcaUnitTemprMax15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1)
)
pmTcaUnitTemprMax15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMax15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mEntry.setStatus("current")
_PmTcaUnitTemprMax15mIndex_Type = Integer32
_PmTcaUnitTemprMax15mIndex_Object = MibTableColumn
pmTcaUnitTemprMax15mIndex = _PmTcaUnitTemprMax15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 1),
    _PmTcaUnitTemprMax15mIndex_Type()
)
pmTcaUnitTemprMax15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mIndex.setStatus("current")
_PmTcaUnitTemprMax15mId_Type = OctetString
_PmTcaUnitTemprMax15mId_Object = MibTableColumn
pmTcaUnitTemprMax15mId = _PmTcaUnitTemprMax15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 2),
    _PmTcaUnitTemprMax15mId_Type()
)
pmTcaUnitTemprMax15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mId.setStatus("current")


class _PmTcaUnitTemprMax15mUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMax15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMax15mUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMax15mUnitType_Object = MibTableColumn
pmTcaUnitTemprMax15mUnitType = _PmTcaUnitTemprMax15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 3),
    _PmTcaUnitTemprMax15mUnitType_Type()
)
pmTcaUnitTemprMax15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mUnitType.setStatus("current")
_PmTcaUnitTemprMax15mCnt_Type = Counter64
_PmTcaUnitTemprMax15mCnt_Object = MibTableColumn
pmTcaUnitTemprMax15mCnt = _PmTcaUnitTemprMax15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 4),
    _PmTcaUnitTemprMax15mCnt_Type()
)
pmTcaUnitTemprMax15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mCnt.setStatus("current")
_PmTcaUnitTemprMax15mThreshold_Type = Counter64
_PmTcaUnitTemprMax15mThreshold_Object = MibTableColumn
pmTcaUnitTemprMax15mThreshold = _PmTcaUnitTemprMax15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 5),
    _PmTcaUnitTemprMax15mThreshold_Type()
)
pmTcaUnitTemprMax15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mThreshold.setStatus("current")
_PmTcaUnitTemprMax15mOccurTime_Type = DateAndTime
_PmTcaUnitTemprMax15mOccurTime_Object = MibTableColumn
pmTcaUnitTemprMax15mOccurTime = _PmTcaUnitTemprMax15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 10, 1, 6),
    _PmTcaUnitTemprMax15mOccurTime_Type()
)
pmTcaUnitTemprMax15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax15mOccurTime.setStatus("current")
_PmTcaUnitTemprMax1hTable_Object = MibTable
pmTcaUnitTemprMax1hTable = _PmTcaUnitTemprMax1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hTable.setStatus("current")
_PmTcaUnitTemprMax1hEntry_Object = MibTableRow
pmTcaUnitTemprMax1hEntry = _PmTcaUnitTemprMax1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1)
)
pmTcaUnitTemprMax1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMax1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hEntry.setStatus("current")
_PmTcaUnitTemprMax1hIndex_Type = Integer32
_PmTcaUnitTemprMax1hIndex_Object = MibTableColumn
pmTcaUnitTemprMax1hIndex = _PmTcaUnitTemprMax1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 1),
    _PmTcaUnitTemprMax1hIndex_Type()
)
pmTcaUnitTemprMax1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hIndex.setStatus("current")
_PmTcaUnitTemprMax1hId_Type = OctetString
_PmTcaUnitTemprMax1hId_Object = MibTableColumn
pmTcaUnitTemprMax1hId = _PmTcaUnitTemprMax1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 2),
    _PmTcaUnitTemprMax1hId_Type()
)
pmTcaUnitTemprMax1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hId.setStatus("current")


class _PmTcaUnitTemprMax1hUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMax1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMax1hUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMax1hUnitType_Object = MibTableColumn
pmTcaUnitTemprMax1hUnitType = _PmTcaUnitTemprMax1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 3),
    _PmTcaUnitTemprMax1hUnitType_Type()
)
pmTcaUnitTemprMax1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hUnitType.setStatus("current")
_PmTcaUnitTemprMax1hCnt_Type = Counter64
_PmTcaUnitTemprMax1hCnt_Object = MibTableColumn
pmTcaUnitTemprMax1hCnt = _PmTcaUnitTemprMax1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 4),
    _PmTcaUnitTemprMax1hCnt_Type()
)
pmTcaUnitTemprMax1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hCnt.setStatus("current")
_PmTcaUnitTemprMax1hThreshold_Type = Counter64
_PmTcaUnitTemprMax1hThreshold_Object = MibTableColumn
pmTcaUnitTemprMax1hThreshold = _PmTcaUnitTemprMax1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 5),
    _PmTcaUnitTemprMax1hThreshold_Type()
)
pmTcaUnitTemprMax1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hThreshold.setStatus("current")
_PmTcaUnitTemprMax1hOccurTime_Type = DateAndTime
_PmTcaUnitTemprMax1hOccurTime_Object = MibTableColumn
pmTcaUnitTemprMax1hOccurTime = _PmTcaUnitTemprMax1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 11, 1, 6),
    _PmTcaUnitTemprMax1hOccurTime_Type()
)
pmTcaUnitTemprMax1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1hOccurTime.setStatus("current")
_PmTcaUnitTemprMax1dTable_Object = MibTable
pmTcaUnitTemprMax1dTable = _PmTcaUnitTemprMax1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12)
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dTable.setStatus("current")
_PmTcaUnitTemprMax1dEntry_Object = MibTableRow
pmTcaUnitTemprMax1dEntry = _PmTcaUnitTemprMax1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1)
)
pmTcaUnitTemprMax1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaUnitTemprMax1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dEntry.setStatus("current")
_PmTcaUnitTemprMax1dIndex_Type = Integer32
_PmTcaUnitTemprMax1dIndex_Object = MibTableColumn
pmTcaUnitTemprMax1dIndex = _PmTcaUnitTemprMax1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 1),
    _PmTcaUnitTemprMax1dIndex_Type()
)
pmTcaUnitTemprMax1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dIndex.setStatus("current")
_PmTcaUnitTemprMax1dId_Type = OctetString
_PmTcaUnitTemprMax1dId_Object = MibTableColumn
pmTcaUnitTemprMax1dId = _PmTcaUnitTemprMax1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 2),
    _PmTcaUnitTemprMax1dId_Type()
)
pmTcaUnitTemprMax1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dId.setStatus("current")


class _PmTcaUnitTemprMax1dUnitType_Type(Integer32):
    """Custom type pmTcaUnitTemprMax1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaUnitTemprMax1dUnitType_Type.__name__ = "Integer32"
_PmTcaUnitTemprMax1dUnitType_Object = MibTableColumn
pmTcaUnitTemprMax1dUnitType = _PmTcaUnitTemprMax1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 3),
    _PmTcaUnitTemprMax1dUnitType_Type()
)
pmTcaUnitTemprMax1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dUnitType.setStatus("current")
_PmTcaUnitTemprMax1dCnt_Type = Counter64
_PmTcaUnitTemprMax1dCnt_Object = MibTableColumn
pmTcaUnitTemprMax1dCnt = _PmTcaUnitTemprMax1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 4),
    _PmTcaUnitTemprMax1dCnt_Type()
)
pmTcaUnitTemprMax1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dCnt.setStatus("current")
_PmTcaUnitTemprMax1dThreshold_Type = Counter64
_PmTcaUnitTemprMax1dThreshold_Object = MibTableColumn
pmTcaUnitTemprMax1dThreshold = _PmTcaUnitTemprMax1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 5),
    _PmTcaUnitTemprMax1dThreshold_Type()
)
pmTcaUnitTemprMax1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dThreshold.setStatus("current")
_PmTcaUnitTemprMax1dOccurTime_Type = DateAndTime
_PmTcaUnitTemprMax1dOccurTime_Object = MibTableColumn
pmTcaUnitTemprMax1dOccurTime = _PmTcaUnitTemprMax1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 100, 12, 1, 6),
    _PmTcaUnitTemprMax1dOccurTime_Type()
)
pmTcaUnitTemprMax1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaUnitTemprMax1dOccurTime.setStatus("current")
_PmSFPPower_ObjectIdentity = ObjectIdentity
pmSFPPower = _PmSFPPower_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101)
)
_PmSFPPowerCurr15mTable_Object = MibTable
pmSFPPowerCurr15mTable = _PmSFPPowerCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1)
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mTable.setStatus("current")
_PmSFPPowerCurr15mEntry_Object = MibTableRow
pmSFPPowerCurr15mEntry = _PmSFPPowerCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1)
)
pmSFPPowerCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mEntry.setStatus("current")
_PmSFPPowerCurr15mIndex_Type = Integer32
_PmSFPPowerCurr15mIndex_Object = MibTableColumn
pmSFPPowerCurr15mIndex = _PmSFPPowerCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 1),
    _PmSFPPowerCurr15mIndex_Type()
)
pmSFPPowerCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mIndex.setStatus("current")
_PmSFPPowerCurr15mId_Type = OctetString
_PmSFPPowerCurr15mId_Object = MibTableColumn
pmSFPPowerCurr15mId = _PmSFPPowerCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 2),
    _PmSFPPowerCurr15mId_Type()
)
pmSFPPowerCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mId.setStatus("current")


class _PmSFPPowerCurr15mUnitType_Type(Integer32):
    """Custom type pmSFPPowerCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerCurr15mUnitType_Type.__name__ = "Integer32"
_PmSFPPowerCurr15mUnitType_Object = MibTableColumn
pmSFPPowerCurr15mUnitType = _PmSFPPowerCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 3),
    _PmSFPPowerCurr15mUnitType_Type()
)
pmSFPPowerCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mUnitType.setStatus("current")
_PmSFPPowerCurr15mRxAverage_Type = Counter64
_PmSFPPowerCurr15mRxAverage_Object = MibTableColumn
pmSFPPowerCurr15mRxAverage = _PmSFPPowerCurr15mRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 4),
    _PmSFPPowerCurr15mRxAverage_Type()
)
pmSFPPowerCurr15mRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mRxAverage.setStatus("current")
_PmSFPPowerCurr15mRxMin_Type = Counter64
_PmSFPPowerCurr15mRxMin_Object = MibTableColumn
pmSFPPowerCurr15mRxMin = _PmSFPPowerCurr15mRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 5),
    _PmSFPPowerCurr15mRxMin_Type()
)
pmSFPPowerCurr15mRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mRxMin.setStatus("current")
_PmSFPPowerCurr15mRxMax_Type = Counter64
_PmSFPPowerCurr15mRxMax_Object = MibTableColumn
pmSFPPowerCurr15mRxMax = _PmSFPPowerCurr15mRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 6),
    _PmSFPPowerCurr15mRxMax_Type()
)
pmSFPPowerCurr15mRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mRxMax.setStatus("current")
_PmSFPPowerCurr15mTxAverage_Type = Counter64
_PmSFPPowerCurr15mTxAverage_Object = MibTableColumn
pmSFPPowerCurr15mTxAverage = _PmSFPPowerCurr15mTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 7),
    _PmSFPPowerCurr15mTxAverage_Type()
)
pmSFPPowerCurr15mTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mTxAverage.setStatus("current")
_PmSFPPowerCurr15mTxMin_Type = Counter64
_PmSFPPowerCurr15mTxMin_Object = MibTableColumn
pmSFPPowerCurr15mTxMin = _PmSFPPowerCurr15mTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 8),
    _PmSFPPowerCurr15mTxMin_Type()
)
pmSFPPowerCurr15mTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mTxMin.setStatus("current")
_PmSFPPowerCurr15mTxMax_Type = Counter64
_PmSFPPowerCurr15mTxMax_Object = MibTableColumn
pmSFPPowerCurr15mTxMax = _PmSFPPowerCurr15mTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 9),
    _PmSFPPowerCurr15mTxMax_Type()
)
pmSFPPowerCurr15mTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mTxMax.setStatus("current")
_PmSFPPowerCurr15mStartTime_Type = DateAndTime
_PmSFPPowerCurr15mStartTime_Object = MibTableColumn
pmSFPPowerCurr15mStartTime = _PmSFPPowerCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 100),
    _PmSFPPowerCurr15mStartTime_Type()
)
pmSFPPowerCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mStartTime.setStatus("current")
_PmSFPPowerCurr15mStopTime_Type = DateAndTime
_PmSFPPowerCurr15mStopTime_Object = MibTableColumn
pmSFPPowerCurr15mStopTime = _PmSFPPowerCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 1, 1, 101),
    _PmSFPPowerCurr15mStopTime_Type()
)
pmSFPPowerCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr15mStopTime.setStatus("current")
_PmSFPPowerPrev15mTable_Object = MibTable
pmSFPPowerPrev15mTable = _PmSFPPowerPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2)
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mTable.setStatus("current")
_PmSFPPowerPrev15mEntry_Object = MibTableRow
pmSFPPowerPrev15mEntry = _PmSFPPowerPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1)
)
pmSFPPowerPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mEntry.setStatus("current")
_PmSFPPowerPrev15mIndex_Type = Integer32
_PmSFPPowerPrev15mIndex_Object = MibTableColumn
pmSFPPowerPrev15mIndex = _PmSFPPowerPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 1),
    _PmSFPPowerPrev15mIndex_Type()
)
pmSFPPowerPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mIndex.setStatus("current")
_PmSFPPowerPrev15mId_Type = OctetString
_PmSFPPowerPrev15mId_Object = MibTableColumn
pmSFPPowerPrev15mId = _PmSFPPowerPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 2),
    _PmSFPPowerPrev15mId_Type()
)
pmSFPPowerPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mId.setStatus("current")


class _PmSFPPowerPrev15mUnitType_Type(Integer32):
    """Custom type pmSFPPowerPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerPrev15mUnitType_Type.__name__ = "Integer32"
_PmSFPPowerPrev15mUnitType_Object = MibTableColumn
pmSFPPowerPrev15mUnitType = _PmSFPPowerPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 3),
    _PmSFPPowerPrev15mUnitType_Type()
)
pmSFPPowerPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mUnitType.setStatus("current")
_PmSFPPowerPrev15mRxAverage_Type = Counter64
_PmSFPPowerPrev15mRxAverage_Object = MibTableColumn
pmSFPPowerPrev15mRxAverage = _PmSFPPowerPrev15mRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 4),
    _PmSFPPowerPrev15mRxAverage_Type()
)
pmSFPPowerPrev15mRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mRxAverage.setStatus("current")
_PmSFPPowerPrev15mRxMin_Type = Counter64
_PmSFPPowerPrev15mRxMin_Object = MibTableColumn
pmSFPPowerPrev15mRxMin = _PmSFPPowerPrev15mRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 5),
    _PmSFPPowerPrev15mRxMin_Type()
)
pmSFPPowerPrev15mRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mRxMin.setStatus("current")
_PmSFPPowerPrev15mRxMax_Type = Counter64
_PmSFPPowerPrev15mRxMax_Object = MibTableColumn
pmSFPPowerPrev15mRxMax = _PmSFPPowerPrev15mRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 6),
    _PmSFPPowerPrev15mRxMax_Type()
)
pmSFPPowerPrev15mRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mRxMax.setStatus("current")
_PmSFPPowerPrev15mTxAverage_Type = Counter64
_PmSFPPowerPrev15mTxAverage_Object = MibTableColumn
pmSFPPowerPrev15mTxAverage = _PmSFPPowerPrev15mTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 7),
    _PmSFPPowerPrev15mTxAverage_Type()
)
pmSFPPowerPrev15mTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mTxAverage.setStatus("current")
_PmSFPPowerPrev15mTxMin_Type = Counter64
_PmSFPPowerPrev15mTxMin_Object = MibTableColumn
pmSFPPowerPrev15mTxMin = _PmSFPPowerPrev15mTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 8),
    _PmSFPPowerPrev15mTxMin_Type()
)
pmSFPPowerPrev15mTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mTxMin.setStatus("current")
_PmSFPPowerPrev15mTxMax_Type = Counter64
_PmSFPPowerPrev15mTxMax_Object = MibTableColumn
pmSFPPowerPrev15mTxMax = _PmSFPPowerPrev15mTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 9),
    _PmSFPPowerPrev15mTxMax_Type()
)
pmSFPPowerPrev15mTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mTxMax.setStatus("current")
_PmSFPPowerPrev15mStartTime_Type = DateAndTime
_PmSFPPowerPrev15mStartTime_Object = MibTableColumn
pmSFPPowerPrev15mStartTime = _PmSFPPowerPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 100),
    _PmSFPPowerPrev15mStartTime_Type()
)
pmSFPPowerPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mStartTime.setStatus("current")
_PmSFPPowerPrev15mStopTime_Type = DateAndTime
_PmSFPPowerPrev15mStopTime_Object = MibTableColumn
pmSFPPowerPrev15mStopTime = _PmSFPPowerPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 2, 1, 101),
    _PmSFPPowerPrev15mStopTime_Type()
)
pmSFPPowerPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev15mStopTime.setStatus("current")
_PmSFPPowerCurr1hTable_Object = MibTable
pmSFPPowerCurr1hTable = _PmSFPPowerCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3)
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hTable.setStatus("current")
_PmSFPPowerCurr1hEntry_Object = MibTableRow
pmSFPPowerCurr1hEntry = _PmSFPPowerCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1)
)
pmSFPPowerCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hEntry.setStatus("current")
_PmSFPPowerCurr1hIndex_Type = Integer32
_PmSFPPowerCurr1hIndex_Object = MibTableColumn
pmSFPPowerCurr1hIndex = _PmSFPPowerCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 1),
    _PmSFPPowerCurr1hIndex_Type()
)
pmSFPPowerCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hIndex.setStatus("current")
_PmSFPPowerCurr1hId_Type = OctetString
_PmSFPPowerCurr1hId_Object = MibTableColumn
pmSFPPowerCurr1hId = _PmSFPPowerCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 2),
    _PmSFPPowerCurr1hId_Type()
)
pmSFPPowerCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hId.setStatus("current")


class _PmSFPPowerCurr1hUnitType_Type(Integer32):
    """Custom type pmSFPPowerCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerCurr1hUnitType_Type.__name__ = "Integer32"
_PmSFPPowerCurr1hUnitType_Object = MibTableColumn
pmSFPPowerCurr1hUnitType = _PmSFPPowerCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 3),
    _PmSFPPowerCurr1hUnitType_Type()
)
pmSFPPowerCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hUnitType.setStatus("current")
_PmSFPPowerCurr1hRxAverage_Type = Counter64
_PmSFPPowerCurr1hRxAverage_Object = MibTableColumn
pmSFPPowerCurr1hRxAverage = _PmSFPPowerCurr1hRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 4),
    _PmSFPPowerCurr1hRxAverage_Type()
)
pmSFPPowerCurr1hRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hRxAverage.setStatus("current")
_PmSFPPowerCurr1hRxMin_Type = Counter64
_PmSFPPowerCurr1hRxMin_Object = MibTableColumn
pmSFPPowerCurr1hRxMin = _PmSFPPowerCurr1hRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 5),
    _PmSFPPowerCurr1hRxMin_Type()
)
pmSFPPowerCurr1hRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hRxMin.setStatus("current")
_PmSFPPowerCurr1hRxMax_Type = Counter64
_PmSFPPowerCurr1hRxMax_Object = MibTableColumn
pmSFPPowerCurr1hRxMax = _PmSFPPowerCurr1hRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 6),
    _PmSFPPowerCurr1hRxMax_Type()
)
pmSFPPowerCurr1hRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hRxMax.setStatus("current")
_PmSFPPowerCurr1hTxAverage_Type = Counter64
_PmSFPPowerCurr1hTxAverage_Object = MibTableColumn
pmSFPPowerCurr1hTxAverage = _PmSFPPowerCurr1hTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 7),
    _PmSFPPowerCurr1hTxAverage_Type()
)
pmSFPPowerCurr1hTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hTxAverage.setStatus("current")
_PmSFPPowerCurr1hTxMin_Type = Counter64
_PmSFPPowerCurr1hTxMin_Object = MibTableColumn
pmSFPPowerCurr1hTxMin = _PmSFPPowerCurr1hTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 8),
    _PmSFPPowerCurr1hTxMin_Type()
)
pmSFPPowerCurr1hTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hTxMin.setStatus("current")
_PmSFPPowerCurr1hTxMax_Type = Counter64
_PmSFPPowerCurr1hTxMax_Object = MibTableColumn
pmSFPPowerCurr1hTxMax = _PmSFPPowerCurr1hTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 9),
    _PmSFPPowerCurr1hTxMax_Type()
)
pmSFPPowerCurr1hTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hTxMax.setStatus("current")
_PmSFPPowerCurr1hStartTime_Type = DateAndTime
_PmSFPPowerCurr1hStartTime_Object = MibTableColumn
pmSFPPowerCurr1hStartTime = _PmSFPPowerCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 100),
    _PmSFPPowerCurr1hStartTime_Type()
)
pmSFPPowerCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hStartTime.setStatus("current")
_PmSFPPowerCurr1hStopTime_Type = DateAndTime
_PmSFPPowerCurr1hStopTime_Object = MibTableColumn
pmSFPPowerCurr1hStopTime = _PmSFPPowerCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 3, 1, 101),
    _PmSFPPowerCurr1hStopTime_Type()
)
pmSFPPowerCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1hStopTime.setStatus("current")
_PmSFPPowerPrev1hTable_Object = MibTable
pmSFPPowerPrev1hTable = _PmSFPPowerPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4)
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hTable.setStatus("current")
_PmSFPPowerPrev1hEntry_Object = MibTableRow
pmSFPPowerPrev1hEntry = _PmSFPPowerPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1)
)
pmSFPPowerPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hEntry.setStatus("current")
_PmSFPPowerPrev1hIndex_Type = Integer32
_PmSFPPowerPrev1hIndex_Object = MibTableColumn
pmSFPPowerPrev1hIndex = _PmSFPPowerPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 1),
    _PmSFPPowerPrev1hIndex_Type()
)
pmSFPPowerPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hIndex.setStatus("current")
_PmSFPPowerPrev1hId_Type = OctetString
_PmSFPPowerPrev1hId_Object = MibTableColumn
pmSFPPowerPrev1hId = _PmSFPPowerPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 2),
    _PmSFPPowerPrev1hId_Type()
)
pmSFPPowerPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hId.setStatus("current")


class _PmSFPPowerPrev1hUnitType_Type(Integer32):
    """Custom type pmSFPPowerPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerPrev1hUnitType_Type.__name__ = "Integer32"
_PmSFPPowerPrev1hUnitType_Object = MibTableColumn
pmSFPPowerPrev1hUnitType = _PmSFPPowerPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 3),
    _PmSFPPowerPrev1hUnitType_Type()
)
pmSFPPowerPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hUnitType.setStatus("current")
_PmSFPPowerPrev1hRxAverage_Type = Counter64
_PmSFPPowerPrev1hRxAverage_Object = MibTableColumn
pmSFPPowerPrev1hRxAverage = _PmSFPPowerPrev1hRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 4),
    _PmSFPPowerPrev1hRxAverage_Type()
)
pmSFPPowerPrev1hRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hRxAverage.setStatus("current")
_PmSFPPowerPrev1hRxMin_Type = Counter64
_PmSFPPowerPrev1hRxMin_Object = MibTableColumn
pmSFPPowerPrev1hRxMin = _PmSFPPowerPrev1hRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 5),
    _PmSFPPowerPrev1hRxMin_Type()
)
pmSFPPowerPrev1hRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hRxMin.setStatus("current")
_PmSFPPowerPrev1hRxMax_Type = Counter64
_PmSFPPowerPrev1hRxMax_Object = MibTableColumn
pmSFPPowerPrev1hRxMax = _PmSFPPowerPrev1hRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 6),
    _PmSFPPowerPrev1hRxMax_Type()
)
pmSFPPowerPrev1hRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hRxMax.setStatus("current")
_PmSFPPowerPrev1hTxAverage_Type = Counter64
_PmSFPPowerPrev1hTxAverage_Object = MibTableColumn
pmSFPPowerPrev1hTxAverage = _PmSFPPowerPrev1hTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 7),
    _PmSFPPowerPrev1hTxAverage_Type()
)
pmSFPPowerPrev1hTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hTxAverage.setStatus("current")
_PmSFPPowerPrev1hTxMin_Type = Counter64
_PmSFPPowerPrev1hTxMin_Object = MibTableColumn
pmSFPPowerPrev1hTxMin = _PmSFPPowerPrev1hTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 8),
    _PmSFPPowerPrev1hTxMin_Type()
)
pmSFPPowerPrev1hTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hTxMin.setStatus("current")
_PmSFPPowerPrev1hTxMax_Type = Counter64
_PmSFPPowerPrev1hTxMax_Object = MibTableColumn
pmSFPPowerPrev1hTxMax = _PmSFPPowerPrev1hTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 9),
    _PmSFPPowerPrev1hTxMax_Type()
)
pmSFPPowerPrev1hTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hTxMax.setStatus("current")
_PmSFPPowerPrev1hStartTime_Type = DateAndTime
_PmSFPPowerPrev1hStartTime_Object = MibTableColumn
pmSFPPowerPrev1hStartTime = _PmSFPPowerPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 100),
    _PmSFPPowerPrev1hStartTime_Type()
)
pmSFPPowerPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hStartTime.setStatus("current")
_PmSFPPowerPrev1hStopTime_Type = DateAndTime
_PmSFPPowerPrev1hStopTime_Object = MibTableColumn
pmSFPPowerPrev1hStopTime = _PmSFPPowerPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 4, 1, 101),
    _PmSFPPowerPrev1hStopTime_Type()
)
pmSFPPowerPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1hStopTime.setStatus("current")
_PmSFPPowerCurr1dTable_Object = MibTable
pmSFPPowerCurr1dTable = _PmSFPPowerCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5)
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dTable.setStatus("current")
_PmSFPPowerCurr1dEntry_Object = MibTableRow
pmSFPPowerCurr1dEntry = _PmSFPPowerCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1)
)
pmSFPPowerCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dEntry.setStatus("current")
_PmSFPPowerCurr1dIndex_Type = Integer32
_PmSFPPowerCurr1dIndex_Object = MibTableColumn
pmSFPPowerCurr1dIndex = _PmSFPPowerCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 1),
    _PmSFPPowerCurr1dIndex_Type()
)
pmSFPPowerCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dIndex.setStatus("current")
_PmSFPPowerCurr1dId_Type = OctetString
_PmSFPPowerCurr1dId_Object = MibTableColumn
pmSFPPowerCurr1dId = _PmSFPPowerCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 2),
    _PmSFPPowerCurr1dId_Type()
)
pmSFPPowerCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dId.setStatus("current")


class _PmSFPPowerCurr1dUnitType_Type(Integer32):
    """Custom type pmSFPPowerCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerCurr1dUnitType_Type.__name__ = "Integer32"
_PmSFPPowerCurr1dUnitType_Object = MibTableColumn
pmSFPPowerCurr1dUnitType = _PmSFPPowerCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 3),
    _PmSFPPowerCurr1dUnitType_Type()
)
pmSFPPowerCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dUnitType.setStatus("current")
_PmSFPPowerCurr1dRxAverage_Type = Counter64
_PmSFPPowerCurr1dRxAverage_Object = MibTableColumn
pmSFPPowerCurr1dRxAverage = _PmSFPPowerCurr1dRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 4),
    _PmSFPPowerCurr1dRxAverage_Type()
)
pmSFPPowerCurr1dRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dRxAverage.setStatus("current")
_PmSFPPowerCurr1dRxMin_Type = Counter64
_PmSFPPowerCurr1dRxMin_Object = MibTableColumn
pmSFPPowerCurr1dRxMin = _PmSFPPowerCurr1dRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 5),
    _PmSFPPowerCurr1dRxMin_Type()
)
pmSFPPowerCurr1dRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dRxMin.setStatus("current")
_PmSFPPowerCurr1dRxMax_Type = Counter64
_PmSFPPowerCurr1dRxMax_Object = MibTableColumn
pmSFPPowerCurr1dRxMax = _PmSFPPowerCurr1dRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 6),
    _PmSFPPowerCurr1dRxMax_Type()
)
pmSFPPowerCurr1dRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dRxMax.setStatus("current")
_PmSFPPowerCurr1dTxAverage_Type = Counter64
_PmSFPPowerCurr1dTxAverage_Object = MibTableColumn
pmSFPPowerCurr1dTxAverage = _PmSFPPowerCurr1dTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 7),
    _PmSFPPowerCurr1dTxAverage_Type()
)
pmSFPPowerCurr1dTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dTxAverage.setStatus("current")
_PmSFPPowerCurr1dTxMin_Type = Counter64
_PmSFPPowerCurr1dTxMin_Object = MibTableColumn
pmSFPPowerCurr1dTxMin = _PmSFPPowerCurr1dTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 8),
    _PmSFPPowerCurr1dTxMin_Type()
)
pmSFPPowerCurr1dTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dTxMin.setStatus("current")
_PmSFPPowerCurr1dTxMax_Type = Counter64
_PmSFPPowerCurr1dTxMax_Object = MibTableColumn
pmSFPPowerCurr1dTxMax = _PmSFPPowerCurr1dTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 9),
    _PmSFPPowerCurr1dTxMax_Type()
)
pmSFPPowerCurr1dTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dTxMax.setStatus("current")
_PmSFPPowerCurr1dStartTime_Type = DateAndTime
_PmSFPPowerCurr1dStartTime_Object = MibTableColumn
pmSFPPowerCurr1dStartTime = _PmSFPPowerCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 100),
    _PmSFPPowerCurr1dStartTime_Type()
)
pmSFPPowerCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dStartTime.setStatus("current")
_PmSFPPowerCurr1dStopTime_Type = DateAndTime
_PmSFPPowerCurr1dStopTime_Object = MibTableColumn
pmSFPPowerCurr1dStopTime = _PmSFPPowerCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 5, 1, 101),
    _PmSFPPowerCurr1dStopTime_Type()
)
pmSFPPowerCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerCurr1dStopTime.setStatus("current")
_PmSFPPowerPrev1dTable_Object = MibTable
pmSFPPowerPrev1dTable = _PmSFPPowerPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6)
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dTable.setStatus("current")
_PmSFPPowerPrev1dEntry_Object = MibTableRow
pmSFPPowerPrev1dEntry = _PmSFPPowerPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1)
)
pmSFPPowerPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmSFPPowerPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dEntry.setStatus("current")
_PmSFPPowerPrev1dIndex_Type = Integer32
_PmSFPPowerPrev1dIndex_Object = MibTableColumn
pmSFPPowerPrev1dIndex = _PmSFPPowerPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 1),
    _PmSFPPowerPrev1dIndex_Type()
)
pmSFPPowerPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dIndex.setStatus("current")
_PmSFPPowerPrev1dId_Type = OctetString
_PmSFPPowerPrev1dId_Object = MibTableColumn
pmSFPPowerPrev1dId = _PmSFPPowerPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 2),
    _PmSFPPowerPrev1dId_Type()
)
pmSFPPowerPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dId.setStatus("current")


class _PmSFPPowerPrev1dUnitType_Type(Integer32):
    """Custom type pmSFPPowerPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmSFPPowerPrev1dUnitType_Type.__name__ = "Integer32"
_PmSFPPowerPrev1dUnitType_Object = MibTableColumn
pmSFPPowerPrev1dUnitType = _PmSFPPowerPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 3),
    _PmSFPPowerPrev1dUnitType_Type()
)
pmSFPPowerPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dUnitType.setStatus("current")
_PmSFPPowerPrev1dRxAverage_Type = Counter64
_PmSFPPowerPrev1dRxAverage_Object = MibTableColumn
pmSFPPowerPrev1dRxAverage = _PmSFPPowerPrev1dRxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 4),
    _PmSFPPowerPrev1dRxAverage_Type()
)
pmSFPPowerPrev1dRxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dRxAverage.setStatus("current")
_PmSFPPowerPrev1dRxMin_Type = Counter64
_PmSFPPowerPrev1dRxMin_Object = MibTableColumn
pmSFPPowerPrev1dRxMin = _PmSFPPowerPrev1dRxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 5),
    _PmSFPPowerPrev1dRxMin_Type()
)
pmSFPPowerPrev1dRxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dRxMin.setStatus("current")
_PmSFPPowerPrev1dRxMax_Type = Counter64
_PmSFPPowerPrev1dRxMax_Object = MibTableColumn
pmSFPPowerPrev1dRxMax = _PmSFPPowerPrev1dRxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 6),
    _PmSFPPowerPrev1dRxMax_Type()
)
pmSFPPowerPrev1dRxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dRxMax.setStatus("current")
_PmSFPPowerPrev1dTxAverage_Type = Counter64
_PmSFPPowerPrev1dTxAverage_Object = MibTableColumn
pmSFPPowerPrev1dTxAverage = _PmSFPPowerPrev1dTxAverage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 7),
    _PmSFPPowerPrev1dTxAverage_Type()
)
pmSFPPowerPrev1dTxAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dTxAverage.setStatus("current")
_PmSFPPowerPrev1dTxMin_Type = Counter64
_PmSFPPowerPrev1dTxMin_Object = MibTableColumn
pmSFPPowerPrev1dTxMin = _PmSFPPowerPrev1dTxMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 8),
    _PmSFPPowerPrev1dTxMin_Type()
)
pmSFPPowerPrev1dTxMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dTxMin.setStatus("current")
_PmSFPPowerPrev1dTxMax_Type = Counter64
_PmSFPPowerPrev1dTxMax_Object = MibTableColumn
pmSFPPowerPrev1dTxMax = _PmSFPPowerPrev1dTxMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 9),
    _PmSFPPowerPrev1dTxMax_Type()
)
pmSFPPowerPrev1dTxMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dTxMax.setStatus("current")
_PmSFPPowerPrev1dStartTime_Type = DateAndTime
_PmSFPPowerPrev1dStartTime_Object = MibTableColumn
pmSFPPowerPrev1dStartTime = _PmSFPPowerPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 100),
    _PmSFPPowerPrev1dStartTime_Type()
)
pmSFPPowerPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dStartTime.setStatus("current")
_PmSFPPowerPrev1dStopTime_Type = DateAndTime
_PmSFPPowerPrev1dStopTime_Object = MibTableColumn
pmSFPPowerPrev1dStopTime = _PmSFPPowerPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 6, 1, 101),
    _PmSFPPowerPrev1dStopTime_Type()
)
pmSFPPowerPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSFPPowerPrev1dStopTime.setStatus("current")
_PmTcaSFPRxPowerMin15mTable_Object = MibTable
pmTcaSFPRxPowerMin15mTable = _PmTcaSFPRxPowerMin15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mTable.setStatus("current")
_PmTcaSFPRxPowerMin15mEntry_Object = MibTableRow
pmTcaSFPRxPowerMin15mEntry = _PmTcaSFPRxPowerMin15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1)
)
pmTcaSFPRxPowerMin15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMin15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mEntry.setStatus("current")
_PmTcaSFPRxPowerMin15mIndex_Type = Integer32
_PmTcaSFPRxPowerMin15mIndex_Object = MibTableColumn
pmTcaSFPRxPowerMin15mIndex = _PmTcaSFPRxPowerMin15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 1),
    _PmTcaSFPRxPowerMin15mIndex_Type()
)
pmTcaSFPRxPowerMin15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mIndex.setStatus("current")
_PmTcaSFPRxPowerMin15mId_Type = OctetString
_PmTcaSFPRxPowerMin15mId_Object = MibTableColumn
pmTcaSFPRxPowerMin15mId = _PmTcaSFPRxPowerMin15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 2),
    _PmTcaSFPRxPowerMin15mId_Type()
)
pmTcaSFPRxPowerMin15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mId.setStatus("current")


class _PmTcaSFPRxPowerMin15mUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMin15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMin15mUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMin15mUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMin15mUnitType = _PmTcaSFPRxPowerMin15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 3),
    _PmTcaSFPRxPowerMin15mUnitType_Type()
)
pmTcaSFPRxPowerMin15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mUnitType.setStatus("current")
_PmTcaSFPRxPowerMin15mCnt_Type = Counter64
_PmTcaSFPRxPowerMin15mCnt_Object = MibTableColumn
pmTcaSFPRxPowerMin15mCnt = _PmTcaSFPRxPowerMin15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 4),
    _PmTcaSFPRxPowerMin15mCnt_Type()
)
pmTcaSFPRxPowerMin15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mCnt.setStatus("current")
_PmTcaSFPRxPowerMin15mThreshold_Type = Counter64
_PmTcaSFPRxPowerMin15mThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMin15mThreshold = _PmTcaSFPRxPowerMin15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 5),
    _PmTcaSFPRxPowerMin15mThreshold_Type()
)
pmTcaSFPRxPowerMin15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mThreshold.setStatus("current")
_PmTcaSFPRxPowerMin15mOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMin15mOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMin15mOccurTime = _PmTcaSFPRxPowerMin15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 7, 1, 6),
    _PmTcaSFPRxPowerMin15mOccurTime_Type()
)
pmTcaSFPRxPowerMin15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin15mOccurTime.setStatus("current")
_PmTcaSFPRxPowerMin1hTable_Object = MibTable
pmTcaSFPRxPowerMin1hTable = _PmTcaSFPRxPowerMin1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hTable.setStatus("current")
_PmTcaSFPRxPowerMin1hEntry_Object = MibTableRow
pmTcaSFPRxPowerMin1hEntry = _PmTcaSFPRxPowerMin1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1)
)
pmTcaSFPRxPowerMin1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMin1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hEntry.setStatus("current")
_PmTcaSFPRxPowerMin1hIndex_Type = Integer32
_PmTcaSFPRxPowerMin1hIndex_Object = MibTableColumn
pmTcaSFPRxPowerMin1hIndex = _PmTcaSFPRxPowerMin1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 1),
    _PmTcaSFPRxPowerMin1hIndex_Type()
)
pmTcaSFPRxPowerMin1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hIndex.setStatus("current")
_PmTcaSFPRxPowerMin1hId_Type = OctetString
_PmTcaSFPRxPowerMin1hId_Object = MibTableColumn
pmTcaSFPRxPowerMin1hId = _PmTcaSFPRxPowerMin1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 2),
    _PmTcaSFPRxPowerMin1hId_Type()
)
pmTcaSFPRxPowerMin1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hId.setStatus("current")


class _PmTcaSFPRxPowerMin1hUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMin1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMin1hUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMin1hUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMin1hUnitType = _PmTcaSFPRxPowerMin1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 3),
    _PmTcaSFPRxPowerMin1hUnitType_Type()
)
pmTcaSFPRxPowerMin1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hUnitType.setStatus("current")
_PmTcaSFPRxPowerMin1hCnt_Type = Counter64
_PmTcaSFPRxPowerMin1hCnt_Object = MibTableColumn
pmTcaSFPRxPowerMin1hCnt = _PmTcaSFPRxPowerMin1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 4),
    _PmTcaSFPRxPowerMin1hCnt_Type()
)
pmTcaSFPRxPowerMin1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hCnt.setStatus("current")
_PmTcaSFPRxPowerMin1hThreshold_Type = Counter64
_PmTcaSFPRxPowerMin1hThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMin1hThreshold = _PmTcaSFPRxPowerMin1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 5),
    _PmTcaSFPRxPowerMin1hThreshold_Type()
)
pmTcaSFPRxPowerMin1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hThreshold.setStatus("current")
_PmTcaSFPRxPowerMin1hOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMin1hOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMin1hOccurTime = _PmTcaSFPRxPowerMin1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 8, 1, 6),
    _PmTcaSFPRxPowerMin1hOccurTime_Type()
)
pmTcaSFPRxPowerMin1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1hOccurTime.setStatus("current")
_PmTcaSFPRxPowerMin1dTable_Object = MibTable
pmTcaSFPRxPowerMin1dTable = _PmTcaSFPRxPowerMin1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dTable.setStatus("current")
_PmTcaSFPRxPowerMin1dEntry_Object = MibTableRow
pmTcaSFPRxPowerMin1dEntry = _PmTcaSFPRxPowerMin1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1)
)
pmTcaSFPRxPowerMin1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMin1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dEntry.setStatus("current")
_PmTcaSFPRxPowerMin1dIndex_Type = Integer32
_PmTcaSFPRxPowerMin1dIndex_Object = MibTableColumn
pmTcaSFPRxPowerMin1dIndex = _PmTcaSFPRxPowerMin1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 1),
    _PmTcaSFPRxPowerMin1dIndex_Type()
)
pmTcaSFPRxPowerMin1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dIndex.setStatus("current")
_PmTcaSFPRxPowerMin1dId_Type = OctetString
_PmTcaSFPRxPowerMin1dId_Object = MibTableColumn
pmTcaSFPRxPowerMin1dId = _PmTcaSFPRxPowerMin1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 2),
    _PmTcaSFPRxPowerMin1dId_Type()
)
pmTcaSFPRxPowerMin1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dId.setStatus("current")


class _PmTcaSFPRxPowerMin1dUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMin1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMin1dUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMin1dUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMin1dUnitType = _PmTcaSFPRxPowerMin1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 3),
    _PmTcaSFPRxPowerMin1dUnitType_Type()
)
pmTcaSFPRxPowerMin1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dUnitType.setStatus("current")
_PmTcaSFPRxPowerMin1dCnt_Type = Counter64
_PmTcaSFPRxPowerMin1dCnt_Object = MibTableColumn
pmTcaSFPRxPowerMin1dCnt = _PmTcaSFPRxPowerMin1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 4),
    _PmTcaSFPRxPowerMin1dCnt_Type()
)
pmTcaSFPRxPowerMin1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dCnt.setStatus("current")
_PmTcaSFPRxPowerMin1dThreshold_Type = Counter64
_PmTcaSFPRxPowerMin1dThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMin1dThreshold = _PmTcaSFPRxPowerMin1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 5),
    _PmTcaSFPRxPowerMin1dThreshold_Type()
)
pmTcaSFPRxPowerMin1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dThreshold.setStatus("current")
_PmTcaSFPRxPowerMin1dOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMin1dOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMin1dOccurTime = _PmTcaSFPRxPowerMin1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 9, 1, 6),
    _PmTcaSFPRxPowerMin1dOccurTime_Type()
)
pmTcaSFPRxPowerMin1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMin1dOccurTime.setStatus("current")
_PmTcaSFPRxPowerMax15mTable_Object = MibTable
pmTcaSFPRxPowerMax15mTable = _PmTcaSFPRxPowerMax15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mTable.setStatus("current")
_PmTcaSFPRxPowerMax15mEntry_Object = MibTableRow
pmTcaSFPRxPowerMax15mEntry = _PmTcaSFPRxPowerMax15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1)
)
pmTcaSFPRxPowerMax15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMax15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mEntry.setStatus("current")
_PmTcaSFPRxPowerMax15mIndex_Type = Integer32
_PmTcaSFPRxPowerMax15mIndex_Object = MibTableColumn
pmTcaSFPRxPowerMax15mIndex = _PmTcaSFPRxPowerMax15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 1),
    _PmTcaSFPRxPowerMax15mIndex_Type()
)
pmTcaSFPRxPowerMax15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mIndex.setStatus("current")
_PmTcaSFPRxPowerMax15mId_Type = OctetString
_PmTcaSFPRxPowerMax15mId_Object = MibTableColumn
pmTcaSFPRxPowerMax15mId = _PmTcaSFPRxPowerMax15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 2),
    _PmTcaSFPRxPowerMax15mId_Type()
)
pmTcaSFPRxPowerMax15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mId.setStatus("current")


class _PmTcaSFPRxPowerMax15mUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMax15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMax15mUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMax15mUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMax15mUnitType = _PmTcaSFPRxPowerMax15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 3),
    _PmTcaSFPRxPowerMax15mUnitType_Type()
)
pmTcaSFPRxPowerMax15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mUnitType.setStatus("current")
_PmTcaSFPRxPowerMax15mCnt_Type = Counter64
_PmTcaSFPRxPowerMax15mCnt_Object = MibTableColumn
pmTcaSFPRxPowerMax15mCnt = _PmTcaSFPRxPowerMax15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 4),
    _PmTcaSFPRxPowerMax15mCnt_Type()
)
pmTcaSFPRxPowerMax15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mCnt.setStatus("current")
_PmTcaSFPRxPowerMax15mThreshold_Type = Counter64
_PmTcaSFPRxPowerMax15mThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMax15mThreshold = _PmTcaSFPRxPowerMax15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 5),
    _PmTcaSFPRxPowerMax15mThreshold_Type()
)
pmTcaSFPRxPowerMax15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mThreshold.setStatus("current")
_PmTcaSFPRxPowerMax15mOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMax15mOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMax15mOccurTime = _PmTcaSFPRxPowerMax15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 10, 1, 6),
    _PmTcaSFPRxPowerMax15mOccurTime_Type()
)
pmTcaSFPRxPowerMax15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax15mOccurTime.setStatus("current")
_PmTcaSFPRxPowerMax1hTable_Object = MibTable
pmTcaSFPRxPowerMax1hTable = _PmTcaSFPRxPowerMax1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hTable.setStatus("current")
_PmTcaSFPRxPowerMax1hEntry_Object = MibTableRow
pmTcaSFPRxPowerMax1hEntry = _PmTcaSFPRxPowerMax1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1)
)
pmTcaSFPRxPowerMax1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMax1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hEntry.setStatus("current")
_PmTcaSFPRxPowerMax1hIndex_Type = Integer32
_PmTcaSFPRxPowerMax1hIndex_Object = MibTableColumn
pmTcaSFPRxPowerMax1hIndex = _PmTcaSFPRxPowerMax1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 1),
    _PmTcaSFPRxPowerMax1hIndex_Type()
)
pmTcaSFPRxPowerMax1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hIndex.setStatus("current")
_PmTcaSFPRxPowerMax1hId_Type = OctetString
_PmTcaSFPRxPowerMax1hId_Object = MibTableColumn
pmTcaSFPRxPowerMax1hId = _PmTcaSFPRxPowerMax1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 2),
    _PmTcaSFPRxPowerMax1hId_Type()
)
pmTcaSFPRxPowerMax1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hId.setStatus("current")


class _PmTcaSFPRxPowerMax1hUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMax1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMax1hUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMax1hUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMax1hUnitType = _PmTcaSFPRxPowerMax1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 3),
    _PmTcaSFPRxPowerMax1hUnitType_Type()
)
pmTcaSFPRxPowerMax1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hUnitType.setStatus("current")
_PmTcaSFPRxPowerMax1hCnt_Type = Counter64
_PmTcaSFPRxPowerMax1hCnt_Object = MibTableColumn
pmTcaSFPRxPowerMax1hCnt = _PmTcaSFPRxPowerMax1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 4),
    _PmTcaSFPRxPowerMax1hCnt_Type()
)
pmTcaSFPRxPowerMax1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hCnt.setStatus("current")
_PmTcaSFPRxPowerMax1hThreshold_Type = Counter64
_PmTcaSFPRxPowerMax1hThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMax1hThreshold = _PmTcaSFPRxPowerMax1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 5),
    _PmTcaSFPRxPowerMax1hThreshold_Type()
)
pmTcaSFPRxPowerMax1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hThreshold.setStatus("current")
_PmTcaSFPRxPowerMax1hOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMax1hOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMax1hOccurTime = _PmTcaSFPRxPowerMax1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 11, 1, 6),
    _PmTcaSFPRxPowerMax1hOccurTime_Type()
)
pmTcaSFPRxPowerMax1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1hOccurTime.setStatus("current")
_PmTcaSFPRxPowerMax1dTable_Object = MibTable
pmTcaSFPRxPowerMax1dTable = _PmTcaSFPRxPowerMax1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12)
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dTable.setStatus("current")
_PmTcaSFPRxPowerMax1dEntry_Object = MibTableRow
pmTcaSFPRxPowerMax1dEntry = _PmTcaSFPRxPowerMax1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1)
)
pmTcaSFPRxPowerMax1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPRxPowerMax1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dEntry.setStatus("current")
_PmTcaSFPRxPowerMax1dIndex_Type = Integer32
_PmTcaSFPRxPowerMax1dIndex_Object = MibTableColumn
pmTcaSFPRxPowerMax1dIndex = _PmTcaSFPRxPowerMax1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 1),
    _PmTcaSFPRxPowerMax1dIndex_Type()
)
pmTcaSFPRxPowerMax1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dIndex.setStatus("current")
_PmTcaSFPRxPowerMax1dId_Type = OctetString
_PmTcaSFPRxPowerMax1dId_Object = MibTableColumn
pmTcaSFPRxPowerMax1dId = _PmTcaSFPRxPowerMax1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 2),
    _PmTcaSFPRxPowerMax1dId_Type()
)
pmTcaSFPRxPowerMax1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dId.setStatus("current")


class _PmTcaSFPRxPowerMax1dUnitType_Type(Integer32):
    """Custom type pmTcaSFPRxPowerMax1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPRxPowerMax1dUnitType_Type.__name__ = "Integer32"
_PmTcaSFPRxPowerMax1dUnitType_Object = MibTableColumn
pmTcaSFPRxPowerMax1dUnitType = _PmTcaSFPRxPowerMax1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 3),
    _PmTcaSFPRxPowerMax1dUnitType_Type()
)
pmTcaSFPRxPowerMax1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dUnitType.setStatus("current")
_PmTcaSFPRxPowerMax1dCnt_Type = Counter64
_PmTcaSFPRxPowerMax1dCnt_Object = MibTableColumn
pmTcaSFPRxPowerMax1dCnt = _PmTcaSFPRxPowerMax1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 4),
    _PmTcaSFPRxPowerMax1dCnt_Type()
)
pmTcaSFPRxPowerMax1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dCnt.setStatus("current")
_PmTcaSFPRxPowerMax1dThreshold_Type = Counter64
_PmTcaSFPRxPowerMax1dThreshold_Object = MibTableColumn
pmTcaSFPRxPowerMax1dThreshold = _PmTcaSFPRxPowerMax1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 5),
    _PmTcaSFPRxPowerMax1dThreshold_Type()
)
pmTcaSFPRxPowerMax1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dThreshold.setStatus("current")
_PmTcaSFPRxPowerMax1dOccurTime_Type = DateAndTime
_PmTcaSFPRxPowerMax1dOccurTime_Object = MibTableColumn
pmTcaSFPRxPowerMax1dOccurTime = _PmTcaSFPRxPowerMax1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 12, 1, 6),
    _PmTcaSFPRxPowerMax1dOccurTime_Type()
)
pmTcaSFPRxPowerMax1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPRxPowerMax1dOccurTime.setStatus("current")
_PmTcaSFPTxPowerMin15mTable_Object = MibTable
pmTcaSFPTxPowerMin15mTable = _PmTcaSFPTxPowerMin15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mTable.setStatus("current")
_PmTcaSFPTxPowerMin15mEntry_Object = MibTableRow
pmTcaSFPTxPowerMin15mEntry = _PmTcaSFPTxPowerMin15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1)
)
pmTcaSFPTxPowerMin15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMin15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mEntry.setStatus("current")
_PmTcaSFPTxPowerMin15mIndex_Type = Integer32
_PmTcaSFPTxPowerMin15mIndex_Object = MibTableColumn
pmTcaSFPTxPowerMin15mIndex = _PmTcaSFPTxPowerMin15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 1),
    _PmTcaSFPTxPowerMin15mIndex_Type()
)
pmTcaSFPTxPowerMin15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mIndex.setStatus("current")
_PmTcaSFPTxPowerMin15mId_Type = OctetString
_PmTcaSFPTxPowerMin15mId_Object = MibTableColumn
pmTcaSFPTxPowerMin15mId = _PmTcaSFPTxPowerMin15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 2),
    _PmTcaSFPTxPowerMin15mId_Type()
)
pmTcaSFPTxPowerMin15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mId.setStatus("current")


class _PmTcaSFPTxPowerMin15mUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMin15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMin15mUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMin15mUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMin15mUnitType = _PmTcaSFPTxPowerMin15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 3),
    _PmTcaSFPTxPowerMin15mUnitType_Type()
)
pmTcaSFPTxPowerMin15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mUnitType.setStatus("current")
_PmTcaSFPTxPowerMin15mCnt_Type = Counter64
_PmTcaSFPTxPowerMin15mCnt_Object = MibTableColumn
pmTcaSFPTxPowerMin15mCnt = _PmTcaSFPTxPowerMin15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 4),
    _PmTcaSFPTxPowerMin15mCnt_Type()
)
pmTcaSFPTxPowerMin15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mCnt.setStatus("current")
_PmTcaSFPTxPowerMin15mThreshold_Type = Counter64
_PmTcaSFPTxPowerMin15mThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMin15mThreshold = _PmTcaSFPTxPowerMin15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 5),
    _PmTcaSFPTxPowerMin15mThreshold_Type()
)
pmTcaSFPTxPowerMin15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mThreshold.setStatus("current")
_PmTcaSFPTxPowerMin15mOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMin15mOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMin15mOccurTime = _PmTcaSFPTxPowerMin15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 13, 1, 6),
    _PmTcaSFPTxPowerMin15mOccurTime_Type()
)
pmTcaSFPTxPowerMin15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin15mOccurTime.setStatus("current")
_PmTcaSFPTxPowerMin1hTable_Object = MibTable
pmTcaSFPTxPowerMin1hTable = _PmTcaSFPTxPowerMin1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hTable.setStatus("current")
_PmTcaSFPTxPowerMin1hEntry_Object = MibTableRow
pmTcaSFPTxPowerMin1hEntry = _PmTcaSFPTxPowerMin1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1)
)
pmTcaSFPTxPowerMin1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMin1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hEntry.setStatus("current")
_PmTcaSFPTxPowerMin1hIndex_Type = Integer32
_PmTcaSFPTxPowerMin1hIndex_Object = MibTableColumn
pmTcaSFPTxPowerMin1hIndex = _PmTcaSFPTxPowerMin1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 1),
    _PmTcaSFPTxPowerMin1hIndex_Type()
)
pmTcaSFPTxPowerMin1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hIndex.setStatus("current")
_PmTcaSFPTxPowerMin1hId_Type = OctetString
_PmTcaSFPTxPowerMin1hId_Object = MibTableColumn
pmTcaSFPTxPowerMin1hId = _PmTcaSFPTxPowerMin1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 2),
    _PmTcaSFPTxPowerMin1hId_Type()
)
pmTcaSFPTxPowerMin1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hId.setStatus("current")


class _PmTcaSFPTxPowerMin1hUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMin1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMin1hUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMin1hUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMin1hUnitType = _PmTcaSFPTxPowerMin1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 3),
    _PmTcaSFPTxPowerMin1hUnitType_Type()
)
pmTcaSFPTxPowerMin1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hUnitType.setStatus("current")
_PmTcaSFPTxPowerMin1hCnt_Type = Counter64
_PmTcaSFPTxPowerMin1hCnt_Object = MibTableColumn
pmTcaSFPTxPowerMin1hCnt = _PmTcaSFPTxPowerMin1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 4),
    _PmTcaSFPTxPowerMin1hCnt_Type()
)
pmTcaSFPTxPowerMin1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hCnt.setStatus("current")
_PmTcaSFPTxPowerMin1hThreshold_Type = Counter64
_PmTcaSFPTxPowerMin1hThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMin1hThreshold = _PmTcaSFPTxPowerMin1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 5),
    _PmTcaSFPTxPowerMin1hThreshold_Type()
)
pmTcaSFPTxPowerMin1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hThreshold.setStatus("current")
_PmTcaSFPTxPowerMin1hOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMin1hOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMin1hOccurTime = _PmTcaSFPTxPowerMin1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 14, 1, 6),
    _PmTcaSFPTxPowerMin1hOccurTime_Type()
)
pmTcaSFPTxPowerMin1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1hOccurTime.setStatus("current")
_PmTcaSFPTxPowerMin1dTable_Object = MibTable
pmTcaSFPTxPowerMin1dTable = _PmTcaSFPTxPowerMin1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dTable.setStatus("current")
_PmTcaSFPTxPowerMin1dEntry_Object = MibTableRow
pmTcaSFPTxPowerMin1dEntry = _PmTcaSFPTxPowerMin1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1)
)
pmTcaSFPTxPowerMin1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMin1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dEntry.setStatus("current")
_PmTcaSFPTxPowerMin1dIndex_Type = Integer32
_PmTcaSFPTxPowerMin1dIndex_Object = MibTableColumn
pmTcaSFPTxPowerMin1dIndex = _PmTcaSFPTxPowerMin1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 1),
    _PmTcaSFPTxPowerMin1dIndex_Type()
)
pmTcaSFPTxPowerMin1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dIndex.setStatus("current")
_PmTcaSFPTxPowerMin1dId_Type = OctetString
_PmTcaSFPTxPowerMin1dId_Object = MibTableColumn
pmTcaSFPTxPowerMin1dId = _PmTcaSFPTxPowerMin1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 2),
    _PmTcaSFPTxPowerMin1dId_Type()
)
pmTcaSFPTxPowerMin1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dId.setStatus("current")


class _PmTcaSFPTxPowerMin1dUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMin1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMin1dUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMin1dUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMin1dUnitType = _PmTcaSFPTxPowerMin1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 3),
    _PmTcaSFPTxPowerMin1dUnitType_Type()
)
pmTcaSFPTxPowerMin1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dUnitType.setStatus("current")
_PmTcaSFPTxPowerMin1dCnt_Type = Counter64
_PmTcaSFPTxPowerMin1dCnt_Object = MibTableColumn
pmTcaSFPTxPowerMin1dCnt = _PmTcaSFPTxPowerMin1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 4),
    _PmTcaSFPTxPowerMin1dCnt_Type()
)
pmTcaSFPTxPowerMin1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dCnt.setStatus("current")
_PmTcaSFPTxPowerMin1dThreshold_Type = Counter64
_PmTcaSFPTxPowerMin1dThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMin1dThreshold = _PmTcaSFPTxPowerMin1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 5),
    _PmTcaSFPTxPowerMin1dThreshold_Type()
)
pmTcaSFPTxPowerMin1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dThreshold.setStatus("current")
_PmTcaSFPTxPowerMin1dOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMin1dOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMin1dOccurTime = _PmTcaSFPTxPowerMin1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 15, 1, 6),
    _PmTcaSFPTxPowerMin1dOccurTime_Type()
)
pmTcaSFPTxPowerMin1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMin1dOccurTime.setStatus("current")
_PmTcaSFPTxPowerMax15mTable_Object = MibTable
pmTcaSFPTxPowerMax15mTable = _PmTcaSFPTxPowerMax15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mTable.setStatus("current")
_PmTcaSFPTxPowerMax15mEntry_Object = MibTableRow
pmTcaSFPTxPowerMax15mEntry = _PmTcaSFPTxPowerMax15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1)
)
pmTcaSFPTxPowerMax15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMax15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mEntry.setStatus("current")
_PmTcaSFPTxPowerMax15mIndex_Type = Integer32
_PmTcaSFPTxPowerMax15mIndex_Object = MibTableColumn
pmTcaSFPTxPowerMax15mIndex = _PmTcaSFPTxPowerMax15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 1),
    _PmTcaSFPTxPowerMax15mIndex_Type()
)
pmTcaSFPTxPowerMax15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mIndex.setStatus("current")
_PmTcaSFPTxPowerMax15mId_Type = OctetString
_PmTcaSFPTxPowerMax15mId_Object = MibTableColumn
pmTcaSFPTxPowerMax15mId = _PmTcaSFPTxPowerMax15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 2),
    _PmTcaSFPTxPowerMax15mId_Type()
)
pmTcaSFPTxPowerMax15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mId.setStatus("current")


class _PmTcaSFPTxPowerMax15mUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMax15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMax15mUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMax15mUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMax15mUnitType = _PmTcaSFPTxPowerMax15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 3),
    _PmTcaSFPTxPowerMax15mUnitType_Type()
)
pmTcaSFPTxPowerMax15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mUnitType.setStatus("current")
_PmTcaSFPTxPowerMax15mCnt_Type = Counter64
_PmTcaSFPTxPowerMax15mCnt_Object = MibTableColumn
pmTcaSFPTxPowerMax15mCnt = _PmTcaSFPTxPowerMax15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 4),
    _PmTcaSFPTxPowerMax15mCnt_Type()
)
pmTcaSFPTxPowerMax15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mCnt.setStatus("current")
_PmTcaSFPTxPowerMax15mThreshold_Type = Counter64
_PmTcaSFPTxPowerMax15mThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMax15mThreshold = _PmTcaSFPTxPowerMax15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 5),
    _PmTcaSFPTxPowerMax15mThreshold_Type()
)
pmTcaSFPTxPowerMax15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mThreshold.setStatus("current")
_PmTcaSFPTxPowerMax15mOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMax15mOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMax15mOccurTime = _PmTcaSFPTxPowerMax15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 16, 1, 6),
    _PmTcaSFPTxPowerMax15mOccurTime_Type()
)
pmTcaSFPTxPowerMax15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax15mOccurTime.setStatus("current")
_PmTcaSFPTxPowerMax1hTable_Object = MibTable
pmTcaSFPTxPowerMax1hTable = _PmTcaSFPTxPowerMax1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hTable.setStatus("current")
_PmTcaSFPTxPowerMax1hEntry_Object = MibTableRow
pmTcaSFPTxPowerMax1hEntry = _PmTcaSFPTxPowerMax1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1)
)
pmTcaSFPTxPowerMax1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMax1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hEntry.setStatus("current")
_PmTcaSFPTxPowerMax1hIndex_Type = Integer32
_PmTcaSFPTxPowerMax1hIndex_Object = MibTableColumn
pmTcaSFPTxPowerMax1hIndex = _PmTcaSFPTxPowerMax1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 1),
    _PmTcaSFPTxPowerMax1hIndex_Type()
)
pmTcaSFPTxPowerMax1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hIndex.setStatus("current")
_PmTcaSFPTxPowerMax1hId_Type = OctetString
_PmTcaSFPTxPowerMax1hId_Object = MibTableColumn
pmTcaSFPTxPowerMax1hId = _PmTcaSFPTxPowerMax1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 2),
    _PmTcaSFPTxPowerMax1hId_Type()
)
pmTcaSFPTxPowerMax1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hId.setStatus("current")


class _PmTcaSFPTxPowerMax1hUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMax1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMax1hUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMax1hUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMax1hUnitType = _PmTcaSFPTxPowerMax1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 3),
    _PmTcaSFPTxPowerMax1hUnitType_Type()
)
pmTcaSFPTxPowerMax1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hUnitType.setStatus("current")
_PmTcaSFPTxPowerMax1hCnt_Type = Counter64
_PmTcaSFPTxPowerMax1hCnt_Object = MibTableColumn
pmTcaSFPTxPowerMax1hCnt = _PmTcaSFPTxPowerMax1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 4),
    _PmTcaSFPTxPowerMax1hCnt_Type()
)
pmTcaSFPTxPowerMax1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hCnt.setStatus("current")
_PmTcaSFPTxPowerMax1hThreshold_Type = Counter64
_PmTcaSFPTxPowerMax1hThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMax1hThreshold = _PmTcaSFPTxPowerMax1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 5),
    _PmTcaSFPTxPowerMax1hThreshold_Type()
)
pmTcaSFPTxPowerMax1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hThreshold.setStatus("current")
_PmTcaSFPTxPowerMax1hOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMax1hOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMax1hOccurTime = _PmTcaSFPTxPowerMax1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 17, 1, 6),
    _PmTcaSFPTxPowerMax1hOccurTime_Type()
)
pmTcaSFPTxPowerMax1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1hOccurTime.setStatus("current")
_PmTcaSFPTxPowerMax1dTable_Object = MibTable
pmTcaSFPTxPowerMax1dTable = _PmTcaSFPTxPowerMax1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18)
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dTable.setStatus("current")
_PmTcaSFPTxPowerMax1dEntry_Object = MibTableRow
pmTcaSFPTxPowerMax1dEntry = _PmTcaSFPTxPowerMax1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1)
)
pmTcaSFPTxPowerMax1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaSFPTxPowerMax1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dEntry.setStatus("current")
_PmTcaSFPTxPowerMax1dIndex_Type = Integer32
_PmTcaSFPTxPowerMax1dIndex_Object = MibTableColumn
pmTcaSFPTxPowerMax1dIndex = _PmTcaSFPTxPowerMax1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 1),
    _PmTcaSFPTxPowerMax1dIndex_Type()
)
pmTcaSFPTxPowerMax1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dIndex.setStatus("current")
_PmTcaSFPTxPowerMax1dId_Type = OctetString
_PmTcaSFPTxPowerMax1dId_Object = MibTableColumn
pmTcaSFPTxPowerMax1dId = _PmTcaSFPTxPowerMax1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 2),
    _PmTcaSFPTxPowerMax1dId_Type()
)
pmTcaSFPTxPowerMax1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dId.setStatus("current")


class _PmTcaSFPTxPowerMax1dUnitType_Type(Integer32):
    """Custom type pmTcaSFPTxPowerMax1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaSFPTxPowerMax1dUnitType_Type.__name__ = "Integer32"
_PmTcaSFPTxPowerMax1dUnitType_Object = MibTableColumn
pmTcaSFPTxPowerMax1dUnitType = _PmTcaSFPTxPowerMax1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 3),
    _PmTcaSFPTxPowerMax1dUnitType_Type()
)
pmTcaSFPTxPowerMax1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dUnitType.setStatus("current")
_PmTcaSFPTxPowerMax1dCnt_Type = Counter64
_PmTcaSFPTxPowerMax1dCnt_Object = MibTableColumn
pmTcaSFPTxPowerMax1dCnt = _PmTcaSFPTxPowerMax1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 4),
    _PmTcaSFPTxPowerMax1dCnt_Type()
)
pmTcaSFPTxPowerMax1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dCnt.setStatus("current")
_PmTcaSFPTxPowerMax1dThreshold_Type = Counter64
_PmTcaSFPTxPowerMax1dThreshold_Object = MibTableColumn
pmTcaSFPTxPowerMax1dThreshold = _PmTcaSFPTxPowerMax1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 5),
    _PmTcaSFPTxPowerMax1dThreshold_Type()
)
pmTcaSFPTxPowerMax1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dThreshold.setStatus("current")
_PmTcaSFPTxPowerMax1dOccurTime_Type = DateAndTime
_PmTcaSFPTxPowerMax1dOccurTime_Object = MibTableColumn
pmTcaSFPTxPowerMax1dOccurTime = _PmTcaSFPTxPowerMax1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 101, 18, 1, 6),
    _PmTcaSFPTxPowerMax1dOccurTime_Type()
)
pmTcaSFPTxPowerMax1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaSFPTxPowerMax1dOccurTime.setStatus("current")
_PmIfStatistics_ObjectIdentity = ObjectIdentity
pmIfStatistics = _PmIfStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102)
)
_PmIfStatCurr15mTable_Object = MibTable
pmIfStatCurr15mTable = _PmIfStatCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1)
)
if mibBuilder.loadTexts:
    pmIfStatCurr15mTable.setStatus("current")
_PmIfStatCurr15mEntry_Object = MibTableRow
pmIfStatCurr15mEntry = _PmIfStatCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1)
)
pmIfStatCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatCurr15mEntry.setStatus("current")
_PmIfStatCurr15mIndex_Type = Integer32
_PmIfStatCurr15mIndex_Object = MibTableColumn
pmIfStatCurr15mIndex = _PmIfStatCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 1),
    _PmIfStatCurr15mIndex_Type()
)
pmIfStatCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatCurr15mIndex.setStatus("current")
_PmIfStatCurr15mId_Type = OctetString
_PmIfStatCurr15mId_Object = MibTableColumn
pmIfStatCurr15mId = _PmIfStatCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 2),
    _PmIfStatCurr15mId_Type()
)
pmIfStatCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mId.setStatus("current")


class _PmIfStatCurr15mUnitType_Type(Integer32):
    """Custom type pmIfStatCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatCurr15mUnitType_Type.__name__ = "Integer32"
_PmIfStatCurr15mUnitType_Object = MibTableColumn
pmIfStatCurr15mUnitType = _PmIfStatCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 3),
    _PmIfStatCurr15mUnitType_Type()
)
pmIfStatCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mUnitType.setStatus("current")
_PmIfStatCurr15mDropped_Type = Counter64
_PmIfStatCurr15mDropped_Object = MibTableColumn
pmIfStatCurr15mDropped = _PmIfStatCurr15mDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 4),
    _PmIfStatCurr15mDropped_Type()
)
pmIfStatCurr15mDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mDropped.setStatus("current")
_PmIfStatCurr15mInputPkts_Type = Counter64
_PmIfStatCurr15mInputPkts_Object = MibTableColumn
pmIfStatCurr15mInputPkts = _PmIfStatCurr15mInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 5),
    _PmIfStatCurr15mInputPkts_Type()
)
pmIfStatCurr15mInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mInputPkts.setStatus("current")
_PmIfStatCurr15mInputbytes_Type = Counter64
_PmIfStatCurr15mInputbytes_Object = MibTableColumn
pmIfStatCurr15mInputbytes = _PmIfStatCurr15mInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 6),
    _PmIfStatCurr15mInputbytes_Type()
)
pmIfStatCurr15mInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mInputbytes.setStatus("current")
_PmIfStatCurr15mCrcErrors_Type = Counter64
_PmIfStatCurr15mCrcErrors_Object = MibTableColumn
pmIfStatCurr15mCrcErrors = _PmIfStatCurr15mCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 7),
    _PmIfStatCurr15mCrcErrors_Type()
)
pmIfStatCurr15mCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mCrcErrors.setStatus("current")
_PmIfStatCurr15mInputBrdCst_Type = Counter64
_PmIfStatCurr15mInputBrdCst_Object = MibTableColumn
pmIfStatCurr15mInputBrdCst = _PmIfStatCurr15mInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 8),
    _PmIfStatCurr15mInputBrdCst_Type()
)
pmIfStatCurr15mInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mInputBrdCst.setStatus("current")
_PmIfStatCurr15mInputMltCst_Type = Counter64
_PmIfStatCurr15mInputMltCst_Object = MibTableColumn
pmIfStatCurr15mInputMltCst = _PmIfStatCurr15mInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 9),
    _PmIfStatCurr15mInputMltCst_Type()
)
pmIfStatCurr15mInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mInputMltCst.setStatus("current")
_PmIfStatCurr15mCollision_Type = Counter64
_PmIfStatCurr15mCollision_Object = MibTableColumn
pmIfStatCurr15mCollision = _PmIfStatCurr15mCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 10),
    _PmIfStatCurr15mCollision_Type()
)
pmIfStatCurr15mCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mCollision.setStatus("current")
_PmIfStatCurr15mUndersized_Type = Counter64
_PmIfStatCurr15mUndersized_Object = MibTableColumn
pmIfStatCurr15mUndersized = _PmIfStatCurr15mUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 11),
    _PmIfStatCurr15mUndersized_Type()
)
pmIfStatCurr15mUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mUndersized.setStatus("current")
_PmIfStatCurr15mOversized_Type = Counter64
_PmIfStatCurr15mOversized_Object = MibTableColumn
pmIfStatCurr15mOversized = _PmIfStatCurr15mOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 12),
    _PmIfStatCurr15mOversized_Type()
)
pmIfStatCurr15mOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mOversized.setStatus("current")
_PmIfStatCurr15mFragments_Type = Counter64
_PmIfStatCurr15mFragments_Object = MibTableColumn
pmIfStatCurr15mFragments = _PmIfStatCurr15mFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 13),
    _PmIfStatCurr15mFragments_Type()
)
pmIfStatCurr15mFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mFragments.setStatus("current")
_PmIfStatCurr15mJabbers_Type = Counter64
_PmIfStatCurr15mJabbers_Object = MibTableColumn
pmIfStatCurr15mJabbers = _PmIfStatCurr15mJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 14),
    _PmIfStatCurr15mJabbers_Type()
)
pmIfStatCurr15mJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mJabbers.setStatus("current")
_PmIfStatCurr15mPkt64_Type = Counter64
_PmIfStatCurr15mPkt64_Object = MibTableColumn
pmIfStatCurr15mPkt64 = _PmIfStatCurr15mPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 15),
    _PmIfStatCurr15mPkt64_Type()
)
pmIfStatCurr15mPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt64.setStatus("current")
_PmIfStatCurr15mPkt65To127_Type = Counter64
_PmIfStatCurr15mPkt65To127_Object = MibTableColumn
pmIfStatCurr15mPkt65To127 = _PmIfStatCurr15mPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 16),
    _PmIfStatCurr15mPkt65To127_Type()
)
pmIfStatCurr15mPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt65To127.setStatus("current")
_PmIfStatCurr15mPkt128To255_Type = Counter64
_PmIfStatCurr15mPkt128To255_Object = MibTableColumn
pmIfStatCurr15mPkt128To255 = _PmIfStatCurr15mPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 17),
    _PmIfStatCurr15mPkt128To255_Type()
)
pmIfStatCurr15mPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt128To255.setStatus("current")
_PmIfStatCurr15mPkt256To511_Type = Counter64
_PmIfStatCurr15mPkt256To511_Object = MibTableColumn
pmIfStatCurr15mPkt256To511 = _PmIfStatCurr15mPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 18),
    _PmIfStatCurr15mPkt256To511_Type()
)
pmIfStatCurr15mPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt256To511.setStatus("current")
_PmIfStatCurr15mPkt512To1023_Type = Counter64
_PmIfStatCurr15mPkt512To1023_Object = MibTableColumn
pmIfStatCurr15mPkt512To1023 = _PmIfStatCurr15mPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 19),
    _PmIfStatCurr15mPkt512To1023_Type()
)
pmIfStatCurr15mPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt512To1023.setStatus("current")
_PmIfStatCurr15mPkt1024_Type = Counter64
_PmIfStatCurr15mPkt1024_Object = MibTableColumn
pmIfStatCurr15mPkt1024 = _PmIfStatCurr15mPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 20),
    _PmIfStatCurr15mPkt1024_Type()
)
pmIfStatCurr15mPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mPkt1024.setStatus("current")
_PmIfStatCurr15mOutputPkts_Type = Counter64
_PmIfStatCurr15mOutputPkts_Object = MibTableColumn
pmIfStatCurr15mOutputPkts = _PmIfStatCurr15mOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 21),
    _PmIfStatCurr15mOutputPkts_Type()
)
pmIfStatCurr15mOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mOutputPkts.setStatus("current")
_PmIfStatCurr15mOutputBytes_Type = Counter64
_PmIfStatCurr15mOutputBytes_Object = MibTableColumn
pmIfStatCurr15mOutputBytes = _PmIfStatCurr15mOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 22),
    _PmIfStatCurr15mOutputBytes_Type()
)
pmIfStatCurr15mOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mOutputBytes.setStatus("current")
_PmIfStatCurr15mStartTime_Type = DateAndTime
_PmIfStatCurr15mStartTime_Object = MibTableColumn
pmIfStatCurr15mStartTime = _PmIfStatCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 100),
    _PmIfStatCurr15mStartTime_Type()
)
pmIfStatCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mStartTime.setStatus("current")
_PmIfStatCurr15mStopTime_Type = DateAndTime
_PmIfStatCurr15mStopTime_Object = MibTableColumn
pmIfStatCurr15mStopTime = _PmIfStatCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 1, 1, 101),
    _PmIfStatCurr15mStopTime_Type()
)
pmIfStatCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr15mStopTime.setStatus("current")
_PmIfStatPrev15mTable_Object = MibTable
pmIfStatPrev15mTable = _PmIfStatPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2)
)
if mibBuilder.loadTexts:
    pmIfStatPrev15mTable.setStatus("current")
_PmIfStatPrev15mEntry_Object = MibTableRow
pmIfStatPrev15mEntry = _PmIfStatPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1)
)
pmIfStatPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatPrev15mEntry.setStatus("current")
_PmIfStatPrev15mIndex_Type = Integer32
_PmIfStatPrev15mIndex_Object = MibTableColumn
pmIfStatPrev15mIndex = _PmIfStatPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 1),
    _PmIfStatPrev15mIndex_Type()
)
pmIfStatPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatPrev15mIndex.setStatus("current")
_PmIfStatPrev15mId_Type = OctetString
_PmIfStatPrev15mId_Object = MibTableColumn
pmIfStatPrev15mId = _PmIfStatPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 2),
    _PmIfStatPrev15mId_Type()
)
pmIfStatPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mId.setStatus("current")


class _PmIfStatPrev15mUnitType_Type(Integer32):
    """Custom type pmIfStatPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatPrev15mUnitType_Type.__name__ = "Integer32"
_PmIfStatPrev15mUnitType_Object = MibTableColumn
pmIfStatPrev15mUnitType = _PmIfStatPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 3),
    _PmIfStatPrev15mUnitType_Type()
)
pmIfStatPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mUnitType.setStatus("current")
_PmIfStatPrev15mDropped_Type = Counter64
_PmIfStatPrev15mDropped_Object = MibTableColumn
pmIfStatPrev15mDropped = _PmIfStatPrev15mDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 4),
    _PmIfStatPrev15mDropped_Type()
)
pmIfStatPrev15mDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mDropped.setStatus("current")
_PmIfStatPrev15mInputPkts_Type = Counter64
_PmIfStatPrev15mInputPkts_Object = MibTableColumn
pmIfStatPrev15mInputPkts = _PmIfStatPrev15mInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 5),
    _PmIfStatPrev15mInputPkts_Type()
)
pmIfStatPrev15mInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mInputPkts.setStatus("current")
_PmIfStatPrev15mInputbytes_Type = Counter64
_PmIfStatPrev15mInputbytes_Object = MibTableColumn
pmIfStatPrev15mInputbytes = _PmIfStatPrev15mInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 6),
    _PmIfStatPrev15mInputbytes_Type()
)
pmIfStatPrev15mInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mInputbytes.setStatus("current")
_PmIfStatPrev15mCrcErrors_Type = Counter64
_PmIfStatPrev15mCrcErrors_Object = MibTableColumn
pmIfStatPrev15mCrcErrors = _PmIfStatPrev15mCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 7),
    _PmIfStatPrev15mCrcErrors_Type()
)
pmIfStatPrev15mCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mCrcErrors.setStatus("current")
_PmIfStatPrev15mInputBrdCst_Type = Counter64
_PmIfStatPrev15mInputBrdCst_Object = MibTableColumn
pmIfStatPrev15mInputBrdCst = _PmIfStatPrev15mInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 8),
    _PmIfStatPrev15mInputBrdCst_Type()
)
pmIfStatPrev15mInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mInputBrdCst.setStatus("current")
_PmIfStatPrev15mInputMltCst_Type = Counter64
_PmIfStatPrev15mInputMltCst_Object = MibTableColumn
pmIfStatPrev15mInputMltCst = _PmIfStatPrev15mInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 9),
    _PmIfStatPrev15mInputMltCst_Type()
)
pmIfStatPrev15mInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mInputMltCst.setStatus("current")
_PmIfStatPrev15mCollision_Type = Counter64
_PmIfStatPrev15mCollision_Object = MibTableColumn
pmIfStatPrev15mCollision = _PmIfStatPrev15mCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 10),
    _PmIfStatPrev15mCollision_Type()
)
pmIfStatPrev15mCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mCollision.setStatus("current")
_PmIfStatPrev15mUndersized_Type = Counter64
_PmIfStatPrev15mUndersized_Object = MibTableColumn
pmIfStatPrev15mUndersized = _PmIfStatPrev15mUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 11),
    _PmIfStatPrev15mUndersized_Type()
)
pmIfStatPrev15mUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mUndersized.setStatus("current")
_PmIfStatPrev15mOversized_Type = Counter64
_PmIfStatPrev15mOversized_Object = MibTableColumn
pmIfStatPrev15mOversized = _PmIfStatPrev15mOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 12),
    _PmIfStatPrev15mOversized_Type()
)
pmIfStatPrev15mOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mOversized.setStatus("current")
_PmIfStatPrev15mFragments_Type = Counter64
_PmIfStatPrev15mFragments_Object = MibTableColumn
pmIfStatPrev15mFragments = _PmIfStatPrev15mFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 13),
    _PmIfStatPrev15mFragments_Type()
)
pmIfStatPrev15mFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mFragments.setStatus("current")
_PmIfStatPrev15mJabbers_Type = Counter64
_PmIfStatPrev15mJabbers_Object = MibTableColumn
pmIfStatPrev15mJabbers = _PmIfStatPrev15mJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 14),
    _PmIfStatPrev15mJabbers_Type()
)
pmIfStatPrev15mJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mJabbers.setStatus("current")
_PmIfStatPrev15mPkt64_Type = Counter64
_PmIfStatPrev15mPkt64_Object = MibTableColumn
pmIfStatPrev15mPkt64 = _PmIfStatPrev15mPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 15),
    _PmIfStatPrev15mPkt64_Type()
)
pmIfStatPrev15mPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt64.setStatus("current")
_PmIfStatPrev15mPkt65To127_Type = Counter64
_PmIfStatPrev15mPkt65To127_Object = MibTableColumn
pmIfStatPrev15mPkt65To127 = _PmIfStatPrev15mPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 16),
    _PmIfStatPrev15mPkt65To127_Type()
)
pmIfStatPrev15mPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt65To127.setStatus("current")
_PmIfStatPrev15mPkt128To255_Type = Counter64
_PmIfStatPrev15mPkt128To255_Object = MibTableColumn
pmIfStatPrev15mPkt128To255 = _PmIfStatPrev15mPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 17),
    _PmIfStatPrev15mPkt128To255_Type()
)
pmIfStatPrev15mPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt128To255.setStatus("current")
_PmIfStatPrev15mPkt256To511_Type = Counter64
_PmIfStatPrev15mPkt256To511_Object = MibTableColumn
pmIfStatPrev15mPkt256To511 = _PmIfStatPrev15mPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 18),
    _PmIfStatPrev15mPkt256To511_Type()
)
pmIfStatPrev15mPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt256To511.setStatus("current")
_PmIfStatPrev15mPkt512To1023_Type = Counter64
_PmIfStatPrev15mPkt512To1023_Object = MibTableColumn
pmIfStatPrev15mPkt512To1023 = _PmIfStatPrev15mPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 19),
    _PmIfStatPrev15mPkt512To1023_Type()
)
pmIfStatPrev15mPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt512To1023.setStatus("current")
_PmIfStatPrev15mPkt1024_Type = Counter64
_PmIfStatPrev15mPkt1024_Object = MibTableColumn
pmIfStatPrev15mPkt1024 = _PmIfStatPrev15mPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 20),
    _PmIfStatPrev15mPkt1024_Type()
)
pmIfStatPrev15mPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mPkt1024.setStatus("current")
_PmIfStatPrev15mOutputPkts_Type = Counter64
_PmIfStatPrev15mOutputPkts_Object = MibTableColumn
pmIfStatPrev15mOutputPkts = _PmIfStatPrev15mOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 21),
    _PmIfStatPrev15mOutputPkts_Type()
)
pmIfStatPrev15mOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mOutputPkts.setStatus("current")
_PmIfStatPrev15mOutputBytes_Type = Counter64
_PmIfStatPrev15mOutputBytes_Object = MibTableColumn
pmIfStatPrev15mOutputBytes = _PmIfStatPrev15mOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 22),
    _PmIfStatPrev15mOutputBytes_Type()
)
pmIfStatPrev15mOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mOutputBytes.setStatus("current")
_PmIfStatPrev15mStartTime_Type = DateAndTime
_PmIfStatPrev15mStartTime_Object = MibTableColumn
pmIfStatPrev15mStartTime = _PmIfStatPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 100),
    _PmIfStatPrev15mStartTime_Type()
)
pmIfStatPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mStartTime.setStatus("current")
_PmIfStatPrev15mStopTime_Type = DateAndTime
_PmIfStatPrev15mStopTime_Object = MibTableColumn
pmIfStatPrev15mStopTime = _PmIfStatPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 2, 1, 101),
    _PmIfStatPrev15mStopTime_Type()
)
pmIfStatPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev15mStopTime.setStatus("current")
_PmIfStatCurr1hTable_Object = MibTable
pmIfStatCurr1hTable = _PmIfStatCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3)
)
if mibBuilder.loadTexts:
    pmIfStatCurr1hTable.setStatus("current")
_PmIfStatCurr1hEntry_Object = MibTableRow
pmIfStatCurr1hEntry = _PmIfStatCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1)
)
pmIfStatCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatCurr1hEntry.setStatus("current")
_PmIfStatCurr1hIndex_Type = Integer32
_PmIfStatCurr1hIndex_Object = MibTableColumn
pmIfStatCurr1hIndex = _PmIfStatCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 1),
    _PmIfStatCurr1hIndex_Type()
)
pmIfStatCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatCurr1hIndex.setStatus("current")
_PmIfStatCurr1hId_Type = OctetString
_PmIfStatCurr1hId_Object = MibTableColumn
pmIfStatCurr1hId = _PmIfStatCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 2),
    _PmIfStatCurr1hId_Type()
)
pmIfStatCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hId.setStatus("current")


class _PmIfStatCurr1hUnitType_Type(Integer32):
    """Custom type pmIfStatCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatCurr1hUnitType_Type.__name__ = "Integer32"
_PmIfStatCurr1hUnitType_Object = MibTableColumn
pmIfStatCurr1hUnitType = _PmIfStatCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 3),
    _PmIfStatCurr1hUnitType_Type()
)
pmIfStatCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hUnitType.setStatus("current")
_PmIfStatCurr1hDropped_Type = Counter64
_PmIfStatCurr1hDropped_Object = MibTableColumn
pmIfStatCurr1hDropped = _PmIfStatCurr1hDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 4),
    _PmIfStatCurr1hDropped_Type()
)
pmIfStatCurr1hDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hDropped.setStatus("current")
_PmIfStatCurr1hInputPkts_Type = Counter64
_PmIfStatCurr1hInputPkts_Object = MibTableColumn
pmIfStatCurr1hInputPkts = _PmIfStatCurr1hInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 5),
    _PmIfStatCurr1hInputPkts_Type()
)
pmIfStatCurr1hInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hInputPkts.setStatus("current")
_PmIfStatCurr1hInputbytes_Type = Counter64
_PmIfStatCurr1hInputbytes_Object = MibTableColumn
pmIfStatCurr1hInputbytes = _PmIfStatCurr1hInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 6),
    _PmIfStatCurr1hInputbytes_Type()
)
pmIfStatCurr1hInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hInputbytes.setStatus("current")
_PmIfStatCurr1hCrcErrors_Type = Counter64
_PmIfStatCurr1hCrcErrors_Object = MibTableColumn
pmIfStatCurr1hCrcErrors = _PmIfStatCurr1hCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 7),
    _PmIfStatCurr1hCrcErrors_Type()
)
pmIfStatCurr1hCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hCrcErrors.setStatus("current")
_PmIfStatCurr1hInputBrdCst_Type = Counter64
_PmIfStatCurr1hInputBrdCst_Object = MibTableColumn
pmIfStatCurr1hInputBrdCst = _PmIfStatCurr1hInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 8),
    _PmIfStatCurr1hInputBrdCst_Type()
)
pmIfStatCurr1hInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hInputBrdCst.setStatus("current")
_PmIfStatCurr1hInputMltCst_Type = Counter64
_PmIfStatCurr1hInputMltCst_Object = MibTableColumn
pmIfStatCurr1hInputMltCst = _PmIfStatCurr1hInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 9),
    _PmIfStatCurr1hInputMltCst_Type()
)
pmIfStatCurr1hInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hInputMltCst.setStatus("current")
_PmIfStatCurr1hCollision_Type = Counter64
_PmIfStatCurr1hCollision_Object = MibTableColumn
pmIfStatCurr1hCollision = _PmIfStatCurr1hCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 10),
    _PmIfStatCurr1hCollision_Type()
)
pmIfStatCurr1hCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hCollision.setStatus("current")
_PmIfStatCurr1hUndersized_Type = Counter64
_PmIfStatCurr1hUndersized_Object = MibTableColumn
pmIfStatCurr1hUndersized = _PmIfStatCurr1hUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 11),
    _PmIfStatCurr1hUndersized_Type()
)
pmIfStatCurr1hUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hUndersized.setStatus("current")
_PmIfStatCurr1hOversized_Type = Counter64
_PmIfStatCurr1hOversized_Object = MibTableColumn
pmIfStatCurr1hOversized = _PmIfStatCurr1hOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 12),
    _PmIfStatCurr1hOversized_Type()
)
pmIfStatCurr1hOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hOversized.setStatus("current")
_PmIfStatCurr1hFragments_Type = Counter64
_PmIfStatCurr1hFragments_Object = MibTableColumn
pmIfStatCurr1hFragments = _PmIfStatCurr1hFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 13),
    _PmIfStatCurr1hFragments_Type()
)
pmIfStatCurr1hFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hFragments.setStatus("current")
_PmIfStatCurr1hJabbers_Type = Counter64
_PmIfStatCurr1hJabbers_Object = MibTableColumn
pmIfStatCurr1hJabbers = _PmIfStatCurr1hJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 14),
    _PmIfStatCurr1hJabbers_Type()
)
pmIfStatCurr1hJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hJabbers.setStatus("current")
_PmIfStatCurr1hPkt64_Type = Counter64
_PmIfStatCurr1hPkt64_Object = MibTableColumn
pmIfStatCurr1hPkt64 = _PmIfStatCurr1hPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 15),
    _PmIfStatCurr1hPkt64_Type()
)
pmIfStatCurr1hPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt64.setStatus("current")
_PmIfStatCurr1hPkt65To127_Type = Counter64
_PmIfStatCurr1hPkt65To127_Object = MibTableColumn
pmIfStatCurr1hPkt65To127 = _PmIfStatCurr1hPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 16),
    _PmIfStatCurr1hPkt65To127_Type()
)
pmIfStatCurr1hPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt65To127.setStatus("current")
_PmIfStatCurr1hPkt128To255_Type = Counter64
_PmIfStatCurr1hPkt128To255_Object = MibTableColumn
pmIfStatCurr1hPkt128To255 = _PmIfStatCurr1hPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 17),
    _PmIfStatCurr1hPkt128To255_Type()
)
pmIfStatCurr1hPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt128To255.setStatus("current")
_PmIfStatCurr1hPkt256To511_Type = Counter64
_PmIfStatCurr1hPkt256To511_Object = MibTableColumn
pmIfStatCurr1hPkt256To511 = _PmIfStatCurr1hPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 18),
    _PmIfStatCurr1hPkt256To511_Type()
)
pmIfStatCurr1hPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt256To511.setStatus("current")
_PmIfStatCurr1hPkt512To1023_Type = Counter64
_PmIfStatCurr1hPkt512To1023_Object = MibTableColumn
pmIfStatCurr1hPkt512To1023 = _PmIfStatCurr1hPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 19),
    _PmIfStatCurr1hPkt512To1023_Type()
)
pmIfStatCurr1hPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt512To1023.setStatus("current")
_PmIfStatCurr1hPkt1024_Type = Counter64
_PmIfStatCurr1hPkt1024_Object = MibTableColumn
pmIfStatCurr1hPkt1024 = _PmIfStatCurr1hPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 20),
    _PmIfStatCurr1hPkt1024_Type()
)
pmIfStatCurr1hPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hPkt1024.setStatus("current")
_PmIfStatCurr1hOutputPkts_Type = Counter64
_PmIfStatCurr1hOutputPkts_Object = MibTableColumn
pmIfStatCurr1hOutputPkts = _PmIfStatCurr1hOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 21),
    _PmIfStatCurr1hOutputPkts_Type()
)
pmIfStatCurr1hOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hOutputPkts.setStatus("current")
_PmIfStatCurr1hOutputBytes_Type = Counter64
_PmIfStatCurr1hOutputBytes_Object = MibTableColumn
pmIfStatCurr1hOutputBytes = _PmIfStatCurr1hOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 22),
    _PmIfStatCurr1hOutputBytes_Type()
)
pmIfStatCurr1hOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hOutputBytes.setStatus("current")
_PmIfStatCurr1hStartTime_Type = DateAndTime
_PmIfStatCurr1hStartTime_Object = MibTableColumn
pmIfStatCurr1hStartTime = _PmIfStatCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 100),
    _PmIfStatCurr1hStartTime_Type()
)
pmIfStatCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hStartTime.setStatus("current")
_PmIfStatCurr1hStopTime_Type = DateAndTime
_PmIfStatCurr1hStopTime_Object = MibTableColumn
pmIfStatCurr1hStopTime = _PmIfStatCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 3, 1, 101),
    _PmIfStatCurr1hStopTime_Type()
)
pmIfStatCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1hStopTime.setStatus("current")
_PmIfStatPrev1hTable_Object = MibTable
pmIfStatPrev1hTable = _PmIfStatPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4)
)
if mibBuilder.loadTexts:
    pmIfStatPrev1hTable.setStatus("current")
_PmIfStatPrev1hEntry_Object = MibTableRow
pmIfStatPrev1hEntry = _PmIfStatPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1)
)
pmIfStatPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatPrev1hEntry.setStatus("current")
_PmIfStatPrev1hIndex_Type = Integer32
_PmIfStatPrev1hIndex_Object = MibTableColumn
pmIfStatPrev1hIndex = _PmIfStatPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 1),
    _PmIfStatPrev1hIndex_Type()
)
pmIfStatPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatPrev1hIndex.setStatus("current")
_PmIfStatPrev1hId_Type = OctetString
_PmIfStatPrev1hId_Object = MibTableColumn
pmIfStatPrev1hId = _PmIfStatPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 2),
    _PmIfStatPrev1hId_Type()
)
pmIfStatPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hId.setStatus("current")


class _PmIfStatPrev1hUnitType_Type(Integer32):
    """Custom type pmIfStatPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatPrev1hUnitType_Type.__name__ = "Integer32"
_PmIfStatPrev1hUnitType_Object = MibTableColumn
pmIfStatPrev1hUnitType = _PmIfStatPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 3),
    _PmIfStatPrev1hUnitType_Type()
)
pmIfStatPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hUnitType.setStatus("current")
_PmIfStatPrev1hDropped_Type = Counter64
_PmIfStatPrev1hDropped_Object = MibTableColumn
pmIfStatPrev1hDropped = _PmIfStatPrev1hDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 4),
    _PmIfStatPrev1hDropped_Type()
)
pmIfStatPrev1hDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hDropped.setStatus("current")
_PmIfStatPrev1hInputPkts_Type = Counter64
_PmIfStatPrev1hInputPkts_Object = MibTableColumn
pmIfStatPrev1hInputPkts = _PmIfStatPrev1hInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 5),
    _PmIfStatPrev1hInputPkts_Type()
)
pmIfStatPrev1hInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hInputPkts.setStatus("current")
_PmIfStatPrev1hInputbytes_Type = Counter64
_PmIfStatPrev1hInputbytes_Object = MibTableColumn
pmIfStatPrev1hInputbytes = _PmIfStatPrev1hInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 6),
    _PmIfStatPrev1hInputbytes_Type()
)
pmIfStatPrev1hInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hInputbytes.setStatus("current")
_PmIfStatPrev1hCrcErrors_Type = Counter64
_PmIfStatPrev1hCrcErrors_Object = MibTableColumn
pmIfStatPrev1hCrcErrors = _PmIfStatPrev1hCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 7),
    _PmIfStatPrev1hCrcErrors_Type()
)
pmIfStatPrev1hCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hCrcErrors.setStatus("current")
_PmIfStatPrev1hInputBrdCst_Type = Counter64
_PmIfStatPrev1hInputBrdCst_Object = MibTableColumn
pmIfStatPrev1hInputBrdCst = _PmIfStatPrev1hInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 8),
    _PmIfStatPrev1hInputBrdCst_Type()
)
pmIfStatPrev1hInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hInputBrdCst.setStatus("current")
_PmIfStatPrev1hInputMltCst_Type = Counter64
_PmIfStatPrev1hInputMltCst_Object = MibTableColumn
pmIfStatPrev1hInputMltCst = _PmIfStatPrev1hInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 9),
    _PmIfStatPrev1hInputMltCst_Type()
)
pmIfStatPrev1hInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hInputMltCst.setStatus("current")
_PmIfStatPrev1hCollision_Type = Counter64
_PmIfStatPrev1hCollision_Object = MibTableColumn
pmIfStatPrev1hCollision = _PmIfStatPrev1hCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 10),
    _PmIfStatPrev1hCollision_Type()
)
pmIfStatPrev1hCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hCollision.setStatus("current")
_PmIfStatPrev1hUndersized_Type = Counter64
_PmIfStatPrev1hUndersized_Object = MibTableColumn
pmIfStatPrev1hUndersized = _PmIfStatPrev1hUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 11),
    _PmIfStatPrev1hUndersized_Type()
)
pmIfStatPrev1hUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hUndersized.setStatus("current")
_PmIfStatPrev1hOversized_Type = Counter64
_PmIfStatPrev1hOversized_Object = MibTableColumn
pmIfStatPrev1hOversized = _PmIfStatPrev1hOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 12),
    _PmIfStatPrev1hOversized_Type()
)
pmIfStatPrev1hOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hOversized.setStatus("current")
_PmIfStatPrev1hFragments_Type = Counter64
_PmIfStatPrev1hFragments_Object = MibTableColumn
pmIfStatPrev1hFragments = _PmIfStatPrev1hFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 13),
    _PmIfStatPrev1hFragments_Type()
)
pmIfStatPrev1hFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hFragments.setStatus("current")
_PmIfStatPrev1hJabbers_Type = Counter64
_PmIfStatPrev1hJabbers_Object = MibTableColumn
pmIfStatPrev1hJabbers = _PmIfStatPrev1hJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 14),
    _PmIfStatPrev1hJabbers_Type()
)
pmIfStatPrev1hJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hJabbers.setStatus("current")
_PmIfStatPrev1hPkt64_Type = Counter64
_PmIfStatPrev1hPkt64_Object = MibTableColumn
pmIfStatPrev1hPkt64 = _PmIfStatPrev1hPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 15),
    _PmIfStatPrev1hPkt64_Type()
)
pmIfStatPrev1hPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt64.setStatus("current")
_PmIfStatPrev1hPkt65To127_Type = Counter64
_PmIfStatPrev1hPkt65To127_Object = MibTableColumn
pmIfStatPrev1hPkt65To127 = _PmIfStatPrev1hPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 16),
    _PmIfStatPrev1hPkt65To127_Type()
)
pmIfStatPrev1hPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt65To127.setStatus("current")
_PmIfStatPrev1hPkt128To255_Type = Counter64
_PmIfStatPrev1hPkt128To255_Object = MibTableColumn
pmIfStatPrev1hPkt128To255 = _PmIfStatPrev1hPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 17),
    _PmIfStatPrev1hPkt128To255_Type()
)
pmIfStatPrev1hPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt128To255.setStatus("current")
_PmIfStatPrev1hPkt256To511_Type = Counter64
_PmIfStatPrev1hPkt256To511_Object = MibTableColumn
pmIfStatPrev1hPkt256To511 = _PmIfStatPrev1hPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 18),
    _PmIfStatPrev1hPkt256To511_Type()
)
pmIfStatPrev1hPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt256To511.setStatus("current")
_PmIfStatPrev1hPkt512To1023_Type = Counter64
_PmIfStatPrev1hPkt512To1023_Object = MibTableColumn
pmIfStatPrev1hPkt512To1023 = _PmIfStatPrev1hPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 19),
    _PmIfStatPrev1hPkt512To1023_Type()
)
pmIfStatPrev1hPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt512To1023.setStatus("current")
_PmIfStatPrev1hPkt1024_Type = Counter64
_PmIfStatPrev1hPkt1024_Object = MibTableColumn
pmIfStatPrev1hPkt1024 = _PmIfStatPrev1hPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 20),
    _PmIfStatPrev1hPkt1024_Type()
)
pmIfStatPrev1hPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hPkt1024.setStatus("current")
_PmIfStatPrev1hOutputPkts_Type = Counter64
_PmIfStatPrev1hOutputPkts_Object = MibTableColumn
pmIfStatPrev1hOutputPkts = _PmIfStatPrev1hOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 21),
    _PmIfStatPrev1hOutputPkts_Type()
)
pmIfStatPrev1hOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hOutputPkts.setStatus("current")
_PmIfStatPrev1hOutputBytes_Type = Counter64
_PmIfStatPrev1hOutputBytes_Object = MibTableColumn
pmIfStatPrev1hOutputBytes = _PmIfStatPrev1hOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 22),
    _PmIfStatPrev1hOutputBytes_Type()
)
pmIfStatPrev1hOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hOutputBytes.setStatus("current")
_PmIfStatPrev1hStartTime_Type = DateAndTime
_PmIfStatPrev1hStartTime_Object = MibTableColumn
pmIfStatPrev1hStartTime = _PmIfStatPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 100),
    _PmIfStatPrev1hStartTime_Type()
)
pmIfStatPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hStartTime.setStatus("current")
_PmIfStatPrev1hStopTime_Type = DateAndTime
_PmIfStatPrev1hStopTime_Object = MibTableColumn
pmIfStatPrev1hStopTime = _PmIfStatPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 4, 1, 101),
    _PmIfStatPrev1hStopTime_Type()
)
pmIfStatPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1hStopTime.setStatus("current")
_PmIfStatCurr1dTable_Object = MibTable
pmIfStatCurr1dTable = _PmIfStatCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5)
)
if mibBuilder.loadTexts:
    pmIfStatCurr1dTable.setStatus("current")
_PmIfStatCurr1dEntry_Object = MibTableRow
pmIfStatCurr1dEntry = _PmIfStatCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1)
)
pmIfStatCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatCurr1dEntry.setStatus("current")
_PmIfStatCurr1dIndex_Type = Integer32
_PmIfStatCurr1dIndex_Object = MibTableColumn
pmIfStatCurr1dIndex = _PmIfStatCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 1),
    _PmIfStatCurr1dIndex_Type()
)
pmIfStatCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatCurr1dIndex.setStatus("current")
_PmIfStatCurr1dId_Type = OctetString
_PmIfStatCurr1dId_Object = MibTableColumn
pmIfStatCurr1dId = _PmIfStatCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 2),
    _PmIfStatCurr1dId_Type()
)
pmIfStatCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dId.setStatus("current")


class _PmIfStatCurr1dUnitType_Type(Integer32):
    """Custom type pmIfStatCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatCurr1dUnitType_Type.__name__ = "Integer32"
_PmIfStatCurr1dUnitType_Object = MibTableColumn
pmIfStatCurr1dUnitType = _PmIfStatCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 3),
    _PmIfStatCurr1dUnitType_Type()
)
pmIfStatCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dUnitType.setStatus("current")
_PmIfStatCurr1dDropped_Type = Counter64
_PmIfStatCurr1dDropped_Object = MibTableColumn
pmIfStatCurr1dDropped = _PmIfStatCurr1dDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 4),
    _PmIfStatCurr1dDropped_Type()
)
pmIfStatCurr1dDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dDropped.setStatus("current")
_PmIfStatCurr1dInputPkts_Type = Counter64
_PmIfStatCurr1dInputPkts_Object = MibTableColumn
pmIfStatCurr1dInputPkts = _PmIfStatCurr1dInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 5),
    _PmIfStatCurr1dInputPkts_Type()
)
pmIfStatCurr1dInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dInputPkts.setStatus("current")
_PmIfStatCurr1dInputbytes_Type = Counter64
_PmIfStatCurr1dInputbytes_Object = MibTableColumn
pmIfStatCurr1dInputbytes = _PmIfStatCurr1dInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 6),
    _PmIfStatCurr1dInputbytes_Type()
)
pmIfStatCurr1dInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dInputbytes.setStatus("current")
_PmIfStatCurr1dCrcErrors_Type = Counter64
_PmIfStatCurr1dCrcErrors_Object = MibTableColumn
pmIfStatCurr1dCrcErrors = _PmIfStatCurr1dCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 7),
    _PmIfStatCurr1dCrcErrors_Type()
)
pmIfStatCurr1dCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dCrcErrors.setStatus("current")
_PmIfStatCurr1dInputBrdCst_Type = Counter64
_PmIfStatCurr1dInputBrdCst_Object = MibTableColumn
pmIfStatCurr1dInputBrdCst = _PmIfStatCurr1dInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 8),
    _PmIfStatCurr1dInputBrdCst_Type()
)
pmIfStatCurr1dInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dInputBrdCst.setStatus("current")
_PmIfStatCurr1dInputMltCst_Type = Counter64
_PmIfStatCurr1dInputMltCst_Object = MibTableColumn
pmIfStatCurr1dInputMltCst = _PmIfStatCurr1dInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 9),
    _PmIfStatCurr1dInputMltCst_Type()
)
pmIfStatCurr1dInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dInputMltCst.setStatus("current")
_PmIfStatCurr1dCollision_Type = Counter64
_PmIfStatCurr1dCollision_Object = MibTableColumn
pmIfStatCurr1dCollision = _PmIfStatCurr1dCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 10),
    _PmIfStatCurr1dCollision_Type()
)
pmIfStatCurr1dCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dCollision.setStatus("current")
_PmIfStatCurr1dUndersized_Type = Counter64
_PmIfStatCurr1dUndersized_Object = MibTableColumn
pmIfStatCurr1dUndersized = _PmIfStatCurr1dUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 11),
    _PmIfStatCurr1dUndersized_Type()
)
pmIfStatCurr1dUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dUndersized.setStatus("current")
_PmIfStatCurr1dOversized_Type = Counter64
_PmIfStatCurr1dOversized_Object = MibTableColumn
pmIfStatCurr1dOversized = _PmIfStatCurr1dOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 12),
    _PmIfStatCurr1dOversized_Type()
)
pmIfStatCurr1dOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dOversized.setStatus("current")
_PmIfStatCurr1dFragments_Type = Counter64
_PmIfStatCurr1dFragments_Object = MibTableColumn
pmIfStatCurr1dFragments = _PmIfStatCurr1dFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 13),
    _PmIfStatCurr1dFragments_Type()
)
pmIfStatCurr1dFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dFragments.setStatus("current")
_PmIfStatCurr1dJabbers_Type = Counter64
_PmIfStatCurr1dJabbers_Object = MibTableColumn
pmIfStatCurr1dJabbers = _PmIfStatCurr1dJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 14),
    _PmIfStatCurr1dJabbers_Type()
)
pmIfStatCurr1dJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dJabbers.setStatus("current")
_PmIfStatCurr1dPkt64_Type = Counter64
_PmIfStatCurr1dPkt64_Object = MibTableColumn
pmIfStatCurr1dPkt64 = _PmIfStatCurr1dPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 15),
    _PmIfStatCurr1dPkt64_Type()
)
pmIfStatCurr1dPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt64.setStatus("current")
_PmIfStatCurr1dPkt65To127_Type = Counter64
_PmIfStatCurr1dPkt65To127_Object = MibTableColumn
pmIfStatCurr1dPkt65To127 = _PmIfStatCurr1dPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 16),
    _PmIfStatCurr1dPkt65To127_Type()
)
pmIfStatCurr1dPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt65To127.setStatus("current")
_PmIfStatCurr1dPkt128To255_Type = Counter64
_PmIfStatCurr1dPkt128To255_Object = MibTableColumn
pmIfStatCurr1dPkt128To255 = _PmIfStatCurr1dPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 17),
    _PmIfStatCurr1dPkt128To255_Type()
)
pmIfStatCurr1dPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt128To255.setStatus("current")
_PmIfStatCurr1dPkt256To511_Type = Counter64
_PmIfStatCurr1dPkt256To511_Object = MibTableColumn
pmIfStatCurr1dPkt256To511 = _PmIfStatCurr1dPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 18),
    _PmIfStatCurr1dPkt256To511_Type()
)
pmIfStatCurr1dPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt256To511.setStatus("current")
_PmIfStatCurr1dPkt512To1023_Type = Counter64
_PmIfStatCurr1dPkt512To1023_Object = MibTableColumn
pmIfStatCurr1dPkt512To1023 = _PmIfStatCurr1dPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 19),
    _PmIfStatCurr1dPkt512To1023_Type()
)
pmIfStatCurr1dPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt512To1023.setStatus("current")
_PmIfStatCurr1dPkt1024_Type = Counter64
_PmIfStatCurr1dPkt1024_Object = MibTableColumn
pmIfStatCurr1dPkt1024 = _PmIfStatCurr1dPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 20),
    _PmIfStatCurr1dPkt1024_Type()
)
pmIfStatCurr1dPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dPkt1024.setStatus("current")
_PmIfStatCurr1dOutputPkts_Type = Counter64
_PmIfStatCurr1dOutputPkts_Object = MibTableColumn
pmIfStatCurr1dOutputPkts = _PmIfStatCurr1dOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 21),
    _PmIfStatCurr1dOutputPkts_Type()
)
pmIfStatCurr1dOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dOutputPkts.setStatus("current")
_PmIfStatCurr1dOutputBytes_Type = Counter64
_PmIfStatCurr1dOutputBytes_Object = MibTableColumn
pmIfStatCurr1dOutputBytes = _PmIfStatCurr1dOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 22),
    _PmIfStatCurr1dOutputBytes_Type()
)
pmIfStatCurr1dOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dOutputBytes.setStatus("current")
_PmIfStatCurr1dStartTime_Type = DateAndTime
_PmIfStatCurr1dStartTime_Object = MibTableColumn
pmIfStatCurr1dStartTime = _PmIfStatCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 100),
    _PmIfStatCurr1dStartTime_Type()
)
pmIfStatCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dStartTime.setStatus("current")
_PmIfStatCurr1dStopTime_Type = DateAndTime
_PmIfStatCurr1dStopTime_Object = MibTableColumn
pmIfStatCurr1dStopTime = _PmIfStatCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 5, 1, 101),
    _PmIfStatCurr1dStopTime_Type()
)
pmIfStatCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatCurr1dStopTime.setStatus("current")
_PmIfStatPrev1dTable_Object = MibTable
pmIfStatPrev1dTable = _PmIfStatPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6)
)
if mibBuilder.loadTexts:
    pmIfStatPrev1dTable.setStatus("current")
_PmIfStatPrev1dEntry_Object = MibTableRow
pmIfStatPrev1dEntry = _PmIfStatPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1)
)
pmIfStatPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmIfStatPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmIfStatPrev1dEntry.setStatus("current")
_PmIfStatPrev1dIndex_Type = Integer32
_PmIfStatPrev1dIndex_Object = MibTableColumn
pmIfStatPrev1dIndex = _PmIfStatPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 1),
    _PmIfStatPrev1dIndex_Type()
)
pmIfStatPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmIfStatPrev1dIndex.setStatus("current")
_PmIfStatPrev1dId_Type = OctetString
_PmIfStatPrev1dId_Object = MibTableColumn
pmIfStatPrev1dId = _PmIfStatPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 2),
    _PmIfStatPrev1dId_Type()
)
pmIfStatPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dId.setStatus("current")


class _PmIfStatPrev1dUnitType_Type(Integer32):
    """Custom type pmIfStatPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmIfStatPrev1dUnitType_Type.__name__ = "Integer32"
_PmIfStatPrev1dUnitType_Object = MibTableColumn
pmIfStatPrev1dUnitType = _PmIfStatPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 3),
    _PmIfStatPrev1dUnitType_Type()
)
pmIfStatPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dUnitType.setStatus("current")
_PmIfStatPrev1dDropped_Type = Counter64
_PmIfStatPrev1dDropped_Object = MibTableColumn
pmIfStatPrev1dDropped = _PmIfStatPrev1dDropped_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 4),
    _PmIfStatPrev1dDropped_Type()
)
pmIfStatPrev1dDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dDropped.setStatus("current")
_PmIfStatPrev1dInputPkts_Type = Counter64
_PmIfStatPrev1dInputPkts_Object = MibTableColumn
pmIfStatPrev1dInputPkts = _PmIfStatPrev1dInputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 5),
    _PmIfStatPrev1dInputPkts_Type()
)
pmIfStatPrev1dInputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dInputPkts.setStatus("current")
_PmIfStatPrev1dInputbytes_Type = Counter64
_PmIfStatPrev1dInputbytes_Object = MibTableColumn
pmIfStatPrev1dInputbytes = _PmIfStatPrev1dInputbytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 6),
    _PmIfStatPrev1dInputbytes_Type()
)
pmIfStatPrev1dInputbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dInputbytes.setStatus("current")
_PmIfStatPrev1dCrcErrors_Type = Counter64
_PmIfStatPrev1dCrcErrors_Object = MibTableColumn
pmIfStatPrev1dCrcErrors = _PmIfStatPrev1dCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 7),
    _PmIfStatPrev1dCrcErrors_Type()
)
pmIfStatPrev1dCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dCrcErrors.setStatus("current")
_PmIfStatPrev1dInputBrdCst_Type = Counter64
_PmIfStatPrev1dInputBrdCst_Object = MibTableColumn
pmIfStatPrev1dInputBrdCst = _PmIfStatPrev1dInputBrdCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 8),
    _PmIfStatPrev1dInputBrdCst_Type()
)
pmIfStatPrev1dInputBrdCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dInputBrdCst.setStatus("current")
_PmIfStatPrev1dInputMltCst_Type = Counter64
_PmIfStatPrev1dInputMltCst_Object = MibTableColumn
pmIfStatPrev1dInputMltCst = _PmIfStatPrev1dInputMltCst_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 9),
    _PmIfStatPrev1dInputMltCst_Type()
)
pmIfStatPrev1dInputMltCst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dInputMltCst.setStatus("current")
_PmIfStatPrev1dCollision_Type = Counter64
_PmIfStatPrev1dCollision_Object = MibTableColumn
pmIfStatPrev1dCollision = _PmIfStatPrev1dCollision_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 10),
    _PmIfStatPrev1dCollision_Type()
)
pmIfStatPrev1dCollision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dCollision.setStatus("current")
_PmIfStatPrev1dUndersized_Type = Counter64
_PmIfStatPrev1dUndersized_Object = MibTableColumn
pmIfStatPrev1dUndersized = _PmIfStatPrev1dUndersized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 11),
    _PmIfStatPrev1dUndersized_Type()
)
pmIfStatPrev1dUndersized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dUndersized.setStatus("current")
_PmIfStatPrev1dOversized_Type = Counter64
_PmIfStatPrev1dOversized_Object = MibTableColumn
pmIfStatPrev1dOversized = _PmIfStatPrev1dOversized_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 12),
    _PmIfStatPrev1dOversized_Type()
)
pmIfStatPrev1dOversized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dOversized.setStatus("current")
_PmIfStatPrev1dFragments_Type = Counter64
_PmIfStatPrev1dFragments_Object = MibTableColumn
pmIfStatPrev1dFragments = _PmIfStatPrev1dFragments_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 13),
    _PmIfStatPrev1dFragments_Type()
)
pmIfStatPrev1dFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dFragments.setStatus("current")
_PmIfStatPrev1dJabbers_Type = Counter64
_PmIfStatPrev1dJabbers_Object = MibTableColumn
pmIfStatPrev1dJabbers = _PmIfStatPrev1dJabbers_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 14),
    _PmIfStatPrev1dJabbers_Type()
)
pmIfStatPrev1dJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dJabbers.setStatus("current")
_PmIfStatPrev1dPkt64_Type = Counter64
_PmIfStatPrev1dPkt64_Object = MibTableColumn
pmIfStatPrev1dPkt64 = _PmIfStatPrev1dPkt64_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 15),
    _PmIfStatPrev1dPkt64_Type()
)
pmIfStatPrev1dPkt64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt64.setStatus("current")
_PmIfStatPrev1dPkt65To127_Type = Counter64
_PmIfStatPrev1dPkt65To127_Object = MibTableColumn
pmIfStatPrev1dPkt65To127 = _PmIfStatPrev1dPkt65To127_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 16),
    _PmIfStatPrev1dPkt65To127_Type()
)
pmIfStatPrev1dPkt65To127.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt65To127.setStatus("current")
_PmIfStatPrev1dPkt128To255_Type = Counter64
_PmIfStatPrev1dPkt128To255_Object = MibTableColumn
pmIfStatPrev1dPkt128To255 = _PmIfStatPrev1dPkt128To255_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 17),
    _PmIfStatPrev1dPkt128To255_Type()
)
pmIfStatPrev1dPkt128To255.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt128To255.setStatus("current")
_PmIfStatPrev1dPkt256To511_Type = Counter64
_PmIfStatPrev1dPkt256To511_Object = MibTableColumn
pmIfStatPrev1dPkt256To511 = _PmIfStatPrev1dPkt256To511_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 18),
    _PmIfStatPrev1dPkt256To511_Type()
)
pmIfStatPrev1dPkt256To511.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt256To511.setStatus("current")
_PmIfStatPrev1dPkt512To1023_Type = Counter64
_PmIfStatPrev1dPkt512To1023_Object = MibTableColumn
pmIfStatPrev1dPkt512To1023 = _PmIfStatPrev1dPkt512To1023_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 19),
    _PmIfStatPrev1dPkt512To1023_Type()
)
pmIfStatPrev1dPkt512To1023.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt512To1023.setStatus("current")
_PmIfStatPrev1dPkt1024_Type = Counter64
_PmIfStatPrev1dPkt1024_Object = MibTableColumn
pmIfStatPrev1dPkt1024 = _PmIfStatPrev1dPkt1024_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 20),
    _PmIfStatPrev1dPkt1024_Type()
)
pmIfStatPrev1dPkt1024.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dPkt1024.setStatus("current")
_PmIfStatPrev1dOutputPkts_Type = Counter64
_PmIfStatPrev1dOutputPkts_Object = MibTableColumn
pmIfStatPrev1dOutputPkts = _PmIfStatPrev1dOutputPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 21),
    _PmIfStatPrev1dOutputPkts_Type()
)
pmIfStatPrev1dOutputPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dOutputPkts.setStatus("current")
_PmIfStatPrev1dOutputBytes_Type = Counter64
_PmIfStatPrev1dOutputBytes_Object = MibTableColumn
pmIfStatPrev1dOutputBytes = _PmIfStatPrev1dOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 22),
    _PmIfStatPrev1dOutputBytes_Type()
)
pmIfStatPrev1dOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dOutputBytes.setStatus("current")
_PmIfStatPrev1dStartTime_Type = DateAndTime
_PmIfStatPrev1dStartTime_Object = MibTableColumn
pmIfStatPrev1dStartTime = _PmIfStatPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 100),
    _PmIfStatPrev1dStartTime_Type()
)
pmIfStatPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dStartTime.setStatus("current")
_PmIfStatPrev1dStopTime_Type = DateAndTime
_PmIfStatPrev1dStopTime_Object = MibTableColumn
pmIfStatPrev1dStopTime = _PmIfStatPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 6, 1, 101),
    _PmIfStatPrev1dStopTime_Type()
)
pmIfStatPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmIfStatPrev1dStopTime.setStatus("current")
_PmTcaIfDropped15mTable_Object = MibTable
pmTcaIfDropped15mTable = _PmTcaIfDropped15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7)
)
if mibBuilder.loadTexts:
    pmTcaIfDropped15mTable.setStatus("current")
_PmTcaIfDropped15mEntry_Object = MibTableRow
pmTcaIfDropped15mEntry = _PmTcaIfDropped15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1)
)
pmTcaIfDropped15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfDropped15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfDropped15mEntry.setStatus("current")
_PmTcaIfDropped15mIndex_Type = Integer32
_PmTcaIfDropped15mIndex_Object = MibTableColumn
pmTcaIfDropped15mIndex = _PmTcaIfDropped15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 1),
    _PmTcaIfDropped15mIndex_Type()
)
pmTcaIfDropped15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mIndex.setStatus("current")
_PmTcaIfDropped15mId_Type = OctetString
_PmTcaIfDropped15mId_Object = MibTableColumn
pmTcaIfDropped15mId = _PmTcaIfDropped15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 2),
    _PmTcaIfDropped15mId_Type()
)
pmTcaIfDropped15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mId.setStatus("current")


class _PmTcaIfDropped15mUnitType_Type(Integer32):
    """Custom type pmTcaIfDropped15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfDropped15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfDropped15mUnitType_Object = MibTableColumn
pmTcaIfDropped15mUnitType = _PmTcaIfDropped15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 3),
    _PmTcaIfDropped15mUnitType_Type()
)
pmTcaIfDropped15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mUnitType.setStatus("current")
_PmTcaIfDropped15mCnt_Type = Counter64
_PmTcaIfDropped15mCnt_Object = MibTableColumn
pmTcaIfDropped15mCnt = _PmTcaIfDropped15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 4),
    _PmTcaIfDropped15mCnt_Type()
)
pmTcaIfDropped15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mCnt.setStatus("current")
_PmTcaIfDropped15mThreshold_Type = Counter64
_PmTcaIfDropped15mThreshold_Object = MibTableColumn
pmTcaIfDropped15mThreshold = _PmTcaIfDropped15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 5),
    _PmTcaIfDropped15mThreshold_Type()
)
pmTcaIfDropped15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mThreshold.setStatus("current")
_PmTcaIfDropped15mOccurTime_Type = DateAndTime
_PmTcaIfDropped15mOccurTime_Object = MibTableColumn
pmTcaIfDropped15mOccurTime = _PmTcaIfDropped15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 7, 1, 6),
    _PmTcaIfDropped15mOccurTime_Type()
)
pmTcaIfDropped15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped15mOccurTime.setStatus("current")
_PmTcaIfDropped1hTable_Object = MibTable
pmTcaIfDropped1hTable = _PmTcaIfDropped1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8)
)
if mibBuilder.loadTexts:
    pmTcaIfDropped1hTable.setStatus("current")
_PmTcaIfDropped1hEntry_Object = MibTableRow
pmTcaIfDropped1hEntry = _PmTcaIfDropped1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1)
)
pmTcaIfDropped1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfDropped1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfDropped1hEntry.setStatus("current")
_PmTcaIfDropped1hIndex_Type = Integer32
_PmTcaIfDropped1hIndex_Object = MibTableColumn
pmTcaIfDropped1hIndex = _PmTcaIfDropped1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 1),
    _PmTcaIfDropped1hIndex_Type()
)
pmTcaIfDropped1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hIndex.setStatus("current")
_PmTcaIfDropped1hId_Type = OctetString
_PmTcaIfDropped1hId_Object = MibTableColumn
pmTcaIfDropped1hId = _PmTcaIfDropped1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 2),
    _PmTcaIfDropped1hId_Type()
)
pmTcaIfDropped1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hId.setStatus("current")


class _PmTcaIfDropped1hUnitType_Type(Integer32):
    """Custom type pmTcaIfDropped1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfDropped1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfDropped1hUnitType_Object = MibTableColumn
pmTcaIfDropped1hUnitType = _PmTcaIfDropped1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 3),
    _PmTcaIfDropped1hUnitType_Type()
)
pmTcaIfDropped1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hUnitType.setStatus("current")
_PmTcaIfDropped1hCnt_Type = Counter64
_PmTcaIfDropped1hCnt_Object = MibTableColumn
pmTcaIfDropped1hCnt = _PmTcaIfDropped1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 4),
    _PmTcaIfDropped1hCnt_Type()
)
pmTcaIfDropped1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hCnt.setStatus("current")
_PmTcaIfDropped1hThreshold_Type = Counter64
_PmTcaIfDropped1hThreshold_Object = MibTableColumn
pmTcaIfDropped1hThreshold = _PmTcaIfDropped1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 5),
    _PmTcaIfDropped1hThreshold_Type()
)
pmTcaIfDropped1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hThreshold.setStatus("current")
_PmTcaIfDropped1hOccurTime_Type = DateAndTime
_PmTcaIfDropped1hOccurTime_Object = MibTableColumn
pmTcaIfDropped1hOccurTime = _PmTcaIfDropped1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 8, 1, 6),
    _PmTcaIfDropped1hOccurTime_Type()
)
pmTcaIfDropped1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1hOccurTime.setStatus("current")
_PmTcaIfDropped1dTable_Object = MibTable
pmTcaIfDropped1dTable = _PmTcaIfDropped1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9)
)
if mibBuilder.loadTexts:
    pmTcaIfDropped1dTable.setStatus("current")
_PmTcaIfDropped1dEntry_Object = MibTableRow
pmTcaIfDropped1dEntry = _PmTcaIfDropped1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1)
)
pmTcaIfDropped1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfDropped1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfDropped1dEntry.setStatus("current")
_PmTcaIfDropped1dIndex_Type = Integer32
_PmTcaIfDropped1dIndex_Object = MibTableColumn
pmTcaIfDropped1dIndex = _PmTcaIfDropped1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 1),
    _PmTcaIfDropped1dIndex_Type()
)
pmTcaIfDropped1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dIndex.setStatus("current")
_PmTcaIfDropped1dId_Type = OctetString
_PmTcaIfDropped1dId_Object = MibTableColumn
pmTcaIfDropped1dId = _PmTcaIfDropped1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 2),
    _PmTcaIfDropped1dId_Type()
)
pmTcaIfDropped1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dId.setStatus("current")


class _PmTcaIfDropped1dUnitType_Type(Integer32):
    """Custom type pmTcaIfDropped1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfDropped1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfDropped1dUnitType_Object = MibTableColumn
pmTcaIfDropped1dUnitType = _PmTcaIfDropped1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 3),
    _PmTcaIfDropped1dUnitType_Type()
)
pmTcaIfDropped1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dUnitType.setStatus("current")
_PmTcaIfDropped1dCnt_Type = Counter64
_PmTcaIfDropped1dCnt_Object = MibTableColumn
pmTcaIfDropped1dCnt = _PmTcaIfDropped1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 4),
    _PmTcaIfDropped1dCnt_Type()
)
pmTcaIfDropped1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dCnt.setStatus("current")
_PmTcaIfDropped1dThreshold_Type = Counter64
_PmTcaIfDropped1dThreshold_Object = MibTableColumn
pmTcaIfDropped1dThreshold = _PmTcaIfDropped1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 5),
    _PmTcaIfDropped1dThreshold_Type()
)
pmTcaIfDropped1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dThreshold.setStatus("current")
_PmTcaIfDropped1dOccurTime_Type = DateAndTime
_PmTcaIfDropped1dOccurTime_Object = MibTableColumn
pmTcaIfDropped1dOccurTime = _PmTcaIfDropped1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 9, 1, 6),
    _PmTcaIfDropped1dOccurTime_Type()
)
pmTcaIfDropped1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfDropped1dOccurTime.setStatus("current")
_PmTcaIfInPkts15mTable_Object = MibTable
pmTcaIfInPkts15mTable = _PmTcaIfInPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10)
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mTable.setStatus("current")
_PmTcaIfInPkts15mEntry_Object = MibTableRow
pmTcaIfInPkts15mEntry = _PmTcaIfInPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1)
)
pmTcaIfInPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mEntry.setStatus("current")
_PmTcaIfInPkts15mIndex_Type = Integer32
_PmTcaIfInPkts15mIndex_Object = MibTableColumn
pmTcaIfInPkts15mIndex = _PmTcaIfInPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 1),
    _PmTcaIfInPkts15mIndex_Type()
)
pmTcaIfInPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mIndex.setStatus("current")
_PmTcaIfInPkts15mId_Type = OctetString
_PmTcaIfInPkts15mId_Object = MibTableColumn
pmTcaIfInPkts15mId = _PmTcaIfInPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 2),
    _PmTcaIfInPkts15mId_Type()
)
pmTcaIfInPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mId.setStatus("current")


class _PmTcaIfInPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaIfInPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfInPkts15mUnitType_Object = MibTableColumn
pmTcaIfInPkts15mUnitType = _PmTcaIfInPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 3),
    _PmTcaIfInPkts15mUnitType_Type()
)
pmTcaIfInPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mUnitType.setStatus("current")
_PmTcaIfInPkts15mCnt_Type = Counter64
_PmTcaIfInPkts15mCnt_Object = MibTableColumn
pmTcaIfInPkts15mCnt = _PmTcaIfInPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 4),
    _PmTcaIfInPkts15mCnt_Type()
)
pmTcaIfInPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mCnt.setStatus("current")
_PmTcaIfInPkts15mThreshold_Type = Counter64
_PmTcaIfInPkts15mThreshold_Object = MibTableColumn
pmTcaIfInPkts15mThreshold = _PmTcaIfInPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 5),
    _PmTcaIfInPkts15mThreshold_Type()
)
pmTcaIfInPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mThreshold.setStatus("current")
_PmTcaIfInPkts15mOccurTime_Type = DateAndTime
_PmTcaIfInPkts15mOccurTime_Object = MibTableColumn
pmTcaIfInPkts15mOccurTime = _PmTcaIfInPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 10, 1, 6),
    _PmTcaIfInPkts15mOccurTime_Type()
)
pmTcaIfInPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts15mOccurTime.setStatus("current")
_PmTcaIfInPkts1hTable_Object = MibTable
pmTcaIfInPkts1hTable = _PmTcaIfInPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11)
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hTable.setStatus("current")
_PmTcaIfInPkts1hEntry_Object = MibTableRow
pmTcaIfInPkts1hEntry = _PmTcaIfInPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1)
)
pmTcaIfInPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hEntry.setStatus("current")
_PmTcaIfInPkts1hIndex_Type = Integer32
_PmTcaIfInPkts1hIndex_Object = MibTableColumn
pmTcaIfInPkts1hIndex = _PmTcaIfInPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 1),
    _PmTcaIfInPkts1hIndex_Type()
)
pmTcaIfInPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hIndex.setStatus("current")
_PmTcaIfInPkts1hId_Type = OctetString
_PmTcaIfInPkts1hId_Object = MibTableColumn
pmTcaIfInPkts1hId = _PmTcaIfInPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 2),
    _PmTcaIfInPkts1hId_Type()
)
pmTcaIfInPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hId.setStatus("current")


class _PmTcaIfInPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaIfInPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfInPkts1hUnitType_Object = MibTableColumn
pmTcaIfInPkts1hUnitType = _PmTcaIfInPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 3),
    _PmTcaIfInPkts1hUnitType_Type()
)
pmTcaIfInPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hUnitType.setStatus("current")
_PmTcaIfInPkts1hCnt_Type = Counter64
_PmTcaIfInPkts1hCnt_Object = MibTableColumn
pmTcaIfInPkts1hCnt = _PmTcaIfInPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 4),
    _PmTcaIfInPkts1hCnt_Type()
)
pmTcaIfInPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hCnt.setStatus("current")
_PmTcaIfInPkts1hThreshold_Type = Counter64
_PmTcaIfInPkts1hThreshold_Object = MibTableColumn
pmTcaIfInPkts1hThreshold = _PmTcaIfInPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 5),
    _PmTcaIfInPkts1hThreshold_Type()
)
pmTcaIfInPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hThreshold.setStatus("current")
_PmTcaIfInPkts1hOccurTime_Type = DateAndTime
_PmTcaIfInPkts1hOccurTime_Object = MibTableColumn
pmTcaIfInPkts1hOccurTime = _PmTcaIfInPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 11, 1, 6),
    _PmTcaIfInPkts1hOccurTime_Type()
)
pmTcaIfInPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1hOccurTime.setStatus("current")
_PmTcaIfInPkts1dTable_Object = MibTable
pmTcaIfInPkts1dTable = _PmTcaIfInPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12)
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dTable.setStatus("current")
_PmTcaIfInPkts1dEntry_Object = MibTableRow
pmTcaIfInPkts1dEntry = _PmTcaIfInPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1)
)
pmTcaIfInPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dEntry.setStatus("current")
_PmTcaIfInPkts1dIndex_Type = Integer32
_PmTcaIfInPkts1dIndex_Object = MibTableColumn
pmTcaIfInPkts1dIndex = _PmTcaIfInPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 1),
    _PmTcaIfInPkts1dIndex_Type()
)
pmTcaIfInPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dIndex.setStatus("current")
_PmTcaIfInPkts1dId_Type = OctetString
_PmTcaIfInPkts1dId_Object = MibTableColumn
pmTcaIfInPkts1dId = _PmTcaIfInPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 2),
    _PmTcaIfInPkts1dId_Type()
)
pmTcaIfInPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dId.setStatus("current")


class _PmTcaIfInPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaIfInPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfInPkts1dUnitType_Object = MibTableColumn
pmTcaIfInPkts1dUnitType = _PmTcaIfInPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 3),
    _PmTcaIfInPkts1dUnitType_Type()
)
pmTcaIfInPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dUnitType.setStatus("current")
_PmTcaIfInPkts1dCnt_Type = Counter64
_PmTcaIfInPkts1dCnt_Object = MibTableColumn
pmTcaIfInPkts1dCnt = _PmTcaIfInPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 4),
    _PmTcaIfInPkts1dCnt_Type()
)
pmTcaIfInPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dCnt.setStatus("current")
_PmTcaIfInPkts1dThreshold_Type = Counter64
_PmTcaIfInPkts1dThreshold_Object = MibTableColumn
pmTcaIfInPkts1dThreshold = _PmTcaIfInPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 5),
    _PmTcaIfInPkts1dThreshold_Type()
)
pmTcaIfInPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dThreshold.setStatus("current")
_PmTcaIfInPkts1dOccurTime_Type = DateAndTime
_PmTcaIfInPkts1dOccurTime_Object = MibTableColumn
pmTcaIfInPkts1dOccurTime = _PmTcaIfInPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 12, 1, 6),
    _PmTcaIfInPkts1dOccurTime_Type()
)
pmTcaIfInPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInPkts1dOccurTime.setStatus("current")
_PmTcaIfInBytes15mTable_Object = MibTable
pmTcaIfInBytes15mTable = _PmTcaIfInBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13)
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mTable.setStatus("current")
_PmTcaIfInBytes15mEntry_Object = MibTableRow
pmTcaIfInBytes15mEntry = _PmTcaIfInBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1)
)
pmTcaIfInBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mEntry.setStatus("current")
_PmTcaIfInBytes15mIndex_Type = Integer32
_PmTcaIfInBytes15mIndex_Object = MibTableColumn
pmTcaIfInBytes15mIndex = _PmTcaIfInBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 1),
    _PmTcaIfInBytes15mIndex_Type()
)
pmTcaIfInBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mIndex.setStatus("current")
_PmTcaIfInBytes15mId_Type = OctetString
_PmTcaIfInBytes15mId_Object = MibTableColumn
pmTcaIfInBytes15mId = _PmTcaIfInBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 2),
    _PmTcaIfInBytes15mId_Type()
)
pmTcaIfInBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mId.setStatus("current")


class _PmTcaIfInBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaIfInBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBytes15mUnitType_Object = MibTableColumn
pmTcaIfInBytes15mUnitType = _PmTcaIfInBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 3),
    _PmTcaIfInBytes15mUnitType_Type()
)
pmTcaIfInBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mUnitType.setStatus("current")
_PmTcaIfInBytes15mCnt_Type = Counter64
_PmTcaIfInBytes15mCnt_Object = MibTableColumn
pmTcaIfInBytes15mCnt = _PmTcaIfInBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 4),
    _PmTcaIfInBytes15mCnt_Type()
)
pmTcaIfInBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mCnt.setStatus("current")
_PmTcaIfInBytes15mThreshold_Type = Counter64
_PmTcaIfInBytes15mThreshold_Object = MibTableColumn
pmTcaIfInBytes15mThreshold = _PmTcaIfInBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 5),
    _PmTcaIfInBytes15mThreshold_Type()
)
pmTcaIfInBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mThreshold.setStatus("current")
_PmTcaIfInBytes15mOccurTime_Type = DateAndTime
_PmTcaIfInBytes15mOccurTime_Object = MibTableColumn
pmTcaIfInBytes15mOccurTime = _PmTcaIfInBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 13, 1, 6),
    _PmTcaIfInBytes15mOccurTime_Type()
)
pmTcaIfInBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes15mOccurTime.setStatus("current")
_PmTcaIfInBytes1hTable_Object = MibTable
pmTcaIfInBytes1hTable = _PmTcaIfInBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14)
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hTable.setStatus("current")
_PmTcaIfInBytes1hEntry_Object = MibTableRow
pmTcaIfInBytes1hEntry = _PmTcaIfInBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1)
)
pmTcaIfInBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hEntry.setStatus("current")
_PmTcaIfInBytes1hIndex_Type = Integer32
_PmTcaIfInBytes1hIndex_Object = MibTableColumn
pmTcaIfInBytes1hIndex = _PmTcaIfInBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 1),
    _PmTcaIfInBytes1hIndex_Type()
)
pmTcaIfInBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hIndex.setStatus("current")
_PmTcaIfInBytes1hId_Type = OctetString
_PmTcaIfInBytes1hId_Object = MibTableColumn
pmTcaIfInBytes1hId = _PmTcaIfInBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 2),
    _PmTcaIfInBytes1hId_Type()
)
pmTcaIfInBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hId.setStatus("current")


class _PmTcaIfInBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaIfInBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBytes1hUnitType_Object = MibTableColumn
pmTcaIfInBytes1hUnitType = _PmTcaIfInBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 3),
    _PmTcaIfInBytes1hUnitType_Type()
)
pmTcaIfInBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hUnitType.setStatus("current")
_PmTcaIfInBytes1hCnt_Type = Counter64
_PmTcaIfInBytes1hCnt_Object = MibTableColumn
pmTcaIfInBytes1hCnt = _PmTcaIfInBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 4),
    _PmTcaIfInBytes1hCnt_Type()
)
pmTcaIfInBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hCnt.setStatus("current")
_PmTcaIfInBytes1hThreshold_Type = Counter64
_PmTcaIfInBytes1hThreshold_Object = MibTableColumn
pmTcaIfInBytes1hThreshold = _PmTcaIfInBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 5),
    _PmTcaIfInBytes1hThreshold_Type()
)
pmTcaIfInBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hThreshold.setStatus("current")
_PmTcaIfInBytes1hOccurTime_Type = DateAndTime
_PmTcaIfInBytes1hOccurTime_Object = MibTableColumn
pmTcaIfInBytes1hOccurTime = _PmTcaIfInBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 14, 1, 6),
    _PmTcaIfInBytes1hOccurTime_Type()
)
pmTcaIfInBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1hOccurTime.setStatus("current")
_PmTcaIfInBytes1dTable_Object = MibTable
pmTcaIfInBytes1dTable = _PmTcaIfInBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15)
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dTable.setStatus("current")
_PmTcaIfInBytes1dEntry_Object = MibTableRow
pmTcaIfInBytes1dEntry = _PmTcaIfInBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1)
)
pmTcaIfInBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dEntry.setStatus("current")
_PmTcaIfInBytes1dIndex_Type = Integer32
_PmTcaIfInBytes1dIndex_Object = MibTableColumn
pmTcaIfInBytes1dIndex = _PmTcaIfInBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 1),
    _PmTcaIfInBytes1dIndex_Type()
)
pmTcaIfInBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dIndex.setStatus("current")
_PmTcaIfInBytes1dId_Type = OctetString
_PmTcaIfInBytes1dId_Object = MibTableColumn
pmTcaIfInBytes1dId = _PmTcaIfInBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 2),
    _PmTcaIfInBytes1dId_Type()
)
pmTcaIfInBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dId.setStatus("current")


class _PmTcaIfInBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaIfInBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBytes1dUnitType_Object = MibTableColumn
pmTcaIfInBytes1dUnitType = _PmTcaIfInBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 3),
    _PmTcaIfInBytes1dUnitType_Type()
)
pmTcaIfInBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dUnitType.setStatus("current")
_PmTcaIfInBytes1dCnt_Type = Counter64
_PmTcaIfInBytes1dCnt_Object = MibTableColumn
pmTcaIfInBytes1dCnt = _PmTcaIfInBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 4),
    _PmTcaIfInBytes1dCnt_Type()
)
pmTcaIfInBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dCnt.setStatus("current")
_PmTcaIfInBytes1dThreshold_Type = Counter64
_PmTcaIfInBytes1dThreshold_Object = MibTableColumn
pmTcaIfInBytes1dThreshold = _PmTcaIfInBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 5),
    _PmTcaIfInBytes1dThreshold_Type()
)
pmTcaIfInBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dThreshold.setStatus("current")
_PmTcaIfInBytes1dOccurTime_Type = DateAndTime
_PmTcaIfInBytes1dOccurTime_Object = MibTableColumn
pmTcaIfInBytes1dOccurTime = _PmTcaIfInBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 15, 1, 6),
    _PmTcaIfInBytes1dOccurTime_Type()
)
pmTcaIfInBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBytes1dOccurTime.setStatus("current")
_PmTcaIfInBrdcasts15mTable_Object = MibTable
pmTcaIfInBrdcasts15mTable = _PmTcaIfInBrdcasts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16)
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mTable.setStatus("current")
_PmTcaIfInBrdcasts15mEntry_Object = MibTableRow
pmTcaIfInBrdcasts15mEntry = _PmTcaIfInBrdcasts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1)
)
pmTcaIfInBrdcasts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBrdcasts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mEntry.setStatus("current")
_PmTcaIfInBrdcasts15mIndex_Type = Integer32
_PmTcaIfInBrdcasts15mIndex_Object = MibTableColumn
pmTcaIfInBrdcasts15mIndex = _PmTcaIfInBrdcasts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 1),
    _PmTcaIfInBrdcasts15mIndex_Type()
)
pmTcaIfInBrdcasts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mIndex.setStatus("current")
_PmTcaIfInBrdcasts15mId_Type = OctetString
_PmTcaIfInBrdcasts15mId_Object = MibTableColumn
pmTcaIfInBrdcasts15mId = _PmTcaIfInBrdcasts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 2),
    _PmTcaIfInBrdcasts15mId_Type()
)
pmTcaIfInBrdcasts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mId.setStatus("current")


class _PmTcaIfInBrdcasts15mUnitType_Type(Integer32):
    """Custom type pmTcaIfInBrdcasts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBrdcasts15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBrdcasts15mUnitType_Object = MibTableColumn
pmTcaIfInBrdcasts15mUnitType = _PmTcaIfInBrdcasts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 3),
    _PmTcaIfInBrdcasts15mUnitType_Type()
)
pmTcaIfInBrdcasts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mUnitType.setStatus("current")
_PmTcaIfInBrdcasts15mCnt_Type = Counter64
_PmTcaIfInBrdcasts15mCnt_Object = MibTableColumn
pmTcaIfInBrdcasts15mCnt = _PmTcaIfInBrdcasts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 4),
    _PmTcaIfInBrdcasts15mCnt_Type()
)
pmTcaIfInBrdcasts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mCnt.setStatus("current")
_PmTcaIfInBrdcasts15mThreshold_Type = Counter64
_PmTcaIfInBrdcasts15mThreshold_Object = MibTableColumn
pmTcaIfInBrdcasts15mThreshold = _PmTcaIfInBrdcasts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 5),
    _PmTcaIfInBrdcasts15mThreshold_Type()
)
pmTcaIfInBrdcasts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mThreshold.setStatus("current")
_PmTcaIfInBrdcasts15mOccurTime_Type = DateAndTime
_PmTcaIfInBrdcasts15mOccurTime_Object = MibTableColumn
pmTcaIfInBrdcasts15mOccurTime = _PmTcaIfInBrdcasts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 16, 1, 6),
    _PmTcaIfInBrdcasts15mOccurTime_Type()
)
pmTcaIfInBrdcasts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts15mOccurTime.setStatus("current")
_PmTcaIfInBrdcasts1hTable_Object = MibTable
pmTcaIfInBrdcasts1hTable = _PmTcaIfInBrdcasts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17)
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hTable.setStatus("current")
_PmTcaIfInBrdcasts1hEntry_Object = MibTableRow
pmTcaIfInBrdcasts1hEntry = _PmTcaIfInBrdcasts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1)
)
pmTcaIfInBrdcasts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBrdcasts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hEntry.setStatus("current")
_PmTcaIfInBrdcasts1hIndex_Type = Integer32
_PmTcaIfInBrdcasts1hIndex_Object = MibTableColumn
pmTcaIfInBrdcasts1hIndex = _PmTcaIfInBrdcasts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 1),
    _PmTcaIfInBrdcasts1hIndex_Type()
)
pmTcaIfInBrdcasts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hIndex.setStatus("current")
_PmTcaIfInBrdcasts1hId_Type = OctetString
_PmTcaIfInBrdcasts1hId_Object = MibTableColumn
pmTcaIfInBrdcasts1hId = _PmTcaIfInBrdcasts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 2),
    _PmTcaIfInBrdcasts1hId_Type()
)
pmTcaIfInBrdcasts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hId.setStatus("current")


class _PmTcaIfInBrdcasts1hUnitType_Type(Integer32):
    """Custom type pmTcaIfInBrdcasts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBrdcasts1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBrdcasts1hUnitType_Object = MibTableColumn
pmTcaIfInBrdcasts1hUnitType = _PmTcaIfInBrdcasts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 3),
    _PmTcaIfInBrdcasts1hUnitType_Type()
)
pmTcaIfInBrdcasts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hUnitType.setStatus("current")
_PmTcaIfInBrdcasts1hCnt_Type = Counter64
_PmTcaIfInBrdcasts1hCnt_Object = MibTableColumn
pmTcaIfInBrdcasts1hCnt = _PmTcaIfInBrdcasts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 4),
    _PmTcaIfInBrdcasts1hCnt_Type()
)
pmTcaIfInBrdcasts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hCnt.setStatus("current")
_PmTcaIfInBrdcasts1hThreshold_Type = Counter64
_PmTcaIfInBrdcasts1hThreshold_Object = MibTableColumn
pmTcaIfInBrdcasts1hThreshold = _PmTcaIfInBrdcasts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 5),
    _PmTcaIfInBrdcasts1hThreshold_Type()
)
pmTcaIfInBrdcasts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hThreshold.setStatus("current")
_PmTcaIfInBrdcasts1hOccurTime_Type = DateAndTime
_PmTcaIfInBrdcasts1hOccurTime_Object = MibTableColumn
pmTcaIfInBrdcasts1hOccurTime = _PmTcaIfInBrdcasts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 17, 1, 6),
    _PmTcaIfInBrdcasts1hOccurTime_Type()
)
pmTcaIfInBrdcasts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1hOccurTime.setStatus("current")
_PmTcaIfInBrdcasts1dTable_Object = MibTable
pmTcaIfInBrdcasts1dTable = _PmTcaIfInBrdcasts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18)
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dTable.setStatus("current")
_PmTcaIfInBrdcasts1dEntry_Object = MibTableRow
pmTcaIfInBrdcasts1dEntry = _PmTcaIfInBrdcasts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1)
)
pmTcaIfInBrdcasts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInBrdcasts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dEntry.setStatus("current")
_PmTcaIfInBrdcasts1dIndex_Type = Integer32
_PmTcaIfInBrdcasts1dIndex_Object = MibTableColumn
pmTcaIfInBrdcasts1dIndex = _PmTcaIfInBrdcasts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 1),
    _PmTcaIfInBrdcasts1dIndex_Type()
)
pmTcaIfInBrdcasts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dIndex.setStatus("current")
_PmTcaIfInBrdcasts1dId_Type = OctetString
_PmTcaIfInBrdcasts1dId_Object = MibTableColumn
pmTcaIfInBrdcasts1dId = _PmTcaIfInBrdcasts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 2),
    _PmTcaIfInBrdcasts1dId_Type()
)
pmTcaIfInBrdcasts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dId.setStatus("current")


class _PmTcaIfInBrdcasts1dUnitType_Type(Integer32):
    """Custom type pmTcaIfInBrdcasts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInBrdcasts1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfInBrdcasts1dUnitType_Object = MibTableColumn
pmTcaIfInBrdcasts1dUnitType = _PmTcaIfInBrdcasts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 3),
    _PmTcaIfInBrdcasts1dUnitType_Type()
)
pmTcaIfInBrdcasts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dUnitType.setStatus("current")
_PmTcaIfInBrdcasts1dCnt_Type = Counter64
_PmTcaIfInBrdcasts1dCnt_Object = MibTableColumn
pmTcaIfInBrdcasts1dCnt = _PmTcaIfInBrdcasts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 4),
    _PmTcaIfInBrdcasts1dCnt_Type()
)
pmTcaIfInBrdcasts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dCnt.setStatus("current")
_PmTcaIfInBrdcasts1dThreshold_Type = Counter64
_PmTcaIfInBrdcasts1dThreshold_Object = MibTableColumn
pmTcaIfInBrdcasts1dThreshold = _PmTcaIfInBrdcasts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 5),
    _PmTcaIfInBrdcasts1dThreshold_Type()
)
pmTcaIfInBrdcasts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dThreshold.setStatus("current")
_PmTcaIfInBrdcasts1dOccurTime_Type = DateAndTime
_PmTcaIfInBrdcasts1dOccurTime_Object = MibTableColumn
pmTcaIfInBrdcasts1dOccurTime = _PmTcaIfInBrdcasts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 18, 1, 6),
    _PmTcaIfInBrdcasts1dOccurTime_Type()
)
pmTcaIfInBrdcasts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInBrdcasts1dOccurTime.setStatus("current")
_PmTcaIfInMltcasts15mTable_Object = MibTable
pmTcaIfInMltcasts15mTable = _PmTcaIfInMltcasts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19)
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mTable.setStatus("current")
_PmTcaIfInMltcasts15mEntry_Object = MibTableRow
pmTcaIfInMltcasts15mEntry = _PmTcaIfInMltcasts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1)
)
pmTcaIfInMltcasts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInMltcasts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mEntry.setStatus("current")
_PmTcaIfInMltcasts15mIndex_Type = Integer32
_PmTcaIfInMltcasts15mIndex_Object = MibTableColumn
pmTcaIfInMltcasts15mIndex = _PmTcaIfInMltcasts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 1),
    _PmTcaIfInMltcasts15mIndex_Type()
)
pmTcaIfInMltcasts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mIndex.setStatus("current")
_PmTcaIfInMltcasts15mId_Type = OctetString
_PmTcaIfInMltcasts15mId_Object = MibTableColumn
pmTcaIfInMltcasts15mId = _PmTcaIfInMltcasts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 2),
    _PmTcaIfInMltcasts15mId_Type()
)
pmTcaIfInMltcasts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mId.setStatus("current")


class _PmTcaIfInMltcasts15mUnitType_Type(Integer32):
    """Custom type pmTcaIfInMltcasts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInMltcasts15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfInMltcasts15mUnitType_Object = MibTableColumn
pmTcaIfInMltcasts15mUnitType = _PmTcaIfInMltcasts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 3),
    _PmTcaIfInMltcasts15mUnitType_Type()
)
pmTcaIfInMltcasts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mUnitType.setStatus("current")
_PmTcaIfInMltcasts15mCnt_Type = Counter64
_PmTcaIfInMltcasts15mCnt_Object = MibTableColumn
pmTcaIfInMltcasts15mCnt = _PmTcaIfInMltcasts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 4),
    _PmTcaIfInMltcasts15mCnt_Type()
)
pmTcaIfInMltcasts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mCnt.setStatus("current")
_PmTcaIfInMltcasts15mThreshold_Type = Counter64
_PmTcaIfInMltcasts15mThreshold_Object = MibTableColumn
pmTcaIfInMltcasts15mThreshold = _PmTcaIfInMltcasts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 5),
    _PmTcaIfInMltcasts15mThreshold_Type()
)
pmTcaIfInMltcasts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mThreshold.setStatus("current")
_PmTcaIfInMltcasts15mOccurTime_Type = DateAndTime
_PmTcaIfInMltcasts15mOccurTime_Object = MibTableColumn
pmTcaIfInMltcasts15mOccurTime = _PmTcaIfInMltcasts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 19, 1, 6),
    _PmTcaIfInMltcasts15mOccurTime_Type()
)
pmTcaIfInMltcasts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts15mOccurTime.setStatus("current")
_PmTcaIfInMltcasts1hTable_Object = MibTable
pmTcaIfInMltcasts1hTable = _PmTcaIfInMltcasts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20)
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hTable.setStatus("current")
_PmTcaIfInMltcasts1hEntry_Object = MibTableRow
pmTcaIfInMltcasts1hEntry = _PmTcaIfInMltcasts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1)
)
pmTcaIfInMltcasts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInMltcasts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hEntry.setStatus("current")
_PmTcaIfInMltcasts1hIndex_Type = Integer32
_PmTcaIfInMltcasts1hIndex_Object = MibTableColumn
pmTcaIfInMltcasts1hIndex = _PmTcaIfInMltcasts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 1),
    _PmTcaIfInMltcasts1hIndex_Type()
)
pmTcaIfInMltcasts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hIndex.setStatus("current")
_PmTcaIfInMltcasts1hId_Type = OctetString
_PmTcaIfInMltcasts1hId_Object = MibTableColumn
pmTcaIfInMltcasts1hId = _PmTcaIfInMltcasts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 2),
    _PmTcaIfInMltcasts1hId_Type()
)
pmTcaIfInMltcasts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hId.setStatus("current")


class _PmTcaIfInMltcasts1hUnitType_Type(Integer32):
    """Custom type pmTcaIfInMltcasts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInMltcasts1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfInMltcasts1hUnitType_Object = MibTableColumn
pmTcaIfInMltcasts1hUnitType = _PmTcaIfInMltcasts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 3),
    _PmTcaIfInMltcasts1hUnitType_Type()
)
pmTcaIfInMltcasts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hUnitType.setStatus("current")
_PmTcaIfInMltcasts1hCnt_Type = Counter64
_PmTcaIfInMltcasts1hCnt_Object = MibTableColumn
pmTcaIfInMltcasts1hCnt = _PmTcaIfInMltcasts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 4),
    _PmTcaIfInMltcasts1hCnt_Type()
)
pmTcaIfInMltcasts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hCnt.setStatus("current")
_PmTcaIfInMltcasts1hThreshold_Type = Counter64
_PmTcaIfInMltcasts1hThreshold_Object = MibTableColumn
pmTcaIfInMltcasts1hThreshold = _PmTcaIfInMltcasts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 5),
    _PmTcaIfInMltcasts1hThreshold_Type()
)
pmTcaIfInMltcasts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hThreshold.setStatus("current")
_PmTcaIfInMltcasts1hOccurTime_Type = DateAndTime
_PmTcaIfInMltcasts1hOccurTime_Object = MibTableColumn
pmTcaIfInMltcasts1hOccurTime = _PmTcaIfInMltcasts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 20, 1, 6),
    _PmTcaIfInMltcasts1hOccurTime_Type()
)
pmTcaIfInMltcasts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1hOccurTime.setStatus("current")
_PmTcaIfInMltcasts1dTable_Object = MibTable
pmTcaIfInMltcasts1dTable = _PmTcaIfInMltcasts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21)
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dTable.setStatus("current")
_PmTcaIfInMltcasts1dEntry_Object = MibTableRow
pmTcaIfInMltcasts1dEntry = _PmTcaIfInMltcasts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1)
)
pmTcaIfInMltcasts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfInMltcasts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dEntry.setStatus("current")
_PmTcaIfInMltcasts1dIndex_Type = Integer32
_PmTcaIfInMltcasts1dIndex_Object = MibTableColumn
pmTcaIfInMltcasts1dIndex = _PmTcaIfInMltcasts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 1),
    _PmTcaIfInMltcasts1dIndex_Type()
)
pmTcaIfInMltcasts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dIndex.setStatus("current")
_PmTcaIfInMltcasts1dId_Type = OctetString
_PmTcaIfInMltcasts1dId_Object = MibTableColumn
pmTcaIfInMltcasts1dId = _PmTcaIfInMltcasts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 2),
    _PmTcaIfInMltcasts1dId_Type()
)
pmTcaIfInMltcasts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dId.setStatus("current")


class _PmTcaIfInMltcasts1dUnitType_Type(Integer32):
    """Custom type pmTcaIfInMltcasts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfInMltcasts1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfInMltcasts1dUnitType_Object = MibTableColumn
pmTcaIfInMltcasts1dUnitType = _PmTcaIfInMltcasts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 3),
    _PmTcaIfInMltcasts1dUnitType_Type()
)
pmTcaIfInMltcasts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dUnitType.setStatus("current")
_PmTcaIfInMltcasts1dCnt_Type = Counter64
_PmTcaIfInMltcasts1dCnt_Object = MibTableColumn
pmTcaIfInMltcasts1dCnt = _PmTcaIfInMltcasts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 4),
    _PmTcaIfInMltcasts1dCnt_Type()
)
pmTcaIfInMltcasts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dCnt.setStatus("current")
_PmTcaIfInMltcasts1dThreshold_Type = Counter64
_PmTcaIfInMltcasts1dThreshold_Object = MibTableColumn
pmTcaIfInMltcasts1dThreshold = _PmTcaIfInMltcasts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 5),
    _PmTcaIfInMltcasts1dThreshold_Type()
)
pmTcaIfInMltcasts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dThreshold.setStatus("current")
_PmTcaIfInMltcasts1dOccurTime_Type = DateAndTime
_PmTcaIfInMltcasts1dOccurTime_Object = MibTableColumn
pmTcaIfInMltcasts1dOccurTime = _PmTcaIfInMltcasts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 21, 1, 6),
    _PmTcaIfInMltcasts1dOccurTime_Type()
)
pmTcaIfInMltcasts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfInMltcasts1dOccurTime.setStatus("current")
_PmTcaIfCrcErr15mTable_Object = MibTable
pmTcaIfCrcErr15mTable = _PmTcaIfCrcErr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22)
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mTable.setStatus("current")
_PmTcaIfCrcErr15mEntry_Object = MibTableRow
pmTcaIfCrcErr15mEntry = _PmTcaIfCrcErr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1)
)
pmTcaIfCrcErr15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCrcErr15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mEntry.setStatus("current")
_PmTcaIfCrcErr15mIndex_Type = Integer32
_PmTcaIfCrcErr15mIndex_Object = MibTableColumn
pmTcaIfCrcErr15mIndex = _PmTcaIfCrcErr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 1),
    _PmTcaIfCrcErr15mIndex_Type()
)
pmTcaIfCrcErr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mIndex.setStatus("current")
_PmTcaIfCrcErr15mId_Type = OctetString
_PmTcaIfCrcErr15mId_Object = MibTableColumn
pmTcaIfCrcErr15mId = _PmTcaIfCrcErr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 2),
    _PmTcaIfCrcErr15mId_Type()
)
pmTcaIfCrcErr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mId.setStatus("current")


class _PmTcaIfCrcErr15mUnitType_Type(Integer32):
    """Custom type pmTcaIfCrcErr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCrcErr15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfCrcErr15mUnitType_Object = MibTableColumn
pmTcaIfCrcErr15mUnitType = _PmTcaIfCrcErr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 3),
    _PmTcaIfCrcErr15mUnitType_Type()
)
pmTcaIfCrcErr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mUnitType.setStatus("current")
_PmTcaIfCrcErr15mCnt_Type = Counter64
_PmTcaIfCrcErr15mCnt_Object = MibTableColumn
pmTcaIfCrcErr15mCnt = _PmTcaIfCrcErr15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 4),
    _PmTcaIfCrcErr15mCnt_Type()
)
pmTcaIfCrcErr15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mCnt.setStatus("current")
_PmTcaIfCrcErr15mThreshold_Type = Counter64
_PmTcaIfCrcErr15mThreshold_Object = MibTableColumn
pmTcaIfCrcErr15mThreshold = _PmTcaIfCrcErr15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 5),
    _PmTcaIfCrcErr15mThreshold_Type()
)
pmTcaIfCrcErr15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mThreshold.setStatus("current")
_PmTcaIfCrcErr15mOccurTime_Type = DateAndTime
_PmTcaIfCrcErr15mOccurTime_Object = MibTableColumn
pmTcaIfCrcErr15mOccurTime = _PmTcaIfCrcErr15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 22, 1, 6),
    _PmTcaIfCrcErr15mOccurTime_Type()
)
pmTcaIfCrcErr15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr15mOccurTime.setStatus("current")
_PmTcaIfCrcErr1hTable_Object = MibTable
pmTcaIfCrcErr1hTable = _PmTcaIfCrcErr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23)
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hTable.setStatus("current")
_PmTcaIfCrcErr1hEntry_Object = MibTableRow
pmTcaIfCrcErr1hEntry = _PmTcaIfCrcErr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1)
)
pmTcaIfCrcErr1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCrcErr1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hEntry.setStatus("current")
_PmTcaIfCrcErr1hIndex_Type = Integer32
_PmTcaIfCrcErr1hIndex_Object = MibTableColumn
pmTcaIfCrcErr1hIndex = _PmTcaIfCrcErr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 1),
    _PmTcaIfCrcErr1hIndex_Type()
)
pmTcaIfCrcErr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hIndex.setStatus("current")
_PmTcaIfCrcErr1hId_Type = OctetString
_PmTcaIfCrcErr1hId_Object = MibTableColumn
pmTcaIfCrcErr1hId = _PmTcaIfCrcErr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 2),
    _PmTcaIfCrcErr1hId_Type()
)
pmTcaIfCrcErr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hId.setStatus("current")


class _PmTcaIfCrcErr1hUnitType_Type(Integer32):
    """Custom type pmTcaIfCrcErr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCrcErr1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfCrcErr1hUnitType_Object = MibTableColumn
pmTcaIfCrcErr1hUnitType = _PmTcaIfCrcErr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 3),
    _PmTcaIfCrcErr1hUnitType_Type()
)
pmTcaIfCrcErr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hUnitType.setStatus("current")
_PmTcaIfCrcErr1hCnt_Type = Counter64
_PmTcaIfCrcErr1hCnt_Object = MibTableColumn
pmTcaIfCrcErr1hCnt = _PmTcaIfCrcErr1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 4),
    _PmTcaIfCrcErr1hCnt_Type()
)
pmTcaIfCrcErr1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hCnt.setStatus("current")
_PmTcaIfCrcErr1hThreshold_Type = Counter64
_PmTcaIfCrcErr1hThreshold_Object = MibTableColumn
pmTcaIfCrcErr1hThreshold = _PmTcaIfCrcErr1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 5),
    _PmTcaIfCrcErr1hThreshold_Type()
)
pmTcaIfCrcErr1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hThreshold.setStatus("current")
_PmTcaIfCrcErr1hOccurTime_Type = DateAndTime
_PmTcaIfCrcErr1hOccurTime_Object = MibTableColumn
pmTcaIfCrcErr1hOccurTime = _PmTcaIfCrcErr1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 23, 1, 6),
    _PmTcaIfCrcErr1hOccurTime_Type()
)
pmTcaIfCrcErr1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1hOccurTime.setStatus("current")
_PmTcaIfCrcErr1dTable_Object = MibTable
pmTcaIfCrcErr1dTable = _PmTcaIfCrcErr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24)
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dTable.setStatus("current")
_PmTcaIfCrcErr1dEntry_Object = MibTableRow
pmTcaIfCrcErr1dEntry = _PmTcaIfCrcErr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1)
)
pmTcaIfCrcErr1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCrcErr1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dEntry.setStatus("current")
_PmTcaIfCrcErr1dIndex_Type = Integer32
_PmTcaIfCrcErr1dIndex_Object = MibTableColumn
pmTcaIfCrcErr1dIndex = _PmTcaIfCrcErr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 1),
    _PmTcaIfCrcErr1dIndex_Type()
)
pmTcaIfCrcErr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dIndex.setStatus("current")
_PmTcaIfCrcErr1dId_Type = OctetString
_PmTcaIfCrcErr1dId_Object = MibTableColumn
pmTcaIfCrcErr1dId = _PmTcaIfCrcErr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 2),
    _PmTcaIfCrcErr1dId_Type()
)
pmTcaIfCrcErr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dId.setStatus("current")


class _PmTcaIfCrcErr1dUnitType_Type(Integer32):
    """Custom type pmTcaIfCrcErr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCrcErr1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfCrcErr1dUnitType_Object = MibTableColumn
pmTcaIfCrcErr1dUnitType = _PmTcaIfCrcErr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 3),
    _PmTcaIfCrcErr1dUnitType_Type()
)
pmTcaIfCrcErr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dUnitType.setStatus("current")
_PmTcaIfCrcErr1dCnt_Type = Counter64
_PmTcaIfCrcErr1dCnt_Object = MibTableColumn
pmTcaIfCrcErr1dCnt = _PmTcaIfCrcErr1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 4),
    _PmTcaIfCrcErr1dCnt_Type()
)
pmTcaIfCrcErr1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dCnt.setStatus("current")
_PmTcaIfCrcErr1dThreshold_Type = Counter64
_PmTcaIfCrcErr1dThreshold_Object = MibTableColumn
pmTcaIfCrcErr1dThreshold = _PmTcaIfCrcErr1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 5),
    _PmTcaIfCrcErr1dThreshold_Type()
)
pmTcaIfCrcErr1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dThreshold.setStatus("current")
_PmTcaIfCrcErr1dOccurTime_Type = DateAndTime
_PmTcaIfCrcErr1dOccurTime_Object = MibTableColumn
pmTcaIfCrcErr1dOccurTime = _PmTcaIfCrcErr1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 24, 1, 6),
    _PmTcaIfCrcErr1dOccurTime_Type()
)
pmTcaIfCrcErr1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCrcErr1dOccurTime.setStatus("current")
_PmTcaIfCollisions15mTable_Object = MibTable
pmTcaIfCollisions15mTable = _PmTcaIfCollisions15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25)
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mTable.setStatus("current")
_PmTcaIfCollisions15mEntry_Object = MibTableRow
pmTcaIfCollisions15mEntry = _PmTcaIfCollisions15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1)
)
pmTcaIfCollisions15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCollisions15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mEntry.setStatus("current")
_PmTcaIfCollisions15mIndex_Type = Integer32
_PmTcaIfCollisions15mIndex_Object = MibTableColumn
pmTcaIfCollisions15mIndex = _PmTcaIfCollisions15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 1),
    _PmTcaIfCollisions15mIndex_Type()
)
pmTcaIfCollisions15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mIndex.setStatus("current")
_PmTcaIfCollisions15mId_Type = OctetString
_PmTcaIfCollisions15mId_Object = MibTableColumn
pmTcaIfCollisions15mId = _PmTcaIfCollisions15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 2),
    _PmTcaIfCollisions15mId_Type()
)
pmTcaIfCollisions15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mId.setStatus("current")


class _PmTcaIfCollisions15mUnitType_Type(Integer32):
    """Custom type pmTcaIfCollisions15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCollisions15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfCollisions15mUnitType_Object = MibTableColumn
pmTcaIfCollisions15mUnitType = _PmTcaIfCollisions15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 3),
    _PmTcaIfCollisions15mUnitType_Type()
)
pmTcaIfCollisions15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mUnitType.setStatus("current")
_PmTcaIfCollisions15mCnt_Type = Counter64
_PmTcaIfCollisions15mCnt_Object = MibTableColumn
pmTcaIfCollisions15mCnt = _PmTcaIfCollisions15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 4),
    _PmTcaIfCollisions15mCnt_Type()
)
pmTcaIfCollisions15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mCnt.setStatus("current")
_PmTcaIfCollisions15mThreshold_Type = Counter64
_PmTcaIfCollisions15mThreshold_Object = MibTableColumn
pmTcaIfCollisions15mThreshold = _PmTcaIfCollisions15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 5),
    _PmTcaIfCollisions15mThreshold_Type()
)
pmTcaIfCollisions15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mThreshold.setStatus("current")
_PmTcaIfCollisions15mOccurTime_Type = DateAndTime
_PmTcaIfCollisions15mOccurTime_Object = MibTableColumn
pmTcaIfCollisions15mOccurTime = _PmTcaIfCollisions15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 25, 1, 6),
    _PmTcaIfCollisions15mOccurTime_Type()
)
pmTcaIfCollisions15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions15mOccurTime.setStatus("current")
_PmTcaIfCollisions1hTable_Object = MibTable
pmTcaIfCollisions1hTable = _PmTcaIfCollisions1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26)
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hTable.setStatus("current")
_PmTcaIfCollisions1hEntry_Object = MibTableRow
pmTcaIfCollisions1hEntry = _PmTcaIfCollisions1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1)
)
pmTcaIfCollisions1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCollisions1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hEntry.setStatus("current")
_PmTcaIfCollisions1hIndex_Type = Integer32
_PmTcaIfCollisions1hIndex_Object = MibTableColumn
pmTcaIfCollisions1hIndex = _PmTcaIfCollisions1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 1),
    _PmTcaIfCollisions1hIndex_Type()
)
pmTcaIfCollisions1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hIndex.setStatus("current")
_PmTcaIfCollisions1hId_Type = OctetString
_PmTcaIfCollisions1hId_Object = MibTableColumn
pmTcaIfCollisions1hId = _PmTcaIfCollisions1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 2),
    _PmTcaIfCollisions1hId_Type()
)
pmTcaIfCollisions1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hId.setStatus("current")


class _PmTcaIfCollisions1hUnitType_Type(Integer32):
    """Custom type pmTcaIfCollisions1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCollisions1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfCollisions1hUnitType_Object = MibTableColumn
pmTcaIfCollisions1hUnitType = _PmTcaIfCollisions1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 3),
    _PmTcaIfCollisions1hUnitType_Type()
)
pmTcaIfCollisions1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hUnitType.setStatus("current")
_PmTcaIfCollisions1hCnt_Type = Counter64
_PmTcaIfCollisions1hCnt_Object = MibTableColumn
pmTcaIfCollisions1hCnt = _PmTcaIfCollisions1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 4),
    _PmTcaIfCollisions1hCnt_Type()
)
pmTcaIfCollisions1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hCnt.setStatus("current")
_PmTcaIfCollisions1hThreshold_Type = Counter64
_PmTcaIfCollisions1hThreshold_Object = MibTableColumn
pmTcaIfCollisions1hThreshold = _PmTcaIfCollisions1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 5),
    _PmTcaIfCollisions1hThreshold_Type()
)
pmTcaIfCollisions1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hThreshold.setStatus("current")
_PmTcaIfCollisions1hOccurTime_Type = DateAndTime
_PmTcaIfCollisions1hOccurTime_Object = MibTableColumn
pmTcaIfCollisions1hOccurTime = _PmTcaIfCollisions1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 26, 1, 6),
    _PmTcaIfCollisions1hOccurTime_Type()
)
pmTcaIfCollisions1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1hOccurTime.setStatus("current")
_PmTcaIfCollisions1dTable_Object = MibTable
pmTcaIfCollisions1dTable = _PmTcaIfCollisions1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27)
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dTable.setStatus("current")
_PmTcaIfCollisions1dEntry_Object = MibTableRow
pmTcaIfCollisions1dEntry = _PmTcaIfCollisions1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1)
)
pmTcaIfCollisions1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfCollisions1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dEntry.setStatus("current")
_PmTcaIfCollisions1dIndex_Type = Integer32
_PmTcaIfCollisions1dIndex_Object = MibTableColumn
pmTcaIfCollisions1dIndex = _PmTcaIfCollisions1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 1),
    _PmTcaIfCollisions1dIndex_Type()
)
pmTcaIfCollisions1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dIndex.setStatus("current")
_PmTcaIfCollisions1dId_Type = OctetString
_PmTcaIfCollisions1dId_Object = MibTableColumn
pmTcaIfCollisions1dId = _PmTcaIfCollisions1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 2),
    _PmTcaIfCollisions1dId_Type()
)
pmTcaIfCollisions1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dId.setStatus("current")


class _PmTcaIfCollisions1dUnitType_Type(Integer32):
    """Custom type pmTcaIfCollisions1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfCollisions1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfCollisions1dUnitType_Object = MibTableColumn
pmTcaIfCollisions1dUnitType = _PmTcaIfCollisions1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 3),
    _PmTcaIfCollisions1dUnitType_Type()
)
pmTcaIfCollisions1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dUnitType.setStatus("current")
_PmTcaIfCollisions1dCnt_Type = Counter64
_PmTcaIfCollisions1dCnt_Object = MibTableColumn
pmTcaIfCollisions1dCnt = _PmTcaIfCollisions1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 4),
    _PmTcaIfCollisions1dCnt_Type()
)
pmTcaIfCollisions1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dCnt.setStatus("current")
_PmTcaIfCollisions1dThreshold_Type = Counter64
_PmTcaIfCollisions1dThreshold_Object = MibTableColumn
pmTcaIfCollisions1dThreshold = _PmTcaIfCollisions1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 5),
    _PmTcaIfCollisions1dThreshold_Type()
)
pmTcaIfCollisions1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dThreshold.setStatus("current")
_PmTcaIfCollisions1dOccurTime_Type = DateAndTime
_PmTcaIfCollisions1dOccurTime_Object = MibTableColumn
pmTcaIfCollisions1dOccurTime = _PmTcaIfCollisions1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 27, 1, 6),
    _PmTcaIfCollisions1dOccurTime_Type()
)
pmTcaIfCollisions1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfCollisions1dOccurTime.setStatus("current")
_PmTcaIfUndersized15mTable_Object = MibTable
pmTcaIfUndersized15mTable = _PmTcaIfUndersized15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28)
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mTable.setStatus("current")
_PmTcaIfUndersized15mEntry_Object = MibTableRow
pmTcaIfUndersized15mEntry = _PmTcaIfUndersized15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1)
)
pmTcaIfUndersized15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfUndersized15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mEntry.setStatus("current")
_PmTcaIfUndersized15mIndex_Type = Integer32
_PmTcaIfUndersized15mIndex_Object = MibTableColumn
pmTcaIfUndersized15mIndex = _PmTcaIfUndersized15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 1),
    _PmTcaIfUndersized15mIndex_Type()
)
pmTcaIfUndersized15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mIndex.setStatus("current")
_PmTcaIfUndersized15mId_Type = OctetString
_PmTcaIfUndersized15mId_Object = MibTableColumn
pmTcaIfUndersized15mId = _PmTcaIfUndersized15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 2),
    _PmTcaIfUndersized15mId_Type()
)
pmTcaIfUndersized15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mId.setStatus("current")


class _PmTcaIfUndersized15mUnitType_Type(Integer32):
    """Custom type pmTcaIfUndersized15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfUndersized15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfUndersized15mUnitType_Object = MibTableColumn
pmTcaIfUndersized15mUnitType = _PmTcaIfUndersized15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 3),
    _PmTcaIfUndersized15mUnitType_Type()
)
pmTcaIfUndersized15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mUnitType.setStatus("current")
_PmTcaIfUndersized15mCnt_Type = Counter64
_PmTcaIfUndersized15mCnt_Object = MibTableColumn
pmTcaIfUndersized15mCnt = _PmTcaIfUndersized15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 4),
    _PmTcaIfUndersized15mCnt_Type()
)
pmTcaIfUndersized15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mCnt.setStatus("current")
_PmTcaIfUndersized15mThreshold_Type = Counter64
_PmTcaIfUndersized15mThreshold_Object = MibTableColumn
pmTcaIfUndersized15mThreshold = _PmTcaIfUndersized15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 5),
    _PmTcaIfUndersized15mThreshold_Type()
)
pmTcaIfUndersized15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mThreshold.setStatus("current")
_PmTcaIfUndersized15mOccurTime_Type = DateAndTime
_PmTcaIfUndersized15mOccurTime_Object = MibTableColumn
pmTcaIfUndersized15mOccurTime = _PmTcaIfUndersized15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 28, 1, 6),
    _PmTcaIfUndersized15mOccurTime_Type()
)
pmTcaIfUndersized15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized15mOccurTime.setStatus("current")
_PmTcaIfUndersized1hTable_Object = MibTable
pmTcaIfUndersized1hTable = _PmTcaIfUndersized1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29)
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hTable.setStatus("current")
_PmTcaIfUndersized1hEntry_Object = MibTableRow
pmTcaIfUndersized1hEntry = _PmTcaIfUndersized1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1)
)
pmTcaIfUndersized1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfUndersized1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hEntry.setStatus("current")
_PmTcaIfUndersized1hIndex_Type = Integer32
_PmTcaIfUndersized1hIndex_Object = MibTableColumn
pmTcaIfUndersized1hIndex = _PmTcaIfUndersized1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 1),
    _PmTcaIfUndersized1hIndex_Type()
)
pmTcaIfUndersized1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hIndex.setStatus("current")
_PmTcaIfUndersized1hId_Type = OctetString
_PmTcaIfUndersized1hId_Object = MibTableColumn
pmTcaIfUndersized1hId = _PmTcaIfUndersized1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 2),
    _PmTcaIfUndersized1hId_Type()
)
pmTcaIfUndersized1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hId.setStatus("current")


class _PmTcaIfUndersized1hUnitType_Type(Integer32):
    """Custom type pmTcaIfUndersized1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfUndersized1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfUndersized1hUnitType_Object = MibTableColumn
pmTcaIfUndersized1hUnitType = _PmTcaIfUndersized1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 3),
    _PmTcaIfUndersized1hUnitType_Type()
)
pmTcaIfUndersized1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hUnitType.setStatus("current")
_PmTcaIfUndersized1hCnt_Type = Counter64
_PmTcaIfUndersized1hCnt_Object = MibTableColumn
pmTcaIfUndersized1hCnt = _PmTcaIfUndersized1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 4),
    _PmTcaIfUndersized1hCnt_Type()
)
pmTcaIfUndersized1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hCnt.setStatus("current")
_PmTcaIfUndersized1hThreshold_Type = Counter64
_PmTcaIfUndersized1hThreshold_Object = MibTableColumn
pmTcaIfUndersized1hThreshold = _PmTcaIfUndersized1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 5),
    _PmTcaIfUndersized1hThreshold_Type()
)
pmTcaIfUndersized1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hThreshold.setStatus("current")
_PmTcaIfUndersized1hOccurTime_Type = DateAndTime
_PmTcaIfUndersized1hOccurTime_Object = MibTableColumn
pmTcaIfUndersized1hOccurTime = _PmTcaIfUndersized1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 29, 1, 6),
    _PmTcaIfUndersized1hOccurTime_Type()
)
pmTcaIfUndersized1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1hOccurTime.setStatus("current")
_PmTcaIfUndersized1dTable_Object = MibTable
pmTcaIfUndersized1dTable = _PmTcaIfUndersized1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30)
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dTable.setStatus("current")
_PmTcaIfUndersized1dEntry_Object = MibTableRow
pmTcaIfUndersized1dEntry = _PmTcaIfUndersized1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1)
)
pmTcaIfUndersized1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfUndersized1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dEntry.setStatus("current")
_PmTcaIfUndersized1dIndex_Type = Integer32
_PmTcaIfUndersized1dIndex_Object = MibTableColumn
pmTcaIfUndersized1dIndex = _PmTcaIfUndersized1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 1),
    _PmTcaIfUndersized1dIndex_Type()
)
pmTcaIfUndersized1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dIndex.setStatus("current")
_PmTcaIfUndersized1dId_Type = OctetString
_PmTcaIfUndersized1dId_Object = MibTableColumn
pmTcaIfUndersized1dId = _PmTcaIfUndersized1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 2),
    _PmTcaIfUndersized1dId_Type()
)
pmTcaIfUndersized1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dId.setStatus("current")


class _PmTcaIfUndersized1dUnitType_Type(Integer32):
    """Custom type pmTcaIfUndersized1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfUndersized1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfUndersized1dUnitType_Object = MibTableColumn
pmTcaIfUndersized1dUnitType = _PmTcaIfUndersized1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 3),
    _PmTcaIfUndersized1dUnitType_Type()
)
pmTcaIfUndersized1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dUnitType.setStatus("current")
_PmTcaIfUndersized1dCnt_Type = Counter64
_PmTcaIfUndersized1dCnt_Object = MibTableColumn
pmTcaIfUndersized1dCnt = _PmTcaIfUndersized1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 4),
    _PmTcaIfUndersized1dCnt_Type()
)
pmTcaIfUndersized1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dCnt.setStatus("current")
_PmTcaIfUndersized1dThreshold_Type = Counter64
_PmTcaIfUndersized1dThreshold_Object = MibTableColumn
pmTcaIfUndersized1dThreshold = _PmTcaIfUndersized1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 5),
    _PmTcaIfUndersized1dThreshold_Type()
)
pmTcaIfUndersized1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dThreshold.setStatus("current")
_PmTcaIfUndersized1dOccurTime_Type = DateAndTime
_PmTcaIfUndersized1dOccurTime_Object = MibTableColumn
pmTcaIfUndersized1dOccurTime = _PmTcaIfUndersized1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 30, 1, 6),
    _PmTcaIfUndersized1dOccurTime_Type()
)
pmTcaIfUndersized1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfUndersized1dOccurTime.setStatus("current")
_PmTcaIfOversized15mTable_Object = MibTable
pmTcaIfOversized15mTable = _PmTcaIfOversized15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31)
)
if mibBuilder.loadTexts:
    pmTcaIfOversized15mTable.setStatus("current")
_PmTcaIfOversized15mEntry_Object = MibTableRow
pmTcaIfOversized15mEntry = _PmTcaIfOversized15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1)
)
pmTcaIfOversized15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOversized15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOversized15mEntry.setStatus("current")
_PmTcaIfOversized15mIndex_Type = Integer32
_PmTcaIfOversized15mIndex_Object = MibTableColumn
pmTcaIfOversized15mIndex = _PmTcaIfOversized15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 1),
    _PmTcaIfOversized15mIndex_Type()
)
pmTcaIfOversized15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mIndex.setStatus("current")
_PmTcaIfOversized15mId_Type = OctetString
_PmTcaIfOversized15mId_Object = MibTableColumn
pmTcaIfOversized15mId = _PmTcaIfOversized15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 2),
    _PmTcaIfOversized15mId_Type()
)
pmTcaIfOversized15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mId.setStatus("current")


class _PmTcaIfOversized15mUnitType_Type(Integer32):
    """Custom type pmTcaIfOversized15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOversized15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfOversized15mUnitType_Object = MibTableColumn
pmTcaIfOversized15mUnitType = _PmTcaIfOversized15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 3),
    _PmTcaIfOversized15mUnitType_Type()
)
pmTcaIfOversized15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mUnitType.setStatus("current")
_PmTcaIfOversized15mCnt_Type = Counter64
_PmTcaIfOversized15mCnt_Object = MibTableColumn
pmTcaIfOversized15mCnt = _PmTcaIfOversized15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 4),
    _PmTcaIfOversized15mCnt_Type()
)
pmTcaIfOversized15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mCnt.setStatus("current")
_PmTcaIfOversized15mThreshold_Type = Counter64
_PmTcaIfOversized15mThreshold_Object = MibTableColumn
pmTcaIfOversized15mThreshold = _PmTcaIfOversized15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 5),
    _PmTcaIfOversized15mThreshold_Type()
)
pmTcaIfOversized15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mThreshold.setStatus("current")
_PmTcaIfOversized15mOccurTime_Type = DateAndTime
_PmTcaIfOversized15mOccurTime_Object = MibTableColumn
pmTcaIfOversized15mOccurTime = _PmTcaIfOversized15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 31, 1, 6),
    _PmTcaIfOversized15mOccurTime_Type()
)
pmTcaIfOversized15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized15mOccurTime.setStatus("current")
_PmTcaIfOversized1hTable_Object = MibTable
pmTcaIfOversized1hTable = _PmTcaIfOversized1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32)
)
if mibBuilder.loadTexts:
    pmTcaIfOversized1hTable.setStatus("current")
_PmTcaIfOversized1hEntry_Object = MibTableRow
pmTcaIfOversized1hEntry = _PmTcaIfOversized1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1)
)
pmTcaIfOversized1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOversized1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOversized1hEntry.setStatus("current")
_PmTcaIfOversized1hIndex_Type = Integer32
_PmTcaIfOversized1hIndex_Object = MibTableColumn
pmTcaIfOversized1hIndex = _PmTcaIfOversized1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 1),
    _PmTcaIfOversized1hIndex_Type()
)
pmTcaIfOversized1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hIndex.setStatus("current")
_PmTcaIfOversized1hId_Type = OctetString
_PmTcaIfOversized1hId_Object = MibTableColumn
pmTcaIfOversized1hId = _PmTcaIfOversized1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 2),
    _PmTcaIfOversized1hId_Type()
)
pmTcaIfOversized1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hId.setStatus("current")


class _PmTcaIfOversized1hUnitType_Type(Integer32):
    """Custom type pmTcaIfOversized1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOversized1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfOversized1hUnitType_Object = MibTableColumn
pmTcaIfOversized1hUnitType = _PmTcaIfOversized1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 3),
    _PmTcaIfOversized1hUnitType_Type()
)
pmTcaIfOversized1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hUnitType.setStatus("current")
_PmTcaIfOversized1hCnt_Type = Counter64
_PmTcaIfOversized1hCnt_Object = MibTableColumn
pmTcaIfOversized1hCnt = _PmTcaIfOversized1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 4),
    _PmTcaIfOversized1hCnt_Type()
)
pmTcaIfOversized1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hCnt.setStatus("current")
_PmTcaIfOversized1hThreshold_Type = Counter64
_PmTcaIfOversized1hThreshold_Object = MibTableColumn
pmTcaIfOversized1hThreshold = _PmTcaIfOversized1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 5),
    _PmTcaIfOversized1hThreshold_Type()
)
pmTcaIfOversized1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hThreshold.setStatus("current")
_PmTcaIfOversized1hOccurTime_Type = DateAndTime
_PmTcaIfOversized1hOccurTime_Object = MibTableColumn
pmTcaIfOversized1hOccurTime = _PmTcaIfOversized1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 32, 1, 6),
    _PmTcaIfOversized1hOccurTime_Type()
)
pmTcaIfOversized1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1hOccurTime.setStatus("current")
_PmTcaIfOversized1dTable_Object = MibTable
pmTcaIfOversized1dTable = _PmTcaIfOversized1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33)
)
if mibBuilder.loadTexts:
    pmTcaIfOversized1dTable.setStatus("current")
_PmTcaIfOversized1dEntry_Object = MibTableRow
pmTcaIfOversized1dEntry = _PmTcaIfOversized1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1)
)
pmTcaIfOversized1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOversized1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOversized1dEntry.setStatus("current")
_PmTcaIfOversized1dIndex_Type = Integer32
_PmTcaIfOversized1dIndex_Object = MibTableColumn
pmTcaIfOversized1dIndex = _PmTcaIfOversized1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 1),
    _PmTcaIfOversized1dIndex_Type()
)
pmTcaIfOversized1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dIndex.setStatus("current")
_PmTcaIfOversized1dId_Type = OctetString
_PmTcaIfOversized1dId_Object = MibTableColumn
pmTcaIfOversized1dId = _PmTcaIfOversized1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 2),
    _PmTcaIfOversized1dId_Type()
)
pmTcaIfOversized1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dId.setStatus("current")


class _PmTcaIfOversized1dUnitType_Type(Integer32):
    """Custom type pmTcaIfOversized1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOversized1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfOversized1dUnitType_Object = MibTableColumn
pmTcaIfOversized1dUnitType = _PmTcaIfOversized1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 3),
    _PmTcaIfOversized1dUnitType_Type()
)
pmTcaIfOversized1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dUnitType.setStatus("current")
_PmTcaIfOversized1dCnt_Type = Counter64
_PmTcaIfOversized1dCnt_Object = MibTableColumn
pmTcaIfOversized1dCnt = _PmTcaIfOversized1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 4),
    _PmTcaIfOversized1dCnt_Type()
)
pmTcaIfOversized1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dCnt.setStatus("current")
_PmTcaIfOversized1dThreshold_Type = Counter64
_PmTcaIfOversized1dThreshold_Object = MibTableColumn
pmTcaIfOversized1dThreshold = _PmTcaIfOversized1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 5),
    _PmTcaIfOversized1dThreshold_Type()
)
pmTcaIfOversized1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dThreshold.setStatus("current")
_PmTcaIfOversized1dOccurTime_Type = DateAndTime
_PmTcaIfOversized1dOccurTime_Object = MibTableColumn
pmTcaIfOversized1dOccurTime = _PmTcaIfOversized1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 33, 1, 6),
    _PmTcaIfOversized1dOccurTime_Type()
)
pmTcaIfOversized1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOversized1dOccurTime.setStatus("current")
_PmTcaIfFragments15mTable_Object = MibTable
pmTcaIfFragments15mTable = _PmTcaIfFragments15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34)
)
if mibBuilder.loadTexts:
    pmTcaIfFragments15mTable.setStatus("current")
_PmTcaIfFragments15mEntry_Object = MibTableRow
pmTcaIfFragments15mEntry = _PmTcaIfFragments15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1)
)
pmTcaIfFragments15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfFragments15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfFragments15mEntry.setStatus("current")
_PmTcaIfFragments15mIndex_Type = Integer32
_PmTcaIfFragments15mIndex_Object = MibTableColumn
pmTcaIfFragments15mIndex = _PmTcaIfFragments15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 1),
    _PmTcaIfFragments15mIndex_Type()
)
pmTcaIfFragments15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mIndex.setStatus("current")
_PmTcaIfFragments15mId_Type = OctetString
_PmTcaIfFragments15mId_Object = MibTableColumn
pmTcaIfFragments15mId = _PmTcaIfFragments15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 2),
    _PmTcaIfFragments15mId_Type()
)
pmTcaIfFragments15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mId.setStatus("current")


class _PmTcaIfFragments15mUnitType_Type(Integer32):
    """Custom type pmTcaIfFragments15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfFragments15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfFragments15mUnitType_Object = MibTableColumn
pmTcaIfFragments15mUnitType = _PmTcaIfFragments15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 3),
    _PmTcaIfFragments15mUnitType_Type()
)
pmTcaIfFragments15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mUnitType.setStatus("current")
_PmTcaIfFragments15mCnt_Type = Counter64
_PmTcaIfFragments15mCnt_Object = MibTableColumn
pmTcaIfFragments15mCnt = _PmTcaIfFragments15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 4),
    _PmTcaIfFragments15mCnt_Type()
)
pmTcaIfFragments15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mCnt.setStatus("current")
_PmTcaIfFragments15mThreshold_Type = Counter64
_PmTcaIfFragments15mThreshold_Object = MibTableColumn
pmTcaIfFragments15mThreshold = _PmTcaIfFragments15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 5),
    _PmTcaIfFragments15mThreshold_Type()
)
pmTcaIfFragments15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mThreshold.setStatus("current")
_PmTcaIfFragments15mOccurTime_Type = DateAndTime
_PmTcaIfFragments15mOccurTime_Object = MibTableColumn
pmTcaIfFragments15mOccurTime = _PmTcaIfFragments15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 34, 1, 6),
    _PmTcaIfFragments15mOccurTime_Type()
)
pmTcaIfFragments15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments15mOccurTime.setStatus("current")
_PmTcaIfFragments1hTable_Object = MibTable
pmTcaIfFragments1hTable = _PmTcaIfFragments1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35)
)
if mibBuilder.loadTexts:
    pmTcaIfFragments1hTable.setStatus("current")
_PmTcaIfFragments1hEntry_Object = MibTableRow
pmTcaIfFragments1hEntry = _PmTcaIfFragments1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1)
)
pmTcaIfFragments1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfFragments1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfFragments1hEntry.setStatus("current")
_PmTcaIfFragments1hIndex_Type = Integer32
_PmTcaIfFragments1hIndex_Object = MibTableColumn
pmTcaIfFragments1hIndex = _PmTcaIfFragments1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 1),
    _PmTcaIfFragments1hIndex_Type()
)
pmTcaIfFragments1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hIndex.setStatus("current")
_PmTcaIfFragments1hId_Type = OctetString
_PmTcaIfFragments1hId_Object = MibTableColumn
pmTcaIfFragments1hId = _PmTcaIfFragments1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 2),
    _PmTcaIfFragments1hId_Type()
)
pmTcaIfFragments1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hId.setStatus("current")


class _PmTcaIfFragments1hUnitType_Type(Integer32):
    """Custom type pmTcaIfFragments1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfFragments1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfFragments1hUnitType_Object = MibTableColumn
pmTcaIfFragments1hUnitType = _PmTcaIfFragments1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 3),
    _PmTcaIfFragments1hUnitType_Type()
)
pmTcaIfFragments1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hUnitType.setStatus("current")
_PmTcaIfFragments1hCnt_Type = Counter64
_PmTcaIfFragments1hCnt_Object = MibTableColumn
pmTcaIfFragments1hCnt = _PmTcaIfFragments1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 4),
    _PmTcaIfFragments1hCnt_Type()
)
pmTcaIfFragments1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hCnt.setStatus("current")
_PmTcaIfFragments1hThreshold_Type = Counter64
_PmTcaIfFragments1hThreshold_Object = MibTableColumn
pmTcaIfFragments1hThreshold = _PmTcaIfFragments1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 5),
    _PmTcaIfFragments1hThreshold_Type()
)
pmTcaIfFragments1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hThreshold.setStatus("current")
_PmTcaIfFragments1hOccurTime_Type = DateAndTime
_PmTcaIfFragments1hOccurTime_Object = MibTableColumn
pmTcaIfFragments1hOccurTime = _PmTcaIfFragments1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 35, 1, 6),
    _PmTcaIfFragments1hOccurTime_Type()
)
pmTcaIfFragments1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1hOccurTime.setStatus("current")
_PmTcaIfFragments1dTable_Object = MibTable
pmTcaIfFragments1dTable = _PmTcaIfFragments1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36)
)
if mibBuilder.loadTexts:
    pmTcaIfFragments1dTable.setStatus("current")
_PmTcaIfFragments1dEntry_Object = MibTableRow
pmTcaIfFragments1dEntry = _PmTcaIfFragments1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1)
)
pmTcaIfFragments1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfFragments1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfFragments1dEntry.setStatus("current")
_PmTcaIfFragments1dIndex_Type = Integer32
_PmTcaIfFragments1dIndex_Object = MibTableColumn
pmTcaIfFragments1dIndex = _PmTcaIfFragments1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 1),
    _PmTcaIfFragments1dIndex_Type()
)
pmTcaIfFragments1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dIndex.setStatus("current")
_PmTcaIfFragments1dId_Type = OctetString
_PmTcaIfFragments1dId_Object = MibTableColumn
pmTcaIfFragments1dId = _PmTcaIfFragments1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 2),
    _PmTcaIfFragments1dId_Type()
)
pmTcaIfFragments1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dId.setStatus("current")


class _PmTcaIfFragments1dUnitType_Type(Integer32):
    """Custom type pmTcaIfFragments1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfFragments1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfFragments1dUnitType_Object = MibTableColumn
pmTcaIfFragments1dUnitType = _PmTcaIfFragments1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 3),
    _PmTcaIfFragments1dUnitType_Type()
)
pmTcaIfFragments1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dUnitType.setStatus("current")
_PmTcaIfFragments1dCnt_Type = Counter64
_PmTcaIfFragments1dCnt_Object = MibTableColumn
pmTcaIfFragments1dCnt = _PmTcaIfFragments1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 4),
    _PmTcaIfFragments1dCnt_Type()
)
pmTcaIfFragments1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dCnt.setStatus("current")
_PmTcaIfFragments1dThreshold_Type = Counter64
_PmTcaIfFragments1dThreshold_Object = MibTableColumn
pmTcaIfFragments1dThreshold = _PmTcaIfFragments1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 5),
    _PmTcaIfFragments1dThreshold_Type()
)
pmTcaIfFragments1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dThreshold.setStatus("current")
_PmTcaIfFragments1dOccurTime_Type = DateAndTime
_PmTcaIfFragments1dOccurTime_Object = MibTableColumn
pmTcaIfFragments1dOccurTime = _PmTcaIfFragments1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 36, 1, 6),
    _PmTcaIfFragments1dOccurTime_Type()
)
pmTcaIfFragments1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfFragments1dOccurTime.setStatus("current")
_PmTcaIfJabbers15mTable_Object = MibTable
pmTcaIfJabbers15mTable = _PmTcaIfJabbers15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37)
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mTable.setStatus("current")
_PmTcaIfJabbers15mEntry_Object = MibTableRow
pmTcaIfJabbers15mEntry = _PmTcaIfJabbers15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1)
)
pmTcaIfJabbers15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfJabbers15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mEntry.setStatus("current")
_PmTcaIfJabbers15mIndex_Type = Integer32
_PmTcaIfJabbers15mIndex_Object = MibTableColumn
pmTcaIfJabbers15mIndex = _PmTcaIfJabbers15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 1),
    _PmTcaIfJabbers15mIndex_Type()
)
pmTcaIfJabbers15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mIndex.setStatus("current")
_PmTcaIfJabbers15mId_Type = OctetString
_PmTcaIfJabbers15mId_Object = MibTableColumn
pmTcaIfJabbers15mId = _PmTcaIfJabbers15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 2),
    _PmTcaIfJabbers15mId_Type()
)
pmTcaIfJabbers15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mId.setStatus("current")


class _PmTcaIfJabbers15mUnitType_Type(Integer32):
    """Custom type pmTcaIfJabbers15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfJabbers15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfJabbers15mUnitType_Object = MibTableColumn
pmTcaIfJabbers15mUnitType = _PmTcaIfJabbers15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 3),
    _PmTcaIfJabbers15mUnitType_Type()
)
pmTcaIfJabbers15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mUnitType.setStatus("current")
_PmTcaIfJabbers15mCnt_Type = Counter64
_PmTcaIfJabbers15mCnt_Object = MibTableColumn
pmTcaIfJabbers15mCnt = _PmTcaIfJabbers15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 4),
    _PmTcaIfJabbers15mCnt_Type()
)
pmTcaIfJabbers15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mCnt.setStatus("current")
_PmTcaIfJabbers15mThreshold_Type = Counter64
_PmTcaIfJabbers15mThreshold_Object = MibTableColumn
pmTcaIfJabbers15mThreshold = _PmTcaIfJabbers15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 5),
    _PmTcaIfJabbers15mThreshold_Type()
)
pmTcaIfJabbers15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mThreshold.setStatus("current")
_PmTcaIfJabbers15mOccurTime_Type = DateAndTime
_PmTcaIfJabbers15mOccurTime_Object = MibTableColumn
pmTcaIfJabbers15mOccurTime = _PmTcaIfJabbers15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 37, 1, 6),
    _PmTcaIfJabbers15mOccurTime_Type()
)
pmTcaIfJabbers15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers15mOccurTime.setStatus("current")
_PmTcaIfJabbers1hTable_Object = MibTable
pmTcaIfJabbers1hTable = _PmTcaIfJabbers1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38)
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hTable.setStatus("current")
_PmTcaIfJabbers1hEntry_Object = MibTableRow
pmTcaIfJabbers1hEntry = _PmTcaIfJabbers1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1)
)
pmTcaIfJabbers1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfJabbers1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hEntry.setStatus("current")
_PmTcaIfJabbers1hIndex_Type = Integer32
_PmTcaIfJabbers1hIndex_Object = MibTableColumn
pmTcaIfJabbers1hIndex = _PmTcaIfJabbers1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 1),
    _PmTcaIfJabbers1hIndex_Type()
)
pmTcaIfJabbers1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hIndex.setStatus("current")
_PmTcaIfJabbers1hId_Type = OctetString
_PmTcaIfJabbers1hId_Object = MibTableColumn
pmTcaIfJabbers1hId = _PmTcaIfJabbers1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 2),
    _PmTcaIfJabbers1hId_Type()
)
pmTcaIfJabbers1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hId.setStatus("current")


class _PmTcaIfJabbers1hUnitType_Type(Integer32):
    """Custom type pmTcaIfJabbers1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfJabbers1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfJabbers1hUnitType_Object = MibTableColumn
pmTcaIfJabbers1hUnitType = _PmTcaIfJabbers1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 3),
    _PmTcaIfJabbers1hUnitType_Type()
)
pmTcaIfJabbers1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hUnitType.setStatus("current")
_PmTcaIfJabbers1hCnt_Type = Counter64
_PmTcaIfJabbers1hCnt_Object = MibTableColumn
pmTcaIfJabbers1hCnt = _PmTcaIfJabbers1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 4),
    _PmTcaIfJabbers1hCnt_Type()
)
pmTcaIfJabbers1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hCnt.setStatus("current")
_PmTcaIfJabbers1hThreshold_Type = Counter64
_PmTcaIfJabbers1hThreshold_Object = MibTableColumn
pmTcaIfJabbers1hThreshold = _PmTcaIfJabbers1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 5),
    _PmTcaIfJabbers1hThreshold_Type()
)
pmTcaIfJabbers1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hThreshold.setStatus("current")
_PmTcaIfJabbers1hOccurTime_Type = DateAndTime
_PmTcaIfJabbers1hOccurTime_Object = MibTableColumn
pmTcaIfJabbers1hOccurTime = _PmTcaIfJabbers1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 38, 1, 6),
    _PmTcaIfJabbers1hOccurTime_Type()
)
pmTcaIfJabbers1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1hOccurTime.setStatus("current")
_PmTcaIfJabbers1dTable_Object = MibTable
pmTcaIfJabbers1dTable = _PmTcaIfJabbers1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39)
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dTable.setStatus("current")
_PmTcaIfJabbers1dEntry_Object = MibTableRow
pmTcaIfJabbers1dEntry = _PmTcaIfJabbers1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1)
)
pmTcaIfJabbers1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfJabbers1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dEntry.setStatus("current")
_PmTcaIfJabbers1dIndex_Type = Integer32
_PmTcaIfJabbers1dIndex_Object = MibTableColumn
pmTcaIfJabbers1dIndex = _PmTcaIfJabbers1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 1),
    _PmTcaIfJabbers1dIndex_Type()
)
pmTcaIfJabbers1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dIndex.setStatus("current")
_PmTcaIfJabbers1dId_Type = OctetString
_PmTcaIfJabbers1dId_Object = MibTableColumn
pmTcaIfJabbers1dId = _PmTcaIfJabbers1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 2),
    _PmTcaIfJabbers1dId_Type()
)
pmTcaIfJabbers1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dId.setStatus("current")


class _PmTcaIfJabbers1dUnitType_Type(Integer32):
    """Custom type pmTcaIfJabbers1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfJabbers1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfJabbers1dUnitType_Object = MibTableColumn
pmTcaIfJabbers1dUnitType = _PmTcaIfJabbers1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 3),
    _PmTcaIfJabbers1dUnitType_Type()
)
pmTcaIfJabbers1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dUnitType.setStatus("current")
_PmTcaIfJabbers1dCnt_Type = Counter64
_PmTcaIfJabbers1dCnt_Object = MibTableColumn
pmTcaIfJabbers1dCnt = _PmTcaIfJabbers1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 4),
    _PmTcaIfJabbers1dCnt_Type()
)
pmTcaIfJabbers1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dCnt.setStatus("current")
_PmTcaIfJabbers1dThreshold_Type = Counter64
_PmTcaIfJabbers1dThreshold_Object = MibTableColumn
pmTcaIfJabbers1dThreshold = _PmTcaIfJabbers1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 5),
    _PmTcaIfJabbers1dThreshold_Type()
)
pmTcaIfJabbers1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dThreshold.setStatus("current")
_PmTcaIfJabbers1dOccurTime_Type = DateAndTime
_PmTcaIfJabbers1dOccurTime_Object = MibTableColumn
pmTcaIfJabbers1dOccurTime = _PmTcaIfJabbers1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 39, 1, 6),
    _PmTcaIfJabbers1dOccurTime_Type()
)
pmTcaIfJabbers1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfJabbers1dOccurTime.setStatus("current")
_PmTcaIfPkt6415mTable_Object = MibTable
pmTcaIfPkt6415mTable = _PmTcaIfPkt6415mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mTable.setStatus("current")
_PmTcaIfPkt6415mEntry_Object = MibTableRow
pmTcaIfPkt6415mEntry = _PmTcaIfPkt6415mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1)
)
pmTcaIfPkt6415mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt6415mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mEntry.setStatus("current")
_PmTcaIfPkt6415mIndex_Type = Integer32
_PmTcaIfPkt6415mIndex_Object = MibTableColumn
pmTcaIfPkt6415mIndex = _PmTcaIfPkt6415mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 1),
    _PmTcaIfPkt6415mIndex_Type()
)
pmTcaIfPkt6415mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mIndex.setStatus("current")
_PmTcaIfPkt6415mId_Type = OctetString
_PmTcaIfPkt6415mId_Object = MibTableColumn
pmTcaIfPkt6415mId = _PmTcaIfPkt6415mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 2),
    _PmTcaIfPkt6415mId_Type()
)
pmTcaIfPkt6415mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mId.setStatus("current")


class _PmTcaIfPkt6415mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt6415mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt6415mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt6415mUnitType_Object = MibTableColumn
pmTcaIfPkt6415mUnitType = _PmTcaIfPkt6415mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 3),
    _PmTcaIfPkt6415mUnitType_Type()
)
pmTcaIfPkt6415mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mUnitType.setStatus("current")
_PmTcaIfPkt6415mCnt_Type = Counter64
_PmTcaIfPkt6415mCnt_Object = MibTableColumn
pmTcaIfPkt6415mCnt = _PmTcaIfPkt6415mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 4),
    _PmTcaIfPkt6415mCnt_Type()
)
pmTcaIfPkt6415mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mCnt.setStatus("current")
_PmTcaIfPkt6415mThreshold_Type = Counter64
_PmTcaIfPkt6415mThreshold_Object = MibTableColumn
pmTcaIfPkt6415mThreshold = _PmTcaIfPkt6415mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 5),
    _PmTcaIfPkt6415mThreshold_Type()
)
pmTcaIfPkt6415mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mThreshold.setStatus("current")
_PmTcaIfPkt6415mOccurTime_Type = DateAndTime
_PmTcaIfPkt6415mOccurTime_Object = MibTableColumn
pmTcaIfPkt6415mOccurTime = _PmTcaIfPkt6415mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 40, 1, 6),
    _PmTcaIfPkt6415mOccurTime_Type()
)
pmTcaIfPkt6415mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt6415mOccurTime.setStatus("current")
_PmTcaIfPkt641hTable_Object = MibTable
pmTcaIfPkt641hTable = _PmTcaIfPkt641hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt641hTable.setStatus("current")
_PmTcaIfPkt641hEntry_Object = MibTableRow
pmTcaIfPkt641hEntry = _PmTcaIfPkt641hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1)
)
pmTcaIfPkt641hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt641hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt641hEntry.setStatus("current")
_PmTcaIfPkt641hIndex_Type = Integer32
_PmTcaIfPkt641hIndex_Object = MibTableColumn
pmTcaIfPkt641hIndex = _PmTcaIfPkt641hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 1),
    _PmTcaIfPkt641hIndex_Type()
)
pmTcaIfPkt641hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hIndex.setStatus("current")
_PmTcaIfPkt641hId_Type = OctetString
_PmTcaIfPkt641hId_Object = MibTableColumn
pmTcaIfPkt641hId = _PmTcaIfPkt641hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 2),
    _PmTcaIfPkt641hId_Type()
)
pmTcaIfPkt641hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hId.setStatus("current")


class _PmTcaIfPkt641hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt641hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt641hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt641hUnitType_Object = MibTableColumn
pmTcaIfPkt641hUnitType = _PmTcaIfPkt641hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 3),
    _PmTcaIfPkt641hUnitType_Type()
)
pmTcaIfPkt641hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hUnitType.setStatus("current")
_PmTcaIfPkt641hCnt_Type = Counter64
_PmTcaIfPkt641hCnt_Object = MibTableColumn
pmTcaIfPkt641hCnt = _PmTcaIfPkt641hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 4),
    _PmTcaIfPkt641hCnt_Type()
)
pmTcaIfPkt641hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hCnt.setStatus("current")
_PmTcaIfPkt641hThreshold_Type = Counter64
_PmTcaIfPkt641hThreshold_Object = MibTableColumn
pmTcaIfPkt641hThreshold = _PmTcaIfPkt641hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 5),
    _PmTcaIfPkt641hThreshold_Type()
)
pmTcaIfPkt641hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hThreshold.setStatus("current")
_PmTcaIfPkt641hOccurTime_Type = DateAndTime
_PmTcaIfPkt641hOccurTime_Object = MibTableColumn
pmTcaIfPkt641hOccurTime = _PmTcaIfPkt641hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 41, 1, 6),
    _PmTcaIfPkt641hOccurTime_Type()
)
pmTcaIfPkt641hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641hOccurTime.setStatus("current")
_PmTcaIfPkt641dTable_Object = MibTable
pmTcaIfPkt641dTable = _PmTcaIfPkt641dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt641dTable.setStatus("current")
_PmTcaIfPkt641dEntry_Object = MibTableRow
pmTcaIfPkt641dEntry = _PmTcaIfPkt641dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1)
)
pmTcaIfPkt641dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt641dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt641dEntry.setStatus("current")
_PmTcaIfPkt641dIndex_Type = Integer32
_PmTcaIfPkt641dIndex_Object = MibTableColumn
pmTcaIfPkt641dIndex = _PmTcaIfPkt641dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 1),
    _PmTcaIfPkt641dIndex_Type()
)
pmTcaIfPkt641dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dIndex.setStatus("current")
_PmTcaIfPkt641dId_Type = OctetString
_PmTcaIfPkt641dId_Object = MibTableColumn
pmTcaIfPkt641dId = _PmTcaIfPkt641dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 2),
    _PmTcaIfPkt641dId_Type()
)
pmTcaIfPkt641dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dId.setStatus("current")


class _PmTcaIfPkt641dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt641dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt641dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt641dUnitType_Object = MibTableColumn
pmTcaIfPkt641dUnitType = _PmTcaIfPkt641dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 3),
    _PmTcaIfPkt641dUnitType_Type()
)
pmTcaIfPkt641dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dUnitType.setStatus("current")
_PmTcaIfPkt641dCnt_Type = Counter64
_PmTcaIfPkt641dCnt_Object = MibTableColumn
pmTcaIfPkt641dCnt = _PmTcaIfPkt641dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 4),
    _PmTcaIfPkt641dCnt_Type()
)
pmTcaIfPkt641dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dCnt.setStatus("current")
_PmTcaIfPkt641dThreshold_Type = Counter64
_PmTcaIfPkt641dThreshold_Object = MibTableColumn
pmTcaIfPkt641dThreshold = _PmTcaIfPkt641dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 5),
    _PmTcaIfPkt641dThreshold_Type()
)
pmTcaIfPkt641dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dThreshold.setStatus("current")
_PmTcaIfPkt641dOccurTime_Type = DateAndTime
_PmTcaIfPkt641dOccurTime_Object = MibTableColumn
pmTcaIfPkt641dOccurTime = _PmTcaIfPkt641dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 42, 1, 6),
    _PmTcaIfPkt641dOccurTime_Type()
)
pmTcaIfPkt641dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt641dOccurTime.setStatus("current")
_PmTcaIfPkt65to12715mTable_Object = MibTable
pmTcaIfPkt65to12715mTable = _PmTcaIfPkt65to12715mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mTable.setStatus("current")
_PmTcaIfPkt65to12715mEntry_Object = MibTableRow
pmTcaIfPkt65to12715mEntry = _PmTcaIfPkt65to12715mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1)
)
pmTcaIfPkt65to12715mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt65to12715mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mEntry.setStatus("current")
_PmTcaIfPkt65to12715mIndex_Type = Integer32
_PmTcaIfPkt65to12715mIndex_Object = MibTableColumn
pmTcaIfPkt65to12715mIndex = _PmTcaIfPkt65to12715mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 1),
    _PmTcaIfPkt65to12715mIndex_Type()
)
pmTcaIfPkt65to12715mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mIndex.setStatus("current")
_PmTcaIfPkt65to12715mId_Type = OctetString
_PmTcaIfPkt65to12715mId_Object = MibTableColumn
pmTcaIfPkt65to12715mId = _PmTcaIfPkt65to12715mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 2),
    _PmTcaIfPkt65to12715mId_Type()
)
pmTcaIfPkt65to12715mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mId.setStatus("current")


class _PmTcaIfPkt65to12715mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt65to12715mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt65to12715mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt65to12715mUnitType_Object = MibTableColumn
pmTcaIfPkt65to12715mUnitType = _PmTcaIfPkt65to12715mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 3),
    _PmTcaIfPkt65to12715mUnitType_Type()
)
pmTcaIfPkt65to12715mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mUnitType.setStatus("current")
_PmTcaIfPkt65to12715mCnt_Type = Counter64
_PmTcaIfPkt65to12715mCnt_Object = MibTableColumn
pmTcaIfPkt65to12715mCnt = _PmTcaIfPkt65to12715mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 4),
    _PmTcaIfPkt65to12715mCnt_Type()
)
pmTcaIfPkt65to12715mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mCnt.setStatus("current")
_PmTcaIfPkt65to12715mThreshold_Type = Counter64
_PmTcaIfPkt65to12715mThreshold_Object = MibTableColumn
pmTcaIfPkt65to12715mThreshold = _PmTcaIfPkt65to12715mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 5),
    _PmTcaIfPkt65to12715mThreshold_Type()
)
pmTcaIfPkt65to12715mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mThreshold.setStatus("current")
_PmTcaIfPkt65to12715mOccurTime_Type = DateAndTime
_PmTcaIfPkt65to12715mOccurTime_Object = MibTableColumn
pmTcaIfPkt65to12715mOccurTime = _PmTcaIfPkt65to12715mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 43, 1, 6),
    _PmTcaIfPkt65to12715mOccurTime_Type()
)
pmTcaIfPkt65to12715mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to12715mOccurTime.setStatus("current")
_PmTcaIfPkt65to1271hTable_Object = MibTable
pmTcaIfPkt65to1271hTable = _PmTcaIfPkt65to1271hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hTable.setStatus("current")
_PmTcaIfPkt65to1271hEntry_Object = MibTableRow
pmTcaIfPkt65to1271hEntry = _PmTcaIfPkt65to1271hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1)
)
pmTcaIfPkt65to1271hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt65to1271hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hEntry.setStatus("current")
_PmTcaIfPkt65to1271hIndex_Type = Integer32
_PmTcaIfPkt65to1271hIndex_Object = MibTableColumn
pmTcaIfPkt65to1271hIndex = _PmTcaIfPkt65to1271hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 1),
    _PmTcaIfPkt65to1271hIndex_Type()
)
pmTcaIfPkt65to1271hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hIndex.setStatus("current")
_PmTcaIfPkt65to1271hId_Type = OctetString
_PmTcaIfPkt65to1271hId_Object = MibTableColumn
pmTcaIfPkt65to1271hId = _PmTcaIfPkt65to1271hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 2),
    _PmTcaIfPkt65to1271hId_Type()
)
pmTcaIfPkt65to1271hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hId.setStatus("current")


class _PmTcaIfPkt65to1271hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt65to1271hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt65to1271hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt65to1271hUnitType_Object = MibTableColumn
pmTcaIfPkt65to1271hUnitType = _PmTcaIfPkt65to1271hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 3),
    _PmTcaIfPkt65to1271hUnitType_Type()
)
pmTcaIfPkt65to1271hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hUnitType.setStatus("current")
_PmTcaIfPkt65to1271hCnt_Type = Counter64
_PmTcaIfPkt65to1271hCnt_Object = MibTableColumn
pmTcaIfPkt65to1271hCnt = _PmTcaIfPkt65to1271hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 4),
    _PmTcaIfPkt65to1271hCnt_Type()
)
pmTcaIfPkt65to1271hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hCnt.setStatus("current")
_PmTcaIfPkt65to1271hThreshold_Type = Counter64
_PmTcaIfPkt65to1271hThreshold_Object = MibTableColumn
pmTcaIfPkt65to1271hThreshold = _PmTcaIfPkt65to1271hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 5),
    _PmTcaIfPkt65to1271hThreshold_Type()
)
pmTcaIfPkt65to1271hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hThreshold.setStatus("current")
_PmTcaIfPkt65to1271hOccurTime_Type = DateAndTime
_PmTcaIfPkt65to1271hOccurTime_Object = MibTableColumn
pmTcaIfPkt65to1271hOccurTime = _PmTcaIfPkt65to1271hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 44, 1, 6),
    _PmTcaIfPkt65to1271hOccurTime_Type()
)
pmTcaIfPkt65to1271hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271hOccurTime.setStatus("current")
_PmTcaIfPkt65to1271dTable_Object = MibTable
pmTcaIfPkt65to1271dTable = _PmTcaIfPkt65to1271dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dTable.setStatus("current")
_PmTcaIfPkt65to1271dEntry_Object = MibTableRow
pmTcaIfPkt65to1271dEntry = _PmTcaIfPkt65to1271dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1)
)
pmTcaIfPkt65to1271dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt65to1271dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dEntry.setStatus("current")
_PmTcaIfPkt65to1271dIndex_Type = Integer32
_PmTcaIfPkt65to1271dIndex_Object = MibTableColumn
pmTcaIfPkt65to1271dIndex = _PmTcaIfPkt65to1271dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 1),
    _PmTcaIfPkt65to1271dIndex_Type()
)
pmTcaIfPkt65to1271dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dIndex.setStatus("current")
_PmTcaIfPkt65to1271dId_Type = OctetString
_PmTcaIfPkt65to1271dId_Object = MibTableColumn
pmTcaIfPkt65to1271dId = _PmTcaIfPkt65to1271dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 2),
    _PmTcaIfPkt65to1271dId_Type()
)
pmTcaIfPkt65to1271dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dId.setStatus("current")


class _PmTcaIfPkt65to1271dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt65to1271dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt65to1271dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt65to1271dUnitType_Object = MibTableColumn
pmTcaIfPkt65to1271dUnitType = _PmTcaIfPkt65to1271dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 3),
    _PmTcaIfPkt65to1271dUnitType_Type()
)
pmTcaIfPkt65to1271dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dUnitType.setStatus("current")
_PmTcaIfPkt65to1271dCnt_Type = Counter64
_PmTcaIfPkt65to1271dCnt_Object = MibTableColumn
pmTcaIfPkt65to1271dCnt = _PmTcaIfPkt65to1271dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 4),
    _PmTcaIfPkt65to1271dCnt_Type()
)
pmTcaIfPkt65to1271dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dCnt.setStatus("current")
_PmTcaIfPkt65to1271dThreshold_Type = Counter64
_PmTcaIfPkt65to1271dThreshold_Object = MibTableColumn
pmTcaIfPkt65to1271dThreshold = _PmTcaIfPkt65to1271dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 5),
    _PmTcaIfPkt65to1271dThreshold_Type()
)
pmTcaIfPkt65to1271dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dThreshold.setStatus("current")
_PmTcaIfPkt65to1271dOccurTime_Type = DateAndTime
_PmTcaIfPkt65to1271dOccurTime_Object = MibTableColumn
pmTcaIfPkt65to1271dOccurTime = _PmTcaIfPkt65to1271dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 45, 1, 6),
    _PmTcaIfPkt65to1271dOccurTime_Type()
)
pmTcaIfPkt65to1271dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt65to1271dOccurTime.setStatus("current")
_PmTcaIfPkt128to25515mTable_Object = MibTable
pmTcaIfPkt128to25515mTable = _PmTcaIfPkt128to25515mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mTable.setStatus("current")
_PmTcaIfPkt128to25515mEntry_Object = MibTableRow
pmTcaIfPkt128to25515mEntry = _PmTcaIfPkt128to25515mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1)
)
pmTcaIfPkt128to25515mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt128to25515mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mEntry.setStatus("current")
_PmTcaIfPkt128to25515mIndex_Type = Integer32
_PmTcaIfPkt128to25515mIndex_Object = MibTableColumn
pmTcaIfPkt128to25515mIndex = _PmTcaIfPkt128to25515mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 1),
    _PmTcaIfPkt128to25515mIndex_Type()
)
pmTcaIfPkt128to25515mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mIndex.setStatus("current")
_PmTcaIfPkt128to25515mId_Type = OctetString
_PmTcaIfPkt128to25515mId_Object = MibTableColumn
pmTcaIfPkt128to25515mId = _PmTcaIfPkt128to25515mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 2),
    _PmTcaIfPkt128to25515mId_Type()
)
pmTcaIfPkt128to25515mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mId.setStatus("current")


class _PmTcaIfPkt128to25515mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt128to25515mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt128to25515mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt128to25515mUnitType_Object = MibTableColumn
pmTcaIfPkt128to25515mUnitType = _PmTcaIfPkt128to25515mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 3),
    _PmTcaIfPkt128to25515mUnitType_Type()
)
pmTcaIfPkt128to25515mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mUnitType.setStatus("current")
_PmTcaIfPkt128to25515mCnt_Type = Counter64
_PmTcaIfPkt128to25515mCnt_Object = MibTableColumn
pmTcaIfPkt128to25515mCnt = _PmTcaIfPkt128to25515mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 4),
    _PmTcaIfPkt128to25515mCnt_Type()
)
pmTcaIfPkt128to25515mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mCnt.setStatus("current")
_PmTcaIfPkt128to25515mThreshold_Type = Counter64
_PmTcaIfPkt128to25515mThreshold_Object = MibTableColumn
pmTcaIfPkt128to25515mThreshold = _PmTcaIfPkt128to25515mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 5),
    _PmTcaIfPkt128to25515mThreshold_Type()
)
pmTcaIfPkt128to25515mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mThreshold.setStatus("current")
_PmTcaIfPkt128to25515mOccurTime_Type = DateAndTime
_PmTcaIfPkt128to25515mOccurTime_Object = MibTableColumn
pmTcaIfPkt128to25515mOccurTime = _PmTcaIfPkt128to25515mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 46, 1, 6),
    _PmTcaIfPkt128to25515mOccurTime_Type()
)
pmTcaIfPkt128to25515mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to25515mOccurTime.setStatus("current")
_PmTcaIfPkt128to2551hTable_Object = MibTable
pmTcaIfPkt128to2551hTable = _PmTcaIfPkt128to2551hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hTable.setStatus("current")
_PmTcaIfPkt128to2551hEntry_Object = MibTableRow
pmTcaIfPkt128to2551hEntry = _PmTcaIfPkt128to2551hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1)
)
pmTcaIfPkt128to2551hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt128to2551hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hEntry.setStatus("current")
_PmTcaIfPkt128to2551hIndex_Type = Integer32
_PmTcaIfPkt128to2551hIndex_Object = MibTableColumn
pmTcaIfPkt128to2551hIndex = _PmTcaIfPkt128to2551hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 1),
    _PmTcaIfPkt128to2551hIndex_Type()
)
pmTcaIfPkt128to2551hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hIndex.setStatus("current")
_PmTcaIfPkt128to2551hId_Type = OctetString
_PmTcaIfPkt128to2551hId_Object = MibTableColumn
pmTcaIfPkt128to2551hId = _PmTcaIfPkt128to2551hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 2),
    _PmTcaIfPkt128to2551hId_Type()
)
pmTcaIfPkt128to2551hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hId.setStatus("current")


class _PmTcaIfPkt128to2551hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt128to2551hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt128to2551hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt128to2551hUnitType_Object = MibTableColumn
pmTcaIfPkt128to2551hUnitType = _PmTcaIfPkt128to2551hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 3),
    _PmTcaIfPkt128to2551hUnitType_Type()
)
pmTcaIfPkt128to2551hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hUnitType.setStatus("current")
_PmTcaIfPkt128to2551hCnt_Type = Counter64
_PmTcaIfPkt128to2551hCnt_Object = MibTableColumn
pmTcaIfPkt128to2551hCnt = _PmTcaIfPkt128to2551hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 4),
    _PmTcaIfPkt128to2551hCnt_Type()
)
pmTcaIfPkt128to2551hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hCnt.setStatus("current")
_PmTcaIfPkt128to2551hThreshold_Type = Counter64
_PmTcaIfPkt128to2551hThreshold_Object = MibTableColumn
pmTcaIfPkt128to2551hThreshold = _PmTcaIfPkt128to2551hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 5),
    _PmTcaIfPkt128to2551hThreshold_Type()
)
pmTcaIfPkt128to2551hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hThreshold.setStatus("current")
_PmTcaIfPkt128to2551hOccurTime_Type = DateAndTime
_PmTcaIfPkt128to2551hOccurTime_Object = MibTableColumn
pmTcaIfPkt128to2551hOccurTime = _PmTcaIfPkt128to2551hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 47, 1, 6),
    _PmTcaIfPkt128to2551hOccurTime_Type()
)
pmTcaIfPkt128to2551hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551hOccurTime.setStatus("current")
_PmTcaIfPkt128to2551dTable_Object = MibTable
pmTcaIfPkt128to2551dTable = _PmTcaIfPkt128to2551dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dTable.setStatus("current")
_PmTcaIfPkt128to2551dEntry_Object = MibTableRow
pmTcaIfPkt128to2551dEntry = _PmTcaIfPkt128to2551dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1)
)
pmTcaIfPkt128to2551dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt128to2551dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dEntry.setStatus("current")
_PmTcaIfPkt128to2551dIndex_Type = Integer32
_PmTcaIfPkt128to2551dIndex_Object = MibTableColumn
pmTcaIfPkt128to2551dIndex = _PmTcaIfPkt128to2551dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 1),
    _PmTcaIfPkt128to2551dIndex_Type()
)
pmTcaIfPkt128to2551dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dIndex.setStatus("current")
_PmTcaIfPkt128to2551dId_Type = OctetString
_PmTcaIfPkt128to2551dId_Object = MibTableColumn
pmTcaIfPkt128to2551dId = _PmTcaIfPkt128to2551dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 2),
    _PmTcaIfPkt128to2551dId_Type()
)
pmTcaIfPkt128to2551dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dId.setStatus("current")


class _PmTcaIfPkt128to2551dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt128to2551dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt128to2551dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt128to2551dUnitType_Object = MibTableColumn
pmTcaIfPkt128to2551dUnitType = _PmTcaIfPkt128to2551dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 3),
    _PmTcaIfPkt128to2551dUnitType_Type()
)
pmTcaIfPkt128to2551dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dUnitType.setStatus("current")
_PmTcaIfPkt128to2551dCnt_Type = Counter64
_PmTcaIfPkt128to2551dCnt_Object = MibTableColumn
pmTcaIfPkt128to2551dCnt = _PmTcaIfPkt128to2551dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 4),
    _PmTcaIfPkt128to2551dCnt_Type()
)
pmTcaIfPkt128to2551dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dCnt.setStatus("current")
_PmTcaIfPkt128to2551dThreshold_Type = Counter64
_PmTcaIfPkt128to2551dThreshold_Object = MibTableColumn
pmTcaIfPkt128to2551dThreshold = _PmTcaIfPkt128to2551dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 5),
    _PmTcaIfPkt128to2551dThreshold_Type()
)
pmTcaIfPkt128to2551dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dThreshold.setStatus("current")
_PmTcaIfPkt128to2551dOccurTime_Type = DateAndTime
_PmTcaIfPkt128to2551dOccurTime_Object = MibTableColumn
pmTcaIfPkt128to2551dOccurTime = _PmTcaIfPkt128to2551dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 48, 1, 6),
    _PmTcaIfPkt128to2551dOccurTime_Type()
)
pmTcaIfPkt128to2551dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt128to2551dOccurTime.setStatus("current")
_PmTcaIfPkt256to51115mTable_Object = MibTable
pmTcaIfPkt256to51115mTable = _PmTcaIfPkt256to51115mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mTable.setStatus("current")
_PmTcaIfPkt256to51115mEntry_Object = MibTableRow
pmTcaIfPkt256to51115mEntry = _PmTcaIfPkt256to51115mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1)
)
pmTcaIfPkt256to51115mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt256to51115mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mEntry.setStatus("current")
_PmTcaIfPkt256to51115mIndex_Type = Integer32
_PmTcaIfPkt256to51115mIndex_Object = MibTableColumn
pmTcaIfPkt256to51115mIndex = _PmTcaIfPkt256to51115mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 1),
    _PmTcaIfPkt256to51115mIndex_Type()
)
pmTcaIfPkt256to51115mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mIndex.setStatus("current")
_PmTcaIfPkt256to51115mId_Type = OctetString
_PmTcaIfPkt256to51115mId_Object = MibTableColumn
pmTcaIfPkt256to51115mId = _PmTcaIfPkt256to51115mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 2),
    _PmTcaIfPkt256to51115mId_Type()
)
pmTcaIfPkt256to51115mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mId.setStatus("current")


class _PmTcaIfPkt256to51115mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt256to51115mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt256to51115mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt256to51115mUnitType_Object = MibTableColumn
pmTcaIfPkt256to51115mUnitType = _PmTcaIfPkt256to51115mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 3),
    _PmTcaIfPkt256to51115mUnitType_Type()
)
pmTcaIfPkt256to51115mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mUnitType.setStatus("current")
_PmTcaIfPkt256to51115mCnt_Type = Counter64
_PmTcaIfPkt256to51115mCnt_Object = MibTableColumn
pmTcaIfPkt256to51115mCnt = _PmTcaIfPkt256to51115mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 4),
    _PmTcaIfPkt256to51115mCnt_Type()
)
pmTcaIfPkt256to51115mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mCnt.setStatus("current")
_PmTcaIfPkt256to51115mThreshold_Type = Counter64
_PmTcaIfPkt256to51115mThreshold_Object = MibTableColumn
pmTcaIfPkt256to51115mThreshold = _PmTcaIfPkt256to51115mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 5),
    _PmTcaIfPkt256to51115mThreshold_Type()
)
pmTcaIfPkt256to51115mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mThreshold.setStatus("current")
_PmTcaIfPkt256to51115mOccurTime_Type = DateAndTime
_PmTcaIfPkt256to51115mOccurTime_Object = MibTableColumn
pmTcaIfPkt256to51115mOccurTime = _PmTcaIfPkt256to51115mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 49, 1, 6),
    _PmTcaIfPkt256to51115mOccurTime_Type()
)
pmTcaIfPkt256to51115mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to51115mOccurTime.setStatus("current")
_PmTcaIfPkt256to5111hTable_Object = MibTable
pmTcaIfPkt256to5111hTable = _PmTcaIfPkt256to5111hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hTable.setStatus("current")
_PmTcaIfPkt256to5111hEntry_Object = MibTableRow
pmTcaIfPkt256to5111hEntry = _PmTcaIfPkt256to5111hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1)
)
pmTcaIfPkt256to5111hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt256to5111hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hEntry.setStatus("current")
_PmTcaIfPkt256to5111hIndex_Type = Integer32
_PmTcaIfPkt256to5111hIndex_Object = MibTableColumn
pmTcaIfPkt256to5111hIndex = _PmTcaIfPkt256to5111hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 1),
    _PmTcaIfPkt256to5111hIndex_Type()
)
pmTcaIfPkt256to5111hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hIndex.setStatus("current")
_PmTcaIfPkt256to5111hId_Type = OctetString
_PmTcaIfPkt256to5111hId_Object = MibTableColumn
pmTcaIfPkt256to5111hId = _PmTcaIfPkt256to5111hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 2),
    _PmTcaIfPkt256to5111hId_Type()
)
pmTcaIfPkt256to5111hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hId.setStatus("current")


class _PmTcaIfPkt256to5111hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt256to5111hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt256to5111hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt256to5111hUnitType_Object = MibTableColumn
pmTcaIfPkt256to5111hUnitType = _PmTcaIfPkt256to5111hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 3),
    _PmTcaIfPkt256to5111hUnitType_Type()
)
pmTcaIfPkt256to5111hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hUnitType.setStatus("current")
_PmTcaIfPkt256to5111hCnt_Type = Counter64
_PmTcaIfPkt256to5111hCnt_Object = MibTableColumn
pmTcaIfPkt256to5111hCnt = _PmTcaIfPkt256to5111hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 4),
    _PmTcaIfPkt256to5111hCnt_Type()
)
pmTcaIfPkt256to5111hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hCnt.setStatus("current")
_PmTcaIfPkt256to5111hThreshold_Type = Counter64
_PmTcaIfPkt256to5111hThreshold_Object = MibTableColumn
pmTcaIfPkt256to5111hThreshold = _PmTcaIfPkt256to5111hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 5),
    _PmTcaIfPkt256to5111hThreshold_Type()
)
pmTcaIfPkt256to5111hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hThreshold.setStatus("current")
_PmTcaIfPkt256to5111hOccurTime_Type = DateAndTime
_PmTcaIfPkt256to5111hOccurTime_Object = MibTableColumn
pmTcaIfPkt256to5111hOccurTime = _PmTcaIfPkt256to5111hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 50, 1, 6),
    _PmTcaIfPkt256to5111hOccurTime_Type()
)
pmTcaIfPkt256to5111hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111hOccurTime.setStatus("current")
_PmTcaIfPkt256to5111dTable_Object = MibTable
pmTcaIfPkt256to5111dTable = _PmTcaIfPkt256to5111dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dTable.setStatus("current")
_PmTcaIfPkt256to5111dEntry_Object = MibTableRow
pmTcaIfPkt256to5111dEntry = _PmTcaIfPkt256to5111dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1)
)
pmTcaIfPkt256to5111dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt256to5111dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dEntry.setStatus("current")
_PmTcaIfPkt256to5111dIndex_Type = Integer32
_PmTcaIfPkt256to5111dIndex_Object = MibTableColumn
pmTcaIfPkt256to5111dIndex = _PmTcaIfPkt256to5111dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 1),
    _PmTcaIfPkt256to5111dIndex_Type()
)
pmTcaIfPkt256to5111dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dIndex.setStatus("current")
_PmTcaIfPkt256to5111dId_Type = OctetString
_PmTcaIfPkt256to5111dId_Object = MibTableColumn
pmTcaIfPkt256to5111dId = _PmTcaIfPkt256to5111dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 2),
    _PmTcaIfPkt256to5111dId_Type()
)
pmTcaIfPkt256to5111dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dId.setStatus("current")


class _PmTcaIfPkt256to5111dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt256to5111dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt256to5111dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt256to5111dUnitType_Object = MibTableColumn
pmTcaIfPkt256to5111dUnitType = _PmTcaIfPkt256to5111dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 3),
    _PmTcaIfPkt256to5111dUnitType_Type()
)
pmTcaIfPkt256to5111dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dUnitType.setStatus("current")
_PmTcaIfPkt256to5111dCnt_Type = Counter64
_PmTcaIfPkt256to5111dCnt_Object = MibTableColumn
pmTcaIfPkt256to5111dCnt = _PmTcaIfPkt256to5111dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 4),
    _PmTcaIfPkt256to5111dCnt_Type()
)
pmTcaIfPkt256to5111dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dCnt.setStatus("current")
_PmTcaIfPkt256to5111dThreshold_Type = Counter64
_PmTcaIfPkt256to5111dThreshold_Object = MibTableColumn
pmTcaIfPkt256to5111dThreshold = _PmTcaIfPkt256to5111dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 5),
    _PmTcaIfPkt256to5111dThreshold_Type()
)
pmTcaIfPkt256to5111dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dThreshold.setStatus("current")
_PmTcaIfPkt256to5111dOccurTime_Type = DateAndTime
_PmTcaIfPkt256to5111dOccurTime_Object = MibTableColumn
pmTcaIfPkt256to5111dOccurTime = _PmTcaIfPkt256to5111dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 51, 1, 6),
    _PmTcaIfPkt256to5111dOccurTime_Type()
)
pmTcaIfPkt256to5111dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt256to5111dOccurTime.setStatus("current")
_PmTcaIfPkt512to102315mTable_Object = MibTable
pmTcaIfPkt512to102315mTable = _PmTcaIfPkt512to102315mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mTable.setStatus("current")
_PmTcaIfPkt512to102315mEntry_Object = MibTableRow
pmTcaIfPkt512to102315mEntry = _PmTcaIfPkt512to102315mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1)
)
pmTcaIfPkt512to102315mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt512to102315mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mEntry.setStatus("current")
_PmTcaIfPkt512to102315mIndex_Type = Integer32
_PmTcaIfPkt512to102315mIndex_Object = MibTableColumn
pmTcaIfPkt512to102315mIndex = _PmTcaIfPkt512to102315mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 1),
    _PmTcaIfPkt512to102315mIndex_Type()
)
pmTcaIfPkt512to102315mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mIndex.setStatus("current")
_PmTcaIfPkt512to102315mId_Type = OctetString
_PmTcaIfPkt512to102315mId_Object = MibTableColumn
pmTcaIfPkt512to102315mId = _PmTcaIfPkt512to102315mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 2),
    _PmTcaIfPkt512to102315mId_Type()
)
pmTcaIfPkt512to102315mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mId.setStatus("current")


class _PmTcaIfPkt512to102315mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt512to102315mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt512to102315mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt512to102315mUnitType_Object = MibTableColumn
pmTcaIfPkt512to102315mUnitType = _PmTcaIfPkt512to102315mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 3),
    _PmTcaIfPkt512to102315mUnitType_Type()
)
pmTcaIfPkt512to102315mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mUnitType.setStatus("current")
_PmTcaIfPkt512to102315mCnt_Type = Counter64
_PmTcaIfPkt512to102315mCnt_Object = MibTableColumn
pmTcaIfPkt512to102315mCnt = _PmTcaIfPkt512to102315mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 4),
    _PmTcaIfPkt512to102315mCnt_Type()
)
pmTcaIfPkt512to102315mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mCnt.setStatus("current")
_PmTcaIfPkt512to102315mThreshold_Type = Counter64
_PmTcaIfPkt512to102315mThreshold_Object = MibTableColumn
pmTcaIfPkt512to102315mThreshold = _PmTcaIfPkt512to102315mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 5),
    _PmTcaIfPkt512to102315mThreshold_Type()
)
pmTcaIfPkt512to102315mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mThreshold.setStatus("current")
_PmTcaIfPkt512to102315mOccurTime_Type = DateAndTime
_PmTcaIfPkt512to102315mOccurTime_Object = MibTableColumn
pmTcaIfPkt512to102315mOccurTime = _PmTcaIfPkt512to102315mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 52, 1, 6),
    _PmTcaIfPkt512to102315mOccurTime_Type()
)
pmTcaIfPkt512to102315mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to102315mOccurTime.setStatus("current")
_PmTcaIfPkt512to10231hTable_Object = MibTable
pmTcaIfPkt512to10231hTable = _PmTcaIfPkt512to10231hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hTable.setStatus("current")
_PmTcaIfPkt512to10231hEntry_Object = MibTableRow
pmTcaIfPkt512to10231hEntry = _PmTcaIfPkt512to10231hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1)
)
pmTcaIfPkt512to10231hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt512to10231hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hEntry.setStatus("current")
_PmTcaIfPkt512to10231hIndex_Type = Integer32
_PmTcaIfPkt512to10231hIndex_Object = MibTableColumn
pmTcaIfPkt512to10231hIndex = _PmTcaIfPkt512to10231hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 1),
    _PmTcaIfPkt512to10231hIndex_Type()
)
pmTcaIfPkt512to10231hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hIndex.setStatus("current")
_PmTcaIfPkt512to10231hId_Type = OctetString
_PmTcaIfPkt512to10231hId_Object = MibTableColumn
pmTcaIfPkt512to10231hId = _PmTcaIfPkt512to10231hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 2),
    _PmTcaIfPkt512to10231hId_Type()
)
pmTcaIfPkt512to10231hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hId.setStatus("current")


class _PmTcaIfPkt512to10231hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt512to10231hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt512to10231hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt512to10231hUnitType_Object = MibTableColumn
pmTcaIfPkt512to10231hUnitType = _PmTcaIfPkt512to10231hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 3),
    _PmTcaIfPkt512to10231hUnitType_Type()
)
pmTcaIfPkt512to10231hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hUnitType.setStatus("current")
_PmTcaIfPkt512to10231hCnt_Type = Counter64
_PmTcaIfPkt512to10231hCnt_Object = MibTableColumn
pmTcaIfPkt512to10231hCnt = _PmTcaIfPkt512to10231hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 4),
    _PmTcaIfPkt512to10231hCnt_Type()
)
pmTcaIfPkt512to10231hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hCnt.setStatus("current")
_PmTcaIfPkt512to10231hThreshold_Type = Counter64
_PmTcaIfPkt512to10231hThreshold_Object = MibTableColumn
pmTcaIfPkt512to10231hThreshold = _PmTcaIfPkt512to10231hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 5),
    _PmTcaIfPkt512to10231hThreshold_Type()
)
pmTcaIfPkt512to10231hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hThreshold.setStatus("current")
_PmTcaIfPkt512to10231hOccurTime_Type = DateAndTime
_PmTcaIfPkt512to10231hOccurTime_Object = MibTableColumn
pmTcaIfPkt512to10231hOccurTime = _PmTcaIfPkt512to10231hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 53, 1, 6),
    _PmTcaIfPkt512to10231hOccurTime_Type()
)
pmTcaIfPkt512to10231hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231hOccurTime.setStatus("current")
_PmTcaIfPkt512to10231dTable_Object = MibTable
pmTcaIfPkt512to10231dTable = _PmTcaIfPkt512to10231dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dTable.setStatus("current")
_PmTcaIfPkt512to10231dEntry_Object = MibTableRow
pmTcaIfPkt512to10231dEntry = _PmTcaIfPkt512to10231dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1)
)
pmTcaIfPkt512to10231dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt512to10231dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dEntry.setStatus("current")
_PmTcaIfPkt512to10231dIndex_Type = Integer32
_PmTcaIfPkt512to10231dIndex_Object = MibTableColumn
pmTcaIfPkt512to10231dIndex = _PmTcaIfPkt512to10231dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 1),
    _PmTcaIfPkt512to10231dIndex_Type()
)
pmTcaIfPkt512to10231dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dIndex.setStatus("current")
_PmTcaIfPkt512to10231dId_Type = OctetString
_PmTcaIfPkt512to10231dId_Object = MibTableColumn
pmTcaIfPkt512to10231dId = _PmTcaIfPkt512to10231dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 2),
    _PmTcaIfPkt512to10231dId_Type()
)
pmTcaIfPkt512to10231dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dId.setStatus("current")


class _PmTcaIfPkt512to10231dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt512to10231dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt512to10231dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt512to10231dUnitType_Object = MibTableColumn
pmTcaIfPkt512to10231dUnitType = _PmTcaIfPkt512to10231dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 3),
    _PmTcaIfPkt512to10231dUnitType_Type()
)
pmTcaIfPkt512to10231dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dUnitType.setStatus("current")
_PmTcaIfPkt512to10231dCnt_Type = Counter64
_PmTcaIfPkt512to10231dCnt_Object = MibTableColumn
pmTcaIfPkt512to10231dCnt = _PmTcaIfPkt512to10231dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 4),
    _PmTcaIfPkt512to10231dCnt_Type()
)
pmTcaIfPkt512to10231dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dCnt.setStatus("current")
_PmTcaIfPkt512to10231dThreshold_Type = Counter64
_PmTcaIfPkt512to10231dThreshold_Object = MibTableColumn
pmTcaIfPkt512to10231dThreshold = _PmTcaIfPkt512to10231dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 5),
    _PmTcaIfPkt512to10231dThreshold_Type()
)
pmTcaIfPkt512to10231dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dThreshold.setStatus("current")
_PmTcaIfPkt512to10231dOccurTime_Type = DateAndTime
_PmTcaIfPkt512to10231dOccurTime_Object = MibTableColumn
pmTcaIfPkt512to10231dOccurTime = _PmTcaIfPkt512to10231dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 54, 1, 6),
    _PmTcaIfPkt512to10231dOccurTime_Type()
)
pmTcaIfPkt512to10231dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt512to10231dOccurTime.setStatus("current")
_PmTcaIfPkt102415mTable_Object = MibTable
pmTcaIfPkt102415mTable = _PmTcaIfPkt102415mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mTable.setStatus("current")
_PmTcaIfPkt102415mEntry_Object = MibTableRow
pmTcaIfPkt102415mEntry = _PmTcaIfPkt102415mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1)
)
pmTcaIfPkt102415mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt102415mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mEntry.setStatus("current")
_PmTcaIfPkt102415mIndex_Type = Integer32
_PmTcaIfPkt102415mIndex_Object = MibTableColumn
pmTcaIfPkt102415mIndex = _PmTcaIfPkt102415mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 1),
    _PmTcaIfPkt102415mIndex_Type()
)
pmTcaIfPkt102415mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mIndex.setStatus("current")
_PmTcaIfPkt102415mId_Type = OctetString
_PmTcaIfPkt102415mId_Object = MibTableColumn
pmTcaIfPkt102415mId = _PmTcaIfPkt102415mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 2),
    _PmTcaIfPkt102415mId_Type()
)
pmTcaIfPkt102415mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mId.setStatus("current")


class _PmTcaIfPkt102415mUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt102415mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt102415mUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt102415mUnitType_Object = MibTableColumn
pmTcaIfPkt102415mUnitType = _PmTcaIfPkt102415mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 3),
    _PmTcaIfPkt102415mUnitType_Type()
)
pmTcaIfPkt102415mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mUnitType.setStatus("current")
_PmTcaIfPkt102415mCnt_Type = Counter64
_PmTcaIfPkt102415mCnt_Object = MibTableColumn
pmTcaIfPkt102415mCnt = _PmTcaIfPkt102415mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 4),
    _PmTcaIfPkt102415mCnt_Type()
)
pmTcaIfPkt102415mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mCnt.setStatus("current")
_PmTcaIfPkt102415mThreshold_Type = Counter64
_PmTcaIfPkt102415mThreshold_Object = MibTableColumn
pmTcaIfPkt102415mThreshold = _PmTcaIfPkt102415mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 5),
    _PmTcaIfPkt102415mThreshold_Type()
)
pmTcaIfPkt102415mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mThreshold.setStatus("current")
_PmTcaIfPkt102415mOccurTime_Type = DateAndTime
_PmTcaIfPkt102415mOccurTime_Object = MibTableColumn
pmTcaIfPkt102415mOccurTime = _PmTcaIfPkt102415mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 55, 1, 6),
    _PmTcaIfPkt102415mOccurTime_Type()
)
pmTcaIfPkt102415mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt102415mOccurTime.setStatus("current")
_PmTcaIfPkt10241hTable_Object = MibTable
pmTcaIfPkt10241hTable = _PmTcaIfPkt10241hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hTable.setStatus("current")
_PmTcaIfPkt10241hEntry_Object = MibTableRow
pmTcaIfPkt10241hEntry = _PmTcaIfPkt10241hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1)
)
pmTcaIfPkt10241hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt10241hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hEntry.setStatus("current")
_PmTcaIfPkt10241hIndex_Type = Integer32
_PmTcaIfPkt10241hIndex_Object = MibTableColumn
pmTcaIfPkt10241hIndex = _PmTcaIfPkt10241hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 1),
    _PmTcaIfPkt10241hIndex_Type()
)
pmTcaIfPkt10241hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hIndex.setStatus("current")
_PmTcaIfPkt10241hId_Type = OctetString
_PmTcaIfPkt10241hId_Object = MibTableColumn
pmTcaIfPkt10241hId = _PmTcaIfPkt10241hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 2),
    _PmTcaIfPkt10241hId_Type()
)
pmTcaIfPkt10241hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hId.setStatus("current")


class _PmTcaIfPkt10241hUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt10241hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt10241hUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt10241hUnitType_Object = MibTableColumn
pmTcaIfPkt10241hUnitType = _PmTcaIfPkt10241hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 3),
    _PmTcaIfPkt10241hUnitType_Type()
)
pmTcaIfPkt10241hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hUnitType.setStatus("current")
_PmTcaIfPkt10241hCnt_Type = Counter64
_PmTcaIfPkt10241hCnt_Object = MibTableColumn
pmTcaIfPkt10241hCnt = _PmTcaIfPkt10241hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 4),
    _PmTcaIfPkt10241hCnt_Type()
)
pmTcaIfPkt10241hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hCnt.setStatus("current")
_PmTcaIfPkt10241hThreshold_Type = Counter64
_PmTcaIfPkt10241hThreshold_Object = MibTableColumn
pmTcaIfPkt10241hThreshold = _PmTcaIfPkt10241hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 5),
    _PmTcaIfPkt10241hThreshold_Type()
)
pmTcaIfPkt10241hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hThreshold.setStatus("current")
_PmTcaIfPkt10241hOccurTime_Type = DateAndTime
_PmTcaIfPkt10241hOccurTime_Object = MibTableColumn
pmTcaIfPkt10241hOccurTime = _PmTcaIfPkt10241hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 56, 1, 6),
    _PmTcaIfPkt10241hOccurTime_Type()
)
pmTcaIfPkt10241hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241hOccurTime.setStatus("current")
_PmTcaIfPkt10241dTable_Object = MibTable
pmTcaIfPkt10241dTable = _PmTcaIfPkt10241dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57)
)
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dTable.setStatus("current")
_PmTcaIfPkt10241dEntry_Object = MibTableRow
pmTcaIfPkt10241dEntry = _PmTcaIfPkt10241dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1)
)
pmTcaIfPkt10241dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfPkt10241dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dEntry.setStatus("current")
_PmTcaIfPkt10241dIndex_Type = Integer32
_PmTcaIfPkt10241dIndex_Object = MibTableColumn
pmTcaIfPkt10241dIndex = _PmTcaIfPkt10241dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 1),
    _PmTcaIfPkt10241dIndex_Type()
)
pmTcaIfPkt10241dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dIndex.setStatus("current")
_PmTcaIfPkt10241dId_Type = OctetString
_PmTcaIfPkt10241dId_Object = MibTableColumn
pmTcaIfPkt10241dId = _PmTcaIfPkt10241dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 2),
    _PmTcaIfPkt10241dId_Type()
)
pmTcaIfPkt10241dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dId.setStatus("current")


class _PmTcaIfPkt10241dUnitType_Type(Integer32):
    """Custom type pmTcaIfPkt10241dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfPkt10241dUnitType_Type.__name__ = "Integer32"
_PmTcaIfPkt10241dUnitType_Object = MibTableColumn
pmTcaIfPkt10241dUnitType = _PmTcaIfPkt10241dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 3),
    _PmTcaIfPkt10241dUnitType_Type()
)
pmTcaIfPkt10241dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dUnitType.setStatus("current")
_PmTcaIfPkt10241dCnt_Type = Counter64
_PmTcaIfPkt10241dCnt_Object = MibTableColumn
pmTcaIfPkt10241dCnt = _PmTcaIfPkt10241dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 4),
    _PmTcaIfPkt10241dCnt_Type()
)
pmTcaIfPkt10241dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dCnt.setStatus("current")
_PmTcaIfPkt10241dThreshold_Type = Counter64
_PmTcaIfPkt10241dThreshold_Object = MibTableColumn
pmTcaIfPkt10241dThreshold = _PmTcaIfPkt10241dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 5),
    _PmTcaIfPkt10241dThreshold_Type()
)
pmTcaIfPkt10241dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dThreshold.setStatus("current")
_PmTcaIfPkt10241dOccurTime_Type = DateAndTime
_PmTcaIfPkt10241dOccurTime_Object = MibTableColumn
pmTcaIfPkt10241dOccurTime = _PmTcaIfPkt10241dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 57, 1, 6),
    _PmTcaIfPkt10241dOccurTime_Type()
)
pmTcaIfPkt10241dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfPkt10241dOccurTime.setStatus("current")
_PmTcaIfOutPkts15mTable_Object = MibTable
pmTcaIfOutPkts15mTable = _PmTcaIfOutPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58)
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mTable.setStatus("current")
_PmTcaIfOutPkts15mEntry_Object = MibTableRow
pmTcaIfOutPkts15mEntry = _PmTcaIfOutPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1)
)
pmTcaIfOutPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mEntry.setStatus("current")
_PmTcaIfOutPkts15mIndex_Type = Integer32
_PmTcaIfOutPkts15mIndex_Object = MibTableColumn
pmTcaIfOutPkts15mIndex = _PmTcaIfOutPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 1),
    _PmTcaIfOutPkts15mIndex_Type()
)
pmTcaIfOutPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mIndex.setStatus("current")
_PmTcaIfOutPkts15mId_Type = OctetString
_PmTcaIfOutPkts15mId_Object = MibTableColumn
pmTcaIfOutPkts15mId = _PmTcaIfOutPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 2),
    _PmTcaIfOutPkts15mId_Type()
)
pmTcaIfOutPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mId.setStatus("current")


class _PmTcaIfOutPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaIfOutPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutPkts15mUnitType_Object = MibTableColumn
pmTcaIfOutPkts15mUnitType = _PmTcaIfOutPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 3),
    _PmTcaIfOutPkts15mUnitType_Type()
)
pmTcaIfOutPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mUnitType.setStatus("current")
_PmTcaIfOutPkts15mCnt_Type = Counter64
_PmTcaIfOutPkts15mCnt_Object = MibTableColumn
pmTcaIfOutPkts15mCnt = _PmTcaIfOutPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 4),
    _PmTcaIfOutPkts15mCnt_Type()
)
pmTcaIfOutPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mCnt.setStatus("current")
_PmTcaIfOutPkts15mThreshold_Type = Counter64
_PmTcaIfOutPkts15mThreshold_Object = MibTableColumn
pmTcaIfOutPkts15mThreshold = _PmTcaIfOutPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 5),
    _PmTcaIfOutPkts15mThreshold_Type()
)
pmTcaIfOutPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mThreshold.setStatus("current")
_PmTcaIfOutPkts15mOccurTime_Type = DateAndTime
_PmTcaIfOutPkts15mOccurTime_Object = MibTableColumn
pmTcaIfOutPkts15mOccurTime = _PmTcaIfOutPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 58, 1, 6),
    _PmTcaIfOutPkts15mOccurTime_Type()
)
pmTcaIfOutPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts15mOccurTime.setStatus("current")
_PmTcaIfOutPkts1hTable_Object = MibTable
pmTcaIfOutPkts1hTable = _PmTcaIfOutPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59)
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hTable.setStatus("current")
_PmTcaIfOutPkts1hEntry_Object = MibTableRow
pmTcaIfOutPkts1hEntry = _PmTcaIfOutPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1)
)
pmTcaIfOutPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hEntry.setStatus("current")
_PmTcaIfOutPkts1hIndex_Type = Integer32
_PmTcaIfOutPkts1hIndex_Object = MibTableColumn
pmTcaIfOutPkts1hIndex = _PmTcaIfOutPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 1),
    _PmTcaIfOutPkts1hIndex_Type()
)
pmTcaIfOutPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hIndex.setStatus("current")
_PmTcaIfOutPkts1hId_Type = OctetString
_PmTcaIfOutPkts1hId_Object = MibTableColumn
pmTcaIfOutPkts1hId = _PmTcaIfOutPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 2),
    _PmTcaIfOutPkts1hId_Type()
)
pmTcaIfOutPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hId.setStatus("current")


class _PmTcaIfOutPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaIfOutPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutPkts1hUnitType_Object = MibTableColumn
pmTcaIfOutPkts1hUnitType = _PmTcaIfOutPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 3),
    _PmTcaIfOutPkts1hUnitType_Type()
)
pmTcaIfOutPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hUnitType.setStatus("current")
_PmTcaIfOutPkts1hCnt_Type = Counter64
_PmTcaIfOutPkts1hCnt_Object = MibTableColumn
pmTcaIfOutPkts1hCnt = _PmTcaIfOutPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 4),
    _PmTcaIfOutPkts1hCnt_Type()
)
pmTcaIfOutPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hCnt.setStatus("current")
_PmTcaIfOutPkts1hThreshold_Type = Counter64
_PmTcaIfOutPkts1hThreshold_Object = MibTableColumn
pmTcaIfOutPkts1hThreshold = _PmTcaIfOutPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 5),
    _PmTcaIfOutPkts1hThreshold_Type()
)
pmTcaIfOutPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hThreshold.setStatus("current")
_PmTcaIfOutPkts1hOccurTime_Type = DateAndTime
_PmTcaIfOutPkts1hOccurTime_Object = MibTableColumn
pmTcaIfOutPkts1hOccurTime = _PmTcaIfOutPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 59, 1, 6),
    _PmTcaIfOutPkts1hOccurTime_Type()
)
pmTcaIfOutPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1hOccurTime.setStatus("current")
_PmTcaIfOutPkts1dTable_Object = MibTable
pmTcaIfOutPkts1dTable = _PmTcaIfOutPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60)
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dTable.setStatus("current")
_PmTcaIfOutPkts1dEntry_Object = MibTableRow
pmTcaIfOutPkts1dEntry = _PmTcaIfOutPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1)
)
pmTcaIfOutPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dEntry.setStatus("current")
_PmTcaIfOutPkts1dIndex_Type = Integer32
_PmTcaIfOutPkts1dIndex_Object = MibTableColumn
pmTcaIfOutPkts1dIndex = _PmTcaIfOutPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 1),
    _PmTcaIfOutPkts1dIndex_Type()
)
pmTcaIfOutPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dIndex.setStatus("current")
_PmTcaIfOutPkts1dId_Type = OctetString
_PmTcaIfOutPkts1dId_Object = MibTableColumn
pmTcaIfOutPkts1dId = _PmTcaIfOutPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 2),
    _PmTcaIfOutPkts1dId_Type()
)
pmTcaIfOutPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dId.setStatus("current")


class _PmTcaIfOutPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaIfOutPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutPkts1dUnitType_Object = MibTableColumn
pmTcaIfOutPkts1dUnitType = _PmTcaIfOutPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 3),
    _PmTcaIfOutPkts1dUnitType_Type()
)
pmTcaIfOutPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dUnitType.setStatus("current")
_PmTcaIfOutPkts1dCnt_Type = Counter64
_PmTcaIfOutPkts1dCnt_Object = MibTableColumn
pmTcaIfOutPkts1dCnt = _PmTcaIfOutPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 4),
    _PmTcaIfOutPkts1dCnt_Type()
)
pmTcaIfOutPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dCnt.setStatus("current")
_PmTcaIfOutPkts1dThreshold_Type = Counter64
_PmTcaIfOutPkts1dThreshold_Object = MibTableColumn
pmTcaIfOutPkts1dThreshold = _PmTcaIfOutPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 5),
    _PmTcaIfOutPkts1dThreshold_Type()
)
pmTcaIfOutPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dThreshold.setStatus("current")
_PmTcaIfOutPkts1dOccurTime_Type = DateAndTime
_PmTcaIfOutPkts1dOccurTime_Object = MibTableColumn
pmTcaIfOutPkts1dOccurTime = _PmTcaIfOutPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 60, 1, 6),
    _PmTcaIfOutPkts1dOccurTime_Type()
)
pmTcaIfOutPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutPkts1dOccurTime.setStatus("current")
_PmTcaIfOutBytes15mTable_Object = MibTable
pmTcaIfOutBytes15mTable = _PmTcaIfOutBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61)
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mTable.setStatus("current")
_PmTcaIfOutBytes15mEntry_Object = MibTableRow
pmTcaIfOutBytes15mEntry = _PmTcaIfOutBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1)
)
pmTcaIfOutBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mEntry.setStatus("current")
_PmTcaIfOutBytes15mIndex_Type = Integer32
_PmTcaIfOutBytes15mIndex_Object = MibTableColumn
pmTcaIfOutBytes15mIndex = _PmTcaIfOutBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 1),
    _PmTcaIfOutBytes15mIndex_Type()
)
pmTcaIfOutBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mIndex.setStatus("current")
_PmTcaIfOutBytes15mId_Type = OctetString
_PmTcaIfOutBytes15mId_Object = MibTableColumn
pmTcaIfOutBytes15mId = _PmTcaIfOutBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 2),
    _PmTcaIfOutBytes15mId_Type()
)
pmTcaIfOutBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mId.setStatus("current")


class _PmTcaIfOutBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaIfOutBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutBytes15mUnitType_Object = MibTableColumn
pmTcaIfOutBytes15mUnitType = _PmTcaIfOutBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 3),
    _PmTcaIfOutBytes15mUnitType_Type()
)
pmTcaIfOutBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mUnitType.setStatus("current")
_PmTcaIfOutBytes15mCnt_Type = Counter64
_PmTcaIfOutBytes15mCnt_Object = MibTableColumn
pmTcaIfOutBytes15mCnt = _PmTcaIfOutBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 4),
    _PmTcaIfOutBytes15mCnt_Type()
)
pmTcaIfOutBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mCnt.setStatus("current")
_PmTcaIfOutBytes15mThreshold_Type = Counter64
_PmTcaIfOutBytes15mThreshold_Object = MibTableColumn
pmTcaIfOutBytes15mThreshold = _PmTcaIfOutBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 5),
    _PmTcaIfOutBytes15mThreshold_Type()
)
pmTcaIfOutBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mThreshold.setStatus("current")
_PmTcaIfOutBytes15mOccurTime_Type = DateAndTime
_PmTcaIfOutBytes15mOccurTime_Object = MibTableColumn
pmTcaIfOutBytes15mOccurTime = _PmTcaIfOutBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 61, 1, 6),
    _PmTcaIfOutBytes15mOccurTime_Type()
)
pmTcaIfOutBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes15mOccurTime.setStatus("current")
_PmTcaIfOutBytes1hTable_Object = MibTable
pmTcaIfOutBytes1hTable = _PmTcaIfOutBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62)
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hTable.setStatus("current")
_PmTcaIfOutBytes1hEntry_Object = MibTableRow
pmTcaIfOutBytes1hEntry = _PmTcaIfOutBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1)
)
pmTcaIfOutBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hEntry.setStatus("current")
_PmTcaIfOutBytes1hIndex_Type = Integer32
_PmTcaIfOutBytes1hIndex_Object = MibTableColumn
pmTcaIfOutBytes1hIndex = _PmTcaIfOutBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 1),
    _PmTcaIfOutBytes1hIndex_Type()
)
pmTcaIfOutBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hIndex.setStatus("current")
_PmTcaIfOutBytes1hId_Type = OctetString
_PmTcaIfOutBytes1hId_Object = MibTableColumn
pmTcaIfOutBytes1hId = _PmTcaIfOutBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 2),
    _PmTcaIfOutBytes1hId_Type()
)
pmTcaIfOutBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hId.setStatus("current")


class _PmTcaIfOutBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaIfOutBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutBytes1hUnitType_Object = MibTableColumn
pmTcaIfOutBytes1hUnitType = _PmTcaIfOutBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 3),
    _PmTcaIfOutBytes1hUnitType_Type()
)
pmTcaIfOutBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hUnitType.setStatus("current")
_PmTcaIfOutBytes1hCnt_Type = Counter64
_PmTcaIfOutBytes1hCnt_Object = MibTableColumn
pmTcaIfOutBytes1hCnt = _PmTcaIfOutBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 4),
    _PmTcaIfOutBytes1hCnt_Type()
)
pmTcaIfOutBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hCnt.setStatus("current")
_PmTcaIfOutBytes1hThreshold_Type = Counter64
_PmTcaIfOutBytes1hThreshold_Object = MibTableColumn
pmTcaIfOutBytes1hThreshold = _PmTcaIfOutBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 5),
    _PmTcaIfOutBytes1hThreshold_Type()
)
pmTcaIfOutBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hThreshold.setStatus("current")
_PmTcaIfOutBytes1hOccurTime_Type = DateAndTime
_PmTcaIfOutBytes1hOccurTime_Object = MibTableColumn
pmTcaIfOutBytes1hOccurTime = _PmTcaIfOutBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 62, 1, 6),
    _PmTcaIfOutBytes1hOccurTime_Type()
)
pmTcaIfOutBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1hOccurTime.setStatus("current")
_PmTcaIfOutBytes1dTable_Object = MibTable
pmTcaIfOutBytes1dTable = _PmTcaIfOutBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63)
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dTable.setStatus("current")
_PmTcaIfOutBytes1dEntry_Object = MibTableRow
pmTcaIfOutBytes1dEntry = _PmTcaIfOutBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1)
)
pmTcaIfOutBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaIfOutBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dEntry.setStatus("current")
_PmTcaIfOutBytes1dIndex_Type = Integer32
_PmTcaIfOutBytes1dIndex_Object = MibTableColumn
pmTcaIfOutBytes1dIndex = _PmTcaIfOutBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 1),
    _PmTcaIfOutBytes1dIndex_Type()
)
pmTcaIfOutBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dIndex.setStatus("current")
_PmTcaIfOutBytes1dId_Type = OctetString
_PmTcaIfOutBytes1dId_Object = MibTableColumn
pmTcaIfOutBytes1dId = _PmTcaIfOutBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 2),
    _PmTcaIfOutBytes1dId_Type()
)
pmTcaIfOutBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dId.setStatus("current")


class _PmTcaIfOutBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaIfOutBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaIfOutBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaIfOutBytes1dUnitType_Object = MibTableColumn
pmTcaIfOutBytes1dUnitType = _PmTcaIfOutBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 3),
    _PmTcaIfOutBytes1dUnitType_Type()
)
pmTcaIfOutBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dUnitType.setStatus("current")
_PmTcaIfOutBytes1dCnt_Type = Counter64
_PmTcaIfOutBytes1dCnt_Object = MibTableColumn
pmTcaIfOutBytes1dCnt = _PmTcaIfOutBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 4),
    _PmTcaIfOutBytes1dCnt_Type()
)
pmTcaIfOutBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dCnt.setStatus("current")
_PmTcaIfOutBytes1dThreshold_Type = Counter64
_PmTcaIfOutBytes1dThreshold_Object = MibTableColumn
pmTcaIfOutBytes1dThreshold = _PmTcaIfOutBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 5),
    _PmTcaIfOutBytes1dThreshold_Type()
)
pmTcaIfOutBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dThreshold.setStatus("current")
_PmTcaIfOutBytes1dOccurTime_Type = DateAndTime
_PmTcaIfOutBytes1dOccurTime_Object = MibTableColumn
pmTcaIfOutBytes1dOccurTime = _PmTcaIfOutBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 102, 63, 1, 6),
    _PmTcaIfOutBytes1dOccurTime_Type()
)
pmTcaIfOutBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaIfOutBytes1dOccurTime.setStatus("current")
_PmLspPe_ObjectIdentity = ObjectIdentity
pmLspPe = _PmLspPe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103)
)
_PmLspPeCurr15mTable_Object = MibTable
pmLspPeCurr15mTable = _PmLspPeCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1)
)
if mibBuilder.loadTexts:
    pmLspPeCurr15mTable.setStatus("current")
_PmLspPeCurr15mEntry_Object = MibTableRow
pmLspPeCurr15mEntry = _PmLspPeCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1)
)
pmLspPeCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmLspPeCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmLspPeCurr15mEntry.setStatus("current")
_PmLspPeCurr15mIndex_Type = Integer32
_PmLspPeCurr15mIndex_Object = MibTableColumn
pmLspPeCurr15mIndex = _PmLspPeCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 1),
    _PmLspPeCurr15mIndex_Type()
)
pmLspPeCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPeCurr15mIndex.setStatus("current")
_PmLspPeCurr15mId_Type = OctetString
_PmLspPeCurr15mId_Object = MibTableColumn
pmLspPeCurr15mId = _PmLspPeCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 2),
    _PmLspPeCurr15mId_Type()
)
pmLspPeCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mId.setStatus("current")


class _PmLspPeCurr15mUnitType_Type(Integer32):
    """Custom type pmLspPeCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPeCurr15mUnitType_Type.__name__ = "Integer32"
_PmLspPeCurr15mUnitType_Object = MibTableColumn
pmLspPeCurr15mUnitType = _PmLspPeCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 3),
    _PmLspPeCurr15mUnitType_Type()
)
pmLspPeCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mUnitType.setStatus("current")
_PmLspPeCurr15mOutPkts_Type = Counter64
_PmLspPeCurr15mOutPkts_Object = MibTableColumn
pmLspPeCurr15mOutPkts = _PmLspPeCurr15mOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 4),
    _PmLspPeCurr15mOutPkts_Type()
)
pmLspPeCurr15mOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mOutPkts.setStatus("current")
_PmLspPeCurr15mOutBytes_Type = Counter64
_PmLspPeCurr15mOutBytes_Object = MibTableColumn
pmLspPeCurr15mOutBytes = _PmLspPeCurr15mOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 5),
    _PmLspPeCurr15mOutBytes_Type()
)
pmLspPeCurr15mOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mOutBytes.setStatus("current")
_PmLspPeCurr15mStartTime_Type = DateAndTime
_PmLspPeCurr15mStartTime_Object = MibTableColumn
pmLspPeCurr15mStartTime = _PmLspPeCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 100),
    _PmLspPeCurr15mStartTime_Type()
)
pmLspPeCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mStartTime.setStatus("current")
_PmLspPeCurr15mStopTime_Type = DateAndTime
_PmLspPeCurr15mStopTime_Object = MibTableColumn
pmLspPeCurr15mStopTime = _PmLspPeCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 1, 1, 101),
    _PmLspPeCurr15mStopTime_Type()
)
pmLspPeCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr15mStopTime.setStatus("current")
_PmLspPePrev15mTable_Object = MibTable
pmLspPePrev15mTable = _PmLspPePrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2)
)
if mibBuilder.loadTexts:
    pmLspPePrev15mTable.setStatus("current")
_PmLspPePrev15mEntry_Object = MibTableRow
pmLspPePrev15mEntry = _PmLspPePrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1)
)
pmLspPePrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmLspPePrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmLspPePrev15mEntry.setStatus("current")
_PmLspPePrev15mIndex_Type = Integer32
_PmLspPePrev15mIndex_Object = MibTableColumn
pmLspPePrev15mIndex = _PmLspPePrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 1),
    _PmLspPePrev15mIndex_Type()
)
pmLspPePrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPePrev15mIndex.setStatus("current")
_PmLspPePrev15mId_Type = OctetString
_PmLspPePrev15mId_Object = MibTableColumn
pmLspPePrev15mId = _PmLspPePrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 2),
    _PmLspPePrev15mId_Type()
)
pmLspPePrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mId.setStatus("current")


class _PmLspPePrev15mUnitType_Type(Integer32):
    """Custom type pmLspPePrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPePrev15mUnitType_Type.__name__ = "Integer32"
_PmLspPePrev15mUnitType_Object = MibTableColumn
pmLspPePrev15mUnitType = _PmLspPePrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 3),
    _PmLspPePrev15mUnitType_Type()
)
pmLspPePrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mUnitType.setStatus("current")
_PmLspPePrev15mOutPkts_Type = Counter64
_PmLspPePrev15mOutPkts_Object = MibTableColumn
pmLspPePrev15mOutPkts = _PmLspPePrev15mOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 4),
    _PmLspPePrev15mOutPkts_Type()
)
pmLspPePrev15mOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mOutPkts.setStatus("current")
_PmLspPePrev15mOutBytes_Type = Counter64
_PmLspPePrev15mOutBytes_Object = MibTableColumn
pmLspPePrev15mOutBytes = _PmLspPePrev15mOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 5),
    _PmLspPePrev15mOutBytes_Type()
)
pmLspPePrev15mOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mOutBytes.setStatus("current")
_PmLspPePrev15mStartTime_Type = DateAndTime
_PmLspPePrev15mStartTime_Object = MibTableColumn
pmLspPePrev15mStartTime = _PmLspPePrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 100),
    _PmLspPePrev15mStartTime_Type()
)
pmLspPePrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mStartTime.setStatus("current")
_PmLspPePrev15mStopTime_Type = DateAndTime
_PmLspPePrev15mStopTime_Object = MibTableColumn
pmLspPePrev15mStopTime = _PmLspPePrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 2, 1, 101),
    _PmLspPePrev15mStopTime_Type()
)
pmLspPePrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev15mStopTime.setStatus("current")
_PmLspPeCurr1hTable_Object = MibTable
pmLspPeCurr1hTable = _PmLspPeCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3)
)
if mibBuilder.loadTexts:
    pmLspPeCurr1hTable.setStatus("current")
_PmLspPeCurr1hEntry_Object = MibTableRow
pmLspPeCurr1hEntry = _PmLspPeCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1)
)
pmLspPeCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmLspPeCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmLspPeCurr1hEntry.setStatus("current")
_PmLspPeCurr1hIndex_Type = Integer32
_PmLspPeCurr1hIndex_Object = MibTableColumn
pmLspPeCurr1hIndex = _PmLspPeCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 1),
    _PmLspPeCurr1hIndex_Type()
)
pmLspPeCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPeCurr1hIndex.setStatus("current")
_PmLspPeCurr1hId_Type = OctetString
_PmLspPeCurr1hId_Object = MibTableColumn
pmLspPeCurr1hId = _PmLspPeCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 2),
    _PmLspPeCurr1hId_Type()
)
pmLspPeCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hId.setStatus("current")


class _PmLspPeCurr1hUnitType_Type(Integer32):
    """Custom type pmLspPeCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPeCurr1hUnitType_Type.__name__ = "Integer32"
_PmLspPeCurr1hUnitType_Object = MibTableColumn
pmLspPeCurr1hUnitType = _PmLspPeCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 3),
    _PmLspPeCurr1hUnitType_Type()
)
pmLspPeCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hUnitType.setStatus("current")
_PmLspPeCurr1hOutPkts_Type = Counter64
_PmLspPeCurr1hOutPkts_Object = MibTableColumn
pmLspPeCurr1hOutPkts = _PmLspPeCurr1hOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 4),
    _PmLspPeCurr1hOutPkts_Type()
)
pmLspPeCurr1hOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hOutPkts.setStatus("current")
_PmLspPeCurr1hOutBytes_Type = Counter64
_PmLspPeCurr1hOutBytes_Object = MibTableColumn
pmLspPeCurr1hOutBytes = _PmLspPeCurr1hOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 5),
    _PmLspPeCurr1hOutBytes_Type()
)
pmLspPeCurr1hOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hOutBytes.setStatus("current")
_PmLspPeCurr1hStartTime_Type = DateAndTime
_PmLspPeCurr1hStartTime_Object = MibTableColumn
pmLspPeCurr1hStartTime = _PmLspPeCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 100),
    _PmLspPeCurr1hStartTime_Type()
)
pmLspPeCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hStartTime.setStatus("current")
_PmLspPeCurr1hStopTime_Type = DateAndTime
_PmLspPeCurr1hStopTime_Object = MibTableColumn
pmLspPeCurr1hStopTime = _PmLspPeCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 3, 1, 101),
    _PmLspPeCurr1hStopTime_Type()
)
pmLspPeCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1hStopTime.setStatus("current")
_PmLspPePrev1hTable_Object = MibTable
pmLspPePrev1hTable = _PmLspPePrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4)
)
if mibBuilder.loadTexts:
    pmLspPePrev1hTable.setStatus("current")
_PmLspPePrev1hEntry_Object = MibTableRow
pmLspPePrev1hEntry = _PmLspPePrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1)
)
pmLspPePrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmLspPePrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmLspPePrev1hEntry.setStatus("current")
_PmLspPePrev1hIndex_Type = Integer32
_PmLspPePrev1hIndex_Object = MibTableColumn
pmLspPePrev1hIndex = _PmLspPePrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 1),
    _PmLspPePrev1hIndex_Type()
)
pmLspPePrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPePrev1hIndex.setStatus("current")
_PmLspPePrev1hId_Type = OctetString
_PmLspPePrev1hId_Object = MibTableColumn
pmLspPePrev1hId = _PmLspPePrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 2),
    _PmLspPePrev1hId_Type()
)
pmLspPePrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hId.setStatus("current")


class _PmLspPePrev1hUnitType_Type(Integer32):
    """Custom type pmLspPePrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPePrev1hUnitType_Type.__name__ = "Integer32"
_PmLspPePrev1hUnitType_Object = MibTableColumn
pmLspPePrev1hUnitType = _PmLspPePrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 3),
    _PmLspPePrev1hUnitType_Type()
)
pmLspPePrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hUnitType.setStatus("current")
_PmLspPePrev1hOutPkts_Type = Counter64
_PmLspPePrev1hOutPkts_Object = MibTableColumn
pmLspPePrev1hOutPkts = _PmLspPePrev1hOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 4),
    _PmLspPePrev1hOutPkts_Type()
)
pmLspPePrev1hOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hOutPkts.setStatus("current")
_PmLspPePrev1hOutBytes_Type = Counter64
_PmLspPePrev1hOutBytes_Object = MibTableColumn
pmLspPePrev1hOutBytes = _PmLspPePrev1hOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 5),
    _PmLspPePrev1hOutBytes_Type()
)
pmLspPePrev1hOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hOutBytes.setStatus("current")
_PmLspPePrev1hStartTime_Type = DateAndTime
_PmLspPePrev1hStartTime_Object = MibTableColumn
pmLspPePrev1hStartTime = _PmLspPePrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 100),
    _PmLspPePrev1hStartTime_Type()
)
pmLspPePrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hStartTime.setStatus("current")
_PmLspPePrev1hStopTime_Type = DateAndTime
_PmLspPePrev1hStopTime_Object = MibTableColumn
pmLspPePrev1hStopTime = _PmLspPePrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 4, 1, 101),
    _PmLspPePrev1hStopTime_Type()
)
pmLspPePrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1hStopTime.setStatus("current")
_PmLspPeCurr1dTable_Object = MibTable
pmLspPeCurr1dTable = _PmLspPeCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5)
)
if mibBuilder.loadTexts:
    pmLspPeCurr1dTable.setStatus("current")
_PmLspPeCurr1dEntry_Object = MibTableRow
pmLspPeCurr1dEntry = _PmLspPeCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1)
)
pmLspPeCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmLspPeCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmLspPeCurr1dEntry.setStatus("current")
_PmLspPeCurr1dIndex_Type = Integer32
_PmLspPeCurr1dIndex_Object = MibTableColumn
pmLspPeCurr1dIndex = _PmLspPeCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 1),
    _PmLspPeCurr1dIndex_Type()
)
pmLspPeCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPeCurr1dIndex.setStatus("current")
_PmLspPeCurr1dId_Type = OctetString
_PmLspPeCurr1dId_Object = MibTableColumn
pmLspPeCurr1dId = _PmLspPeCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 2),
    _PmLspPeCurr1dId_Type()
)
pmLspPeCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dId.setStatus("current")


class _PmLspPeCurr1dUnitType_Type(Integer32):
    """Custom type pmLspPeCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPeCurr1dUnitType_Type.__name__ = "Integer32"
_PmLspPeCurr1dUnitType_Object = MibTableColumn
pmLspPeCurr1dUnitType = _PmLspPeCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 3),
    _PmLspPeCurr1dUnitType_Type()
)
pmLspPeCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dUnitType.setStatus("current")
_PmLspPeCurr1dOutPkts_Type = Counter64
_PmLspPeCurr1dOutPkts_Object = MibTableColumn
pmLspPeCurr1dOutPkts = _PmLspPeCurr1dOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 4),
    _PmLspPeCurr1dOutPkts_Type()
)
pmLspPeCurr1dOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dOutPkts.setStatus("current")
_PmLspPeCurr1dOutBytes_Type = Counter64
_PmLspPeCurr1dOutBytes_Object = MibTableColumn
pmLspPeCurr1dOutBytes = _PmLspPeCurr1dOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 5),
    _PmLspPeCurr1dOutBytes_Type()
)
pmLspPeCurr1dOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dOutBytes.setStatus("current")
_PmLspPeCurr1dStartTime_Type = DateAndTime
_PmLspPeCurr1dStartTime_Object = MibTableColumn
pmLspPeCurr1dStartTime = _PmLspPeCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 100),
    _PmLspPeCurr1dStartTime_Type()
)
pmLspPeCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dStartTime.setStatus("current")
_PmLspPeCurr1dStopTime_Type = DateAndTime
_PmLspPeCurr1dStopTime_Object = MibTableColumn
pmLspPeCurr1dStopTime = _PmLspPeCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 5, 1, 101),
    _PmLspPeCurr1dStopTime_Type()
)
pmLspPeCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPeCurr1dStopTime.setStatus("current")
_PmLspPePrev1dTable_Object = MibTable
pmLspPePrev1dTable = _PmLspPePrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6)
)
if mibBuilder.loadTexts:
    pmLspPePrev1dTable.setStatus("current")
_PmLspPePrev1dEntry_Object = MibTableRow
pmLspPePrev1dEntry = _PmLspPePrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1)
)
pmLspPePrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmLspPePrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmLspPePrev1dEntry.setStatus("current")
_PmLspPePrev1dIndex_Type = Integer32
_PmLspPePrev1dIndex_Object = MibTableColumn
pmLspPePrev1dIndex = _PmLspPePrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 1),
    _PmLspPePrev1dIndex_Type()
)
pmLspPePrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPePrev1dIndex.setStatus("current")
_PmLspPePrev1dId_Type = OctetString
_PmLspPePrev1dId_Object = MibTableColumn
pmLspPePrev1dId = _PmLspPePrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 2),
    _PmLspPePrev1dId_Type()
)
pmLspPePrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dId.setStatus("current")


class _PmLspPePrev1dUnitType_Type(Integer32):
    """Custom type pmLspPePrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPePrev1dUnitType_Type.__name__ = "Integer32"
_PmLspPePrev1dUnitType_Object = MibTableColumn
pmLspPePrev1dUnitType = _PmLspPePrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 3),
    _PmLspPePrev1dUnitType_Type()
)
pmLspPePrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dUnitType.setStatus("current")
_PmLspPePrev1dOutPkts_Type = Counter64
_PmLspPePrev1dOutPkts_Object = MibTableColumn
pmLspPePrev1dOutPkts = _PmLspPePrev1dOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 4),
    _PmLspPePrev1dOutPkts_Type()
)
pmLspPePrev1dOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dOutPkts.setStatus("current")
_PmLspPePrev1dOutBytes_Type = Counter64
_PmLspPePrev1dOutBytes_Object = MibTableColumn
pmLspPePrev1dOutBytes = _PmLspPePrev1dOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 5),
    _PmLspPePrev1dOutBytes_Type()
)
pmLspPePrev1dOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dOutBytes.setStatus("current")
_PmLspPePrev1dStartTime_Type = DateAndTime
_PmLspPePrev1dStartTime_Object = MibTableColumn
pmLspPePrev1dStartTime = _PmLspPePrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 100),
    _PmLspPePrev1dStartTime_Type()
)
pmLspPePrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dStartTime.setStatus("current")
_PmLspPePrev1dStopTime_Type = DateAndTime
_PmLspPePrev1dStopTime_Object = MibTableColumn
pmLspPePrev1dStopTime = _PmLspPePrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 6, 1, 101),
    _PmLspPePrev1dStopTime_Type()
)
pmLspPePrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPePrev1dStopTime.setStatus("current")
_PmTcaLspPeOutPkts15mTable_Object = MibTable
pmTcaLspPeOutPkts15mTable = _PmTcaLspPeOutPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mTable.setStatus("current")
_PmTcaLspPeOutPkts15mEntry_Object = MibTableRow
pmTcaLspPeOutPkts15mEntry = _PmTcaLspPeOutPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1)
)
pmTcaLspPeOutPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mEntry.setStatus("current")
_PmTcaLspPeOutPkts15mIndex_Type = Integer32
_PmTcaLspPeOutPkts15mIndex_Object = MibTableColumn
pmTcaLspPeOutPkts15mIndex = _PmTcaLspPeOutPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 1),
    _PmTcaLspPeOutPkts15mIndex_Type()
)
pmTcaLspPeOutPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mIndex.setStatus("current")
_PmTcaLspPeOutPkts15mId_Type = OctetString
_PmTcaLspPeOutPkts15mId_Object = MibTableColumn
pmTcaLspPeOutPkts15mId = _PmTcaLspPeOutPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 2),
    _PmTcaLspPeOutPkts15mId_Type()
)
pmTcaLspPeOutPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mId.setStatus("current")


class _PmTcaLspPeOutPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutPkts15mUnitType_Object = MibTableColumn
pmTcaLspPeOutPkts15mUnitType = _PmTcaLspPeOutPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 3),
    _PmTcaLspPeOutPkts15mUnitType_Type()
)
pmTcaLspPeOutPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mUnitType.setStatus("current")
_PmTcaLspPeOutPkts15mCnt_Type = Counter64
_PmTcaLspPeOutPkts15mCnt_Object = MibTableColumn
pmTcaLspPeOutPkts15mCnt = _PmTcaLspPeOutPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 4),
    _PmTcaLspPeOutPkts15mCnt_Type()
)
pmTcaLspPeOutPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mCnt.setStatus("current")
_PmTcaLspPeOutPkts15mThreshold_Type = Counter64
_PmTcaLspPeOutPkts15mThreshold_Object = MibTableColumn
pmTcaLspPeOutPkts15mThreshold = _PmTcaLspPeOutPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 5),
    _PmTcaLspPeOutPkts15mThreshold_Type()
)
pmTcaLspPeOutPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mThreshold.setStatus("current")
_PmTcaLspPeOutPkts15mOccurTime_Type = DateAndTime
_PmTcaLspPeOutPkts15mOccurTime_Object = MibTableColumn
pmTcaLspPeOutPkts15mOccurTime = _PmTcaLspPeOutPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 7, 1, 6),
    _PmTcaLspPeOutPkts15mOccurTime_Type()
)
pmTcaLspPeOutPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts15mOccurTime.setStatus("current")
_PmTcaLspPeOutPkts1hTable_Object = MibTable
pmTcaLspPeOutPkts1hTable = _PmTcaLspPeOutPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hTable.setStatus("current")
_PmTcaLspPeOutPkts1hEntry_Object = MibTableRow
pmTcaLspPeOutPkts1hEntry = _PmTcaLspPeOutPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1)
)
pmTcaLspPeOutPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hEntry.setStatus("current")
_PmTcaLspPeOutPkts1hIndex_Type = Integer32
_PmTcaLspPeOutPkts1hIndex_Object = MibTableColumn
pmTcaLspPeOutPkts1hIndex = _PmTcaLspPeOutPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 1),
    _PmTcaLspPeOutPkts1hIndex_Type()
)
pmTcaLspPeOutPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hIndex.setStatus("current")
_PmTcaLspPeOutPkts1hId_Type = OctetString
_PmTcaLspPeOutPkts1hId_Object = MibTableColumn
pmTcaLspPeOutPkts1hId = _PmTcaLspPeOutPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 2),
    _PmTcaLspPeOutPkts1hId_Type()
)
pmTcaLspPeOutPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hId.setStatus("current")


class _PmTcaLspPeOutPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutPkts1hUnitType_Object = MibTableColumn
pmTcaLspPeOutPkts1hUnitType = _PmTcaLspPeOutPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 3),
    _PmTcaLspPeOutPkts1hUnitType_Type()
)
pmTcaLspPeOutPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hUnitType.setStatus("current")
_PmTcaLspPeOutPkts1hCnt_Type = Counter64
_PmTcaLspPeOutPkts1hCnt_Object = MibTableColumn
pmTcaLspPeOutPkts1hCnt = _PmTcaLspPeOutPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 4),
    _PmTcaLspPeOutPkts1hCnt_Type()
)
pmTcaLspPeOutPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hCnt.setStatus("current")
_PmTcaLspPeOutPkts1hThreshold_Type = Counter64
_PmTcaLspPeOutPkts1hThreshold_Object = MibTableColumn
pmTcaLspPeOutPkts1hThreshold = _PmTcaLspPeOutPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 5),
    _PmTcaLspPeOutPkts1hThreshold_Type()
)
pmTcaLspPeOutPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hThreshold.setStatus("current")
_PmTcaLspPeOutPkts1hOccurTime_Type = DateAndTime
_PmTcaLspPeOutPkts1hOccurTime_Object = MibTableColumn
pmTcaLspPeOutPkts1hOccurTime = _PmTcaLspPeOutPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 8, 1, 6),
    _PmTcaLspPeOutPkts1hOccurTime_Type()
)
pmTcaLspPeOutPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1hOccurTime.setStatus("current")
_PmTcaLspPeOutPkts1dTable_Object = MibTable
pmTcaLspPeOutPkts1dTable = _PmTcaLspPeOutPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dTable.setStatus("current")
_PmTcaLspPeOutPkts1dEntry_Object = MibTableRow
pmTcaLspPeOutPkts1dEntry = _PmTcaLspPeOutPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1)
)
pmTcaLspPeOutPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dEntry.setStatus("current")
_PmTcaLspPeOutPkts1dIndex_Type = Integer32
_PmTcaLspPeOutPkts1dIndex_Object = MibTableColumn
pmTcaLspPeOutPkts1dIndex = _PmTcaLspPeOutPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 1),
    _PmTcaLspPeOutPkts1dIndex_Type()
)
pmTcaLspPeOutPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dIndex.setStatus("current")
_PmTcaLspPeOutPkts1dId_Type = OctetString
_PmTcaLspPeOutPkts1dId_Object = MibTableColumn
pmTcaLspPeOutPkts1dId = _PmTcaLspPeOutPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 2),
    _PmTcaLspPeOutPkts1dId_Type()
)
pmTcaLspPeOutPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dId.setStatus("current")


class _PmTcaLspPeOutPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutPkts1dUnitType_Object = MibTableColumn
pmTcaLspPeOutPkts1dUnitType = _PmTcaLspPeOutPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 3),
    _PmTcaLspPeOutPkts1dUnitType_Type()
)
pmTcaLspPeOutPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dUnitType.setStatus("current")
_PmTcaLspPeOutPkts1dCnt_Type = Counter64
_PmTcaLspPeOutPkts1dCnt_Object = MibTableColumn
pmTcaLspPeOutPkts1dCnt = _PmTcaLspPeOutPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 4),
    _PmTcaLspPeOutPkts1dCnt_Type()
)
pmTcaLspPeOutPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dCnt.setStatus("current")
_PmTcaLspPeOutPkts1dThreshold_Type = Counter64
_PmTcaLspPeOutPkts1dThreshold_Object = MibTableColumn
pmTcaLspPeOutPkts1dThreshold = _PmTcaLspPeOutPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 5),
    _PmTcaLspPeOutPkts1dThreshold_Type()
)
pmTcaLspPeOutPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dThreshold.setStatus("current")
_PmTcaLspPeOutPkts1dOccurTime_Type = DateAndTime
_PmTcaLspPeOutPkts1dOccurTime_Object = MibTableColumn
pmTcaLspPeOutPkts1dOccurTime = _PmTcaLspPeOutPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 9, 1, 6),
    _PmTcaLspPeOutPkts1dOccurTime_Type()
)
pmTcaLspPeOutPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutPkts1dOccurTime.setStatus("current")
_PmTcaLspPeOutBytes15mTable_Object = MibTable
pmTcaLspPeOutBytes15mTable = _PmTcaLspPeOutBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mTable.setStatus("current")
_PmTcaLspPeOutBytes15mEntry_Object = MibTableRow
pmTcaLspPeOutBytes15mEntry = _PmTcaLspPeOutBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1)
)
pmTcaLspPeOutBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mEntry.setStatus("current")
_PmTcaLspPeOutBytes15mIndex_Type = Integer32
_PmTcaLspPeOutBytes15mIndex_Object = MibTableColumn
pmTcaLspPeOutBytes15mIndex = _PmTcaLspPeOutBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 1),
    _PmTcaLspPeOutBytes15mIndex_Type()
)
pmTcaLspPeOutBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mIndex.setStatus("current")
_PmTcaLspPeOutBytes15mId_Type = OctetString
_PmTcaLspPeOutBytes15mId_Object = MibTableColumn
pmTcaLspPeOutBytes15mId = _PmTcaLspPeOutBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 2),
    _PmTcaLspPeOutBytes15mId_Type()
)
pmTcaLspPeOutBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mId.setStatus("current")


class _PmTcaLspPeOutBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutBytes15mUnitType_Object = MibTableColumn
pmTcaLspPeOutBytes15mUnitType = _PmTcaLspPeOutBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 3),
    _PmTcaLspPeOutBytes15mUnitType_Type()
)
pmTcaLspPeOutBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mUnitType.setStatus("current")
_PmTcaLspPeOutBytes15mCnt_Type = Counter64
_PmTcaLspPeOutBytes15mCnt_Object = MibTableColumn
pmTcaLspPeOutBytes15mCnt = _PmTcaLspPeOutBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 4),
    _PmTcaLspPeOutBytes15mCnt_Type()
)
pmTcaLspPeOutBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mCnt.setStatus("current")
_PmTcaLspPeOutBytes15mThreshold_Type = Counter64
_PmTcaLspPeOutBytes15mThreshold_Object = MibTableColumn
pmTcaLspPeOutBytes15mThreshold = _PmTcaLspPeOutBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 5),
    _PmTcaLspPeOutBytes15mThreshold_Type()
)
pmTcaLspPeOutBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mThreshold.setStatus("current")
_PmTcaLspPeOutBytes15mOccurTime_Type = DateAndTime
_PmTcaLspPeOutBytes15mOccurTime_Object = MibTableColumn
pmTcaLspPeOutBytes15mOccurTime = _PmTcaLspPeOutBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 10, 1, 6),
    _PmTcaLspPeOutBytes15mOccurTime_Type()
)
pmTcaLspPeOutBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes15mOccurTime.setStatus("current")
_PmTcaLspPeOutBytes1hTable_Object = MibTable
pmTcaLspPeOutBytes1hTable = _PmTcaLspPeOutBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hTable.setStatus("current")
_PmTcaLspPeOutBytes1hEntry_Object = MibTableRow
pmTcaLspPeOutBytes1hEntry = _PmTcaLspPeOutBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1)
)
pmTcaLspPeOutBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hEntry.setStatus("current")
_PmTcaLspPeOutBytes1hIndex_Type = Integer32
_PmTcaLspPeOutBytes1hIndex_Object = MibTableColumn
pmTcaLspPeOutBytes1hIndex = _PmTcaLspPeOutBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 1),
    _PmTcaLspPeOutBytes1hIndex_Type()
)
pmTcaLspPeOutBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hIndex.setStatus("current")
_PmTcaLspPeOutBytes1hId_Type = OctetString
_PmTcaLspPeOutBytes1hId_Object = MibTableColumn
pmTcaLspPeOutBytes1hId = _PmTcaLspPeOutBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 2),
    _PmTcaLspPeOutBytes1hId_Type()
)
pmTcaLspPeOutBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hId.setStatus("current")


class _PmTcaLspPeOutBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutBytes1hUnitType_Object = MibTableColumn
pmTcaLspPeOutBytes1hUnitType = _PmTcaLspPeOutBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 3),
    _PmTcaLspPeOutBytes1hUnitType_Type()
)
pmTcaLspPeOutBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hUnitType.setStatus("current")
_PmTcaLspPeOutBytes1hCnt_Type = Counter64
_PmTcaLspPeOutBytes1hCnt_Object = MibTableColumn
pmTcaLspPeOutBytes1hCnt = _PmTcaLspPeOutBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 4),
    _PmTcaLspPeOutBytes1hCnt_Type()
)
pmTcaLspPeOutBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hCnt.setStatus("current")
_PmTcaLspPeOutBytes1hThreshold_Type = Counter64
_PmTcaLspPeOutBytes1hThreshold_Object = MibTableColumn
pmTcaLspPeOutBytes1hThreshold = _PmTcaLspPeOutBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 5),
    _PmTcaLspPeOutBytes1hThreshold_Type()
)
pmTcaLspPeOutBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hThreshold.setStatus("current")
_PmTcaLspPeOutBytes1hOccurTime_Type = DateAndTime
_PmTcaLspPeOutBytes1hOccurTime_Object = MibTableColumn
pmTcaLspPeOutBytes1hOccurTime = _PmTcaLspPeOutBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 11, 1, 6),
    _PmTcaLspPeOutBytes1hOccurTime_Type()
)
pmTcaLspPeOutBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1hOccurTime.setStatus("current")
_PmTcaLspPeOutBytes1dTable_Object = MibTable
pmTcaLspPeOutBytes1dTable = _PmTcaLspPeOutBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12)
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dTable.setStatus("current")
_PmTcaLspPeOutBytes1dEntry_Object = MibTableRow
pmTcaLspPeOutBytes1dEntry = _PmTcaLspPeOutBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1)
)
pmTcaLspPeOutBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPeOutBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dEntry.setStatus("current")
_PmTcaLspPeOutBytes1dIndex_Type = Integer32
_PmTcaLspPeOutBytes1dIndex_Object = MibTableColumn
pmTcaLspPeOutBytes1dIndex = _PmTcaLspPeOutBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 1),
    _PmTcaLspPeOutBytes1dIndex_Type()
)
pmTcaLspPeOutBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dIndex.setStatus("current")
_PmTcaLspPeOutBytes1dId_Type = OctetString
_PmTcaLspPeOutBytes1dId_Object = MibTableColumn
pmTcaLspPeOutBytes1dId = _PmTcaLspPeOutBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 2),
    _PmTcaLspPeOutBytes1dId_Type()
)
pmTcaLspPeOutBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dId.setStatus("current")


class _PmTcaLspPeOutBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPeOutBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPeOutBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPeOutBytes1dUnitType_Object = MibTableColumn
pmTcaLspPeOutBytes1dUnitType = _PmTcaLspPeOutBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 3),
    _PmTcaLspPeOutBytes1dUnitType_Type()
)
pmTcaLspPeOutBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dUnitType.setStatus("current")
_PmTcaLspPeOutBytes1dCnt_Type = Counter64
_PmTcaLspPeOutBytes1dCnt_Object = MibTableColumn
pmTcaLspPeOutBytes1dCnt = _PmTcaLspPeOutBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 4),
    _PmTcaLspPeOutBytes1dCnt_Type()
)
pmTcaLspPeOutBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dCnt.setStatus("current")
_PmTcaLspPeOutBytes1dThreshold_Type = Counter64
_PmTcaLspPeOutBytes1dThreshold_Object = MibTableColumn
pmTcaLspPeOutBytes1dThreshold = _PmTcaLspPeOutBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 5),
    _PmTcaLspPeOutBytes1dThreshold_Type()
)
pmTcaLspPeOutBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dThreshold.setStatus("current")
_PmTcaLspPeOutBytes1dOccurTime_Type = DateAndTime
_PmTcaLspPeOutBytes1dOccurTime_Object = MibTableColumn
pmTcaLspPeOutBytes1dOccurTime = _PmTcaLspPeOutBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 103, 12, 1, 6),
    _PmTcaLspPeOutBytes1dOccurTime_Type()
)
pmTcaLspPeOutBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPeOutBytes1dOccurTime.setStatus("current")
_PmLspP_ObjectIdentity = ObjectIdentity
pmLspP = _PmLspP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104)
)
_PmLspPCurr15mTable_Object = MibTable
pmLspPCurr15mTable = _PmLspPCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1)
)
if mibBuilder.loadTexts:
    pmLspPCurr15mTable.setStatus("current")
_PmLspPCurr15mEntry_Object = MibTableRow
pmLspPCurr15mEntry = _PmLspPCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1)
)
pmLspPCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmLspPCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmLspPCurr15mEntry.setStatus("current")
_PmLspPCurr15mIndex_Type = Integer32
_PmLspPCurr15mIndex_Object = MibTableColumn
pmLspPCurr15mIndex = _PmLspPCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 1),
    _PmLspPCurr15mIndex_Type()
)
pmLspPCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPCurr15mIndex.setStatus("current")
_PmLspPCurr15mId_Type = OctetString
_PmLspPCurr15mId_Object = MibTableColumn
pmLspPCurr15mId = _PmLspPCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 2),
    _PmLspPCurr15mId_Type()
)
pmLspPCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mId.setStatus("current")


class _PmLspPCurr15mUnitType_Type(Integer32):
    """Custom type pmLspPCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPCurr15mUnitType_Type.__name__ = "Integer32"
_PmLspPCurr15mUnitType_Object = MibTableColumn
pmLspPCurr15mUnitType = _PmLspPCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 3),
    _PmLspPCurr15mUnitType_Type()
)
pmLspPCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mUnitType.setStatus("current")
_PmLspPCurr15mEastInPkts_Type = Counter64
_PmLspPCurr15mEastInPkts_Object = MibTableColumn
pmLspPCurr15mEastInPkts = _PmLspPCurr15mEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 4),
    _PmLspPCurr15mEastInPkts_Type()
)
pmLspPCurr15mEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mEastInPkts.setStatus("current")
_PmLspPCurr15mEastInBytes_Type = Counter64
_PmLspPCurr15mEastInBytes_Object = MibTableColumn
pmLspPCurr15mEastInBytes = _PmLspPCurr15mEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 5),
    _PmLspPCurr15mEastInBytes_Type()
)
pmLspPCurr15mEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mEastInBytes.setStatus("current")
_PmLspPCurr15mWestInPkts_Type = Counter64
_PmLspPCurr15mWestInPkts_Object = MibTableColumn
pmLspPCurr15mWestInPkts = _PmLspPCurr15mWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 6),
    _PmLspPCurr15mWestInPkts_Type()
)
pmLspPCurr15mWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mWestInPkts.setStatus("current")
_PmLspPCurr15mWestInBytes_Type = Counter64
_PmLspPCurr15mWestInBytes_Object = MibTableColumn
pmLspPCurr15mWestInBytes = _PmLspPCurr15mWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 7),
    _PmLspPCurr15mWestInBytes_Type()
)
pmLspPCurr15mWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mWestInBytes.setStatus("current")
_PmLspPCurr15mStartTime_Type = DateAndTime
_PmLspPCurr15mStartTime_Object = MibTableColumn
pmLspPCurr15mStartTime = _PmLspPCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 100),
    _PmLspPCurr15mStartTime_Type()
)
pmLspPCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mStartTime.setStatus("current")
_PmLspPCurr15mStopTime_Type = DateAndTime
_PmLspPCurr15mStopTime_Object = MibTableColumn
pmLspPCurr15mStopTime = _PmLspPCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 1, 1, 101),
    _PmLspPCurr15mStopTime_Type()
)
pmLspPCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr15mStopTime.setStatus("current")
_PmLspPPrev15mTable_Object = MibTable
pmLspPPrev15mTable = _PmLspPPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2)
)
if mibBuilder.loadTexts:
    pmLspPPrev15mTable.setStatus("current")
_PmLspPPrev15mEntry_Object = MibTableRow
pmLspPPrev15mEntry = _PmLspPPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1)
)
pmLspPPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmLspPPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmLspPPrev15mEntry.setStatus("current")
_PmLspPPrev15mIndex_Type = Integer32
_PmLspPPrev15mIndex_Object = MibTableColumn
pmLspPPrev15mIndex = _PmLspPPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 1),
    _PmLspPPrev15mIndex_Type()
)
pmLspPPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPPrev15mIndex.setStatus("current")
_PmLspPPrev15mId_Type = OctetString
_PmLspPPrev15mId_Object = MibTableColumn
pmLspPPrev15mId = _PmLspPPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 2),
    _PmLspPPrev15mId_Type()
)
pmLspPPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mId.setStatus("current")


class _PmLspPPrev15mUnitType_Type(Integer32):
    """Custom type pmLspPPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPPrev15mUnitType_Type.__name__ = "Integer32"
_PmLspPPrev15mUnitType_Object = MibTableColumn
pmLspPPrev15mUnitType = _PmLspPPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 3),
    _PmLspPPrev15mUnitType_Type()
)
pmLspPPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mUnitType.setStatus("current")
_PmLspPPrev15mEastInPkts_Type = Counter64
_PmLspPPrev15mEastInPkts_Object = MibTableColumn
pmLspPPrev15mEastInPkts = _PmLspPPrev15mEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 4),
    _PmLspPPrev15mEastInPkts_Type()
)
pmLspPPrev15mEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mEastInPkts.setStatus("current")
_PmLspPPrev15mEastInBytes_Type = Counter64
_PmLspPPrev15mEastInBytes_Object = MibTableColumn
pmLspPPrev15mEastInBytes = _PmLspPPrev15mEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 5),
    _PmLspPPrev15mEastInBytes_Type()
)
pmLspPPrev15mEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mEastInBytes.setStatus("current")
_PmLspPPrev15mWestInPkts_Type = Counter64
_PmLspPPrev15mWestInPkts_Object = MibTableColumn
pmLspPPrev15mWestInPkts = _PmLspPPrev15mWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 6),
    _PmLspPPrev15mWestInPkts_Type()
)
pmLspPPrev15mWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mWestInPkts.setStatus("current")
_PmLspPPrev15mWestInBytes_Type = Counter64
_PmLspPPrev15mWestInBytes_Object = MibTableColumn
pmLspPPrev15mWestInBytes = _PmLspPPrev15mWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 7),
    _PmLspPPrev15mWestInBytes_Type()
)
pmLspPPrev15mWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mWestInBytes.setStatus("current")
_PmLspPPrev15mStartTime_Type = DateAndTime
_PmLspPPrev15mStartTime_Object = MibTableColumn
pmLspPPrev15mStartTime = _PmLspPPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 100),
    _PmLspPPrev15mStartTime_Type()
)
pmLspPPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mStartTime.setStatus("current")
_PmLspPPrev15mStopTime_Type = DateAndTime
_PmLspPPrev15mStopTime_Object = MibTableColumn
pmLspPPrev15mStopTime = _PmLspPPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 2, 1, 101),
    _PmLspPPrev15mStopTime_Type()
)
pmLspPPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev15mStopTime.setStatus("current")
_PmLspPCurr1hTable_Object = MibTable
pmLspPCurr1hTable = _PmLspPCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3)
)
if mibBuilder.loadTexts:
    pmLspPCurr1hTable.setStatus("current")
_PmLspPCurr1hEntry_Object = MibTableRow
pmLspPCurr1hEntry = _PmLspPCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1)
)
pmLspPCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmLspPCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmLspPCurr1hEntry.setStatus("current")
_PmLspPCurr1hIndex_Type = Integer32
_PmLspPCurr1hIndex_Object = MibTableColumn
pmLspPCurr1hIndex = _PmLspPCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 1),
    _PmLspPCurr1hIndex_Type()
)
pmLspPCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPCurr1hIndex.setStatus("current")
_PmLspPCurr1hId_Type = OctetString
_PmLspPCurr1hId_Object = MibTableColumn
pmLspPCurr1hId = _PmLspPCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 2),
    _PmLspPCurr1hId_Type()
)
pmLspPCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hId.setStatus("current")


class _PmLspPCurr1hUnitType_Type(Integer32):
    """Custom type pmLspPCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPCurr1hUnitType_Type.__name__ = "Integer32"
_PmLspPCurr1hUnitType_Object = MibTableColumn
pmLspPCurr1hUnitType = _PmLspPCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 3),
    _PmLspPCurr1hUnitType_Type()
)
pmLspPCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hUnitType.setStatus("current")
_PmLspPCurr1hEastInPkts_Type = Counter64
_PmLspPCurr1hEastInPkts_Object = MibTableColumn
pmLspPCurr1hEastInPkts = _PmLspPCurr1hEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 4),
    _PmLspPCurr1hEastInPkts_Type()
)
pmLspPCurr1hEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hEastInPkts.setStatus("current")
_PmLspPCurr1hEastInBytes_Type = Counter64
_PmLspPCurr1hEastInBytes_Object = MibTableColumn
pmLspPCurr1hEastInBytes = _PmLspPCurr1hEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 5),
    _PmLspPCurr1hEastInBytes_Type()
)
pmLspPCurr1hEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hEastInBytes.setStatus("current")
_PmLspPCurr1hWestInPkts_Type = Counter64
_PmLspPCurr1hWestInPkts_Object = MibTableColumn
pmLspPCurr1hWestInPkts = _PmLspPCurr1hWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 6),
    _PmLspPCurr1hWestInPkts_Type()
)
pmLspPCurr1hWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hWestInPkts.setStatus("current")
_PmLspPCurr1hWestInBytes_Type = Counter64
_PmLspPCurr1hWestInBytes_Object = MibTableColumn
pmLspPCurr1hWestInBytes = _PmLspPCurr1hWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 7),
    _PmLspPCurr1hWestInBytes_Type()
)
pmLspPCurr1hWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hWestInBytes.setStatus("current")
_PmLspPCurr1hStartTime_Type = DateAndTime
_PmLspPCurr1hStartTime_Object = MibTableColumn
pmLspPCurr1hStartTime = _PmLspPCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 100),
    _PmLspPCurr1hStartTime_Type()
)
pmLspPCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hStartTime.setStatus("current")
_PmLspPCurr1hStopTime_Type = DateAndTime
_PmLspPCurr1hStopTime_Object = MibTableColumn
pmLspPCurr1hStopTime = _PmLspPCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 3, 1, 101),
    _PmLspPCurr1hStopTime_Type()
)
pmLspPCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1hStopTime.setStatus("current")
_PmLspPPrev1hTable_Object = MibTable
pmLspPPrev1hTable = _PmLspPPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4)
)
if mibBuilder.loadTexts:
    pmLspPPrev1hTable.setStatus("current")
_PmLspPPrev1hEntry_Object = MibTableRow
pmLspPPrev1hEntry = _PmLspPPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1)
)
pmLspPPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmLspPPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmLspPPrev1hEntry.setStatus("current")
_PmLspPPrev1hIndex_Type = Integer32
_PmLspPPrev1hIndex_Object = MibTableColumn
pmLspPPrev1hIndex = _PmLspPPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 1),
    _PmLspPPrev1hIndex_Type()
)
pmLspPPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPPrev1hIndex.setStatus("current")
_PmLspPPrev1hId_Type = OctetString
_PmLspPPrev1hId_Object = MibTableColumn
pmLspPPrev1hId = _PmLspPPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 2),
    _PmLspPPrev1hId_Type()
)
pmLspPPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hId.setStatus("current")


class _PmLspPPrev1hUnitType_Type(Integer32):
    """Custom type pmLspPPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPPrev1hUnitType_Type.__name__ = "Integer32"
_PmLspPPrev1hUnitType_Object = MibTableColumn
pmLspPPrev1hUnitType = _PmLspPPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 3),
    _PmLspPPrev1hUnitType_Type()
)
pmLspPPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hUnitType.setStatus("current")
_PmLspPPrev1hEastInPkts_Type = Counter64
_PmLspPPrev1hEastInPkts_Object = MibTableColumn
pmLspPPrev1hEastInPkts = _PmLspPPrev1hEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 4),
    _PmLspPPrev1hEastInPkts_Type()
)
pmLspPPrev1hEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hEastInPkts.setStatus("current")
_PmLspPPrev1hEastInBytes_Type = Counter64
_PmLspPPrev1hEastInBytes_Object = MibTableColumn
pmLspPPrev1hEastInBytes = _PmLspPPrev1hEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 5),
    _PmLspPPrev1hEastInBytes_Type()
)
pmLspPPrev1hEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hEastInBytes.setStatus("current")
_PmLspPPrev1hWestInPkts_Type = Counter64
_PmLspPPrev1hWestInPkts_Object = MibTableColumn
pmLspPPrev1hWestInPkts = _PmLspPPrev1hWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 6),
    _PmLspPPrev1hWestInPkts_Type()
)
pmLspPPrev1hWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hWestInPkts.setStatus("current")
_PmLspPPrev1hWestInBytes_Type = Counter64
_PmLspPPrev1hWestInBytes_Object = MibTableColumn
pmLspPPrev1hWestInBytes = _PmLspPPrev1hWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 7),
    _PmLspPPrev1hWestInBytes_Type()
)
pmLspPPrev1hWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hWestInBytes.setStatus("current")
_PmLspPPrev1hStartTime_Type = DateAndTime
_PmLspPPrev1hStartTime_Object = MibTableColumn
pmLspPPrev1hStartTime = _PmLspPPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 100),
    _PmLspPPrev1hStartTime_Type()
)
pmLspPPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hStartTime.setStatus("current")
_PmLspPPrev1hStopTime_Type = DateAndTime
_PmLspPPrev1hStopTime_Object = MibTableColumn
pmLspPPrev1hStopTime = _PmLspPPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 4, 1, 101),
    _PmLspPPrev1hStopTime_Type()
)
pmLspPPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1hStopTime.setStatus("current")
_PmLspPCurr1dTable_Object = MibTable
pmLspPCurr1dTable = _PmLspPCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5)
)
if mibBuilder.loadTexts:
    pmLspPCurr1dTable.setStatus("current")
_PmLspPCurr1dEntry_Object = MibTableRow
pmLspPCurr1dEntry = _PmLspPCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1)
)
pmLspPCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmLspPCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmLspPCurr1dEntry.setStatus("current")
_PmLspPCurr1dIndex_Type = Integer32
_PmLspPCurr1dIndex_Object = MibTableColumn
pmLspPCurr1dIndex = _PmLspPCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 1),
    _PmLspPCurr1dIndex_Type()
)
pmLspPCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPCurr1dIndex.setStatus("current")
_PmLspPCurr1dId_Type = OctetString
_PmLspPCurr1dId_Object = MibTableColumn
pmLspPCurr1dId = _PmLspPCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 2),
    _PmLspPCurr1dId_Type()
)
pmLspPCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dId.setStatus("current")


class _PmLspPCurr1dUnitType_Type(Integer32):
    """Custom type pmLspPCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPCurr1dUnitType_Type.__name__ = "Integer32"
_PmLspPCurr1dUnitType_Object = MibTableColumn
pmLspPCurr1dUnitType = _PmLspPCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 3),
    _PmLspPCurr1dUnitType_Type()
)
pmLspPCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dUnitType.setStatus("current")
_PmLspPCurr1dEastInPkts_Type = Counter64
_PmLspPCurr1dEastInPkts_Object = MibTableColumn
pmLspPCurr1dEastInPkts = _PmLspPCurr1dEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 4),
    _PmLspPCurr1dEastInPkts_Type()
)
pmLspPCurr1dEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dEastInPkts.setStatus("current")
_PmLspPCurr1dEastInBytes_Type = Counter64
_PmLspPCurr1dEastInBytes_Object = MibTableColumn
pmLspPCurr1dEastInBytes = _PmLspPCurr1dEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 5),
    _PmLspPCurr1dEastInBytes_Type()
)
pmLspPCurr1dEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dEastInBytes.setStatus("current")
_PmLspPCurr1dWestInPkts_Type = Counter64
_PmLspPCurr1dWestInPkts_Object = MibTableColumn
pmLspPCurr1dWestInPkts = _PmLspPCurr1dWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 6),
    _PmLspPCurr1dWestInPkts_Type()
)
pmLspPCurr1dWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dWestInPkts.setStatus("current")
_PmLspPCurr1dWestInBytes_Type = Counter64
_PmLspPCurr1dWestInBytes_Object = MibTableColumn
pmLspPCurr1dWestInBytes = _PmLspPCurr1dWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 7),
    _PmLspPCurr1dWestInBytes_Type()
)
pmLspPCurr1dWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dWestInBytes.setStatus("current")
_PmLspPCurr1dStartTime_Type = DateAndTime
_PmLspPCurr1dStartTime_Object = MibTableColumn
pmLspPCurr1dStartTime = _PmLspPCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 100),
    _PmLspPCurr1dStartTime_Type()
)
pmLspPCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dStartTime.setStatus("current")
_PmLspPCurr1dStopTime_Type = DateAndTime
_PmLspPCurr1dStopTime_Object = MibTableColumn
pmLspPCurr1dStopTime = _PmLspPCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 5, 1, 101),
    _PmLspPCurr1dStopTime_Type()
)
pmLspPCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPCurr1dStopTime.setStatus("current")
_PmLspPPrev1dTable_Object = MibTable
pmLspPPrev1dTable = _PmLspPPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6)
)
if mibBuilder.loadTexts:
    pmLspPPrev1dTable.setStatus("current")
_PmLspPPrev1dEntry_Object = MibTableRow
pmLspPPrev1dEntry = _PmLspPPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1)
)
pmLspPPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmLspPPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmLspPPrev1dEntry.setStatus("current")
_PmLspPPrev1dIndex_Type = Integer32
_PmLspPPrev1dIndex_Object = MibTableColumn
pmLspPPrev1dIndex = _PmLspPPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 1),
    _PmLspPPrev1dIndex_Type()
)
pmLspPPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmLspPPrev1dIndex.setStatus("current")
_PmLspPPrev1dId_Type = OctetString
_PmLspPPrev1dId_Object = MibTableColumn
pmLspPPrev1dId = _PmLspPPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 2),
    _PmLspPPrev1dId_Type()
)
pmLspPPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dId.setStatus("current")


class _PmLspPPrev1dUnitType_Type(Integer32):
    """Custom type pmLspPPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmLspPPrev1dUnitType_Type.__name__ = "Integer32"
_PmLspPPrev1dUnitType_Object = MibTableColumn
pmLspPPrev1dUnitType = _PmLspPPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 3),
    _PmLspPPrev1dUnitType_Type()
)
pmLspPPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dUnitType.setStatus("current")
_PmLspPPrev1dEastInPkts_Type = Counter64
_PmLspPPrev1dEastInPkts_Object = MibTableColumn
pmLspPPrev1dEastInPkts = _PmLspPPrev1dEastInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 4),
    _PmLspPPrev1dEastInPkts_Type()
)
pmLspPPrev1dEastInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dEastInPkts.setStatus("current")
_PmLspPPrev1dEastInBytes_Type = Counter64
_PmLspPPrev1dEastInBytes_Object = MibTableColumn
pmLspPPrev1dEastInBytes = _PmLspPPrev1dEastInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 5),
    _PmLspPPrev1dEastInBytes_Type()
)
pmLspPPrev1dEastInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dEastInBytes.setStatus("current")
_PmLspPPrev1dWestInPkts_Type = Counter64
_PmLspPPrev1dWestInPkts_Object = MibTableColumn
pmLspPPrev1dWestInPkts = _PmLspPPrev1dWestInPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 6),
    _PmLspPPrev1dWestInPkts_Type()
)
pmLspPPrev1dWestInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dWestInPkts.setStatus("current")
_PmLspPPrev1dWestInBytes_Type = Counter64
_PmLspPPrev1dWestInBytes_Object = MibTableColumn
pmLspPPrev1dWestInBytes = _PmLspPPrev1dWestInBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 7),
    _PmLspPPrev1dWestInBytes_Type()
)
pmLspPPrev1dWestInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dWestInBytes.setStatus("current")
_PmLspPPrev1dStartTime_Type = DateAndTime
_PmLspPPrev1dStartTime_Object = MibTableColumn
pmLspPPrev1dStartTime = _PmLspPPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 100),
    _PmLspPPrev1dStartTime_Type()
)
pmLspPPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dStartTime.setStatus("current")
_PmLspPPrev1dStopTime_Type = DateAndTime
_PmLspPPrev1dStopTime_Object = MibTableColumn
pmLspPPrev1dStopTime = _PmLspPPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 6, 1, 101),
    _PmLspPPrev1dStopTime_Type()
)
pmLspPPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmLspPPrev1dStopTime.setStatus("current")
_PmTcaLspPEastInPkts15mTable_Object = MibTable
pmTcaLspPEastInPkts15mTable = _PmTcaLspPEastInPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mTable.setStatus("current")
_PmTcaLspPEastInPkts15mEntry_Object = MibTableRow
pmTcaLspPEastInPkts15mEntry = _PmTcaLspPEastInPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1)
)
pmTcaLspPEastInPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mEntry.setStatus("current")
_PmTcaLspPEastInPkts15mIndex_Type = Integer32
_PmTcaLspPEastInPkts15mIndex_Object = MibTableColumn
pmTcaLspPEastInPkts15mIndex = _PmTcaLspPEastInPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 1),
    _PmTcaLspPEastInPkts15mIndex_Type()
)
pmTcaLspPEastInPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mIndex.setStatus("current")
_PmTcaLspPEastInPkts15mId_Type = OctetString
_PmTcaLspPEastInPkts15mId_Object = MibTableColumn
pmTcaLspPEastInPkts15mId = _PmTcaLspPEastInPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 2),
    _PmTcaLspPEastInPkts15mId_Type()
)
pmTcaLspPEastInPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mId.setStatus("current")


class _PmTcaLspPEastInPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInPkts15mUnitType_Object = MibTableColumn
pmTcaLspPEastInPkts15mUnitType = _PmTcaLspPEastInPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 3),
    _PmTcaLspPEastInPkts15mUnitType_Type()
)
pmTcaLspPEastInPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mUnitType.setStatus("current")
_PmTcaLspPEastInPkts15mCnt_Type = Counter64
_PmTcaLspPEastInPkts15mCnt_Object = MibTableColumn
pmTcaLspPEastInPkts15mCnt = _PmTcaLspPEastInPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 4),
    _PmTcaLspPEastInPkts15mCnt_Type()
)
pmTcaLspPEastInPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mCnt.setStatus("current")
_PmTcaLspPEastInPkts15mThreshold_Type = Counter64
_PmTcaLspPEastInPkts15mThreshold_Object = MibTableColumn
pmTcaLspPEastInPkts15mThreshold = _PmTcaLspPEastInPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 5),
    _PmTcaLspPEastInPkts15mThreshold_Type()
)
pmTcaLspPEastInPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mThreshold.setStatus("current")
_PmTcaLspPEastInPkts15mOccurTime_Type = DateAndTime
_PmTcaLspPEastInPkts15mOccurTime_Object = MibTableColumn
pmTcaLspPEastInPkts15mOccurTime = _PmTcaLspPEastInPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 7, 1, 6),
    _PmTcaLspPEastInPkts15mOccurTime_Type()
)
pmTcaLspPEastInPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts15mOccurTime.setStatus("current")
_PmTcaLspPEastInPkts1hTable_Object = MibTable
pmTcaLspPEastInPkts1hTable = _PmTcaLspPEastInPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hTable.setStatus("current")
_PmTcaLspPEastInPkts1hEntry_Object = MibTableRow
pmTcaLspPEastInPkts1hEntry = _PmTcaLspPEastInPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1)
)
pmTcaLspPEastInPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hEntry.setStatus("current")
_PmTcaLspPEastInPkts1hIndex_Type = Integer32
_PmTcaLspPEastInPkts1hIndex_Object = MibTableColumn
pmTcaLspPEastInPkts1hIndex = _PmTcaLspPEastInPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 1),
    _PmTcaLspPEastInPkts1hIndex_Type()
)
pmTcaLspPEastInPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hIndex.setStatus("current")
_PmTcaLspPEastInPkts1hId_Type = OctetString
_PmTcaLspPEastInPkts1hId_Object = MibTableColumn
pmTcaLspPEastInPkts1hId = _PmTcaLspPEastInPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 2),
    _PmTcaLspPEastInPkts1hId_Type()
)
pmTcaLspPEastInPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hId.setStatus("current")


class _PmTcaLspPEastInPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInPkts1hUnitType_Object = MibTableColumn
pmTcaLspPEastInPkts1hUnitType = _PmTcaLspPEastInPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 3),
    _PmTcaLspPEastInPkts1hUnitType_Type()
)
pmTcaLspPEastInPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hUnitType.setStatus("current")
_PmTcaLspPEastInPkts1hCnt_Type = Counter64
_PmTcaLspPEastInPkts1hCnt_Object = MibTableColumn
pmTcaLspPEastInPkts1hCnt = _PmTcaLspPEastInPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 4),
    _PmTcaLspPEastInPkts1hCnt_Type()
)
pmTcaLspPEastInPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hCnt.setStatus("current")
_PmTcaLspPEastInPkts1hThreshold_Type = Counter64
_PmTcaLspPEastInPkts1hThreshold_Object = MibTableColumn
pmTcaLspPEastInPkts1hThreshold = _PmTcaLspPEastInPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 5),
    _PmTcaLspPEastInPkts1hThreshold_Type()
)
pmTcaLspPEastInPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hThreshold.setStatus("current")
_PmTcaLspPEastInPkts1hOccurTime_Type = DateAndTime
_PmTcaLspPEastInPkts1hOccurTime_Object = MibTableColumn
pmTcaLspPEastInPkts1hOccurTime = _PmTcaLspPEastInPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 8, 1, 6),
    _PmTcaLspPEastInPkts1hOccurTime_Type()
)
pmTcaLspPEastInPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1hOccurTime.setStatus("current")
_PmTcaLspPEastInPkts1dTable_Object = MibTable
pmTcaLspPEastInPkts1dTable = _PmTcaLspPEastInPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dTable.setStatus("current")
_PmTcaLspPEastInPkts1dEntry_Object = MibTableRow
pmTcaLspPEastInPkts1dEntry = _PmTcaLspPEastInPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1)
)
pmTcaLspPEastInPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dEntry.setStatus("current")
_PmTcaLspPEastInPkts1dIndex_Type = Integer32
_PmTcaLspPEastInPkts1dIndex_Object = MibTableColumn
pmTcaLspPEastInPkts1dIndex = _PmTcaLspPEastInPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 1),
    _PmTcaLspPEastInPkts1dIndex_Type()
)
pmTcaLspPEastInPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dIndex.setStatus("current")
_PmTcaLspPEastInPkts1dId_Type = OctetString
_PmTcaLspPEastInPkts1dId_Object = MibTableColumn
pmTcaLspPEastInPkts1dId = _PmTcaLspPEastInPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 2),
    _PmTcaLspPEastInPkts1dId_Type()
)
pmTcaLspPEastInPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dId.setStatus("current")


class _PmTcaLspPEastInPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInPkts1dUnitType_Object = MibTableColumn
pmTcaLspPEastInPkts1dUnitType = _PmTcaLspPEastInPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 3),
    _PmTcaLspPEastInPkts1dUnitType_Type()
)
pmTcaLspPEastInPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dUnitType.setStatus("current")
_PmTcaLspPEastInPkts1dCnt_Type = Counter64
_PmTcaLspPEastInPkts1dCnt_Object = MibTableColumn
pmTcaLspPEastInPkts1dCnt = _PmTcaLspPEastInPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 4),
    _PmTcaLspPEastInPkts1dCnt_Type()
)
pmTcaLspPEastInPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dCnt.setStatus("current")
_PmTcaLspPEastInPkts1dThreshold_Type = Counter64
_PmTcaLspPEastInPkts1dThreshold_Object = MibTableColumn
pmTcaLspPEastInPkts1dThreshold = _PmTcaLspPEastInPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 5),
    _PmTcaLspPEastInPkts1dThreshold_Type()
)
pmTcaLspPEastInPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dThreshold.setStatus("current")
_PmTcaLspPEastInPkts1dOccurTime_Type = DateAndTime
_PmTcaLspPEastInPkts1dOccurTime_Object = MibTableColumn
pmTcaLspPEastInPkts1dOccurTime = _PmTcaLspPEastInPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 9, 1, 6),
    _PmTcaLspPEastInPkts1dOccurTime_Type()
)
pmTcaLspPEastInPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInPkts1dOccurTime.setStatus("current")
_PmTcaLspPEastInBytes15mTable_Object = MibTable
pmTcaLspPEastInBytes15mTable = _PmTcaLspPEastInBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mTable.setStatus("current")
_PmTcaLspPEastInBytes15mEntry_Object = MibTableRow
pmTcaLspPEastInBytes15mEntry = _PmTcaLspPEastInBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1)
)
pmTcaLspPEastInBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mEntry.setStatus("current")
_PmTcaLspPEastInBytes15mIndex_Type = Integer32
_PmTcaLspPEastInBytes15mIndex_Object = MibTableColumn
pmTcaLspPEastInBytes15mIndex = _PmTcaLspPEastInBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 1),
    _PmTcaLspPEastInBytes15mIndex_Type()
)
pmTcaLspPEastInBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mIndex.setStatus("current")
_PmTcaLspPEastInBytes15mId_Type = OctetString
_PmTcaLspPEastInBytes15mId_Object = MibTableColumn
pmTcaLspPEastInBytes15mId = _PmTcaLspPEastInBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 2),
    _PmTcaLspPEastInBytes15mId_Type()
)
pmTcaLspPEastInBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mId.setStatus("current")


class _PmTcaLspPEastInBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInBytes15mUnitType_Object = MibTableColumn
pmTcaLspPEastInBytes15mUnitType = _PmTcaLspPEastInBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 3),
    _PmTcaLspPEastInBytes15mUnitType_Type()
)
pmTcaLspPEastInBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mUnitType.setStatus("current")
_PmTcaLspPEastInBytes15mCnt_Type = Counter64
_PmTcaLspPEastInBytes15mCnt_Object = MibTableColumn
pmTcaLspPEastInBytes15mCnt = _PmTcaLspPEastInBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 4),
    _PmTcaLspPEastInBytes15mCnt_Type()
)
pmTcaLspPEastInBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mCnt.setStatus("current")
_PmTcaLspPEastInBytes15mThreshold_Type = Counter64
_PmTcaLspPEastInBytes15mThreshold_Object = MibTableColumn
pmTcaLspPEastInBytes15mThreshold = _PmTcaLspPEastInBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 5),
    _PmTcaLspPEastInBytes15mThreshold_Type()
)
pmTcaLspPEastInBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mThreshold.setStatus("current")
_PmTcaLspPEastInBytes15mOccurTime_Type = DateAndTime
_PmTcaLspPEastInBytes15mOccurTime_Object = MibTableColumn
pmTcaLspPEastInBytes15mOccurTime = _PmTcaLspPEastInBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 10, 1, 6),
    _PmTcaLspPEastInBytes15mOccurTime_Type()
)
pmTcaLspPEastInBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes15mOccurTime.setStatus("current")
_PmTcaLspPEastInBytes1hTable_Object = MibTable
pmTcaLspPEastInBytes1hTable = _PmTcaLspPEastInBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hTable.setStatus("current")
_PmTcaLspPEastInBytes1hEntry_Object = MibTableRow
pmTcaLspPEastInBytes1hEntry = _PmTcaLspPEastInBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1)
)
pmTcaLspPEastInBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hEntry.setStatus("current")
_PmTcaLspPEastInBytes1hIndex_Type = Integer32
_PmTcaLspPEastInBytes1hIndex_Object = MibTableColumn
pmTcaLspPEastInBytes1hIndex = _PmTcaLspPEastInBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 1),
    _PmTcaLspPEastInBytes1hIndex_Type()
)
pmTcaLspPEastInBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hIndex.setStatus("current")
_PmTcaLspPEastInBytes1hId_Type = OctetString
_PmTcaLspPEastInBytes1hId_Object = MibTableColumn
pmTcaLspPEastInBytes1hId = _PmTcaLspPEastInBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 2),
    _PmTcaLspPEastInBytes1hId_Type()
)
pmTcaLspPEastInBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hId.setStatus("current")


class _PmTcaLspPEastInBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInBytes1hUnitType_Object = MibTableColumn
pmTcaLspPEastInBytes1hUnitType = _PmTcaLspPEastInBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 3),
    _PmTcaLspPEastInBytes1hUnitType_Type()
)
pmTcaLspPEastInBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hUnitType.setStatus("current")
_PmTcaLspPEastInBytes1hCnt_Type = Counter64
_PmTcaLspPEastInBytes1hCnt_Object = MibTableColumn
pmTcaLspPEastInBytes1hCnt = _PmTcaLspPEastInBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 4),
    _PmTcaLspPEastInBytes1hCnt_Type()
)
pmTcaLspPEastInBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hCnt.setStatus("current")
_PmTcaLspPEastInBytes1hThreshold_Type = Counter64
_PmTcaLspPEastInBytes1hThreshold_Object = MibTableColumn
pmTcaLspPEastInBytes1hThreshold = _PmTcaLspPEastInBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 5),
    _PmTcaLspPEastInBytes1hThreshold_Type()
)
pmTcaLspPEastInBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hThreshold.setStatus("current")
_PmTcaLspPEastInBytes1hOccurTime_Type = DateAndTime
_PmTcaLspPEastInBytes1hOccurTime_Object = MibTableColumn
pmTcaLspPEastInBytes1hOccurTime = _PmTcaLspPEastInBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 11, 1, 6),
    _PmTcaLspPEastInBytes1hOccurTime_Type()
)
pmTcaLspPEastInBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1hOccurTime.setStatus("current")
_PmTcaLspPEastInBytes1dTable_Object = MibTable
pmTcaLspPEastInBytes1dTable = _PmTcaLspPEastInBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12)
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dTable.setStatus("current")
_PmTcaLspPEastInBytes1dEntry_Object = MibTableRow
pmTcaLspPEastInBytes1dEntry = _PmTcaLspPEastInBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1)
)
pmTcaLspPEastInBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPEastInBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dEntry.setStatus("current")
_PmTcaLspPEastInBytes1dIndex_Type = Integer32
_PmTcaLspPEastInBytes1dIndex_Object = MibTableColumn
pmTcaLspPEastInBytes1dIndex = _PmTcaLspPEastInBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 1),
    _PmTcaLspPEastInBytes1dIndex_Type()
)
pmTcaLspPEastInBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dIndex.setStatus("current")
_PmTcaLspPEastInBytes1dId_Type = OctetString
_PmTcaLspPEastInBytes1dId_Object = MibTableColumn
pmTcaLspPEastInBytes1dId = _PmTcaLspPEastInBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 2),
    _PmTcaLspPEastInBytes1dId_Type()
)
pmTcaLspPEastInBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dId.setStatus("current")


class _PmTcaLspPEastInBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPEastInBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPEastInBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPEastInBytes1dUnitType_Object = MibTableColumn
pmTcaLspPEastInBytes1dUnitType = _PmTcaLspPEastInBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 3),
    _PmTcaLspPEastInBytes1dUnitType_Type()
)
pmTcaLspPEastInBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dUnitType.setStatus("current")
_PmTcaLspPEastInBytes1dCnt_Type = Counter64
_PmTcaLspPEastInBytes1dCnt_Object = MibTableColumn
pmTcaLspPEastInBytes1dCnt = _PmTcaLspPEastInBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 4),
    _PmTcaLspPEastInBytes1dCnt_Type()
)
pmTcaLspPEastInBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dCnt.setStatus("current")
_PmTcaLspPEastInBytes1dThreshold_Type = Counter64
_PmTcaLspPEastInBytes1dThreshold_Object = MibTableColumn
pmTcaLspPEastInBytes1dThreshold = _PmTcaLspPEastInBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 5),
    _PmTcaLspPEastInBytes1dThreshold_Type()
)
pmTcaLspPEastInBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dThreshold.setStatus("current")
_PmTcaLspPEastInBytes1dOccurTime_Type = DateAndTime
_PmTcaLspPEastInBytes1dOccurTime_Object = MibTableColumn
pmTcaLspPEastInBytes1dOccurTime = _PmTcaLspPEastInBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 12, 1, 6),
    _PmTcaLspPEastInBytes1dOccurTime_Type()
)
pmTcaLspPEastInBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPEastInBytes1dOccurTime.setStatus("current")
_PmTcaLspPWestInPkts15mTable_Object = MibTable
pmTcaLspPWestInPkts15mTable = _PmTcaLspPWestInPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mTable.setStatus("current")
_PmTcaLspPWestInPkts15mEntry_Object = MibTableRow
pmTcaLspPWestInPkts15mEntry = _PmTcaLspPWestInPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1)
)
pmTcaLspPWestInPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mEntry.setStatus("current")
_PmTcaLspPWestInPkts15mIndex_Type = Integer32
_PmTcaLspPWestInPkts15mIndex_Object = MibTableColumn
pmTcaLspPWestInPkts15mIndex = _PmTcaLspPWestInPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 1),
    _PmTcaLspPWestInPkts15mIndex_Type()
)
pmTcaLspPWestInPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mIndex.setStatus("current")
_PmTcaLspPWestInPkts15mId_Type = OctetString
_PmTcaLspPWestInPkts15mId_Object = MibTableColumn
pmTcaLspPWestInPkts15mId = _PmTcaLspPWestInPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 2),
    _PmTcaLspPWestInPkts15mId_Type()
)
pmTcaLspPWestInPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mId.setStatus("current")


class _PmTcaLspPWestInPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInPkts15mUnitType_Object = MibTableColumn
pmTcaLspPWestInPkts15mUnitType = _PmTcaLspPWestInPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 3),
    _PmTcaLspPWestInPkts15mUnitType_Type()
)
pmTcaLspPWestInPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mUnitType.setStatus("current")
_PmTcaLspPWestInPkts15mCnt_Type = Counter64
_PmTcaLspPWestInPkts15mCnt_Object = MibTableColumn
pmTcaLspPWestInPkts15mCnt = _PmTcaLspPWestInPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 4),
    _PmTcaLspPWestInPkts15mCnt_Type()
)
pmTcaLspPWestInPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mCnt.setStatus("current")
_PmTcaLspPWestInPkts15mThreshold_Type = Counter64
_PmTcaLspPWestInPkts15mThreshold_Object = MibTableColumn
pmTcaLspPWestInPkts15mThreshold = _PmTcaLspPWestInPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 5),
    _PmTcaLspPWestInPkts15mThreshold_Type()
)
pmTcaLspPWestInPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mThreshold.setStatus("current")
_PmTcaLspPWestInPkts15mOccurTime_Type = DateAndTime
_PmTcaLspPWestInPkts15mOccurTime_Object = MibTableColumn
pmTcaLspPWestInPkts15mOccurTime = _PmTcaLspPWestInPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 13, 1, 6),
    _PmTcaLspPWestInPkts15mOccurTime_Type()
)
pmTcaLspPWestInPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts15mOccurTime.setStatus("current")
_PmTcaLspPWestInPkts1hTable_Object = MibTable
pmTcaLspPWestInPkts1hTable = _PmTcaLspPWestInPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hTable.setStatus("current")
_PmTcaLspPWestInPkts1hEntry_Object = MibTableRow
pmTcaLspPWestInPkts1hEntry = _PmTcaLspPWestInPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1)
)
pmTcaLspPWestInPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hEntry.setStatus("current")
_PmTcaLspPWestInPkts1hIndex_Type = Integer32
_PmTcaLspPWestInPkts1hIndex_Object = MibTableColumn
pmTcaLspPWestInPkts1hIndex = _PmTcaLspPWestInPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 1),
    _PmTcaLspPWestInPkts1hIndex_Type()
)
pmTcaLspPWestInPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hIndex.setStatus("current")
_PmTcaLspPWestInPkts1hId_Type = OctetString
_PmTcaLspPWestInPkts1hId_Object = MibTableColumn
pmTcaLspPWestInPkts1hId = _PmTcaLspPWestInPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 2),
    _PmTcaLspPWestInPkts1hId_Type()
)
pmTcaLspPWestInPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hId.setStatus("current")


class _PmTcaLspPWestInPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInPkts1hUnitType_Object = MibTableColumn
pmTcaLspPWestInPkts1hUnitType = _PmTcaLspPWestInPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 3),
    _PmTcaLspPWestInPkts1hUnitType_Type()
)
pmTcaLspPWestInPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hUnitType.setStatus("current")
_PmTcaLspPWestInPkts1hCnt_Type = Counter64
_PmTcaLspPWestInPkts1hCnt_Object = MibTableColumn
pmTcaLspPWestInPkts1hCnt = _PmTcaLspPWestInPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 4),
    _PmTcaLspPWestInPkts1hCnt_Type()
)
pmTcaLspPWestInPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hCnt.setStatus("current")
_PmTcaLspPWestInPkts1hThreshold_Type = Counter64
_PmTcaLspPWestInPkts1hThreshold_Object = MibTableColumn
pmTcaLspPWestInPkts1hThreshold = _PmTcaLspPWestInPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 5),
    _PmTcaLspPWestInPkts1hThreshold_Type()
)
pmTcaLspPWestInPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hThreshold.setStatus("current")
_PmTcaLspPWestInPkts1hOccurTime_Type = DateAndTime
_PmTcaLspPWestInPkts1hOccurTime_Object = MibTableColumn
pmTcaLspPWestInPkts1hOccurTime = _PmTcaLspPWestInPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 14, 1, 6),
    _PmTcaLspPWestInPkts1hOccurTime_Type()
)
pmTcaLspPWestInPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1hOccurTime.setStatus("current")
_PmTcaLspPWestInPkts1dTable_Object = MibTable
pmTcaLspPWestInPkts1dTable = _PmTcaLspPWestInPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dTable.setStatus("current")
_PmTcaLspPWestInPkts1dEntry_Object = MibTableRow
pmTcaLspPWestInPkts1dEntry = _PmTcaLspPWestInPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1)
)
pmTcaLspPWestInPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dEntry.setStatus("current")
_PmTcaLspPWestInPkts1dIndex_Type = Integer32
_PmTcaLspPWestInPkts1dIndex_Object = MibTableColumn
pmTcaLspPWestInPkts1dIndex = _PmTcaLspPWestInPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 1),
    _PmTcaLspPWestInPkts1dIndex_Type()
)
pmTcaLspPWestInPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dIndex.setStatus("current")
_PmTcaLspPWestInPkts1dId_Type = OctetString
_PmTcaLspPWestInPkts1dId_Object = MibTableColumn
pmTcaLspPWestInPkts1dId = _PmTcaLspPWestInPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 2),
    _PmTcaLspPWestInPkts1dId_Type()
)
pmTcaLspPWestInPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dId.setStatus("current")


class _PmTcaLspPWestInPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInPkts1dUnitType_Object = MibTableColumn
pmTcaLspPWestInPkts1dUnitType = _PmTcaLspPWestInPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 3),
    _PmTcaLspPWestInPkts1dUnitType_Type()
)
pmTcaLspPWestInPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dUnitType.setStatus("current")
_PmTcaLspPWestInPkts1dCnt_Type = Counter64
_PmTcaLspPWestInPkts1dCnt_Object = MibTableColumn
pmTcaLspPWestInPkts1dCnt = _PmTcaLspPWestInPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 4),
    _PmTcaLspPWestInPkts1dCnt_Type()
)
pmTcaLspPWestInPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dCnt.setStatus("current")
_PmTcaLspPWestInPkts1dThreshold_Type = Counter64
_PmTcaLspPWestInPkts1dThreshold_Object = MibTableColumn
pmTcaLspPWestInPkts1dThreshold = _PmTcaLspPWestInPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 5),
    _PmTcaLspPWestInPkts1dThreshold_Type()
)
pmTcaLspPWestInPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dThreshold.setStatus("current")
_PmTcaLspPWestInPkts1dOccurTime_Type = DateAndTime
_PmTcaLspPWestInPkts1dOccurTime_Object = MibTableColumn
pmTcaLspPWestInPkts1dOccurTime = _PmTcaLspPWestInPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 15, 1, 6),
    _PmTcaLspPWestInPkts1dOccurTime_Type()
)
pmTcaLspPWestInPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInPkts1dOccurTime.setStatus("current")
_PmTcaLspPWestInBytes15mTable_Object = MibTable
pmTcaLspPWestInBytes15mTable = _PmTcaLspPWestInBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mTable.setStatus("current")
_PmTcaLspPWestInBytes15mEntry_Object = MibTableRow
pmTcaLspPWestInBytes15mEntry = _PmTcaLspPWestInBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1)
)
pmTcaLspPWestInBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mEntry.setStatus("current")
_PmTcaLspPWestInBytes15mIndex_Type = Integer32
_PmTcaLspPWestInBytes15mIndex_Object = MibTableColumn
pmTcaLspPWestInBytes15mIndex = _PmTcaLspPWestInBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 1),
    _PmTcaLspPWestInBytes15mIndex_Type()
)
pmTcaLspPWestInBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mIndex.setStatus("current")
_PmTcaLspPWestInBytes15mId_Type = OctetString
_PmTcaLspPWestInBytes15mId_Object = MibTableColumn
pmTcaLspPWestInBytes15mId = _PmTcaLspPWestInBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 2),
    _PmTcaLspPWestInBytes15mId_Type()
)
pmTcaLspPWestInBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mId.setStatus("current")


class _PmTcaLspPWestInBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInBytes15mUnitType_Object = MibTableColumn
pmTcaLspPWestInBytes15mUnitType = _PmTcaLspPWestInBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 3),
    _PmTcaLspPWestInBytes15mUnitType_Type()
)
pmTcaLspPWestInBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mUnitType.setStatus("current")
_PmTcaLspPWestInBytes15mCnt_Type = Counter64
_PmTcaLspPWestInBytes15mCnt_Object = MibTableColumn
pmTcaLspPWestInBytes15mCnt = _PmTcaLspPWestInBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 4),
    _PmTcaLspPWestInBytes15mCnt_Type()
)
pmTcaLspPWestInBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mCnt.setStatus("current")
_PmTcaLspPWestInBytes15mThreshold_Type = Counter64
_PmTcaLspPWestInBytes15mThreshold_Object = MibTableColumn
pmTcaLspPWestInBytes15mThreshold = _PmTcaLspPWestInBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 5),
    _PmTcaLspPWestInBytes15mThreshold_Type()
)
pmTcaLspPWestInBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mThreshold.setStatus("current")
_PmTcaLspPWestInBytes15mOccurTime_Type = DateAndTime
_PmTcaLspPWestInBytes15mOccurTime_Object = MibTableColumn
pmTcaLspPWestInBytes15mOccurTime = _PmTcaLspPWestInBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 16, 1, 6),
    _PmTcaLspPWestInBytes15mOccurTime_Type()
)
pmTcaLspPWestInBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes15mOccurTime.setStatus("current")
_PmTcaLspPWestInBytes1hTable_Object = MibTable
pmTcaLspPWestInBytes1hTable = _PmTcaLspPWestInBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hTable.setStatus("current")
_PmTcaLspPWestInBytes1hEntry_Object = MibTableRow
pmTcaLspPWestInBytes1hEntry = _PmTcaLspPWestInBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1)
)
pmTcaLspPWestInBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hEntry.setStatus("current")
_PmTcaLspPWestInBytes1hIndex_Type = Integer32
_PmTcaLspPWestInBytes1hIndex_Object = MibTableColumn
pmTcaLspPWestInBytes1hIndex = _PmTcaLspPWestInBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 1),
    _PmTcaLspPWestInBytes1hIndex_Type()
)
pmTcaLspPWestInBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hIndex.setStatus("current")
_PmTcaLspPWestInBytes1hId_Type = OctetString
_PmTcaLspPWestInBytes1hId_Object = MibTableColumn
pmTcaLspPWestInBytes1hId = _PmTcaLspPWestInBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 2),
    _PmTcaLspPWestInBytes1hId_Type()
)
pmTcaLspPWestInBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hId.setStatus("current")


class _PmTcaLspPWestInBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInBytes1hUnitType_Object = MibTableColumn
pmTcaLspPWestInBytes1hUnitType = _PmTcaLspPWestInBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 3),
    _PmTcaLspPWestInBytes1hUnitType_Type()
)
pmTcaLspPWestInBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hUnitType.setStatus("current")
_PmTcaLspPWestInBytes1hCnt_Type = Counter64
_PmTcaLspPWestInBytes1hCnt_Object = MibTableColumn
pmTcaLspPWestInBytes1hCnt = _PmTcaLspPWestInBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 4),
    _PmTcaLspPWestInBytes1hCnt_Type()
)
pmTcaLspPWestInBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hCnt.setStatus("current")
_PmTcaLspPWestInBytes1hThreshold_Type = Counter64
_PmTcaLspPWestInBytes1hThreshold_Object = MibTableColumn
pmTcaLspPWestInBytes1hThreshold = _PmTcaLspPWestInBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 5),
    _PmTcaLspPWestInBytes1hThreshold_Type()
)
pmTcaLspPWestInBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hThreshold.setStatus("current")
_PmTcaLspPWestInBytes1hOccurTime_Type = DateAndTime
_PmTcaLspPWestInBytes1hOccurTime_Object = MibTableColumn
pmTcaLspPWestInBytes1hOccurTime = _PmTcaLspPWestInBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 17, 1, 6),
    _PmTcaLspPWestInBytes1hOccurTime_Type()
)
pmTcaLspPWestInBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1hOccurTime.setStatus("current")
_PmTcaLspPWestInBytes1dTable_Object = MibTable
pmTcaLspPWestInBytes1dTable = _PmTcaLspPWestInBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18)
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dTable.setStatus("current")
_PmTcaLspPWestInBytes1dEntry_Object = MibTableRow
pmTcaLspPWestInBytes1dEntry = _PmTcaLspPWestInBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1)
)
pmTcaLspPWestInBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaLspPWestInBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dEntry.setStatus("current")
_PmTcaLspPWestInBytes1dIndex_Type = Integer32
_PmTcaLspPWestInBytes1dIndex_Object = MibTableColumn
pmTcaLspPWestInBytes1dIndex = _PmTcaLspPWestInBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 1),
    _PmTcaLspPWestInBytes1dIndex_Type()
)
pmTcaLspPWestInBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dIndex.setStatus("current")
_PmTcaLspPWestInBytes1dId_Type = OctetString
_PmTcaLspPWestInBytes1dId_Object = MibTableColumn
pmTcaLspPWestInBytes1dId = _PmTcaLspPWestInBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 2),
    _PmTcaLspPWestInBytes1dId_Type()
)
pmTcaLspPWestInBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dId.setStatus("current")


class _PmTcaLspPWestInBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaLspPWestInBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaLspPWestInBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaLspPWestInBytes1dUnitType_Object = MibTableColumn
pmTcaLspPWestInBytes1dUnitType = _PmTcaLspPWestInBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 3),
    _PmTcaLspPWestInBytes1dUnitType_Type()
)
pmTcaLspPWestInBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dUnitType.setStatus("current")
_PmTcaLspPWestInBytes1dCnt_Type = Counter64
_PmTcaLspPWestInBytes1dCnt_Object = MibTableColumn
pmTcaLspPWestInBytes1dCnt = _PmTcaLspPWestInBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 4),
    _PmTcaLspPWestInBytes1dCnt_Type()
)
pmTcaLspPWestInBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dCnt.setStatus("current")
_PmTcaLspPWestInBytes1dThreshold_Type = Counter64
_PmTcaLspPWestInBytes1dThreshold_Object = MibTableColumn
pmTcaLspPWestInBytes1dThreshold = _PmTcaLspPWestInBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 5),
    _PmTcaLspPWestInBytes1dThreshold_Type()
)
pmTcaLspPWestInBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dThreshold.setStatus("current")
_PmTcaLspPWestInBytes1dOccurTime_Type = DateAndTime
_PmTcaLspPWestInBytes1dOccurTime_Object = MibTableColumn
pmTcaLspPWestInBytes1dOccurTime = _PmTcaLspPWestInBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 104, 18, 1, 6),
    _PmTcaLspPWestInBytes1dOccurTime_Type()
)
pmTcaLspPWestInBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaLspPWestInBytes1dOccurTime.setStatus("current")
_PmVpws_ObjectIdentity = ObjectIdentity
pmVpws = _PmVpws_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105)
)
_PmVpwsCurr15mTable_Object = MibTable
pmVpwsCurr15mTable = _PmVpwsCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1)
)
if mibBuilder.loadTexts:
    pmVpwsCurr15mTable.setStatus("current")
_PmVpwsCurr15mEntry_Object = MibTableRow
pmVpwsCurr15mEntry = _PmVpwsCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1)
)
pmVpwsCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsCurr15mEntry.setStatus("current")
_PmVpwsCurr15mIndex_Type = Integer32
_PmVpwsCurr15mIndex_Object = MibTableColumn
pmVpwsCurr15mIndex = _PmVpwsCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 1),
    _PmVpwsCurr15mIndex_Type()
)
pmVpwsCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsCurr15mIndex.setStatus("current")
_PmVpwsCurr15mId_Type = OctetString
_PmVpwsCurr15mId_Object = MibTableColumn
pmVpwsCurr15mId = _PmVpwsCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 2),
    _PmVpwsCurr15mId_Type()
)
pmVpwsCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mId.setStatus("current")


class _PmVpwsCurr15mUnitType_Type(Integer32):
    """Custom type pmVpwsCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsCurr15mUnitType_Type.__name__ = "Integer32"
_PmVpwsCurr15mUnitType_Object = MibTableColumn
pmVpwsCurr15mUnitType = _PmVpwsCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 3),
    _PmVpwsCurr15mUnitType_Type()
)
pmVpwsCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mUnitType.setStatus("current")
_PmVpwsCurr15mIngressPkts_Type = Counter64
_PmVpwsCurr15mIngressPkts_Object = MibTableColumn
pmVpwsCurr15mIngressPkts = _PmVpwsCurr15mIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 4),
    _PmVpwsCurr15mIngressPkts_Type()
)
pmVpwsCurr15mIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mIngressPkts.setStatus("current")
_PmVpwsCurr15mIngressBytes_Type = Counter64
_PmVpwsCurr15mIngressBytes_Object = MibTableColumn
pmVpwsCurr15mIngressBytes = _PmVpwsCurr15mIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 5),
    _PmVpwsCurr15mIngressBytes_Type()
)
pmVpwsCurr15mIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mIngressBytes.setStatus("current")
_PmVpwsCurr15mEgressPkts_Type = Counter64
_PmVpwsCurr15mEgressPkts_Object = MibTableColumn
pmVpwsCurr15mEgressPkts = _PmVpwsCurr15mEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 6),
    _PmVpwsCurr15mEgressPkts_Type()
)
pmVpwsCurr15mEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mEgressPkts.setStatus("current")
_PmVpwsCurr15mEgressBytes_Type = Counter64
_PmVpwsCurr15mEgressBytes_Object = MibTableColumn
pmVpwsCurr15mEgressBytes = _PmVpwsCurr15mEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 7),
    _PmVpwsCurr15mEgressBytes_Type()
)
pmVpwsCurr15mEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mEgressBytes.setStatus("current")
_PmVpwsCurr15mStartTime_Type = DateAndTime
_PmVpwsCurr15mStartTime_Object = MibTableColumn
pmVpwsCurr15mStartTime = _PmVpwsCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 100),
    _PmVpwsCurr15mStartTime_Type()
)
pmVpwsCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mStartTime.setStatus("current")
_PmVpwsCurr15mStopTime_Type = DateAndTime
_PmVpwsCurr15mStopTime_Object = MibTableColumn
pmVpwsCurr15mStopTime = _PmVpwsCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 1, 1, 101),
    _PmVpwsCurr15mStopTime_Type()
)
pmVpwsCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr15mStopTime.setStatus("current")
_PmVpwsPrev15mTable_Object = MibTable
pmVpwsPrev15mTable = _PmVpwsPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2)
)
if mibBuilder.loadTexts:
    pmVpwsPrev15mTable.setStatus("current")
_PmVpwsPrev15mEntry_Object = MibTableRow
pmVpwsPrev15mEntry = _PmVpwsPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1)
)
pmVpwsPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsPrev15mEntry.setStatus("current")
_PmVpwsPrev15mIndex_Type = Integer32
_PmVpwsPrev15mIndex_Object = MibTableColumn
pmVpwsPrev15mIndex = _PmVpwsPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 1),
    _PmVpwsPrev15mIndex_Type()
)
pmVpwsPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsPrev15mIndex.setStatus("current")
_PmVpwsPrev15mId_Type = OctetString
_PmVpwsPrev15mId_Object = MibTableColumn
pmVpwsPrev15mId = _PmVpwsPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 2),
    _PmVpwsPrev15mId_Type()
)
pmVpwsPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mId.setStatus("current")


class _PmVpwsPrev15mUnitType_Type(Integer32):
    """Custom type pmVpwsPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsPrev15mUnitType_Type.__name__ = "Integer32"
_PmVpwsPrev15mUnitType_Object = MibTableColumn
pmVpwsPrev15mUnitType = _PmVpwsPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 3),
    _PmVpwsPrev15mUnitType_Type()
)
pmVpwsPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mUnitType.setStatus("current")
_PmVpwsPrev15mIngressPkts_Type = Counter64
_PmVpwsPrev15mIngressPkts_Object = MibTableColumn
pmVpwsPrev15mIngressPkts = _PmVpwsPrev15mIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 4),
    _PmVpwsPrev15mIngressPkts_Type()
)
pmVpwsPrev15mIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mIngressPkts.setStatus("current")
_PmVpwsPrev15mIngressBytes_Type = Counter64
_PmVpwsPrev15mIngressBytes_Object = MibTableColumn
pmVpwsPrev15mIngressBytes = _PmVpwsPrev15mIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 5),
    _PmVpwsPrev15mIngressBytes_Type()
)
pmVpwsPrev15mIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mIngressBytes.setStatus("current")
_PmVpwsPrev15mEgressPkts_Type = Counter64
_PmVpwsPrev15mEgressPkts_Object = MibTableColumn
pmVpwsPrev15mEgressPkts = _PmVpwsPrev15mEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 6),
    _PmVpwsPrev15mEgressPkts_Type()
)
pmVpwsPrev15mEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mEgressPkts.setStatus("current")
_PmVpwsPrev15mEgressBytes_Type = Counter64
_PmVpwsPrev15mEgressBytes_Object = MibTableColumn
pmVpwsPrev15mEgressBytes = _PmVpwsPrev15mEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 7),
    _PmVpwsPrev15mEgressBytes_Type()
)
pmVpwsPrev15mEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mEgressBytes.setStatus("current")
_PmVpwsPrev15mStartTime_Type = DateAndTime
_PmVpwsPrev15mStartTime_Object = MibTableColumn
pmVpwsPrev15mStartTime = _PmVpwsPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 100),
    _PmVpwsPrev15mStartTime_Type()
)
pmVpwsPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mStartTime.setStatus("current")
_PmVpwsPrev15mStopTime_Type = DateAndTime
_PmVpwsPrev15mStopTime_Object = MibTableColumn
pmVpwsPrev15mStopTime = _PmVpwsPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 2, 1, 101),
    _PmVpwsPrev15mStopTime_Type()
)
pmVpwsPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev15mStopTime.setStatus("current")
_PmVpwsCurr1hTable_Object = MibTable
pmVpwsCurr1hTable = _PmVpwsCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3)
)
if mibBuilder.loadTexts:
    pmVpwsCurr1hTable.setStatus("current")
_PmVpwsCurr1hEntry_Object = MibTableRow
pmVpwsCurr1hEntry = _PmVpwsCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1)
)
pmVpwsCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsCurr1hEntry.setStatus("current")
_PmVpwsCurr1hIndex_Type = Integer32
_PmVpwsCurr1hIndex_Object = MibTableColumn
pmVpwsCurr1hIndex = _PmVpwsCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 1),
    _PmVpwsCurr1hIndex_Type()
)
pmVpwsCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsCurr1hIndex.setStatus("current")
_PmVpwsCurr1hId_Type = OctetString
_PmVpwsCurr1hId_Object = MibTableColumn
pmVpwsCurr1hId = _PmVpwsCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 2),
    _PmVpwsCurr1hId_Type()
)
pmVpwsCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hId.setStatus("current")


class _PmVpwsCurr1hUnitType_Type(Integer32):
    """Custom type pmVpwsCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsCurr1hUnitType_Type.__name__ = "Integer32"
_PmVpwsCurr1hUnitType_Object = MibTableColumn
pmVpwsCurr1hUnitType = _PmVpwsCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 3),
    _PmVpwsCurr1hUnitType_Type()
)
pmVpwsCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hUnitType.setStatus("current")
_PmVpwsCurr1hIngressPkts_Type = Counter64
_PmVpwsCurr1hIngressPkts_Object = MibTableColumn
pmVpwsCurr1hIngressPkts = _PmVpwsCurr1hIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 4),
    _PmVpwsCurr1hIngressPkts_Type()
)
pmVpwsCurr1hIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hIngressPkts.setStatus("current")
_PmVpwsCurr1hIngressBytes_Type = Counter64
_PmVpwsCurr1hIngressBytes_Object = MibTableColumn
pmVpwsCurr1hIngressBytes = _PmVpwsCurr1hIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 5),
    _PmVpwsCurr1hIngressBytes_Type()
)
pmVpwsCurr1hIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hIngressBytes.setStatus("current")
_PmVpwsCurr1hEgressPkts_Type = Counter64
_PmVpwsCurr1hEgressPkts_Object = MibTableColumn
pmVpwsCurr1hEgressPkts = _PmVpwsCurr1hEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 6),
    _PmVpwsCurr1hEgressPkts_Type()
)
pmVpwsCurr1hEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hEgressPkts.setStatus("current")
_PmVpwsCurr1hEgressBytes_Type = Counter64
_PmVpwsCurr1hEgressBytes_Object = MibTableColumn
pmVpwsCurr1hEgressBytes = _PmVpwsCurr1hEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 7),
    _PmVpwsCurr1hEgressBytes_Type()
)
pmVpwsCurr1hEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hEgressBytes.setStatus("current")
_PmVpwsCurr1hStartTime_Type = DateAndTime
_PmVpwsCurr1hStartTime_Object = MibTableColumn
pmVpwsCurr1hStartTime = _PmVpwsCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 100),
    _PmVpwsCurr1hStartTime_Type()
)
pmVpwsCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hStartTime.setStatus("current")
_PmVpwsCurr1hStopTime_Type = DateAndTime
_PmVpwsCurr1hStopTime_Object = MibTableColumn
pmVpwsCurr1hStopTime = _PmVpwsCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 3, 1, 101),
    _PmVpwsCurr1hStopTime_Type()
)
pmVpwsCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1hStopTime.setStatus("current")
_PmVpwsPrev1hTable_Object = MibTable
pmVpwsPrev1hTable = _PmVpwsPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4)
)
if mibBuilder.loadTexts:
    pmVpwsPrev1hTable.setStatus("current")
_PmVpwsPrev1hEntry_Object = MibTableRow
pmVpwsPrev1hEntry = _PmVpwsPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1)
)
pmVpwsPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsPrev1hEntry.setStatus("current")
_PmVpwsPrev1hIndex_Type = Integer32
_PmVpwsPrev1hIndex_Object = MibTableColumn
pmVpwsPrev1hIndex = _PmVpwsPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 1),
    _PmVpwsPrev1hIndex_Type()
)
pmVpwsPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsPrev1hIndex.setStatus("current")
_PmVpwsPrev1hId_Type = OctetString
_PmVpwsPrev1hId_Object = MibTableColumn
pmVpwsPrev1hId = _PmVpwsPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 2),
    _PmVpwsPrev1hId_Type()
)
pmVpwsPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hId.setStatus("current")


class _PmVpwsPrev1hUnitType_Type(Integer32):
    """Custom type pmVpwsPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsPrev1hUnitType_Type.__name__ = "Integer32"
_PmVpwsPrev1hUnitType_Object = MibTableColumn
pmVpwsPrev1hUnitType = _PmVpwsPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 3),
    _PmVpwsPrev1hUnitType_Type()
)
pmVpwsPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hUnitType.setStatus("current")
_PmVpwsPrev1hIngressPkts_Type = Counter64
_PmVpwsPrev1hIngressPkts_Object = MibTableColumn
pmVpwsPrev1hIngressPkts = _PmVpwsPrev1hIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 4),
    _PmVpwsPrev1hIngressPkts_Type()
)
pmVpwsPrev1hIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hIngressPkts.setStatus("current")
_PmVpwsPrev1hIngressBytes_Type = Counter64
_PmVpwsPrev1hIngressBytes_Object = MibTableColumn
pmVpwsPrev1hIngressBytes = _PmVpwsPrev1hIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 5),
    _PmVpwsPrev1hIngressBytes_Type()
)
pmVpwsPrev1hIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hIngressBytes.setStatus("current")
_PmVpwsPrev1hEgressPkts_Type = Counter64
_PmVpwsPrev1hEgressPkts_Object = MibTableColumn
pmVpwsPrev1hEgressPkts = _PmVpwsPrev1hEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 6),
    _PmVpwsPrev1hEgressPkts_Type()
)
pmVpwsPrev1hEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hEgressPkts.setStatus("current")
_PmVpwsPrev1hEgressBytes_Type = Counter64
_PmVpwsPrev1hEgressBytes_Object = MibTableColumn
pmVpwsPrev1hEgressBytes = _PmVpwsPrev1hEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 7),
    _PmVpwsPrev1hEgressBytes_Type()
)
pmVpwsPrev1hEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hEgressBytes.setStatus("current")
_PmVpwsPrev1hStartTime_Type = DateAndTime
_PmVpwsPrev1hStartTime_Object = MibTableColumn
pmVpwsPrev1hStartTime = _PmVpwsPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 100),
    _PmVpwsPrev1hStartTime_Type()
)
pmVpwsPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hStartTime.setStatus("current")
_PmVpwsPrev1hStopTime_Type = DateAndTime
_PmVpwsPrev1hStopTime_Object = MibTableColumn
pmVpwsPrev1hStopTime = _PmVpwsPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 4, 1, 101),
    _PmVpwsPrev1hStopTime_Type()
)
pmVpwsPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1hStopTime.setStatus("current")
_PmVpwsCurr1dTable_Object = MibTable
pmVpwsCurr1dTable = _PmVpwsCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5)
)
if mibBuilder.loadTexts:
    pmVpwsCurr1dTable.setStatus("current")
_PmVpwsCurr1dEntry_Object = MibTableRow
pmVpwsCurr1dEntry = _PmVpwsCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1)
)
pmVpwsCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsCurr1dEntry.setStatus("current")
_PmVpwsCurr1dIndex_Type = Integer32
_PmVpwsCurr1dIndex_Object = MibTableColumn
pmVpwsCurr1dIndex = _PmVpwsCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 1),
    _PmVpwsCurr1dIndex_Type()
)
pmVpwsCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsCurr1dIndex.setStatus("current")
_PmVpwsCurr1dId_Type = OctetString
_PmVpwsCurr1dId_Object = MibTableColumn
pmVpwsCurr1dId = _PmVpwsCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 2),
    _PmVpwsCurr1dId_Type()
)
pmVpwsCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dId.setStatus("current")


class _PmVpwsCurr1dUnitType_Type(Integer32):
    """Custom type pmVpwsCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsCurr1dUnitType_Type.__name__ = "Integer32"
_PmVpwsCurr1dUnitType_Object = MibTableColumn
pmVpwsCurr1dUnitType = _PmVpwsCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 3),
    _PmVpwsCurr1dUnitType_Type()
)
pmVpwsCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dUnitType.setStatus("current")
_PmVpwsCurr1dIngressPkts_Type = Counter64
_PmVpwsCurr1dIngressPkts_Object = MibTableColumn
pmVpwsCurr1dIngressPkts = _PmVpwsCurr1dIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 4),
    _PmVpwsCurr1dIngressPkts_Type()
)
pmVpwsCurr1dIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dIngressPkts.setStatus("current")
_PmVpwsCurr1dIngressBytes_Type = Counter64
_PmVpwsCurr1dIngressBytes_Object = MibTableColumn
pmVpwsCurr1dIngressBytes = _PmVpwsCurr1dIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 5),
    _PmVpwsCurr1dIngressBytes_Type()
)
pmVpwsCurr1dIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dIngressBytes.setStatus("current")
_PmVpwsCurr1dEgressPkts_Type = Counter64
_PmVpwsCurr1dEgressPkts_Object = MibTableColumn
pmVpwsCurr1dEgressPkts = _PmVpwsCurr1dEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 6),
    _PmVpwsCurr1dEgressPkts_Type()
)
pmVpwsCurr1dEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dEgressPkts.setStatus("current")
_PmVpwsCurr1dEgressBytes_Type = Counter64
_PmVpwsCurr1dEgressBytes_Object = MibTableColumn
pmVpwsCurr1dEgressBytes = _PmVpwsCurr1dEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 7),
    _PmVpwsCurr1dEgressBytes_Type()
)
pmVpwsCurr1dEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dEgressBytes.setStatus("current")
_PmVpwsCurr1dStartTime_Type = DateAndTime
_PmVpwsCurr1dStartTime_Object = MibTableColumn
pmVpwsCurr1dStartTime = _PmVpwsCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 100),
    _PmVpwsCurr1dStartTime_Type()
)
pmVpwsCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dStartTime.setStatus("current")
_PmVpwsCurr1dStopTime_Type = DateAndTime
_PmVpwsCurr1dStopTime_Object = MibTableColumn
pmVpwsCurr1dStopTime = _PmVpwsCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 5, 1, 101),
    _PmVpwsCurr1dStopTime_Type()
)
pmVpwsCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsCurr1dStopTime.setStatus("current")
_PmVpwsPrev1dTable_Object = MibTable
pmVpwsPrev1dTable = _PmVpwsPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6)
)
if mibBuilder.loadTexts:
    pmVpwsPrev1dTable.setStatus("current")
_PmVpwsPrev1dEntry_Object = MibTableRow
pmVpwsPrev1dEntry = _PmVpwsPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1)
)
pmVpwsPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmVpwsPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmVpwsPrev1dEntry.setStatus("current")
_PmVpwsPrev1dIndex_Type = Integer32
_PmVpwsPrev1dIndex_Object = MibTableColumn
pmVpwsPrev1dIndex = _PmVpwsPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 1),
    _PmVpwsPrev1dIndex_Type()
)
pmVpwsPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVpwsPrev1dIndex.setStatus("current")
_PmVpwsPrev1dId_Type = OctetString
_PmVpwsPrev1dId_Object = MibTableColumn
pmVpwsPrev1dId = _PmVpwsPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 2),
    _PmVpwsPrev1dId_Type()
)
pmVpwsPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dId.setStatus("current")


class _PmVpwsPrev1dUnitType_Type(Integer32):
    """Custom type pmVpwsPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVpwsPrev1dUnitType_Type.__name__ = "Integer32"
_PmVpwsPrev1dUnitType_Object = MibTableColumn
pmVpwsPrev1dUnitType = _PmVpwsPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 3),
    _PmVpwsPrev1dUnitType_Type()
)
pmVpwsPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dUnitType.setStatus("current")
_PmVpwsPrev1dIngressPkts_Type = Counter64
_PmVpwsPrev1dIngressPkts_Object = MibTableColumn
pmVpwsPrev1dIngressPkts = _PmVpwsPrev1dIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 4),
    _PmVpwsPrev1dIngressPkts_Type()
)
pmVpwsPrev1dIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dIngressPkts.setStatus("current")
_PmVpwsPrev1dIngressBytes_Type = Counter64
_PmVpwsPrev1dIngressBytes_Object = MibTableColumn
pmVpwsPrev1dIngressBytes = _PmVpwsPrev1dIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 5),
    _PmVpwsPrev1dIngressBytes_Type()
)
pmVpwsPrev1dIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dIngressBytes.setStatus("current")
_PmVpwsPrev1dEgressPkts_Type = Counter64
_PmVpwsPrev1dEgressPkts_Object = MibTableColumn
pmVpwsPrev1dEgressPkts = _PmVpwsPrev1dEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 6),
    _PmVpwsPrev1dEgressPkts_Type()
)
pmVpwsPrev1dEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dEgressPkts.setStatus("current")
_PmVpwsPrev1dEgressBytes_Type = Counter64
_PmVpwsPrev1dEgressBytes_Object = MibTableColumn
pmVpwsPrev1dEgressBytes = _PmVpwsPrev1dEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 7),
    _PmVpwsPrev1dEgressBytes_Type()
)
pmVpwsPrev1dEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dEgressBytes.setStatus("current")
_PmVpwsPrev1dStartTime_Type = DateAndTime
_PmVpwsPrev1dStartTime_Object = MibTableColumn
pmVpwsPrev1dStartTime = _PmVpwsPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 100),
    _PmVpwsPrev1dStartTime_Type()
)
pmVpwsPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dStartTime.setStatus("current")
_PmVpwsPrev1dStopTime_Type = DateAndTime
_PmVpwsPrev1dStopTime_Object = MibTableColumn
pmVpwsPrev1dStopTime = _PmVpwsPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 6, 1, 101),
    _PmVpwsPrev1dStopTime_Type()
)
pmVpwsPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVpwsPrev1dStopTime.setStatus("current")
_PmTcaVpwsIngressPkts15mTable_Object = MibTable
pmTcaVpwsIngressPkts15mTable = _PmTcaVpwsIngressPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mTable.setStatus("current")
_PmTcaVpwsIngressPkts15mEntry_Object = MibTableRow
pmTcaVpwsIngressPkts15mEntry = _PmTcaVpwsIngressPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1)
)
pmTcaVpwsIngressPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mEntry.setStatus("current")
_PmTcaVpwsIngressPkts15mIndex_Type = Integer32
_PmTcaVpwsIngressPkts15mIndex_Object = MibTableColumn
pmTcaVpwsIngressPkts15mIndex = _PmTcaVpwsIngressPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 1),
    _PmTcaVpwsIngressPkts15mIndex_Type()
)
pmTcaVpwsIngressPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mIndex.setStatus("current")
_PmTcaVpwsIngressPkts15mId_Type = OctetString
_PmTcaVpwsIngressPkts15mId_Object = MibTableColumn
pmTcaVpwsIngressPkts15mId = _PmTcaVpwsIngressPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 2),
    _PmTcaVpwsIngressPkts15mId_Type()
)
pmTcaVpwsIngressPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mId.setStatus("current")


class _PmTcaVpwsIngressPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressPkts15mUnitType_Object = MibTableColumn
pmTcaVpwsIngressPkts15mUnitType = _PmTcaVpwsIngressPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 3),
    _PmTcaVpwsIngressPkts15mUnitType_Type()
)
pmTcaVpwsIngressPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mUnitType.setStatus("current")
_PmTcaVpwsIngressPkts15mCnt_Type = Counter64
_PmTcaVpwsIngressPkts15mCnt_Object = MibTableColumn
pmTcaVpwsIngressPkts15mCnt = _PmTcaVpwsIngressPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 4),
    _PmTcaVpwsIngressPkts15mCnt_Type()
)
pmTcaVpwsIngressPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mCnt.setStatus("current")
_PmTcaVpwsIngressPkts15mThreshold_Type = Counter64
_PmTcaVpwsIngressPkts15mThreshold_Object = MibTableColumn
pmTcaVpwsIngressPkts15mThreshold = _PmTcaVpwsIngressPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 5),
    _PmTcaVpwsIngressPkts15mThreshold_Type()
)
pmTcaVpwsIngressPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mThreshold.setStatus("current")
_PmTcaVpwsIngressPkts15mOccurTime_Type = DateAndTime
_PmTcaVpwsIngressPkts15mOccurTime_Object = MibTableColumn
pmTcaVpwsIngressPkts15mOccurTime = _PmTcaVpwsIngressPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 7, 1, 6),
    _PmTcaVpwsIngressPkts15mOccurTime_Type()
)
pmTcaVpwsIngressPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts15mOccurTime.setStatus("current")
_PmTcaVpwsIngressPkts1hTable_Object = MibTable
pmTcaVpwsIngressPkts1hTable = _PmTcaVpwsIngressPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hTable.setStatus("current")
_PmTcaVpwsIngressPkts1hEntry_Object = MibTableRow
pmTcaVpwsIngressPkts1hEntry = _PmTcaVpwsIngressPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1)
)
pmTcaVpwsIngressPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hEntry.setStatus("current")
_PmTcaVpwsIngressPkts1hIndex_Type = Integer32
_PmTcaVpwsIngressPkts1hIndex_Object = MibTableColumn
pmTcaVpwsIngressPkts1hIndex = _PmTcaVpwsIngressPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 1),
    _PmTcaVpwsIngressPkts1hIndex_Type()
)
pmTcaVpwsIngressPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hIndex.setStatus("current")
_PmTcaVpwsIngressPkts1hId_Type = OctetString
_PmTcaVpwsIngressPkts1hId_Object = MibTableColumn
pmTcaVpwsIngressPkts1hId = _PmTcaVpwsIngressPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 2),
    _PmTcaVpwsIngressPkts1hId_Type()
)
pmTcaVpwsIngressPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hId.setStatus("current")


class _PmTcaVpwsIngressPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressPkts1hUnitType_Object = MibTableColumn
pmTcaVpwsIngressPkts1hUnitType = _PmTcaVpwsIngressPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 3),
    _PmTcaVpwsIngressPkts1hUnitType_Type()
)
pmTcaVpwsIngressPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hUnitType.setStatus("current")
_PmTcaVpwsIngressPkts1hCnt_Type = Counter64
_PmTcaVpwsIngressPkts1hCnt_Object = MibTableColumn
pmTcaVpwsIngressPkts1hCnt = _PmTcaVpwsIngressPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 4),
    _PmTcaVpwsIngressPkts1hCnt_Type()
)
pmTcaVpwsIngressPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hCnt.setStatus("current")
_PmTcaVpwsIngressPkts1hThreshold_Type = Counter64
_PmTcaVpwsIngressPkts1hThreshold_Object = MibTableColumn
pmTcaVpwsIngressPkts1hThreshold = _PmTcaVpwsIngressPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 5),
    _PmTcaVpwsIngressPkts1hThreshold_Type()
)
pmTcaVpwsIngressPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hThreshold.setStatus("current")
_PmTcaVpwsIngressPkts1hOccurTime_Type = DateAndTime
_PmTcaVpwsIngressPkts1hOccurTime_Object = MibTableColumn
pmTcaVpwsIngressPkts1hOccurTime = _PmTcaVpwsIngressPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 8, 1, 6),
    _PmTcaVpwsIngressPkts1hOccurTime_Type()
)
pmTcaVpwsIngressPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1hOccurTime.setStatus("current")
_PmTcaVpwsIngressPkts1dTable_Object = MibTable
pmTcaVpwsIngressPkts1dTable = _PmTcaVpwsIngressPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dTable.setStatus("current")
_PmTcaVpwsIngressPkts1dEntry_Object = MibTableRow
pmTcaVpwsIngressPkts1dEntry = _PmTcaVpwsIngressPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1)
)
pmTcaVpwsIngressPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dEntry.setStatus("current")
_PmTcaVpwsIngressPkts1dIndex_Type = Integer32
_PmTcaVpwsIngressPkts1dIndex_Object = MibTableColumn
pmTcaVpwsIngressPkts1dIndex = _PmTcaVpwsIngressPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 1),
    _PmTcaVpwsIngressPkts1dIndex_Type()
)
pmTcaVpwsIngressPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dIndex.setStatus("current")
_PmTcaVpwsIngressPkts1dId_Type = OctetString
_PmTcaVpwsIngressPkts1dId_Object = MibTableColumn
pmTcaVpwsIngressPkts1dId = _PmTcaVpwsIngressPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 2),
    _PmTcaVpwsIngressPkts1dId_Type()
)
pmTcaVpwsIngressPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dId.setStatus("current")


class _PmTcaVpwsIngressPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressPkts1dUnitType_Object = MibTableColumn
pmTcaVpwsIngressPkts1dUnitType = _PmTcaVpwsIngressPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 3),
    _PmTcaVpwsIngressPkts1dUnitType_Type()
)
pmTcaVpwsIngressPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dUnitType.setStatus("current")
_PmTcaVpwsIngressPkts1dCnt_Type = Counter64
_PmTcaVpwsIngressPkts1dCnt_Object = MibTableColumn
pmTcaVpwsIngressPkts1dCnt = _PmTcaVpwsIngressPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 4),
    _PmTcaVpwsIngressPkts1dCnt_Type()
)
pmTcaVpwsIngressPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dCnt.setStatus("current")
_PmTcaVpwsIngressPkts1dThreshold_Type = Counter64
_PmTcaVpwsIngressPkts1dThreshold_Object = MibTableColumn
pmTcaVpwsIngressPkts1dThreshold = _PmTcaVpwsIngressPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 5),
    _PmTcaVpwsIngressPkts1dThreshold_Type()
)
pmTcaVpwsIngressPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dThreshold.setStatus("current")
_PmTcaVpwsIngressPkts1dOccurTime_Type = DateAndTime
_PmTcaVpwsIngressPkts1dOccurTime_Object = MibTableColumn
pmTcaVpwsIngressPkts1dOccurTime = _PmTcaVpwsIngressPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 9, 1, 6),
    _PmTcaVpwsIngressPkts1dOccurTime_Type()
)
pmTcaVpwsIngressPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressPkts1dOccurTime.setStatus("current")
_PmTcaVpwsIngressBytes15mTable_Object = MibTable
pmTcaVpwsIngressBytes15mTable = _PmTcaVpwsIngressBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mTable.setStatus("current")
_PmTcaVpwsIngressBytes15mEntry_Object = MibTableRow
pmTcaVpwsIngressBytes15mEntry = _PmTcaVpwsIngressBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1)
)
pmTcaVpwsIngressBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mEntry.setStatus("current")
_PmTcaVpwsIngressBytes15mIndex_Type = Integer32
_PmTcaVpwsIngressBytes15mIndex_Object = MibTableColumn
pmTcaVpwsIngressBytes15mIndex = _PmTcaVpwsIngressBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 1),
    _PmTcaVpwsIngressBytes15mIndex_Type()
)
pmTcaVpwsIngressBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mIndex.setStatus("current")
_PmTcaVpwsIngressBytes15mId_Type = OctetString
_PmTcaVpwsIngressBytes15mId_Object = MibTableColumn
pmTcaVpwsIngressBytes15mId = _PmTcaVpwsIngressBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 2),
    _PmTcaVpwsIngressBytes15mId_Type()
)
pmTcaVpwsIngressBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mId.setStatus("current")


class _PmTcaVpwsIngressBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressBytes15mUnitType_Object = MibTableColumn
pmTcaVpwsIngressBytes15mUnitType = _PmTcaVpwsIngressBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 3),
    _PmTcaVpwsIngressBytes15mUnitType_Type()
)
pmTcaVpwsIngressBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mUnitType.setStatus("current")
_PmTcaVpwsIngressBytes15mCnt_Type = Counter64
_PmTcaVpwsIngressBytes15mCnt_Object = MibTableColumn
pmTcaVpwsIngressBytes15mCnt = _PmTcaVpwsIngressBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 4),
    _PmTcaVpwsIngressBytes15mCnt_Type()
)
pmTcaVpwsIngressBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mCnt.setStatus("current")
_PmTcaVpwsIngressBytes15mThreshold_Type = Counter64
_PmTcaVpwsIngressBytes15mThreshold_Object = MibTableColumn
pmTcaVpwsIngressBytes15mThreshold = _PmTcaVpwsIngressBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 5),
    _PmTcaVpwsIngressBytes15mThreshold_Type()
)
pmTcaVpwsIngressBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mThreshold.setStatus("current")
_PmTcaVpwsIngressBytes15mOccurTime_Type = DateAndTime
_PmTcaVpwsIngressBytes15mOccurTime_Object = MibTableColumn
pmTcaVpwsIngressBytes15mOccurTime = _PmTcaVpwsIngressBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 10, 1, 6),
    _PmTcaVpwsIngressBytes15mOccurTime_Type()
)
pmTcaVpwsIngressBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes15mOccurTime.setStatus("current")
_PmTcaVpwsIngressBytes1hTable_Object = MibTable
pmTcaVpwsIngressBytes1hTable = _PmTcaVpwsIngressBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hTable.setStatus("current")
_PmTcaVpwsIngressBytes1hEntry_Object = MibTableRow
pmTcaVpwsIngressBytes1hEntry = _PmTcaVpwsIngressBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1)
)
pmTcaVpwsIngressBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hEntry.setStatus("current")
_PmTcaVpwsIngressBytes1hIndex_Type = Integer32
_PmTcaVpwsIngressBytes1hIndex_Object = MibTableColumn
pmTcaVpwsIngressBytes1hIndex = _PmTcaVpwsIngressBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 1),
    _PmTcaVpwsIngressBytes1hIndex_Type()
)
pmTcaVpwsIngressBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hIndex.setStatus("current")
_PmTcaVpwsIngressBytes1hId_Type = OctetString
_PmTcaVpwsIngressBytes1hId_Object = MibTableColumn
pmTcaVpwsIngressBytes1hId = _PmTcaVpwsIngressBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 2),
    _PmTcaVpwsIngressBytes1hId_Type()
)
pmTcaVpwsIngressBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hId.setStatus("current")


class _PmTcaVpwsIngressBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressBytes1hUnitType_Object = MibTableColumn
pmTcaVpwsIngressBytes1hUnitType = _PmTcaVpwsIngressBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 3),
    _PmTcaVpwsIngressBytes1hUnitType_Type()
)
pmTcaVpwsIngressBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hUnitType.setStatus("current")
_PmTcaVpwsIngressBytes1hCnt_Type = Counter64
_PmTcaVpwsIngressBytes1hCnt_Object = MibTableColumn
pmTcaVpwsIngressBytes1hCnt = _PmTcaVpwsIngressBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 4),
    _PmTcaVpwsIngressBytes1hCnt_Type()
)
pmTcaVpwsIngressBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hCnt.setStatus("current")
_PmTcaVpwsIngressBytes1hThreshold_Type = Counter64
_PmTcaVpwsIngressBytes1hThreshold_Object = MibTableColumn
pmTcaVpwsIngressBytes1hThreshold = _PmTcaVpwsIngressBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 5),
    _PmTcaVpwsIngressBytes1hThreshold_Type()
)
pmTcaVpwsIngressBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hThreshold.setStatus("current")
_PmTcaVpwsIngressBytes1hOccurTime_Type = DateAndTime
_PmTcaVpwsIngressBytes1hOccurTime_Object = MibTableColumn
pmTcaVpwsIngressBytes1hOccurTime = _PmTcaVpwsIngressBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 11, 1, 6),
    _PmTcaVpwsIngressBytes1hOccurTime_Type()
)
pmTcaVpwsIngressBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1hOccurTime.setStatus("current")
_PmTcaVpwsIngressBytes1dTable_Object = MibTable
pmTcaVpwsIngressBytes1dTable = _PmTcaVpwsIngressBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12)
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dTable.setStatus("current")
_PmTcaVpwsIngressBytes1dEntry_Object = MibTableRow
pmTcaVpwsIngressBytes1dEntry = _PmTcaVpwsIngressBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1)
)
pmTcaVpwsIngressBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsIngressBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dEntry.setStatus("current")
_PmTcaVpwsIngressBytes1dIndex_Type = Integer32
_PmTcaVpwsIngressBytes1dIndex_Object = MibTableColumn
pmTcaVpwsIngressBytes1dIndex = _PmTcaVpwsIngressBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 1),
    _PmTcaVpwsIngressBytes1dIndex_Type()
)
pmTcaVpwsIngressBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dIndex.setStatus("current")
_PmTcaVpwsIngressBytes1dId_Type = OctetString
_PmTcaVpwsIngressBytes1dId_Object = MibTableColumn
pmTcaVpwsIngressBytes1dId = _PmTcaVpwsIngressBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 2),
    _PmTcaVpwsIngressBytes1dId_Type()
)
pmTcaVpwsIngressBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dId.setStatus("current")


class _PmTcaVpwsIngressBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaVpwsIngressBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsIngressBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsIngressBytes1dUnitType_Object = MibTableColumn
pmTcaVpwsIngressBytes1dUnitType = _PmTcaVpwsIngressBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 3),
    _PmTcaVpwsIngressBytes1dUnitType_Type()
)
pmTcaVpwsIngressBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dUnitType.setStatus("current")
_PmTcaVpwsIngressBytes1dCnt_Type = Counter64
_PmTcaVpwsIngressBytes1dCnt_Object = MibTableColumn
pmTcaVpwsIngressBytes1dCnt = _PmTcaVpwsIngressBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 4),
    _PmTcaVpwsIngressBytes1dCnt_Type()
)
pmTcaVpwsIngressBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dCnt.setStatus("current")
_PmTcaVpwsIngressBytes1dThreshold_Type = Counter64
_PmTcaVpwsIngressBytes1dThreshold_Object = MibTableColumn
pmTcaVpwsIngressBytes1dThreshold = _PmTcaVpwsIngressBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 5),
    _PmTcaVpwsIngressBytes1dThreshold_Type()
)
pmTcaVpwsIngressBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dThreshold.setStatus("current")
_PmTcaVpwsIngressBytes1dOccurTime_Type = DateAndTime
_PmTcaVpwsIngressBytes1dOccurTime_Object = MibTableColumn
pmTcaVpwsIngressBytes1dOccurTime = _PmTcaVpwsIngressBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 12, 1, 6),
    _PmTcaVpwsIngressBytes1dOccurTime_Type()
)
pmTcaVpwsIngressBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsIngressBytes1dOccurTime.setStatus("current")
_PmTcaVpwsEgressPkts15mTable_Object = MibTable
pmTcaVpwsEgressPkts15mTable = _PmTcaVpwsEgressPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mTable.setStatus("current")
_PmTcaVpwsEgressPkts15mEntry_Object = MibTableRow
pmTcaVpwsEgressPkts15mEntry = _PmTcaVpwsEgressPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1)
)
pmTcaVpwsEgressPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mEntry.setStatus("current")
_PmTcaVpwsEgressPkts15mIndex_Type = Integer32
_PmTcaVpwsEgressPkts15mIndex_Object = MibTableColumn
pmTcaVpwsEgressPkts15mIndex = _PmTcaVpwsEgressPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 1),
    _PmTcaVpwsEgressPkts15mIndex_Type()
)
pmTcaVpwsEgressPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mIndex.setStatus("current")
_PmTcaVpwsEgressPkts15mId_Type = OctetString
_PmTcaVpwsEgressPkts15mId_Object = MibTableColumn
pmTcaVpwsEgressPkts15mId = _PmTcaVpwsEgressPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 2),
    _PmTcaVpwsEgressPkts15mId_Type()
)
pmTcaVpwsEgressPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mId.setStatus("current")


class _PmTcaVpwsEgressPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressPkts15mUnitType_Object = MibTableColumn
pmTcaVpwsEgressPkts15mUnitType = _PmTcaVpwsEgressPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 3),
    _PmTcaVpwsEgressPkts15mUnitType_Type()
)
pmTcaVpwsEgressPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mUnitType.setStatus("current")
_PmTcaVpwsEgressPkts15mCnt_Type = Counter64
_PmTcaVpwsEgressPkts15mCnt_Object = MibTableColumn
pmTcaVpwsEgressPkts15mCnt = _PmTcaVpwsEgressPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 4),
    _PmTcaVpwsEgressPkts15mCnt_Type()
)
pmTcaVpwsEgressPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mCnt.setStatus("current")
_PmTcaVpwsEgressPkts15mThreshold_Type = Counter64
_PmTcaVpwsEgressPkts15mThreshold_Object = MibTableColumn
pmTcaVpwsEgressPkts15mThreshold = _PmTcaVpwsEgressPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 5),
    _PmTcaVpwsEgressPkts15mThreshold_Type()
)
pmTcaVpwsEgressPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mThreshold.setStatus("current")
_PmTcaVpwsEgressPkts15mOccurTime_Type = DateAndTime
_PmTcaVpwsEgressPkts15mOccurTime_Object = MibTableColumn
pmTcaVpwsEgressPkts15mOccurTime = _PmTcaVpwsEgressPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 13, 1, 6),
    _PmTcaVpwsEgressPkts15mOccurTime_Type()
)
pmTcaVpwsEgressPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts15mOccurTime.setStatus("current")
_PmTcaVpwsEgressPkts1hTable_Object = MibTable
pmTcaVpwsEgressPkts1hTable = _PmTcaVpwsEgressPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hTable.setStatus("current")
_PmTcaVpwsEgressPkts1hEntry_Object = MibTableRow
pmTcaVpwsEgressPkts1hEntry = _PmTcaVpwsEgressPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1)
)
pmTcaVpwsEgressPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hEntry.setStatus("current")
_PmTcaVpwsEgressPkts1hIndex_Type = Integer32
_PmTcaVpwsEgressPkts1hIndex_Object = MibTableColumn
pmTcaVpwsEgressPkts1hIndex = _PmTcaVpwsEgressPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 1),
    _PmTcaVpwsEgressPkts1hIndex_Type()
)
pmTcaVpwsEgressPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hIndex.setStatus("current")
_PmTcaVpwsEgressPkts1hId_Type = OctetString
_PmTcaVpwsEgressPkts1hId_Object = MibTableColumn
pmTcaVpwsEgressPkts1hId = _PmTcaVpwsEgressPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 2),
    _PmTcaVpwsEgressPkts1hId_Type()
)
pmTcaVpwsEgressPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hId.setStatus("current")


class _PmTcaVpwsEgressPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressPkts1hUnitType_Object = MibTableColumn
pmTcaVpwsEgressPkts1hUnitType = _PmTcaVpwsEgressPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 3),
    _PmTcaVpwsEgressPkts1hUnitType_Type()
)
pmTcaVpwsEgressPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hUnitType.setStatus("current")
_PmTcaVpwsEgressPkts1hCnt_Type = Counter64
_PmTcaVpwsEgressPkts1hCnt_Object = MibTableColumn
pmTcaVpwsEgressPkts1hCnt = _PmTcaVpwsEgressPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 4),
    _PmTcaVpwsEgressPkts1hCnt_Type()
)
pmTcaVpwsEgressPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hCnt.setStatus("current")
_PmTcaVpwsEgressPkts1hThreshold_Type = Counter64
_PmTcaVpwsEgressPkts1hThreshold_Object = MibTableColumn
pmTcaVpwsEgressPkts1hThreshold = _PmTcaVpwsEgressPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 5),
    _PmTcaVpwsEgressPkts1hThreshold_Type()
)
pmTcaVpwsEgressPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hThreshold.setStatus("current")
_PmTcaVpwsEgressPkts1hOccurTime_Type = DateAndTime
_PmTcaVpwsEgressPkts1hOccurTime_Object = MibTableColumn
pmTcaVpwsEgressPkts1hOccurTime = _PmTcaVpwsEgressPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 14, 1, 6),
    _PmTcaVpwsEgressPkts1hOccurTime_Type()
)
pmTcaVpwsEgressPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1hOccurTime.setStatus("current")
_PmTcaVpwsEgressPkts1dTable_Object = MibTable
pmTcaVpwsEgressPkts1dTable = _PmTcaVpwsEgressPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dTable.setStatus("current")
_PmTcaVpwsEgressPkts1dEntry_Object = MibTableRow
pmTcaVpwsEgressPkts1dEntry = _PmTcaVpwsEgressPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1)
)
pmTcaVpwsEgressPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dEntry.setStatus("current")
_PmTcaVpwsEgressPkts1dIndex_Type = Integer32
_PmTcaVpwsEgressPkts1dIndex_Object = MibTableColumn
pmTcaVpwsEgressPkts1dIndex = _PmTcaVpwsEgressPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 1),
    _PmTcaVpwsEgressPkts1dIndex_Type()
)
pmTcaVpwsEgressPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dIndex.setStatus("current")
_PmTcaVpwsEgressPkts1dId_Type = OctetString
_PmTcaVpwsEgressPkts1dId_Object = MibTableColumn
pmTcaVpwsEgressPkts1dId = _PmTcaVpwsEgressPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 2),
    _PmTcaVpwsEgressPkts1dId_Type()
)
pmTcaVpwsEgressPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dId.setStatus("current")


class _PmTcaVpwsEgressPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressPkts1dUnitType_Object = MibTableColumn
pmTcaVpwsEgressPkts1dUnitType = _PmTcaVpwsEgressPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 3),
    _PmTcaVpwsEgressPkts1dUnitType_Type()
)
pmTcaVpwsEgressPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dUnitType.setStatus("current")
_PmTcaVpwsEgressPkts1dCnt_Type = Counter64
_PmTcaVpwsEgressPkts1dCnt_Object = MibTableColumn
pmTcaVpwsEgressPkts1dCnt = _PmTcaVpwsEgressPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 4),
    _PmTcaVpwsEgressPkts1dCnt_Type()
)
pmTcaVpwsEgressPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dCnt.setStatus("current")
_PmTcaVpwsEgressPkts1dThreshold_Type = Counter64
_PmTcaVpwsEgressPkts1dThreshold_Object = MibTableColumn
pmTcaVpwsEgressPkts1dThreshold = _PmTcaVpwsEgressPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 5),
    _PmTcaVpwsEgressPkts1dThreshold_Type()
)
pmTcaVpwsEgressPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dThreshold.setStatus("current")
_PmTcaVpwsEgressPkts1dOccurTime_Type = DateAndTime
_PmTcaVpwsEgressPkts1dOccurTime_Object = MibTableColumn
pmTcaVpwsEgressPkts1dOccurTime = _PmTcaVpwsEgressPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 15, 1, 6),
    _PmTcaVpwsEgressPkts1dOccurTime_Type()
)
pmTcaVpwsEgressPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressPkts1dOccurTime.setStatus("current")
_PmTcaVpwsEgressBytes15mTable_Object = MibTable
pmTcaVpwsEgressBytes15mTable = _PmTcaVpwsEgressBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mTable.setStatus("current")
_PmTcaVpwsEgressBytes15mEntry_Object = MibTableRow
pmTcaVpwsEgressBytes15mEntry = _PmTcaVpwsEgressBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1)
)
pmTcaVpwsEgressBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mEntry.setStatus("current")
_PmTcaVpwsEgressBytes15mIndex_Type = Integer32
_PmTcaVpwsEgressBytes15mIndex_Object = MibTableColumn
pmTcaVpwsEgressBytes15mIndex = _PmTcaVpwsEgressBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 1),
    _PmTcaVpwsEgressBytes15mIndex_Type()
)
pmTcaVpwsEgressBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mIndex.setStatus("current")
_PmTcaVpwsEgressBytes15mId_Type = OctetString
_PmTcaVpwsEgressBytes15mId_Object = MibTableColumn
pmTcaVpwsEgressBytes15mId = _PmTcaVpwsEgressBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 2),
    _PmTcaVpwsEgressBytes15mId_Type()
)
pmTcaVpwsEgressBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mId.setStatus("current")


class _PmTcaVpwsEgressBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressBytes15mUnitType_Object = MibTableColumn
pmTcaVpwsEgressBytes15mUnitType = _PmTcaVpwsEgressBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 3),
    _PmTcaVpwsEgressBytes15mUnitType_Type()
)
pmTcaVpwsEgressBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mUnitType.setStatus("current")
_PmTcaVpwsEgressBytes15mCnt_Type = Counter64
_PmTcaVpwsEgressBytes15mCnt_Object = MibTableColumn
pmTcaVpwsEgressBytes15mCnt = _PmTcaVpwsEgressBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 4),
    _PmTcaVpwsEgressBytes15mCnt_Type()
)
pmTcaVpwsEgressBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mCnt.setStatus("current")
_PmTcaVpwsEgressBytes15mThreshold_Type = Counter64
_PmTcaVpwsEgressBytes15mThreshold_Object = MibTableColumn
pmTcaVpwsEgressBytes15mThreshold = _PmTcaVpwsEgressBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 5),
    _PmTcaVpwsEgressBytes15mThreshold_Type()
)
pmTcaVpwsEgressBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mThreshold.setStatus("current")
_PmTcaVpwsEgressBytes15mOccurTime_Type = DateAndTime
_PmTcaVpwsEgressBytes15mOccurTime_Object = MibTableColumn
pmTcaVpwsEgressBytes15mOccurTime = _PmTcaVpwsEgressBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 16, 1, 6),
    _PmTcaVpwsEgressBytes15mOccurTime_Type()
)
pmTcaVpwsEgressBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes15mOccurTime.setStatus("current")
_PmTcaVpwsEgressBytes1hTable_Object = MibTable
pmTcaVpwsEgressBytes1hTable = _PmTcaVpwsEgressBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hTable.setStatus("current")
_PmTcaVpwsEgressBytes1hEntry_Object = MibTableRow
pmTcaVpwsEgressBytes1hEntry = _PmTcaVpwsEgressBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1)
)
pmTcaVpwsEgressBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hEntry.setStatus("current")
_PmTcaVpwsEgressBytes1hIndex_Type = Integer32
_PmTcaVpwsEgressBytes1hIndex_Object = MibTableColumn
pmTcaVpwsEgressBytes1hIndex = _PmTcaVpwsEgressBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 1),
    _PmTcaVpwsEgressBytes1hIndex_Type()
)
pmTcaVpwsEgressBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hIndex.setStatus("current")
_PmTcaVpwsEgressBytes1hId_Type = OctetString
_PmTcaVpwsEgressBytes1hId_Object = MibTableColumn
pmTcaVpwsEgressBytes1hId = _PmTcaVpwsEgressBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 2),
    _PmTcaVpwsEgressBytes1hId_Type()
)
pmTcaVpwsEgressBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hId.setStatus("current")


class _PmTcaVpwsEgressBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressBytes1hUnitType_Object = MibTableColumn
pmTcaVpwsEgressBytes1hUnitType = _PmTcaVpwsEgressBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 3),
    _PmTcaVpwsEgressBytes1hUnitType_Type()
)
pmTcaVpwsEgressBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hUnitType.setStatus("current")
_PmTcaVpwsEgressBytes1hCnt_Type = Counter64
_PmTcaVpwsEgressBytes1hCnt_Object = MibTableColumn
pmTcaVpwsEgressBytes1hCnt = _PmTcaVpwsEgressBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 4),
    _PmTcaVpwsEgressBytes1hCnt_Type()
)
pmTcaVpwsEgressBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hCnt.setStatus("current")
_PmTcaVpwsEgressBytes1hThreshold_Type = Counter64
_PmTcaVpwsEgressBytes1hThreshold_Object = MibTableColumn
pmTcaVpwsEgressBytes1hThreshold = _PmTcaVpwsEgressBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 5),
    _PmTcaVpwsEgressBytes1hThreshold_Type()
)
pmTcaVpwsEgressBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hThreshold.setStatus("current")
_PmTcaVpwsEgressBytes1hOccurTime_Type = DateAndTime
_PmTcaVpwsEgressBytes1hOccurTime_Object = MibTableColumn
pmTcaVpwsEgressBytes1hOccurTime = _PmTcaVpwsEgressBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 17, 1, 6),
    _PmTcaVpwsEgressBytes1hOccurTime_Type()
)
pmTcaVpwsEgressBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1hOccurTime.setStatus("current")
_PmTcaVpwsEgressBytes1dTable_Object = MibTable
pmTcaVpwsEgressBytes1dTable = _PmTcaVpwsEgressBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18)
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dTable.setStatus("current")
_PmTcaVpwsEgressBytes1dEntry_Object = MibTableRow
pmTcaVpwsEgressBytes1dEntry = _PmTcaVpwsEgressBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1)
)
pmTcaVpwsEgressBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVpwsEgressBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dEntry.setStatus("current")
_PmTcaVpwsEgressBytes1dIndex_Type = Integer32
_PmTcaVpwsEgressBytes1dIndex_Object = MibTableColumn
pmTcaVpwsEgressBytes1dIndex = _PmTcaVpwsEgressBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 1),
    _PmTcaVpwsEgressBytes1dIndex_Type()
)
pmTcaVpwsEgressBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dIndex.setStatus("current")
_PmTcaVpwsEgressBytes1dId_Type = OctetString
_PmTcaVpwsEgressBytes1dId_Object = MibTableColumn
pmTcaVpwsEgressBytes1dId = _PmTcaVpwsEgressBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 2),
    _PmTcaVpwsEgressBytes1dId_Type()
)
pmTcaVpwsEgressBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dId.setStatus("current")


class _PmTcaVpwsEgressBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaVpwsEgressBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVpwsEgressBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaVpwsEgressBytes1dUnitType_Object = MibTableColumn
pmTcaVpwsEgressBytes1dUnitType = _PmTcaVpwsEgressBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 3),
    _PmTcaVpwsEgressBytes1dUnitType_Type()
)
pmTcaVpwsEgressBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dUnitType.setStatus("current")
_PmTcaVpwsEgressBytes1dCnt_Type = Counter64
_PmTcaVpwsEgressBytes1dCnt_Object = MibTableColumn
pmTcaVpwsEgressBytes1dCnt = _PmTcaVpwsEgressBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 4),
    _PmTcaVpwsEgressBytes1dCnt_Type()
)
pmTcaVpwsEgressBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dCnt.setStatus("current")
_PmTcaVpwsEgressBytes1dThreshold_Type = Counter64
_PmTcaVpwsEgressBytes1dThreshold_Object = MibTableColumn
pmTcaVpwsEgressBytes1dThreshold = _PmTcaVpwsEgressBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 5),
    _PmTcaVpwsEgressBytes1dThreshold_Type()
)
pmTcaVpwsEgressBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dThreshold.setStatus("current")
_PmTcaVpwsEgressBytes1dOccurTime_Type = DateAndTime
_PmTcaVpwsEgressBytes1dOccurTime_Object = MibTableColumn
pmTcaVpwsEgressBytes1dOccurTime = _PmTcaVpwsEgressBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 105, 18, 1, 6),
    _PmTcaVpwsEgressBytes1dOccurTime_Type()
)
pmTcaVpwsEgressBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVpwsEgressBytes1dOccurTime.setStatus("current")
_PmVpls_ObjectIdentity = ObjectIdentity
pmVpls = _PmVpls_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106)
)
_PmVplsCurr15mTable_Object = MibTable
pmVplsCurr15mTable = _PmVplsCurr15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1)
)
if mibBuilder.loadTexts:
    pmVplsCurr15mTable.setStatus("current")
_PmVplsCurr15mEntry_Object = MibTableRow
pmVplsCurr15mEntry = _PmVplsCurr15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1)
)
pmVplsCurr15mEntry.setIndexNames(
    (0, "SWITCH", "pmVplsCurr15mIndex"),
)
if mibBuilder.loadTexts:
    pmVplsCurr15mEntry.setStatus("current")
_PmVplsCurr15mIndex_Type = Integer32
_PmVplsCurr15mIndex_Object = MibTableColumn
pmVplsCurr15mIndex = _PmVplsCurr15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 1),
    _PmVplsCurr15mIndex_Type()
)
pmVplsCurr15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsCurr15mIndex.setStatus("current")
_PmVplsCurr15mId_Type = OctetString
_PmVplsCurr15mId_Object = MibTableColumn
pmVplsCurr15mId = _PmVplsCurr15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 2),
    _PmVplsCurr15mId_Type()
)
pmVplsCurr15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mId.setStatus("current")


class _PmVplsCurr15mUnitType_Type(Integer32):
    """Custom type pmVplsCurr15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsCurr15mUnitType_Type.__name__ = "Integer32"
_PmVplsCurr15mUnitType_Object = MibTableColumn
pmVplsCurr15mUnitType = _PmVplsCurr15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 3),
    _PmVplsCurr15mUnitType_Type()
)
pmVplsCurr15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mUnitType.setStatus("current")
_PmVplsCurr15mIngressPkts_Type = Counter64
_PmVplsCurr15mIngressPkts_Object = MibTableColumn
pmVplsCurr15mIngressPkts = _PmVplsCurr15mIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 4),
    _PmVplsCurr15mIngressPkts_Type()
)
pmVplsCurr15mIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mIngressPkts.setStatus("current")
_PmVplsCurr15mIngressBytes_Type = Counter64
_PmVplsCurr15mIngressBytes_Object = MibTableColumn
pmVplsCurr15mIngressBytes = _PmVplsCurr15mIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 5),
    _PmVplsCurr15mIngressBytes_Type()
)
pmVplsCurr15mIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mIngressBytes.setStatus("current")
_PmVplsCurr15mEgressPkts_Type = Counter64
_PmVplsCurr15mEgressPkts_Object = MibTableColumn
pmVplsCurr15mEgressPkts = _PmVplsCurr15mEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 6),
    _PmVplsCurr15mEgressPkts_Type()
)
pmVplsCurr15mEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mEgressPkts.setStatus("current")
_PmVplsCurr15mEgressBytes_Type = Counter64
_PmVplsCurr15mEgressBytes_Object = MibTableColumn
pmVplsCurr15mEgressBytes = _PmVplsCurr15mEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 7),
    _PmVplsCurr15mEgressBytes_Type()
)
pmVplsCurr15mEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mEgressBytes.setStatus("current")
_PmVplsCurr15mStartTime_Type = DateAndTime
_PmVplsCurr15mStartTime_Object = MibTableColumn
pmVplsCurr15mStartTime = _PmVplsCurr15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 100),
    _PmVplsCurr15mStartTime_Type()
)
pmVplsCurr15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mStartTime.setStatus("current")
_PmVplsCurr15mStopTime_Type = DateAndTime
_PmVplsCurr15mStopTime_Object = MibTableColumn
pmVplsCurr15mStopTime = _PmVplsCurr15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 1, 1, 101),
    _PmVplsCurr15mStopTime_Type()
)
pmVplsCurr15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr15mStopTime.setStatus("current")
_PmVplsPrev15mTable_Object = MibTable
pmVplsPrev15mTable = _PmVplsPrev15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2)
)
if mibBuilder.loadTexts:
    pmVplsPrev15mTable.setStatus("current")
_PmVplsPrev15mEntry_Object = MibTableRow
pmVplsPrev15mEntry = _PmVplsPrev15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1)
)
pmVplsPrev15mEntry.setIndexNames(
    (0, "SWITCH", "pmVplsPrev15mIndex"),
)
if mibBuilder.loadTexts:
    pmVplsPrev15mEntry.setStatus("current")
_PmVplsPrev15mIndex_Type = Integer32
_PmVplsPrev15mIndex_Object = MibTableColumn
pmVplsPrev15mIndex = _PmVplsPrev15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 1),
    _PmVplsPrev15mIndex_Type()
)
pmVplsPrev15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsPrev15mIndex.setStatus("current")
_PmVplsPrev15mId_Type = OctetString
_PmVplsPrev15mId_Object = MibTableColumn
pmVplsPrev15mId = _PmVplsPrev15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 2),
    _PmVplsPrev15mId_Type()
)
pmVplsPrev15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mId.setStatus("current")


class _PmVplsPrev15mUnitType_Type(Integer32):
    """Custom type pmVplsPrev15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsPrev15mUnitType_Type.__name__ = "Integer32"
_PmVplsPrev15mUnitType_Object = MibTableColumn
pmVplsPrev15mUnitType = _PmVplsPrev15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 3),
    _PmVplsPrev15mUnitType_Type()
)
pmVplsPrev15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mUnitType.setStatus("current")
_PmVplsPrev15mIngressPkts_Type = Counter64
_PmVplsPrev15mIngressPkts_Object = MibTableColumn
pmVplsPrev15mIngressPkts = _PmVplsPrev15mIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 4),
    _PmVplsPrev15mIngressPkts_Type()
)
pmVplsPrev15mIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mIngressPkts.setStatus("current")
_PmVplsPrev15mIngressBytes_Type = Counter64
_PmVplsPrev15mIngressBytes_Object = MibTableColumn
pmVplsPrev15mIngressBytes = _PmVplsPrev15mIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 5),
    _PmVplsPrev15mIngressBytes_Type()
)
pmVplsPrev15mIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mIngressBytes.setStatus("current")
_PmVplsPrev15mEgressPkts_Type = Counter64
_PmVplsPrev15mEgressPkts_Object = MibTableColumn
pmVplsPrev15mEgressPkts = _PmVplsPrev15mEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 6),
    _PmVplsPrev15mEgressPkts_Type()
)
pmVplsPrev15mEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mEgressPkts.setStatus("current")
_PmVplsPrev15mEgressBytes_Type = Counter64
_PmVplsPrev15mEgressBytes_Object = MibTableColumn
pmVplsPrev15mEgressBytes = _PmVplsPrev15mEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 7),
    _PmVplsPrev15mEgressBytes_Type()
)
pmVplsPrev15mEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mEgressBytes.setStatus("current")
_PmVplsPrev15mStartTime_Type = DateAndTime
_PmVplsPrev15mStartTime_Object = MibTableColumn
pmVplsPrev15mStartTime = _PmVplsPrev15mStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 100),
    _PmVplsPrev15mStartTime_Type()
)
pmVplsPrev15mStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mStartTime.setStatus("current")
_PmVplsPrev15mStopTime_Type = DateAndTime
_PmVplsPrev15mStopTime_Object = MibTableColumn
pmVplsPrev15mStopTime = _PmVplsPrev15mStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 2, 1, 101),
    _PmVplsPrev15mStopTime_Type()
)
pmVplsPrev15mStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev15mStopTime.setStatus("current")
_PmVplsCurr1hTable_Object = MibTable
pmVplsCurr1hTable = _PmVplsCurr1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3)
)
if mibBuilder.loadTexts:
    pmVplsCurr1hTable.setStatus("current")
_PmVplsCurr1hEntry_Object = MibTableRow
pmVplsCurr1hEntry = _PmVplsCurr1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1)
)
pmVplsCurr1hEntry.setIndexNames(
    (0, "SWITCH", "pmVplsCurr1hIndex"),
)
if mibBuilder.loadTexts:
    pmVplsCurr1hEntry.setStatus("current")
_PmVplsCurr1hIndex_Type = Integer32
_PmVplsCurr1hIndex_Object = MibTableColumn
pmVplsCurr1hIndex = _PmVplsCurr1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 1),
    _PmVplsCurr1hIndex_Type()
)
pmVplsCurr1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsCurr1hIndex.setStatus("current")
_PmVplsCurr1hId_Type = OctetString
_PmVplsCurr1hId_Object = MibTableColumn
pmVplsCurr1hId = _PmVplsCurr1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 2),
    _PmVplsCurr1hId_Type()
)
pmVplsCurr1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hId.setStatus("current")


class _PmVplsCurr1hUnitType_Type(Integer32):
    """Custom type pmVplsCurr1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsCurr1hUnitType_Type.__name__ = "Integer32"
_PmVplsCurr1hUnitType_Object = MibTableColumn
pmVplsCurr1hUnitType = _PmVplsCurr1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 3),
    _PmVplsCurr1hUnitType_Type()
)
pmVplsCurr1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hUnitType.setStatus("current")
_PmVplsCurr1hIngressPkts_Type = Counter64
_PmVplsCurr1hIngressPkts_Object = MibTableColumn
pmVplsCurr1hIngressPkts = _PmVplsCurr1hIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 4),
    _PmVplsCurr1hIngressPkts_Type()
)
pmVplsCurr1hIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hIngressPkts.setStatus("current")
_PmVplsCurr1hIngressBytes_Type = Counter64
_PmVplsCurr1hIngressBytes_Object = MibTableColumn
pmVplsCurr1hIngressBytes = _PmVplsCurr1hIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 5),
    _PmVplsCurr1hIngressBytes_Type()
)
pmVplsCurr1hIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hIngressBytes.setStatus("current")
_PmVplsCurr1hEgressPkts_Type = Counter64
_PmVplsCurr1hEgressPkts_Object = MibTableColumn
pmVplsCurr1hEgressPkts = _PmVplsCurr1hEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 6),
    _PmVplsCurr1hEgressPkts_Type()
)
pmVplsCurr1hEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hEgressPkts.setStatus("current")
_PmVplsCurr1hEgressBytes_Type = Counter64
_PmVplsCurr1hEgressBytes_Object = MibTableColumn
pmVplsCurr1hEgressBytes = _PmVplsCurr1hEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 7),
    _PmVplsCurr1hEgressBytes_Type()
)
pmVplsCurr1hEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hEgressBytes.setStatus("current")
_PmVplsCurr1hStartTime_Type = DateAndTime
_PmVplsCurr1hStartTime_Object = MibTableColumn
pmVplsCurr1hStartTime = _PmVplsCurr1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 100),
    _PmVplsCurr1hStartTime_Type()
)
pmVplsCurr1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hStartTime.setStatus("current")
_PmVplsCurr1hStopTime_Type = DateAndTime
_PmVplsCurr1hStopTime_Object = MibTableColumn
pmVplsCurr1hStopTime = _PmVplsCurr1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 3, 1, 101),
    _PmVplsCurr1hStopTime_Type()
)
pmVplsCurr1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1hStopTime.setStatus("current")
_PmVplsPrev1hTable_Object = MibTable
pmVplsPrev1hTable = _PmVplsPrev1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4)
)
if mibBuilder.loadTexts:
    pmVplsPrev1hTable.setStatus("current")
_PmVplsPrev1hEntry_Object = MibTableRow
pmVplsPrev1hEntry = _PmVplsPrev1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1)
)
pmVplsPrev1hEntry.setIndexNames(
    (0, "SWITCH", "pmVplsPrev1hIndex"),
)
if mibBuilder.loadTexts:
    pmVplsPrev1hEntry.setStatus("current")
_PmVplsPrev1hIndex_Type = Integer32
_PmVplsPrev1hIndex_Object = MibTableColumn
pmVplsPrev1hIndex = _PmVplsPrev1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 1),
    _PmVplsPrev1hIndex_Type()
)
pmVplsPrev1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsPrev1hIndex.setStatus("current")
_PmVplsPrev1hId_Type = OctetString
_PmVplsPrev1hId_Object = MibTableColumn
pmVplsPrev1hId = _PmVplsPrev1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 2),
    _PmVplsPrev1hId_Type()
)
pmVplsPrev1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hId.setStatus("current")


class _PmVplsPrev1hUnitType_Type(Integer32):
    """Custom type pmVplsPrev1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsPrev1hUnitType_Type.__name__ = "Integer32"
_PmVplsPrev1hUnitType_Object = MibTableColumn
pmVplsPrev1hUnitType = _PmVplsPrev1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 3),
    _PmVplsPrev1hUnitType_Type()
)
pmVplsPrev1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hUnitType.setStatus("current")
_PmVplsPrev1hIngressPkts_Type = Counter64
_PmVplsPrev1hIngressPkts_Object = MibTableColumn
pmVplsPrev1hIngressPkts = _PmVplsPrev1hIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 4),
    _PmVplsPrev1hIngressPkts_Type()
)
pmVplsPrev1hIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hIngressPkts.setStatus("current")
_PmVplsPrev1hIngressBytes_Type = Counter64
_PmVplsPrev1hIngressBytes_Object = MibTableColumn
pmVplsPrev1hIngressBytes = _PmVplsPrev1hIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 5),
    _PmVplsPrev1hIngressBytes_Type()
)
pmVplsPrev1hIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hIngressBytes.setStatus("current")
_PmVplsPrev1hEgressPkts_Type = Counter64
_PmVplsPrev1hEgressPkts_Object = MibTableColumn
pmVplsPrev1hEgressPkts = _PmVplsPrev1hEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 6),
    _PmVplsPrev1hEgressPkts_Type()
)
pmVplsPrev1hEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hEgressPkts.setStatus("current")
_PmVplsPrev1hEgressBytes_Type = Counter64
_PmVplsPrev1hEgressBytes_Object = MibTableColumn
pmVplsPrev1hEgressBytes = _PmVplsPrev1hEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 7),
    _PmVplsPrev1hEgressBytes_Type()
)
pmVplsPrev1hEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hEgressBytes.setStatus("current")
_PmVplsPrev1hStartTime_Type = DateAndTime
_PmVplsPrev1hStartTime_Object = MibTableColumn
pmVplsPrev1hStartTime = _PmVplsPrev1hStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 100),
    _PmVplsPrev1hStartTime_Type()
)
pmVplsPrev1hStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hStartTime.setStatus("current")
_PmVplsPrev1hStopTime_Type = DateAndTime
_PmVplsPrev1hStopTime_Object = MibTableColumn
pmVplsPrev1hStopTime = _PmVplsPrev1hStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 4, 1, 101),
    _PmVplsPrev1hStopTime_Type()
)
pmVplsPrev1hStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1hStopTime.setStatus("current")
_PmVplsCurr1dTable_Object = MibTable
pmVplsCurr1dTable = _PmVplsCurr1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5)
)
if mibBuilder.loadTexts:
    pmVplsCurr1dTable.setStatus("current")
_PmVplsCurr1dEntry_Object = MibTableRow
pmVplsCurr1dEntry = _PmVplsCurr1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1)
)
pmVplsCurr1dEntry.setIndexNames(
    (0, "SWITCH", "pmVplsCurr1dIndex"),
)
if mibBuilder.loadTexts:
    pmVplsCurr1dEntry.setStatus("current")
_PmVplsCurr1dIndex_Type = Integer32
_PmVplsCurr1dIndex_Object = MibTableColumn
pmVplsCurr1dIndex = _PmVplsCurr1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 1),
    _PmVplsCurr1dIndex_Type()
)
pmVplsCurr1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsCurr1dIndex.setStatus("current")
_PmVplsCurr1dId_Type = OctetString
_PmVplsCurr1dId_Object = MibTableColumn
pmVplsCurr1dId = _PmVplsCurr1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 2),
    _PmVplsCurr1dId_Type()
)
pmVplsCurr1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dId.setStatus("current")


class _PmVplsCurr1dUnitType_Type(Integer32):
    """Custom type pmVplsCurr1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsCurr1dUnitType_Type.__name__ = "Integer32"
_PmVplsCurr1dUnitType_Object = MibTableColumn
pmVplsCurr1dUnitType = _PmVplsCurr1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 3),
    _PmVplsCurr1dUnitType_Type()
)
pmVplsCurr1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dUnitType.setStatus("current")
_PmVplsCurr1dIngressPkts_Type = Counter64
_PmVplsCurr1dIngressPkts_Object = MibTableColumn
pmVplsCurr1dIngressPkts = _PmVplsCurr1dIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 4),
    _PmVplsCurr1dIngressPkts_Type()
)
pmVplsCurr1dIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dIngressPkts.setStatus("current")
_PmVplsCurr1dIngressBytes_Type = Counter64
_PmVplsCurr1dIngressBytes_Object = MibTableColumn
pmVplsCurr1dIngressBytes = _PmVplsCurr1dIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 5),
    _PmVplsCurr1dIngressBytes_Type()
)
pmVplsCurr1dIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dIngressBytes.setStatus("current")
_PmVplsCurr1dEgressPkts_Type = Counter64
_PmVplsCurr1dEgressPkts_Object = MibTableColumn
pmVplsCurr1dEgressPkts = _PmVplsCurr1dEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 6),
    _PmVplsCurr1dEgressPkts_Type()
)
pmVplsCurr1dEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dEgressPkts.setStatus("current")
_PmVplsCurr1dEgressBytes_Type = Counter64
_PmVplsCurr1dEgressBytes_Object = MibTableColumn
pmVplsCurr1dEgressBytes = _PmVplsCurr1dEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 7),
    _PmVplsCurr1dEgressBytes_Type()
)
pmVplsCurr1dEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dEgressBytes.setStatus("current")
_PmVplsCurr1dStartTime_Type = DateAndTime
_PmVplsCurr1dStartTime_Object = MibTableColumn
pmVplsCurr1dStartTime = _PmVplsCurr1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 100),
    _PmVplsCurr1dStartTime_Type()
)
pmVplsCurr1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dStartTime.setStatus("current")
_PmVplsCurr1dStopTime_Type = DateAndTime
_PmVplsCurr1dStopTime_Object = MibTableColumn
pmVplsCurr1dStopTime = _PmVplsCurr1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 5, 1, 101),
    _PmVplsCurr1dStopTime_Type()
)
pmVplsCurr1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsCurr1dStopTime.setStatus("current")
_PmVplsPrev1dTable_Object = MibTable
pmVplsPrev1dTable = _PmVplsPrev1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6)
)
if mibBuilder.loadTexts:
    pmVplsPrev1dTable.setStatus("current")
_PmVplsPrev1dEntry_Object = MibTableRow
pmVplsPrev1dEntry = _PmVplsPrev1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1)
)
pmVplsPrev1dEntry.setIndexNames(
    (0, "SWITCH", "pmVplsPrev1dIndex"),
)
if mibBuilder.loadTexts:
    pmVplsPrev1dEntry.setStatus("current")
_PmVplsPrev1dIndex_Type = Integer32
_PmVplsPrev1dIndex_Object = MibTableColumn
pmVplsPrev1dIndex = _PmVplsPrev1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 1),
    _PmVplsPrev1dIndex_Type()
)
pmVplsPrev1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmVplsPrev1dIndex.setStatus("current")
_PmVplsPrev1dId_Type = OctetString
_PmVplsPrev1dId_Object = MibTableColumn
pmVplsPrev1dId = _PmVplsPrev1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 2),
    _PmVplsPrev1dId_Type()
)
pmVplsPrev1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dId.setStatus("current")


class _PmVplsPrev1dUnitType_Type(Integer32):
    """Custom type pmVplsPrev1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmVplsPrev1dUnitType_Type.__name__ = "Integer32"
_PmVplsPrev1dUnitType_Object = MibTableColumn
pmVplsPrev1dUnitType = _PmVplsPrev1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 3),
    _PmVplsPrev1dUnitType_Type()
)
pmVplsPrev1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dUnitType.setStatus("current")
_PmVplsPrev1dIngressPkts_Type = Counter64
_PmVplsPrev1dIngressPkts_Object = MibTableColumn
pmVplsPrev1dIngressPkts = _PmVplsPrev1dIngressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 4),
    _PmVplsPrev1dIngressPkts_Type()
)
pmVplsPrev1dIngressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dIngressPkts.setStatus("current")
_PmVplsPrev1dIngressBytes_Type = Counter64
_PmVplsPrev1dIngressBytes_Object = MibTableColumn
pmVplsPrev1dIngressBytes = _PmVplsPrev1dIngressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 5),
    _PmVplsPrev1dIngressBytes_Type()
)
pmVplsPrev1dIngressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dIngressBytes.setStatus("current")
_PmVplsPrev1dEgressPkts_Type = Counter64
_PmVplsPrev1dEgressPkts_Object = MibTableColumn
pmVplsPrev1dEgressPkts = _PmVplsPrev1dEgressPkts_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 6),
    _PmVplsPrev1dEgressPkts_Type()
)
pmVplsPrev1dEgressPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dEgressPkts.setStatus("current")
_PmVplsPrev1dEgressBytes_Type = Counter64
_PmVplsPrev1dEgressBytes_Object = MibTableColumn
pmVplsPrev1dEgressBytes = _PmVplsPrev1dEgressBytes_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 7),
    _PmVplsPrev1dEgressBytes_Type()
)
pmVplsPrev1dEgressBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dEgressBytes.setStatus("current")
_PmVplsPrev1dStartTime_Type = DateAndTime
_PmVplsPrev1dStartTime_Object = MibTableColumn
pmVplsPrev1dStartTime = _PmVplsPrev1dStartTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 100),
    _PmVplsPrev1dStartTime_Type()
)
pmVplsPrev1dStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dStartTime.setStatus("current")
_PmVplsPrev1dStopTime_Type = DateAndTime
_PmVplsPrev1dStopTime_Object = MibTableColumn
pmVplsPrev1dStopTime = _PmVplsPrev1dStopTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 6, 1, 101),
    _PmVplsPrev1dStopTime_Type()
)
pmVplsPrev1dStopTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmVplsPrev1dStopTime.setStatus("current")
_PmTcaVplsIngressPkts15mTable_Object = MibTable
pmTcaVplsIngressPkts15mTable = _PmTcaVplsIngressPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mTable.setStatus("current")
_PmTcaVplsIngressPkts15mEntry_Object = MibTableRow
pmTcaVplsIngressPkts15mEntry = _PmTcaVplsIngressPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1)
)
pmTcaVplsIngressPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mEntry.setStatus("current")
_PmTcaVplsIngressPkts15mIndex_Type = Integer32
_PmTcaVplsIngressPkts15mIndex_Object = MibTableColumn
pmTcaVplsIngressPkts15mIndex = _PmTcaVplsIngressPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 1),
    _PmTcaVplsIngressPkts15mIndex_Type()
)
pmTcaVplsIngressPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mIndex.setStatus("current")
_PmTcaVplsIngressPkts15mId_Type = OctetString
_PmTcaVplsIngressPkts15mId_Object = MibTableColumn
pmTcaVplsIngressPkts15mId = _PmTcaVplsIngressPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 2),
    _PmTcaVplsIngressPkts15mId_Type()
)
pmTcaVplsIngressPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mId.setStatus("current")


class _PmTcaVplsIngressPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressPkts15mUnitType_Object = MibTableColumn
pmTcaVplsIngressPkts15mUnitType = _PmTcaVplsIngressPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 3),
    _PmTcaVplsIngressPkts15mUnitType_Type()
)
pmTcaVplsIngressPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mUnitType.setStatus("current")
_PmTcaVplsIngressPkts15mCnt_Type = Counter64
_PmTcaVplsIngressPkts15mCnt_Object = MibTableColumn
pmTcaVplsIngressPkts15mCnt = _PmTcaVplsIngressPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 4),
    _PmTcaVplsIngressPkts15mCnt_Type()
)
pmTcaVplsIngressPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mCnt.setStatus("current")
_PmTcaVplsIngressPkts15mThreshold_Type = Counter64
_PmTcaVplsIngressPkts15mThreshold_Object = MibTableColumn
pmTcaVplsIngressPkts15mThreshold = _PmTcaVplsIngressPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 5),
    _PmTcaVplsIngressPkts15mThreshold_Type()
)
pmTcaVplsIngressPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mThreshold.setStatus("current")
_PmTcaVplsIngressPkts15mOccurTime_Type = DateAndTime
_PmTcaVplsIngressPkts15mOccurTime_Object = MibTableColumn
pmTcaVplsIngressPkts15mOccurTime = _PmTcaVplsIngressPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 7, 1, 6),
    _PmTcaVplsIngressPkts15mOccurTime_Type()
)
pmTcaVplsIngressPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts15mOccurTime.setStatus("current")
_PmTcaVplsIngressPkts1hTable_Object = MibTable
pmTcaVplsIngressPkts1hTable = _PmTcaVplsIngressPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hTable.setStatus("current")
_PmTcaVplsIngressPkts1hEntry_Object = MibTableRow
pmTcaVplsIngressPkts1hEntry = _PmTcaVplsIngressPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1)
)
pmTcaVplsIngressPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hEntry.setStatus("current")
_PmTcaVplsIngressPkts1hIndex_Type = Integer32
_PmTcaVplsIngressPkts1hIndex_Object = MibTableColumn
pmTcaVplsIngressPkts1hIndex = _PmTcaVplsIngressPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 1),
    _PmTcaVplsIngressPkts1hIndex_Type()
)
pmTcaVplsIngressPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hIndex.setStatus("current")
_PmTcaVplsIngressPkts1hId_Type = OctetString
_PmTcaVplsIngressPkts1hId_Object = MibTableColumn
pmTcaVplsIngressPkts1hId = _PmTcaVplsIngressPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 2),
    _PmTcaVplsIngressPkts1hId_Type()
)
pmTcaVplsIngressPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hId.setStatus("current")


class _PmTcaVplsIngressPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressPkts1hUnitType_Object = MibTableColumn
pmTcaVplsIngressPkts1hUnitType = _PmTcaVplsIngressPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 3),
    _PmTcaVplsIngressPkts1hUnitType_Type()
)
pmTcaVplsIngressPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hUnitType.setStatus("current")
_PmTcaVplsIngressPkts1hCnt_Type = Counter64
_PmTcaVplsIngressPkts1hCnt_Object = MibTableColumn
pmTcaVplsIngressPkts1hCnt = _PmTcaVplsIngressPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 4),
    _PmTcaVplsIngressPkts1hCnt_Type()
)
pmTcaVplsIngressPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hCnt.setStatus("current")
_PmTcaVplsIngressPkts1hThreshold_Type = Counter64
_PmTcaVplsIngressPkts1hThreshold_Object = MibTableColumn
pmTcaVplsIngressPkts1hThreshold = _PmTcaVplsIngressPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 5),
    _PmTcaVplsIngressPkts1hThreshold_Type()
)
pmTcaVplsIngressPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hThreshold.setStatus("current")
_PmTcaVplsIngressPkts1hOccurTime_Type = DateAndTime
_PmTcaVplsIngressPkts1hOccurTime_Object = MibTableColumn
pmTcaVplsIngressPkts1hOccurTime = _PmTcaVplsIngressPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 8, 1, 6),
    _PmTcaVplsIngressPkts1hOccurTime_Type()
)
pmTcaVplsIngressPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1hOccurTime.setStatus("current")
_PmTcaVplsIngressPkts1dTable_Object = MibTable
pmTcaVplsIngressPkts1dTable = _PmTcaVplsIngressPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dTable.setStatus("current")
_PmTcaVplsIngressPkts1dEntry_Object = MibTableRow
pmTcaVplsIngressPkts1dEntry = _PmTcaVplsIngressPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1)
)
pmTcaVplsIngressPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dEntry.setStatus("current")
_PmTcaVplsIngressPkts1dIndex_Type = Integer32
_PmTcaVplsIngressPkts1dIndex_Object = MibTableColumn
pmTcaVplsIngressPkts1dIndex = _PmTcaVplsIngressPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 1),
    _PmTcaVplsIngressPkts1dIndex_Type()
)
pmTcaVplsIngressPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dIndex.setStatus("current")
_PmTcaVplsIngressPkts1dId_Type = OctetString
_PmTcaVplsIngressPkts1dId_Object = MibTableColumn
pmTcaVplsIngressPkts1dId = _PmTcaVplsIngressPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 2),
    _PmTcaVplsIngressPkts1dId_Type()
)
pmTcaVplsIngressPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dId.setStatus("current")


class _PmTcaVplsIngressPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressPkts1dUnitType_Object = MibTableColumn
pmTcaVplsIngressPkts1dUnitType = _PmTcaVplsIngressPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 3),
    _PmTcaVplsIngressPkts1dUnitType_Type()
)
pmTcaVplsIngressPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dUnitType.setStatus("current")
_PmTcaVplsIngressPkts1dCnt_Type = Counter64
_PmTcaVplsIngressPkts1dCnt_Object = MibTableColumn
pmTcaVplsIngressPkts1dCnt = _PmTcaVplsIngressPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 4),
    _PmTcaVplsIngressPkts1dCnt_Type()
)
pmTcaVplsIngressPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dCnt.setStatus("current")
_PmTcaVplsIngressPkts1dThreshold_Type = Counter64
_PmTcaVplsIngressPkts1dThreshold_Object = MibTableColumn
pmTcaVplsIngressPkts1dThreshold = _PmTcaVplsIngressPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 5),
    _PmTcaVplsIngressPkts1dThreshold_Type()
)
pmTcaVplsIngressPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dThreshold.setStatus("current")
_PmTcaVplsIngressPkts1dOccurTime_Type = DateAndTime
_PmTcaVplsIngressPkts1dOccurTime_Object = MibTableColumn
pmTcaVplsIngressPkts1dOccurTime = _PmTcaVplsIngressPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 9, 1, 6),
    _PmTcaVplsIngressPkts1dOccurTime_Type()
)
pmTcaVplsIngressPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressPkts1dOccurTime.setStatus("current")
_PmTcaVplsIngressBytes15mTable_Object = MibTable
pmTcaVplsIngressBytes15mTable = _PmTcaVplsIngressBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mTable.setStatus("current")
_PmTcaVplsIngressBytes15mEntry_Object = MibTableRow
pmTcaVplsIngressBytes15mEntry = _PmTcaVplsIngressBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1)
)
pmTcaVplsIngressBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mEntry.setStatus("current")
_PmTcaVplsIngressBytes15mIndex_Type = Integer32
_PmTcaVplsIngressBytes15mIndex_Object = MibTableColumn
pmTcaVplsIngressBytes15mIndex = _PmTcaVplsIngressBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 1),
    _PmTcaVplsIngressBytes15mIndex_Type()
)
pmTcaVplsIngressBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mIndex.setStatus("current")
_PmTcaVplsIngressBytes15mId_Type = OctetString
_PmTcaVplsIngressBytes15mId_Object = MibTableColumn
pmTcaVplsIngressBytes15mId = _PmTcaVplsIngressBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 2),
    _PmTcaVplsIngressBytes15mId_Type()
)
pmTcaVplsIngressBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mId.setStatus("current")


class _PmTcaVplsIngressBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressBytes15mUnitType_Object = MibTableColumn
pmTcaVplsIngressBytes15mUnitType = _PmTcaVplsIngressBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 3),
    _PmTcaVplsIngressBytes15mUnitType_Type()
)
pmTcaVplsIngressBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mUnitType.setStatus("current")
_PmTcaVplsIngressBytes15mCnt_Type = Counter64
_PmTcaVplsIngressBytes15mCnt_Object = MibTableColumn
pmTcaVplsIngressBytes15mCnt = _PmTcaVplsIngressBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 4),
    _PmTcaVplsIngressBytes15mCnt_Type()
)
pmTcaVplsIngressBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mCnt.setStatus("current")
_PmTcaVplsIngressBytes15mThreshold_Type = Counter64
_PmTcaVplsIngressBytes15mThreshold_Object = MibTableColumn
pmTcaVplsIngressBytes15mThreshold = _PmTcaVplsIngressBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 5),
    _PmTcaVplsIngressBytes15mThreshold_Type()
)
pmTcaVplsIngressBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mThreshold.setStatus("current")
_PmTcaVplsIngressBytes15mOccurTime_Type = DateAndTime
_PmTcaVplsIngressBytes15mOccurTime_Object = MibTableColumn
pmTcaVplsIngressBytes15mOccurTime = _PmTcaVplsIngressBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 10, 1, 6),
    _PmTcaVplsIngressBytes15mOccurTime_Type()
)
pmTcaVplsIngressBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes15mOccurTime.setStatus("current")
_PmTcaVplsIngressBytes1hTable_Object = MibTable
pmTcaVplsIngressBytes1hTable = _PmTcaVplsIngressBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hTable.setStatus("current")
_PmTcaVplsIngressBytes1hEntry_Object = MibTableRow
pmTcaVplsIngressBytes1hEntry = _PmTcaVplsIngressBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1)
)
pmTcaVplsIngressBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hEntry.setStatus("current")
_PmTcaVplsIngressBytes1hIndex_Type = Integer32
_PmTcaVplsIngressBytes1hIndex_Object = MibTableColumn
pmTcaVplsIngressBytes1hIndex = _PmTcaVplsIngressBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 1),
    _PmTcaVplsIngressBytes1hIndex_Type()
)
pmTcaVplsIngressBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hIndex.setStatus("current")
_PmTcaVplsIngressBytes1hId_Type = OctetString
_PmTcaVplsIngressBytes1hId_Object = MibTableColumn
pmTcaVplsIngressBytes1hId = _PmTcaVplsIngressBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 2),
    _PmTcaVplsIngressBytes1hId_Type()
)
pmTcaVplsIngressBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hId.setStatus("current")


class _PmTcaVplsIngressBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressBytes1hUnitType_Object = MibTableColumn
pmTcaVplsIngressBytes1hUnitType = _PmTcaVplsIngressBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 3),
    _PmTcaVplsIngressBytes1hUnitType_Type()
)
pmTcaVplsIngressBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hUnitType.setStatus("current")
_PmTcaVplsIngressBytes1hCnt_Type = Counter64
_PmTcaVplsIngressBytes1hCnt_Object = MibTableColumn
pmTcaVplsIngressBytes1hCnt = _PmTcaVplsIngressBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 4),
    _PmTcaVplsIngressBytes1hCnt_Type()
)
pmTcaVplsIngressBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hCnt.setStatus("current")
_PmTcaVplsIngressBytes1hThreshold_Type = Counter64
_PmTcaVplsIngressBytes1hThreshold_Object = MibTableColumn
pmTcaVplsIngressBytes1hThreshold = _PmTcaVplsIngressBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 5),
    _PmTcaVplsIngressBytes1hThreshold_Type()
)
pmTcaVplsIngressBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hThreshold.setStatus("current")
_PmTcaVplsIngressBytes1hOccurTime_Type = DateAndTime
_PmTcaVplsIngressBytes1hOccurTime_Object = MibTableColumn
pmTcaVplsIngressBytes1hOccurTime = _PmTcaVplsIngressBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 11, 1, 6),
    _PmTcaVplsIngressBytes1hOccurTime_Type()
)
pmTcaVplsIngressBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1hOccurTime.setStatus("current")
_PmTcaVplsIngressBytes1dTable_Object = MibTable
pmTcaVplsIngressBytes1dTable = _PmTcaVplsIngressBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12)
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dTable.setStatus("current")
_PmTcaVplsIngressBytes1dEntry_Object = MibTableRow
pmTcaVplsIngressBytes1dEntry = _PmTcaVplsIngressBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1)
)
pmTcaVplsIngressBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsIngressBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dEntry.setStatus("current")
_PmTcaVplsIngressBytes1dIndex_Type = Integer32
_PmTcaVplsIngressBytes1dIndex_Object = MibTableColumn
pmTcaVplsIngressBytes1dIndex = _PmTcaVplsIngressBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 1),
    _PmTcaVplsIngressBytes1dIndex_Type()
)
pmTcaVplsIngressBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dIndex.setStatus("current")
_PmTcaVplsIngressBytes1dId_Type = OctetString
_PmTcaVplsIngressBytes1dId_Object = MibTableColumn
pmTcaVplsIngressBytes1dId = _PmTcaVplsIngressBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 2),
    _PmTcaVplsIngressBytes1dId_Type()
)
pmTcaVplsIngressBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dId.setStatus("current")


class _PmTcaVplsIngressBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaVplsIngressBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsIngressBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaVplsIngressBytes1dUnitType_Object = MibTableColumn
pmTcaVplsIngressBytes1dUnitType = _PmTcaVplsIngressBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 3),
    _PmTcaVplsIngressBytes1dUnitType_Type()
)
pmTcaVplsIngressBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dUnitType.setStatus("current")
_PmTcaVplsIngressBytes1dCnt_Type = Counter64
_PmTcaVplsIngressBytes1dCnt_Object = MibTableColumn
pmTcaVplsIngressBytes1dCnt = _PmTcaVplsIngressBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 4),
    _PmTcaVplsIngressBytes1dCnt_Type()
)
pmTcaVplsIngressBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dCnt.setStatus("current")
_PmTcaVplsIngressBytes1dThreshold_Type = Counter64
_PmTcaVplsIngressBytes1dThreshold_Object = MibTableColumn
pmTcaVplsIngressBytes1dThreshold = _PmTcaVplsIngressBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 5),
    _PmTcaVplsIngressBytes1dThreshold_Type()
)
pmTcaVplsIngressBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dThreshold.setStatus("current")
_PmTcaVplsIngressBytes1dOccurTime_Type = DateAndTime
_PmTcaVplsIngressBytes1dOccurTime_Object = MibTableColumn
pmTcaVplsIngressBytes1dOccurTime = _PmTcaVplsIngressBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 12, 1, 6),
    _PmTcaVplsIngressBytes1dOccurTime_Type()
)
pmTcaVplsIngressBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsIngressBytes1dOccurTime.setStatus("current")
_PmTcaVplsEgressPkts15mTable_Object = MibTable
pmTcaVplsEgressPkts15mTable = _PmTcaVplsEgressPkts15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mTable.setStatus("current")
_PmTcaVplsEgressPkts15mEntry_Object = MibTableRow
pmTcaVplsEgressPkts15mEntry = _PmTcaVplsEgressPkts15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1)
)
pmTcaVplsEgressPkts15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressPkts15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mEntry.setStatus("current")
_PmTcaVplsEgressPkts15mIndex_Type = Integer32
_PmTcaVplsEgressPkts15mIndex_Object = MibTableColumn
pmTcaVplsEgressPkts15mIndex = _PmTcaVplsEgressPkts15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 1),
    _PmTcaVplsEgressPkts15mIndex_Type()
)
pmTcaVplsEgressPkts15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mIndex.setStatus("current")
_PmTcaVplsEgressPkts15mId_Type = OctetString
_PmTcaVplsEgressPkts15mId_Object = MibTableColumn
pmTcaVplsEgressPkts15mId = _PmTcaVplsEgressPkts15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 2),
    _PmTcaVplsEgressPkts15mId_Type()
)
pmTcaVplsEgressPkts15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mId.setStatus("current")


class _PmTcaVplsEgressPkts15mUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressPkts15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressPkts15mUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressPkts15mUnitType_Object = MibTableColumn
pmTcaVplsEgressPkts15mUnitType = _PmTcaVplsEgressPkts15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 3),
    _PmTcaVplsEgressPkts15mUnitType_Type()
)
pmTcaVplsEgressPkts15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mUnitType.setStatus("current")
_PmTcaVplsEgressPkts15mCnt_Type = Counter64
_PmTcaVplsEgressPkts15mCnt_Object = MibTableColumn
pmTcaVplsEgressPkts15mCnt = _PmTcaVplsEgressPkts15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 4),
    _PmTcaVplsEgressPkts15mCnt_Type()
)
pmTcaVplsEgressPkts15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mCnt.setStatus("current")
_PmTcaVplsEgressPkts15mThreshold_Type = Counter64
_PmTcaVplsEgressPkts15mThreshold_Object = MibTableColumn
pmTcaVplsEgressPkts15mThreshold = _PmTcaVplsEgressPkts15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 5),
    _PmTcaVplsEgressPkts15mThreshold_Type()
)
pmTcaVplsEgressPkts15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mThreshold.setStatus("current")
_PmTcaVplsEgressPkts15mOccurTime_Type = DateAndTime
_PmTcaVplsEgressPkts15mOccurTime_Object = MibTableColumn
pmTcaVplsEgressPkts15mOccurTime = _PmTcaVplsEgressPkts15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 13, 1, 6),
    _PmTcaVplsEgressPkts15mOccurTime_Type()
)
pmTcaVplsEgressPkts15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts15mOccurTime.setStatus("current")
_PmTcaVplsEgressPkts1hTable_Object = MibTable
pmTcaVplsEgressPkts1hTable = _PmTcaVplsEgressPkts1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hTable.setStatus("current")
_PmTcaVplsEgressPkts1hEntry_Object = MibTableRow
pmTcaVplsEgressPkts1hEntry = _PmTcaVplsEgressPkts1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1)
)
pmTcaVplsEgressPkts1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressPkts1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hEntry.setStatus("current")
_PmTcaVplsEgressPkts1hIndex_Type = Integer32
_PmTcaVplsEgressPkts1hIndex_Object = MibTableColumn
pmTcaVplsEgressPkts1hIndex = _PmTcaVplsEgressPkts1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 1),
    _PmTcaVplsEgressPkts1hIndex_Type()
)
pmTcaVplsEgressPkts1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hIndex.setStatus("current")
_PmTcaVplsEgressPkts1hId_Type = OctetString
_PmTcaVplsEgressPkts1hId_Object = MibTableColumn
pmTcaVplsEgressPkts1hId = _PmTcaVplsEgressPkts1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 2),
    _PmTcaVplsEgressPkts1hId_Type()
)
pmTcaVplsEgressPkts1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hId.setStatus("current")


class _PmTcaVplsEgressPkts1hUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressPkts1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressPkts1hUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressPkts1hUnitType_Object = MibTableColumn
pmTcaVplsEgressPkts1hUnitType = _PmTcaVplsEgressPkts1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 3),
    _PmTcaVplsEgressPkts1hUnitType_Type()
)
pmTcaVplsEgressPkts1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hUnitType.setStatus("current")
_PmTcaVplsEgressPkts1hCnt_Type = Counter64
_PmTcaVplsEgressPkts1hCnt_Object = MibTableColumn
pmTcaVplsEgressPkts1hCnt = _PmTcaVplsEgressPkts1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 4),
    _PmTcaVplsEgressPkts1hCnt_Type()
)
pmTcaVplsEgressPkts1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hCnt.setStatus("current")
_PmTcaVplsEgressPkts1hThreshold_Type = Counter64
_PmTcaVplsEgressPkts1hThreshold_Object = MibTableColumn
pmTcaVplsEgressPkts1hThreshold = _PmTcaVplsEgressPkts1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 5),
    _PmTcaVplsEgressPkts1hThreshold_Type()
)
pmTcaVplsEgressPkts1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hThreshold.setStatus("current")
_PmTcaVplsEgressPkts1hOccurTime_Type = DateAndTime
_PmTcaVplsEgressPkts1hOccurTime_Object = MibTableColumn
pmTcaVplsEgressPkts1hOccurTime = _PmTcaVplsEgressPkts1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 14, 1, 6),
    _PmTcaVplsEgressPkts1hOccurTime_Type()
)
pmTcaVplsEgressPkts1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1hOccurTime.setStatus("current")
_PmTcaVplsEgressPkts1dTable_Object = MibTable
pmTcaVplsEgressPkts1dTable = _PmTcaVplsEgressPkts1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dTable.setStatus("current")
_PmTcaVplsEgressPkts1dEntry_Object = MibTableRow
pmTcaVplsEgressPkts1dEntry = _PmTcaVplsEgressPkts1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1)
)
pmTcaVplsEgressPkts1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressPkts1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dEntry.setStatus("current")
_PmTcaVplsEgressPkts1dIndex_Type = Integer32
_PmTcaVplsEgressPkts1dIndex_Object = MibTableColumn
pmTcaVplsEgressPkts1dIndex = _PmTcaVplsEgressPkts1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 1),
    _PmTcaVplsEgressPkts1dIndex_Type()
)
pmTcaVplsEgressPkts1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dIndex.setStatus("current")
_PmTcaVplsEgressPkts1dId_Type = OctetString
_PmTcaVplsEgressPkts1dId_Object = MibTableColumn
pmTcaVplsEgressPkts1dId = _PmTcaVplsEgressPkts1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 2),
    _PmTcaVplsEgressPkts1dId_Type()
)
pmTcaVplsEgressPkts1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dId.setStatus("current")


class _PmTcaVplsEgressPkts1dUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressPkts1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressPkts1dUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressPkts1dUnitType_Object = MibTableColumn
pmTcaVplsEgressPkts1dUnitType = _PmTcaVplsEgressPkts1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 3),
    _PmTcaVplsEgressPkts1dUnitType_Type()
)
pmTcaVplsEgressPkts1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dUnitType.setStatus("current")
_PmTcaVplsEgressPkts1dCnt_Type = Counter64
_PmTcaVplsEgressPkts1dCnt_Object = MibTableColumn
pmTcaVplsEgressPkts1dCnt = _PmTcaVplsEgressPkts1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 4),
    _PmTcaVplsEgressPkts1dCnt_Type()
)
pmTcaVplsEgressPkts1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dCnt.setStatus("current")
_PmTcaVplsEgressPkts1dThreshold_Type = Counter64
_PmTcaVplsEgressPkts1dThreshold_Object = MibTableColumn
pmTcaVplsEgressPkts1dThreshold = _PmTcaVplsEgressPkts1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 5),
    _PmTcaVplsEgressPkts1dThreshold_Type()
)
pmTcaVplsEgressPkts1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dThreshold.setStatus("current")
_PmTcaVplsEgressPkts1dOccurTime_Type = DateAndTime
_PmTcaVplsEgressPkts1dOccurTime_Object = MibTableColumn
pmTcaVplsEgressPkts1dOccurTime = _PmTcaVplsEgressPkts1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 15, 1, 6),
    _PmTcaVplsEgressPkts1dOccurTime_Type()
)
pmTcaVplsEgressPkts1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressPkts1dOccurTime.setStatus("current")
_PmTcaVplsEgressBytes15mTable_Object = MibTable
pmTcaVplsEgressBytes15mTable = _PmTcaVplsEgressBytes15mTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mTable.setStatus("current")
_PmTcaVplsEgressBytes15mEntry_Object = MibTableRow
pmTcaVplsEgressBytes15mEntry = _PmTcaVplsEgressBytes15mEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1)
)
pmTcaVplsEgressBytes15mEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressBytes15mIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mEntry.setStatus("current")
_PmTcaVplsEgressBytes15mIndex_Type = Integer32
_PmTcaVplsEgressBytes15mIndex_Object = MibTableColumn
pmTcaVplsEgressBytes15mIndex = _PmTcaVplsEgressBytes15mIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 1),
    _PmTcaVplsEgressBytes15mIndex_Type()
)
pmTcaVplsEgressBytes15mIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mIndex.setStatus("current")
_PmTcaVplsEgressBytes15mId_Type = OctetString
_PmTcaVplsEgressBytes15mId_Object = MibTableColumn
pmTcaVplsEgressBytes15mId = _PmTcaVplsEgressBytes15mId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 2),
    _PmTcaVplsEgressBytes15mId_Type()
)
pmTcaVplsEgressBytes15mId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mId.setStatus("current")


class _PmTcaVplsEgressBytes15mUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressBytes15mUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressBytes15mUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressBytes15mUnitType_Object = MibTableColumn
pmTcaVplsEgressBytes15mUnitType = _PmTcaVplsEgressBytes15mUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 3),
    _PmTcaVplsEgressBytes15mUnitType_Type()
)
pmTcaVplsEgressBytes15mUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mUnitType.setStatus("current")
_PmTcaVplsEgressBytes15mCnt_Type = Counter64
_PmTcaVplsEgressBytes15mCnt_Object = MibTableColumn
pmTcaVplsEgressBytes15mCnt = _PmTcaVplsEgressBytes15mCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 4),
    _PmTcaVplsEgressBytes15mCnt_Type()
)
pmTcaVplsEgressBytes15mCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mCnt.setStatus("current")
_PmTcaVplsEgressBytes15mThreshold_Type = Counter64
_PmTcaVplsEgressBytes15mThreshold_Object = MibTableColumn
pmTcaVplsEgressBytes15mThreshold = _PmTcaVplsEgressBytes15mThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 5),
    _PmTcaVplsEgressBytes15mThreshold_Type()
)
pmTcaVplsEgressBytes15mThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mThreshold.setStatus("current")
_PmTcaVplsEgressBytes15mOccurTime_Type = DateAndTime
_PmTcaVplsEgressBytes15mOccurTime_Object = MibTableColumn
pmTcaVplsEgressBytes15mOccurTime = _PmTcaVplsEgressBytes15mOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 16, 1, 6),
    _PmTcaVplsEgressBytes15mOccurTime_Type()
)
pmTcaVplsEgressBytes15mOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes15mOccurTime.setStatus("current")
_PmTcaVplsEgressBytes1hTable_Object = MibTable
pmTcaVplsEgressBytes1hTable = _PmTcaVplsEgressBytes1hTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hTable.setStatus("current")
_PmTcaVplsEgressBytes1hEntry_Object = MibTableRow
pmTcaVplsEgressBytes1hEntry = _PmTcaVplsEgressBytes1hEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1)
)
pmTcaVplsEgressBytes1hEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressBytes1hIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hEntry.setStatus("current")
_PmTcaVplsEgressBytes1hIndex_Type = Integer32
_PmTcaVplsEgressBytes1hIndex_Object = MibTableColumn
pmTcaVplsEgressBytes1hIndex = _PmTcaVplsEgressBytes1hIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 1),
    _PmTcaVplsEgressBytes1hIndex_Type()
)
pmTcaVplsEgressBytes1hIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hIndex.setStatus("current")
_PmTcaVplsEgressBytes1hId_Type = OctetString
_PmTcaVplsEgressBytes1hId_Object = MibTableColumn
pmTcaVplsEgressBytes1hId = _PmTcaVplsEgressBytes1hId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 2),
    _PmTcaVplsEgressBytes1hId_Type()
)
pmTcaVplsEgressBytes1hId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hId.setStatus("current")


class _PmTcaVplsEgressBytes1hUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressBytes1hUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressBytes1hUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressBytes1hUnitType_Object = MibTableColumn
pmTcaVplsEgressBytes1hUnitType = _PmTcaVplsEgressBytes1hUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 3),
    _PmTcaVplsEgressBytes1hUnitType_Type()
)
pmTcaVplsEgressBytes1hUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hUnitType.setStatus("current")
_PmTcaVplsEgressBytes1hCnt_Type = Counter64
_PmTcaVplsEgressBytes1hCnt_Object = MibTableColumn
pmTcaVplsEgressBytes1hCnt = _PmTcaVplsEgressBytes1hCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 4),
    _PmTcaVplsEgressBytes1hCnt_Type()
)
pmTcaVplsEgressBytes1hCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hCnt.setStatus("current")
_PmTcaVplsEgressBytes1hThreshold_Type = Counter64
_PmTcaVplsEgressBytes1hThreshold_Object = MibTableColumn
pmTcaVplsEgressBytes1hThreshold = _PmTcaVplsEgressBytes1hThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 5),
    _PmTcaVplsEgressBytes1hThreshold_Type()
)
pmTcaVplsEgressBytes1hThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hThreshold.setStatus("current")
_PmTcaVplsEgressBytes1hOccurTime_Type = DateAndTime
_PmTcaVplsEgressBytes1hOccurTime_Object = MibTableColumn
pmTcaVplsEgressBytes1hOccurTime = _PmTcaVplsEgressBytes1hOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 17, 1, 6),
    _PmTcaVplsEgressBytes1hOccurTime_Type()
)
pmTcaVplsEgressBytes1hOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1hOccurTime.setStatus("current")
_PmTcaVplsEgressBytes1dTable_Object = MibTable
pmTcaVplsEgressBytes1dTable = _PmTcaVplsEgressBytes1dTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18)
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dTable.setStatus("current")
_PmTcaVplsEgressBytes1dEntry_Object = MibTableRow
pmTcaVplsEgressBytes1dEntry = _PmTcaVplsEgressBytes1dEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1)
)
pmTcaVplsEgressBytes1dEntry.setIndexNames(
    (0, "SWITCH", "pmTcaVplsEgressBytes1dIndex"),
)
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dEntry.setStatus("current")
_PmTcaVplsEgressBytes1dIndex_Type = Integer32
_PmTcaVplsEgressBytes1dIndex_Object = MibTableColumn
pmTcaVplsEgressBytes1dIndex = _PmTcaVplsEgressBytes1dIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 1),
    _PmTcaVplsEgressBytes1dIndex_Type()
)
pmTcaVplsEgressBytes1dIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dIndex.setStatus("current")
_PmTcaVplsEgressBytes1dId_Type = OctetString
_PmTcaVplsEgressBytes1dId_Object = MibTableColumn
pmTcaVplsEgressBytes1dId = _PmTcaVplsEgressBytes1dId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 2),
    _PmTcaVplsEgressBytes1dId_Type()
)
pmTcaVplsEgressBytes1dId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dId.setStatus("current")


class _PmTcaVplsEgressBytes1dUnitType_Type(Integer32):
    """Custom type pmTcaVplsEgressBytes1dUnitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("mcu", 0)
    )


_PmTcaVplsEgressBytes1dUnitType_Type.__name__ = "Integer32"
_PmTcaVplsEgressBytes1dUnitType_Object = MibTableColumn
pmTcaVplsEgressBytes1dUnitType = _PmTcaVplsEgressBytes1dUnitType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 3),
    _PmTcaVplsEgressBytes1dUnitType_Type()
)
pmTcaVplsEgressBytes1dUnitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dUnitType.setStatus("current")
_PmTcaVplsEgressBytes1dCnt_Type = Counter64
_PmTcaVplsEgressBytes1dCnt_Object = MibTableColumn
pmTcaVplsEgressBytes1dCnt = _PmTcaVplsEgressBytes1dCnt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 4),
    _PmTcaVplsEgressBytes1dCnt_Type()
)
pmTcaVplsEgressBytes1dCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dCnt.setStatus("current")
_PmTcaVplsEgressBytes1dThreshold_Type = Counter64
_PmTcaVplsEgressBytes1dThreshold_Object = MibTableColumn
pmTcaVplsEgressBytes1dThreshold = _PmTcaVplsEgressBytes1dThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 5),
    _PmTcaVplsEgressBytes1dThreshold_Type()
)
pmTcaVplsEgressBytes1dThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dThreshold.setStatus("current")
_PmTcaVplsEgressBytes1dOccurTime_Type = DateAndTime
_PmTcaVplsEgressBytes1dOccurTime_Object = MibTableColumn
pmTcaVplsEgressBytes1dOccurTime = _PmTcaVplsEgressBytes1dOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 90, 106, 18, 1, 6),
    _PmTcaVplsEgressBytes1dOccurTime_Type()
)
pmTcaVplsEgressBytes1dOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmTcaVplsEgressBytes1dOccurTime.setStatus("current")
_Alarm_ObjectIdentity = ObjectIdentity
alarm = _Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 91)
)
_AlarmOptionTable_Object = MibTable
alarmOptionTable = _AlarmOptionTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 1)
)
if mibBuilder.loadTexts:
    alarmOptionTable.setStatus("current")
_AlarmOptionEntry_Object = MibTableRow
alarmOptionEntry = _AlarmOptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 1, 1)
)
alarmOptionEntry.setIndexNames(
    (0, "SWITCH", "alarmOptionIndex"),
)
if mibBuilder.loadTexts:
    alarmOptionEntry.setStatus("current")


class _AlarmOptionIndex_Type(Integer32):
    """Custom type alarmOptionIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137)
        )
    )
    namedValues = NamedValues(
        *(("unit-out", 0),
          ("sfp-out", 1),
          ("link-down", 2),
          ("vpws-down", 3),
          ("vpls-down", 4),
          ("lsp-down", 5),
          ("mspw-down", 6),
          ("mem-usage-high", 7),
          ("mpls-tp-oam-loc", 8),
          ("mpls-tp-oam-unexp-rmepid", 9),
          ("mpls-tp-oam-unexp-interval", 10),
          ("mpls-tp-oam-unexp-megid", 11),
          ("mpls-tp-oam-unexp-level", 12),
          ("mpls-tp-oam-rdi", 13),
          ("mpls-tp-oam-rdi-tx", 14),
          ("mpls-tp-oam-ais-defect", 15),
          ("mpls-tp-oam-event-full", 16),
          ("mpls-tp-oam-1dm-full", 17),
          ("mpls-tp-oam-wait-1st-ccm", 18),
          ("mpls-tp-oam-ais-rx", 19),
          ("mpls-tp-oam-ais-tx", 20),
          ("tca-unit-temperature-min-15min", 21),
          ("tca-unit-temperature-min-1hour", 22),
          ("tca-unit-temperature-min-1day", 23),
          ("tca-unit-temperature-max-15min", 24),
          ("tca-unit-temperature-max-1hour", 25),
          ("tca-unit-temperature-max-1day", 26),
          ("tca-sfp-rx-power-min-15min", 27),
          ("tca-sfp-rx-power-min-1hour", 28),
          ("tca-sfp-rx-power-min-1day", 29),
          ("tca-sfp-rx-power-max-15min", 30),
          ("tca-sfp-rx-power-max-1hour", 31),
          ("tca-sfp-rx-power-max-1day", 32),
          ("tca-sfp-tx-power-min-15min", 33),
          ("tca-sfp-tx-power-min-1hour", 34),
          ("tca-sfp-tx-power-min-1day", 35),
          ("tca-sfp-tx-power-max-15min", 36),
          ("tca-sfp-tx-power-max-1hourn", 37),
          ("tca-sfp-tx-power-max-1day", 38),
          ("tca-if-dropped-events-15min", 39),
          ("tca-if-dropped-events-1hour", 40),
          ("tca-if-dropped-events-1day", 41),
          ("tca-if-input-packets-15min", 42),
          ("tca-if-input-packets-1hour", 43),
          ("tca-if-input-packets-1day", 44),
          ("tca-if-input-bytes-15min", 45),
          ("tca-if-input-bytes-1hour", 46),
          ("tca-if-input-bytes-1day", 47),
          ("tca-if-input-broadcasts-15min", 48),
          ("tca-if-input-broadcasts-1hour", 49),
          ("tca-if-input-broadcasts-1day", 50),
          ("tca-if-input-multicasts-15min", 51),
          ("tca-if-input-multicasts-1hour", 52),
          ("tca-if-input-multicasts-1day", 53),
          ("tca-if-crc-errors-15min", 54),
          ("tca-if-crc-errors-1hour", 55),
          ("tca-if-crc-errors-1day", 56),
          ("tca-if-collisions-15min", 57),
          ("tca-if-collisions-1hour", 58),
          ("tca-if-collisions-1day", 59),
          ("tca-if-undersized-packets-15min", 60),
          ("tca-if-undersized-packets-1hour", 61),
          ("tca-if-undersized-packets-1day", 62),
          ("tca-if-oversized-packets-15min", 63),
          ("tca-if-oversized-packets-1hour", 64),
          ("tca-if-oversized-packets-1day", 65),
          ("tca-if-fragments-15min", 66),
          ("tca-if-fragments-1hour", 67),
          ("tca-if-fragments-1day", 68),
          ("tca-if-jabbers-15min", 69),
          ("tca-if-jabbers-1hour", 70),
          ("tca-if-jabbers-1day", 71),
          ("tca-if-packet-64-15min", 72),
          ("tca-if-packet-64-1hour", 73),
          ("tca-if-packet-64-1day", 74),
          ("tca-if-packet-65-127-15min", 75),
          ("tca-if-packet-65-127-1hour", 76),
          ("tca-if-packet-65-127-1day", 77),
          ("tca-if-packet-128-255-15min", 78),
          ("tca-if-packet-128-255-1hour", 79),
          ("tca-if-packet-128-255-1day", 80),
          ("tca-if-packet-256-511-15min", 81),
          ("tca-if-packet-256-511-1hour", 82),
          ("tca-if-packet-256-511-1day", 83),
          ("tca-if-packet-512-1023-15min", 84),
          ("tca-if-packet-512-1023-1hour", 85),
          ("tca-if-packet-512-1023-1day", 86),
          ("tca-if-packet-1024-15min", 87),
          ("tca-if-packet-1024-1hour", 88),
          ("tca-if-packet-1024-1day", 89),
          ("tca-if-output-packets-15min", 90),
          ("tca-if-output-packets-1hour", 91),
          ("tca-if-output-packets-1day", 92),
          ("tca-if-output-bytes-15min", 93),
          ("tca-if-output-bytes-1hour", 94),
          ("tca-if-output-bytes-1day", 95),
          ("tca-lsp-pe-out-packets-15min", 96),
          ("tca-lsp-pe-out-packets-1hour", 97),
          ("tca-lsp-pe-out-packets-1day", 98),
          ("tca-lsp-pe-out-bytes-15min", 99),
          ("tca-lsp-pe-out-bytes-1hour", 100),
          ("tca-lsp-pe-out-bytes-1day", 101),
          ("tca-lsp-p-east-in-packets-15min", 102),
          ("tca-lsp-p-east-in-packets-1hour", 103),
          ("tca-lsp-p-east-in-packets-1day", 104),
          ("tca-lsp-p-east-in-bytes-15min", 105),
          ("tca-lsp-p-east-in-bytes-1hour", 106),
          ("tca-lsp-p-east-in-bytes-1day", 107),
          ("tca-lsp-p-west-in-packets-15min", 108),
          ("tca-lsp-p-west-in-packets-1hour", 109),
          ("tca-lsp-p-west-in-packets-1day", 110),
          ("tca-lsp-p-west-in-bytes-15min", 111),
          ("tca-lsp-p-west-in-bytes-1hour", 112),
          ("tca-lsp-p-west-in-bytes-1day", 113),
          ("tca-vpws-ingress-packets-15min", 114),
          ("tca-vpws-ingress-packets-1hour", 115),
          ("tca-vpws-ingress-packets-1day", 116),
          ("tca-vpws-ingress-bytes-15min", 117),
          ("tca-vpws-ingress-bytes-1hour", 118),
          ("tca-vpws-ingress-bytes-1day", 119),
          ("tca-vpws-egress-packets-15min", 120),
          ("tca-vpws-egress-packets-1hour", 121),
          ("tca-vpws-egress-packets-1day", 122),
          ("tca-vpws-egress-bytes-15min", 123),
          ("tca-vpws-egress-bytes-1hour", 124),
          ("tca-vpws-egress-bytes-1day", 125),
          ("tca-vpls-ingress-packets-15min", 126),
          ("tca-vpls-ingress-packets-1hour", 127),
          ("tca-vpls-ingress-packets-1day", 128),
          ("tca-vpls-ingress-bytes-15min", 129),
          ("tca-vpls-ingress-bytes-1hour", 130),
          ("tca-vpls-ingress-bytes-1day", 131),
          ("tca-vpls-egress-packets-15min", 132),
          ("tca-vpls-egress-packets-1hour", 133),
          ("tca-vpls-egress-packets-1day", 134),
          ("tca-vpls-egress-bytes-15min", 135),
          ("tca-vpls-egress-bytes-1hour", 136),
          ("tca-vpls-egress-bytes-1day", 137))
    )


_AlarmOptionIndex_Type.__name__ = "Integer32"
_AlarmOptionIndex_Object = MibTableColumn
alarmOptionIndex = _AlarmOptionIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 1, 1, 1),
    _AlarmOptionIndex_Type()
)
alarmOptionIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmOptionIndex.setStatus("current")


class _AlarmOptionSeverity_Type(Integer32):
    """Custom type alarmOptionSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("warning", 0),
          ("minor", 1),
          ("major", 2),
          ("critical", 3))
    )


_AlarmOptionSeverity_Type.__name__ = "Integer32"
_AlarmOptionSeverity_Object = MibTableColumn
alarmOptionSeverity = _AlarmOptionSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 1, 1, 2),
    _AlarmOptionSeverity_Type()
)
alarmOptionSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmOptionSeverity.setStatus("current")


class _AlarmOptionServiceAffect_Type(Integer32):
    """Custom type alarmOptionServiceAffect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("service-affected", 0),
          ("non-service-affected", 1))
    )


_AlarmOptionServiceAffect_Type.__name__ = "Integer32"
_AlarmOptionServiceAffect_Object = MibTableColumn
alarmOptionServiceAffect = _AlarmOptionServiceAffect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 1, 1, 3),
    _AlarmOptionServiceAffect_Type()
)
alarmOptionServiceAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmOptionServiceAffect.setStatus("current")
_AlarmLogTable_Object = MibTable
alarmLogTable = _AlarmLogTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2)
)
if mibBuilder.loadTexts:
    alarmLogTable.setStatus("current")
_AlarmLogEntry_Object = MibTableRow
alarmLogEntry = _AlarmLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1)
)
alarmLogEntry.setIndexNames(
    (0, "SWITCH", "alarmLogIndex"),
)
if mibBuilder.loadTexts:
    alarmLogEntry.setStatus("current")
_AlarmLogIndex_Type = Integer32
_AlarmLogIndex_Object = MibTableColumn
alarmLogIndex = _AlarmLogIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 1),
    _AlarmLogIndex_Type()
)
alarmLogIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmLogIndex.setStatus("current")


class _AlarmLogType_Type(Integer32):
    """Custom type alarmLogType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137)
        )
    )
    namedValues = NamedValues(
        *(("unit-out", 0),
          ("sfp-out", 1),
          ("link-down", 2),
          ("vpws-down", 3),
          ("vpls-down", 4),
          ("lsp-down", 5),
          ("mspw-down", 6),
          ("mem-usage-high", 7),
          ("mpls-tp-oam-loc", 8),
          ("mpls-tp-oam-unexp-rmepid", 9),
          ("mpls-tp-oam-unexp-interval", 10),
          ("mpls-tp-oam-unexp-megid", 11),
          ("mpls-tp-oam-unexp-level", 12),
          ("mpls-tp-oam-rdi", 13),
          ("mpls-tp-oam-rdi-tx", 14),
          ("mpls-tp-oam-ais-defect", 15),
          ("mpls-tp-oam-event-full", 16),
          ("mpls-tp-oam-1dm-full", 17),
          ("mpls-tp-oam-wait-1st-ccm", 18),
          ("mpls-tp-oam-ais-rx", 19),
          ("mpls-tp-oam-ais-tx", 20),
          ("tca-unit-temperature-min-15min", 21),
          ("tca-unit-temperature-min-1hour", 22),
          ("tca-unit-temperature-min-1day", 23),
          ("tca-unit-temperature-max-15min", 24),
          ("tca-unit-temperature-max-1hour", 25),
          ("tca-unit-temperature-max-1day", 26),
          ("tca-sfp-rx-power-min-15min", 27),
          ("tca-sfp-rx-power-min-1hour", 28),
          ("tca-sfp-rx-power-min-1day", 29),
          ("tca-sfp-rx-power-max-15min", 30),
          ("tca-sfp-rx-power-max-1hour", 31),
          ("tca-sfp-rx-power-max-1day", 32),
          ("tca-sfp-tx-power-min-15min", 33),
          ("tca-sfp-tx-power-min-1hour", 34),
          ("tca-sfp-tx-power-min-1day", 35),
          ("tca-sfp-tx-power-max-15min", 36),
          ("tca-sfp-tx-power-max-1hourn", 37),
          ("tca-sfp-tx-power-max-1day", 38),
          ("tca-if-dropped-events-15min", 39),
          ("tca-if-dropped-events-1hour", 40),
          ("tca-if-dropped-events-1day", 41),
          ("tca-if-input-packets-15min", 42),
          ("tca-if-input-packets-1hour", 43),
          ("tca-if-input-packets-1day", 44),
          ("tca-if-input-bytes-15min", 45),
          ("tca-if-input-bytes-1hour", 46),
          ("tca-if-input-bytes-1day", 47),
          ("tca-if-input-broadcasts-15min", 48),
          ("tca-if-input-broadcasts-1hour", 49),
          ("tca-if-input-broadcasts-1day", 50),
          ("tca-if-input-multicasts-15min", 51),
          ("tca-if-input-multicasts-1hour", 52),
          ("tca-if-input-multicasts-1day", 53),
          ("tca-if-crc-errors-15min", 54),
          ("tca-if-crc-errors-1hour", 55),
          ("tca-if-crc-errors-1day", 56),
          ("tca-if-collisions-15min", 57),
          ("tca-if-collisions-1hour", 58),
          ("tca-if-collisions-1day", 59),
          ("tca-if-undersized-packets-15min", 60),
          ("tca-if-undersized-packets-1hour", 61),
          ("tca-if-undersized-packets-1day", 62),
          ("tca-if-oversized-packets-15min", 63),
          ("tca-if-oversized-packets-1hour", 64),
          ("tca-if-oversized-packets-1day", 65),
          ("tca-if-fragments-15min", 66),
          ("tca-if-fragments-1hour", 67),
          ("tca-if-fragments-1day", 68),
          ("tca-if-jabbers-15min", 69),
          ("tca-if-jabbers-1hour", 70),
          ("tca-if-jabbers-1day", 71),
          ("tca-if-packet-64-15min", 72),
          ("tca-if-packet-64-1hour", 73),
          ("tca-if-packet-64-1day", 74),
          ("tca-if-packet-65-127-15min", 75),
          ("tca-if-packet-65-127-1hour", 76),
          ("tca-if-packet-65-127-1day", 77),
          ("tca-if-packet-128-255-15min", 78),
          ("tca-if-packet-128-255-1hour", 79),
          ("tca-if-packet-128-255-1day", 80),
          ("tca-if-packet-256-511-15min", 81),
          ("tca-if-packet-256-511-1hour", 82),
          ("tca-if-packet-256-511-1day", 83),
          ("tca-if-packet-512-1023-15min", 84),
          ("tca-if-packet-512-1023-1hour", 85),
          ("tca-if-packet-512-1023-1day", 86),
          ("tca-if-packet-1024-15min", 87),
          ("tca-if-packet-1024-1hour", 88),
          ("tca-if-packet-1024-1day", 89),
          ("tca-if-output-packets-15min", 90),
          ("tca-if-output-packets-1hour", 91),
          ("tca-if-output-packets-1day", 92),
          ("tca-if-output-bytes-15min", 93),
          ("tca-if-output-bytes-1hour", 94),
          ("tca-if-output-bytes-1day", 95),
          ("tca-lsp-pe-out-packets-15min", 96),
          ("tca-lsp-pe-out-packets-1hour", 97),
          ("tca-lsp-pe-out-packets-1day", 98),
          ("tca-lsp-pe-out-bytes-15min", 99),
          ("tca-lsp-pe-out-bytes-1hour", 100),
          ("tca-lsp-pe-out-bytes-1day", 101),
          ("tca-lsp-p-east-in-packets-15min", 102),
          ("tca-lsp-p-east-in-packets-1hour", 103),
          ("tca-lsp-p-east-in-packets-1day", 104),
          ("tca-lsp-p-east-in-bytes-15min", 105),
          ("tca-lsp-p-east-in-bytes-1hour", 106),
          ("tca-lsp-p-east-in-bytes-1day", 107),
          ("tca-lsp-p-west-in-packets-15min", 108),
          ("tca-lsp-p-west-in-packets-1hour", 109),
          ("tca-lsp-p-west-in-packets-1day", 110),
          ("tca-lsp-p-west-in-bytes-15min", 111),
          ("tca-lsp-p-west-in-bytes-1hour", 112),
          ("tca-lsp-p-west-in-bytes-1day", 113),
          ("tca-vpws-ingress-packets-15min", 114),
          ("tca-vpws-ingress-packets-1hour", 115),
          ("tca-vpws-ingress-packets-1day", 116),
          ("tca-vpws-ingress-bytes-15min", 117),
          ("tca-vpws-ingress-bytes-1hour", 118),
          ("tca-vpws-ingress-bytes-1day", 119),
          ("tca-vpws-egress-packets-15min", 120),
          ("tca-vpws-egress-packets-1hour", 121),
          ("tca-vpws-egress-packets-1day", 122),
          ("tca-vpws-egress-bytes-15min", 123),
          ("tca-vpws-egress-bytes-1hour", 124),
          ("tca-vpws-egress-bytes-1day", 125),
          ("tca-vpls-ingress-packets-15min", 126),
          ("tca-vpls-ingress-packets-1hour", 127),
          ("tca-vpls-ingress-packets-1day", 128),
          ("tca-vpls-ingress-bytes-15min", 129),
          ("tca-vpls-ingress-bytes-1hour", 130),
          ("tca-vpls-ingress-bytes-1day", 131),
          ("tca-vpls-egress-packets-15min", 132),
          ("tca-vpls-egress-packets-1hour", 133),
          ("tca-vpls-egress-packets-1day", 134),
          ("tca-vpls-egress-bytes-15min", 135),
          ("tca-vpls-egress-bytes-1hour", 136),
          ("tca-vpls-egress-bytes-1day", 137))
    )


_AlarmLogType_Type.__name__ = "Integer32"
_AlarmLogType_Object = MibTableColumn
alarmLogType = _AlarmLogType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 2),
    _AlarmLogType_Type()
)
alarmLogType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogType.setStatus("current")
_AlarmLogObject_Type = OctetString
_AlarmLogObject_Object = MibTableColumn
alarmLogObject = _AlarmLogObject_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 3),
    _AlarmLogObject_Type()
)
alarmLogObject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogObject.setStatus("current")


class _AlarmLogSeverity_Type(Integer32):
    """Custom type alarmLogSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("warning", 0),
          ("minor", 1),
          ("major", 2),
          ("critical", 3))
    )


_AlarmLogSeverity_Type.__name__ = "Integer32"
_AlarmLogSeverity_Object = MibTableColumn
alarmLogSeverity = _AlarmLogSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 4),
    _AlarmLogSeverity_Type()
)
alarmLogSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogSeverity.setStatus("current")


class _AlarmLogServiceAffect_Type(Integer32):
    """Custom type alarmLogServiceAffect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("service-affected", 0),
          ("not-service-affected", 1))
    )


_AlarmLogServiceAffect_Type.__name__ = "Integer32"
_AlarmLogServiceAffect_Object = MibTableColumn
alarmLogServiceAffect = _AlarmLogServiceAffect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 5),
    _AlarmLogServiceAffect_Type()
)
alarmLogServiceAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogServiceAffect.setStatus("current")
_AlarmLogAddInfo_Type = OctetString
_AlarmLogAddInfo_Object = MibTableColumn
alarmLogAddInfo = _AlarmLogAddInfo_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 6),
    _AlarmLogAddInfo_Type()
)
alarmLogAddInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogAddInfo.setStatus("current")
_AlarmLogOccurTime_Type = DateAndTime
_AlarmLogOccurTime_Object = MibTableColumn
alarmLogOccurTime = _AlarmLogOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 2, 1, 7),
    _AlarmLogOccurTime_Type()
)
alarmLogOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmLogOccurTime.setStatus("current")
_AlarmHistoryLogTable_Object = MibTable
alarmHistoryLogTable = _AlarmHistoryLogTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3)
)
if mibBuilder.loadTexts:
    alarmHistoryLogTable.setStatus("current")
_AlarmHistoryLogEntry_Object = MibTableRow
alarmHistoryLogEntry = _AlarmHistoryLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1)
)
alarmHistoryLogEntry.setIndexNames(
    (0, "SWITCH", "alarmHistoryLogIndex"),
)
if mibBuilder.loadTexts:
    alarmHistoryLogEntry.setStatus("current")
_AlarmHistoryLogIndex_Type = Integer32
_AlarmHistoryLogIndex_Object = MibTableColumn
alarmHistoryLogIndex = _AlarmHistoryLogIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 1),
    _AlarmHistoryLogIndex_Type()
)
alarmHistoryLogIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmHistoryLogIndex.setStatus("current")
_AlarmHistoryLogSeq_Type = Integer32
_AlarmHistoryLogSeq_Object = MibTableColumn
alarmHistoryLogSeq = _AlarmHistoryLogSeq_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 2),
    _AlarmHistoryLogSeq_Type()
)
alarmHistoryLogSeq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogSeq.setStatus("current")


class _AlarmHistoryLogType_Type(Integer32):
    """Custom type alarmHistoryLogType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137)
        )
    )
    namedValues = NamedValues(
        *(("unit-out", 0),
          ("sfp-out", 1),
          ("link-down", 2),
          ("vpws-down", 3),
          ("vpls-down", 4),
          ("lsp-down", 5),
          ("mspw-down", 6),
          ("mem-usage-high", 7),
          ("mpls-tp-oam-loc", 8),
          ("mpls-tp-oam-unexp-rmepid", 9),
          ("mpls-tp-oam-unexp-interval", 10),
          ("mpls-tp-oam-unexp-megid", 11),
          ("mpls-tp-oam-unexp-level", 12),
          ("mpls-tp-oam-rdi", 13),
          ("mpls-tp-oam-rdi-tx", 14),
          ("mpls-tp-oam-ais-defect", 15),
          ("mpls-tp-oam-event-full", 16),
          ("mpls-tp-oam-1dm-full", 17),
          ("mpls-tp-oam-wait-1st-ccm", 18),
          ("mpls-tp-oam-ais-rx", 19),
          ("mpls-tp-oam-ais-tx", 20),
          ("tca-unit-temperature-min-15min", 21),
          ("tca-unit-temperature-min-1hour", 22),
          ("tca-unit-temperature-min-1day", 23),
          ("tca-unit-temperature-max-15min", 24),
          ("tca-unit-temperature-max-1hour", 25),
          ("tca-unit-temperature-max-1day", 26),
          ("tca-sfp-rx-power-min-15min", 27),
          ("tca-sfp-rx-power-min-1hour", 28),
          ("tca-sfp-rx-power-min-1day", 29),
          ("tca-sfp-rx-power-max-15min", 30),
          ("tca-sfp-rx-power-max-1hour", 31),
          ("tca-sfp-rx-power-max-1day", 32),
          ("tca-sfp-tx-power-min-15min", 33),
          ("tca-sfp-tx-power-min-1hour", 34),
          ("tca-sfp-tx-power-min-1day", 35),
          ("tca-sfp-tx-power-max-15min", 36),
          ("tca-sfp-tx-power-max-1hourn", 37),
          ("tca-sfp-tx-power-max-1day", 38),
          ("tca-if-dropped-events-15min", 39),
          ("tca-if-dropped-events-1hour", 40),
          ("tca-if-dropped-events-1day", 41),
          ("tca-if-input-packets-15min", 42),
          ("tca-if-input-packets-1hour", 43),
          ("tca-if-input-packets-1day", 44),
          ("tca-if-input-bytes-15min", 45),
          ("tca-if-input-bytes-1hour", 46),
          ("tca-if-input-bytes-1day", 47),
          ("tca-if-input-broadcasts-15min", 48),
          ("tca-if-input-broadcasts-1hour", 49),
          ("tca-if-input-broadcasts-1day", 50),
          ("tca-if-input-multicasts-15min", 51),
          ("tca-if-input-multicasts-1hour", 52),
          ("tca-if-input-multicasts-1day", 53),
          ("tca-if-crc-errors-15min", 54),
          ("tca-if-crc-errors-1hour", 55),
          ("tca-if-crc-errors-1day", 56),
          ("tca-if-collisions-15min", 57),
          ("tca-if-collisions-1hour", 58),
          ("tca-if-collisions-1day", 59),
          ("tca-if-undersized-packets-15min", 60),
          ("tca-if-undersized-packets-1hour", 61),
          ("tca-if-undersized-packets-1day", 62),
          ("tca-if-oversized-packets-15min", 63),
          ("tca-if-oversized-packets-1hour", 64),
          ("tca-if-oversized-packets-1day", 65),
          ("tca-if-fragments-15min", 66),
          ("tca-if-fragments-1hour", 67),
          ("tca-if-fragments-1day", 68),
          ("tca-if-jabbers-15min", 69),
          ("tca-if-jabbers-1hour", 70),
          ("tca-if-jabbers-1day", 71),
          ("tca-if-packet-64-15min", 72),
          ("tca-if-packet-64-1hour", 73),
          ("tca-if-packet-64-1day", 74),
          ("tca-if-packet-65-127-15min", 75),
          ("tca-if-packet-65-127-1hour", 76),
          ("tca-if-packet-65-127-1day", 77),
          ("tca-if-packet-128-255-15min", 78),
          ("tca-if-packet-128-255-1hour", 79),
          ("tca-if-packet-128-255-1day", 80),
          ("tca-if-packet-256-511-15min", 81),
          ("tca-if-packet-256-511-1hour", 82),
          ("tca-if-packet-256-511-1day", 83),
          ("tca-if-packet-512-1023-15min", 84),
          ("tca-if-packet-512-1023-1hour", 85),
          ("tca-if-packet-512-1023-1day", 86),
          ("tca-if-packet-1024-15min", 87),
          ("tca-if-packet-1024-1hour", 88),
          ("tca-if-packet-1024-1day", 89),
          ("tca-if-output-packets-15min", 90),
          ("tca-if-output-packets-1hour", 91),
          ("tca-if-output-packets-1day", 92),
          ("tca-if-output-bytes-15min", 93),
          ("tca-if-output-bytes-1hour", 94),
          ("tca-if-output-bytes-1day", 95),
          ("tca-lsp-pe-out-packets-15min", 96),
          ("tca-lsp-pe-out-packets-1hour", 97),
          ("tca-lsp-pe-out-packets-1day", 98),
          ("tca-lsp-pe-out-bytes-15min", 99),
          ("tca-lsp-pe-out-bytes-1hour", 100),
          ("tca-lsp-pe-out-bytes-1day", 101),
          ("tca-lsp-p-east-in-packets-15min", 102),
          ("tca-lsp-p-east-in-packets-1hour", 103),
          ("tca-lsp-p-east-in-packets-1day", 104),
          ("tca-lsp-p-east-in-bytes-15min", 105),
          ("tca-lsp-p-east-in-bytes-1hour", 106),
          ("tca-lsp-p-east-in-bytes-1day", 107),
          ("tca-lsp-p-west-in-packets-15min", 108),
          ("tca-lsp-p-west-in-packets-1hour", 109),
          ("tca-lsp-p-west-in-packets-1day", 110),
          ("tca-lsp-p-west-in-bytes-15min", 111),
          ("tca-lsp-p-west-in-bytes-1hour", 112),
          ("tca-lsp-p-west-in-bytes-1day", 113),
          ("tca-vpws-ingress-packets-15min", 114),
          ("tca-vpws-ingress-packets-1hour", 115),
          ("tca-vpws-ingress-packets-1day", 116),
          ("tca-vpws-ingress-bytes-15min", 117),
          ("tca-vpws-ingress-bytes-1hour", 118),
          ("tca-vpws-ingress-bytes-1day", 119),
          ("tca-vpws-egress-packets-15min", 120),
          ("tca-vpws-egress-packets-1hour", 121),
          ("tca-vpws-egress-packets-1day", 122),
          ("tca-vpws-egress-bytes-15min", 123),
          ("tca-vpws-egress-bytes-1hour", 124),
          ("tca-vpws-egress-bytes-1day", 125),
          ("tca-vpls-ingress-packets-15min", 126),
          ("tca-vpls-ingress-packets-1hour", 127),
          ("tca-vpls-ingress-packets-1day", 128),
          ("tca-vpls-ingress-bytes-15min", 129),
          ("tca-vpls-ingress-bytes-1hour", 130),
          ("tca-vpls-ingress-bytes-1day", 131),
          ("tca-vpls-egress-packets-15min", 132),
          ("tca-vpls-egress-packets-1hour", 133),
          ("tca-vpls-egress-packets-1day", 134),
          ("tca-vpls-egress-bytes-15min", 135),
          ("tca-vpls-egress-bytes-1hour", 136),
          ("tca-vpls-egress-bytes-1day", 137))
    )


_AlarmHistoryLogType_Type.__name__ = "Integer32"
_AlarmHistoryLogType_Object = MibTableColumn
alarmHistoryLogType = _AlarmHistoryLogType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 3),
    _AlarmHistoryLogType_Type()
)
alarmHistoryLogType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogType.setStatus("current")
_AlarmHistoryLogObject_Type = OctetString
_AlarmHistoryLogObject_Object = MibTableColumn
alarmHistoryLogObject = _AlarmHistoryLogObject_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 4),
    _AlarmHistoryLogObject_Type()
)
alarmHistoryLogObject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogObject.setStatus("current")


class _AlarmHistoryLogSeverity_Type(Integer32):
    """Custom type alarmHistoryLogSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("warning", 0),
          ("minor", 1),
          ("major", 2),
          ("critical", 3))
    )


_AlarmHistoryLogSeverity_Type.__name__ = "Integer32"
_AlarmHistoryLogSeverity_Object = MibTableColumn
alarmHistoryLogSeverity = _AlarmHistoryLogSeverity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 5),
    _AlarmHistoryLogSeverity_Type()
)
alarmHistoryLogSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogSeverity.setStatus("current")


class _AlarmHistoryLogServiceAffect_Type(Integer32):
    """Custom type alarmHistoryLogServiceAffect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("service-affected", 0),
          ("not-service-affected", 1))
    )


_AlarmHistoryLogServiceAffect_Type.__name__ = "Integer32"
_AlarmHistoryLogServiceAffect_Object = MibTableColumn
alarmHistoryLogServiceAffect = _AlarmHistoryLogServiceAffect_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 6),
    _AlarmHistoryLogServiceAffect_Type()
)
alarmHistoryLogServiceAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogServiceAffect.setStatus("current")
_AlarmHistoryLogAddInfo_Type = OctetString
_AlarmHistoryLogAddInfo_Object = MibTableColumn
alarmHistoryLogAddInfo = _AlarmHistoryLogAddInfo_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 7),
    _AlarmHistoryLogAddInfo_Type()
)
alarmHistoryLogAddInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogAddInfo.setStatus("current")
_AlarmHistoryLogOccurTime_Type = DateAndTime
_AlarmHistoryLogOccurTime_Object = MibTableColumn
alarmHistoryLogOccurTime = _AlarmHistoryLogOccurTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 8),
    _AlarmHistoryLogOccurTime_Type()
)
alarmHistoryLogOccurTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogOccurTime.setStatus("current")
_AlarmHistoryLogReleaseTime_Type = DateAndTime
_AlarmHistoryLogReleaseTime_Object = MibTableColumn
alarmHistoryLogReleaseTime = _AlarmHistoryLogReleaseTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 3, 1, 9),
    _AlarmHistoryLogReleaseTime_Type()
)
alarmHistoryLogReleaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmHistoryLogReleaseTime.setStatus("current")


class _AlarmSwitchAlarm_Type(Integer32):
    """Custom type alarmSwitchAlarm based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AlarmSwitchAlarm_Type.__name__ = "Integer32"
_AlarmSwitchAlarm_Object = MibScalar
alarmSwitchAlarm = _AlarmSwitchAlarm_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 4),
    _AlarmSwitchAlarm_Type()
)
alarmSwitchAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSwitchAlarm.setStatus("current")


class _AlarmSwitchTca_Type(Integer32):
    """Custom type alarmSwitchTca based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_AlarmSwitchTca_Type.__name__ = "Integer32"
_AlarmSwitchTca_Object = MibScalar
alarmSwitchTca = _AlarmSwitchTca_Object(
    (1, 3, 6, 1, 4, 1, 27975, 91, 5),
    _AlarmSwitchTca_Type()
)
alarmSwitchTca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSwitchTca.setStatus("current")
_AlarmTrap_ObjectIdentity = ObjectIdentity
alarmTrap = _AlarmTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 91, 100)
)
_RsvpTe_ObjectIdentity = ObjectIdentity
rsvpTe = _RsvpTe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 92)
)
_RsvpTeIfTable_Object = MibTable
rsvpTeIfTable = _RsvpTeIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1)
)
if mibBuilder.loadTexts:
    rsvpTeIfTable.setStatus("current")
_RsvpTeIfEntry_Object = MibTableRow
rsvpTeIfEntry = _RsvpTeIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1)
)
rsvpTeIfEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    rsvpTeIfEntry.setStatus("current")


class _RsvpTeIfEnable_Type(Integer32):
    """Custom type rsvpTeIfEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeIfEnable_Type.__name__ = "Integer32"
_RsvpTeIfEnable_Object = MibTableColumn
rsvpTeIfEnable = _RsvpTeIfEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 1),
    _RsvpTeIfEnable_Type()
)
rsvpTeIfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfEnable.setStatus("current")


class _RsvpTeIfHelloInterval_Type(Integer32):
    """Custom type rsvpTeIfHelloInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeIfHelloInterval_Type.__name__ = "Integer32"
_RsvpTeIfHelloInterval_Object = MibTableColumn
rsvpTeIfHelloInterval = _RsvpTeIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 2),
    _RsvpTeIfHelloInterval_Type()
)
rsvpTeIfHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfHelloInterval.setStatus("current")


class _RsvpTeIfHelloReceipt_Type(Integer32):
    """Custom type rsvpTeIfHelloReceipt based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeIfHelloReceipt_Type.__name__ = "Integer32"
_RsvpTeIfHelloReceipt_Object = MibTableColumn
rsvpTeIfHelloReceipt = _RsvpTeIfHelloReceipt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 3),
    _RsvpTeIfHelloReceipt_Type()
)
rsvpTeIfHelloReceipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfHelloReceipt.setStatus("current")


class _RsvpTeIfHelloTimeout_Type(Integer32):
    """Custom type rsvpTeIfHelloTimeout based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeIfHelloTimeout_Type.__name__ = "Integer32"
_RsvpTeIfHelloTimeout_Object = MibTableColumn
rsvpTeIfHelloTimeout = _RsvpTeIfHelloTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 4),
    _RsvpTeIfHelloTimeout_Type()
)
rsvpTeIfHelloTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfHelloTimeout.setStatus("current")


class _RsvpTeIfKeepMultiplier_Type(Integer32):
    """Custom type rsvpTeIfKeepMultiplier based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_RsvpTeIfKeepMultiplier_Type.__name__ = "Integer32"
_RsvpTeIfKeepMultiplier_Object = MibTableColumn
rsvpTeIfKeepMultiplier = _RsvpTeIfKeepMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 5),
    _RsvpTeIfKeepMultiplier_Type()
)
rsvpTeIfKeepMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfKeepMultiplier.setStatus("current")


class _RsvpTeIfRefreshTime_Type(Integer32):
    """Custom type rsvpTeIfRefreshTime based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeIfRefreshTime_Type.__name__ = "Integer32"
_RsvpTeIfRefreshTime_Object = MibTableColumn
rsvpTeIfRefreshTime = _RsvpTeIfRefreshTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 6),
    _RsvpTeIfRefreshTime_Type()
)
rsvpTeIfRefreshTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeIfRefreshTime.setStatus("current")


class _RsvpTeAckWaitTime_Type(Integer32):
    """Custom type rsvpTeAckWaitTime based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeAckWaitTime_Type.__name__ = "Integer32"
_RsvpTeAckWaitTime_Object = MibTableColumn
rsvpTeAckWaitTime = _RsvpTeAckWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 7),
    _RsvpTeAckWaitTime_Type()
)
rsvpTeAckWaitTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeAckWaitTime.setStatus("current")


class _RsvpTeMessageAck_Type(Integer32):
    """Custom type rsvpTeMessageAck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeMessageAck_Type.__name__ = "Integer32"
_RsvpTeMessageAck_Object = MibTableColumn
rsvpTeMessageAck = _RsvpTeMessageAck_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 8),
    _RsvpTeMessageAck_Type()
)
rsvpTeMessageAck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeMessageAck.setStatus("current")


class _RsvpTeRefreshReduction_Type(Integer32):
    """Custom type rsvpTeRefreshReduction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeRefreshReduction_Type.__name__ = "Integer32"
_RsvpTeRefreshReduction_Object = MibTableColumn
rsvpTeRefreshReduction = _RsvpTeRefreshReduction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 1, 1, 9),
    _RsvpTeRefreshReduction_Type()
)
rsvpTeRefreshReduction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeRefreshReduction.setStatus("current")
_RsvpTeGlobal_ObjectIdentity = ObjectIdentity
rsvpTeGlobal = _RsvpTeGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2)
)


class _RsvpTeGlobalEnable_Type(Integer32):
    """Custom type rsvpTeGlobalEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeGlobalEnable_Type.__name__ = "Integer32"
_RsvpTeGlobalEnable_Object = MibScalar
rsvpTeGlobalEnable = _RsvpTeGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 1),
    _RsvpTeGlobalEnable_Type()
)
rsvpTeGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalEnable.setStatus("current")


class _RsvpTeGlobalExplicitNull_Type(Integer32):
    """Custom type rsvpTeGlobalExplicitNull based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("explicitNull", 1),
          ("noExplicitNull", 2))
    )


_RsvpTeGlobalExplicitNull_Type.__name__ = "Integer32"
_RsvpTeGlobalExplicitNull_Object = MibScalar
rsvpTeGlobalExplicitNull = _RsvpTeGlobalExplicitNull_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 2),
    _RsvpTeGlobalExplicitNull_Type()
)
rsvpTeGlobalExplicitNull.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalExplicitNull.setStatus("current")


class _RsvpTeGlobalHelloInterval_Type(Integer32):
    """Custom type rsvpTeGlobalHelloInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeGlobalHelloInterval_Type.__name__ = "Integer32"
_RsvpTeGlobalHelloInterval_Object = MibScalar
rsvpTeGlobalHelloInterval = _RsvpTeGlobalHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 3),
    _RsvpTeGlobalHelloInterval_Type()
)
rsvpTeGlobalHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalHelloInterval.setStatus("current")


class _RsvpTeGlobalHelloTimeout_Type(Integer32):
    """Custom type rsvpTeGlobalHelloTimeout based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeGlobalHelloTimeout_Type.__name__ = "Integer32"
_RsvpTeGlobalHelloTimeout_Object = MibScalar
rsvpTeGlobalHelloTimeout = _RsvpTeGlobalHelloTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 4),
    _RsvpTeGlobalHelloTimeout_Type()
)
rsvpTeGlobalHelloTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalHelloTimeout.setStatus("current")


class _RsvpTeGlobalKeepMultiplier_Type(Integer32):
    """Custom type rsvpTeGlobalKeepMultiplier based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RsvpTeGlobalKeepMultiplier_Type.__name__ = "Integer32"
_RsvpTeGlobalKeepMultiplier_Object = MibScalar
rsvpTeGlobalKeepMultiplier = _RsvpTeGlobalKeepMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 5),
    _RsvpTeGlobalKeepMultiplier_Type()
)
rsvpTeGlobalKeepMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalKeepMultiplier.setStatus("current")
_RsvpTeGlobalNeighborTable_Object = MibTable
rsvpTeGlobalNeighborTable = _RsvpTeGlobalNeighborTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6)
)
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborTable.setStatus("current")
_RsvpTeGlobalNeighborEntry_Object = MibTableRow
rsvpTeGlobalNeighborEntry = _RsvpTeGlobalNeighborEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1)
)
rsvpTeGlobalNeighborEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeGlobalNeighborAddr"),
)
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborEntry.setStatus("current")
_RsvpTeGlobalNeighborAddr_Type = IpAddress
_RsvpTeGlobalNeighborAddr_Object = MibTableColumn
rsvpTeGlobalNeighborAddr = _RsvpTeGlobalNeighborAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 1),
    _RsvpTeGlobalNeighborAddr_Type()
)
rsvpTeGlobalNeighborAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborAddr.setStatus("current")
_RsvpTeGlobalNeighborRowStatus_Type = RowStatus
_RsvpTeGlobalNeighborRowStatus_Object = MibTableColumn
rsvpTeGlobalNeighborRowStatus = _RsvpTeGlobalNeighborRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 2),
    _RsvpTeGlobalNeighborRowStatus_Type()
)
rsvpTeGlobalNeighborRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborRowStatus.setStatus("current")
_RsvpTeGlobalNeighborUpStrmLSP_Type = Integer32
_RsvpTeGlobalNeighborUpStrmLSP_Object = MibTableColumn
rsvpTeGlobalNeighborUpStrmLSP = _RsvpTeGlobalNeighborUpStrmLSP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 3),
    _RsvpTeGlobalNeighborUpStrmLSP_Type()
)
rsvpTeGlobalNeighborUpStrmLSP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborUpStrmLSP.setStatus("current")
_RsvpTeGlobalNeighborDnStrmLSP_Type = Integer32
_RsvpTeGlobalNeighborDnStrmLSP_Object = MibTableColumn
rsvpTeGlobalNeighborDnStrmLSP = _RsvpTeGlobalNeighborDnStrmLSP_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 4),
    _RsvpTeGlobalNeighborDnStrmLSP_Type()
)
rsvpTeGlobalNeighborDnStrmLSP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborDnStrmLSP.setStatus("current")


class _RsvpTeGlobalNeighborRefReduc_Type(Integer32):
    """Custom type rsvpTeGlobalNeighborRefReduc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeGlobalNeighborRefReduc_Type.__name__ = "Integer32"
_RsvpTeGlobalNeighborRefReduc_Object = MibTableColumn
rsvpTeGlobalNeighborRefReduc = _RsvpTeGlobalNeighborRefReduc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 5),
    _RsvpTeGlobalNeighborRefReduc_Type()
)
rsvpTeGlobalNeighborRefReduc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborRefReduc.setStatus("current")
_RsvpTeGlobalNeighborSrefreshIn_Type = Integer32
_RsvpTeGlobalNeighborSrefreshIn_Object = MibTableColumn
rsvpTeGlobalNeighborSrefreshIn = _RsvpTeGlobalNeighborSrefreshIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 6),
    _RsvpTeGlobalNeighborSrefreshIn_Type()
)
rsvpTeGlobalNeighborSrefreshIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborSrefreshIn.setStatus("current")


class _RsvpTeGlobalNeighborSrefreshType_Type(Integer32):
    """Custom type rsvpTeGlobalNeighborSrefreshType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("explicit", 1),
          ("implicit", 2))
    )


_RsvpTeGlobalNeighborSrefreshType_Type.__name__ = "Integer32"
_RsvpTeGlobalNeighborSrefreshType_Object = MibTableColumn
rsvpTeGlobalNeighborSrefreshType = _RsvpTeGlobalNeighborSrefreshType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 7),
    _RsvpTeGlobalNeighborSrefreshType_Type()
)
rsvpTeGlobalNeighborSrefreshType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborSrefreshType.setStatus("current")


class _RsvpTeGlobalNeighborHelloStat_Type(Integer32):
    """Custom type rsvpTeGlobalNeighborHelloStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("lost", 2))
    )


_RsvpTeGlobalNeighborHelloStat_Type.__name__ = "Integer32"
_RsvpTeGlobalNeighborHelloStat_Object = MibTableColumn
rsvpTeGlobalNeighborHelloStat = _RsvpTeGlobalNeighborHelloStat_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 6, 1, 8),
    _RsvpTeGlobalNeighborHelloStat_Type()
)
rsvpTeGlobalNeighborHelloStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalNeighborHelloStat.setStatus("current")


class _RsvpTeGlobalLoopDetection_Type(Integer32):
    """Custom type rsvpTeGlobalLoopDetection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeGlobalLoopDetection_Type.__name__ = "Integer32"
_RsvpTeGlobalLoopDetection_Object = MibScalar
rsvpTeGlobalLoopDetection = _RsvpTeGlobalLoopDetection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 7),
    _RsvpTeGlobalLoopDetection_Type()
)
rsvpTeGlobalLoopDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalLoopDetection.setStatus("current")


class _RsvpTeGlobalRefreshTime_Type(Integer32):
    """Custom type rsvpTeGlobalRefreshTime based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_RsvpTeGlobalRefreshTime_Type.__name__ = "Integer32"
_RsvpTeGlobalRefreshTime_Object = MibScalar
rsvpTeGlobalRefreshTime = _RsvpTeGlobalRefreshTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 8),
    _RsvpTeGlobalRefreshTime_Type()
)
rsvpTeGlobalRefreshTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalRefreshTime.setStatus("current")


class _RsvpTeGlobalReoptimizeTime_Type(Integer32):
    """Custom type rsvpTeGlobalReoptimizeTime based on Integer32"""
    defaultValue = 3600

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 655535),
    )


_RsvpTeGlobalReoptimizeTime_Type.__name__ = "Integer32"
_RsvpTeGlobalReoptimizeTime_Object = MibScalar
rsvpTeGlobalReoptimizeTime = _RsvpTeGlobalReoptimizeTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 9),
    _RsvpTeGlobalReoptimizeTime_Type()
)
rsvpTeGlobalReoptimizeTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeGlobalReoptimizeTime.setStatus("current")


class _RsvpTeGlobalVersion_Type(Integer32):
    """Custom type rsvpTeGlobalVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_RsvpTeGlobalVersion_Type.__name__ = "Integer32"
_RsvpTeGlobalVersion_Object = MibScalar
rsvpTeGlobalVersion = _RsvpTeGlobalVersion_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 10),
    _RsvpTeGlobalVersion_Type()
)
rsvpTeGlobalVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalVersion.setStatus("current")


class _RsvpTeGlobalProcessUpTime_Type(OctetString):
    """Custom type rsvpTeGlobalProcessUpTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 65535),
    )


_RsvpTeGlobalProcessUpTime_Type.__name__ = "OctetString"
_RsvpTeGlobalProcessUpTime_Object = MibScalar
rsvpTeGlobalProcessUpTime = _RsvpTeGlobalProcessUpTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 2, 11),
    _RsvpTeGlobalProcessUpTime_Type()
)
rsvpTeGlobalProcessUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeGlobalProcessUpTime.setStatus("current")
_RsvpTeTrunkTable_Object = MibTable
rsvpTeTrunkTable = _RsvpTeTrunkTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3)
)
if mibBuilder.loadTexts:
    rsvpTeTrunkTable.setStatus("current")
_RsvpTeTrunkEntry_Object = MibTableRow
rsvpTeTrunkEntry = _RsvpTeTrunkEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1)
)
rsvpTeTrunkEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeTrunkName"),
)
if mibBuilder.loadTexts:
    rsvpTeTrunkEntry.setStatus("current")


class _RsvpTeTrunkName_Type(OctetString):
    """Custom type rsvpTeTrunkName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RsvpTeTrunkName_Type.__name__ = "OctetString"
_RsvpTeTrunkName_Object = MibTableColumn
rsvpTeTrunkName = _RsvpTeTrunkName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 1),
    _RsvpTeTrunkName_Type()
)
rsvpTeTrunkName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeTrunkName.setStatus("current")
_RsvpTeTrunkRowStatus_Type = RowStatus
_RsvpTeTrunkRowStatus_Object = MibTableColumn
rsvpTeTrunkRowStatus = _RsvpTeTrunkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 2),
    _RsvpTeTrunkRowStatus_Type()
)
rsvpTeTrunkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTeTrunkRowStatus.setStatus("current")
_RsvpTeTrunkExtTunnelId_Type = IpAddress
_RsvpTeTrunkExtTunnelId_Object = MibTableColumn
rsvpTeTrunkExtTunnelId = _RsvpTeTrunkExtTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 3),
    _RsvpTeTrunkExtTunnelId_Type()
)
rsvpTeTrunkExtTunnelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkExtTunnelId.setStatus("current")


class _RsvpTeTrunkPrimaryFilter_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryFilter based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fixed", 1),
          ("shared-explicit", 2))
    )


_RsvpTeTrunkPrimaryFilter_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryFilter_Object = MibTableColumn
rsvpTeTrunkPrimaryFilter = _RsvpTeTrunkPrimaryFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 4),
    _RsvpTeTrunkPrimaryFilter_Type()
)
rsvpTeTrunkPrimaryFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryFilter.setStatus("current")


class _RsvpTeTrunkSecondaryFilter_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fixed", 1),
          ("shared-explicit", 2))
    )


_RsvpTeTrunkSecondaryFilter_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryFilter_Object = MibTableColumn
rsvpTeTrunkSecondaryFilter = _RsvpTeTrunkSecondaryFilter_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 5),
    _RsvpTeTrunkSecondaryFilter_Type()
)
rsvpTeTrunkSecondaryFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryFilter.setStatus("current")
_RsvpTeTrunkSource_Type = IpAddress
_RsvpTeTrunkSource_Object = MibTableColumn
rsvpTeTrunkSource = _RsvpTeTrunkSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 6),
    _RsvpTeTrunkSource_Type()
)
rsvpTeTrunkSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSource.setStatus("current")


class _RsvpTeTrunkPrimaryHoldPriority_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryHoldPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeTrunkPrimaryHoldPriority_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryHoldPriority_Object = MibTableColumn
rsvpTeTrunkPrimaryHoldPriority = _RsvpTeTrunkPrimaryHoldPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 7),
    _RsvpTeTrunkPrimaryHoldPriority_Type()
)
rsvpTeTrunkPrimaryHoldPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryHoldPriority.setStatus("current")


class _RsvpTeTrunkSecondaryHoldPriority_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryHoldPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeTrunkSecondaryHoldPriority_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryHoldPriority_Object = MibTableColumn
rsvpTeTrunkSecondaryHoldPriority = _RsvpTeTrunkSecondaryHoldPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 8),
    _RsvpTeTrunkSecondaryHoldPriority_Type()
)
rsvpTeTrunkSecondaryHoldPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryHoldPriority.setStatus("current")


class _RsvpTeTrunkPrimaryHopLimit_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryHopLimit based on Integer32"""
    defaultValue = 65

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RsvpTeTrunkPrimaryHopLimit_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryHopLimit_Object = MibTableColumn
rsvpTeTrunkPrimaryHopLimit = _RsvpTeTrunkPrimaryHopLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 9),
    _RsvpTeTrunkPrimaryHopLimit_Type()
)
rsvpTeTrunkPrimaryHopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryHopLimit.setStatus("current")


class _RsvpTeTrunkSecondaryHopLimit_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryHopLimit based on Integer32"""
    defaultValue = 65

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RsvpTeTrunkSecondaryHopLimit_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryHopLimit_Object = MibTableColumn
rsvpTeTrunkSecondaryHopLimit = _RsvpTeTrunkSecondaryHopLimit_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 10),
    _RsvpTeTrunkSecondaryHopLimit_Type()
)
rsvpTeTrunkSecondaryHopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryHopLimit.setStatus("current")


class _RsvpTeTrunkPrimaryCspf_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryCspf based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeTrunkPrimaryCspf_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryCspf_Object = MibTableColumn
rsvpTeTrunkPrimaryCspf = _RsvpTeTrunkPrimaryCspf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 11),
    _RsvpTeTrunkPrimaryCspf_Type()
)
rsvpTeTrunkPrimaryCspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryCspf.setStatus("current")


class _RsvpTeTrunkSecondaryCspf_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryCspf based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeTrunkSecondaryCspf_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryCspf_Object = MibTableColumn
rsvpTeTrunkSecondaryCspf = _RsvpTeTrunkSecondaryCspf_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 12),
    _RsvpTeTrunkSecondaryCspf_Type()
)
rsvpTeTrunkSecondaryCspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryCspf.setStatus("current")


class _RsvpTeTrunkPrimaryRecord_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryRecord based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeTrunkPrimaryRecord_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryRecord_Object = MibTableColumn
rsvpTeTrunkPrimaryRecord = _RsvpTeTrunkPrimaryRecord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 13),
    _RsvpTeTrunkPrimaryRecord_Type()
)
rsvpTeTrunkPrimaryRecord.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryRecord.setStatus("current")


class _RsvpTeTrunkSecondaryRecord_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryRecord based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeTrunkSecondaryRecord_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryRecord_Object = MibTableColumn
rsvpTeTrunkSecondaryRecord = _RsvpTeTrunkSecondaryRecord_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 14),
    _RsvpTeTrunkSecondaryRecord_Type()
)
rsvpTeTrunkSecondaryRecord.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryRecord.setStatus("current")


class _RsvpTeTrunkPrimaryPathName_Type(OctetString):
    """Custom type rsvpTeTrunkPrimaryPathName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RsvpTeTrunkPrimaryPathName_Type.__name__ = "OctetString"
_RsvpTeTrunkPrimaryPathName_Object = MibTableColumn
rsvpTeTrunkPrimaryPathName = _RsvpTeTrunkPrimaryPathName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 15),
    _RsvpTeTrunkPrimaryPathName_Type()
)
rsvpTeTrunkPrimaryPathName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryPathName.setStatus("current")


class _RsvpTeTrunkSecondaryPathName_Type(OctetString):
    """Custom type rsvpTeTrunkSecondaryPathName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_RsvpTeTrunkSecondaryPathName_Type.__name__ = "OctetString"
_RsvpTeTrunkSecondaryPathName_Object = MibTableColumn
rsvpTeTrunkSecondaryPathName = _RsvpTeTrunkSecondaryPathName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 16),
    _RsvpTeTrunkSecondaryPathName_Type()
)
rsvpTeTrunkSecondaryPathName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryPathName.setStatus("current")


class _RsvpTeTrunkPrimaryRetryTimer_Type(Integer32):
    """Custom type rsvpTeTrunkPrimaryRetryTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 600),
    )


_RsvpTeTrunkPrimaryRetryTimer_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimaryRetryTimer_Object = MibTableColumn
rsvpTeTrunkPrimaryRetryTimer = _RsvpTeTrunkPrimaryRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 17),
    _RsvpTeTrunkPrimaryRetryTimer_Type()
)
rsvpTeTrunkPrimaryRetryTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimaryRetryTimer.setStatus("current")


class _RsvpTeTrunkSecondaryRetryTimer_Type(Integer32):
    """Custom type rsvpTeTrunkSecondaryRetryTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 600),
    )


_RsvpTeTrunkSecondaryRetryTimer_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondaryRetryTimer_Object = MibTableColumn
rsvpTeTrunkSecondaryRetryTimer = _RsvpTeTrunkSecondaryRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 18),
    _RsvpTeTrunkSecondaryRetryTimer_Type()
)
rsvpTeTrunkSecondaryRetryTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondaryRetryTimer.setStatus("current")


class _RsvpTeTrunkPrimarySetupPriority_Type(Integer32):
    """Custom type rsvpTeTrunkPrimarySetupPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeTrunkPrimarySetupPriority_Type.__name__ = "Integer32"
_RsvpTeTrunkPrimarySetupPriority_Object = MibTableColumn
rsvpTeTrunkPrimarySetupPriority = _RsvpTeTrunkPrimarySetupPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 19),
    _RsvpTeTrunkPrimarySetupPriority_Type()
)
rsvpTeTrunkPrimarySetupPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkPrimarySetupPriority.setStatus("current")


class _RsvpTeTrunkSecondarySetupPriority_Type(Integer32):
    """Custom type rsvpTeTrunkSecondarySetupPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeTrunkSecondarySetupPriority_Type.__name__ = "Integer32"
_RsvpTeTrunkSecondarySetupPriority_Object = MibTableColumn
rsvpTeTrunkSecondarySetupPriority = _RsvpTeTrunkSecondarySetupPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 20),
    _RsvpTeTrunkSecondarySetupPriority_Type()
)
rsvpTeTrunkSecondarySetupPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkSecondarySetupPriority.setStatus("current")
_RsvpTeTrunkdestination_Type = IpAddress
_RsvpTeTrunkdestination_Object = MibTableColumn
rsvpTeTrunkdestination = _RsvpTeTrunkdestination_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 21),
    _RsvpTeTrunkdestination_Type()
)
rsvpTeTrunkdestination.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rsvpTeTrunkdestination.setStatus("current")
_RsvpTeTrunkLSPCount_Type = Integer32
_RsvpTeTrunkLSPCount_Object = MibTableColumn
rsvpTeTrunkLSPCount = _RsvpTeTrunkLSPCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 3, 1, 22),
    _RsvpTeTrunkLSPCount_Type()
)
rsvpTeTrunkLSPCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeTrunkLSPCount.setStatus("current")
_RsvpTeTrunkMapRouteTable_Object = MibTable
rsvpTeTrunkMapRouteTable = _RsvpTeTrunkMapRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 4)
)
if mibBuilder.loadTexts:
    rsvpTeTrunkMapRouteTable.setStatus("current")
_RsvpTeTrunkMapRouteEntry_Object = MibTableRow
rsvpTeTrunkMapRouteEntry = _RsvpTeTrunkMapRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 4, 1)
)
rsvpTeTrunkMapRouteEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeTrunkName"),
    (0, "SWITCH", "rsvpTeTrunkMapRouteIpAddr"),
    (0, "SWITCH", "rsvpTeTrunkMapRouteIpMaskLength"),
)
if mibBuilder.loadTexts:
    rsvpTeTrunkMapRouteEntry.setStatus("current")
_RsvpTeTrunkMapRouteIpAddr_Type = IpAddress
_RsvpTeTrunkMapRouteIpAddr_Object = MibTableColumn
rsvpTeTrunkMapRouteIpAddr = _RsvpTeTrunkMapRouteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 4, 1, 1),
    _RsvpTeTrunkMapRouteIpAddr_Type()
)
rsvpTeTrunkMapRouteIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeTrunkMapRouteIpAddr.setStatus("current")


class _RsvpTeTrunkMapRouteIpMaskLength_Type(Integer32):
    """Custom type rsvpTeTrunkMapRouteIpMaskLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_RsvpTeTrunkMapRouteIpMaskLength_Type.__name__ = "Integer32"
_RsvpTeTrunkMapRouteIpMaskLength_Object = MibTableColumn
rsvpTeTrunkMapRouteIpMaskLength = _RsvpTeTrunkMapRouteIpMaskLength_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 4, 1, 2),
    _RsvpTeTrunkMapRouteIpMaskLength_Type()
)
rsvpTeTrunkMapRouteIpMaskLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeTrunkMapRouteIpMaskLength.setStatus("current")
_RsvpTeTrunkMapRouteRowStatus_Type = RowStatus
_RsvpTeTrunkMapRouteRowStatus_Object = MibTableColumn
rsvpTeTrunkMapRouteRowStatus = _RsvpTeTrunkMapRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 4, 1, 3),
    _RsvpTeTrunkMapRouteRowStatus_Type()
)
rsvpTeTrunkMapRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTeTrunkMapRouteRowStatus.setStatus("current")
_RsvpTePathTable_Object = MibTable
rsvpTePathTable = _RsvpTePathTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 5)
)
if mibBuilder.loadTexts:
    rsvpTePathTable.setStatus("current")
_RsvpTePathEntry_Object = MibTableRow
rsvpTePathEntry = _RsvpTePathEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 5, 1)
)
rsvpTePathEntry.setIndexNames(
    (0, "SWITCH", "rsvpTePathName"),
)
if mibBuilder.loadTexts:
    rsvpTePathEntry.setStatus("current")
_RsvpTePathName_Type = OctetString
_RsvpTePathName_Object = MibTableColumn
rsvpTePathName = _RsvpTePathName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 5, 1, 1),
    _RsvpTePathName_Type()
)
rsvpTePathName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTePathName.setStatus("current")
_RsvpTePathRowStatus_Type = RowStatus
_RsvpTePathRowStatus_Object = MibTableColumn
rsvpTePathRowStatus = _RsvpTePathRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 5, 1, 2),
    _RsvpTePathRowStatus_Type()
)
rsvpTePathRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTePathRowStatus.setStatus("current")
_RsvpTePathHopTable_Object = MibTable
rsvpTePathHopTable = _RsvpTePathHopTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6)
)
if mibBuilder.loadTexts:
    rsvpTePathHopTable.setStatus("current")
_RsvpTePathHopEntry_Object = MibTableRow
rsvpTePathHopEntry = _RsvpTePathHopEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6, 1)
)
rsvpTePathHopEntry.setIndexNames(
    (0, "SWITCH", "rsvpTePathName"),
    (0, "SWITCH", "rsvpTePathHopAddrID"),
)
if mibBuilder.loadTexts:
    rsvpTePathHopEntry.setStatus("current")


class _RsvpTePathHopAddrID_Type(Integer32):
    """Custom type rsvpTePathHopAddrID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RsvpTePathHopAddrID_Type.__name__ = "Integer32"
_RsvpTePathHopAddrID_Object = MibTableColumn
rsvpTePathHopAddrID = _RsvpTePathHopAddrID_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6, 1, 1),
    _RsvpTePathHopAddrID_Type()
)
rsvpTePathHopAddrID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTePathHopAddrID.setStatus("current")


class _RsvpTePathHopAddrType_Type(Integer32):
    """Custom type rsvpTePathHopAddrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("loose", 1),
          ("strict", 2))
    )


_RsvpTePathHopAddrType_Type.__name__ = "Integer32"
_RsvpTePathHopAddrType_Object = MibTableColumn
rsvpTePathHopAddrType = _RsvpTePathHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6, 1, 2),
    _RsvpTePathHopAddrType_Type()
)
rsvpTePathHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTePathHopAddrType.setStatus("current")
_RsvpTePathHopAddr_Type = IpAddress
_RsvpTePathHopAddr_Object = MibTableColumn
rsvpTePathHopAddr = _RsvpTePathHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6, 1, 3),
    _RsvpTePathHopAddr_Type()
)
rsvpTePathHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTePathHopAddr.setStatus("current")
_RsvpTePathHopRowStatus_Type = RowStatus
_RsvpTePathHopRowStatus_Object = MibTableColumn
rsvpTePathHopRowStatus = _RsvpTePathHopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 6, 1, 4),
    _RsvpTePathHopRowStatus_Type()
)
rsvpTePathHopRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    rsvpTePathHopRowStatus.setStatus("current")
_RsvpTeSummary_ObjectIdentity = ObjectIdentity
rsvpTeSummary = _RsvpTeSummary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7)
)
_RsvpTeSummarySessionTatolCount_Type = Integer32
_RsvpTeSummarySessionTatolCount_Object = MibScalar
rsvpTeSummarySessionTatolCount = _RsvpTeSummarySessionTatolCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 1),
    _RsvpTeSummarySessionTatolCount_Type()
)
rsvpTeSummarySessionTatolCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTatolCount.setStatus("current")
_RsvpTeSummarySessionUpCount_Type = Integer32
_RsvpTeSummarySessionUpCount_Object = MibScalar
rsvpTeSummarySessionUpCount = _RsvpTeSummarySessionUpCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 2),
    _RsvpTeSummarySessionUpCount_Type()
)
rsvpTeSummarySessionUpCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionUpCount.setStatus("current")
_RsvpTeSummarySessionDownCount_Type = Integer32
_RsvpTeSummarySessionDownCount_Object = MibScalar
rsvpTeSummarySessionDownCount = _RsvpTeSummarySessionDownCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 3),
    _RsvpTeSummarySessionDownCount_Type()
)
rsvpTeSummarySessionDownCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionDownCount.setStatus("current")
_RsvpTeSummarySessionTable_Object = MibTable
rsvpTeSummarySessionTable = _RsvpTeSummarySessionTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4)
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTable.setStatus("current")
_RsvpTeSummarySessionEntry_Object = MibTableRow
rsvpTeSummarySessionEntry = _RsvpTeSummarySessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1)
)
rsvpTeSummarySessionEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeSummarySessionLSPId"),
    (0, "SWITCH", "rsvpTeSummarySessionSource"),
    (0, "SWITCH", "rsvpTeSummarySessionDestination"),
    (0, "SWITCH", "rsvpTeSummarySessionTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionExtTunnelId"),
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionEntry.setStatus("current")
_RsvpTeSummarySessionLSPId_Type = Integer32
_RsvpTeSummarySessionLSPId_Object = MibTableColumn
rsvpTeSummarySessionLSPId = _RsvpTeSummarySessionLSPId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 1),
    _RsvpTeSummarySessionLSPId_Type()
)
rsvpTeSummarySessionLSPId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLSPId.setStatus("current")
_RsvpTeSummarySessionSource_Type = IpAddress
_RsvpTeSummarySessionSource_Object = MibTableColumn
rsvpTeSummarySessionSource = _RsvpTeSummarySessionSource_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 2),
    _RsvpTeSummarySessionSource_Type()
)
rsvpTeSummarySessionSource.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionSource.setStatus("current")
_RsvpTeSummarySessionDestination_Type = IpAddress
_RsvpTeSummarySessionDestination_Object = MibTableColumn
rsvpTeSummarySessionDestination = _RsvpTeSummarySessionDestination_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 3),
    _RsvpTeSummarySessionDestination_Type()
)
rsvpTeSummarySessionDestination.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionDestination.setStatus("current")
_RsvpTeSummarySessionTunnelId_Type = Integer32
_RsvpTeSummarySessionTunnelId_Object = MibTableColumn
rsvpTeSummarySessionTunnelId = _RsvpTeSummarySessionTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 4),
    _RsvpTeSummarySessionTunnelId_Type()
)
rsvpTeSummarySessionTunnelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTunnelId.setStatus("current")
_RsvpTeSummarySessionExtTunnelId_Type = IpAddress
_RsvpTeSummarySessionExtTunnelId_Object = MibTableColumn
rsvpTeSummarySessionExtTunnelId = _RsvpTeSummarySessionExtTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 5),
    _RsvpTeSummarySessionExtTunnelId_Type()
)
rsvpTeSummarySessionExtTunnelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExtTunnelId.setStatus("current")
_RsvpTeSummarySessionTrunkName_Type = OctetString
_RsvpTeSummarySessionTrunkName_Object = MibTableColumn
rsvpTeSummarySessionTrunkName = _RsvpTeSummarySessionTrunkName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 6),
    _RsvpTeSummarySessionTrunkName_Type()
)
rsvpTeSummarySessionTrunkName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTrunkName.setStatus("current")


class _RsvpTeSummarySessionState_Type(Integer32):
    """Custom type rsvpTeSummarySessionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("up", 1),
          ("down", 2))
    )


_RsvpTeSummarySessionState_Type.__name__ = "Integer32"
_RsvpTeSummarySessionState_Object = MibTableColumn
rsvpTeSummarySessionState = _RsvpTeSummarySessionState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 7),
    _RsvpTeSummarySessionState_Type()
)
rsvpTeSummarySessionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionState.setStatus("current")


class _RsvpTeSummarySessionIsPrimary_Type(Integer32):
    """Custom type rsvpTeSummarySessionIsPrimary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("secondary", 2))
    )


_RsvpTeSummarySessionIsPrimary_Type.__name__ = "Integer32"
_RsvpTeSummarySessionIsPrimary_Object = MibTableColumn
rsvpTeSummarySessionIsPrimary = _RsvpTeSummarySessionIsPrimary_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 8),
    _RsvpTeSummarySessionIsPrimary_Type()
)
rsvpTeSummarySessionIsPrimary.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionIsPrimary.setStatus("current")


class _RsvpTeSummarySessionReserve_Type(Integer32):
    """Custom type rsvpTeSummarySessionReserve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeSummarySessionReserve_Type.__name__ = "Integer32"
_RsvpTeSummarySessionReserve_Object = MibTableColumn
rsvpTeSummarySessionReserve = _RsvpTeSummarySessionReserve_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 9),
    _RsvpTeSummarySessionReserve_Type()
)
rsvpTeSummarySessionReserve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionReserve.setStatus("current")
_RsvpTeSummarySessionRefCount_Type = Integer32
_RsvpTeSummarySessionRefCount_Object = MibTableColumn
rsvpTeSummarySessionRefCount = _RsvpTeSummarySessionRefCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 10),
    _RsvpTeSummarySessionRefCount_Type()
)
rsvpTeSummarySessionRefCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRefCount.setStatus("current")
_RsvpTeSummarySessionLabelIn_Type = Integer32
_RsvpTeSummarySessionLabelIn_Object = MibTableColumn
rsvpTeSummarySessionLabelIn = _RsvpTeSummarySessionLabelIn_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 11),
    _RsvpTeSummarySessionLabelIn_Type()
)
rsvpTeSummarySessionLabelIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLabelIn.setStatus("current")
_RsvpTeSummarySessionLabelOut_Type = Integer32
_RsvpTeSummarySessionLabelOut_Object = MibTableColumn
rsvpTeSummarySessionLabelOut = _RsvpTeSummarySessionLabelOut_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 12),
    _RsvpTeSummarySessionLabelOut_Type()
)
rsvpTeSummarySessionLabelOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLabelOut.setStatus("current")


class _RsvpTeSummarySessionType_Type(Integer32):
    """Custom type rsvpTeSummarySessionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ingress", 1),
          ("transmit", 2),
          ("egress", 3))
    )


_RsvpTeSummarySessionType_Type.__name__ = "Integer32"
_RsvpTeSummarySessionType_Object = MibTableColumn
rsvpTeSummarySessionType = _RsvpTeSummarySessionType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 13),
    _RsvpTeSummarySessionType_Type()
)
rsvpTeSummarySessionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionType.setStatus("current")


class _RsvpTeSummarySessionFSMState_Type(Integer32):
    """Custom type rsvpTeSummarySessionFSMState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("idle", 0),
          ("gmplsLabelValidateSent", 1),
          ("qosResvSentforReverseDir", 2),
          ("nexthopRequestSent", 3),
          ("waitingforRESVmessage", 4),
          ("labelRequestSent", 5),
          ("mplsMessageSent", 6),
          ("operational", 7),
          ("usingBackup", 8))
    )


_RsvpTeSummarySessionFSMState_Type.__name__ = "Integer32"
_RsvpTeSummarySessionFSMState_Object = MibTableColumn
rsvpTeSummarySessionFSMState = _RsvpTeSummarySessionFSMState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 14),
    _RsvpTeSummarySessionFSMState_Type()
)
rsvpTeSummarySessionFSMState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionFSMState.setStatus("current")


class _RsvpTeSummarySessionSetupPriority_Type(Integer32):
    """Custom type rsvpTeSummarySessionSetupPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeSummarySessionSetupPriority_Type.__name__ = "Integer32"
_RsvpTeSummarySessionSetupPriority_Object = MibTableColumn
rsvpTeSummarySessionSetupPriority = _RsvpTeSummarySessionSetupPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 15),
    _RsvpTeSummarySessionSetupPriority_Type()
)
rsvpTeSummarySessionSetupPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionSetupPriority.setStatus("current")


class _RsvpTeSummarySessionHoldPriority_Type(Integer32):
    """Custom type rsvpTeSummarySessionHoldPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_RsvpTeSummarySessionHoldPriority_Type.__name__ = "Integer32"
_RsvpTeSummarySessionHoldPriority_Object = MibTableColumn
rsvpTeSummarySessionHoldPriority = _RsvpTeSummarySessionHoldPriority_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 16),
    _RsvpTeSummarySessionHoldPriority_Type()
)
rsvpTeSummarySessionHoldPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionHoldPriority.setStatus("current")


class _RsvpTeSummarySessionCspfUsage_Type(Integer32):
    """Custom type rsvpTeSummarySessionCspfUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeSummarySessionCspfUsage_Type.__name__ = "Integer32"
_RsvpTeSummarySessionCspfUsage_Object = MibTableColumn
rsvpTeSummarySessionCspfUsage = _RsvpTeSummarySessionCspfUsage_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 17),
    _RsvpTeSummarySessionCspfUsage_Type()
)
rsvpTeSummarySessionCspfUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionCspfUsage.setStatus("current")
_RsvpTeSummarySessionLSPMetric_Type = Integer32
_RsvpTeSummarySessionLSPMetric_Object = MibTableColumn
rsvpTeSummarySessionLSPMetric = _RsvpTeSummarySessionLSPMetric_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 18),
    _RsvpTeSummarySessionLSPMetric_Type()
)
rsvpTeSummarySessionLSPMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLSPMetric.setStatus("current")


class _RsvpTeSummarySessionLSPProtection_Type(Integer32):
    """Custom type rsvpTeSummarySessionLSPProtection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("oneToOne", 1),
          ("facility", 2),
          ("none", 3))
    )


_RsvpTeSummarySessionLSPProtection_Type.__name__ = "Integer32"
_RsvpTeSummarySessionLSPProtection_Object = MibTableColumn
rsvpTeSummarySessionLSPProtection = _RsvpTeSummarySessionLSPProtection_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 19),
    _RsvpTeSummarySessionLSPProtection_Type()
)
rsvpTeSummarySessionLSPProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLSPProtection.setStatus("current")
_RsvpTeSummarySessionUpStreamAddr_Type = IpAddress
_RsvpTeSummarySessionUpStreamAddr_Object = MibTableColumn
rsvpTeSummarySessionUpStreamAddr = _RsvpTeSummarySessionUpStreamAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 20),
    _RsvpTeSummarySessionUpStreamAddr_Type()
)
rsvpTeSummarySessionUpStreamAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionUpStreamAddr.setStatus("current")
_RsvpTeSummarySessionUpStreamIfIndex_Type = Integer32
_RsvpTeSummarySessionUpStreamIfIndex_Object = MibTableColumn
rsvpTeSummarySessionUpStreamIfIndex = _RsvpTeSummarySessionUpStreamIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 21),
    _RsvpTeSummarySessionUpStreamIfIndex_Type()
)
rsvpTeSummarySessionUpStreamIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionUpStreamIfIndex.setStatus("current")
_RsvpTeSummarySessionDownStreamAddr_Type = IpAddress
_RsvpTeSummarySessionDownStreamAddr_Object = MibTableColumn
rsvpTeSummarySessionDownStreamAddr = _RsvpTeSummarySessionDownStreamAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 22),
    _RsvpTeSummarySessionDownStreamAddr_Type()
)
rsvpTeSummarySessionDownStreamAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionDownStreamAddr.setStatus("current")
_RsvpTeSummarySessionDownStreamIfIndex_Type = Integer32
_RsvpTeSummarySessionDownStreamIfIndex_Object = MibTableColumn
rsvpTeSummarySessionDownStreamIfIndex = _RsvpTeSummarySessionDownStreamIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 23),
    _RsvpTeSummarySessionDownStreamIfIndex_Type()
)
rsvpTeSummarySessionDownStreamIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionDownStreamIfIndex.setStatus("current")
_RsvpTeSummarySessionPathRefreshSec_Type = Integer32
_RsvpTeSummarySessionPathRefreshSec_Object = MibTableColumn
rsvpTeSummarySessionPathRefreshSec = _RsvpTeSummarySessionPathRefreshSec_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 24),
    _RsvpTeSummarySessionPathRefreshSec_Type()
)
rsvpTeSummarySessionPathRefreshSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionPathRefreshSec.setStatus("current")
_RsvpTeSummarySessionPathRefreshDue_Type = Integer32
_RsvpTeSummarySessionPathRefreshDue_Object = MibTableColumn
rsvpTeSummarySessionPathRefreshDue = _RsvpTeSummarySessionPathRefreshDue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 25),
    _RsvpTeSummarySessionPathRefreshDue_Type()
)
rsvpTeSummarySessionPathRefreshDue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionPathRefreshDue.setStatus("current")


class _RsvpTeSummarySessionPathRREnable_Type(Integer32):
    """Custom type rsvpTeSummarySessionPathRREnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_RsvpTeSummarySessionPathRREnable_Type.__name__ = "Integer32"
_RsvpTeSummarySessionPathRREnable_Object = MibTableColumn
rsvpTeSummarySessionPathRREnable = _RsvpTeSummarySessionPathRREnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 26),
    _RsvpTeSummarySessionPathRREnable_Type()
)
rsvpTeSummarySessionPathRREnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionPathRREnable.setStatus("current")
_RsvpTeSummarySessionLifeTime_Type = Integer32
_RsvpTeSummarySessionLifeTime_Object = MibTableColumn
rsvpTeSummarySessionLifeTime = _RsvpTeSummarySessionLifeTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 27),
    _RsvpTeSummarySessionLifeTime_Type()
)
rsvpTeSummarySessionLifeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLifeTime.setStatus("current")
_RsvpTeSummarySessionDueTime_Type = Integer32
_RsvpTeSummarySessionDueTime_Object = MibTableColumn
rsvpTeSummarySessionDueTime = _RsvpTeSummarySessionDueTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 28),
    _RsvpTeSummarySessionDueTime_Type()
)
rsvpTeSummarySessionDueTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionDueTime.setStatus("current")


class _RsvpTeSummarySessionStyle_Type(Integer32):
    """Custom type rsvpTeSummarySessionStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fixedFilter", 1),
          ("sharedExplicitFilter", 2))
    )


_RsvpTeSummarySessionStyle_Type.__name__ = "Integer32"
_RsvpTeSummarySessionStyle_Object = MibTableColumn
rsvpTeSummarySessionStyle = _RsvpTeSummarySessionStyle_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 29),
    _RsvpTeSummarySessionStyle_Type()
)
rsvpTeSummarySessionStyle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionStyle.setStatus("current")


class _RsvpTeSummarySessionTrafficType_Type(Integer32):
    """Custom type rsvpTeSummarySessionTrafficType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("guaranteed", 1),
          ("controlledLoad", 2))
    )


_RsvpTeSummarySessionTrafficType_Type.__name__ = "Integer32"
_RsvpTeSummarySessionTrafficType_Object = MibTableColumn
rsvpTeSummarySessionTrafficType = _RsvpTeSummarySessionTrafficType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 30),
    _RsvpTeSummarySessionTrafficType_Type()
)
rsvpTeSummarySessionTrafficType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTrafficType.setStatus("current")
_RsvpTeSummarySessionMTU_Type = Integer32
_RsvpTeSummarySessionMTU_Object = MibTableColumn
rsvpTeSummarySessionMTU = _RsvpTeSummarySessionMTU_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 31),
    _RsvpTeSummarySessionMTU_Type()
)
rsvpTeSummarySessionMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionMTU.setStatus("current")
_RsvpTeSummarySessionLastErrorCode_Type = OctetString
_RsvpTeSummarySessionLastErrorCode_Object = MibTableColumn
rsvpTeSummarySessionLastErrorCode = _RsvpTeSummarySessionLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 32),
    _RsvpTeSummarySessionLastErrorCode_Type()
)
rsvpTeSummarySessionLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLastErrorCode.setStatus("current")
_RsvpTeSummarySessionLastErrorValue_Type = OctetString
_RsvpTeSummarySessionLastErrorValue_Object = MibTableColumn
rsvpTeSummarySessionLastErrorValue = _RsvpTeSummarySessionLastErrorValue_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 33),
    _RsvpTeSummarySessionLastErrorValue_Type()
)
rsvpTeSummarySessionLastErrorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLastErrorValue.setStatus("current")
_RsvpTeSummarySessionLastErrorNode_Type = IpAddress
_RsvpTeSummarySessionLastErrorNode_Object = MibTableColumn
rsvpTeSummarySessionLastErrorNode = _RsvpTeSummarySessionLastErrorNode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 34),
    _RsvpTeSummarySessionLastErrorNode_Type()
)
rsvpTeSummarySessionLastErrorNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionLastErrorNode.setStatus("current")


class _RsvpTeSummarySessionTrunkType_Type(Integer32):
    """Custom type rsvpTeSummarySessionTrunkType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("gmpls", 1),
          ("mpls", 2))
    )


_RsvpTeSummarySessionTrunkType_Type.__name__ = "Integer32"
_RsvpTeSummarySessionTrunkType_Object = MibTableColumn
rsvpTeSummarySessionTrunkType = _RsvpTeSummarySessionTrunkType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 4, 1, 35),
    _RsvpTeSummarySessionTrunkType_Type()
)
rsvpTeSummarySessionTrunkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionTrunkType.setStatus("current")
_RsvpTeSummarySessionExplicitRouteTable_Object = MibTable
rsvpTeSummarySessionExplicitRouteTable = _RsvpTeSummarySessionExplicitRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5)
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteTable.setStatus("current")
_RsvpTeSummarySessionExplicitRouteEntry_Object = MibTableRow
rsvpTeSummarySessionExplicitRouteEntry = _RsvpTeSummarySessionExplicitRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5, 1)
)
rsvpTeSummarySessionExplicitRouteEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeSummarySessionDestination"),
    (0, "SWITCH", "rsvpTeSummarySessionSource"),
    (0, "SWITCH", "rsvpTeSummarySessionTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionLSPId"),
    (0, "SWITCH", "rsvpTeSummarySessionExtTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionExplicitRouteAddrId"),
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteEntry.setStatus("current")
_RsvpTeSummarySessionExplicitRouteAddrId_Type = Integer32
_RsvpTeSummarySessionExplicitRouteAddrId_Object = MibTableColumn
rsvpTeSummarySessionExplicitRouteAddrId = _RsvpTeSummarySessionExplicitRouteAddrId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5, 1, 1),
    _RsvpTeSummarySessionExplicitRouteAddrId_Type()
)
rsvpTeSummarySessionExplicitRouteAddrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteAddrId.setStatus("current")
_RsvpTeSummarySessionExplicitRouteAddr_Type = IpAddress
_RsvpTeSummarySessionExplicitRouteAddr_Object = MibTableColumn
rsvpTeSummarySessionExplicitRouteAddr = _RsvpTeSummarySessionExplicitRouteAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5, 1, 2),
    _RsvpTeSummarySessionExplicitRouteAddr_Type()
)
rsvpTeSummarySessionExplicitRouteAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteAddr.setStatus("current")
_RsvpTeSummarySessionExplicitRouteMaskLen_Type = Integer32
_RsvpTeSummarySessionExplicitRouteMaskLen_Object = MibTableColumn
rsvpTeSummarySessionExplicitRouteMaskLen = _RsvpTeSummarySessionExplicitRouteMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5, 1, 3),
    _RsvpTeSummarySessionExplicitRouteMaskLen_Type()
)
rsvpTeSummarySessionExplicitRouteMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteMaskLen.setStatus("current")


class _RsvpTeSummarySessionExplicitRouteType_Type(Integer32):
    """Custom type rsvpTeSummarySessionExplicitRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("strict", 1),
          ("loose", 2))
    )


_RsvpTeSummarySessionExplicitRouteType_Type.__name__ = "Integer32"
_RsvpTeSummarySessionExplicitRouteType_Object = MibTableColumn
rsvpTeSummarySessionExplicitRouteType = _RsvpTeSummarySessionExplicitRouteType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 5, 1, 4),
    _RsvpTeSummarySessionExplicitRouteType_Type()
)
rsvpTeSummarySessionExplicitRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionExplicitRouteType.setStatus("current")
_RsvpTeSummarySessionRecvRouteTable_Object = MibTable
rsvpTeSummarySessionRecvRouteTable = _RsvpTeSummarySessionRecvRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6)
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteTable.setStatus("current")
_RsvpTeSummarySessionRecvRouteEntry_Object = MibTableRow
rsvpTeSummarySessionRecvRouteEntry = _RsvpTeSummarySessionRecvRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6, 1)
)
rsvpTeSummarySessionRecvRouteEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeSummarySessionLSPId"),
    (0, "SWITCH", "rsvpTeSummarySessionSource"),
    (0, "SWITCH", "rsvpTeSummarySessionDestination"),
    (0, "SWITCH", "rsvpTeSummarySessionTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionExtTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionRecvRouteAddrId"),
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteEntry.setStatus("current")
_RsvpTeSummarySessionRecvRouteAddrId_Type = Integer32
_RsvpTeSummarySessionRecvRouteAddrId_Object = MibTableColumn
rsvpTeSummarySessionRecvRouteAddrId = _RsvpTeSummarySessionRecvRouteAddrId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6, 1, 1),
    _RsvpTeSummarySessionRecvRouteAddrId_Type()
)
rsvpTeSummarySessionRecvRouteAddrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteAddrId.setStatus("current")
_RsvpTeSummarySessionRecvRouteAddr_Type = IpAddress
_RsvpTeSummarySessionRecvRouteAddr_Object = MibTableColumn
rsvpTeSummarySessionRecvRouteAddr = _RsvpTeSummarySessionRecvRouteAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6, 1, 2),
    _RsvpTeSummarySessionRecvRouteAddr_Type()
)
rsvpTeSummarySessionRecvRouteAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteAddr.setStatus("current")
_RsvpTeSummarySessionRecvRouteMaskLen_Type = Integer32
_RsvpTeSummarySessionRecvRouteMaskLen_Object = MibTableColumn
rsvpTeSummarySessionRecvRouteMaskLen = _RsvpTeSummarySessionRecvRouteMaskLen_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6, 1, 3),
    _RsvpTeSummarySessionRecvRouteMaskLen_Type()
)
rsvpTeSummarySessionRecvRouteMaskLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteMaskLen.setStatus("current")


class _RsvpTeSummarySessionRecvRouteType_Type(Integer32):
    """Custom type rsvpTeSummarySessionRecvRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("strict", 1),
          ("loose", 2))
    )


_RsvpTeSummarySessionRecvRouteType_Type.__name__ = "Integer32"
_RsvpTeSummarySessionRecvRouteType_Object = MibTableColumn
rsvpTeSummarySessionRecvRouteType = _RsvpTeSummarySessionRecvRouteType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 6, 1, 4),
    _RsvpTeSummarySessionRecvRouteType_Type()
)
rsvpTeSummarySessionRecvRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecvRouteType.setStatus("current")
_RsvpTeSummarySessionRecordRouteTable_Object = MibTable
rsvpTeSummarySessionRecordRouteTable = _RsvpTeSummarySessionRecordRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 7)
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecordRouteTable.setStatus("current")
_RsvpTeSummarySessionRecordRouteEntry_Object = MibTableRow
rsvpTeSummarySessionRecordRouteEntry = _RsvpTeSummarySessionRecordRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 7, 1)
)
rsvpTeSummarySessionRecordRouteEntry.setIndexNames(
    (0, "SWITCH", "rsvpTeSummarySessionLSPId"),
    (0, "SWITCH", "rsvpTeSummarySessionSource"),
    (0, "SWITCH", "rsvpTeSummarySessionDestination"),
    (0, "SWITCH", "rsvpTeSummarySessionTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionExtTunnelId"),
    (0, "SWITCH", "rsvpTeSummarySessionRecordRouteAddrId"),
)
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecordRouteEntry.setStatus("current")
_RsvpTeSummarySessionRecordRouteAddrId_Type = Integer32
_RsvpTeSummarySessionRecordRouteAddrId_Object = MibTableColumn
rsvpTeSummarySessionRecordRouteAddrId = _RsvpTeSummarySessionRecordRouteAddrId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 7, 1, 1),
    _RsvpTeSummarySessionRecordRouteAddrId_Type()
)
rsvpTeSummarySessionRecordRouteAddrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecordRouteAddrId.setStatus("current")
_RsvpTeSummarySessionRecordRouteAddr_Type = OctetString
_RsvpTeSummarySessionRecordRouteAddr_Object = MibTableColumn
rsvpTeSummarySessionRecordRouteAddr = _RsvpTeSummarySessionRecordRouteAddr_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 7, 1, 2),
    _RsvpTeSummarySessionRecordRouteAddr_Type()
)
rsvpTeSummarySessionRecordRouteAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySessionRecordRouteAddr.setStatus("current")
_RsvpTeSummaryStatistics_ObjectIdentity = ObjectIdentity
rsvpTeSummaryStatistics = _RsvpTeSummaryStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8)
)
_RsvpTeSummaryPathSent_Type = Integer32
_RsvpTeSummaryPathSent_Object = MibScalar
rsvpTeSummaryPathSent = _RsvpTeSummaryPathSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 1),
    _RsvpTeSummaryPathSent_Type()
)
rsvpTeSummaryPathSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathSent.setStatus("current")
_RsvpTeSummaryPathRecv_Type = Integer32
_RsvpTeSummaryPathRecv_Object = MibScalar
rsvpTeSummaryPathRecv = _RsvpTeSummaryPathRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 2),
    _RsvpTeSummaryPathRecv_Type()
)
rsvpTeSummaryPathRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathRecv.setStatus("current")
_RsvpTeSummaryPathErrSent_Type = Integer32
_RsvpTeSummaryPathErrSent_Object = MibScalar
rsvpTeSummaryPathErrSent = _RsvpTeSummaryPathErrSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 3),
    _RsvpTeSummaryPathErrSent_Type()
)
rsvpTeSummaryPathErrSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathErrSent.setStatus("current")
_RsvpTeSummaryPathErrRecv_Type = Integer32
_RsvpTeSummaryPathErrRecv_Object = MibScalar
rsvpTeSummaryPathErrRecv = _RsvpTeSummaryPathErrRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 4),
    _RsvpTeSummaryPathErrRecv_Type()
)
rsvpTeSummaryPathErrRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathErrRecv.setStatus("current")
_RsvpTeSummaryPathTearSent_Type = Integer32
_RsvpTeSummaryPathTearSent_Object = MibScalar
rsvpTeSummaryPathTearSent = _RsvpTeSummaryPathTearSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 5),
    _RsvpTeSummaryPathTearSent_Type()
)
rsvpTeSummaryPathTearSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathTearSent.setStatus("current")
_RsvpTeSummaryPathTearRecv_Type = Integer32
_RsvpTeSummaryPathTearRecv_Object = MibScalar
rsvpTeSummaryPathTearRecv = _RsvpTeSummaryPathTearRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 6),
    _RsvpTeSummaryPathTearRecv_Type()
)
rsvpTeSummaryPathTearRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryPathTearRecv.setStatus("current")
_RsvpTeSummaryResvFFSent_Type = Integer32
_RsvpTeSummaryResvFFSent_Object = MibScalar
rsvpTeSummaryResvFFSent = _RsvpTeSummaryResvFFSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 7),
    _RsvpTeSummaryResvFFSent_Type()
)
rsvpTeSummaryResvFFSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvFFSent.setStatus("current")
_RsvpTeSummaryResvFFRecv_Type = Integer32
_RsvpTeSummaryResvFFRecv_Object = MibScalar
rsvpTeSummaryResvFFRecv = _RsvpTeSummaryResvFFRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 8),
    _RsvpTeSummaryResvFFRecv_Type()
)
rsvpTeSummaryResvFFRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvFFRecv.setStatus("current")
_RsvpTeSummaryResvWFSent_Type = Integer32
_RsvpTeSummaryResvWFSent_Object = MibScalar
rsvpTeSummaryResvWFSent = _RsvpTeSummaryResvWFSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 9),
    _RsvpTeSummaryResvWFSent_Type()
)
rsvpTeSummaryResvWFSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvWFSent.setStatus("current")
_RsvpTeSummaryResvWFRecv_Type = Integer32
_RsvpTeSummaryResvWFRecv_Object = MibScalar
rsvpTeSummaryResvWFRecv = _RsvpTeSummaryResvWFRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 10),
    _RsvpTeSummaryResvWFRecv_Type()
)
rsvpTeSummaryResvWFRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvWFRecv.setStatus("current")
_RsvpTeSummaryResvSESent_Type = Integer32
_RsvpTeSummaryResvSESent_Object = MibScalar
rsvpTeSummaryResvSESent = _RsvpTeSummaryResvSESent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 11),
    _RsvpTeSummaryResvSESent_Type()
)
rsvpTeSummaryResvSESent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvSESent.setStatus("current")
_RsvpTeSummaryResvSERecv_Type = Integer32
_RsvpTeSummaryResvSERecv_Object = MibScalar
rsvpTeSummaryResvSERecv = _RsvpTeSummaryResvSERecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 12),
    _RsvpTeSummaryResvSERecv_Type()
)
rsvpTeSummaryResvSERecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvSERecv.setStatus("current")
_RsvpTeSummaryResvErrSent_Type = Integer32
_RsvpTeSummaryResvErrSent_Object = MibScalar
rsvpTeSummaryResvErrSent = _RsvpTeSummaryResvErrSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 13),
    _RsvpTeSummaryResvErrSent_Type()
)
rsvpTeSummaryResvErrSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvErrSent.setStatus("current")
_RsvpTeSummaryResvErrRecv_Type = Integer32
_RsvpTeSummaryResvErrRecv_Object = MibScalar
rsvpTeSummaryResvErrRecv = _RsvpTeSummaryResvErrRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 14),
    _RsvpTeSummaryResvErrRecv_Type()
)
rsvpTeSummaryResvErrRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvErrRecv.setStatus("current")
_RsvpTeSummaryResvTearSent_Type = Integer32
_RsvpTeSummaryResvTearSent_Object = MibScalar
rsvpTeSummaryResvTearSent = _RsvpTeSummaryResvTearSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 15),
    _RsvpTeSummaryResvTearSent_Type()
)
rsvpTeSummaryResvTearSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvTearSent.setStatus("current")
_RsvpTeSummaryResvTearRecv_Type = Integer32
_RsvpTeSummaryResvTearRecv_Object = MibScalar
rsvpTeSummaryResvTearRecv = _RsvpTeSummaryResvTearRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 16),
    _RsvpTeSummaryResvTearRecv_Type()
)
rsvpTeSummaryResvTearRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvTearRecv.setStatus("current")
_RsvpTeSummaryResvConfSent_Type = Integer32
_RsvpTeSummaryResvConfSent_Object = MibScalar
rsvpTeSummaryResvConfSent = _RsvpTeSummaryResvConfSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 17),
    _RsvpTeSummaryResvConfSent_Type()
)
rsvpTeSummaryResvConfSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvConfSent.setStatus("current")
_RsvpTeSummaryResvConfRecv_Type = Integer32
_RsvpTeSummaryResvConfRecv_Object = MibScalar
rsvpTeSummaryResvConfRecv = _RsvpTeSummaryResvConfRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 18),
    _RsvpTeSummaryResvConfRecv_Type()
)
rsvpTeSummaryResvConfRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryResvConfRecv.setStatus("current")
_RsvpTeSummaryHelloSent_Type = Integer32
_RsvpTeSummaryHelloSent_Object = MibScalar
rsvpTeSummaryHelloSent = _RsvpTeSummaryHelloSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 19),
    _RsvpTeSummaryHelloSent_Type()
)
rsvpTeSummaryHelloSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryHelloSent.setStatus("current")
_RsvpTeSummaryHelloRecv_Type = Integer32
_RsvpTeSummaryHelloRecv_Object = MibScalar
rsvpTeSummaryHelloRecv = _RsvpTeSummaryHelloRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 20),
    _RsvpTeSummaryHelloRecv_Type()
)
rsvpTeSummaryHelloRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryHelloRecv.setStatus("current")
_RsvpTeSummaryBundleSent_Type = Integer32
_RsvpTeSummaryBundleSent_Object = MibScalar
rsvpTeSummaryBundleSent = _RsvpTeSummaryBundleSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 21),
    _RsvpTeSummaryBundleSent_Type()
)
rsvpTeSummaryBundleSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryBundleSent.setStatus("current")
_RsvpTeSummaryBundleRecv_Type = Integer32
_RsvpTeSummaryBundleRecv_Object = MibScalar
rsvpTeSummaryBundleRecv = _RsvpTeSummaryBundleRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 22),
    _RsvpTeSummaryBundleRecv_Type()
)
rsvpTeSummaryBundleRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryBundleRecv.setStatus("current")
_RsvpTeSummaryAckSent_Type = Integer32
_RsvpTeSummaryAckSent_Object = MibScalar
rsvpTeSummaryAckSent = _RsvpTeSummaryAckSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 23),
    _RsvpTeSummaryAckSent_Type()
)
rsvpTeSummaryAckSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryAckSent.setStatus("current")
_RsvpTeSummaryAckRecv_Type = Integer32
_RsvpTeSummaryAckRecv_Object = MibScalar
rsvpTeSummaryAckRecv = _RsvpTeSummaryAckRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 24),
    _RsvpTeSummaryAckRecv_Type()
)
rsvpTeSummaryAckRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummaryAckRecv.setStatus("current")
_RsvpTeSummarySrefreshSent_Type = Integer32
_RsvpTeSummarySrefreshSent_Object = MibScalar
rsvpTeSummarySrefreshSent = _RsvpTeSummarySrefreshSent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 25),
    _RsvpTeSummarySrefreshSent_Type()
)
rsvpTeSummarySrefreshSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySrefreshSent.setStatus("current")
_RsvpTeSummarySrefreshRecv_Type = Integer32
_RsvpTeSummarySrefreshRecv_Object = MibScalar
rsvpTeSummarySrefreshRecv = _RsvpTeSummarySrefreshRecv_Object(
    (1, 3, 6, 1, 4, 1, 27975, 92, 7, 8, 26),
    _RsvpTeSummarySrefreshRecv_Type()
)
rsvpTeSummarySrefreshRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpTeSummarySrefreshRecv.setStatus("current")
_G8031_ObjectIdentity = ObjectIdentity
g8031 = _G8031_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 93)
)
_G8031EpsGroupTable_Object = MibTable
g8031EpsGroupTable = _G8031EpsGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1)
)
if mibBuilder.loadTexts:
    g8031EpsGroupTable.setStatus("current")
_G8031EpsGroupEntry_Object = MibTableRow
g8031EpsGroupEntry = _G8031EpsGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1)
)
g8031EpsGroupEntry.setIndexNames(
    (0, "SWITCH", "g8031EpsGroupId"),
)
if mibBuilder.loadTexts:
    g8031EpsGroupEntry.setStatus("current")
_G8031EpsGroupId_Type = Integer32
_G8031EpsGroupId_Object = MibTableColumn
g8031EpsGroupId = _G8031EpsGroupId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 1),
    _G8031EpsGroupId_Type()
)
g8031EpsGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    g8031EpsGroupId.setStatus("current")
_G8031EpsGroupWorkingIfindex_Type = Integer32
_G8031EpsGroupWorkingIfindex_Object = MibTableColumn
g8031EpsGroupWorkingIfindex = _G8031EpsGroupWorkingIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 2),
    _G8031EpsGroupWorkingIfindex_Type()
)
g8031EpsGroupWorkingIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8031EpsGroupWorkingIfindex.setStatus("current")
_G8031EpsGroupProtectionIfindex_Type = Integer32
_G8031EpsGroupProtectionIfindex_Object = MibTableColumn
g8031EpsGroupProtectionIfindex = _G8031EpsGroupProtectionIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 3),
    _G8031EpsGroupProtectionIfindex_Type()
)
g8031EpsGroupProtectionIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8031EpsGroupProtectionIfindex.setStatus("current")
_G8031EpsGroupRowStatus_Type = RowStatus
_G8031EpsGroupRowStatus_Object = MibTableColumn
g8031EpsGroupRowStatus = _G8031EpsGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 4),
    _G8031EpsGroupRowStatus_Type()
)
g8031EpsGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8031EpsGroupRowStatus.setStatus("current")


class _G8031EpsGroupWTR_Type(Integer32):
    """Custom type g8031EpsGroupWTR based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
    )


_G8031EpsGroupWTR_Type.__name__ = "Integer32"
_G8031EpsGroupWTR_Object = MibTableColumn
g8031EpsGroupWTR = _G8031EpsGroupWTR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 5),
    _G8031EpsGroupWTR_Type()
)
g8031EpsGroupWTR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupWTR.setStatus("current")


class _G8031EpsGroupHoldOff_Type(Integer32):
    """Custom type g8031EpsGroupHoldOff based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_G8031EpsGroupHoldOff_Type.__name__ = "Integer32"
_G8031EpsGroupHoldOff_Object = MibTableColumn
g8031EpsGroupHoldOff = _G8031EpsGroupHoldOff_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 6),
    _G8031EpsGroupHoldOff_Type()
)
g8031EpsGroupHoldOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupHoldOff.setStatus("current")


class _G8031EpsGroupMode_Type(Integer32):
    """Custom type g8031EpsGroupMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("revertive", 1),
          ("nonRevertive", 2))
    )


_G8031EpsGroupMode_Type.__name__ = "Integer32"
_G8031EpsGroupMode_Object = MibTableColumn
g8031EpsGroupMode = _G8031EpsGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 7),
    _G8031EpsGroupMode_Type()
)
g8031EpsGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupMode.setStatus("current")
_G8031EpsGroupDomain_Type = OctetString
_G8031EpsGroupDomain_Object = MibTableColumn
g8031EpsGroupDomain = _G8031EpsGroupDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 8),
    _G8031EpsGroupDomain_Type()
)
g8031EpsGroupDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupDomain.setStatus("current")
_G8031EpsGroupWorkingService_Type = OctetString
_G8031EpsGroupWorkingService_Object = MibTableColumn
g8031EpsGroupWorkingService = _G8031EpsGroupWorkingService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 9),
    _G8031EpsGroupWorkingService_Type()
)
g8031EpsGroupWorkingService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupWorkingService.setStatus("current")
_G8031EpsGroupProtectionService_Type = OctetString
_G8031EpsGroupProtectionService_Object = MibTableColumn
g8031EpsGroupProtectionService = _G8031EpsGroupProtectionService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 10),
    _G8031EpsGroupProtectionService_Type()
)
g8031EpsGroupProtectionService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8031EpsGroupProtectionService.setStatus("current")


class _G8031EpsGroupCurrentState_Type(Integer32):
    """Custom type g8031EpsGroupCurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5,
              7,
              9,
              11,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("nr", 0),
          ("dnr", 1),
          ("rr", 2),
          ("exec", 4),
          ("wtr", 5),
          ("ms", 7),
          ("sd", 9),
          ("sf-w", 11),
          ("fs", 13),
          ("sf-p", 14),
          ("lo", 15))
    )


_G8031EpsGroupCurrentState_Type.__name__ = "Integer32"
_G8031EpsGroupCurrentState_Object = MibTableColumn
g8031EpsGroupCurrentState = _G8031EpsGroupCurrentState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 11),
    _G8031EpsGroupCurrentState_Type()
)
g8031EpsGroupCurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupCurrentState.setStatus("current")


class _G8031EpsGroupLastState_Type(Integer32):
    """Custom type g8031EpsGroupLastState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5,
              7,
              9,
              11,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("nr", 0),
          ("dnr", 1),
          ("rr", 2),
          ("exec", 4),
          ("wtr", 5),
          ("ms", 7),
          ("sd", 9),
          ("sf-w", 11),
          ("fs", 13),
          ("sf-p", 14),
          ("lo", 15))
    )


_G8031EpsGroupLastState_Type.__name__ = "Integer32"
_G8031EpsGroupLastState_Object = MibTableColumn
g8031EpsGroupLastState = _G8031EpsGroupLastState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 12),
    _G8031EpsGroupLastState_Type()
)
g8031EpsGroupLastState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupLastState.setStatus("current")


class _G8031EpsGroupLastEvent_Type(Integer32):
    """Custom type g8031EpsGroupLastEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5,
              7,
              9,
              11,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("nr", 0),
          ("dnr", 1),
          ("rr", 2),
          ("exec", 4),
          ("wtr", 5),
          ("ms", 7),
          ("sd", 9),
          ("sf-w", 11),
          ("fs", 13),
          ("sf-p", 14),
          ("lo", 15))
    )


_G8031EpsGroupLastEvent_Type.__name__ = "Integer32"
_G8031EpsGroupLastEvent_Object = MibTableColumn
g8031EpsGroupLastEvent = _G8031EpsGroupLastEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 13),
    _G8031EpsGroupLastEvent_Type()
)
g8031EpsGroupLastEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupLastEvent.setStatus("current")


class _G8031EpsGroupFarEndState_Type(Integer32):
    """Custom type g8031EpsGroupFarEndState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5,
              7,
              9,
              11,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("nr", 0),
          ("dnr", 1),
          ("rr", 2),
          ("exec", 4),
          ("wtr", 5),
          ("ms", 7),
          ("sd", 9),
          ("sf-w", 11),
          ("fs", 13),
          ("sf-p", 14),
          ("lo", 15))
    )


_G8031EpsGroupFarEndState_Type.__name__ = "Integer32"
_G8031EpsGroupFarEndState_Object = MibTableColumn
g8031EpsGroupFarEndState = _G8031EpsGroupFarEndState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 14),
    _G8031EpsGroupFarEndState_Type()
)
g8031EpsGroupFarEndState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupFarEndState.setStatus("current")


class _G8031EpsGroupRequestSignal_Type(Integer32):
    """Custom type g8031EpsGroupRequestSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("null", 0),
          ("normal", 1))
    )


_G8031EpsGroupRequestSignal_Type.__name__ = "Integer32"
_G8031EpsGroupRequestSignal_Object = MibTableColumn
g8031EpsGroupRequestSignal = _G8031EpsGroupRequestSignal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 15),
    _G8031EpsGroupRequestSignal_Type()
)
g8031EpsGroupRequestSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupRequestSignal.setStatus("current")


class _G8031EpsGroupBridgeSignal_Type(Integer32):
    """Custom type g8031EpsGroupBridgeSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("null", 0),
          ("normal", 1))
    )


_G8031EpsGroupBridgeSignal_Type.__name__ = "Integer32"
_G8031EpsGroupBridgeSignal_Object = MibTableColumn
g8031EpsGroupBridgeSignal = _G8031EpsGroupBridgeSignal_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 16),
    _G8031EpsGroupBridgeSignal_Type()
)
g8031EpsGroupBridgeSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupBridgeSignal.setStatus("current")
_G8031EpsGroupAPSVid_Type = Integer32
_G8031EpsGroupAPSVid_Object = MibTableColumn
g8031EpsGroupAPSVid = _G8031EpsGroupAPSVid_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 17),
    _G8031EpsGroupAPSVid_Type()
)
g8031EpsGroupAPSVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupAPSVid.setStatus("current")


class _G8031EpsGroupDFOPState_Type(Integer32):
    """Custom type g8031EpsGroupDFOPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              8,
              56)
        )
    )
    namedValues = NamedValues(
        *(("not-in-defect", 1),
          ("b-bit-mismatch", 5),
          ("r-bit-mismatch", 8),
          ("aps-on-working", 56))
    )


_G8031EpsGroupDFOPState_Type.__name__ = "Integer32"
_G8031EpsGroupDFOPState_Object = MibTableColumn
g8031EpsGroupDFOPState = _G8031EpsGroupDFOPState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 1, 1, 18),
    _G8031EpsGroupDFOPState_Type()
)
g8031EpsGroupDFOPState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    g8031EpsGroupDFOPState.setStatus("current")
_G8031EpsGroupInstanceTable_Object = MibTable
g8031EpsGroupInstanceTable = _G8031EpsGroupInstanceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 2)
)
if mibBuilder.loadTexts:
    g8031EpsGroupInstanceTable.setStatus("current")
_G8031EpsGroupInstanceEntry_Object = MibTableRow
g8031EpsGroupInstanceEntry = _G8031EpsGroupInstanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 2, 1)
)
g8031EpsGroupInstanceEntry.setIndexNames(
    (0, "SWITCH", "g8031EpsGroupId"),
    (0, "SWITCH", "g8031EpsGroupInstanceId"),
)
if mibBuilder.loadTexts:
    g8031EpsGroupInstanceEntry.setStatus("current")
_G8031EpsGroupInstanceId_Type = Integer32
_G8031EpsGroupInstanceId_Object = MibTableColumn
g8031EpsGroupInstanceId = _G8031EpsGroupInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 2, 1, 1),
    _G8031EpsGroupInstanceId_Type()
)
g8031EpsGroupInstanceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    g8031EpsGroupInstanceId.setStatus("current")
_G8031EpsGroupInstanceRowStatus_Type = RowStatus
_G8031EpsGroupInstanceRowStatus_Object = MibTableColumn
g8031EpsGroupInstanceRowStatus = _G8031EpsGroupInstanceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 93, 2, 1, 2),
    _G8031EpsGroupInstanceRowStatus_Type()
)
g8031EpsGroupInstanceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8031EpsGroupInstanceRowStatus.setStatus("current")
_G8032_ObjectIdentity = ObjectIdentity
g8032 = _G8032_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 94)
)
_G8032RingTable_Object = MibTable
g8032RingTable = _G8032RingTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1)
)
if mibBuilder.loadTexts:
    g8032RingTable.setStatus("current")
_G8032RingEntry_Object = MibTableRow
g8032RingEntry = _G8032RingEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1)
)
g8032RingEntry.setIndexNames(
    (0, "SWITCH", "g8032RingId"),
)
if mibBuilder.loadTexts:
    g8032RingEntry.setStatus("current")
_G8032RingId_Type = Integer32
_G8032RingId_Object = MibTableColumn
g8032RingId = _G8032RingId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 1),
    _G8032RingId_Type()
)
g8032RingId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    g8032RingId.setStatus("current")
_G8032RingMajorRingId_Type = Integer32
_G8032RingMajorRingId_Object = MibTableColumn
g8032RingMajorRingId = _G8032RingMajorRingId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 2),
    _G8032RingMajorRingId_Type()
)
g8032RingMajorRingId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8032RingMajorRingId.setStatus("current")
_G8032RingEastIfindex_Type = Integer32
_G8032RingEastIfindex_Object = MibTableColumn
g8032RingEastIfindex = _G8032RingEastIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 3),
    _G8032RingEastIfindex_Type()
)
g8032RingEastIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8032RingEastIfindex.setStatus("current")
_G8032RingWestIfindex_Type = Integer32
_G8032RingWestIfindex_Object = MibTableColumn
g8032RingWestIfindex = _G8032RingWestIfindex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 4),
    _G8032RingWestIfindex_Type()
)
g8032RingWestIfindex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8032RingWestIfindex.setStatus("current")
_G8032RingRowStatus_Type = RowStatus
_G8032RingRowStatus_Object = MibTableColumn
g8032RingRowStatus = _G8032RingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 5),
    _G8032RingRowStatus_Type()
)
g8032RingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8032RingRowStatus.setStatus("current")
_G8032RingDomain_Type = OctetString
_G8032RingDomain_Object = MibTableColumn
g8032RingDomain = _G8032RingDomain_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 6),
    _G8032RingDomain_Type()
)
g8032RingDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingDomain.setStatus("current")
_G8032RingService_Type = OctetString
_G8032RingService_Object = MibTableColumn
g8032RingService = _G8032RingService_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 7),
    _G8032RingService_Type()
)
g8032RingService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingService.setStatus("current")
_G8032RingControlVlan_Type = Integer32
_G8032RingControlVlan_Object = MibTableColumn
g8032RingControlVlan = _G8032RingControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 8),
    _G8032RingControlVlan_Type()
)
g8032RingControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingControlVlan.setStatus("current")


class _G8032RingWTR_Type(Integer32):
    """Custom type g8032RingWTR based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
    )


_G8032RingWTR_Type.__name__ = "Integer32"
_G8032RingWTR_Object = MibTableColumn
g8032RingWTR = _G8032RingWTR_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 9),
    _G8032RingWTR_Type()
)
g8032RingWTR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingWTR.setStatus("current")


class _G8032RingHoldOff_Type(Integer32):
    """Custom type g8032RingHoldOff based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_G8032RingHoldOff_Type.__name__ = "Integer32"
_G8032RingHoldOff_Object = MibTableColumn
g8032RingHoldOff = _G8032RingHoldOff_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 10),
    _G8032RingHoldOff_Type()
)
g8032RingHoldOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingHoldOff.setStatus("current")


class _G8032RingGuard_Type(Integer32):
    """Custom type g8032RingGuard based on Integer32"""
    defaultValue = 500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 2000),
    )


_G8032RingGuard_Type.__name__ = "Integer32"
_G8032RingGuard_Object = MibTableColumn
g8032RingGuard = _G8032RingGuard_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 11),
    _G8032RingGuard_Type()
)
g8032RingGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingGuard.setStatus("current")


class _G8032RingRole_Type(Integer32):
    """Custom type g8032RingRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("owner", 1),
          ("non-owner", 2))
    )


_G8032RingRole_Type.__name__ = "Integer32"
_G8032RingRole_Object = MibTableColumn
g8032RingRole = _G8032RingRole_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 12),
    _G8032RingRole_Type()
)
g8032RingRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingRole.setStatus("current")


class _G8032RingRpl_Type(Integer32):
    """Custom type g8032RingRpl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("east", 1),
          ("west", 2))
    )


_G8032RingRpl_Type.__name__ = "Integer32"
_G8032RingRpl_Object = MibTableColumn
g8032RingRpl = _G8032RingRpl_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 13),
    _G8032RingRpl_Type()
)
g8032RingRpl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingRpl.setStatus("current")


class _G8032RingCurrentStatus_Type(Integer32):
    """Custom type g8032RingCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("init", 0),
          ("idle", 1),
          ("protection", 2))
    )


_G8032RingCurrentStatus_Type.__name__ = "Integer32"
_G8032RingCurrentStatus_Object = MibTableColumn
g8032RingCurrentStatus = _G8032RingCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 14),
    _G8032RingCurrentStatus_Type()
)
g8032RingCurrentStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingCurrentStatus.setStatus("current")


class _G8032RingEastStatus_Type(Integer32):
    """Custom type g8032RingEastStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("block", 1),
          ("forward", 2))
    )


_G8032RingEastStatus_Type.__name__ = "Integer32"
_G8032RingEastStatus_Object = MibTableColumn
g8032RingEastStatus = _G8032RingEastStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 15),
    _G8032RingEastStatus_Type()
)
g8032RingEastStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingEastStatus.setStatus("current")


class _G8032RingWestStatus_Type(Integer32):
    """Custom type g8032RingWestStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("block", 1),
          ("forward", 2))
    )


_G8032RingWestStatus_Type.__name__ = "Integer32"
_G8032RingWestStatus_Object = MibTableColumn
g8032RingWestStatus = _G8032RingWestStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 16),
    _G8032RingWestStatus_Type()
)
g8032RingWestStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingWestStatus.setStatus("current")


class _G8032RingCurrentEvent_Type(Integer32):
    """Custom type g8032RingCurrentEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("nr", 0),
          ("nr-rb", 1),
          ("wtr", 2),
          ("wtr-exp", 3),
          ("remote-sf", 4),
          ("local-clear-sf", 5),
          ("local-sf", 6))
    )


_G8032RingCurrentEvent_Type.__name__ = "Integer32"
_G8032RingCurrentEvent_Object = MibTableColumn
g8032RingCurrentEvent = _G8032RingCurrentEvent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 17),
    _G8032RingCurrentEvent_Type()
)
g8032RingCurrentEvent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingCurrentEvent.setStatus("current")
_G8032RingProtectInstance_Type = OctetString
_G8032RingProtectInstance_Object = MibTableColumn
g8032RingProtectInstance = _G8032RingProtectInstance_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 18),
    _G8032RingProtectInstance_Type()
)
g8032RingProtectInstance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingProtectInstance.setStatus("current")


class _G8032RingProtectTrigger_Type(Integer32):
    """Custom type g8032RingProtectTrigger based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("ccm", 1),
          ("pyh", 2))
    )


_G8032RingProtectTrigger_Type.__name__ = "Integer32"
_G8032RingProtectTrigger_Object = MibTableColumn
g8032RingProtectTrigger = _G8032RingProtectTrigger_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 19),
    _G8032RingProtectTrigger_Type()
)
g8032RingProtectTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingProtectTrigger.setStatus("current")


class _G8032RingFlushRRPPState_Type(Integer32):
    """Custom type g8032RingFlushRRPPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_G8032RingFlushRRPPState_Type.__name__ = "Integer32"
_G8032RingFlushRRPPState_Object = MibTableColumn
g8032RingFlushRRPPState = _G8032RingFlushRRPPState_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 20),
    _G8032RingFlushRRPPState_Type()
)
g8032RingFlushRRPPState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingFlushRRPPState.setStatus("current")
_G8032RingFlushRRPPVlan_Type = Integer32
_G8032RingFlushRRPPVlan_Object = MibTableColumn
g8032RingFlushRRPPVlan = _G8032RingFlushRRPPVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 21),
    _G8032RingFlushRRPPVlan_Type()
)
g8032RingFlushRRPPVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingFlushRRPPVlan.setStatus("current")
_G8032RingFlushRRPPCount_Type = Integer32
_G8032RingFlushRRPPCount_Object = MibTableColumn
g8032RingFlushRRPPCount = _G8032RingFlushRRPPCount_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 1, 1, 22),
    _G8032RingFlushRRPPCount_Type()
)
g8032RingFlushRRPPCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    g8032RingFlushRRPPCount.setStatus("current")
_G8032RingInstanceTable_Object = MibTable
g8032RingInstanceTable = _G8032RingInstanceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 2)
)
if mibBuilder.loadTexts:
    g8032RingInstanceTable.setStatus("current")
_G8032RingInstanceEntry_Object = MibTableRow
g8032RingInstanceEntry = _G8032RingInstanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 2, 1)
)
g8032RingInstanceEntry.setIndexNames(
    (0, "SWITCH", "g8032RingId"),
    (0, "SWITCH", "g8032RingInstanceId"),
)
if mibBuilder.loadTexts:
    g8032RingInstanceEntry.setStatus("current")
_G8032RingInstanceId_Type = Integer32
_G8032RingInstanceId_Object = MibTableColumn
g8032RingInstanceId = _G8032RingInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 2, 1, 1),
    _G8032RingInstanceId_Type()
)
g8032RingInstanceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    g8032RingInstanceId.setStatus("current")
_G8032RingInstanceRowStatus_Type = RowStatus
_G8032RingInstanceRowStatus_Object = MibTableColumn
g8032RingInstanceRowStatus = _G8032RingInstanceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 94, 2, 1, 2),
    _G8032RingInstanceRowStatus_Type()
)
g8032RingInstanceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    g8032RingInstanceRowStatus.setStatus("current")
_VoiceVlan_ObjectIdentity = ObjectIdentity
voiceVlan = _VoiceVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 95)
)


class _VoiceVlanEnableVlan_Type(Integer32):
    """Custom type voiceVlanEnableVlan based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(2, 4094),
    )


_VoiceVlanEnableVlan_Type.__name__ = "Integer32"
_VoiceVlanEnableVlan_Object = MibScalar
voiceVlanEnableVlan = _VoiceVlanEnableVlan_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 1),
    _VoiceVlanEnableVlan_Type()
)
voiceVlanEnableVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voiceVlanEnableVlan.setStatus("current")
_VoiceVlanEnableSecurity_Type = TruthValue
_VoiceVlanEnableSecurity_Object = MibScalar
voiceVlanEnableSecurity = _VoiceVlanEnableSecurity_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 2),
    _VoiceVlanEnableSecurity_Type()
)
voiceVlanEnableSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voiceVlanEnableSecurity.setStatus("current")


class _VoiceVlanCOS_Type(Integer32):
    """Custom type voiceVlanCOS based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_VoiceVlanCOS_Type.__name__ = "Integer32"
_VoiceVlanCOS_Object = MibScalar
voiceVlanCOS = _VoiceVlanCOS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 3),
    _VoiceVlanCOS_Type()
)
voiceVlanCOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voiceVlanCOS.setStatus("current")
_VoiceVlanEnableInterfaceTable_Object = MibTable
voiceVlanEnableInterfaceTable = _VoiceVlanEnableInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 4)
)
if mibBuilder.loadTexts:
    voiceVlanEnableInterfaceTable.setStatus("current")
_VoiceVlanEnableInterfaceEntry_Object = MibTableRow
voiceVlanEnableInterfaceEntry = _VoiceVlanEnableInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 4, 1)
)
voiceVlanEnableInterfaceEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    voiceVlanEnableInterfaceEntry.setStatus("current")
_VoiceVlanEnableInterfaceStatus_Type = TruthValue
_VoiceVlanEnableInterfaceStatus_Object = MibTableColumn
voiceVlanEnableInterfaceStatus = _VoiceVlanEnableInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 4, 1, 1),
    _VoiceVlanEnableInterfaceStatus_Type()
)
voiceVlanEnableInterfaceStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    voiceVlanEnableInterfaceStatus.setStatus("current")
_VoiceVlanOuiEntryTable_Object = MibTable
voiceVlanOuiEntryTable = _VoiceVlanOuiEntryTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5)
)
if mibBuilder.loadTexts:
    voiceVlanOuiEntryTable.setStatus("current")
_VoiceVlanOuiEntryEntry_Object = MibTableRow
voiceVlanOuiEntryEntry = _VoiceVlanOuiEntryEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1)
)
voiceVlanOuiEntryEntry.setIndexNames(
    (0, "SWITCH", "voiceVlanOuiEntryId"),
)
if mibBuilder.loadTexts:
    voiceVlanOuiEntryEntry.setStatus("current")
_VoiceVlanOuiEntryId_Type = Integer32
_VoiceVlanOuiEntryId_Object = MibTableColumn
voiceVlanOuiEntryId = _VoiceVlanOuiEntryId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1, 1),
    _VoiceVlanOuiEntryId_Type()
)
voiceVlanOuiEntryId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    voiceVlanOuiEntryId.setStatus("current")
_VoiceVlanOuiEntryMac_Type = MacAddress
_VoiceVlanOuiEntryMac_Object = MibTableColumn
voiceVlanOuiEntryMac = _VoiceVlanOuiEntryMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1, 2),
    _VoiceVlanOuiEntryMac_Type()
)
voiceVlanOuiEntryMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    voiceVlanOuiEntryMac.setStatus("current")
_VoiceVlanOuiEntryMask_Type = MacAddress
_VoiceVlanOuiEntryMask_Object = MibTableColumn
voiceVlanOuiEntryMask = _VoiceVlanOuiEntryMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1, 3),
    _VoiceVlanOuiEntryMask_Type()
)
voiceVlanOuiEntryMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    voiceVlanOuiEntryMask.setStatus("current")


class _VoiceVlanOuiEntryDescription_Type(OctetString):
    """Custom type voiceVlanOuiEntryDescription based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_VoiceVlanOuiEntryDescription_Type.__name__ = "OctetString"
_VoiceVlanOuiEntryDescription_Object = MibTableColumn
voiceVlanOuiEntryDescription = _VoiceVlanOuiEntryDescription_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1, 4),
    _VoiceVlanOuiEntryDescription_Type()
)
voiceVlanOuiEntryDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    voiceVlanOuiEntryDescription.setStatus("current")
_VoiceVlanOuiEntryRowstatus_Type = RowStatus
_VoiceVlanOuiEntryRowstatus_Object = MibTableColumn
voiceVlanOuiEntryRowstatus = _VoiceVlanOuiEntryRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 95, 5, 1, 5),
    _VoiceVlanOuiEntryRowstatus_Type()
)
voiceVlanOuiEntryRowstatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    voiceVlanOuiEntryRowstatus.setStatus("current")
_Ivi_ObjectIdentity = ObjectIdentity
ivi = _Ivi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 96)
)
_IviRouteTable_Object = MibTable
iviRouteTable = _IviRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1)
)
if mibBuilder.loadTexts:
    iviRouteTable.setStatus("current")
_IviRouteEntry_Object = MibTableRow
iviRouteEntry = _IviRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1)
)
iviRouteEntry.setIndexNames(
    (0, "SWITCH", "iviRouteIndex"),
)
if mibBuilder.loadTexts:
    iviRouteEntry.setStatus("current")


class _IviRouteIndex_Type(Integer32):
    """Custom type iviRouteIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_IviRouteIndex_Type.__name__ = "Integer32"
_IviRouteIndex_Object = MibTableColumn
iviRouteIndex = _IviRouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 1),
    _IviRouteIndex_Type()
)
iviRouteIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iviRouteIndex.setStatus("current")


class _IviRouteIpv6address_Type(OctetString):
    """Custom type iviRouteIpv6address based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_IviRouteIpv6address_Type.__name__ = "OctetString"
_IviRouteIpv6address_Object = MibTableColumn
iviRouteIpv6address = _IviRouteIpv6address_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 2),
    _IviRouteIpv6address_Type()
)
iviRouteIpv6address.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iviRouteIpv6address.setStatus("current")


class _IviRouteIpv6addressMask_Type(Integer32):
    """Custom type iviRouteIpv6addressMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 96),
    )


_IviRouteIpv6addressMask_Type.__name__ = "Integer32"
_IviRouteIpv6addressMask_Object = MibTableColumn
iviRouteIpv6addressMask = _IviRouteIpv6addressMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 3),
    _IviRouteIpv6addressMask_Type()
)
iviRouteIpv6addressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iviRouteIpv6addressMask.setStatus("current")
_IviRouteIpv4address_Type = IpAddress
_IviRouteIpv4address_Object = MibTableColumn
iviRouteIpv4address = _IviRouteIpv4address_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 4),
    _IviRouteIpv4address_Type()
)
iviRouteIpv4address.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iviRouteIpv4address.setStatus("current")


class _IviRouteIpv4addressMask_Type(Integer32):
    """Custom type iviRouteIpv4addressMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_IviRouteIpv4addressMask_Type.__name__ = "Integer32"
_IviRouteIpv4addressMask_Object = MibTableColumn
iviRouteIpv4addressMask = _IviRouteIpv4addressMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 5),
    _IviRouteIpv4addressMask_Type()
)
iviRouteIpv4addressMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iviRouteIpv4addressMask.setStatus("current")
_IviRouteRowStatus_Type = RowStatus
_IviRouteRowStatus_Object = MibTableColumn
iviRouteRowStatus = _IviRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 1, 1, 6),
    _IviRouteRowStatus_Type()
)
iviRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    iviRouteRowStatus.setStatus("current")
_IviInterfaceTable_Object = MibTable
iviInterfaceTable = _IviInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 2)
)
if mibBuilder.loadTexts:
    iviInterfaceTable.setStatus("current")
_IviInterfaceEntry_Object = MibTableRow
iviInterfaceEntry = _IviInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 2, 1)
)
iviInterfaceEntry.setIndexNames(
    (0, "IF-MIB", "ifIndex"),
)
if mibBuilder.loadTexts:
    iviInterfaceEntry.setStatus("current")
_IviInterfaceStatus_Type = TruthValue
_IviInterfaceStatus_Object = MibTableColumn
iviInterfaceStatus = _IviInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 96, 2, 1, 1),
    _IviInterfaceStatus_Type()
)
iviInterfaceStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iviInterfaceStatus.setStatus("current")
_Product_ObjectIdentity = ObjectIdentity
product = _Product_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99)
)
_E3008TS_ObjectIdentity = ObjectIdentity
e3008TS = _E3008TS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3080)
)
if mibBuilder.loadTexts:
    e3008TS.setStatus("current")
_E30016TX_ObjectIdentity = ObjectIdentity
e30016TX = _E30016TX_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3160)
)
if mibBuilder.loadTexts:
    e30016TX.setStatus("current")
_E3508T12X_ObjectIdentity = ObjectIdentity
e3508T12X = _E3508T12X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3200)
)
if mibBuilder.loadTexts:
    e3508T12X.setStatus("current")
_E30024TS_ObjectIdentity = ObjectIdentity
e30024TS = _E30024TS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3240)
)
if mibBuilder.loadTexts:
    e30024TS.setStatus("current")
_E30024ST_ObjectIdentity = ObjectIdentity
e30024ST = _E30024ST_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3241)
)
if mibBuilder.loadTexts:
    e30024ST.setStatus("current")
_E30048TS_ObjectIdentity = ObjectIdentity
e30048TS = _E30048TS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3480)
)
if mibBuilder.loadTexts:
    e30048TS.setStatus("current")
_B30048T_ObjectIdentity = ObjectIdentity
b30048T = _B30048T_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3481)
)
if mibBuilder.loadTexts:
    b30048T.setStatus("current")
_E33048T_ObjectIdentity = ObjectIdentity
e33048T = _E33048T_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3485)
)
if mibBuilder.loadTexts:
    e33048T.setStatus("current")
_E33048SE_ObjectIdentity = ObjectIdentity
e33048SE = _E33048SE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3486)
)
if mibBuilder.loadTexts:
    e33048SE.setStatus("current")
_E33048S_ObjectIdentity = ObjectIdentity
e33048S = _E33048S_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3487)
)
if mibBuilder.loadTexts:
    e33048S.setStatus("current")
_G24eu_ObjectIdentity = ObjectIdentity
g24eu = _G24eu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3488)
)
if mibBuilder.loadTexts:
    g24eu.setStatus("current")
_E35048T4X_ObjectIdentity = ObjectIdentity
e35048T4X = _E35048T4X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 3520)
)
if mibBuilder.loadTexts:
    e35048T4X.setStatus("current")
_E58024Q_ObjectIdentity = ObjectIdentity
e58024Q = _E58024Q_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5801)
)
if mibBuilder.loadTexts:
    e58024Q.setStatus("current")
_E58048X2Q4Z_ObjectIdentity = ObjectIdentity
e58048X2Q4Z = _E58048X2Q4Z_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5802)
)
if mibBuilder.loadTexts:
    e58048X2Q4Z.setStatus("current")
_E58048X6Q_ObjectIdentity = ObjectIdentity
e58048X6Q = _E58048X6Q_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5803)
)
if mibBuilder.loadTexts:
    e58048X6Q.setStatus("current")
_E58032X2Q_ObjectIdentity = ObjectIdentity
e58032X2Q = _E58032X2Q_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5804)
)
if mibBuilder.loadTexts:
    e58032X2Q.setStatus("current")
_E58032X_ObjectIdentity = ObjectIdentity
e58032X = _E58032X_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5805)
)
if mibBuilder.loadTexts:
    e58032X.setStatus("current")
_E58020Q4Z_ObjectIdentity = ObjectIdentity
e58020Q4Z = _E58020Q4Z_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 5806)
)
if mibBuilder.loadTexts:
    e58020Q4Z.setStatus("current")
_E602_ObjectIdentity = ObjectIdentity
e602 = _E602_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 6020)
)
if mibBuilder.loadTexts:
    e602.setStatus("current")
_E606_ObjectIdentity = ObjectIdentity
e606 = _E606_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 6060)
)
if mibBuilder.loadTexts:
    e606.setStatus("current")
_E614_ObjectIdentity = ObjectIdentity
e614 = _E614_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 6140)
)
if mibBuilder.loadTexts:
    e614.setStatus("current")
_E802_ObjectIdentity = ObjectIdentity
e802 = _E802_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 8020)
)
if mibBuilder.loadTexts:
    e802.setStatus("current")
_E806_ObjectIdentity = ObjectIdentity
e806 = _E806_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 8060)
)
if mibBuilder.loadTexts:
    e806.setStatus("current")
_E814_ObjectIdentity = ObjectIdentity
e814 = _E814_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 99, 8140)
)
if mibBuilder.loadTexts:
    e814.setStatus("current")
_L2protocol_ObjectIdentity = ObjectIdentity
l2protocol = _L2protocol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 100)
)


class _L2ProtocolTunnelEnable_Type(Integer32):
    """Custom type l2ProtocolTunnelEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_L2ProtocolTunnelEnable_Type.__name__ = "Integer32"
_L2ProtocolTunnelEnable_Object = MibScalar
l2ProtocolTunnelEnable = _L2ProtocolTunnelEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 1),
    _L2ProtocolTunnelEnable_Type()
)
l2ProtocolTunnelEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelEnable.setStatus("current")
_L2ProtocolTunnelDestMac_Type = MacAddress
_L2ProtocolTunnelDestMac_Object = MibScalar
l2ProtocolTunnelDestMac = _L2ProtocolTunnelDestMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 2),
    _L2ProtocolTunnelDestMac_Type()
)
l2ProtocolTunnelDestMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelDestMac.setStatus("current")


class _L2ProtocolTunnelCOS_Type(Integer32):
    """Custom type l2ProtocolTunnelCOS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_L2ProtocolTunnelCOS_Type.__name__ = "Integer32"
_L2ProtocolTunnelCOS_Object = MibScalar
l2ProtocolTunnelCOS = _L2ProtocolTunnelCOS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 3),
    _L2ProtocolTunnelCOS_Type()
)
l2ProtocolTunnelCOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelCOS.setStatus("current")
_L2ProtocolMacTable_Object = MibTable
l2ProtocolMacTable = _L2ProtocolMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5)
)
if mibBuilder.loadTexts:
    l2ProtocolMacTable.setStatus("current")
_L2ProtocolMacEntry_Object = MibTableRow
l2ProtocolMacEntry = _L2ProtocolMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5, 1)
)
l2ProtocolMacEntry.setIndexNames(
    (0, "SWITCH", "l2ProtocolMacIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolMacEntry.setStatus("current")


class _L2ProtocolMacIndex_Type(Integer32):
    """Custom type l2ProtocolMacIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_L2ProtocolMacIndex_Type.__name__ = "Integer32"
_L2ProtocolMacIndex_Object = MibTableColumn
l2ProtocolMacIndex = _L2ProtocolMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5, 1, 1),
    _L2ProtocolMacIndex_Type()
)
l2ProtocolMacIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    l2ProtocolMacIndex.setStatus("current")
_L2ProtocolMac_Type = MacAddress
_L2ProtocolMac_Object = MibTableColumn
l2ProtocolMac = _L2ProtocolMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5, 1, 2),
    _L2ProtocolMac_Type()
)
l2ProtocolMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolMac.setStatus("current")
_L2ProtocolMacMask_Type = MacAddress
_L2ProtocolMacMask_Object = MibTableColumn
l2ProtocolMacMask = _L2ProtocolMacMask_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5, 1, 3),
    _L2ProtocolMacMask_Type()
)
l2ProtocolMacMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolMacMask.setStatus("current")
_L2ProtocolMacRowstatus_Type = RowStatus
_L2ProtocolMacRowstatus_Object = MibTableColumn
l2ProtocolMacRowstatus = _L2ProtocolMacRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 5, 1, 4),
    _L2ProtocolMacRowstatus_Type()
)
l2ProtocolMacRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolMacRowstatus.setStatus("current")
_L2ProtocolTunnelMacTable_Object = MibTable
l2ProtocolTunnelMacTable = _L2ProtocolTunnelMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 6)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelMacTable.setStatus("current")
_L2ProtocolTunnelMacEntry_Object = MibTableRow
l2ProtocolTunnelMacEntry = _L2ProtocolTunnelMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 6, 1)
)
l2ProtocolTunnelMacEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
    (0, "SWITCH", "l2ProtocolMacIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelMacEntry.setStatus("current")


class _L2ProtocolTunnelMacType_Type(Integer32):
    """Custom type l2ProtocolTunnelMacType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelMacType_Type.__name__ = "Integer32"
_L2ProtocolTunnelMacType_Object = MibTableColumn
l2ProtocolTunnelMacType = _L2ProtocolTunnelMacType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 6, 1, 1),
    _L2ProtocolTunnelMacType_Type()
)
l2ProtocolTunnelMacType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelMacType.setStatus("current")


class _L2ProtocolTunnelMacEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelMacEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelMacEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelMacEvcName_Object = MibTableColumn
l2ProtocolTunnelMacEvcName = _L2ProtocolTunnelMacEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 6, 1, 2),
    _L2ProtocolTunnelMacEvcName_Type()
)
l2ProtocolTunnelMacEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelMacEvcName.setStatus("current")
_L2ProtocolTunnelMacRowstatus_Type = RowStatus
_L2ProtocolTunnelMacRowstatus_Object = MibTableColumn
l2ProtocolTunnelMacRowstatus = _L2ProtocolTunnelMacRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 6, 1, 3),
    _L2ProtocolTunnelMacRowstatus_Type()
)
l2ProtocolTunnelMacRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelMacRowstatus.setStatus("current")
_L2ProtocolTunnelDot1xTable_Object = MibTable
l2ProtocolTunnelDot1xTable = _L2ProtocolTunnelDot1xTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 7)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelDot1xTable.setStatus("current")
_L2ProtocolTunnelDot1xEntry_Object = MibTableRow
l2ProtocolTunnelDot1xEntry = _L2ProtocolTunnelDot1xEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 7, 1)
)
l2ProtocolTunnelDot1xEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelDot1xEntry.setStatus("current")


class _L2ProtocolTunnelDot1xType_Type(Integer32):
    """Custom type l2ProtocolTunnelDot1xType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelDot1xType_Type.__name__ = "Integer32"
_L2ProtocolTunnelDot1xType_Object = MibTableColumn
l2ProtocolTunnelDot1xType = _L2ProtocolTunnelDot1xType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 7, 1, 1),
    _L2ProtocolTunnelDot1xType_Type()
)
l2ProtocolTunnelDot1xType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelDot1xType.setStatus("current")


class _L2ProtocolTunnelDot1xEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelDot1xEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelDot1xEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelDot1xEvcName_Object = MibTableColumn
l2ProtocolTunnelDot1xEvcName = _L2ProtocolTunnelDot1xEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 7, 1, 2),
    _L2ProtocolTunnelDot1xEvcName_Type()
)
l2ProtocolTunnelDot1xEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelDot1xEvcName.setStatus("current")
_L2ProtocolTunnelDot1xRowstatus_Type = RowStatus
_L2ProtocolTunnelDot1xRowstatus_Object = MibTableColumn
l2ProtocolTunnelDot1xRowstatus = _L2ProtocolTunnelDot1xRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 7, 1, 3),
    _L2ProtocolTunnelDot1xRowstatus_Type()
)
l2ProtocolTunnelDot1xRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelDot1xRowstatus.setStatus("current")
_L2ProtocolTunnelSlowProtoTable_Object = MibTable
l2ProtocolTunnelSlowProtoTable = _L2ProtocolTunnelSlowProtoTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 8)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelSlowProtoTable.setStatus("current")
_L2ProtocolTunnelSlowProtoEntry_Object = MibTableRow
l2ProtocolTunnelSlowProtoEntry = _L2ProtocolTunnelSlowProtoEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 8, 1)
)
l2ProtocolTunnelSlowProtoEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelSlowProtoEntry.setStatus("current")


class _L2ProtocolTunnelSlowProtoType_Type(Integer32):
    """Custom type l2ProtocolTunnelSlowProtoType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelSlowProtoType_Type.__name__ = "Integer32"
_L2ProtocolTunnelSlowProtoType_Object = MibTableColumn
l2ProtocolTunnelSlowProtoType = _L2ProtocolTunnelSlowProtoType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 8, 1, 1),
    _L2ProtocolTunnelSlowProtoType_Type()
)
l2ProtocolTunnelSlowProtoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelSlowProtoType.setStatus("current")


class _L2ProtocolTunnelSlowProtoEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelSlowProtoEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelSlowProtoEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelSlowProtoEvcName_Object = MibTableColumn
l2ProtocolTunnelSlowProtoEvcName = _L2ProtocolTunnelSlowProtoEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 8, 1, 2),
    _L2ProtocolTunnelSlowProtoEvcName_Type()
)
l2ProtocolTunnelSlowProtoEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelSlowProtoEvcName.setStatus("current")
_L2ProtocolTunnelSlowProtoRowstatus_Type = RowStatus
_L2ProtocolTunnelSlowProtoRowstatus_Object = MibTableColumn
l2ProtocolTunnelSlowProtoRowstatus = _L2ProtocolTunnelSlowProtoRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 8, 1, 3),
    _L2ProtocolTunnelSlowProtoRowstatus_Type()
)
l2ProtocolTunnelSlowProtoRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelSlowProtoRowstatus.setStatus("current")
_L2ProtocolTunnelStpTable_Object = MibTable
l2ProtocolTunnelStpTable = _L2ProtocolTunnelStpTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 9)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelStpTable.setStatus("current")
_L2ProtocolTunnelStpEntry_Object = MibTableRow
l2ProtocolTunnelStpEntry = _L2ProtocolTunnelStpEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 9, 1)
)
l2ProtocolTunnelStpEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelStpEntry.setStatus("current")


class _L2ProtocolTunnelStpType_Type(Integer32):
    """Custom type l2ProtocolTunnelStpType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelStpType_Type.__name__ = "Integer32"
_L2ProtocolTunnelStpType_Object = MibTableColumn
l2ProtocolTunnelStpType = _L2ProtocolTunnelStpType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 9, 1, 1),
    _L2ProtocolTunnelStpType_Type()
)
l2ProtocolTunnelStpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelStpType.setStatus("current")


class _L2ProtocolTunnelStpEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelStpEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelStpEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelStpEvcName_Object = MibTableColumn
l2ProtocolTunnelStpEvcName = _L2ProtocolTunnelStpEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 9, 1, 2),
    _L2ProtocolTunnelStpEvcName_Type()
)
l2ProtocolTunnelStpEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelStpEvcName.setStatus("current")
_L2ProtocolTunnelStpRowstatus_Type = RowStatus
_L2ProtocolTunnelStpRowstatus_Object = MibTableColumn
l2ProtocolTunnelStpRowstatus = _L2ProtocolTunnelStpRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 9, 1, 3),
    _L2ProtocolTunnelStpRowstatus_Type()
)
l2ProtocolTunnelStpRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelStpRowstatus.setStatus("current")
_L2ProtocolTunnelCfmTable_Object = MibTable
l2ProtocolTunnelCfmTable = _L2ProtocolTunnelCfmTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 10)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelCfmTable.setStatus("current")
_L2ProtocolTunnelCfmEntry_Object = MibTableRow
l2ProtocolTunnelCfmEntry = _L2ProtocolTunnelCfmEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 10, 1)
)
l2ProtocolTunnelCfmEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelCfmEntry.setStatus("current")


class _L2ProtocolTunnelCfmType_Type(Integer32):
    """Custom type l2ProtocolTunnelCfmType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelCfmType_Type.__name__ = "Integer32"
_L2ProtocolTunnelCfmType_Object = MibTableColumn
l2ProtocolTunnelCfmType = _L2ProtocolTunnelCfmType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 10, 1, 1),
    _L2ProtocolTunnelCfmType_Type()
)
l2ProtocolTunnelCfmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelCfmType.setStatus("current")


class _L2ProtocolTunnelCfmEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelCfmEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelCfmEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelCfmEvcName_Object = MibTableColumn
l2ProtocolTunnelCfmEvcName = _L2ProtocolTunnelCfmEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 10, 1, 2),
    _L2ProtocolTunnelCfmEvcName_Type()
)
l2ProtocolTunnelCfmEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelCfmEvcName.setStatus("current")
_L2ProtocolTunnelCfmRowstatus_Type = RowStatus
_L2ProtocolTunnelCfmRowstatus_Object = MibTableColumn
l2ProtocolTunnelCfmRowstatus = _L2ProtocolTunnelCfmRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 10, 1, 3),
    _L2ProtocolTunnelCfmRowstatus_Type()
)
l2ProtocolTunnelCfmRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelCfmRowstatus.setStatus("current")
_L2ProtocolTunnelUplinkTable_Object = MibTable
l2ProtocolTunnelUplinkTable = _L2ProtocolTunnelUplinkTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 11)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelUplinkTable.setStatus("current")
_L2ProtocolTunnelUplinkEntry_Object = MibTableRow
l2ProtocolTunnelUplinkEntry = _L2ProtocolTunnelUplinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 11, 1)
)
l2ProtocolTunnelUplinkEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelUplinkEntry.setStatus("current")


class _L2ProtocolTunnelUplinkEnable_Type(Integer32):
    """Custom type l2ProtocolTunnelUplinkEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_L2ProtocolTunnelUplinkEnable_Type.__name__ = "Integer32"
_L2ProtocolTunnelUplinkEnable_Object = MibTableColumn
l2ProtocolTunnelUplinkEnable = _L2ProtocolTunnelUplinkEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 11, 1, 1),
    _L2ProtocolTunnelUplinkEnable_Type()
)
l2ProtocolTunnelUplinkEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelUplinkEnable.setStatus("current")
_L2ProtocolTunnelUplinkRowstatus_Type = RowStatus
_L2ProtocolTunnelUplinkRowstatus_Object = MibTableColumn
l2ProtocolTunnelUplinkRowstatus = _L2ProtocolTunnelUplinkRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 11, 1, 2),
    _L2ProtocolTunnelUplinkRowstatus_Type()
)
l2ProtocolTunnelUplinkRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelUplinkRowstatus.setStatus("current")
_L2ProtocolFullMacTable_Object = MibTable
l2ProtocolFullMacTable = _L2ProtocolFullMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 12)
)
if mibBuilder.loadTexts:
    l2ProtocolFullMacTable.setStatus("current")
_L2ProtocolFullMacEntry_Object = MibTableRow
l2ProtocolFullMacEntry = _L2ProtocolFullMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 12, 1)
)
l2ProtocolFullMacEntry.setIndexNames(
    (0, "SWITCH", "l2ProtocolFullMacIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolFullMacEntry.setStatus("current")


class _L2ProtocolFullMacIndex_Type(Integer32):
    """Custom type l2ProtocolFullMacIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_L2ProtocolFullMacIndex_Type.__name__ = "Integer32"
_L2ProtocolFullMacIndex_Object = MibTableColumn
l2ProtocolFullMacIndex = _L2ProtocolFullMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 12, 1, 1),
    _L2ProtocolFullMacIndex_Type()
)
l2ProtocolFullMacIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    l2ProtocolFullMacIndex.setStatus("current")
_L2ProtocolFullMac_Type = MacAddress
_L2ProtocolFullMac_Object = MibTableColumn
l2ProtocolFullMac = _L2ProtocolFullMac_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 12, 1, 2),
    _L2ProtocolFullMac_Type()
)
l2ProtocolFullMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolFullMac.setStatus("current")
_L2ProtocolFullMacRowstatus_Type = RowStatus
_L2ProtocolFullMacRowstatus_Object = MibTableColumn
l2ProtocolFullMacRowstatus = _L2ProtocolFullMacRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 12, 1, 3),
    _L2ProtocolFullMacRowstatus_Type()
)
l2ProtocolFullMacRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolFullMacRowstatus.setStatus("current")
_L2ProtocolTunnelFullMacTable_Object = MibTable
l2ProtocolTunnelFullMacTable = _L2ProtocolTunnelFullMacTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 13)
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelFullMacTable.setStatus("current")
_L2ProtocolTunnelFullMacEntry_Object = MibTableRow
l2ProtocolTunnelFullMacEntry = _L2ProtocolTunnelFullMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 13, 1)
)
l2ProtocolTunnelFullMacEntry.setIndexNames(
    (0, "SWITCH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    l2ProtocolTunnelFullMacEntry.setStatus("current")


class _L2ProtocolTunnelFullMacType_Type(Integer32):
    """Custom type l2ProtocolTunnelFullMacType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("peer", 0),
          ("tunnel", 1),
          ("discard", 2))
    )


_L2ProtocolTunnelFullMacType_Type.__name__ = "Integer32"
_L2ProtocolTunnelFullMacType_Object = MibTableColumn
l2ProtocolTunnelFullMacType = _L2ProtocolTunnelFullMacType_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 13, 1, 1),
    _L2ProtocolTunnelFullMacType_Type()
)
l2ProtocolTunnelFullMacType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelFullMacType.setStatus("current")


class _L2ProtocolTunnelFullMacEvcName_Type(OctetString):
    """Custom type l2ProtocolTunnelFullMacEvcName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_L2ProtocolTunnelFullMacEvcName_Type.__name__ = "OctetString"
_L2ProtocolTunnelFullMacEvcName_Object = MibTableColumn
l2ProtocolTunnelFullMacEvcName = _L2ProtocolTunnelFullMacEvcName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 13, 1, 2),
    _L2ProtocolTunnelFullMacEvcName_Type()
)
l2ProtocolTunnelFullMacEvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelFullMacEvcName.setStatus("current")
_L2ProtocolTunnelFullMacRowstatus_Type = RowStatus
_L2ProtocolTunnelFullMacRowstatus_Object = MibTableColumn
l2ProtocolTunnelFullMacRowstatus = _L2ProtocolTunnelFullMacRowstatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 100, 13, 1, 3),
    _L2ProtocolTunnelFullMacRowstatus_Type()
)
l2ProtocolTunnelFullMacRowstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    l2ProtocolTunnelFullMacRowstatus.setStatus("current")
_LoopbackDetect_ObjectIdentity = ObjectIdentity
loopbackDetect = _LoopbackDetect_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 105)
)
_LoopbackDetectIfTable_Object = MibTable
loopbackDetectIfTable = _LoopbackDetectIfTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1)
)
if mibBuilder.loadTexts:
    loopbackDetectIfTable.setStatus("current")
_LoopbackDetectIfEntry_Object = MibTableRow
loopbackDetectIfEntry = _LoopbackDetectIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1, 1)
)
loopbackDetectIfEntry.setIndexNames(
    (0, "SWITCH", "loopbackDetectIfIndex"),
)
if mibBuilder.loadTexts:
    loopbackDetectIfEntry.setStatus("current")


class _LoopbackDetectIfIndex_Type(Integer32):
    """Custom type loopbackDetectIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_LoopbackDetectIfIndex_Type.__name__ = "Integer32"
_LoopbackDetectIfIndex_Object = MibTableColumn
loopbackDetectIfIndex = _LoopbackDetectIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1, 1, 1),
    _LoopbackDetectIfIndex_Type()
)
loopbackDetectIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    loopbackDetectIfIndex.setStatus("current")


class _LoopbackDetectEnable_Type(Integer32):
    """Custom type loopbackDetectEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("enable", 1),
          ("disable", 2))
    )


_LoopbackDetectEnable_Type.__name__ = "Integer32"
_LoopbackDetectEnable_Object = MibTableColumn
loopbackDetectEnable = _LoopbackDetectEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1, 1, 2),
    _LoopbackDetectEnable_Type()
)
loopbackDetectEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackDetectEnable.setStatus("current")


class _LoopbackDetectAction_Type(Integer32):
    """Custom type loopbackDetectAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("shutdown", 1),
          ("trap", 2))
    )


_LoopbackDetectAction_Type.__name__ = "Integer32"
_LoopbackDetectAction_Object = MibTableColumn
loopbackDetectAction = _LoopbackDetectAction_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1, 1, 3),
    _LoopbackDetectAction_Type()
)
loopbackDetectAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackDetectAction.setStatus("current")


class _LoopbackDetectStatus_Type(Integer32):
    """Custom type loopbackDetectStatus based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("trap", 1),
          ("shutdown", 2),
          ("normal", 3))
    )


_LoopbackDetectStatus_Type.__name__ = "Integer32"
_LoopbackDetectStatus_Object = MibTableColumn
loopbackDetectStatus = _LoopbackDetectStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1, 1, 4),
    _LoopbackDetectStatus_Type()
)
loopbackDetectStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loopbackDetectStatus.setStatus("current")


class _LoopbackDetectPktInterval_Type(Integer32):
    """Custom type loopbackDetectPktInterval based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_LoopbackDetectPktInterval_Type.__name__ = "Integer32"
_LoopbackDetectPktInterval_Object = MibScalar
loopbackDetectPktInterval = _LoopbackDetectPktInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 105, 2),
    _LoopbackDetectPktInterval_Type()
)
loopbackDetectPktInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackDetectPktInterval.setStatus("current")
_LoopbackDetectTrap_ObjectIdentity = ObjectIdentity
loopbackDetectTrap = _LoopbackDetectTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1000)
)
_Ipsla_ObjectIdentity = ObjectIdentity
ipsla = _Ipsla_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 106)
)
_IpslaCtrlAdminTable_Object = MibTable
ipslaCtrlAdminTable = _IpslaCtrlAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1)
)
if mibBuilder.loadTexts:
    ipslaCtrlAdminTable.setStatus("current")
_IpslaCtrlAdminEntry_Object = MibTableRow
ipslaCtrlAdminEntry = _IpslaCtrlAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1)
)
ipslaCtrlAdminEntry.setIndexNames(
    (0, "SWITCH", "ipslaCtrlAdminIndex"),
)
if mibBuilder.loadTexts:
    ipslaCtrlAdminEntry.setStatus("current")


class _IpslaCtrlAdminIndex_Type(Integer32):
    """Custom type ipslaCtrlAdminIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_IpslaCtrlAdminIndex_Type.__name__ = "Integer32"
_IpslaCtrlAdminIndex_Object = MibTableColumn
ipslaCtrlAdminIndex = _IpslaCtrlAdminIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 1),
    _IpslaCtrlAdminIndex_Type()
)
ipslaCtrlAdminIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipslaCtrlAdminIndex.setStatus("current")


class _IpslaCtrlAdminDesc_Type(DisplayString):
    """Custom type ipslaCtrlAdminDesc based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_IpslaCtrlAdminDesc_Type.__name__ = "DisplayString"
_IpslaCtrlAdminDesc_Object = MibTableColumn
ipslaCtrlAdminDesc = _IpslaCtrlAdminDesc_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 2),
    _IpslaCtrlAdminDesc_Type()
)
ipslaCtrlAdminDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminDesc.setStatus("current")


class _IpslaCtrlAdminThreshold_Type(Integer32):
    """Custom type ipslaCtrlAdminThreshold based on Integer32"""
    defaultValue = 5000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4800000),
    )


_IpslaCtrlAdminThreshold_Type.__name__ = "Integer32"
_IpslaCtrlAdminThreshold_Object = MibTableColumn
ipslaCtrlAdminThreshold = _IpslaCtrlAdminThreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 4),
    _IpslaCtrlAdminThreshold_Type()
)
ipslaCtrlAdminThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminThreshold.setStatus("current")


class _IpslaCtrlAdminFrequency_Type(Integer32):
    """Custom type ipslaCtrlAdminFrequency based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4800),
    )


_IpslaCtrlAdminFrequency_Type.__name__ = "Integer32"
_IpslaCtrlAdminFrequency_Object = MibTableColumn
ipslaCtrlAdminFrequency = _IpslaCtrlAdminFrequency_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 5),
    _IpslaCtrlAdminFrequency_Type()
)
ipslaCtrlAdminFrequency.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminFrequency.setStatus("current")


class _IpslaCtrlAdminTimeout_Type(Integer32):
    """Custom type ipslaCtrlAdminTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4800),
    )


_IpslaCtrlAdminTimeout_Type.__name__ = "Integer32"
_IpslaCtrlAdminTimeout_Object = MibTableColumn
ipslaCtrlAdminTimeout = _IpslaCtrlAdminTimeout_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 6),
    _IpslaCtrlAdminTimeout_Type()
)
ipslaCtrlAdminTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminTimeout.setStatus("current")


class _IpslaCtrlAdminInterval_Type(Integer32):
    """Custom type ipslaCtrlAdminInterval based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4800),
    )


_IpslaCtrlAdminInterval_Type.__name__ = "Integer32"
_IpslaCtrlAdminInterval_Object = MibTableColumn
ipslaCtrlAdminInterval = _IpslaCtrlAdminInterval_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 7),
    _IpslaCtrlAdminInterval_Type()
)
ipslaCtrlAdminInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminInterval.setStatus("current")


class _IpslaCtrlAdminPktsPerTest_Type(Integer32):
    """Custom type ipslaCtrlAdminPktsPerTest based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_IpslaCtrlAdminPktsPerTest_Type.__name__ = "Integer32"
_IpslaCtrlAdminPktsPerTest_Object = MibTableColumn
ipslaCtrlAdminPktsPerTest = _IpslaCtrlAdminPktsPerTest_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 8),
    _IpslaCtrlAdminPktsPerTest_Type()
)
ipslaCtrlAdminPktsPerTest.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminPktsPerTest.setStatus("current")


class _IpslaCtrlAdminTargetAddress_Type(OctetString):
    """Custom type ipslaCtrlAdminTargetAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_IpslaCtrlAdminTargetAddress_Type.__name__ = "OctetString"
_IpslaCtrlAdminTargetAddress_Object = MibTableColumn
ipslaCtrlAdminTargetAddress = _IpslaCtrlAdminTargetAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 9),
    _IpslaCtrlAdminTargetAddress_Type()
)
ipslaCtrlAdminTargetAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminTargetAddress.setStatus("current")


class _IpslaCtrlAdminSourceAddress_Type(OctetString):
    """Custom type ipslaCtrlAdminSourceAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4


_IpslaCtrlAdminSourceAddress_Type.__name__ = "OctetString"
_IpslaCtrlAdminSourceAddress_Object = MibTableColumn
ipslaCtrlAdminSourceAddress = _IpslaCtrlAdminSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 10),
    _IpslaCtrlAdminSourceAddress_Type()
)
ipslaCtrlAdminSourceAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminSourceAddress.setStatus("current")


class _IpslaCtrlAdminSourceInterface_Type(OctetString):
    """Custom type ipslaCtrlAdminSourceInterface based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )
    fixed_length = 16


_IpslaCtrlAdminSourceInterface_Type.__name__ = "OctetString"
_IpslaCtrlAdminSourceInterface_Object = MibTableColumn
ipslaCtrlAdminSourceInterface = _IpslaCtrlAdminSourceInterface_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 11),
    _IpslaCtrlAdminSourceInterface_Type()
)
ipslaCtrlAdminSourceInterface.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminSourceInterface.setStatus("current")
_IpslaCtrlAdminStatus_Type = RowStatus
_IpslaCtrlAdminStatus_Object = MibTableColumn
ipslaCtrlAdminStatus = _IpslaCtrlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 1, 1, 12),
    _IpslaCtrlAdminStatus_Type()
)
ipslaCtrlAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    ipslaCtrlAdminStatus.setStatus("current")
_IpslaEchoAdminTable_Object = MibTable
ipslaEchoAdminTable = _IpslaEchoAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2)
)
if mibBuilder.loadTexts:
    ipslaEchoAdminTable.setStatus("current")
_IpslaEchoAdminEntry_Object = MibTableRow
ipslaEchoAdminEntry = _IpslaEchoAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1)
)
ipslaEchoAdminEntry.setIndexNames(
    (0, "SWITCH", "ipslaCtrlAdminIndex"),
)
if mibBuilder.loadTexts:
    ipslaEchoAdminEntry.setStatus("current")


class _IpslaEchoAdminDataSize_Type(Integer32):
    """Custom type ipslaEchoAdminDataSize based on Integer32"""
    defaultValue = 28

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8100),
    )


_IpslaEchoAdminDataSize_Type.__name__ = "Integer32"
_IpslaEchoAdminDataSize_Object = MibTableColumn
ipslaEchoAdminDataSize = _IpslaEchoAdminDataSize_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 1),
    _IpslaEchoAdminDataSize_Type()
)
ipslaEchoAdminDataSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminDataSize.setStatus("current")


class _IpslaEchoAdminDataPattern_Type(OctetString):
    """Custom type ipslaEchoAdminDataPattern based on OctetString"""
    defaultValue = OctetString("ABCDABCD")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_IpslaEchoAdminDataPattern_Type.__name__ = "OctetString"
_IpslaEchoAdminDataPattern_Object = MibTableColumn
ipslaEchoAdminDataPattern = _IpslaEchoAdminDataPattern_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 2),
    _IpslaEchoAdminDataPattern_Type()
)
ipslaEchoAdminDataPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminDataPattern.setStatus("current")


class _IpslaEchoAdminTOS_Type(Integer32):
    """Custom type ipslaEchoAdminTOS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpslaEchoAdminTOS_Type.__name__ = "Integer32"
_IpslaEchoAdminTOS_Object = MibTableColumn
ipslaEchoAdminTOS = _IpslaEchoAdminTOS_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 3),
    _IpslaEchoAdminTOS_Type()
)
ipslaEchoAdminTOS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminTOS.setStatus("current")


class _IpslaEchoAdminTTL_Type(Integer32):
    """Custom type ipslaEchoAdminTTL based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_IpslaEchoAdminTTL_Type.__name__ = "Integer32"
_IpslaEchoAdminTTL_Object = MibTableColumn
ipslaEchoAdminTTL = _IpslaEchoAdminTTL_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 4),
    _IpslaEchoAdminTTL_Type()
)
ipslaEchoAdminTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminTTL.setStatus("current")


class _IpslaEchoAdminFailPercent_Type(Integer32):
    """Custom type ipslaEchoAdminFailPercent based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_IpslaEchoAdminFailPercent_Type.__name__ = "Integer32"
_IpslaEchoAdminFailPercent_Object = MibTableColumn
ipslaEchoAdminFailPercent = _IpslaEchoAdminFailPercent_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 5),
    _IpslaEchoAdminFailPercent_Type()
)
ipslaEchoAdminFailPercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminFailPercent.setStatus("current")


class _IpslaEchoAdminVrfName_Type(DisplayString):
    """Custom type ipslaEchoAdminVrfName based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_IpslaEchoAdminVrfName_Type.__name__ = "DisplayString"
_IpslaEchoAdminVrfName_Object = MibTableColumn
ipslaEchoAdminVrfName = _IpslaEchoAdminVrfName_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 6),
    _IpslaEchoAdminVrfName_Type()
)
ipslaEchoAdminVrfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminVrfName.setStatus("current")


class _IpslaEchoAdminTestStatsNum_Type(Integer32):
    """Custom type ipslaEchoAdminTestStatsNum based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_IpslaEchoAdminTestStatsNum_Type.__name__ = "Integer32"
_IpslaEchoAdminTestStatsNum_Object = MibTableColumn
ipslaEchoAdminTestStatsNum = _IpslaEchoAdminTestStatsNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 7),
    _IpslaEchoAdminTestStatsNum_Type()
)
ipslaEchoAdminTestStatsNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminTestStatsNum.setStatus("current")


class _IpslaEchoAdminPktStatsNum_Type(Integer32):
    """Custom type ipslaEchoAdminPktStatsNum based on Integer32"""
    defaultValue = 50

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_IpslaEchoAdminPktStatsNum_Type.__name__ = "Integer32"
_IpslaEchoAdminPktStatsNum_Object = MibTableColumn
ipslaEchoAdminPktStatsNum = _IpslaEchoAdminPktStatsNum_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 2, 1, 8),
    _IpslaEchoAdminPktStatsNum_Type()
)
ipslaEchoAdminPktStatsNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaEchoAdminPktStatsNum.setStatus("current")
_IpslaScheduleAdminTable_Object = MibTable
ipslaScheduleAdminTable = _IpslaScheduleAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 3)
)
if mibBuilder.loadTexts:
    ipslaScheduleAdminTable.setStatus("current")
_IpslaScheduleAdminEntry_Object = MibTableRow
ipslaScheduleAdminEntry = _IpslaScheduleAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 3, 1)
)
ipslaScheduleAdminEntry.setIndexNames(
    (0, "SWITCH", "ipslaCtrlAdminIndex"),
)
if mibBuilder.loadTexts:
    ipslaScheduleAdminEntry.setStatus("current")


class _IpslaScheduleAdminStatus_Type(Integer32):
    """Custom type ipslaScheduleAdminStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_IpslaScheduleAdminStatus_Type.__name__ = "Integer32"
_IpslaScheduleAdminStatus_Object = MibTableColumn
ipslaScheduleAdminStatus = _IpslaScheduleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 3, 1, 1),
    _IpslaScheduleAdminStatus_Type()
)
ipslaScheduleAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaScheduleAdminStatus.setStatus("current")
_IpslaTestStatsTable_Object = MibTable
ipslaTestStatsTable = _IpslaTestStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4)
)
if mibBuilder.loadTexts:
    ipslaTestStatsTable.setStatus("current")
_IpslaTestStatsEntry_Object = MibTableRow
ipslaTestStatsEntry = _IpslaTestStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1)
)
ipslaTestStatsEntry.setIndexNames(
    (0, "SWITCH", "ipslaTestEntryId"),
    (0, "SWITCH", "ipslaTestStatsIndex"),
)
if mibBuilder.loadTexts:
    ipslaTestStatsEntry.setStatus("current")
_IpslaTestEntryId_Type = Integer32
_IpslaTestEntryId_Object = MibTableColumn
ipslaTestEntryId = _IpslaTestEntryId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 1),
    _IpslaTestEntryId_Type()
)
ipslaTestEntryId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipslaTestEntryId.setStatus("current")
_IpslaTestStatsIndex_Type = Integer32
_IpslaTestStatsIndex_Object = MibTableColumn
ipslaTestStatsIndex = _IpslaTestStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 2),
    _IpslaTestStatsIndex_Type()
)
ipslaTestStatsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipslaTestStatsIndex.setStatus("current")
_IpslaTestTransmitted_Type = Counter32
_IpslaTestTransmitted_Object = MibTableColumn
ipslaTestTransmitted = _IpslaTestTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 3),
    _IpslaTestTransmitted_Type()
)
ipslaTestTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestTransmitted.setStatus("current")
_IpslaTestReceived_Type = Counter32
_IpslaTestReceived_Object = MibTableColumn
ipslaTestReceived = _IpslaTestReceived_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 4),
    _IpslaTestReceived_Type()
)
ipslaTestReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestReceived.setStatus("current")
_IpslaTestOverthreshold_Type = Counter32
_IpslaTestOverthreshold_Object = MibTableColumn
ipslaTestOverthreshold = _IpslaTestOverthreshold_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 5),
    _IpslaTestOverthreshold_Type()
)
ipslaTestOverthreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestOverthreshold.setStatus("current")
_IpslaTestRttMax_Type = Integer32
_IpslaTestRttMax_Object = MibTableColumn
ipslaTestRttMax = _IpslaTestRttMax_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 6),
    _IpslaTestRttMax_Type()
)
ipslaTestRttMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestRttMax.setStatus("current")
_IpslaTestRttMin_Type = Integer32
_IpslaTestRttMin_Object = MibTableColumn
ipslaTestRttMin = _IpslaTestRttMin_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 7),
    _IpslaTestRttMin_Type()
)
ipslaTestRttMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestRttMin.setStatus("current")
_IpslaTestRttAvg_Type = Integer32
_IpslaTestRttAvg_Object = MibTableColumn
ipslaTestRttAvg = _IpslaTestRttAvg_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 8),
    _IpslaTestRttAvg_Type()
)
ipslaTestRttAvg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestRttAvg.setStatus("current")
_IpslaTestLastTransmitted_Type = DateAndTime
_IpslaTestLastTransmitted_Object = MibTableColumn
ipslaTestLastTransmitted = _IpslaTestLastTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 9),
    _IpslaTestLastTransmitted_Type()
)
ipslaTestLastTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestLastTransmitted.setStatus("current")


class _IpslaTestPktLossRatio_Type(Integer32):
    """Custom type ipslaTestPktLossRatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_IpslaTestPktLossRatio_Type.__name__ = "Integer32"
_IpslaTestPktLossRatio_Object = MibTableColumn
ipslaTestPktLossRatio = _IpslaTestPktLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 10),
    _IpslaTestPktLossRatio_Type()
)
ipslaTestPktLossRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestPktLossRatio.setStatus("current")


class _IpslaTestResult_Type(Integer32):
    """Custom type ipslaTestResult based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_IpslaTestResult_Type.__name__ = "Integer32"
_IpslaTestResult_Object = MibTableColumn
ipslaTestResult = _IpslaTestResult_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 4, 1, 11),
    _IpslaTestResult_Type()
)
ipslaTestResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaTestResult.setStatus("current")
_IpslaPktStatsTable_Object = MibTable
ipslaPktStatsTable = _IpslaPktStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5)
)
if mibBuilder.loadTexts:
    ipslaPktStatsTable.setStatus("current")
_IpslaPktStatsEntry_Object = MibTableRow
ipslaPktStatsEntry = _IpslaPktStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1)
)
ipslaPktStatsEntry.setIndexNames(
    (0, "SWITCH", "ipslaPktEntryId"),
    (0, "SWITCH", "ipslaPktStatsIndex"),
)
if mibBuilder.loadTexts:
    ipslaPktStatsEntry.setStatus("current")
_IpslaPktEntryId_Type = Integer32
_IpslaPktEntryId_Object = MibTableColumn
ipslaPktEntryId = _IpslaPktEntryId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 1),
    _IpslaPktEntryId_Type()
)
ipslaPktEntryId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktEntryId.setStatus("current")
_IpslaPktStatsIndex_Type = Integer32
_IpslaPktStatsIndex_Object = MibTableColumn
ipslaPktStatsIndex = _IpslaPktStatsIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 2),
    _IpslaPktStatsIndex_Type()
)
ipslaPktStatsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktStatsIndex.setStatus("current")
_IpslaPktTestId_Type = Integer32
_IpslaPktTestId_Object = MibTableColumn
ipslaPktTestId = _IpslaPktTestId_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 3),
    _IpslaPktTestId_Type()
)
ipslaPktTestId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktTestId.setStatus("current")
_IpslaPktIndex_Type = Integer32
_IpslaPktIndex_Object = MibTableColumn
ipslaPktIndex = _IpslaPktIndex_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 4),
    _IpslaPktIndex_Type()
)
ipslaPktIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktIndex.setStatus("current")
_IpslaPktRtt_Type = Integer32
_IpslaPktRtt_Object = MibTableColumn
ipslaPktRtt = _IpslaPktRtt_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 5),
    _IpslaPktRtt_Type()
)
ipslaPktRtt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktRtt.setStatus("current")
_IpslaPktResult_Type = Integer32
_IpslaPktResult_Object = MibTableColumn
ipslaPktResult = _IpslaPktResult_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 6),
    _IpslaPktResult_Type()
)
ipslaPktResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktResult.setStatus("current")
_IpslaPktSendTime_Type = DateAndTime
_IpslaPktSendTime_Object = MibTableColumn
ipslaPktSendTime = _IpslaPktSendTime_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 5, 1, 7),
    _IpslaPktSendTime_Type()
)
ipslaPktSendTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipslaPktSendTime.setStatus("current")


class _IpslaTrapEnable_Type(Bits):
    """Custom type ipslaTrapEnable based on Bits"""
    namedValues = NamedValues(
        *(("testfailure", 0),
          ("packettimeout", 1),
          ("testsuccess", 2),
          ("overthreshold", 3))
    )

_IpslaTrapEnable_Type.__name__ = "Bits"
_IpslaTrapEnable_Object = MibScalar
ipslaTrapEnable = _IpslaTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 27975, 106, 6),
    _IpslaTrapEnable_Type()
)
ipslaTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipslaTrapEnable.setStatus("current")
_IpslaTrap_ObjectIdentity = ObjectIdentity
ipslaTrap = _IpslaTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 27975, 106, 7)
)

# Managed Objects groups


# Notification objects

writeSuccessTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 1)
)
writeSuccessTrap.setObjects(
    ("SWITCH", "configSave")
)
if mibBuilder.loadTexts:
    writeSuccessTrap.setStatus(
        "current"
    )

writeFailureTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 2)
)
writeFailureTrap.setObjects(
    ("SWITCH", "configSave")
)
if mibBuilder.loadTexts:
    writeFailureTrap.setStatus(
        "current"
    )

rebootSendTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 3)
)
rebootSendTrap.setObjects(
    ("SWITCH", "reload")
)
if mibBuilder.loadTexts:
    rebootSendTrap.setStatus(
        "current"
    )

memUsageHigher = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 4)
)
memUsageHigher.setObjects(
    ("SWITCH", "memTotalFree")
)
if mibBuilder.loadTexts:
    memUsageHigher.setStatus(
        "current"
    )

memUsageFormHigherToNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 5)
)
memUsageFormHigherToNormal.setObjects(
    ("SWITCH", "memTotalFree")
)
if mibBuilder.loadTexts:
    memUsageFormHigherToNormal.setStatus(
        "current"
    )

vtySessionStartTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 6)
)
vtySessionStartTrap.setObjects(
      *(("SWITCH", "usersLineIndex"),
        ("SWITCH", "usersname"),
        ("SWITCH", "usersLocation"))
)
if mibBuilder.loadTexts:
    vtySessionStartTrap.setStatus(
        "current"
    )

vtySessionStopTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 7)
)
vtySessionStopTrap.setObjects(
      *(("SWITCH", "usersLineIndex"),
        ("SWITCH", "usersname"),
        ("SWITCH", "usersLocation"))
)
if mibBuilder.loadTexts:
    vtySessionStopTrap.setStatus(
        "current"
    )

timeChangeTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 8)
)
timeChangeTrap.setObjects(
      *(("SWITCH", "timeSetClock"),
        ("SWITCH", "timeSetMonth"),
        ("SWITCH", "timeSetDay"),
        ("SWITCH", "timeSetYear"))
)
if mibBuilder.loadTexts:
    timeChangeTrap.setStatus(
        "current"
    )

cpuUsageHigher = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 9)
)
cpuUsageHigher.setObjects(
    ("SWITCH", "ssCpuIdle")
)
if mibBuilder.loadTexts:
    cpuUsageHigher.setStatus(
        "current"
    )

cpuUsageFormHigherToNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 10)
)
cpuUsageFormHigherToNormal.setObjects(
    ("SWITCH", "ssCpuIdle")
)
if mibBuilder.loadTexts:
    cpuUsageFormHigherToNormal.setStatus(
        "current"
    )

lastCommandTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 11)
)
lastCommandTrap.setObjects(
    ("SWITCH", "lastCommand")
)
if mibBuilder.loadTexts:
    lastCommandTrap.setStatus(
        "current"
    )

cFInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 12)
)
cFInserted.setObjects(
    ("SWITCH", "cfIndex")
)
if mibBuilder.loadTexts:
    cFInserted.setStatus(
        "current"
    )

cFRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 13)
)
cFRemoved.setObjects(
    ("SWITCH", "cfIndex")
)
if mibBuilder.loadTexts:
    cFRemoved.setStatus(
        "current"
    )

loginFailTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 14)
)
loginFailTrap.setObjects(
    ("SWITCH", "loginFail")
)
if mibBuilder.loadTexts:
    loginFailTrap.setStatus(
        "current"
    )

processDumpTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 1, 7, 15)
)
processDumpTrap.setObjects(
    ("SWITCH", "lastDumpedProcess")
)
if mibBuilder.loadTexts:
    processDumpTrap.setStatus(
        "current"
    )

igmpSnoopingGrplimitReach = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 9, 2, 1)
)
igmpSnoopingGrplimitReach.setObjects(
    ("SWITCH", "configSave")
)
if mibBuilder.loadTexts:
    igmpSnoopingGrplimitReach.setStatus(
        "current"
    )

igmpSnoopingVlanGrplimitReach = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 9, 2, 2)
)
igmpSnoopingVlanGrplimitReach.setObjects(
    ("SWITCH", "configSave")
)
if mibBuilder.loadTexts:
    igmpSnoopingVlanGrplimitReach.setStatus(
        "current"
    )

igmpSnoopingVlanQuerierSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 9, 2, 3)
)
igmpSnoopingVlanQuerierSwitch.setObjects(
    ("SWITCH", "igmpSnoopingVlanQuerierOperationalAddress")
)
if mibBuilder.loadTexts:
    igmpSnoopingVlanQuerierSwitch.setStatus(
        "current"
    )

fdbExtDbFull = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 11, 2, 10, 1)
)
fdbExtDbFull.setObjects(
    ("SWITCH", "vlanIndex")
)
if mibBuilder.loadTexts:
    fdbExtDbFull.setStatus(
        "current"
    )

powerabsent = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 1)
)
powerabsent.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerabsent.setStatus(
        "current"
    )

powerfailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 2)
)
powerfailure.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerfailure.setStatus(
        "current"
    )

powerNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 3)
)
powerNormal.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerNormal.setStatus(
        "current"
    )

powerfanfailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 4)
)
powerfanfailure.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerfanfailure.setStatus(
        "current"
    )

fanfailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 5)
)
fanfailure.setObjects(
      *(("SWITCH", "devMFanPosition"),
        ("SWITCH", "devMFanModuleId"),
        ("SWITCH", "devMFanIndex"))
)
if mibBuilder.loadTexts:
    fanfailure.setStatus(
        "current"
    )

fanNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 6)
)
fanNormal.setObjects(
      *(("SWITCH", "devMFanPosition"),
        ("SWITCH", "devMFanModuleId"),
        ("SWITCH", "devMFanIndex"))
)
if mibBuilder.loadTexts:
    fanNormal.setStatus(
        "current"
    )

supervisorRemove = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 11)
)
supervisorRemove.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"))
)
if mibBuilder.loadTexts:
    supervisorRemove.setStatus(
        "current"
    )

supervisorInsert = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 12)
)
supervisorInsert.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"))
)
if mibBuilder.loadTexts:
    supervisorInsert.setStatus(
        "current"
    )

boardTemperatureAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 13)
)
boardTemperatureAlarm.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"),
        ("SWITCH", "devMSlotEnvironmentValue"))
)
if mibBuilder.loadTexts:
    boardTemperatureAlarm.setStatus(
        "current"
    )

boardTemperatureReturnNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 14)
)
boardTemperatureReturnNormal.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"),
        ("SWITCH", "devMSlotEnvironmentValue"))
)
if mibBuilder.loadTexts:
    boardTemperatureReturnNormal.setStatus(
        "current"
    )

loadFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 15)
)
loadFailure.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"))
)
if mibBuilder.loadTexts:
    loadFailure.setStatus(
        "current"
    )

loadFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 16)
)
loadFinished.setObjects(
      *(("SWITCH", "lswSlotFrameIndex"),
        ("SWITCH", "lswSlotIndex"))
)
if mibBuilder.loadTexts:
    loadFinished.setStatus(
        "current"
    )

transceiverInsert = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 18)
)
transceiverInsert.setObjects(
    ("SWITCH", "transceiveStatus")
)
if mibBuilder.loadTexts:
    transceiverInsert.setStatus(
        "current"
    )

transceiverRemove = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 19)
)
transceiverRemove.setObjects(
    ("SWITCH", "transceiveStatus")
)
if mibBuilder.loadTexts:
    transceiverRemove.setStatus(
        "current"
    )

transceiverSfpMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 20)
)
transceiverSfpMonitor.setObjects(
    ("SWITCH", "transceiveMointorStatus")
)
if mibBuilder.loadTexts:
    transceiverSfpMonitor.setStatus(
        "current"
    )

chsmBootupDiagTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 21)
)
chsmBootupDiagTrap.setObjects(
    ("SWITCH", "devMFanPosition")
)
if mibBuilder.loadTexts:
    chsmBootupDiagTrap.setStatus(
        "current"
    )

chsmPoePortStatTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 22)
)
chsmPoePortStatTrap.setObjects(
    ("SWITCH", "poeInformation")
)
if mibBuilder.loadTexts:
    chsmPoePortStatTrap.setStatus(
        "current"
    )

chsmPoeSysConsumpThresholdTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 23)
)
chsmPoeSysConsumpThresholdTrap.setObjects(
    ("SWITCH", "poeInformation")
)
if mibBuilder.loadTexts:
    chsmPoeSysConsumpThresholdTrap.setStatus(
        "current"
    )

chsmPoePseVoltageTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 24)
)
chsmPoePseVoltageTrap.setObjects(
    ("SWITCH", "poeInformation")
)
if mibBuilder.loadTexts:
    chsmPoePseVoltageTrap.setStatus(
        "current"
    )

fanAbsent = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 25)
)
fanAbsent.setObjects(
    ("SWITCH", "devMFanIndex")
)
if mibBuilder.loadTexts:
    fanAbsent.setStatus(
        "current"
    )

fanPresent = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 26)
)
fanPresent.setObjects(
    ("SWITCH", "devMFanIndex")
)
if mibBuilder.loadTexts:
    fanPresent.setStatus(
        "current"
    )

powerAlert = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 27)
)
powerAlert.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerAlert.setStatus(
        "current"
    )

powerNoAlert = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 28)
)
powerNoAlert.setObjects(
    ("SWITCH", "devMPowerIndex")
)
if mibBuilder.loadTexts:
    powerNoAlert.setStatus(
        "current"
    )

dyingGasp = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 39, 1, 29)
)
dyingGasp.setObjects(
    ("SWITCH", "dyingGaspEvent")
)
if mibBuilder.loadTexts:
    dyingGasp.setStatus(
        "current"
    )

ifpReceiveManyErrorPacket = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 42, 10, 1)
)
ifpReceiveManyErrorPacket.setObjects(
    ("SWITCH", "interfaceIndex")
)
if mibBuilder.loadTexts:
    ifpReceiveManyErrorPacket.setStatus(
        "current"
    )

erpsLinkSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 45, 10, 1)
)
erpsLinkSwitch.setObjects(
    ("SWITCH", "ringStatus")
)
if mibBuilder.loadTexts:
    erpsLinkSwitch.setStatus(
        "current"
    )

tpOAMEventTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 1)
)
tpOAMEventTrap.setObjects(
      *(("SWITCH", "mplsTpOAMEventService"),
        ("SWITCH", "mplsTpOAMEventMegId"),
        ("SWITCH", "mplsTpOAMEventMepId"),
        ("SWITCH", "mplsTpOAMEventId"),
        ("SWITCH", "mplsTpOAMEventAction"))
)
if mibBuilder.loadTexts:
    tpOAMEventTrap.setStatus(
        "current"
    )

mplsTunnelSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 2)
)
mplsTunnelSwitch.setObjects(
      *(("SWITCH", "mplsTunnelSelectedLspPe"),
        ("SWITCH", "mplsTunnelG8131CurrentState"))
)
if mibBuilder.loadTexts:
    mplsTunnelSwitch.setStatus(
        "current"
    )

mplsTPVpwsSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 3)
)
mplsTPVpwsSwitch.setObjects(
      *(("SWITCH", "mplsTPVpwsSelectedPw"),
        ("SWITCH", "mplsTPVpwsG8131CurrentState"))
)
if mibBuilder.loadTexts:
    mplsTPVpwsSwitch.setStatus(
        "current"
    )

mplsVplsTPPeerSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 4)
)
mplsVplsTPPeerSwitch.setObjects(
      *(("SWITCH", "mplsVplsTPPeerSelectedPw"),
        ("SWITCH", "mplsVplsTPPeerG8131CurrentState"))
)
if mibBuilder.loadTexts:
    mplsVplsTPPeerSwitch.setStatus(
        "current"
    )

mplsVpwsStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 5)
)
mplsVpwsStateChange.setObjects(
    ("SWITCH", "mplsVpwsState")
)
if mibBuilder.loadTexts:
    mplsVpwsStateChange.setStatus(
        "current"
    )

mplsVplsPeerStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 6)
)
mplsVplsPeerStateChange.setObjects(
    ("SWITCH", "mplsVplsPeerState")
)
if mibBuilder.loadTexts:
    mplsVplsPeerStateChange.setStatus(
        "current"
    )

mplsVpwsOAMCsfStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 7)
)
mplsVpwsOAMCsfStateChange.setObjects(
      *(("SWITCH", "mplsTPVpwsOAMCsfSrvState"),
        ("SWITCH", "mplsTPVpwsOAMCsfClientState"),
        ("SWITCH", "mplsTPVpwsOAMCsfDCReason"),
        ("SWITCH", "mplsTPVpwsOAMCsfClientInterval"))
)
if mibBuilder.loadTexts:
    mplsVpwsOAMCsfStateChange.setStatus(
        "current"
    )

tpOAMSingleLmLocalLossTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 8)
)
tpOAMSingleLmLocalLossTrap.setObjects(
      *(("SWITCH", "mplsTpOAMSingleLMCacheLocalLoss"),
        ("SWITCH", "mplsTpOAMSingleLMCacheLocalLossRatio"),
        ("SWITCH", "mplsTpOAMSingleLMCacheTime"))
)
if mibBuilder.loadTexts:
    tpOAMSingleLmLocalLossTrap.setStatus(
        "current"
    )

tpOAMSingleLmLocalLossClearTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 9)
)
tpOAMSingleLmLocalLossClearTrap.setObjects(
      *(("SWITCH", "mplsTpOAMSingleLMCacheLocalLoss"),
        ("SWITCH", "mplsTpOAMSingleLMCacheLocalLossRatio"),
        ("SWITCH", "mplsTpOAMSingleLMCacheTime"))
)
if mibBuilder.loadTexts:
    tpOAMSingleLmLocalLossClearTrap.setStatus(
        "current"
    )

tpOAMSingleLmRemoteLossTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 10)
)
tpOAMSingleLmRemoteLossTrap.setObjects(
      *(("SWITCH", "mplsTpOAMSingleLMCacheRemoteLoss"),
        ("SWITCH", "mplsTpOAMSingleLMCacheLocalLossRatio"),
        ("SWITCH", "mplsTpOAMSingleLMCacheTime"))
)
if mibBuilder.loadTexts:
    tpOAMSingleLmRemoteLossTrap.setStatus(
        "current"
    )

tpOAMSingleLmRemoteLossClearTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 69, 1000, 11)
)
tpOAMSingleLmRemoteLossClearTrap.setObjects(
      *(("SWITCH", "mplsTpOAMSingleLMCacheRemoteLoss"),
        ("SWITCH", "mplsTpOAMSingleLMCacheRemoteLossRatio"),
        ("SWITCH", "mplsTpOAMSingleLMCacheTime"))
)
if mibBuilder.loadTexts:
    tpOAMSingleLmRemoteLossClearTrap.setStatus(
        "current"
    )

syncEStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 81, 100, 1)
)
syncEStateChange.setObjects(
      *(("SWITCH", "syncEClockState"),
        ("SWITCH", "syncESelectedInterface"))
)
if mibBuilder.loadTexts:
    syncEStateChange.setStatus(
        "current"
    )

cfmErrorTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 83, 1000, 1)
)
cfmErrorTrap.setObjects(
      *(("SWITCH", "cfmErrorRmac"),
        ("SWITCH", "cfmErrorReason"))
)
if mibBuilder.loadTexts:
    cfmErrorTrap.setStatus(
        "current"
    )

ptpMasterChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 85, 100, 1)
)
ptpMasterChange.setObjects(
    ("SWITCH", "ptpFMClockID")
)
if mibBuilder.loadTexts:
    ptpMasterChange.setStatus(
        "current"
    )

ptpIfStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 85, 100, 2)
)
ptpIfStateChange.setObjects(
    ("SWITCH", "ptpIfState")
)
if mibBuilder.loadTexts:
    ptpIfStateChange.setStatus(
        "current"
    )

ptpMasterClockAccuracyChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 85, 100, 3)
)
ptpMasterClockAccuracyChange.setObjects(
    ("SWITCH", "ptpClockAccuracy")
)
if mibBuilder.loadTexts:
    ptpMasterClockAccuracyChange.setStatus(
        "current"
    )

aAlarmEventNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 91, 100, 1)
)
aAlarmEventNotify.setObjects(
      *(("SWITCH", "alarmHistoryLogSeq"),
        ("SWITCH", "alarmHistoryLogType"),
        ("SWITCH", "alarmHistoryLogObject"),
        ("SWITCH", "alarmHistoryLogSeverity"),
        ("SWITCH", "alarmHistoryLogServiceAffect"),
        ("SWITCH", "alarmHistoryLogAddInfo"),
        ("SWITCH", "alarmHistoryLogOccurTime"),
        ("SWITCH", "alarmHistoryLogReleaseTime"))
)
if mibBuilder.loadTexts:
    aAlarmEventNotify.setStatus(
        "current"
    )

loopbackDetectStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 105, 1000, 1)
)
loopbackDetectStatusNotify.setObjects(
      *(("SWITCH", "loopbackDetectIfIndex"),
        ("SWITCH", "loopbackDetectStatus"))
)
if mibBuilder.loadTexts:
    loopbackDetectStatusNotify.setStatus(
        "current"
    )

ipslaTestFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 106, 7, 1)
)
ipslaTestFailure.setObjects(
      *(("SWITCH", "ipslaCtrlAdminIndex"),
        ("SWITCH", "ipslaCtrlAdminDesc"),
        ("SWITCH", "ipslaCtrlAdminTargetAddress"),
        ("SWITCH", "ipslaPktTestId"),
        ("SWITCH", "ipslaTestTransmitted"),
        ("SWITCH", "ipslaTestReceived"),
        ("SWITCH", "ipslaTestOverthreshold"),
        ("SWITCH", "ipslaTestRttMax"),
        ("SWITCH", "ipslaTestRttMin"),
        ("SWITCH", "ipslaTestRttAvg"),
        ("SWITCH", "ipslaTestLastTransmitted"),
        ("SWITCH", "ipslaTestPktLossRatio"),
        ("SWITCH", "ipslaEchoAdminFailPercent"))
)
if mibBuilder.loadTexts:
    ipslaTestFailure.setStatus(
        "current"
    )

ipslaPktTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 106, 7, 2)
)
ipslaPktTimeout.setObjects(
      *(("SWITCH", "ipslaCtrlAdminIndex"),
        ("SWITCH", "ipslaCtrlAdminDesc"),
        ("SWITCH", "ipslaCtrlAdminTargetAddress"),
        ("SWITCH", "ipslaPktTestId"),
        ("SWITCH", "ipslaPktIndex"),
        ("SWITCH", "ipslaCtrlAdminTimeout"))
)
if mibBuilder.loadTexts:
    ipslaPktTimeout.setStatus(
        "current"
    )

ipslaTestSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 106, 7, 3)
)
ipslaTestSuccess.setObjects(
      *(("SWITCH", "ipslaCtrlAdminIndex"),
        ("SWITCH", "ipslaCtrlAdminDesc"),
        ("SWITCH", "ipslaCtrlAdminTargetAddress"),
        ("SWITCH", "ipslaPktTestId"),
        ("SWITCH", "ipslaTestTransmitted"),
        ("SWITCH", "ipslaTestReceived"),
        ("SWITCH", "ipslaTestOverthreshold"),
        ("SWITCH", "ipslaTestRttMax"),
        ("SWITCH", "ipslaTestRttMin"),
        ("SWITCH", "ipslaTestRttAvg"),
        ("SWITCH", "ipslaTestLastTransmitted"),
        ("SWITCH", "ipslaTestPktLossRatio"),
        ("SWITCH", "ipslaEchoAdminFailPercent"))
)
if mibBuilder.loadTexts:
    ipslaTestSuccess.setStatus(
        "current"
    )

ipslaPktOverthreshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 27975, 106, 7, 4)
)
ipslaPktOverthreshold.setObjects(
      *(("SWITCH", "ipslaCtrlAdminIndex"),
        ("SWITCH", "ipslaCtrlAdminDesc"),
        ("SWITCH", "ipslaCtrlAdminTargetAddress"),
        ("SWITCH", "ipslaPktTestId"),
        ("SWITCH", "ipslaPktIndex"),
        ("SWITCH", "ipslaCtrlAdminThreshold"),
        ("SWITCH", "ipslaPktRtt"))
)
if mibBuilder.loadTexts:
    ipslaPktOverthreshold.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "SWITCH",
    **{"ErrorFlag": ErrorFlag,
       "FlashOperationStatus": FlashOperationStatus,
       "CfOperationStatus": CfOperationStatus,
       "MessageLevelType": MessageLevelType,
       "MessageTrapLevelType": MessageTrapLevelType,
       "TimeStampFormatType": TimeStampFormatType,
       "FacilityType": FacilityType,
       "RuleAction": RuleAction,
       "CounterClear": CounterClear,
       "PortOp": PortOp,
       "PrecedenceValue": PrecedenceValue,
       "DSCPValue": DSCPValue,
       "ColorType": ColorType,
       "PriMapType": PriMapType,
       "IfQueueId": IfQueueId,
       "DirectionType": DirectionType,
       "EnableType": EnableType,
       "QosStatsClear": QosStatsClear,
       "EnabledStatus": EnabledStatus,
       "VlanIndex": VlanIndex,
       "VlanList": VlanList,
       "VlanClassRuleIndex": VlanClassRuleIndex,
       "VlanClassGroupIndex": VlanClassGroupIndex,
       "VlanClassProtocol": VlanClassProtocol,
       "VlanClassEnableBase": VlanClassEnableBase,
       "VlanClassIpv6Address": VlanClassIpv6Address,
       "BridgeId": BridgeId,
       "SysmonBootType": SysmonBootType,
       "HBMReactivateType": HBMReactivateType,
       "ArpType": ArpType,
       "LoginType": LoginType,
       "IpSourceGuardType": IpSourceGuardType,
       "PrefixListType": PrefixListType,
       "PrefixListClearValue": PrefixListClearValue,
       "switch": switch,
       "system": system,
       "memory": memory,
       "memIndex": memIndex,
       "memTotalReal": memTotalReal,
       "memTotalFree": memTotalFree,
       "memTotalUsed": memTotalUsed,
       "systemStats": systemStats,
       "ssIndex": ssIndex,
       "ssCpuIdle": ssCpuIdle,
       "sysProcessTable": sysProcessTable,
       "sysProcessEntry": sysProcessEntry,
       "sysProcessIndex": sysProcessIndex,
       "sysProcessName": sysProcessName,
       "operate": operate,
       "configSave": configSave,
       "reload": reload,
       "rebootAt": rebootAt,
       "rebootDelay": rebootDelay,
       "version": version,
       "serviceTelnet": serviceTelnet,
       "loginFail": loginFail,
       "lastCommand": lastCommand,
       "currentRunningImage": currentRunningImage,
       "sysStartUpTime": sysStartUpTime,
       "sysImageTable": sysImageTable,
       "sysImageEntry": sysImageEntry,
       "sysImageIndex": sysImageIndex,
       "sysImageName": sysImageName,
       "sysImageCreateTime": sysImageCreateTime,
       "sysImageVersion": sysImageVersion,
       "sysImageSize": sysImageSize,
       "sysImageDir": sysImageDir,
       "sysImageIsBoot": sysImageIsBoot,
       "flash": flash,
       "flashManMIBObjects": flashManMIBObjects,
       "flashDevice": flashDevice,
       "flashTable": flashTable,
       "flashEntry": flashEntry,
       "flhIndex": flhIndex,
       "flhSize": flhSize,
       "flhFree": flhFree,
       "flhName": flhName,
       "flhDescr": flhDescr,
       "flhFiles": flhFiles,
       "flhFileTable": flhFileTable,
       "flhFileEntry": flhFileEntry,
       "flhFileIndex": flhFileIndex,
       "flhFileName": flhFileName,
       "flhFileSize": flhFileSize,
       "flhFileTime": flhFileTime,
       "flashOperate": flashOperate,
       "flhOpTable": flhOpTable,
       "flhOpEntry": flhOpEntry,
       "flhOperIndex": flhOperIndex,
       "flhOperType": flhOperType,
       "flhOperProtocol": flhOperProtocol,
       "flhOperServerAddress": flhOperServerAddress,
       "flhOperServerUser": flhOperServerUser,
       "flhOperPassword": flhOperPassword,
       "flhOperSourceFile": flhOperSourceFile,
       "flhOperDestinationFile": flhOperDestinationFile,
       "flhOperStatus": flhOperStatus,
       "flhOperIsManagementIf": flhOperIsManagementIf,
       "flhOperRowStatus": flhOperRowStatus,
       "cf": cf,
       "cfManMIBObjects": cfManMIBObjects,
       "cfDevice": cfDevice,
       "cfTable": cfTable,
       "cfEntry": cfEntry,
       "cfIndex": cfIndex,
       "cfSize": cfSize,
       "cfFree": cfFree,
       "cfName": cfName,
       "cfDescr": cfDescr,
       "cfFiles": cfFiles,
       "cfFileTable": cfFileTable,
       "cfFileEntry": cfFileEntry,
       "cfFileIndex": cfFileIndex,
       "cfFileName": cfFileName,
       "cfFileSize": cfFileSize,
       "cfFileTime": cfFileTime,
       "cfOperate": cfOperate,
       "cfOpTable": cfOpTable,
       "cfOpEntry": cfOpEntry,
       "cfOperIndex": cfOperIndex,
       "cfOperType": cfOperType,
       "cfOperProtocol": cfOperProtocol,
       "cfOperServerAddress": cfOperServerAddress,
       "cfOperServerUser": cfOperServerUser,
       "cfOperPassword": cfOperPassword,
       "cfOperSourceFile": cfOperSourceFile,
       "cfOperDestinationFile": cfOperDestinationFile,
       "cfOperStatus": cfOperStatus,
       "cfOperIsManagementIf": cfOperIsManagementIf,
       "cfOperRowStatus": cfOperRowStatus,
       "sysTrap": sysTrap,
       "writeSuccessTrap": writeSuccessTrap,
       "writeFailureTrap": writeFailureTrap,
       "rebootSendTrap": rebootSendTrap,
       "memUsageHigher": memUsageHigher,
       "memUsageFormHigherToNormal": memUsageFormHigherToNormal,
       "vtySessionStartTrap": vtySessionStartTrap,
       "vtySessionStopTrap": vtySessionStopTrap,
       "timeChangeTrap": timeChangeTrap,
       "cpuUsageHigher": cpuUsageHigher,
       "cpuUsageFormHigherToNormal": cpuUsageFormHigherToNormal,
       "lastCommandTrap": lastCommandTrap,
       "cFInserted": cFInserted,
       "cFRemoved": cFRemoved,
       "loginFailTrap": loginFailTrap,
       "processDumpTrap": processDumpTrap,
       "time": time,
       "timeSet": timeSet,
       "timeSetClock": timeSetClock,
       "timeSetMonth": timeSetMonth,
       "timeSetDay": timeSetDay,
       "timeSetYear": timeSetYear,
       "timezoneSetTable": timezoneSetTable,
       "timezoneSetEntry": timezoneSetEntry,
       "timezoneSetZoneName": timezoneSetZoneName,
       "timezoneSetType": timezoneSetType,
       "timezoneSetHours": timezoneSetHours,
       "timezoneSetMinutes": timezoneSetMinutes,
       "timezoneSetSeconds": timezoneSetSeconds,
       "timezoneSetState": timezoneSetState,
       "recurrentSummerTimeTable": recurrentSummerTimeTable,
       "recurrentSummerTimeEntry": recurrentSummerTimeEntry,
       "recurrentSummerTimeZoneName": recurrentSummerTimeZoneName,
       "recurrentSummerTimeStartMonth": recurrentSummerTimeStartMonth,
       "recurrentSummerTimeStartDay": recurrentSummerTimeStartDay,
       "recurrentSummerTimeStartClock": recurrentSummerTimeStartClock,
       "recurrentSummerTimeEndMonth": recurrentSummerTimeEndMonth,
       "recurrentSummerTimeEndDay": recurrentSummerTimeEndDay,
       "recurrentSummerTimeEndClock": recurrentSummerTimeEndClock,
       "recurrentSummerTimeOffset": recurrentSummerTimeOffset,
       "recurrentSummerTimeState": recurrentSummerTimeState,
       "summerTimeTable": summerTimeTable,
       "summerTimeEntry": summerTimeEntry,
       "summerTimeZoneName": summerTimeZoneName,
       "summerTimeStartMonth": summerTimeStartMonth,
       "summerTimeStartDay": summerTimeStartDay,
       "summerTimeStartYear": summerTimeStartYear,
       "summerTimeStartClock": summerTimeStartClock,
       "summerTimeEndMonth": summerTimeEndMonth,
       "summerTimeEndDay": summerTimeEndDay,
       "summerTimeEndYear": summerTimeEndYear,
       "summerTimeEndClock": summerTimeEndClock,
       "summerTimeOffset": summerTimeOffset,
       "summerTimeState": summerTimeState,
       "cpuUsage": cpuUsage,
       "fiveSeconds": fiveSeconds,
       "oneMinute": oneMinute,
       "fiveMinutes": fiveMinutes,
       "syslog": syslog,
       "syslogTimestamp": syslogTimestamp,
       "syslogOperateLogEnable": syslogOperateLogEnable,
       "syslogBuffer": syslogBuffer,
       "syslogBufferMaxSize": syslogBufferMaxSize,
       "syslogbufferSeverity": syslogbufferSeverity,
       "syslogBuffercurrentMessages": syslogBuffercurrentMessages,
       "syslogBufferDroppedMessages": syslogBufferDroppedMessages,
       "syslogFile": syslogFile,
       "syslogFileEnable": syslogFileEnable,
       "syslogFileSeverity": syslogFileSeverity,
       "syslogServer": syslogServer,
       "syslogServerEnable": syslogServerEnable,
       "syslogServerFacility": syslogServerFacility,
       "syslogServerSeverity": syslogServerSeverity,
       "syslogServerTable": syslogServerTable,
       "syslogServerEntry": syslogServerEntry,
       "syslogServerIpaddress": syslogServerIpaddress,
       "syslogServerMgmtIf": syslogServerMgmtIf,
       "syslogServerRowStatus": syslogServerRowStatus,
       "syslogTrap": syslogTrap,
       "syslogTrapEnable": syslogTrapEnable,
       "syslogTrapSeverity": syslogTrapSeverity,
       "syslogMerge": syslogMerge,
       "syslogMergeEnable": syslogMergeEnable,
       "syslogMergeFifoSize": syslogMergeFifoSize,
       "syslogMergeTimeout": syslogMergeTimeout,
       "syslogSync": syslogSync,
       "syslogClearLogBuff": syslogClearLogBuff,
       "mirror": mirror,
       "mSSrcIfTable": mSSrcIfTable,
       "mSSrcIfEntry": mSSrcIfEntry,
       "mSSrcIfID": mSSrcIfID,
       "mSSrcIfIndex": mSSrcIfIndex,
       "mSSrcIfDirection": mSSrcIfDirection,
       "mSSrcIfRowStatus": mSSrcIfRowStatus,
       "mSSrcVlanTable": mSSrcVlanTable,
       "mSSrcVlanEntry": mSSrcVlanEntry,
       "mSSrcVlanID": mSSrcVlanID,
       "mSSrcVlanNum": mSSrcVlanNum,
       "mSSrcVlanDirection": mSSrcVlanDirection,
       "mSSrcVlanRowStatus": mSSrcVlanRowStatus,
       "mSDestIfTable": mSDestIfTable,
       "mSDestIfEntry": mSDestIfEntry,
       "mSDestIfID": mSDestIfID,
       "mSDestIfIndex": mSDestIfIndex,
       "mSSessionType": mSSessionType,
       "mSDestVlanID": mSDestVlanID,
       "mSDestIfRowStatus": mSDestIfRowStatus,
       "mSTable": mSTable,
       "mSEntry": mSEntry,
       "mSID": mSID,
       "mSType": mSType,
       "mSStatus": mSStatus,
       "mSRowStatus": mSRowStatus,
       "mSEscapeMacTable": mSEscapeMacTable,
       "mSEscapeMacEntry": mSEscapeMacEntry,
       "mSEscapeMacIndex": mSEscapeMacIndex,
       "mSEscapeMacAddress": mSEscapeMacAddress,
       "mSEscapeMacMask": mSEscapeMacMask,
       "mSEscapeMacRowStatus": mSEscapeMacRowStatus,
       "portSecurity": portSecurity,
       "portSecurityObject": portSecurityObject,
       "portSecurityPortTable": portSecurityPortTable,
       "portSecurityPortEntry": portSecurityPortEntry,
       "portSecurityEnable": portSecurityEnable,
       "portSecurityViolationMode": portSecurityViolationMode,
       "portSecurityMaximumNumberOfMacAddresses": portSecurityMaximumNumberOfMacAddresses,
       "portSecurityCurrentNumberOfMacAddresses": portSecurityCurrentNumberOfMacAddresses,
       "portSecurityStaticAddressTable": portSecurityStaticAddressTable,
       "portSecurityStaticAddressEntry": portSecurityStaticAddressEntry,
       "portSecurityStaticPortIndex": portSecurityStaticPortIndex,
       "portSecurityStaticVlanId": portSecurityStaticVlanId,
       "portSecurityStaticMacAddress": portSecurityStaticMacAddress,
       "portSecurityStaticRowStatus": portSecurityStaticRowStatus,
       "portSecurityDynamicAddressTable": portSecurityDynamicAddressTable,
       "portSecurityDynamicAddressEntry": portSecurityDynamicAddressEntry,
       "portSecurityDynamicVlanId": portSecurityDynamicVlanId,
       "portSecurityDynamicMacAddress": portSecurityDynamicMacAddress,
       "portSecurityDynamicPortName": portSecurityDynamicPortName,
       "stormControl": stormControl,
       "stormControlObject": stormControlObject,
       "stormControlUnicastTable": stormControlUnicastTable,
       "stormControlUnicastEntry": stormControlUnicastEntry,
       "stormControlUnicastPortName": stormControlUnicastPortName,
       "stormControlUnicastMode": stormControlUnicastMode,
       "stormControlUnicastLevel": stormControlUnicastLevel,
       "stormControlUnicastPps": stormControlUnicastPps,
       "stormControlUnicastRowStatus": stormControlUnicastRowStatus,
       "stormControlBroadcastTable": stormControlBroadcastTable,
       "stormControlBroadcastEntry": stormControlBroadcastEntry,
       "stormControlBroadcastPortName": stormControlBroadcastPortName,
       "stormControlBroadcastMode": stormControlBroadcastMode,
       "stormControlBroadcastLevel": stormControlBroadcastLevel,
       "stormControlBroadcastPps": stormControlBroadcastPps,
       "stormControlBroadcastRowStatus": stormControlBroadcastRowStatus,
       "stormControlMulticastTable": stormControlMulticastTable,
       "stormControlMulticastEntry": stormControlMulticastEntry,
       "stormControlMulticastPortName": stormControlMulticastPortName,
       "stormControlMulticastMode": stormControlMulticastMode,
       "stormControlMulticastLevel": stormControlMulticastLevel,
       "stormControlMulticastPps": stormControlMulticastPps,
       "stormControlMulticastRowStatus": stormControlMulticastRowStatus,
       "ntp": ntp,
       "ntpObject": ntpObject,
       "ntpStratum": ntpStratum,
       "ntpReferenceClockIp": ntpReferenceClockIp,
       "ntpFrequency": ntpFrequency,
       "ntpPrecision": ntpPrecision,
       "ntpReferenceTime": ntpReferenceTime,
       "ntpRootDelay": ntpRootDelay,
       "ntpRootDispersion": ntpRootDispersion,
       "ntpPeerDispersion": ntpPeerDispersion,
       "ntpClockOffset": ntpClockOffset,
       "ntpStability": ntpStability,
       "ntpAssoTable": ntpAssoTable,
       "ntpAssoEntry": ntpAssoEntry,
       "ntpAssoRemoteIpAddress": ntpAssoRemoteIpAddress,
       "ntpAssoRefId": ntpAssoRefId,
       "ntpAssoStratum": ntpAssoStratum,
       "ntpAssoWhen": ntpAssoWhen,
       "ntpAssoPoll": ntpAssoPoll,
       "ntpAssoReach": ntpAssoReach,
       "ntpAssoDelay": ntpAssoDelay,
       "ntpAssoOffset": ntpAssoOffset,
       "ntpAssoDispersion": ntpAssoDispersion,
       "ntpUniPeerTable": ntpUniPeerTable,
       "ntpUniPeerEntry": ntpUniPeerEntry,
       "ntpUnicastPeerIpAddress": ntpUnicastPeerIpAddress,
       "ntpUnicastPeerKey": ntpUnicastPeerKey,
       "ntpUnicastPeerVersion": ntpUnicastPeerVersion,
       "ntpUnicastPeerPrefer": ntpUnicastPeerPrefer,
       "ntpUnicastPeerRowStatus": ntpUnicastPeerRowStatus,
       "ntpUniServerTable": ntpUniServerTable,
       "ntpUniServerEntry": ntpUniServerEntry,
       "ntpUnicastServerIpAddress": ntpUnicastServerIpAddress,
       "ntpUnicastServerKey": ntpUnicastServerKey,
       "ntpUnicastServerVersion": ntpUnicastServerVersion,
       "ntpUnicastServerPrefer": ntpUnicastServerPrefer,
       "ntpUnicastServerRowStatus": ntpUnicastServerRowStatus,
       "ntpLocalRefClockStratum": ntpLocalRefClockStratum,
       "ntpSysAuthenticate": ntpSysAuthenticate,
       "ntpBroadcastDelay": ntpBroadcastDelay,
       "ntpKeyTable": ntpKeyTable,
       "ntpKeyEntry": ntpKeyEntry,
       "ntpKeyID": ntpKeyID,
       "ntpKeyPair": ntpKeyPair,
       "ntpKeyRowStatus": ntpKeyRowStatus,
       "ntpTrustKeyTable": ntpTrustKeyTable,
       "ntpTrustKeyEntry": ntpTrustKeyEntry,
       "ntpTrustKeyID": ntpTrustKeyID,
       "ntpTrustKeyTrust": ntpTrustKeyTrust,
       "ntpInterfaceReload": ntpInterfaceReload,
       "ntpTimeResetStatistic": ntpTimeResetStatistic,
       "ntpRcvBufferStatistic": ntpRcvBufferStatistic,
       "ntpFreeRcvBufferStatistic": ntpFreeRcvBufferStatistic,
       "ntpUsedRcvBufferStatistic": ntpUsedRcvBufferStatistic,
       "ntpLowWaterRefillStatistic": ntpLowWaterRefillStatistic,
       "ntpDroppedPktStatistic": ntpDroppedPktStatistic,
       "ntpIgnoredPktStatistic": ntpIgnoredPktStatistic,
       "ntpReceivedPktStatistic": ntpReceivedPktStatistic,
       "ntpPktSentStatistic": ntpPktSentStatistic,
       "ntpPktNotSentStatistic": ntpPktNotSentStatistic,
       "ntpInterruptsHandledStatistic": ntpInterruptsHandledStatistic,
       "ntpReceivedByIntStatistic": ntpReceivedByIntStatistic,
       "ntpAceTable": ntpAceTable,
       "ntpAceEntry": ntpAceEntry,
       "ntpAceIndex": ntpAceIndex,
       "ntpAceAddress": ntpAceAddress,
       "ntpAceMask": ntpAceMask,
       "ntpAceVersion": ntpAceVersion,
       "ntpAceKod": ntpAceKod,
       "ntpAceIgnore": ntpAceIgnore,
       "ntpAceNoquery": ntpAceNoquery,
       "ntpAceNomodify": ntpAceNomodify,
       "ntpAceNotrap": ntpAceNotrap,
       "ntpAceNoserver": ntpAceNoserver,
       "ntpAceNopeer": ntpAceNopeer,
       "ntpAceNotrust": ntpAceNotrust,
       "ntpAceLimited": ntpAceLimited,
       "ntpAceRowStatus": ntpAceRowStatus,
       "ntpRestrictTable": ntpRestrictTable,
       "ntpRestrictEntry": ntpRestrictEntry,
       "ntpRestrictIndex": ntpRestrictIndex,
       "ntpRestrictAddress": ntpRestrictAddress,
       "ntpRestrictMask": ntpRestrictMask,
       "ntpRestrictCount": ntpRestrictCount,
       "ntpRestrictFlag": ntpRestrictFlag,
       "acl": acl,
       "aclData": aclData,
       "aclGroupTable": aclGroupTable,
       "aclGroupEntry": aclGroupEntry,
       "aclGroupIndex": aclGroupIndex,
       "aclGroupName": aclGroupName,
       "aclGroupRuleNum": aclGroupRuleNum,
       "aclGroupRowStatus": aclGroupRowStatus,
       "aclGroupDescription": aclGroupDescription,
       "aclMacRuleTable": aclMacRuleTable,
       "aclMacRuleEntry": aclMacRuleEntry,
       "aclMacGroupIndex": aclMacGroupIndex,
       "aclMacRuleIndex": aclMacRuleIndex,
       "aclMacAct": aclMacAct,
       "aclMacSrcMac": aclMacSrcMac,
       "aclMacSrcMacWild": aclMacSrcMacWild,
       "aclMacDestMac": aclMacDestMac,
       "aclMacDestMacWild": aclMacDestMacWild,
       "aclMacProtocol": aclMacProtocol,
       "aclMacProtocolWild": aclMacProtocolWild,
       "aclMacType": aclMacType,
       "aclMacVlanId": aclMacVlanId,
       "aclMacInnerVlanId": aclMacInnerVlanId,
       "aclMacCos": aclMacCos,
       "aclMacInnerCos": aclMacInnerCos,
       "aclMacTimeRangeName": aclMacTimeRangeName,
       "aclMacRowStatus": aclMacRowStatus,
       "aclIpRuleTable": aclIpRuleTable,
       "aclIpRuleEntry": aclIpRuleEntry,
       "aclIpGroupIndex": aclIpGroupIndex,
       "aclIpRuleIndex": aclIpRuleIndex,
       "aclIpAct": aclIpAct,
       "aclIpProtocol": aclIpProtocol,
       "aclIpSrcIp": aclIpSrcIp,
       "aclIpSrcWild": aclIpSrcWild,
       "aclIpDestIp": aclIpDestIp,
       "aclIpDestWild": aclIpDestWild,
       "aclIpPrecedence": aclIpPrecedence,
       "aclIpDscp": aclIpDscp,
       "aclIpFragments": aclIpFragments,
       "aclIpRouted": aclIpRouted,
       "aclIpOptions": aclIpOptions,
       "aclIpTimeRangeName": aclIpTimeRangeName,
       "aclIpRowStatus": aclIpRowStatus,
       "aclTcpRuleTable": aclTcpRuleTable,
       "aclTcpRuleEntry": aclTcpRuleEntry,
       "aclTcpGroupIndex": aclTcpGroupIndex,
       "aclTcpRuleIndex": aclTcpRuleIndex,
       "aclTcpAct": aclTcpAct,
       "aclTcpSrcIp": aclTcpSrcIp,
       "aclTcpSrcWild": aclTcpSrcWild,
       "aclTcpDestIp": aclTcpDestIp,
       "aclTcpDestWild": aclTcpDestWild,
       "aclTcpPrecedence": aclTcpPrecedence,
       "aclTcpDscp": aclTcpDscp,
       "aclTcpFragments": aclTcpFragments,
       "aclTcpRouted": aclTcpRouted,
       "aclTcpOptions": aclTcpOptions,
       "aclTcpSrcOp": aclTcpSrcOp,
       "aclTcpSrcPort1": aclTcpSrcPort1,
       "aclTcpSrcPort2": aclTcpSrcPort2,
       "aclTcpDestOp": aclTcpDestOp,
       "aclTcpDestPort1": aclTcpDestPort1,
       "aclTcpDestPort2": aclTcpDestPort2,
       "aclTcpFlagOp": aclTcpFlagOp,
       "aclTcpFlagUrg": aclTcpFlagUrg,
       "aclTcpFlagAck": aclTcpFlagAck,
       "aclTcpFlagPsh": aclTcpFlagPsh,
       "aclTcpFlagRst": aclTcpFlagRst,
       "aclTcpFlagSyn": aclTcpFlagSyn,
       "aclTcpFlagFin": aclTcpFlagFin,
       "aclTcpTimeRangeName": aclTcpTimeRangeName,
       "aclTcpRowStatus": aclTcpRowStatus,
       "aclUdpRuleTable": aclUdpRuleTable,
       "aclUdpRuleEntry": aclUdpRuleEntry,
       "aclUdpGroupIndex": aclUdpGroupIndex,
       "aclUdpRuleIndex": aclUdpRuleIndex,
       "aclUdpAct": aclUdpAct,
       "aclUdpSrcIp": aclUdpSrcIp,
       "aclUdpSrcWild": aclUdpSrcWild,
       "aclUdpDestIp": aclUdpDestIp,
       "aclUdpDestWild": aclUdpDestWild,
       "aclUdpPrecedence": aclUdpPrecedence,
       "aclUdpDscp": aclUdpDscp,
       "aclUdpFragments": aclUdpFragments,
       "aclUdpRouted": aclUdpRouted,
       "aclUdpOptions": aclUdpOptions,
       "aclUdpSrcOp": aclUdpSrcOp,
       "aclUdpSrcPort1": aclUdpSrcPort1,
       "aclUdpSrcPort2": aclUdpSrcPort2,
       "aclUdpDestOp": aclUdpDestOp,
       "aclUdpDestPort1": aclUdpDestPort1,
       "aclUdpDestPort2": aclUdpDestPort2,
       "aclUdpTimeRangeName": aclUdpTimeRangeName,
       "aclUdpRowStatus": aclUdpRowStatus,
       "aclIcmpRuleTable": aclIcmpRuleTable,
       "aclIcmpRuleEntry": aclIcmpRuleEntry,
       "aclIcmpGroupIndex": aclIcmpGroupIndex,
       "aclIcmpRuleIndex": aclIcmpRuleIndex,
       "aclIcmpAct": aclIcmpAct,
       "aclIcmpSrcIp": aclIcmpSrcIp,
       "aclIcmpSrcWild": aclIcmpSrcWild,
       "aclIcmpDestIp": aclIcmpDestIp,
       "aclIcmpDestWild": aclIcmpDestWild,
       "aclIcmpPrecedence": aclIcmpPrecedence,
       "aclIcmpDscp": aclIcmpDscp,
       "aclIcmpFragments": aclIcmpFragments,
       "aclIcmpRouted": aclIcmpRouted,
       "aclIcmpOptions": aclIcmpOptions,
       "aclIcmpType": aclIcmpType,
       "aclIcmpCode": aclIcmpCode,
       "aclIcmpTimeRangeName": aclIcmpTimeRangeName,
       "aclIcmpRowStatus": aclIcmpRowStatus,
       "aclIgmpRuleTable": aclIgmpRuleTable,
       "aclIgmpRuleEntry": aclIgmpRuleEntry,
       "aclIgmpGroupIndex": aclIgmpGroupIndex,
       "aclIgmpRuleIndex": aclIgmpRuleIndex,
       "aclIgmpAct": aclIgmpAct,
       "aclIgmpSrcIp": aclIgmpSrcIp,
       "aclIgmpSrcWild": aclIgmpSrcWild,
       "aclIgmpDestIp": aclIgmpDestIp,
       "aclIgmpDestWild": aclIgmpDestWild,
       "aclIgmpPrecedence": aclIgmpPrecedence,
       "aclIgmpDscp": aclIgmpDscp,
       "aclIgmpFragments": aclIgmpFragments,
       "aclIgmpRouted": aclIgmpRouted,
       "aclIgmpOptions": aclIgmpOptions,
       "aclIgmpType": aclIgmpType,
       "aclIgmpTimeRangeName": aclIgmpTimeRangeName,
       "aclIgmpRowStatus": aclIgmpRowStatus,
       "aclMplsMacRuleTable": aclMplsMacRuleTable,
       "aclMplsMacRuleEntry": aclMplsMacRuleEntry,
       "aclMplsMacGroupIndex": aclMplsMacGroupIndex,
       "aclMplsMacRuleIndex": aclMplsMacRuleIndex,
       "aclMplsMacAct": aclMplsMacAct,
       "aclMplsMacSrcMac": aclMplsMacSrcMac,
       "aclMplsMacSrcMacWild": aclMplsMacSrcMacWild,
       "aclMplsMacDestMac": aclMplsMacDestMac,
       "aclMplsMacDestMacWild": aclMplsMacDestMacWild,
       "aclMplsMacType": aclMplsMacType,
       "aclMplsMacVlanId": aclMplsMacVlanId,
       "aclMplsMacInnerVlanId": aclMplsMacInnerVlanId,
       "aclMplsMacCos": aclMplsMacCos,
       "aclMplsMacInnerCos": aclMplsMacInnerCos,
       "aclMplsMacTimeRangeName": aclMplsMacTimeRangeName,
       "aclMplsMacRowStatus": aclMplsMacRowStatus,
       "aclMplsLabelRuleTable": aclMplsLabelRuleTable,
       "aclMplsLabelRuleEntry": aclMplsLabelRuleEntry,
       "aclMplsLabelGroupIndex": aclMplsLabelGroupIndex,
       "aclMplsLabelRuleIndex": aclMplsLabelRuleIndex,
       "aclMplsLabelAct": aclMplsLabelAct,
       "aclMplsLabelLayer": aclMplsLabelLayer,
       "aclMplsLabel1Value": aclMplsLabel1Value,
       "aclMplsLabel1Wild": aclMplsLabel1Wild,
       "aclMplsLabel1Exp": aclMplsLabel1Exp,
       "aclMplsLabel1Ttl": aclMplsLabel1Ttl,
       "aclMplsLabel2Value": aclMplsLabel2Value,
       "aclMplsLabel2Wild": aclMplsLabel2Wild,
       "aclMplsLabel2Exp": aclMplsLabel2Exp,
       "aclMplsLabel2Ttl": aclMplsLabel2Ttl,
       "aclMplsLabel3Value": aclMplsLabel3Value,
       "aclMplsLabel3Wild": aclMplsLabel3Wild,
       "aclMplsLabel3Exp": aclMplsLabel3Exp,
       "aclMplsLabel3Ttl": aclMplsLabel3Ttl,
       "aclMplsLabel4Value": aclMplsLabel4Value,
       "aclMplsLabel4Wild": aclMplsLabel4Wild,
       "aclMplsLabel4Exp": aclMplsLabel4Exp,
       "aclMplsLabel4Ttl": aclMplsLabel4Ttl,
       "aclMplsLabelSkBottom": aclMplsLabelSkBottom,
       "aclMplsLabelTimeRangeName": aclMplsLabelTimeRangeName,
       "aclMplsLabelRowStatus": aclMplsLabelRowStatus,
       "aclIpv6RuleTable": aclIpv6RuleTable,
       "aclIpv6RuleEntry": aclIpv6RuleEntry,
       "aclIpv6GroupIndex": aclIpv6GroupIndex,
       "aclIpv6RuleIndex": aclIpv6RuleIndex,
       "aclIpv6Act": aclIpv6Act,
       "aclIpv6Protocol": aclIpv6Protocol,
       "aclIpv6SrcIpv6": aclIpv6SrcIpv6,
       "aclIpv6SrcPrefixLen": aclIpv6SrcPrefixLen,
       "aclIpv6DestIpv6": aclIpv6DestIpv6,
       "aclIpv6DestPrefixLen": aclIpv6DestPrefixLen,
       "aclIpv6FlowLabel": aclIpv6FlowLabel,
       "aclIpv6Dscp": aclIpv6Dscp,
       "aclIpv6Fragments": aclIpv6Fragments,
       "aclIpv6Routed": aclIpv6Routed,
       "aclIpv6Options": aclIpv6Options,
       "aclIpv6TimeRangeName": aclIpv6TimeRangeName,
       "aclIpv6RowStatus": aclIpv6RowStatus,
       "aclTcp6RuleTable": aclTcp6RuleTable,
       "aclTcp6RuleEntry": aclTcp6RuleEntry,
       "aclTcp6GroupIndex": aclTcp6GroupIndex,
       "aclTcp6RuleIndex": aclTcp6RuleIndex,
       "aclTcp6Act": aclTcp6Act,
       "aclTcp6SrcIpv6": aclTcp6SrcIpv6,
       "aclTcp6SrcPrefixLen": aclTcp6SrcPrefixLen,
       "aclTcp6DestIpv6": aclTcp6DestIpv6,
       "aclTcp6DestPrefixLen": aclTcp6DestPrefixLen,
       "aclTcp6FlowLabel": aclTcp6FlowLabel,
       "aclTcp6Dscp": aclTcp6Dscp,
       "aclTcp6Fragments": aclTcp6Fragments,
       "aclTcp6Routed": aclTcp6Routed,
       "aclTcp6Options": aclTcp6Options,
       "aclTcp6SrcOp": aclTcp6SrcOp,
       "aclTcp6SrcPort1": aclTcp6SrcPort1,
       "aclTcp6SrcPort2": aclTcp6SrcPort2,
       "aclTcp6DestOp": aclTcp6DestOp,
       "aclTcp6DestPort1": aclTcp6DestPort1,
       "aclTcp6DestPort2": aclTcp6DestPort2,
       "aclTcp6FlagOp": aclTcp6FlagOp,
       "aclTcp6FlagUrg": aclTcp6FlagUrg,
       "aclTcp6FlagAck": aclTcp6FlagAck,
       "aclTcp6FlagPsh": aclTcp6FlagPsh,
       "aclTcp6FlagRst": aclTcp6FlagRst,
       "aclTcp6FlagSyn": aclTcp6FlagSyn,
       "aclTcp6FlagFin": aclTcp6FlagFin,
       "aclTcp6TimeRangeName": aclTcp6TimeRangeName,
       "aclTcp6RowStatus": aclTcp6RowStatus,
       "aclUdp6RuleTable": aclUdp6RuleTable,
       "aclUdp6RuleEntry": aclUdp6RuleEntry,
       "aclUdp6GroupIndex": aclUdp6GroupIndex,
       "aclUdp6RuleIndex": aclUdp6RuleIndex,
       "aclUdp6Act": aclUdp6Act,
       "aclUdp6SrcIpv6": aclUdp6SrcIpv6,
       "aclUdp6SrcPrefixLen": aclUdp6SrcPrefixLen,
       "aclUdp6DestIpv6": aclUdp6DestIpv6,
       "aclUdp6DestPrefixLen": aclUdp6DestPrefixLen,
       "aclUdp6FlowLabel": aclUdp6FlowLabel,
       "aclUdp6Dscp": aclUdp6Dscp,
       "aclUdp6Fragments": aclUdp6Fragments,
       "aclUdp6Routed": aclUdp6Routed,
       "aclUdp6Options": aclUdp6Options,
       "aclUdp6SrcOp": aclUdp6SrcOp,
       "aclUdp6SrcPort1": aclUdp6SrcPort1,
       "aclUdp6SrcPort2": aclUdp6SrcPort2,
       "aclUdp6DestOp": aclUdp6DestOp,
       "aclUdp6DestPort1": aclUdp6DestPort1,
       "aclUdp6DestPort2": aclUdp6DestPort2,
       "aclUdp6TimeRangeName": aclUdp6TimeRangeName,
       "aclUdp6RowStatus": aclUdp6RowStatus,
       "aclIcmp6RuleTable": aclIcmp6RuleTable,
       "aclIcmp6RuleEntry": aclIcmp6RuleEntry,
       "aclIcmp6GroupIndex": aclIcmp6GroupIndex,
       "aclIcmp6RuleIndex": aclIcmp6RuleIndex,
       "aclIcmp6Act": aclIcmp6Act,
       "aclIcmp6SrcIpv6": aclIcmp6SrcIpv6,
       "aclIcmp6SrcPrefixLen": aclIcmp6SrcPrefixLen,
       "aclIcmp6DestIpv6": aclIcmp6DestIpv6,
       "aclIcmp6DestPrefixLen": aclIcmp6DestPrefixLen,
       "aclIcmp6FlowLabel": aclIcmp6FlowLabel,
       "aclIcmp6Dscp": aclIcmp6Dscp,
       "aclIcmp6Fragments": aclIcmp6Fragments,
       "aclIcmp6Routed": aclIcmp6Routed,
       "aclIcmp6Options": aclIcmp6Options,
       "aclIcmp6Type": aclIcmp6Type,
       "aclIcmp6Code": aclIcmp6Code,
       "aclIcmp6TimeRangeName": aclIcmp6TimeRangeName,
       "aclIcmp6RowStatus": aclIcmp6RowStatus,
       "qos": qos,
       "globalQos": globalQos,
       "globalQosEnable": globalQosEnable,
       "globalQosFlowFirst": globalQosFlowFirst,
       "globalQosResetMapObjects": globalQosResetMapObjects,
       "globalQosResetDomainMapTable": globalQosResetDomainMapTable,
       "globalQosResetDomainMapEntry": globalQosResetDomainMapEntry,
       "globalQosResetDomainMapDomain": globalQosResetDomainMapDomain,
       "globalQosResetDomainMapType": globalQosResetDomainMapType,
       "globalQosResetPriColorQidTid": globalQosResetPriColorQidTid,
       "globalQosMapObjects": globalQosMapObjects,
       "globalQosMapIngressTable": globalQosMapIngressTable,
       "globalQosMapIngressEntry": globalQosMapIngressEntry,
       "globalQosMapIngressType": globalQosMapIngressType,
       "globalQosMapIngressDomain": globalQosMapIngressDomain,
       "globalQosMapIngressValue": globalQosMapIngressValue,
       "globalQosMapIngressToPriority": globalQosMapIngressToPriority,
       "globalQosMapIngressToColor": globalQosMapIngressToColor,
       "globalQosMapEgressTable": globalQosMapEgressTable,
       "globalQosMapEgressEntry": globalQosMapEgressEntry,
       "globalQosMapEgressType": globalQosMapEgressType,
       "globalQosMapEgressDomain": globalQosMapEgressDomain,
       "globalQosMapEgressPriority": globalQosMapEgressPriority,
       "globalQosMapEgressColor": globalQosMapEgressColor,
       "globalQosMapEgressValue": globalQosMapEgressValue,
       "globalQosMapPriColorQidTidTable": globalQosMapPriColorQidTidTable,
       "globalQosMapPriColorQidTidEntry": globalQosMapPriColorQidTidEntry,
       "globalQosMapPriColorQidTidPriority": globalQosMapPriColorQidTidPriority,
       "globalQosMapPriColorQidTidColor": globalQosMapPriColorQidTidColor,
       "globalQosMapPriColorQidTidQueueId": globalQosMapPriColorQidTidQueueId,
       "globalQosMapPriColorQidTidThresholdId": globalQosMapPriColorQidTidThresholdId,
       "globalQosMapIngressDefaultTable": globalQosMapIngressDefaultTable,
       "globalQosMapIngressDefaultEntry": globalQosMapIngressDefaultEntry,
       "globalQosMapIngressDefaultType": globalQosMapIngressDefaultType,
       "globalQosMapIngressDefaultDomain": globalQosMapIngressDefaultDomain,
       "globalQosMapIngressDefaultValue": globalQosMapIngressDefaultValue,
       "globalQosMapIngressDefaultToPriority": globalQosMapIngressDefaultToPriority,
       "globalQosMapIngressDefaultToColor": globalQosMapIngressDefaultToColor,
       "globalQosMapEgressDefaultTable": globalQosMapEgressDefaultTable,
       "globalQosMapEgressDefaultEntry": globalQosMapEgressDefaultEntry,
       "globalQosMapEgressDefaultType": globalQosMapEgressDefaultType,
       "globalQosMapEgressDefaultDomain": globalQosMapEgressDefaultDomain,
       "globalQosMapEgressDefaultPriority": globalQosMapEgressDefaultPriority,
       "globalQosMapEgressDefaultColor": globalQosMapEgressDefaultColor,
       "globalQosMapEgressDefaultValue": globalQosMapEgressDefaultValue,
       "globalQosMapPriColorQidTidDefaultTable": globalQosMapPriColorQidTidDefaultTable,
       "globalQosMapPriColorQidTidDefaultEntry": globalQosMapPriColorQidTidDefaultEntry,
       "globalQosMapPriColorQidTidDefaultPriority": globalQosMapPriColorQidTidDefaultPriority,
       "globalQosMapPriColorQidTidDefaultColor": globalQosMapPriColorQidTidDefaultColor,
       "globalQosMapPriColorQidTidDefaultQueueId": globalQosMapPriColorQidTidDefaultQueueId,
       "globalQosMapPriColorQidTidDefaultThresholdId": globalQosMapPriColorQidTidDefaultThresholdId,
       "globalQosCfiTable": globalQosCfiTable,
       "globalQosCfiEntry": globalQosCfiEntry,
       "globalQosCfiDomain": globalQosCfiDomain,
       "globalQosCfiEnable": globalQosCfiEnable,
       "ifQos": ifQos,
       "ifQosShapeObjects": ifQosShapeObjects,
       "ifQosShapeIfCfgTable": ifQosShapeIfCfgTable,
       "ifQosShapeIfCfgEntry": ifQosShapeIfCfgEntry,
       "ifQosShapeIfCfgType": ifQosShapeIfCfgType,
       "ifQosShapeIfCfgPercent": ifQosShapeIfCfgPercent,
       "ifQosShapeIfCfgRate": ifQosShapeIfCfgRate,
       "ifQosShapeIfCfgRowStatus": ifQosShapeIfCfgRowStatus,
       "ifQosShapeQueueCfgTable": ifQosShapeQueueCfgTable,
       "ifQosShapeQueueCfgEntry": ifQosShapeQueueCfgEntry,
       "ifQosShapeQueueCfgQueueId": ifQosShapeQueueCfgQueueId,
       "ifQosShapeQueueCfgType": ifQosShapeQueueCfgType,
       "ifQosShapeQueueCfgPercent": ifQosShapeQueueCfgPercent,
       "ifQosShapeQueueCfgPercentPeak": ifQosShapeQueueCfgPercentPeak,
       "ifQosShapeQueueCfgRate": ifQosShapeQueueCfgRate,
       "ifQosShapeQueueCfgRatePeak": ifQosShapeQueueCfgRatePeak,
       "ifQosShapeQueueCfgRowStatus": ifQosShapeQueueCfgRowStatus,
       "ifQosQueueObjects": ifQosQueueObjects,
       "ifQosQueueClassDrrWeightTable": ifQosQueueClassDrrWeightTable,
       "ifQosQueueClassDrrWeightEntry": ifQosQueueClassDrrWeightEntry,
       "ifQosQueueClassDrrWeightQueueId": ifQosQueueClassDrrWeightQueueId,
       "ifQosQueueClass": ifQosQueueClass,
       "ifQosQueueDrrWeight": ifQosQueueDrrWeight,
       "ifQosQueueManageCfgTable": ifQosQueueManageCfgTable,
       "ifQosQueueManageCfgEntry": ifQosQueueManageCfgEntry,
       "ifQosQueueManageQueueId": ifQosQueueManageQueueId,
       "ifQosQueueManageDropType": ifQosQueueManageDropType,
       "ifQosQueueManageThresholdPrecedence0": ifQosQueueManageThresholdPrecedence0,
       "ifQosQueueManageThresholdPrecedence1": ifQosQueueManageThresholdPrecedence1,
       "ifQosQueueManageThresholdPrecedence2": ifQosQueueManageThresholdPrecedence2,
       "ifQosQueueManageMinThresholdPre0": ifQosQueueManageMinThresholdPre0,
       "ifQosQueueManageMinThresholdPre1": ifQosQueueManageMinThresholdPre1,
       "ifQosQueueManageMinThresholdPre2": ifQosQueueManageMinThresholdPre2,
       "ifQosQueueManageMaxThresholdPre0": ifQosQueueManageMaxThresholdPre0,
       "ifQosQueueManageMaxThresholdPre1": ifQosQueueManageMaxThresholdPre1,
       "ifQosQueueManageMaxThresholdPre2": ifQosQueueManageMaxThresholdPre2,
       "ifQosQueueManageDropProbabilityPre0": ifQosQueueManageDropProbabilityPre0,
       "ifQosQueueManageDropProbabilityPre1": ifQosQueueManageDropProbabilityPre1,
       "ifQosQueueManageDropProbabilityPre2": ifQosQueueManageDropProbabilityPre2,
       "ifQosCarObjects": ifQosCarObjects,
       "ifQosCarApplyTable": ifQosCarApplyTable,
       "ifQosCarApplyEntry": ifQosCarApplyEntry,
       "ifQosCarApplyDirection": ifQosCarApplyDirection,
       "ifQosCarApplyColorMode": ifQosCarApplyColorMode,
       "ifQosCarApplyCir": ifQosCarApplyCir,
       "ifQosCarApplyCbs": ifQosCarApplyCbs,
       "ifQosCarApplyType": ifQosCarApplyType,
       "ifQosCarApplyPir": ifQosCarApplyPir,
       "ifQosCarApplyPbs": ifQosCarApplyPbs,
       "ifQosCarApplyDropColor": ifQosCarApplyDropColor,
       "ifQosCarApplyUseL3Length": ifQosCarApplyUseL3Length,
       "ifQosCarApplyRowStatus": ifQosCarApplyRowStatus,
       "ifQosPriObjects": ifQosPriObjects,
       "ifQosCosTable": ifQosCosTable,
       "ifQosCosEntry": ifQosCosEntry,
       "ifQosCosValue": ifQosCosValue,
       "ifQosTrustTypeTable": ifQosTrustTypeTable,
       "ifQosTrustTypeEntry": ifQosTrustTypeEntry,
       "ifQosTrustTypeValue": ifQosTrustTypeValue,
       "ifQosDomainTable": ifQosDomainTable,
       "ifQosDomainEntry": ifQosDomainEntry,
       "ifQosDomainValue": ifQosDomainValue,
       "ifQosReplacePriObjects": ifQosReplacePriObjects,
       "ifQosReplaceTable": ifQosReplaceTable,
       "ifQosReplaceEntry": ifQosReplaceEntry,
       "ifQosReplaceType": ifQosReplaceType,
       "cbQoS": cbQoS,
       "cbQoSClassifierObjects": cbQoSClassifierObjects,
       "cbQoSClassifierIndexNext": cbQoSClassifierIndexNext,
       "cbQoSClassifierCfgInfoTable": cbQoSClassifierCfgInfoTable,
       "cbQoSClassifierCfgInfoEntry": cbQoSClassifierCfgInfoEntry,
       "cbQoSClassifierIndex": cbQoSClassifierIndex,
       "cbQoSClassifierName": cbQoSClassifierName,
       "cbQoSClassifierRuleCount": cbQoSClassifierRuleCount,
       "cbQoSClassifierOperator": cbQoSClassifierOperator,
       "cbQoSClassifierMatchRuleNextIndex": cbQoSClassifierMatchRuleNextIndex,
       "cbQoSClassifierRowStatus": cbQoSClassifierRowStatus,
       "cbQoSMatchRuleCfgInfoTable": cbQoSMatchRuleCfgInfoTable,
       "cbQoSMatchRuleCfgInfoEntry": cbQoSMatchRuleCfgInfoEntry,
       "cbQoSMatchRuleIndex": cbQoSMatchRuleIndex,
       "cbQoSMatchRuleACLName": cbQoSMatchRuleACLName,
       "cbQoSMatchRuleRowStatus": cbQoSMatchRuleRowStatus,
       "cbQoSPolicyObjects": cbQoSPolicyObjects,
       "cbQoSPolicyIndexNext": cbQoSPolicyIndexNext,
       "cbQoSPolicyCfgInfoTable": cbQoSPolicyCfgInfoTable,
       "cbQoSPolicyCfgInfoEntry": cbQoSPolicyCfgInfoEntry,
       "cbQoSPolicyIndex": cbQoSPolicyIndex,
       "cbQoSPolicyName": cbQoSPolicyName,
       "cbQoSPolicyClassCount": cbQoSPolicyClassCount,
       "cbQoSPolicyClassNextIndex": cbQoSPolicyClassNextIndex,
       "cbQoSPolicyRowStatus": cbQoSPolicyRowStatus,
       "cbQoSPolicyClassCfgInfoTable": cbQoSPolicyClassCfgInfoTable,
       "cbQoSPolicyClassCfgInfoEntry": cbQoSPolicyClassCfgInfoEntry,
       "cbQoSPolicyClassIndex": cbQoSPolicyClassIndex,
       "cbQoSPolicyClassClassifierIndex": cbQoSPolicyClassClassifierIndex,
       "cbQoSPolicyClassClassifierName": cbQoSPolicyClassClassifierName,
       "cbQoSPolicyClassRowStatus": cbQoSPolicyClassRowStatus,
       "cbQoSBehaviorObjects": cbQoSBehaviorObjects,
       "cbQoSAggregativeCarIndexNext": cbQoSAggregativeCarIndexNext,
       "cbQoSAggregativeCarCfgInfoTable": cbQoSAggregativeCarCfgInfoTable,
       "cbQoSAggregativeCarCfgInfoEntry": cbQoSAggregativeCarCfgInfoEntry,
       "cbQoSAggregativeCarIndex": cbQoSAggregativeCarIndex,
       "cbQoSAggregativeCarName": cbQoSAggregativeCarName,
       "cbQoSAggregativeCarColorMode": cbQoSAggregativeCarColorMode,
       "cbQoSAggregativeCarCir": cbQoSAggregativeCarCir,
       "cbQoSAggregativeCarCbs": cbQoSAggregativeCarCbs,
       "cbQoSAggregativeCarType": cbQoSAggregativeCarType,
       "cbQoSAggregativeCarEbs": cbQoSAggregativeCarEbs,
       "cbQoSAggregativeCarPir": cbQoSAggregativeCarPir,
       "cbQoSAggregativeCarPbs": cbQoSAggregativeCarPbs,
       "cbQoSAggregativeCarDropColor": cbQoSAggregativeCarDropColor,
       "cbQoSAggregativeCarUseL3Length": cbQoSAggregativeCarUseL3Length,
       "cbQoSAggregativeCarStats": cbQoSAggregativeCarStats,
       "cbQoSAggregativeCarRowStatus": cbQoSAggregativeCarRowStatus,
       "cbQoSBehaviorCarCfgInfoTable": cbQoSBehaviorCarCfgInfoTable,
       "cbQoSBehaviorCarCfgInfoEntry": cbQoSBehaviorCarCfgInfoEntry,
       "cbQoSBehaviorCarPolicyIndex": cbQoSBehaviorCarPolicyIndex,
       "cbQoSBehaviorCarPolicyClassIndex": cbQoSBehaviorCarPolicyClassIndex,
       "cbQoSBehaviorCarColorMode": cbQoSBehaviorCarColorMode,
       "cbQoSBehaviorCarCir": cbQoSBehaviorCarCir,
       "cbQoSBehaviorCarCbs": cbQoSBehaviorCarCbs,
       "cbQoSBehaviorCarType": cbQoSBehaviorCarType,
       "cbQoSBehaviorCarEbs": cbQoSBehaviorCarEbs,
       "cbQoSBehaviorCarPir": cbQoSBehaviorCarPir,
       "cbQoSBehaviorCarPbs": cbQoSBehaviorCarPbs,
       "cbQoSBehaviorCarDropColor": cbQoSBehaviorCarDropColor,
       "cbQoSBehaviorCarUseL3Length": cbQoSBehaviorCarUseL3Length,
       "cbQoSBehaviorCarStats": cbQoSBehaviorCarStats,
       "cbQoSBehaviorCarRowStatus": cbQoSBehaviorCarRowStatus,
       "cbQoSBehaviorPriColorCfgInfoTable": cbQoSBehaviorPriColorCfgInfoTable,
       "cbQoSBehaviorPriColorCfgInfoEntry": cbQoSBehaviorPriColorCfgInfoEntry,
       "cbQoSBehaviorPriColorPolicyIndex": cbQoSBehaviorPriColorPolicyIndex,
       "cbQoSBehaviorPriColorPolicyClassIndex": cbQoSBehaviorPriColorPolicyClassIndex,
       "cbQoSBehaviorPriColorSetPriority": cbQoSBehaviorPriColorSetPriority,
       "cbQoSBehaviorPriColorSetColor": cbQoSBehaviorPriColorSetColor,
       "cbQoSBehaviorOptionTable": cbQoSBehaviorOptionTable,
       "cbQoSBehaviorOptionEntry": cbQoSBehaviorOptionEntry,
       "cbQoSBehaviorOptionPolicyIndex": cbQoSBehaviorOptionPolicyIndex,
       "cbQoSBehaviorOptionPolicyClassIndex": cbQoSBehaviorOptionPolicyClassIndex,
       "cbQoSBehaviorOptionTrust": cbQoSBehaviorOptionTrust,
       "cbQoSBehaviorOptionStatsEn": cbQoSBehaviorOptionStatsEn,
       "cbQoSBehaviorOptionRedirectIfindex": cbQoSBehaviorOptionRedirectIfindex,
       "cbQoSBehaviorOptionMonitorSession": cbQoSBehaviorOptionMonitorSession,
       "cbQoSBehaviorCarAgpCfgTable": cbQoSBehaviorCarAgpCfgTable,
       "cbQoSBehaviorCarAgpCfgEntry": cbQoSBehaviorCarAgpCfgEntry,
       "cbQoSBehaviorCarAgpPolicyIndex": cbQoSBehaviorCarAgpPolicyIndex,
       "cbQoSBehaviorCarAgpPolicyClassIndex": cbQoSBehaviorCarAgpPolicyClassIndex,
       "cbQoSBehaviorCarAgpCarName": cbQoSBehaviorCarAgpCarName,
       "cbQoSBehaviorCarAgpRowStatus": cbQoSBehaviorCarAgpRowStatus,
       "cbQoSApplyPolicyObjects": cbQoSApplyPolicyObjects,
       "cbQoSIfApplyPolicyTable": cbQoSIfApplyPolicyTable,
       "cbQoSIfApplyPolicyEntry": cbQoSIfApplyPolicyEntry,
       "cbQoSIfApplyPolicyIfIndex": cbQoSIfApplyPolicyIfIndex,
       "cbQoSIfApplyPolicyDirection": cbQoSIfApplyPolicyDirection,
       "cbQoSIfApplyPolicyIndex": cbQoSIfApplyPolicyIndex,
       "cbQoSIfApplyPolicyName": cbQoSIfApplyPolicyName,
       "cbQoSIfApplyPolicyRowStatus": cbQoSIfApplyPolicyRowStatus,
       "srvQos": srvQos,
       "srvQosSapIngressObjects": srvQosSapIngressObjects,
       "srvQosSapIngressTable": srvQosSapIngressTable,
       "srvQosSapIngressEntry": srvQosSapIngressEntry,
       "srvQosSapIngressName": srvQosSapIngressName,
       "srvQosSapIngressRowStatus": srvQosSapIngressRowStatus,
       "srvQosSapIngressDescription": srvQosSapIngressDescription,
       "srvQosSapIngressApplyPolicyMap": srvQosSapIngressApplyPolicyMap,
       "srvQosSapIngressPolicerTable": srvQosSapIngressPolicerTable,
       "srvQosSapIngressPolicerEntry": srvQosSapIngressPolicerEntry,
       "srvQosSapIngressPolicerMode": srvQosSapIngressPolicerMode,
       "srvQosSapIngressPolicerCir": srvQosSapIngressPolicerCir,
       "srvQosSapIngressPolicerCbs": srvQosSapIngressPolicerCbs,
       "srvQosSapIngressPolicerEbs": srvQosSapIngressPolicerEbs,
       "srvQosSapIngressPolicerPir": srvQosSapIngressPolicerPir,
       "srvQosSapIngressPolicerPbs": srvQosSapIngressPolicerPbs,
       "srvQosSapIngressPolicerDropColor": srvQosSapIngressPolicerDropColor,
       "srvQosSapIngressPolicerUseL3Length": srvQosSapIngressPolicerUseL3Length,
       "srvQosSapEgressObjects": srvQosSapEgressObjects,
       "srvQosSapEgressTable": srvQosSapEgressTable,
       "srvQosSapEgressEntry": srvQosSapEgressEntry,
       "srvQosSapEgressName": srvQosSapEgressName,
       "srvQosSapEgressRowStatus": srvQosSapEgressRowStatus,
       "srvQosSapEgressDescription": srvQosSapEgressDescription,
       "srvQosSapEgressShapeAverage": srvQosSapEgressShapeAverage,
       "srvQosSapEgressQueueTable": srvQosSapEgressQueueTable,
       "srvQosSapEgressQueueEntry": srvQosSapEgressQueueEntry,
       "srvQosSapEgressQueueId": srvQosSapEgressQueueId,
       "srvQosSapEgressQueueShapeAverageRateCir": srvQosSapEgressQueueShapeAverageRateCir,
       "srvQosSapEgressQueueShapeAverageRatePir": srvQosSapEgressQueueShapeAverageRatePir,
       "srvQosSapEgressQueueInfoTable": srvQosSapEgressQueueInfoTable,
       "srvQosSapEgressQueueInfoEntry": srvQosSapEgressQueueInfoEntry,
       "srvQosSapEgressQueueInfoRandomDetect": srvQosSapEgressQueueInfoRandomDetect,
       "srvQosSapEgressQueueInfoTailDropThreshold0": srvQosSapEgressQueueInfoTailDropThreshold0,
       "srvQosSapEgressQueueInfoTailDropThreshold1": srvQosSapEgressQueueInfoTailDropThreshold1,
       "srvQosSapEgressQueueInfoTailDropThreshold2": srvQosSapEgressQueueInfoTailDropThreshold2,
       "srvQosSapEgressQueueInfoTailDropThreshold3": srvQosSapEgressQueueInfoTailDropThreshold3,
       "srvQosSapEgressQueueInfoRandomDetectMinThreshold0": srvQosSapEgressQueueInfoRandomDetectMinThreshold0,
       "srvQosSapEgressQueueInfoRandomDetectMinThreshold1": srvQosSapEgressQueueInfoRandomDetectMinThreshold1,
       "srvQosSapEgressQueueInfoRandomDetectMinThreshold2": srvQosSapEgressQueueInfoRandomDetectMinThreshold2,
       "srvQosSapEgressQueueInfoRandomDetectMinThreshold3": srvQosSapEgressQueueInfoRandomDetectMinThreshold3,
       "srvQosSapEgressQueueInfoRandomDetectMaxThreshold0": srvQosSapEgressQueueInfoRandomDetectMaxThreshold0,
       "srvQosSapEgressQueueInfoRandomDetectMaxThreshold1": srvQosSapEgressQueueInfoRandomDetectMaxThreshold1,
       "srvQosSapEgressQueueInfoRandomDetectMaxThreshold2": srvQosSapEgressQueueInfoRandomDetectMaxThreshold2,
       "srvQosSapEgressQueueInfoRandomDetectMaxThreshold3": srvQosSapEgressQueueInfoRandomDetectMaxThreshold3,
       "srvQosSapEgressQueueInfoRandomDetectDropProbability0": srvQosSapEgressQueueInfoRandomDetectDropProbability0,
       "srvQosSapEgressQueueInfoRandomDetectDropProbability1": srvQosSapEgressQueueInfoRandomDetectDropProbability1,
       "srvQosSapEgressQueueInfoRandomDetectDropProbability2": srvQosSapEgressQueueInfoRandomDetectDropProbability2,
       "srvQosSapEgressQueueInfoRandomDetectDropProbability3": srvQosSapEgressQueueInfoRandomDetectDropProbability3,
       "srvQosFreeQueueInfoObjects": srvQosFreeQueueInfoObjects,
       "srvQosFreeQueueInfoServiceQueueNum": srvQosFreeQueueInfoServiceQueueNum,
       "srvQosFreeQueueInfoMaxSupportQueueNum": srvQosFreeQueueInfoMaxSupportQueueNum,
       "srvQosFreeQueueInfoAllocatedQueueNum": srvQosFreeQueueInfoAllocatedQueueNum,
       "srvQosFreeQueueInfoMaxSupportServiceNum": srvQosFreeQueueInfoMaxSupportServiceNum,
       "srvQosFreeQueueInfoAllocatedServiceNum": srvQosFreeQueueInfoAllocatedServiceNum,
       "stats": stats,
       "qosStatsEnableObjects": qosStatsEnableObjects,
       "qosStatsPolicyEnable": qosStatsPolicyEnable,
       "qosStatsQueueEnable": qosStatsQueueEnable,
       "qosStatsClearStaticsObjects": qosStatsClearStaticsObjects,
       "qosStatsClearPolicyTable": qosStatsClearPolicyTable,
       "qosStatsClearPolicyEntry": qosStatsClearPolicyEntry,
       "qosStatsClearPolicyIndex": qosStatsClearPolicyIndex,
       "qosStatsClearPolicyPolicerStats": qosStatsClearPolicyPolicerStats,
       "qosStatsClearPolicyAceMatchStats": qosStatsClearPolicyAceMatchStats,
       "qosStatsClearPortPolicyTable": qosStatsClearPortPolicyTable,
       "qosStatsClearPortPolicyEntry": qosStatsClearPortPolicyEntry,
       "qosStatsClearPortPolicyIfIndex": qosStatsClearPortPolicyIfIndex,
       "qosStatsClearPortPolicyDirection": qosStatsClearPortPolicyDirection,
       "qosStatsClearPortPolicyStats": qosStatsClearPortPolicyStats,
       "qosStatsClearAggPolicyTable": qosStatsClearAggPolicyTable,
       "qosStatsClearAggPolicyEntry": qosStatsClearAggPolicyEntry,
       "qosStatsClearAggPolicyIndex": qosStatsClearAggPolicyIndex,
       "qosStatsClearAggPolicyStats": qosStatsClearAggPolicyStats,
       "qosStatsClearQueueTable": qosStatsClearQueueTable,
       "qosStatsClearQueueEntry": qosStatsClearQueueEntry,
       "qosStatsClearQueueifIndex": qosStatsClearQueueifIndex,
       "qosStatsClearQueueId": qosStatsClearQueueId,
       "qosStatsClearQueueStats": qosStatsClearQueueStats,
       "qosStatsRunStaticsObjects": qosStatsRunStaticsObjects,
       "qosStatsCbPolicyRunInfoTable": qosStatsCbPolicyRunInfoTable,
       "qosStatsCbPolicyRunInfoEntry": qosStatsCbPolicyRunInfoEntry,
       "qosStatsCbPolicyIfIndex": qosStatsCbPolicyIfIndex,
       "qosStatsCbPolicyDirection": qosStatsCbPolicyDirection,
       "qosStatsPolicyClassIndex": qosStatsPolicyClassIndex,
       "qosStatsPolicyGreenPackets": qosStatsPolicyGreenPackets,
       "qosStatsPolicyGreenBytes": qosStatsPolicyGreenBytes,
       "qosStatsPolicyRedPackets": qosStatsPolicyRedPackets,
       "qosStatsPolicyRedBytes": qosStatsPolicyRedBytes,
       "qosStatsPolicyYellowPackets": qosStatsPolicyYellowPackets,
       "qosStatsPolicyYellowBytes": qosStatsPolicyYellowBytes,
       "qosStatsPolicyClassBasedPkts": qosStatsPolicyClassBasedPkts,
       "qosStatsPolicyClassBasedBytes": qosStatsPolicyClassBasedBytes,
       "qosStatsPortPolicyRunInfoTable": qosStatsPortPolicyRunInfoTable,
       "qosStatsPortPolicyRunInfoEntry": qosStatsPortPolicyRunInfoEntry,
       "qosStatsPortPolicyIfIndex": qosStatsPortPolicyIfIndex,
       "qosStatsPortPolicyDirection": qosStatsPortPolicyDirection,
       "qosStatsPortPolicyConfirmPackets": qosStatsPortPolicyConfirmPackets,
       "qosStatsPortPolicyConfirmBytes": qosStatsPortPolicyConfirmBytes,
       "qosStatsPortPolicyNoConfirmPackets": qosStatsPortPolicyNoConfirmPackets,
       "qosStatsPortPolicyNoConfirmBytes": qosStatsPortPolicyNoConfirmBytes,
       "qosStatsIfQueueRunInfoTable": qosStatsIfQueueRunInfoTable,
       "qosStatsIfQueueRunInfoEntry": qosStatsIfQueueRunInfoEntry,
       "qosStatsQueueIfIndex": qosStatsQueueIfIndex,
       "qosStatsQueueID": qosStatsQueueID,
       "qosStatsIfQueueTransmittedPackets": qosStatsIfQueueTransmittedPackets,
       "qosStatsIfQueueTransmittedBytes": qosStatsIfQueueTransmittedBytes,
       "qosStatsIfQueueDropPackets": qosStatsIfQueueDropPackets,
       "qosStatsIfQueueDropBytes": qosStatsIfQueueDropBytes,
       "qosStatsCbPolicyAceBasedRunInfoTable": qosStatsCbPolicyAceBasedRunInfoTable,
       "qosStatsCbPolicyAceBasedRunInfoEntry": qosStatsCbPolicyAceBasedRunInfoEntry,
       "qosStatsCbAceBasedIfIndex": qosStatsCbAceBasedIfIndex,
       "qosStatsCbAceBasedDirection": qosStatsCbAceBasedDirection,
       "qosStatsCbAceBasedPolicyClassIndex": qosStatsCbAceBasedPolicyClassIndex,
       "qosStatsCbAceBasedMatchRuleIndex": qosStatsCbAceBasedMatchRuleIndex,
       "qosStatsCbAceBasedAclGroupRuleIndex": qosStatsCbAceBasedAclGroupRuleIndex,
       "qosStatsCbAceBasedPkts": qosStatsCbAceBasedPkts,
       "qosStatsCbAceBasedBytes": qosStatsCbAceBasedBytes,
       "qosStatsAggPolicyRunInfoTable": qosStatsAggPolicyRunInfoTable,
       "qosStatsAggPolicyRunInfoEntry": qosStatsAggPolicyRunInfoEntry,
       "qosStatsAggPolicyIndex": qosStatsAggPolicyIndex,
       "qosStatsAggPolicyRedPackets": qosStatsAggPolicyRedPackets,
       "qosStatsAggPolicyRedBytes": qosStatsAggPolicyRedBytes,
       "qosStatsAggPolicyGreenPackets": qosStatsAggPolicyGreenPackets,
       "qosStatsAggPolicyGreenBytes": qosStatsAggPolicyGreenBytes,
       "qosStatsAggPolicyYellowPackets": qosStatsAggPolicyYellowPackets,
       "qosStatsAggPolicyYellowBytes": qosStatsAggPolicyYellowBytes,
       "igsp": igsp,
       "lswIgmpsnoopingMibObject": lswIgmpsnoopingMibObject,
       "igmpSnoopingStatus": igmpSnoopingStatus,
       "igmpSnoopingFastLeaveStatus": igmpSnoopingFastLeaveStatus,
       "igmpSnoopingVersion": igmpSnoopingVersion,
       "igmpSnoopingMaxMemberNumber": igmpSnoopingMaxMemberNumber,
       "igmpSnoopingDiscardUnknownstatus": igmpSnoopingDiscardUnknownstatus,
       "igmpSnoopingReportSuppressionStatus": igmpSnoopingReportSuppressionStatus,
       "igmpSnoopingLastMemberQueryInterval": igmpSnoopingLastMemberQueryInterval,
       "igmpSnoopingQueryInterval": igmpSnoopingQueryInterval,
       "igmpSnoopingQueryMaxResponseTime": igmpSnoopingQueryMaxResponseTime,
       "igmpSnoopingVlanTable": igmpSnoopingVlanTable,
       "igmpSnoopingVlanEntry": igmpSnoopingVlanEntry,
       "igmpSnoopingVlanID": igmpSnoopingVlanID,
       "igmpSnoopingVlanEnabled": igmpSnoopingVlanEnabled,
       "igmpSnoopingVlanFastLeaveStatus": igmpSnoopingVlanFastLeaveStatus,
       "igmpSnoopingVlanReportSuppressionStatus": igmpSnoopingVlanReportSuppressionStatus,
       "igmpSnoopingVlanVersion": igmpSnoopingVlanVersion,
       "igmpSnoopingVlanMaxMemberNumber": igmpSnoopingVlanMaxMemberNumber,
       "igmpSnoopingVlanDiscardUnknownStatus": igmpSnoopingVlanDiscardUnknownStatus,
       "igmpSnoopingVlanGroupAccesslist": igmpSnoopingVlanGroupAccesslist,
       "igmpSnoopingVlanLastMemberQueryInterval": igmpSnoopingVlanLastMemberQueryInterval,
       "igmpSnoopingVlanQuerier": igmpSnoopingVlanQuerier,
       "igmpSnoopingVlanQuerierOperationalAddress": igmpSnoopingVlanQuerierOperationalAddress,
       "igmpSnoopingVlanQuerierConfigureAddress": igmpSnoopingVlanQuerierConfigureAddress,
       "igmpSnoopingVlanQuerierTimeout": igmpSnoopingVlanQuerierTimeout,
       "igmpSnoopingVlanQueryInterval": igmpSnoopingVlanQueryInterval,
       "igmpSnoopingVlanQueryMaxResponseTime": igmpSnoopingVlanQueryMaxResponseTime,
       "igmpSnoopingVlanStatusGrpJoinsCnt": igmpSnoopingVlanStatusGrpJoinsCnt,
       "igmpSnoopingVlanStatusGrpLeavesCnt": igmpSnoopingVlanStatusGrpLeavesCnt,
       "igmpSnoopingVlanStatusV1QuerierWCnt": igmpSnoopingVlanStatusV1QuerierWCnt,
       "igmpSnoopingVlanStatusV2QuerierWCnt": igmpSnoopingVlanStatusV2QuerierWCnt,
       "igmpSnoopingVlanStatusResetCounters": igmpSnoopingVlanStatusResetCounters,
       "igmpSnoopingVlanGrpNum": igmpSnoopingVlanGrpNum,
       "igmpSnoopingVlanElectedQuerierAddress": igmpSnoopingVlanElectedQuerierAddress,
       "igmpSnoopingMrouterPortTable": igmpSnoopingMrouterPortTable,
       "igmpSnoopingMrouterPortEntry": igmpSnoopingMrouterPortEntry,
       "igmpSnoopingVlanid": igmpSnoopingVlanid,
       "igmpSnoopingmrouterPort": igmpSnoopingmrouterPort,
       "igmpSnoopingmrouterPortRowStatus": igmpSnoopingmrouterPortRowStatus,
       "igmpSnoopingGrpNum": igmpSnoopingGrpNum,
       "lswIgmpsnoopingTrap": lswIgmpsnoopingTrap,
       "igmpSnoopingGrplimitReach": igmpSnoopingGrplimitReach,
       "igmpSnoopingVlanGrplimitReach": igmpSnoopingVlanGrplimitReach,
       "igmpSnoopingVlanQuerierSwitch": igmpSnoopingVlanQuerierSwitch,
       "linkAgg": linkAgg,
       "linkAggLoadBalance": linkAggLoadBalance,
       "lacpObject": lacpObject,
       "lacpSysPriorityCfg": lacpSysPriorityCfg,
       "lacpSysPriority": lacpSysPriority,
       "lacpIfCfgTable": lacpIfCfgTable,
       "lacpIfCfgEntry": lacpIfCfgEntry,
       "lacpIfCfgAdminAggNumber": lacpIfCfgAdminAggNumber,
       "lacpIfCfgMode": lacpIfCfgMode,
       "lacpIfCfgRowStatus": lacpIfCfgRowStatus,
       "lacpIfCfgParaTable": lacpIfCfgParaTable,
       "lacpIfCfgParaEntry": lacpIfCfgParaEntry,
       "lacpIfCfgParaPriority": lacpIfCfgParaPriority,
       "lacpIfCfgParaTimeOut": lacpIfCfgParaTimeOut,
       "lacpPortStateTable": lacpPortStateTable,
       "lacpPortStateEntry": lacpPortStateEntry,
       "lacpPortStateGroupNum": lacpPortStateGroupNum,
       "lacpPortState": lacpPortState,
       "lacpActorStateTable": lacpActorStateTable,
       "lacpActorStateEntry": lacpActorStateEntry,
       "lacpActorGroupNum": lacpActorGroupNum,
       "lacpActorSystemId": lacpActorSystemId,
       "lacpActorPortNum": lacpActorPortNum,
       "lacpActorPortTransitPduType": lacpActorPortTransitPduType,
       "lacpActorPortMode": lacpActorPortMode,
       "lacpActorPortPriority": lacpActorPortPriority,
       "lacpActorPortOperKey": lacpActorPortOperKey,
       "lacpActorPortStatsFlag": lacpActorPortStatsFlag,
       "lacpActorPortActivity": lacpActorPortActivity,
       "lacpActorPortTimeout": lacpActorPortTimeout,
       "lacpActorPortAggregation": lacpActorPortAggregation,
       "lacpActorPortSynchronization": lacpActorPortSynchronization,
       "lacpActorPortCollecting": lacpActorPortCollecting,
       "lacpActorPortDistributing": lacpActorPortDistributing,
       "lacpActorPortDefaulted": lacpActorPortDefaulted,
       "lacpActorPortExpired": lacpActorPortExpired,
       "lacpNeighborStateTable": lacpNeighborStateTable,
       "lacpNeighborStateEntry": lacpNeighborStateEntry,
       "lacpNeighborGroupNum": lacpNeighborGroupNum,
       "lacpNeighborSystemId": lacpNeighborSystemId,
       "lacpNeighborPortNum": lacpNeighborPortNum,
       "lacpNeighborPortTransitPduType": lacpNeighborPortTransitPduType,
       "lacpNeighborPortMode": lacpNeighborPortMode,
       "lacpNeighborPortPriority": lacpNeighborPortPriority,
       "lacpNeighborOperKey": lacpNeighborOperKey,
       "lacpNeighborPortStatsFlag": lacpNeighborPortStatsFlag,
       "lacpNeighborPortActivity": lacpNeighborPortActivity,
       "lacpNeighborPortTimeout": lacpNeighborPortTimeout,
       "lacpNeighborPortAggregation": lacpNeighborPortAggregation,
       "lacpNeighborPortSynchronization": lacpNeighborPortSynchronization,
       "lacpNeighborPortCollecting": lacpNeighborPortCollecting,
       "lacpNeighborPortDistributing": lacpNeighborPortDistributing,
       "lacpNeighborPortDefaulted": lacpNeighborPortDefaulted,
       "lacpNeighborPortExpired": lacpNeighborPortExpired,
       "lacpCounterTable": lacpCounterTable,
       "lacpCounterEntry": lacpCounterEntry,
       "lacpCounterGroupNum": lacpCounterGroupNum,
       "lacpCounterSendPduCnt": lacpCounterSendPduCnt,
       "lacpCounterRecvPduCnt": lacpCounterRecvPduCnt,
       "lacpCounterSendErrPktCnt": lacpCounterSendErrPktCnt,
       "lacpCounterRecvErrPktCnt": lacpCounterRecvErrPktCnt,
       "lacpClearCntCfg": lacpClearCntCfg,
       "lacpClearCounter": lacpClearCounter,
       "staticLinkAggObject": staticLinkAggObject,
       "staticLinkAggTable": staticLinkAggTable,
       "staticLinkAggEntry": staticLinkAggEntry,
       "staticLinkAggNumber": staticLinkAggNumber,
       "staticLinkAggIndex": staticLinkAggIndex,
       "staticLinkAggName": staticLinkAggName,
       "staticLinkAggMemberIndex": staticLinkAggMemberIndex,
       "staticLinkAggMemberName": staticLinkAggMemberName,
       "staticLinkAggMemberEnable": staticLinkAggMemberEnable,
       "staticLinkAggMemberRowStatus": staticLinkAggMemberRowStatus,
       "qBridgeExt": qBridgeExt,
       "vlanExt": vlanExt,
       "vlanTable": vlanTable,
       "vlanEntry": vlanEntry,
       "vlanIndex": vlanIndex,
       "vlanName": vlanName,
       "vlanStatus": vlanStatus,
       "vlanRowStatus": vlanRowStatus,
       "vlanIfConfig": vlanIfConfig,
       "vlanStatsPktIn": vlanStatsPktIn,
       "vlanStatsPktOut": vlanStatsPktOut,
       "vlanStatsByteIn": vlanStatsByteIn,
       "vlanStatsByteOut": vlanStatsByteOut,
       "vlanStatsEn": vlanStatsEn,
       "portVlanTable": portVlanTable,
       "portVlanEntry": portVlanEntry,
       "vlanTagType": vlanTagType,
       "pvid": pvid,
       "ingressFilter": ingressFilter,
       "allowedVlans": allowedVlans,
       "allowedVlanAdd": allowedVlanAdd,
       "allowedVlanDel": allowedVlanDel,
       "vlanReplaceDscpExpTable": vlanReplaceDscpExpTable,
       "vlanReplaceDscpExpEntry": vlanReplaceDscpExpEntry,
       "vlanReplaceDscpExpIndex": vlanReplaceDscpExpIndex,
       "vlanReplaceDscpExpEn": vlanReplaceDscpExpEn,
       "fdbExt": fdbExt,
       "unicastTable": unicastTable,
       "unicastEntry": unicastEntry,
       "unicastVID": unicastVID,
       "unicastAddress": unicastAddress,
       "fdbPort": fdbPort,
       "fdbStatus": fdbStatus,
       "fdbRowStatus": fdbRowStatus,
       "multicastTable": multicastTable,
       "multicastEntry": multicastEntry,
       "multicastVID": multicastVID,
       "multicastAddress": multicastAddress,
       "destinationPort": destinationPort,
       "multicastRowStatus": multicastRowStatus,
       "filterTable": filterTable,
       "filterEntry": filterEntry,
       "filterAddress": filterAddress,
       "filterRowStatus": filterRowStatus,
       "addressClearOperation": addressClearOperation,
       "addressAgingTime": addressAgingTime,
       "fdbExtTrap": fdbExtTrap,
       "fdbExtDbFull": fdbExtDbFull,
       "vlanClass": vlanClass,
       "vlanClassRuleIpTable": vlanClassRuleIpTable,
       "vlanClassRuleIpEntry": vlanClassRuleIpEntry,
       "vlanClassRuleIpIndex": vlanClassRuleIpIndex,
       "vlanClassRuleIpAddress": vlanClassRuleIpAddress,
       "vlanClassRuleIpAddressLen": vlanClassRuleIpAddressLen,
       "vlanClassIpVlanID": vlanClassIpVlanID,
       "vlanClassRuleIpRowStatus": vlanClassRuleIpRowStatus,
       "vlanClassRuleMacTable": vlanClassRuleMacTable,
       "vlanClassRuleMacEntry": vlanClassRuleMacEntry,
       "vlanClassRuleMacIndex": vlanClassRuleMacIndex,
       "vlanClassRuleMacAddress": vlanClassRuleMacAddress,
       "vlanClassMacVlanID": vlanClassMacVlanID,
       "vlanClassRuleMacRowStatus": vlanClassRuleMacRowStatus,
       "vlanClassRuleProtocolTable": vlanClassRuleProtocolTable,
       "vlanClassRuleProtocolEntry": vlanClassRuleProtocolEntry,
       "vlanClassRuleProtocolIndex": vlanClassRuleProtocolIndex,
       "vlanClassRuleProtocol": vlanClassRuleProtocol,
       "vlanClassProtocolVlanID": vlanClassProtocolVlanID,
       "vlanClassRuleProtocolRowStatus": vlanClassRuleProtocolRowStatus,
       "vlanClassGroupTable": vlanClassGroupTable,
       "vlanClassGroupEntry": vlanClassGroupEntry,
       "vlanClassGroupIndex": vlanClassGroupIndex,
       "vlanClassRuleIndex": vlanClassRuleIndex,
       "vlanClassGroupRowStatus": vlanClassGroupRowStatus,
       "vlanClassEnableTable": vlanClassEnableTable,
       "vlanClassEnableEntry": vlanClassEnableEntry,
       "vlanClassEnableIfIndex": vlanClassEnableIfIndex,
       "vlanClassEnableGroup": vlanClassEnableGroup,
       "vlanClassEnableBase": vlanClassEnableBase,
       "vlanClassEnableRowStatus": vlanClassEnableRowStatus,
       "dot1xExt": dot1xExt,
       "dot1xExtMaxReauthReqTable": dot1xExtMaxReauthReqTable,
       "dot1xExtMaxReauthReqEntry": dot1xExtMaxReauthReqEntry,
       "dot1xExtMaxReauthReqIndex": dot1xExtMaxReauthReqIndex,
       "dot1xExtMaxReauthReqVersion": dot1xExtMaxReauthReqVersion,
       "dot1xExtMaxReauthReqNum": dot1xExtMaxReauthReqNum,
       "dot1xExtMaxReqNum": dot1xExtMaxReqNum,
       "dot1xExtVlanPolicyTable": dot1xExtVlanPolicyTable,
       "dot1xExtVlanPolicyEntry": dot1xExtVlanPolicyEntry,
       "dot1xExtVlanPolicyIndex": dot1xExtVlanPolicyIndex,
       "dot1xExtGuestVlan": dot1xExtGuestVlan,
       "dot1xExtMacBasedResource": dot1xExtMacBasedResource,
       "dot1xExtMacBasedResourceMaxInterface": dot1xExtMacBasedResourceMaxInterface,
       "dot1xExtMacBasedResourceCurrentInterface": dot1xExtMacBasedResourceCurrentInterface,
       "dot1xExtMacBasedResourceMaxUser": dot1xExtMacBasedResourceMaxUser,
       "dot1xExtMacBasedResourceCurrentUser": dot1xExtMacBasedResourceCurrentUser,
       "dot1xExtMacBasedResourceMaxUserAll": dot1xExtMacBasedResourceMaxUserAll,
       "dot1xExtMacBasedResourceCurrentUserAll": dot1xExtMacBasedResourceCurrentUserAll,
       "dot1xExtMacBasedConfigTable": dot1xExtMacBasedConfigTable,
       "dot1xExtMacBasedConfigEntry": dot1xExtMacBasedConfigEntry,
       "dot1xExtMacBasedConfigIndex": dot1xExtMacBasedConfigIndex,
       "dot1xExtMacBasedConfigMode": dot1xExtMacBasedConfigMode,
       "dot1xExtMacBasedConfigBypassEn": dot1xExtMacBasedConfigBypassEn,
       "dot1xExtMacBasedConfigMaxUser": dot1xExtMacBasedConfigMaxUser,
       "dot1xExtMacBasedConfigCurrentUser": dot1xExtMacBasedConfigCurrentUser,
       "dot1xExtMacBasedConfigMaxUserAll": dot1xExtMacBasedConfigMaxUserAll,
       "dot1xExtMacBasedConfigCurrentUserAll": dot1xExtMacBasedConfigCurrentUserAll,
       "dot1xExtMacBasedUserTable": dot1xExtMacBasedUserTable,
       "dot1xExtMacBasedUserEntry": dot1xExtMacBasedUserEntry,
       "dot1xExtMacBasedUserIndex": dot1xExtMacBasedUserIndex,
       "dot1xExtMacBasedUserMac": dot1xExtMacBasedUserMac,
       "dot1xExtMacBasedUserState": dot1xExtMacBasedUserState,
       "dot1xExtMacBasedUserTimer": dot1xExtMacBasedUserTimer,
       "dot1xExtMacBasedUserIsBypass": dot1xExtMacBasedUserIsBypass,
       "dot1xExtMacBasedUserInGuestVlan": dot1xExtMacBasedUserInGuestVlan,
       "dot1xExtMacBasedUserGuestVlanID": dot1xExtMacBasedUserGuestVlanID,
       "dot1xExtMacBasedUserOffLine": dot1xExtMacBasedUserOffLine,
       "dot1xExtMacBasedClear": dot1xExtMacBasedClear,
       "dot1xExtMacBasedClearInterface": dot1xExtMacBasedClearInterface,
       "timeRange": timeRange,
       "trngMibObjects": trngMibObjects,
       "trngCreateTimerangeTable": trngCreateTimerangeTable,
       "trngCreateTimerangeEntry": trngCreateTimerangeEntry,
       "trngIndex": trngIndex,
       "trngName": trngName,
       "trngValidFlag": trngValidFlag,
       "trngCreateRowStatus": trngCreateRowStatus,
       "trngAbsoluteTable": trngAbsoluteTable,
       "trngAbsoluteEntry": trngAbsoluteEntry,
       "trngAbsoluteNameIndex": trngAbsoluteNameIndex,
       "timerangeAbsoluteStartTime": timerangeAbsoluteStartTime,
       "timerangeAbsoluteEndTime": timerangeAbsoluteEndTime,
       "timerangeAbsolueRowStatus": timerangeAbsolueRowStatus,
       "trngPeriodicTable": trngPeriodicTable,
       "trngPeriodicEntry": trngPeriodicEntry,
       "trngPeriodicNameIndex": trngPeriodicNameIndex,
       "trngPeriodicStartDayOfWeek": trngPeriodicStartDayOfWeek,
       "trngPeriodicEndDayOfWeek": trngPeriodicEndDayOfWeek,
       "timerangePeriodicStartTime": timerangePeriodicStartTime,
       "timerangePeriodicEndTime": timerangePeriodicEndTime,
       "timerangePeriodicRowStatus": timerangePeriodicRowStatus,
       "stpExt": stpExt,
       "stpExtStpEnable": stpExtStpEnable,
       "stpExtPathcostStandard": stpExtPathcostStandard,
       "stpExtBpduGuard": stpExtBpduGuard,
       "stpExtBpduFilter": stpExtBpduFilter,
       "stpExtBpduTransparent": stpExtBpduTransparent,
       "stpExtPortTable": stpExtPortTable,
       "stpExtPortEntry": stpExtPortEntry,
       "stpxpPortIndex": stpxpPortIndex,
       "stpxRootGuardObjects": stpxRootGuardObjects,
       "stpxRestrictedTcnObjects": stpxRestrictedTcnObjects,
       "stpxRestrictedRoleObjects": stpxRestrictedRoleObjects,
       "stpxEdgePortAdminBpduGuardObjects": stpxEdgePortAdminBpduGuardObjects,
       "stpxEdgePortOperBpduGuardObjects": stpxEdgePortOperBpduGuardObjects,
       "stpxEdgePortAdminBpduFilterObjects": stpxEdgePortAdminBpduFilterObjects,
       "stpxEdgePortOperBpduFilterObjects": stpxEdgePortOperBpduFilterObjects,
       "stpxForceVersionObjects": stpxForceVersionObjects,
       "stpxLoopGuardObjects": stpxLoopGuardObjects,
       "stpExtTrapEnable": stpExtTrapEnable,
       "stpExtMaxhops": stpExtMaxhops,
       "mstpExt": mstpExt,
       "stpVersion": stpVersion,
       "stpRegionName": stpRegionName,
       "stpRevision": stpRevision,
       "stpVlanTable": stpVlanTable,
       "stpVlanEntry": stpVlanEntry,
       "stpVlanId": stpVlanId,
       "stpVlanInstId": stpVlanInstId,
       "stpInstTable": stpInstTable,
       "stpInstEntry": stpInstEntry,
       "stpInstId": stpInstId,
       "stpPriority": stpPriority,
       "stpInstDesignatedRoot": stpInstDesignatedRoot,
       "stpInstRootCost": stpInstRootCost,
       "stpInstRootPort": stpInstRootPort,
       "stpInstPortTable": stpInstPortTable,
       "stpInstPortEntry": stpInstPortEntry,
       "stpInstPortPriority": stpInstPortPriority,
       "stpInstPortState": stpInstPortState,
       "stpInstPortPathCost": stpInstPortPathCost,
       "stpInstPortDesignatedRoot": stpInstPortDesignatedRoot,
       "stpInstPortDesignatedCost": stpInstPortDesignatedCost,
       "stpInstPortDesignatedBridge": stpInstPortDesignatedBridge,
       "stpInstPortDesignatedPort": stpInstPortDesignatedPort,
       "stpInstPortRole": stpInstPortRole,
       "stpInstRestrictedRole": stpInstRestrictedRole,
       "stpInstRestrictedTcn": stpInstRestrictedTcn,
       "stpInstNum": stpInstNum,
       "stpDigests": stpDigests,
       "igmpExt": igmpExt,
       "igmpRouterInterfaceExtTable": igmpRouterInterfaceExtTable,
       "igmpRouterInterfaceExtEntry": igmpRouterInterfaceExtEntry,
       "igmpRouterIfIndex": igmpRouterIfIndex,
       "igmpRouterQuerierType": igmpRouterQuerierType,
       "igmpRouterIfGroupLimit": igmpRouterIfGroupLimit,
       "igmpRouterIfImmediateLeaveAccess": igmpRouterIfImmediateLeaveAccess,
       "igmpRouterIfProxyService": igmpRouterIfProxyService,
       "igmpRouterIfAccess": igmpRouterIfAccess,
       "igmpRouterIfQuerierTimeout": igmpRouterIfQuerierTimeout,
       "igmpRouterIfGroupLimitExceptAccess": igmpRouterIfGroupLimitExceptAccess,
       "igmpRouterIfClearGrp": igmpRouterIfClearGrp,
       "igmpRouterGobalGrpLimit": igmpRouterGobalGrpLimit,
       "igmpRouterSsmMappingEnable": igmpRouterSsmMappingEnable,
       "igmpRouterSsmMappingTable": igmpRouterSsmMappingTable,
       "igmpRouterSsmMappingEntry": igmpRouterSsmMappingEntry,
       "igmpRouterSsmMappingIndex": igmpRouterSsmMappingIndex,
       "igmpRouterSsmMappingSourceAddress": igmpRouterSsmMappingSourceAddress,
       "igmpRouterSsmMappingAclName": igmpRouterSsmMappingAclName,
       "igmpRouterSsmMappingRowStatus": igmpRouterSsmMappingRowStatus,
       "boardHealthyMonitor": boardHealthyMonitor,
       "sysmonEnable": sysmonEnable,
       "heartBeatMonitor": heartBeatMonitor,
       "heartBeatMonitorEnable": heartBeatMonitorEnable,
       "heartBeatMonitorReactivate": heartBeatMonitorReactivate,
       "lastDumpedProcess": lastDumpedProcess,
       "arpInsp": arpInsp,
       "arpAclGroupTable": arpAclGroupTable,
       "arpAclGroupEntry": arpAclGroupEntry,
       "arpAclGroupIndex": arpAclGroupIndex,
       "arpAclGroupName": arpAclGroupName,
       "arpAclGroupRowStatus": arpAclGroupRowStatus,
       "arpAclRuleTable": arpAclRuleTable,
       "arpAclRuleEntry": arpAclRuleEntry,
       "arpAclIndex": arpAclIndex,
       "arpAclRuleIndex": arpAclRuleIndex,
       "arpAclAct": arpAclAct,
       "arpType": arpType,
       "arpSenderIp": arpSenderIp,
       "arpSenderIpWild": arpSenderIpWild,
       "arpSenderMac": arpSenderMac,
       "arpSenderMacWild": arpSenderMacWild,
       "arpAclLog": arpAclLog,
       "arpAclRowStatus": arpAclRowStatus,
       "arpAclApplyTable": arpAclApplyTable,
       "arpAclApplyEntry": arpAclApplyEntry,
       "arpAclApplyVid": arpAclApplyVid,
       "arpAclApplyName": arpAclApplyName,
       "arpAclApplyStatic": arpAclApplyStatic,
       "arpAclApplyRowStatus": arpAclApplyRowStatus,
       "arpInspValidateDestMac": arpInspValidateDestMac,
       "arpInspValidateIP": arpInspValidateIP,
       "arpInspValidateSrcMac": arpInspValidateSrcMac,
       "arpInspEnableTable": arpInspEnableTable,
       "arpInspEnableEntry": arpInspEnableEntry,
       "arpInspEnVid": arpInspEnVid,
       "arpInspEnableRowStatus": arpInspEnableRowStatus,
       "arpInspIfTrustTable": arpInspIfTrustTable,
       "arpInspIfTrustEntry": arpInspIfTrustEntry,
       "arpInspTrustIfindex": arpInspTrustIfindex,
       "arpInspTrustRowStatus": arpInspTrustRowStatus,
       "arpInspLogbuffEntries": arpInspLogbuffEntries,
       "arpInspLogbuffLogsTable": arpInspLogbuffLogsTable,
       "arpInspLogbuffLogsEntry": arpInspLogbuffLogsEntry,
       "arpInspLogbuffLogs": arpInspLogbuffLogs,
       "arpInspLogbuffInterval": arpInspLogbuffInterval,
       "arpInspLogbuffRowStatus": arpInspLogbuffRowStatus,
       "pimsmExt": pimsmExt,
       "pimsmMibObject": pimsmMibObject,
       "pimInterfaceExtTable": pimInterfaceExtTable,
       "pimInterfaceExtEntry": pimInterfaceExtEntry,
       "pimInterfaceIfIndex": pimInterfaceIfIndex,
       "pimInterfaceIPVersion": pimInterfaceIPVersion,
       "pimInterfaceExcludeGenid": pimInterfaceExcludeGenid,
       "pimInterfaceNeighborFilter": pimInterfaceNeighborFilter,
       "pimInterfaceUnicastBsm": pimInterfaceUnicastBsm,
       "pimAcceptRegisterList": pimAcceptRegisterList,
       "pimIgnoreRpSetPriority": pimIgnoreRpSetPriority,
       "pimCiscoRegisterChecksum": pimCiscoRegisterChecksum,
       "pimJpTimer": pimJpTimer,
       "pimRegisterRateLimit": pimRegisterRateLimit,
       "pimRegisterRpReachability": pimRegisterRpReachability,
       "pimRegisterSource": pimRegisterSource,
       "pimRegisterSuppression": pimRegisterSuppression,
       "pimRpRegisterKat": pimRpRegisterKat,
       "pimSptSwitchThresholdInfinity": pimSptSwitchThresholdInfinity,
       "pimSptSwitchThresholdInfinityList": pimSptSwitchThresholdInfinityList,
       "pimBsrCandidate": pimBsrCandidate,
       "pimSsmDefault": pimSsmDefault,
       "pimSsmRange": pimSsmRange,
       "pimMcastPimSmAdminMode": pimMcastPimSmAdminMode,
       "pimSwitchIPRoutingMode": pimSwitchIPRoutingMode,
       "pimIfMcastEnableExtTable": pimIfMcastEnableExtTable,
       "pimIfMcastEnableExtEntry": pimIfMcastEnableExtEntry,
       "pimIfMcastEnableIfIndex": pimIfMcastEnableIfIndex,
       "pimIfMcastEnableIPVersion": pimIfMcastEnableIPVersion,
       "pimIfMcastEnable": pimIfMcastEnable,
       "pimIfMcastEnableState": pimIfMcastEnableState,
       "ospfExt": ospfExt,
       "ospfExtProcessTable": ospfExtProcessTable,
       "ospfExtProcessEntry": ospfExtProcessEntry,
       "ospfExtProcessIndex": ospfExtProcessIndex,
       "ospfExtProcessVrfName": ospfExtProcessVrfName,
       "ospfExtProcessRowStatus": ospfExtProcessRowStatus,
       "ospfExtProcessLsaSummaryRouterCount": ospfExtProcessLsaSummaryRouterCount,
       "ospfExtProcessLsaSummaryRouterMaxAge": ospfExtProcessLsaSummaryRouterMaxAge,
       "ospfExtProcessLsaSummaryNetworkCount": ospfExtProcessLsaSummaryNetworkCount,
       "ospfExtProcessLsaSummaryNetworkMaxAge": ospfExtProcessLsaSummaryNetworkMaxAge,
       "ospfExtProcessLsaSummaryNetCount": ospfExtProcessLsaSummaryNetCount,
       "ospfExtProcessLsaSummaryNetMaxAge": ospfExtProcessLsaSummaryNetMaxAge,
       "ospfExtProcessLsaSummaryASBRCount": ospfExtProcessLsaSummaryASBRCount,
       "ospfExtProcessLsaSummaryASBRMaxAge": ospfExtProcessLsaSummaryASBRMaxAge,
       "ospfExtProcessLsaSummaryType5ExtCount": ospfExtProcessLsaSummaryType5ExtCount,
       "ospfExtProcessLsaSummaryType5ExtMaxAge": ospfExtProcessLsaSummaryType5ExtMaxAge,
       "ospfExtProcessLsaSummaryAttributeCount": ospfExtProcessLsaSummaryAttributeCount,
       "ospfExtProcessLsaSummaryAttributeMaxAge": ospfExtProcessLsaSummaryAttributeMaxAge,
       "ospfExtProcessLsaSummaryOpaqueLinkCount": ospfExtProcessLsaSummaryOpaqueLinkCount,
       "ospfExtProcessLsaSummaryOpaqueLinkMaxAge": ospfExtProcessLsaSummaryOpaqueLinkMaxAge,
       "ospfExtProcessLsaSummaryOpaqueProcessCount": ospfExtProcessLsaSummaryOpaqueProcessCount,
       "ospfExtProcessLsaSummaryOpaqueProcessMaxAge": ospfExtProcessLsaSummaryOpaqueProcessMaxAge,
       "ospfExtProcessLsaSummaryOpaqueASCount": ospfExtProcessLsaSummaryOpaqueASCount,
       "ospfExtProcessLsaSummaryOpaqueASMaxAge": ospfExtProcessLsaSummaryOpaqueASMaxAge,
       "ospfExtProcessRouteSummaryConnectedCount": ospfExtProcessRouteSummaryConnectedCount,
       "ospfExtProcessRouteSummaryDiscardCount": ospfExtProcessRouteSummaryDiscardCount,
       "ospfExtProcessRouteSummaryIntraAreaCount": ospfExtProcessRouteSummaryIntraAreaCount,
       "ospfExtProcessRouteSummaryInterAreaCount": ospfExtProcessRouteSummaryInterAreaCount,
       "ospfExtProcessRouteSummaryExtType1Count": ospfExtProcessRouteSummaryExtType1Count,
       "ospfExtProcessRouteSummaryExtType2Count": ospfExtProcessRouteSummaryExtType2Count,
       "ospfExtProcessRouteSummaryN1Count": ospfExtProcessRouteSummaryN1Count,
       "ospfExtProcessRouteSummaryN2Count": ospfExtProcessRouteSummaryN2Count,
       "ospfExtBinding": ospfExtBinding,
       "ospfExtIfTable": ospfExtIfTable,
       "ospfExtIfEntry": ospfExtIfEntry,
       "ospfExtIfIpAddress": ospfExtIfIpAddress,
       "ospfExtAddressLessIf": ospfExtAddressLessIf,
       "ospfExtIfMtu": ospfExtIfMtu,
       "ospfExtIfCost": ospfExtIfCost,
       "ospfExtIfOutgoingLSA": ospfExtIfOutgoingLSA,
       "ospfExtIfMtuIgnore": ospfExtIfMtuIgnore,
       "ospfExtIfAuth": ospfExtIfAuth,
       "ospfExtIfDeadInterval": ospfExtIfDeadInterval,
       "ospfExtIfHelloInterval": ospfExtIfHelloInterval,
       "ospfExtIfPri": ospfExtIfPri,
       "ospfExtIfRetransInterval": ospfExtIfRetransInterval,
       "ospfExtIfTransDelay": ospfExtIfTransDelay,
       "ospfExtIfDRRouterId": ospfExtIfDRRouterId,
       "ospfExtIfBackupDRRouterId": ospfExtIfBackupDRRouterId,
       "ospfExtIfDbFilterFlag": ospfExtIfDbFilterFlag,
       "ospfExtIfHelloDue": ospfExtIfHelloDue,
       "ospfExtIfNeighborCount": ospfExtIfNeighborCount,
       "ospfExtIfAdjacentNeighborCount": ospfExtIfAdjacentNeighborCount,
       "ospfExtIfCryptSequenceNumber": ospfExtIfCryptSequenceNumber,
       "ospfExtIfHelloRecv": ospfExtIfHelloRecv,
       "ospfExtIfHelloSend": ospfExtIfHelloSend,
       "ospfExtIfDDRecv": ospfExtIfDDRecv,
       "ospfExtIfDDSend": ospfExtIfDDSend,
       "ospfExtIfLSReqRecv": ospfExtIfLSReqRecv,
       "ospfExtIfLSReqSend": ospfExtIfLSReqSend,
       "ospfExtIfLSUpdRecv": ospfExtIfLSUpdRecv,
       "ospfExtIfLSUpdSend": ospfExtIfLSUpdSend,
       "ospfExtIfLsAckRecv": ospfExtIfLsAckRecv,
       "ospfExtIfLsAckSend": ospfExtIfLsAckSend,
       "ospfExtIfLsAckDiscard": ospfExtIfLsAckDiscard,
       "ospfExtIfTeMetric": ospfExtIfTeMetric,
       "ospfExtAreaStubTable": ospfExtAreaStubTable,
       "ospfExtAreaStubEntry": ospfExtAreaStubEntry,
       "ospfExtAreaStubStat": ospfExtAreaStubStat,
       "ospfExtAreaStubNoSummary": ospfExtAreaStubNoSummary,
       "ospfExtFilterTable": ospfExtFilterTable,
       "ospfExtFilterEntry": ospfExtFilterEntry,
       "ospfExtFilterId": ospfExtFilterId,
       "ospfExtFilterPrefixIn": ospfExtFilterPrefixIn,
       "ospfExtFilterPrefixOut": ospfExtFilterPrefixOut,
       "ospfExtFilterAccessIn": ospfExtFilterAccessIn,
       "ospfExtFilterAccessOut": ospfExtFilterAccessOut,
       "ospfExtSummaryAddrTable": ospfExtSummaryAddrTable,
       "ospfExtSummaryAddrEntry": ospfExtSummaryAddrEntry,
       "ospfExtSummaryAddrStat": ospfExtSummaryAddrStat,
       "ospfExtSummaryAddrNotAdvertise": ospfExtSummaryAddrNotAdvertise,
       "ospfExtSummaryAddrTag": ospfExtSummaryAddrTag,
       "ospfExtSummaryAddrMetric": ospfExtSummaryAddrMetric,
       "ospfExtSummaryAddrMetricType": ospfExtSummaryAddrMetricType,
       "ospfExtProperty": ospfExtProperty,
       "compatibleRfc": compatibleRfc,
       "timersSpfDelay": timersSpfDelay,
       "timersSpfHold": timersSpfHold,
       "refreshTimer": refreshTimer,
       "referBandwidth": referBandwidth,
       "maxConcurrentDd": maxConcurrentDd,
       "maximumArea": maximumArea,
       "defaultMetric": defaultMetric,
       "distance": distance,
       "distanceIntra": distanceIntra,
       "distanceInter": distanceInter,
       "distanceExternal": distanceExternal,
       "ospfExtNeighborTable": ospfExtNeighborTable,
       "ospfExtNeighborEntry": ospfExtNeighborEntry,
       "ospfExtNeighborStat": ospfExtNeighborStat,
       "ospfExtNeighborPollInterval": ospfExtNeighborPollInterval,
       "ospfExtNeighborCost": ospfExtNeighborCost,
       "ospfExtNeighborPri": ospfExtNeighborPri,
       "ospfExtNeighborStateStr": ospfExtNeighborStateStr,
       "ospfExtNeighborDeadTimeStr": ospfExtNeighborDeadTimeStr,
       "ospfExtNeighborIpAddr": ospfExtNeighborIpAddr,
       "ospfExtNeighborIfName": ospfExtNeighborIfName,
       "ospfExtRedistribute": ospfExtRedistribute,
       "redistributeBgp": redistributeBgp,
       "redistributeBgpMetricType": redistributeBgpMetricType,
       "redistributeBgpMetric": redistributeBgpMetric,
       "redistributeBgpRouteMap": redistributeBgpRouteMap,
       "redistributeBgpTag": redistributeBgpTag,
       "redistributeConnected": redistributeConnected,
       "redistributeConnectedMetricType": redistributeConnectedMetricType,
       "redistributeConnectedMetric": redistributeConnectedMetric,
       "redistributeConnectedRouteMap": redistributeConnectedRouteMap,
       "redistributeConnectedTag": redistributeConnectedTag,
       "redistributeRip": redistributeRip,
       "redistributeRipMetricType": redistributeRipMetricType,
       "redistributeRipMetric": redistributeRipMetric,
       "redistributeRipRouteMap": redistributeRipRouteMap,
       "redistributeRipTag": redistributeRipTag,
       "redistributeStatic": redistributeStatic,
       "redistributeStaticMetricType": redistributeStaticMetricType,
       "redistributeStaticMetric": redistributeStaticMetric,
       "redistributeStaticRouteMap": redistributeStaticRouteMap,
       "redistributeStaticTag": redistributeStaticTag,
       "redistributeBgpTagClr": redistributeBgpTagClr,
       "redistributeConnectedTagClr": redistributeConnectedTagClr,
       "redistributeRipTagClr": redistributeRipTagClr,
       "redistributeStaticTagClr": redistributeStaticTagClr,
       "ospfExtdistribute": ospfExtdistribute,
       "ospfExtdistributeIn": ospfExtdistributeIn,
       "ospfExtdistributeOutBgp": ospfExtdistributeOutBgp,
       "ospfExtdistributeOutConnected": ospfExtdistributeOutConnected,
       "ospfExtdistributeOutRip": ospfExtdistributeOutRip,
       "ospfExtdistributeOutStatic": ospfExtdistributeOutStatic,
       "ospfExtOriginate": ospfExtOriginate,
       "ospfExtOriginateEn": ospfExtOriginateEn,
       "ospfExtOriginateAlways": ospfExtOriginateAlways,
       "ospfExtOriginateMetricType": ospfExtOriginateMetricType,
       "ospfExtOriginateMetric": ospfExtOriginateMetric,
       "ospfExtOriginateRouteMap": ospfExtOriginateRouteMap,
       "ospfExtNetworkTable": ospfExtNetworkTable,
       "ospfExtNetworkEntry": ospfExtNetworkEntry,
       "ospfExtNetworkArea": ospfExtNetworkArea,
       "ospfExtNetworkRowStatus": ospfExtNetworkRowStatus,
       "ospfExtPassiveIfTable": ospfExtPassiveIfTable,
       "ospfExtPassiveIfEntry": ospfExtPassiveIfEntry,
       "ospfExtPassiveIfId": ospfExtPassiveIfId,
       "ospfExtPassiveIfName": ospfExtPassiveIfName,
       "ospfExtPassiveIfStatus": ospfExtPassiveIfStatus,
       "ospfExtMsgDigestKeyTable": ospfExtMsgDigestKeyTable,
       "ospfExtMsgDigestKeyEntry": ospfExtMsgDigestKeyEntry,
       "ospfExtMsgDigestKeyIfindex": ospfExtMsgDigestKeyIfindex,
       "ospfExtMsgDigestKeyId": ospfExtMsgDigestKeyId,
       "ospfExtMsgDigestKeyPwd": ospfExtMsgDigestKeyPwd,
       "ospfExtMsgDigestKeyStatus": ospfExtMsgDigestKeyStatus,
       "ospfExtAreaTable": ospfExtAreaTable,
       "ospfExtAreaEntry": ospfExtAreaEntry,
       "ospfExtAreaId": ospfExtAreaId,
       "ospfExtAreaDefaultCost": ospfExtAreaDefaultCost,
       "ospfExtAreaAuthType": ospfExtAreaAuthType,
       "ospfExtAreaLsaSummaryRouterCount": ospfExtAreaLsaSummaryRouterCount,
       "ospfExtAreaLsaSummaryRouterMaxAge": ospfExtAreaLsaSummaryRouterMaxAge,
       "ospfExtAreaLsaSummaryNetworkCount": ospfExtAreaLsaSummaryNetworkCount,
       "ospfExtAreaLsaSummaryNetworkMaxAge": ospfExtAreaLsaSummaryNetworkMaxAge,
       "ospfExtAreaLsaSummaryNetCount": ospfExtAreaLsaSummaryNetCount,
       "ospfExtAreaLsaSummaryNetMaxAge": ospfExtAreaLsaSummaryNetMaxAge,
       "ospfExtAreaLsaSummaryASBRCount": ospfExtAreaLsaSummaryASBRCount,
       "ospfExtAreaLsaSummaryASBRMaxAge": ospfExtAreaLsaSummaryASBRMaxAge,
       "ospfExtAreaLsaSummaryType5ExtCount": ospfExtAreaLsaSummaryType5ExtCount,
       "ospfExtAreaLsaSummaryType5ExtMaxAge": ospfExtAreaLsaSummaryType5ExtMaxAge,
       "ospfExtAreaLsaSummaryAttributeCount": ospfExtAreaLsaSummaryAttributeCount,
       "ospfExtAreaLsaSummaryAttributeMaxAge": ospfExtAreaLsaSummaryAttributeMaxAge,
       "ospfExtAreaLsaSummaryOpaqueLinkCount": ospfExtAreaLsaSummaryOpaqueLinkCount,
       "ospfExtAreaLsaSummaryOpaqueLinkMaxAge": ospfExtAreaLsaSummaryOpaqueLinkMaxAge,
       "ospfExtAreaLsaSummaryOpaqueAreaCount": ospfExtAreaLsaSummaryOpaqueAreaCount,
       "ospfExtAreaLsaSummaryOpaqueAreaMaxAge": ospfExtAreaLsaSummaryOpaqueAreaMaxAge,
       "ospfExtAreaLsaSummaryOpaqueASCount": ospfExtAreaLsaSummaryOpaqueASCount,
       "ospfExtAreaLsaSummaryOpaqueASMaxAge": ospfExtAreaLsaSummaryOpaqueASMaxAge,
       "ospfExtAreaRangeTable": ospfExtAreaRangeTable,
       "ospfExtAreaRangeEntry": ospfExtAreaRangeEntry,
       "ospfExtAreaRangeRowStatus": ospfExtAreaRangeRowStatus,
       "ospfExtAreaRangeAdvertise": ospfExtAreaRangeAdvertise,
       "ospfExtAreaVirtualLinkTable": ospfExtAreaVirtualLinkTable,
       "ospfExtAreaVirtualLinkEntry": ospfExtAreaVirtualLinkEntry,
       "ospfExtAreaVirtualLinkAreaId": ospfExtAreaVirtualLinkAreaId,
       "ospfExtAreaVirtualLinkIpAddr": ospfExtAreaVirtualLinkIpAddr,
       "ospfExtAreaVirtualLinkDeadInterval": ospfExtAreaVirtualLinkDeadInterval,
       "ospfExtAreaVirtualLinkHelloInterval": ospfExtAreaVirtualLinkHelloInterval,
       "ospfExtAreaVirtualLinkRetransInterval": ospfExtAreaVirtualLinkRetransInterval,
       "ospfExtAreaVirtualLinkTransDelay": ospfExtAreaVirtualLinkTransDelay,
       "ospfExtAreaVirtualLinkAuthKey": ospfExtAreaVirtualLinkAuthKey,
       "ospfExtAreaVirtualLinkRowStatus": ospfExtAreaVirtualLinkRowStatus,
       "ospfExtAreaVirtualLinkAuthClr": ospfExtAreaVirtualLinkAuthClr,
       "ospfExtAreaVirtualLinkStat": ospfExtAreaVirtualLinkStat,
       "ospfExtAreaVirtualLinkIfName": ospfExtAreaVirtualLinkIfName,
       "ospfExtAreaVirtualLinkLocalAddr": ospfExtAreaVirtualLinkLocalAddr,
       "ospfExtAreaVirtualLinkRemoteAddr": ospfExtAreaVirtualLinkRemoteAddr,
       "ospfExtAreaVirtualLinkHelloDue": ospfExtAreaVirtualLinkHelloDue,
       "ospfExtAreaVirtualLinkAdjacencyState": ospfExtAreaVirtualLinkAdjacencyState,
       "ospfExtAreaVirtualLinkMsgDigestKeyTable": ospfExtAreaVirtualLinkMsgDigestKeyTable,
       "ospfExtAreaVirtualLinkMsgDigestKeyEntry": ospfExtAreaVirtualLinkMsgDigestKeyEntry,
       "ospfExtAreaVirtualLinkMsgDigestKeyRowStatus": ospfExtAreaVirtualLinkMsgDigestKeyRowStatus,
       "ospfExtAreaVirtualLinkMsgDigestKeyPwd": ospfExtAreaVirtualLinkMsgDigestKeyPwd,
       "ospfExtRouterLsdbTable": ospfExtRouterLsdbTable,
       "ospfExtRouterLsdbEntry": ospfExtRouterLsdbEntry,
       "ospfExtRouterLsaId": ospfExtRouterLsaId,
       "ospfExtRouterLsaAge": ospfExtRouterLsaAge,
       "ospfExtRouterLsaOption": ospfExtRouterLsaOption,
       "ospfExtRouterLsaAdvRouter": ospfExtRouterLsaAdvRouter,
       "ospfExtRouterLsaSeq": ospfExtRouterLsaSeq,
       "ospfExtRouterLsaChkSum": ospfExtRouterLsaChkSum,
       "ospfExtRouterLsaLinkCount": ospfExtRouterLsaLinkCount,
       "ospfExtRouterLsaOpaqueID": ospfExtRouterLsaOpaqueID,
       "ospfExtRouterLsaOpaqueType": ospfExtRouterLsaOpaqueType,
       "ospfExtRouterLsaLength": ospfExtRouterLsaLength,
       "ospfExtNetworkLsdbTable": ospfExtNetworkLsdbTable,
       "ospfExtNetworkLsdbEntry": ospfExtNetworkLsdbEntry,
       "ospfExtNetworkLsaId": ospfExtNetworkLsaId,
       "ospfExtNetworkLsaAge": ospfExtNetworkLsaAge,
       "ospfExtNetworkLsaOption": ospfExtNetworkLsaOption,
       "ospfExtNetworkLsaAdvRouter": ospfExtNetworkLsaAdvRouter,
       "ospfExtNetworkLsaSeq": ospfExtNetworkLsaSeq,
       "ospfExtNetworkLsaChkSum": ospfExtNetworkLsaChkSum,
       "ospfExtNetworkLsaOpaqueID": ospfExtNetworkLsaOpaqueID,
       "ospfExtNetworkLsaOpaqueType": ospfExtNetworkLsaOpaqueType,
       "ospfExtNetworkLsaLength": ospfExtNetworkLsaLength,
       "ospfExtNetworkLsaNetworkMask": ospfExtNetworkLsaNetworkMask,
       "ospfExtSummaryLsdbTable": ospfExtSummaryLsdbTable,
       "ospfExtSummaryLsdbEntry": ospfExtSummaryLsdbEntry,
       "ospfExtSummaryLsaId": ospfExtSummaryLsaId,
       "ospfExtSummaryLsaAge": ospfExtSummaryLsaAge,
       "ospfExtSummaryLsaOption": ospfExtSummaryLsaOption,
       "ospfExtSummaryLsaAdvRouter": ospfExtSummaryLsaAdvRouter,
       "ospfExtSummaryLsaSeq": ospfExtSummaryLsaSeq,
       "ospfExtSummaryLsaChkSum": ospfExtSummaryLsaChkSum,
       "ospfExtSummaryLsaOpaqueID": ospfExtSummaryLsaOpaqueID,
       "ospfExtSummaryLsaOpaqueType": ospfExtSummaryLsaOpaqueType,
       "ospfExtSummaryLsaLength": ospfExtSummaryLsaLength,
       "ospfExtSummaryLsaNetworkMask": ospfExtSummaryLsaNetworkMask,
       "ospfExtSummaryLsaTos0Metric": ospfExtSummaryLsaTos0Metric,
       "ospfExtSummaryAsbrLsdbTable": ospfExtSummaryAsbrLsdbTable,
       "ospfExtSummaryAsbrLsdbEntry": ospfExtSummaryAsbrLsdbEntry,
       "ospfExtSummaryAsbrLsaId": ospfExtSummaryAsbrLsaId,
       "ospfExtSummaryAsbrLsaAge": ospfExtSummaryAsbrLsaAge,
       "ospfExtSummaryAsbrLsaOption": ospfExtSummaryAsbrLsaOption,
       "ospfExtSummaryAsbrLsaAdvRouter": ospfExtSummaryAsbrLsaAdvRouter,
       "ospfExtSummaryAsbrLsaSeq": ospfExtSummaryAsbrLsaSeq,
       "ospfExtSummaryAsbrLsaChkSum": ospfExtSummaryAsbrLsaChkSum,
       "ospfExtSummaryAsbrLsaOpaqueID": ospfExtSummaryAsbrLsaOpaqueID,
       "ospfExtSummaryAsbrLsaOpaqueType": ospfExtSummaryAsbrLsaOpaqueType,
       "ospfExtSummaryAsbrLsaLength": ospfExtSummaryAsbrLsaLength,
       "ospfExtSummaryAsbrLsaNetworkMask": ospfExtSummaryAsbrLsaNetworkMask,
       "ospfExtSummaryAsbrLsaTos0Metric": ospfExtSummaryAsbrLsaTos0Metric,
       "ospfExtAsExtLsdbTable": ospfExtAsExtLsdbTable,
       "ospfExtAsExtLsdbEntry": ospfExtAsExtLsdbEntry,
       "ospfExtAsExtLsaId": ospfExtAsExtLsaId,
       "ospfExtAsExtLsaAge": ospfExtAsExtLsaAge,
       "ospfExtAsExtLsaOption": ospfExtAsExtLsaOption,
       "ospfExtAsExtLsaAdvRouter": ospfExtAsExtLsaAdvRouter,
       "ospfExtAsExtLsaSeq": ospfExtAsExtLsaSeq,
       "ospfExtAsExtLsaChkSum": ospfExtAsExtLsaChkSum,
       "ospfExtAsExtLsaOpaqueID": ospfExtAsExtLsaOpaqueID,
       "ospfExtAsExtLsaOpaqueType": ospfExtAsExtLsaOpaqueType,
       "ospfExtAsExtLsaLength": ospfExtAsExtLsaLength,
       "ospfExtAsExtLsaNetworkMask": ospfExtAsExtLsaNetworkMask,
       "ospfExtAsExtLsaTos0Metric": ospfExtAsExtLsaTos0Metric,
       "ospfExtAsExtLsaMetricType": ospfExtAsExtLsaMetricType,
       "ospfExtAsExtLsaForwardAddress": ospfExtAsExtLsaForwardAddress,
       "ospfExtAsExtLsaExternalRouteTag": ospfExtAsExtLsaExternalRouteTag,
       "ospfExtGeneralGroup": ospfExtGeneralGroup,
       "ospfRouterId": ospfRouterId,
       "ospfExtSysUpTime": ospfExtSysUpTime,
       "ospfExtVrfName": ospfExtVrfName,
       "ospfCompatibleRfc": ospfCompatibleRfc,
       "ospfOpaqueCapable": ospfOpaqueCapable,
       "ospfAbrType": ospfAbrType,
       "ospfAbsr": ospfAbsr,
       "ospfDdCountIn": ospfDdCountIn,
       "ospfDdCountOut": ospfDdCountOut,
       "ospfMaxDd": ospfMaxDd,
       "ospfExternalLsaCount": ospfExternalLsaCount,
       "ospfExternalLsaChecksum": ospfExternalLsaChecksum,
       "ospfNoDefaultExternalLsaCount": ospfNoDefaultExternalLsaCount,
       "ospfExternalLsaDbLimit": ospfExternalLsaDbLimit,
       "ospfLsDbLimit": ospfLsDbLimit,
       "ospfLsaOrgCount": ospfLsaOrgCount,
       "ospfLsaRcvCount": ospfLsaRcvCount,
       "ospfExtLsdbLimitInterval": ospfExtLsdbLimitInterval,
       "ospfExtLsdbLimitNumber": ospfExtLsdbLimitNumber,
       "user": user,
       "lineTable": lineTable,
       "lineEntry": lineEntry,
       "lineType": lineType,
       "lineIndex": lineIndex,
       "lineLoginMode": lineLoginMode,
       "linePassword": linePassword,
       "linePriviledge": linePriviledge,
       "lineExecTimeoutmin": lineExecTimeoutmin,
       "lineExecTimeoutsec": lineExecTimeoutsec,
       "lineAccessInName": lineAccessInName,
       "lineTransportType": lineTransportType,
       "linePasswordType": linePasswordType,
       "usernameTable": usernameTable,
       "usernameEntry": usernameEntry,
       "usernameIndex": usernameIndex,
       "username": username,
       "password": password,
       "userPrivilege": userPrivilege,
       "userPwdType": userPwdType,
       "usernameRowStatus": usernameRowStatus,
       "enablePasswordTable": enablePasswordTable,
       "enablePasswordEntry": enablePasswordEntry,
       "privilegeIndex": privilegeIndex,
       "passwordType": passwordType,
       "enablePassword": enablePassword,
       "enableRowStatus": enableRowStatus,
       "serviceTerminalLength": serviceTerminalLength,
       "serviceCipherDetect": serviceCipherDetect,
       "usersTable": usersTable,
       "usersEntry": usersEntry,
       "usersLineType": usersLineType,
       "usersLineIndex": usersLineIndex,
       "usersname": usersname,
       "usersIdleTime": usersIdleTime,
       "usersLocation": usersLocation,
       "lineMaxVTY": lineMaxVTY,
       "snmpExt": snmpExt,
       "snmpExtMibObject": snmpExtMibObject,
       "snmpVersion": snmpVersion,
       "snmpEngineID": snmpEngineID,
       "snmpCommunityTable": snmpCommunityTable,
       "snmpCommunityEntry": snmpCommunityEntry,
       "snmpcommIndex": snmpcommIndex,
       "snmpcommName": snmpcommName,
       "snmpcommType": snmpcommType,
       "snmpcommView": snmpcommView,
       "snmpcommRowStatus": snmpcommRowStatus,
       "snmpViewTable": snmpViewTable,
       "snmpViewEntry": snmpViewEntry,
       "snmpviewIndex": snmpviewIndex,
       "snmpviewName": snmpviewName,
       "snmpviewType": snmpviewType,
       "snmpviewcldOID": snmpviewcldOID,
       "snmpviewMask": snmpviewMask,
       "snmpviewRowStatus": snmpviewRowStatus,
       "snmpUsmuserTable": snmpUsmuserTable,
       "snmpUsmuserEntry": snmpUsmuserEntry,
       "snmpUsmuserIndex": snmpUsmuserIndex,
       "snmpUsmuserName": snmpUsmuserName,
       "snmpUsmuserRemote": snmpUsmuserRemote,
       "snmpUsmuserAuth": snmpUsmuserAuth,
       "snmpUsmuserAuthHid": snmpUsmuserAuthHid,
       "snmpUsmuserAuthPWD": snmpUsmuserAuthPWD,
       "snmpUsmuserPrivacy": snmpUsmuserPrivacy,
       "snmpUsmuserPrivacyHid": snmpUsmuserPrivacyHid,
       "snmpUsmuserPrivacyPWD": snmpUsmuserPrivacyPWD,
       "snmpUsmuserRowStatus": snmpUsmuserRowStatus,
       "snmpGrpTable": snmpGrpTable,
       "snmpGrpEntry": snmpGrpEntry,
       "snmpGrpIndex": snmpGrpIndex,
       "snmpGrpName": snmpGrpName,
       "snmpGrpUser": snmpGrpUser,
       "snmpGrpSecMode": snmpGrpSecMode,
       "snmpGrpRowStatus": snmpGrpRowStatus,
       "snmpAccessTable": snmpAccessTable,
       "snmpAccessEntry": snmpAccessEntry,
       "snmpAccessIndex": snmpAccessIndex,
       "snmpAccessName": snmpAccessName,
       "snmpAccessUsm": snmpAccessUsm,
       "snmpAccessRead": snmpAccessRead,
       "snmpAccessWrite": snmpAccessWrite,
       "snmpAccessNotify": snmpAccessNotify,
       "snmpAccessContext": snmpAccessContext,
       "snmpAccessContextType": snmpAccessContextType,
       "snmpAccessSecuMode": snmpAccessSecuMode,
       "snmpAccessRowStatus": snmpAccessRowStatus,
       "snmpNotifyTable": snmpNotifyTable,
       "snmpNotifyEntry": snmpNotifyEntry,
       "snmpNotifyIndex": snmpNotifyIndex,
       "snmpNotifyName": snmpNotifyName,
       "snmpNotifyTag": snmpNotifyTag,
       "snmpNotifyOption": snmpNotifyOption,
       "snmpNotifyRowStatus": snmpNotifyRowStatus,
       "snmpTargetAddrTable": snmpTargetAddrTable,
       "snmpTargetAddrEntry": snmpTargetAddrEntry,
       "snmpTargetAddrIndex": snmpTargetAddrIndex,
       "snmpTargetAddrName": snmpTargetAddrName,
       "snmpTargetAddrPara": snmpTargetAddrPara,
       "snmpTargetAddrMgmtIf": snmpTargetAddrMgmtIf,
       "snmpTargetAddrIpType": snmpTargetAddrIpType,
       "snmpTargetAddrIp": snmpTargetAddrIp,
       "snmpTargetAddrPort": snmpTargetAddrPort,
       "snmpTargetAddrTimeout": snmpTargetAddrTimeout,
       "snmpTargetAddrRetry": snmpTargetAddrRetry,
       "snmpTargetAddrTag": snmpTargetAddrTag,
       "snmpTargetAddrRowStatus": snmpTargetAddrRowStatus,
       "snmpTargetParaTable": snmpTargetParaTable,
       "snmpTargetParaEntry": snmpTargetParaEntry,
       "snmpTargetParaIndex": snmpTargetParaIndex,
       "snmpTargetParaName": snmpTargetParaName,
       "snmpTargetParaUser": snmpTargetParaUser,
       "snmpTargetParaSecLvl": snmpTargetParaSecLvl,
       "snmpTargetParaRowStatus": snmpTargetParaRowStatus,
       "snmpTrapAddrTable": snmpTrapAddrTable,
       "snmpTrapAddrEntry": snmpTrapAddrEntry,
       "snmpTrapIndex": snmpTrapIndex,
       "snmpTrapType": snmpTrapType,
       "snmpTrapMgmtIf": snmpTrapMgmtIf,
       "snmpTrapAddrIptype": snmpTrapAddrIptype,
       "snmpTrapAddrIpAddr": snmpTrapAddrIpAddr,
       "snmpTrapAddrCommunity": snmpTrapAddrCommunity,
       "snmpTrapAddrVersion": snmpTrapAddrVersion,
       "snmpTrapAddrPort": snmpTrapAddrPort,
       "snmpTrapAddrRowStatus": snmpTrapAddrRowStatus,
       "snmpEnableTable": snmpEnableTable,
       "snmpTrapColdstart": snmpTrapColdstart,
       "snmpTrapWarmstart": snmpTrapWarmstart,
       "snmpTrapLinkdown": snmpTrapLinkdown,
       "snmpTrapLinkup": snmpTrapLinkup,
       "snmpTrapAll": snmpTrapAll,
       "snmpTrapGeneralEvents": snmpTrapGeneralEvents,
       "snmpLock": snmpLock,
       "snmpAccessGroup": snmpAccessGroup,
       "snmpSysContact": snmpSysContact,
       "snmpSysLocation": snmpSysLocation,
       "snmpInformReties": snmpInformReties,
       "snmpInformTimeout": snmpInformTimeout,
       "stm": stm,
       "stmMibObject": stmMibObject,
       "stmCurrentType": stmCurrentType,
       "stmNextType": stmNextType,
       "stmShowTable": stmShowTable,
       "stmShowEntry": stmShowEntry,
       "stmShowProfileType": stmShowProfileType,
       "stmShowVlanNumber": stmShowVlanNumber,
       "stmShowVlanForwardingInstances": stmShowVlanForwardingInstances,
       "stmShowUcastMacAddresses": stmShowUcastMacAddresses,
       "stmShowMcastMacAddresses": stmShowMcastMacAddresses,
       "stmShowBlackholeMacAddresses": stmShowBlackholeMacAddresses,
       "stmShowMaxAppliedVlanMapping": stmShowMaxAppliedVlanMapping,
       "stmShowCfmLocalAndRemoteMeps": stmShowCfmLocalAndRemoteMeps,
       "stmShowG8031Groups": stmShowG8031Groups,
       "stmShowG8032Rings": stmShowG8032Rings,
       "stmShowMacBasedVlanClassification": stmShowMacBasedVlanClassification,
       "stmShowIpv4BasedVlanClassification": stmShowIpv4BasedVlanClassification,
       "stmShowIpv6BasedVlanClassification": stmShowIpv6BasedVlanClassification,
       "stmShowIpv4HostRoutes": stmShowIpv4HostRoutes,
       "stmShowIndirectIpv4Routes": stmShowIndirectIpv4Routes,
       "stmShowIpv4EcmpGroups": stmShowIpv4EcmpGroups,
       "stmShowIpv6HostRoutes": stmShowIpv6HostRoutes,
       "stmShowIndirectIpv6Routes": stmShowIndirectIpv6Routes,
       "stmShowIpv6EcmpGroups": stmShowIpv6EcmpGroups,
       "stmShowIpTunnelPeers": stmShowIpTunnelPeers,
       "stmShowNatForIviPeers": stmShowNatForIviPeers,
       "stmShowIpv4McastRoutes": stmShowIpv4McastRoutes,
       "stmShowIpv4McastTotalMembers": stmShowIpv4McastTotalMembers,
       "stmShowIpv6McastRoutes": stmShowIpv6McastRoutes,
       "stmShowIpv6McastTotalMembers": stmShowIpv6McastTotalMembers,
       "stmShowIpv4SourceGuardEntries": stmShowIpv4SourceGuardEntries,
       "stmShowIpv6SourceGuardEntries": stmShowIpv6SourceGuardEntries,
       "stmShowIpv4AclAndQosFlowEntries": stmShowIpv4AclAndQosFlowEntries,
       "stmShowIpv6AclAndQosFlowEntries": stmShowIpv6AclAndQosFlowEntries,
       "stmShowFtn": stmShowFtn,
       "stmShowIncomingLabelMap": stmShowIncomingLabelMap,
       "stmShowVpws": stmShowVpws,
       "stmShowLspPe": stmShowLspPe,
       "stmShowLspP": stmShowLspP,
       "stmShowVplsPeer": stmShowVplsPeer,
       "stmShowVplsAc": stmShowVplsAc,
       "stmShowVplsInstance": stmShowVplsInstance,
       "stmShowLspOam": stmShowLspOam,
       "stmShowOamForPseudoWrie": stmShowOamForPseudoWrie,
       "stmShowMplsApsTunnel": stmShowMplsApsTunnel,
       "stmShowVlanMappingEntryAppliedPort": stmShowVlanMappingEntryAppliedPort,
       "stmShowVlanMemberPorts": stmShowVlanMemberPorts,
       "stmShowVlanMappingDefaultEntry": stmShowVlanMappingDefaultEntry,
       "stmShowL2mcMemberPorts": stmShowL2mcMemberPorts,
       "stmShowL2mcv6Entries": stmShowL2mcv6Entries,
       "stmShowL2mcv6MemberPorts": stmShowL2mcv6MemberPorts,
       "stmShowPBREntries": stmShowPBREntries,
       "stmShowPBRv6Entries": stmShowPBRv6Entries,
       "stmShowVoiceVlan": stmShowVoiceVlan,
       "stmShowG8032MemberPortsPerRing": stmShowG8032MemberPortsPerRing,
       "stmShowMPLSLables": stmShowMPLSLables,
       "stmShowBFDSessions": stmShowBFDSessions,
       "dnsClient": dnsClient,
       "dnsClientMibObject": dnsClientMibObject,
       "dnsClientHostTable": dnsClientHostTable,
       "dnsClientHostEntry": dnsClientHostEntry,
       "dnsClientHostIpHostIndex": dnsClientHostIpHostIndex,
       "dnsClientHostIpHostName": dnsClientHostIpHostName,
       "dnsClientHostIpAddress": dnsClientHostIpAddress,
       "dnsClientHostRowStatus": dnsClientHostRowStatus,
       "dnsClientDomainTable": dnsClientDomainTable,
       "dnsClientDomainEntry": dnsClientDomainEntry,
       "dnsClientDomainIndex": dnsClientDomainIndex,
       "dnsClientDomainName": dnsClientDomainName,
       "dnsClientDomainRowStatus": dnsClientDomainRowStatus,
       "dnsClientServerTable": dnsClientServerTable,
       "dnsClientServerEntry": dnsClientServerEntry,
       "dnsClientServerIpAddress": dnsClientServerIpAddress,
       "dnsClientServerRowStatus": dnsClientServerRowStatus,
       "ssh": ssh,
       "sshServer": sshServer,
       "sshServerEnable": sshServerEnable,
       "sshServerVersion": sshServerVersion,
       "sshServerAuthTimer": sshServerAuthTimer,
       "sshServerAuthRetries": sshServerAuthRetries,
       "sshServerAuthType": sshServerAuthType,
       "sshServerRekeyInterval": sshServerRekeyInterval,
       "sshRsaKey": sshRsaKey,
       "sshImportRsaKeyTable": sshImportRsaKeyTable,
       "sshImportRsaKeyEntry": sshImportRsaKeyEntry,
       "sshImportRsaKeyIndex": sshImportRsaKeyIndex,
       "sshImportRsaKeyName": sshImportRsaKeyName,
       "sshImportRsaMgmtIf": sshImportRsaMgmtIf,
       "sshImportRsaKeyGenType": sshImportRsaKeyGenType,
       "sshImportRsaKeyBits": sshImportRsaKeyBits,
       "sshImportRsaKeyFileName": sshImportRsaKeyFileName,
       "sshImportRsaKeyType": sshImportRsaKeyType,
       "sshImportRsaKeyFormatType": sshImportRsaKeyFormatType,
       "sshImportRsaKeyPasswd": sshImportRsaKeyPasswd,
       "sshImportRsaKeyRowStatus": sshImportRsaKeyRowStatus,
       "sshExportRsaKeyTable": sshExportRsaKeyTable,
       "sshExportRsaKeyEntry": sshExportRsaKeyEntry,
       "sshExportRsaKeyIndex": sshExportRsaKeyIndex,
       "sshExportRsaKeyName": sshExportRsaKeyName,
       "sshExportRsaMgmtIf": sshExportRsaMgmtIf,
       "sshExportRsaKeyExType": sshExportRsaKeyExType,
       "sshExportRsaKeyFileName": sshExportRsaKeyFileName,
       "sshExportRsaKeyType": sshExportRsaKeyType,
       "sshExportRsaKeyFormatType": sshExportRsaKeyFormatType,
       "sshExportRsaKeyEncryptType": sshExportRsaKeyEncryptType,
       "sshExportRsaKeyPassword": sshExportRsaKeyPassword,
       "sshExportRsaKeyRowStatus": sshExportRsaKeyRowStatus,
       "sshHostKey": sshHostKey,
       "sshHostKeyRsaTable": sshHostKeyRsaTable,
       "sshHostKeyRsaEntry": sshHostKeyRsaEntry,
       "sshHostKeyRsaIndex": sshHostKeyRsaIndex,
       "sshHostKeyRsaName": sshHostKeyRsaName,
       "sshHostKeyRsaRowStatus": sshHostKeyRsaRowStatus,
       "dhcp": dhcp,
       "dhcpGlobal": dhcpGlobal,
       "dhcpEnable": dhcpEnable,
       "dhcpSnoop": dhcpSnoop,
       "dhcpSnoopEnable": dhcpSnoopEnable,
       "dhcpSnoopVerMac": dhcpSnoopVerMac,
       "dhcpSnoopOption82": dhcpSnoopOption82,
       "dhcpSnoopOption82AllowUntrusted": dhcpSnoopOption82AllowUntrusted,
       "dhcpSnoopAutoSaveInterval": dhcpSnoopAutoSaveInterval,
       "dhcpSnoopVlanTable": dhcpSnoopVlanTable,
       "dhcpSnoopVlanEntry": dhcpSnoopVlanEntry,
       "dhcpSnoopVlanIndex": dhcpSnoopVlanIndex,
       "dhcpSnoopVlanEnable": dhcpSnoopVlanEnable,
       "dhcpSnoopBindingTable": dhcpSnoopBindingTable,
       "dhcpSnoopBindingEntry": dhcpSnoopBindingEntry,
       "dhcpSnoopClientVlan": dhcpSnoopClientVlan,
       "dhcpSnoopClientMacAddress": dhcpSnoopClientMacAddress,
       "dhcpSnoopClientIpAddressType": dhcpSnoopClientIpAddressType,
       "dhcpSnoopClientIpAddress": dhcpSnoopClientIpAddress,
       "dhcpSnoopClientIfindex": dhcpSnoopClientIfindex,
       "dhcpSnoopClientExpiry": dhcpSnoopClientExpiry,
       "dhcpSnoopClientRowStatus": dhcpSnoopClientRowStatus,
       "dhcpSnoopTrustTable": dhcpSnoopTrustTable,
       "dhcpSnoopTrustEntry": dhcpSnoopTrustEntry,
       "dhcpSnoopTrustStatus": dhcpSnoopTrustStatus,
       "dhcpSnoopStatisticsGroup": dhcpSnoopStatisticsGroup,
       "dhcpSnoopDHCPPktNum": dhcpSnoopDHCPPktNum,
       "dhcpSnoopBootpPktNum": dhcpSnoopBootpPktNum,
       "dhcpSnoopFwdPktNum": dhcpSnoopFwdPktNum,
       "dhcpSnoopInvalidPktNum": dhcpSnoopInvalidPktNum,
       "dhcpSnoopMacVerifyFailedPktNum": dhcpSnoopMacVerifyFailedPktNum,
       "dhcpSnoopDroppedPktNum": dhcpSnoopDroppedPktNum,
       "dhcpSnoopStatisticsReset": dhcpSnoopStatisticsReset,
       "dhcpSnoopClearAllBinding": dhcpSnoopClearAllBinding,
       "dhcpSnoopRemoteIdFormatHostName": dhcpSnoopRemoteIdFormatHostName,
       "dhcpSnoopRemoteIdFormatString": dhcpSnoopRemoteIdFormatString,
       "dhcpSnoopCircuitIdFormatTable": dhcpSnoopCircuitIdFormatTable,
       "dhcpSnoopCircuitIdFormatEntry": dhcpSnoopCircuitIdFormatEntry,
       "dhcpSnoopCircuitIdFormatVlan": dhcpSnoopCircuitIdFormatVlan,
       "dhcpSnoopCircuitIdFormatString": dhcpSnoopCircuitIdFormatString,
       "dhcpSnoopCircuitIdFormatRowStatus": dhcpSnoopCircuitIdFormatRowStatus,
       "dhcpRelay": dhcpRelay,
       "dhcpRGlobal": dhcpRGlobal,
       "dhcpREnable": dhcpREnable,
       "dhcpROption82TrustAll": dhcpROption82TrustAll,
       "dhcpRServer": dhcpRServer,
       "dhcpROption82Switch": dhcpROption82Switch,
       "dhcpROption82Check": dhcpROption82Check,
       "dhcpROption82HandleStrategy": dhcpROption82HandleStrategy,
       "dhcpRIpToGroupTable": dhcpRIpToGroupTable,
       "dhcpRIpToGroupEntry": dhcpRIpToGroupEntry,
       "dhcpRIpToGroupGroupId": dhcpRIpToGroupGroupId,
       "dhcpRIpToGroupServerIp": dhcpRIpToGroupServerIp,
       "dhcpRIpToGroupRowStatus": dhcpRIpToGroupRowStatus,
       "dhcpRStatisticsGroup": dhcpRStatisticsGroup,
       "dhcpRRxClientPktNum": dhcpRRxClientPktNum,
       "dhcpRRxServerPktNum": dhcpRRxServerPktNum,
       "dhcpRRxClientErrPktNum": dhcpRRxClientErrPktNum,
       "dhcpRRxServerErrPktNum": dhcpRRxServerErrPktNum,
       "dhcpRBogusAddrDropsPktNum": dhcpRBogusAddrDropsPktNum,
       "dhcpRBadCircuitIDPktNum": dhcpRBadCircuitIDPktNum,
       "dhcpRCorruptedAgentOpPktNum": dhcpRCorruptedAgentOpPktNum,
       "dhcpRMissAgentOpPktNum": dhcpRMissAgentOpPktNum,
       "dhcpRMissCircuitIDPktNum": dhcpRMissCircuitIDPktNum,
       "dhcpRStatisticsReset": dhcpRStatisticsReset,
       "dhcpRIntf": dhcpRIntf,
       "dhcpRIfOption82TrustTable": dhcpRIfOption82TrustTable,
       "dhcpRIfOption82TrustEntry": dhcpRIfOption82TrustEntry,
       "dhcpRIfOption82Trust": dhcpRIfOption82Trust,
       "dhcpRIfSelectTable": dhcpRIfSelectTable,
       "dhcpRIfSelectEntry": dhcpRIfSelectEntry,
       "dhcpRIfSelectserver": dhcpRIfSelectserver,
       "dhcpv6Global": dhcpv6Global,
       "dhcpv6Enable": dhcpv6Enable,
       "dhcpv6Snoop": dhcpv6Snoop,
       "dhcpv6SnoopGlobal": dhcpv6SnoopGlobal,
       "dhcpv6SnoopEnable": dhcpv6SnoopEnable,
       "dhcpv6SnoopAutoSaveInterval": dhcpv6SnoopAutoSaveInterval,
       "dhcpv6SnoopClearAllBinding": dhcpv6SnoopClearAllBinding,
       "dhcpv6SnoopVlanTable": dhcpv6SnoopVlanTable,
       "dhcpv6SnoopVlanEntry": dhcpv6SnoopVlanEntry,
       "dhcpv6SnoopVlanIndex": dhcpv6SnoopVlanIndex,
       "dhcpv6SnoopVlanEnable": dhcpv6SnoopVlanEnable,
       "dhcpv6SnoopBindingTable": dhcpv6SnoopBindingTable,
       "dhcpv6SnoopBindingEntry": dhcpv6SnoopBindingEntry,
       "dhcpv6SnoopClientVlan": dhcpv6SnoopClientVlan,
       "dhcpv6SnoopClientMacAddress": dhcpv6SnoopClientMacAddress,
       "dhcpv6SnoopClientIpAddressType": dhcpv6SnoopClientIpAddressType,
       "dhcpv6SnoopClientIpAddress": dhcpv6SnoopClientIpAddress,
       "dhcpv6SnoopClientIfindex": dhcpv6SnoopClientIfindex,
       "dhcpv6SnoopClientExpiry": dhcpv6SnoopClientExpiry,
       "dhcpv6SnoopClientRowStatus": dhcpv6SnoopClientRowStatus,
       "dhcpv6SnoopTrustTable": dhcpv6SnoopTrustTable,
       "dhcpv6SnoopTrustEntry": dhcpv6SnoopTrustEntry,
       "dhcpv6SnoopTrust": dhcpv6SnoopTrust,
       "dhcpv6SnoopStatisticsGroup": dhcpv6SnoopStatisticsGroup,
       "dhcpv6SnoopDHCPv6PktNum": dhcpv6SnoopDHCPv6PktNum,
       "dhcpv6SnoopFwdPktNum": dhcpv6SnoopFwdPktNum,
       "dhcpv6SnoopInvalidPktNum": dhcpv6SnoopInvalidPktNum,
       "dhcpv6SnoopDroppedPktNum": dhcpv6SnoopDroppedPktNum,
       "dhcpv6SnoopStatisticsReset": dhcpv6SnoopStatisticsReset,
       "dhcpv6Relay": dhcpv6Relay,
       "dhcpv6RGlobal": dhcpv6RGlobal,
       "dhcpv6REnable": dhcpv6REnable,
       "dhcpv6RServer": dhcpv6RServer,
       "dhcpv6RIpToGroupTable": dhcpv6RIpToGroupTable,
       "dhcpv6RIpToGroupEntry": dhcpv6RIpToGroupEntry,
       "dhcpv6RIpToGroupGroupId": dhcpv6RIpToGroupGroupId,
       "dhcpv6RIpToGroupServerIpIf": dhcpv6RIpToGroupServerIpIf,
       "dhcpv6RIpToGroupRowStatus": dhcpv6RIpToGroupRowStatus,
       "dhcpv6RIfSelectTable": dhcpv6RIfSelectTable,
       "dhcpv6RIfSelectEntry": dhcpv6RIfSelectEntry,
       "dhcpv6RIfSelectserver": dhcpv6RIfSelectserver,
       "dhcpv6ROption": dhcpv6ROption,
       "dhcpv6RRemoteid": dhcpv6RRemoteid,
       "dhcpv6RRemoteidFormatDuid": dhcpv6RRemoteidFormatDuid,
       "dhcpv6RRemoteidFormatIfname": dhcpv6RRemoteidFormatIfname,
       "dhcpv6RRemoteidFormatVlan": dhcpv6RRemoteidFormatVlan,
       "dhcpv6RPDrouteEnable": dhcpv6RPDrouteEnable,
       "dhcpv6RPDrouteDistance": dhcpv6RPDrouteDistance,
       "dhcpv6RPDrouteAllClear": dhcpv6RPDrouteAllClear,
       "dhcpv6RPDrouteTable": dhcpv6RPDrouteTable,
       "dhcpv6RPDrouteEntry": dhcpv6RPDrouteEntry,
       "dhcpv6RPDrouteId": dhcpv6RPDrouteId,
       "dhcpv6RPDrouteIf": dhcpv6RPDrouteIf,
       "dhcpv6RPDrouteClientIp": dhcpv6RPDrouteClientIp,
       "dhcpv6RPDroutePrefix": dhcpv6RPDroutePrefix,
       "dhcpv6RPDrouteExpiry": dhcpv6RPDrouteExpiry,
       "dhcpv6RPDrouteRowStatus": dhcpv6RPDrouteRowStatus,
       "dhcpv6RStatisticsGroup": dhcpv6RStatisticsGroup,
       "dhcpv6RRxClientPktNum": dhcpv6RRxClientPktNum,
       "dhcpv6RRxServerPktNum": dhcpv6RRxServerPktNum,
       "dhcpv6RRxClientErrPktNum": dhcpv6RRxClientErrPktNum,
       "dhcpv6RRxServerErrPktNum": dhcpv6RRxServerErrPktNum,
       "dhcpv6RStatisticsReset": dhcpv6RStatisticsReset,
       "lswdevMMib": lswdevMMib,
       "lswdevMMibObject": lswdevMMibObject,
       "devMFanMibObject": devMFanMibObject,
       "devMFanStatusTable": devMFanStatusTable,
       "devMFanStatusEntry": devMFanStatusEntry,
       "devMFanPosition": devMFanPosition,
       "devMFanModuleId": devMFanModuleId,
       "devMFanIndex": devMFanIndex,
       "devMFanStatus": devMFanStatus,
       "devMFanSpeed": devMFanSpeed,
       "devMFanLowSpeed": devMFanLowSpeed,
       "devMFanHighSpeed": devMFanHighSpeed,
       "devMFanSpeedAdjust": devMFanSpeedAdjust,
       "devMFanSetSpeed": devMFanSetSpeed,
       "devMPowerStatusTable": devMPowerStatusTable,
       "devMPowerStatusEntry": devMPowerStatusEntry,
       "devMPowerIndex": devMPowerIndex,
       "devMPowerStatus": devMPowerStatus,
       "devMPowerWorkStatus": devMPowerWorkStatus,
       "devMPowerType": devMPowerType,
       "devMPowerFanStatus": devMPowerFanStatus,
       "devMPowerControlStatus": devMPowerControlStatus,
       "devMPowerAlertStatus": devMPowerAlertStatus,
       "devMSlotEnvironmentTable": devMSlotEnvironmentTable,
       "devMSlotEnvironmentEntry": devMSlotEnvironmentEntry,
       "devMSlotEnvironmentType": devMSlotEnvironmentType,
       "devMSlotEnvironmentSlot": devMSlotEnvironmentSlot,
       "devMSlotEnvironmentIndex": devMSlotEnvironmentIndex,
       "devMSlotEnvironmentValue": devMSlotEnvironmentValue,
       "devMSlotEnvironmentCriticalLimit": devMSlotEnvironmentCriticalLimit,
       "devMSlotEnvironmentUpperLimit": devMSlotEnvironmentUpperLimit,
       "devMSlotEnvironmentLowerLimit": devMSlotEnvironmentLowerLimit,
       "lswSlotTable": lswSlotTable,
       "lswSlotEntry": lswSlotEntry,
       "lswSlotFrameIndex": lswSlotFrameIndex,
       "lswSlotIndex": lswSlotIndex,
       "lswSlotConfigType": lswSlotConfigType,
       "lswSlotCurrentType": lswSlotCurrentType,
       "lswSlotStatus": lswSlotStatus,
       "lswSlotSupStatus": lswSlotSupStatus,
       "lswSlotPortNumber": lswSlotPortNumber,
       "lswSlotHwVer": lswSlotHwVer,
       "lswSlotRom": lswSlotRom,
       "lswSlotSerialNo": lswSlotSerialNo,
       "lswDiagnosticBootupLevel": lswDiagnosticBootupLevel,
       "transinformation": transinformation,
       "transbasicinformationTable": transbasicinformationTable,
       "transbasicinformationEntry": transbasicinformationEntry,
       "transceiveType": transceiveType,
       "transceiveVender": transceiveVender,
       "transceivePartNumber": transceivePartNumber,
       "transceiveSerialNumber": transceiveSerialNumber,
       "transceiveWaveLength": transceiveWaveLength,
       "link9SinglemodeLengthKm": link9SinglemodeLengthKm,
       "link9SinglemodeLengthM": link9SinglemodeLengthM,
       "link50MultimodeLength": link50MultimodeLength,
       "link62MultimodeLength": link62MultimodeLength,
       "linkCopperLength": linkCopperLength,
       "transceiveStatus": transceiveStatus,
       "transceiveMointorStatus": transceiveMointorStatus,
       "transTemperinformationTable": transTemperinformationTable,
       "transTemperinformationEntry": transTemperinformationEntry,
       "temperHighAlarmThreshold": temperHighAlarmThreshold,
       "temperLowAlarmThreshold": temperLowAlarmThreshold,
       "temperHighWarnThreshold": temperHighWarnThreshold,
       "temperLowWarnThreshold": temperLowWarnThreshold,
       "temperCurrent": temperCurrent,
       "transVoltageinformationTable": transVoltageinformationTable,
       "transVoltageinformationEntry": transVoltageinformationEntry,
       "voltageHighAlarmThreshold": voltageHighAlarmThreshold,
       "voltageLowAlarmThreshold": voltageLowAlarmThreshold,
       "voltageHighWarnThreshold": voltageHighWarnThreshold,
       "voltageLowWarnThreshold": voltageLowWarnThreshold,
       "voltageCurrent": voltageCurrent,
       "transBiasinformationTable": transBiasinformationTable,
       "transBiasinformationEntry": transBiasinformationEntry,
       "biasHighAlarmThreshold": biasHighAlarmThreshold,
       "biasLowAlarmThreshold": biasLowAlarmThreshold,
       "biasHighWarnThreshold": biasHighWarnThreshold,
       "biasLowWarnThreshold": biasLowWarnThreshold,
       "biasCurrent": biasCurrent,
       "transTransmitPowerTable": transTransmitPowerTable,
       "transTransmitPowerEntry": transTransmitPowerEntry,
       "transpowerHighAlarmThreshold": transpowerHighAlarmThreshold,
       "transpowerLowAlarmThreshold": transpowerLowAlarmThreshold,
       "transpowerHighWarnThreshold": transpowerHighWarnThreshold,
       "transpowerLowWarnThreshold": transpowerLowWarnThreshold,
       "transpowerCurrent": transpowerCurrent,
       "transReceivePowerTable": transReceivePowerTable,
       "transReceivePowerEntry": transReceivePowerEntry,
       "receivepowerHighAlarmThreshold": receivepowerHighAlarmThreshold,
       "receivepowerLowAlarmThreshold": receivepowerLowAlarmThreshold,
       "receivepowerHighWarnThreshold": receivepowerHighWarnThreshold,
       "receivepowerLowWarnThreshold": receivepowerLowWarnThreshold,
       "receivepowerCurrent": receivepowerCurrent,
       "poeInformation": poeInformation,
       "poeSysConfigTable": poeSysConfigTable,
       "poeSysConfigEntry": poeSysConfigEntry,
       "poeSysConfigMaxPower": poeSysConfigMaxPower,
       "poeSysConfigUtiliThresholdPower": poeSysConfigUtiliThresholdPower,
       "poeSysConfigReservePower": poeSysConfigReservePower,
       "poeSysConfigLegacy": poeSysConfigLegacy,
       "poeSysConfigPM": poeSysConfigPM,
       "poeSysStatusTable": poeSysStatusTable,
       "poeSysStatusEntry": poeSysStatusEntry,
       "poeSysStatusCurPower": poeSysStatusCurPower,
       "poeSysStatusAverPower": poeSysStatusAverPower,
       "poeSysStatusPeakPower": poeSysStatusPeakPower,
       "poeSysStatusMaxPower": poeSysStatusMaxPower,
       "poeSysStatusRemainPower": poeSysStatusRemainPower,
       "poeSysStatusUtiliThresholdPower": poeSysStatusUtiliThresholdPower,
       "poeSysStatusReservePower": poeSysStatusReservePower,
       "poeSysStatusCurVoltage": poeSysStatusCurVoltage,
       "poeSysStatusAverVoltage": poeSysStatusAverVoltage,
       "poeSysStatusPeakVoltage": poeSysStatusPeakVoltage,
       "poeSysStatusLegacy": poeSysStatusLegacy,
       "poeSysStatusPM": poeSysStatusPM,
       "poePortStatusTable": poePortStatusTable,
       "poePortStatusEntry": poePortStatusEntry,
       "poePortAdmin": poePortAdmin,
       "poePortPriority": poePortPriority,
       "poePortOper": poePortOper,
       "poePortClass": poePortClass,
       "poePortCurPower": poePortCurPower,
       "poePortAverPower": poePortAverPower,
       "poePortPeakPower": poePortPeakPower,
       "poePortMaxPower": poePortMaxPower,
       "dyingGaspEvent": dyingGaspEvent,
       "extCardType": extCardType,
       "lswTrapMib": lswTrapMib,
       "lswTRAPMibObject": lswTRAPMibObject,
       "powerabsent": powerabsent,
       "powerfailure": powerfailure,
       "powerNormal": powerNormal,
       "powerfanfailure": powerfanfailure,
       "fanfailure": fanfailure,
       "fanNormal": fanNormal,
       "supervisorRemove": supervisorRemove,
       "supervisorInsert": supervisorInsert,
       "boardTemperatureAlarm": boardTemperatureAlarm,
       "boardTemperatureReturnNormal": boardTemperatureReturnNormal,
       "loadFailure": loadFailure,
       "loadFinished": loadFinished,
       "transceiverInsert": transceiverInsert,
       "transceiverRemove": transceiverRemove,
       "transceiverSfpMonitor": transceiverSfpMonitor,
       "chsmBootupDiagTrap": chsmBootupDiagTrap,
       "chsmPoePortStatTrap": chsmPoePortStatTrap,
       "chsmPoeSysConsumpThresholdTrap": chsmPoeSysConsumpThresholdTrap,
       "chsmPoePseVoltageTrap": chsmPoePseVoltageTrap,
       "fanAbsent": fanAbsent,
       "fanPresent": fanPresent,
       "powerAlert": powerAlert,
       "powerNoAlert": powerNoAlert,
       "dyingGasp": dyingGasp,
       "ipSourceGuard": ipSourceGuard,
       "ipSourceGuardPerportMaximalnumber": ipSourceGuardPerportMaximalnumber,
       "ipSourceGuardBindingTable": ipSourceGuardBindingTable,
       "ipSourceGuardBindingEntry": ipSourceGuardBindingEntry,
       "ipSourceGuardIpAddress": ipSourceGuardIpAddress,
       "ipSourceGuardMacAddress": ipSourceGuardMacAddress,
       "ipSourceGuardVlan": ipSourceGuardVlan,
       "iSGIfIndex": iSGIfIndex,
       "ipSourceGuardRowStatus": ipSourceGuardRowStatus,
       "ipSourceGuardEnableTable": ipSourceGuardEnableTable,
       "ipSourceGuardEnableEntry": ipSourceGuardEnableEntry,
       "iSGEnableIfIndex": iSGEnableIfIndex,
       "ipSourceGuardEnableType": ipSourceGuardEnableType,
       "vrrpExt": vrrpExt,
       "vrrpVrfTable": vrrpVrfTable,
       "vrrpVrfEntry": vrrpVrfEntry,
       "vrrpvrfVrId": vrrpvrfVrId,
       "vrrpvrfName": vrrpvrfName,
       "vrrpvrfRowStatus": vrrpvrfRowStatus,
       "vrrpLearnMasterTable": vrrpLearnMasterTable,
       "vrrpLearnMasterEntry": vrrpLearnMasterEntry,
       "vrrpLearnVrId": vrrpLearnVrId,
       "vrrpLearnMode": vrrpLearnMode,
       "interface": interface,
       "interfaceTable": interfaceTable,
       "interfaceEntry": interfaceEntry,
       "interfaceIndex": interfaceIndex,
       "interfaceName": interfaceName,
       "interfaceType": interfaceType,
       "interfaceIPv4Addr": interfaceIPv4Addr,
       "interfaceDesc": interfaceDesc,
       "interfaceMediaType": interfaceMediaType,
       "interfaceSpeed": interfaceSpeed,
       "interfaceDuplex": interfaceDuplex,
       "interfaceResetCnt": interfaceResetCnt,
       "interfaceArpRetryInterval": interfaceArpRetryInterval,
       "interfaceArpTimeout": interfaceArpTimeout,
       "interfaceArpClear": interfaceArpClear,
       "interfacejumboFrameEnable": interfacejumboFrameEnable,
       "interfaceClearIPv4Addr": interfaceClearIPv4Addr,
       "interfaceBandwidth": interfaceBandwidth,
       "interfacePortIsolateGroupID": interfacePortIsolateGroupID,
       "interfaceArpProxy": interfaceArpProxy,
       "interfaceLocalArpProxy": interfaceLocalArpProxy,
       "interfacePoeAdmin": interfacePoeAdmin,
       "interfacePoeBudget": interfacePoeBudget,
       "interfacePoePriority": interfacePoePriority,
       "interfaceLoadInterval": interfaceLoadInterval,
       "interfaceMtu": interfaceMtu,
       "interfaceIpUrpf": interfaceIpUrpf,
       "interfaceIpv6Urpf": interfaceIpv6Urpf,
       "interfaceIpv6DadAttempt": interfaceIpv6DadAttempt,
       "interfaceNDClear": interfaceNDClear,
       "interfaceSecondaryIpAddrTable": interfaceSecondaryIpAddrTable,
       "interfaceSecondaryIpAddrEntry": interfaceSecondaryIpAddrEntry,
       "ifSecondaryIpAddr": ifSecondaryIpAddr,
       "ifSecondaryIpAddrMask": ifSecondaryIpAddrMask,
       "interfaceSecondaryIpAddrStatus": interfaceSecondaryIpAddrStatus,
       "loopbackInterfaceTable": loopbackInterfaceTable,
       "loopbackInterfaceEntry": loopbackInterfaceEntry,
       "loopbackInterfaceNum": loopbackInterfaceNum,
       "loopbackInterfaceIndex": loopbackInterfaceIndex,
       "loopbackInterfaceStatus": loopbackInterfaceStatus,
       "interfaceIpv6AddrTable": interfaceIpv6AddrTable,
       "interfaceIpv6AddrEntry": interfaceIpv6AddrEntry,
       "ifIpv6Addr": ifIpv6Addr,
       "ifIpv6AddrLength": ifIpv6AddrLength,
       "ifIpv6AddrEui64": ifIpv6AddrEui64,
       "ifIpv6AddrLinkLocal": ifIpv6AddrLinkLocal,
       "ifIpv6AddrStatus": ifIpv6AddrStatus,
       "interfaceTrapObject": interfaceTrapObject,
       "ifpReceiveManyErrorPacket": ifpReceiveManyErrorPacket,
       "management": management,
       "managementIp": managementIp,
       "managementIpTable": managementIpTable,
       "managementIpEntry": managementIpEntry,
       "managementIpSlot": managementIpSlot,
       "managementIPv4Addr": managementIPv4Addr,
       "managementRowStatus": managementRowStatus,
       "managementGateway": managementGateway,
       "managementIpGatewayTable": managementIpGatewayTable,
       "managementIpGatewayEntry": managementIpGatewayEntry,
       "managementIpGatewaySlot": managementIpGatewaySlot,
       "managementIpGateway": managementIpGateway,
       "managementIpGatewayStatus": managementIpGatewayStatus,
       "mvr": mvr,
       "mvrGlobalStatus": mvrGlobalStatus,
       "mvrGlobalGroupTable": mvrGlobalGroupTable,
       "mvrGlobalGroupEntry": mvrGlobalGroupEntry,
       "mvrGlobalGroup": mvrGlobalGroup,
       "mvrGlobalGroupRowStatus": mvrGlobalGroupRowStatus,
       "mvrSourceVlan": mvrSourceVlan,
       "mvrSourceIP": mvrSourceIP,
       "mvrSourcePortTable": mvrSourcePortTable,
       "mvrSourcePortEntry": mvrSourcePortEntry,
       "mvrSourcePortIfindex": mvrSourcePortIfindex,
       "mvrSourcePortRowStatus": mvrSourcePortRowStatus,
       "mvrRcvPortTable": mvrRcvPortTable,
       "mvrRcvPortEntry": mvrRcvPortEntry,
       "mvrRcvPortIfindex": mvrRcvPortIfindex,
       "mvrRcvVlanId": mvrRcvVlanId,
       "mvrRcvPortRowStatus": mvrRcvPortRowStatus,
       "mvrIPMcastRouting": mvrIPMcastRouting,
       "erps": erps,
       "erpsDomainTable": erpsDomainTable,
       "erpsDomainEntry": erpsDomainEntry,
       "domainIndex": domainIndex,
       "domainName": domainName,
       "domainHellotime": domainHellotime,
       "domainFailtime": domainFailtime,
       "domainPrimaryControlVlan": domainPrimaryControlVlan,
       "domainSubControlVlan": domainSubControlVlan,
       "domainEnable": domainEnable,
       "domainInstance": domainInstance,
       "domainRowStatus": domainRowStatus,
       "erpsRingTable": erpsRingTable,
       "erpsRingEntry": erpsRingEntry,
       "ringIndex": ringIndex,
       "ringLevel": ringLevel,
       "ringmode": ringmode,
       "ringEdgemode": ringEdgemode,
       "ringPrimaryIf": ringPrimaryIf,
       "ringSecondaryIf": ringSecondaryIf,
       "ringEdgeIf": ringEdgeIf,
       "ringCommonIf": ringCommonIf,
       "ringSrpt": ringSrpt,
       "ringEnable": ringEnable,
       "ringRowStatus": ringRowStatus,
       "ringStatus": ringStatus,
       "erpsRingStatsTable": erpsRingStatsTable,
       "erpsRingStatsEntry": erpsRingStatsEntry,
       "ringStatsIndex": ringStatsIndex,
       "ringStatsTotalSendPackets": ringStatsTotalSendPackets,
       "ringStatsHelloSendPackets": ringStatsHelloSendPackets,
       "ringStatsRingUpFlushFdbSendPackets": ringStatsRingUpFlushFdbSendPackets,
       "ringStatsRingDownFlushFdbSendPackets": ringStatsRingDownFlushFdbSendPackets,
       "ringStatsLinkDownSendPackets": ringStatsLinkDownSendPackets,
       "ringStatsEdgeHelloSendPackets": ringStatsEdgeHelloSendPackets,
       "ringStatsMajorFaultSendPackets": ringStatsMajorFaultSendPackets,
       "ringStatsTotalRecPackets": ringStatsTotalRecPackets,
       "ringStatsHelloRecPackets": ringStatsHelloRecPackets,
       "ringStatsRingUpFlushFdbRecPackets": ringStatsRingUpFlushFdbRecPackets,
       "ringStatsRingDownFlushFdbRecPackets": ringStatsRingDownFlushFdbRecPackets,
       "ringStatsLinkDownRecPackets": ringStatsLinkDownRecPackets,
       "ringStatsEdgeHelloRecPackets": ringStatsEdgeHelloRecPackets,
       "ringStatsMajorFaultRecPackets": ringStatsMajorFaultRecPackets,
       "ringStatsClearPackets": ringStatsClearPackets,
       "erpsTrapObject": erpsTrapObject,
       "erpsLinkSwitch": erpsLinkSwitch,
       "prefixList": prefixList,
       "prefixListTable": prefixListTable,
       "prefixListEntry": prefixListEntry,
       "prefixListIpAddressType": prefixListIpAddressType,
       "prefixListIndex": prefixListIndex,
       "prefixListName": prefixListName,
       "prefixListDescription": prefixListDescription,
       "prefixListRowStatus": prefixListRowStatus,
       "prefixListRuleTable": prefixListRuleTable,
       "prefixListRuleEntry": prefixListRuleEntry,
       "prefixListRuleIpAddressType": prefixListRuleIpAddressType,
       "prefixListRuleIndex": prefixListRuleIndex,
       "prefixListRuleSeq": prefixListRuleSeq,
       "prefixListRuleIpAddress": prefixListRuleIpAddress,
       "prefixListRuleMaskLen": prefixListRuleMaskLen,
       "prefixListRuleType": prefixListRuleType,
       "prefixListRuleGe": prefixListRuleGe,
       "prefixListRuleLe": prefixListRuleLe,
       "prefixListRuleRowStatus": prefixListRuleRowStatus,
       "prefixListClearTable": prefixListClearTable,
       "prefixListClearEntry": prefixListClearEntry,
       "prefixListClearIpAddressType": prefixListClearIpAddressType,
       "prefixListClearIndex": prefixListClearIndex,
       "prefixListClear": prefixListClear,
       "prefixListDetailTable": prefixListDetailTable,
       "prefixListDetailEntry": prefixListDetailEntry,
       "prefixListDetailIpAddressType": prefixListDetailIpAddressType,
       "prefixListDetailIndex": prefixListDetailIndex,
       "prefixListDetailSeq": prefixListDetailSeq,
       "prefixListDetailLastOperEntry": prefixListDetailLastOperEntry,
       "prefixLisDetailCount": prefixLisDetailCount,
       "prefixListDetailRangeEntries": prefixListDetailRangeEntries,
       "prefixListDetailSequences": prefixListDetailSequences,
       "prefixListDetailHitCount": prefixListDetailHitCount,
       "prefixListDetailRefcount": prefixListDetailRefcount,
       "ipUnicast": ipUnicast,
       "ipUnicastStaticRouteTable": ipUnicastStaticRouteTable,
       "ipUnicastStaticRouteEntry": ipUnicastStaticRouteEntry,
       "ipUnicastStaticRouteVrfId": ipUnicastStaticRouteVrfId,
       "ipUnicastStaticRouteDestIpAddressType": ipUnicastStaticRouteDestIpAddressType,
       "ipUnicastStaticRouteDestIpAddress": ipUnicastStaticRouteDestIpAddress,
       "ipUnicastStaticRouteDestMask": ipUnicastStaticRouteDestMask,
       "ipUnicastStaticRouteGWIpAddressType": ipUnicastStaticRouteGWIpAddressType,
       "ipUnicastStaticRouteGWIpAddress": ipUnicastStaticRouteGWIpAddress,
       "ipUnicastStaticRouteDistance": ipUnicastStaticRouteDistance,
       "ipUnicastStaticRouteRowStatus": ipUnicastStaticRouteRowStatus,
       "ipUnicastClrStaticRoute": ipUnicastClrStaticRoute,
       "ipUnicastClrVrfStaticRouteTable": ipUnicastClrVrfStaticRouteTable,
       "ipUnicastClrVrfStaticRouteEntry": ipUnicastClrVrfStaticRouteEntry,
       "ipUnicastClrVrfStaticRouteIndex": ipUnicastClrVrfStaticRouteIndex,
       "ipUnicastClrVrfStaticRoute": ipUnicastClrVrfStaticRoute,
       "ipUnicastMaxStaticRoute": ipUnicastMaxStaticRoute,
       "ipUnicastMaxStaticV6Route": ipUnicastMaxStaticV6Route,
       "ipUnicastIcmpErrorInterval": ipUnicastIcmpErrorInterval,
       "ipUnicastIcmpv6ErrorInterval": ipUnicastIcmpv6ErrorInterval,
       "vrf": vrf,
       "aaa": aaa,
       "authenticationEnable": authenticationEnable,
       "authenticationLoginTable": authenticationLoginTable,
       "authenticationLoginEntry": authenticationLoginEntry,
       "authenticationLoginIndex": authenticationLoginIndex,
       "authenticationLoginName": authenticationLoginName,
       "authenticationLoginOne": authenticationLoginOne,
       "authenticationLoginTwo": authenticationLoginTwo,
       "authenticationLoginThree": authenticationLoginThree,
       "authenticationLoginFour": authenticationLoginFour,
       "authenticationLoginFive": authenticationLoginFive,
       "authenticationLoginSix": authenticationLoginSix,
       "authenticationLoginRowStatus": authenticationLoginRowStatus,
       "authenticationLineTable": authenticationLineTable,
       "authenticationLineEntry": authenticationLineEntry,
       "authenticationLineIndex": authenticationLineIndex,
       "authenticationLineLoginName": authenticationLineLoginName,
       "evc": evc,
       "evcTable": evcTable,
       "evcEntry": evcEntry,
       "evcIndex": evcIndex,
       "evcName": evcName,
       "evcRowstatus": evcRowstatus,
       "evcInfoTable": evcInfoTable,
       "evcInfoEntry": evcInfoEntry,
       "evcInfoIndex": evcInfoIndex,
       "evcInfoMappedVlan": evcInfoMappedVlan,
       "evcInfoMappedDoubleVlan": evcInfoMappedDoubleVlan,
       "evcInfoUsingNumber": evcInfoUsingNumber,
       "qinq": qinq,
       "qinqVlanMappingTableObject": qinqVlanMappingTableObject,
       "qinqVlanMappingTable": qinqVlanMappingTable,
       "qinqVlanMappingEntry": qinqVlanMappingEntry,
       "qinqVlanMappingTableIndex": qinqVlanMappingTableIndex,
       "qinqVlanMappingTableName": qinqVlanMappingTableName,
       "qinqVlanMappingTableRowstatus": qinqVlanMappingTableRowstatus,
       "qinqVlanMappingItemTable": qinqVlanMappingItemTable,
       "qinqVlanMappingItemEntry": qinqVlanMappingItemEntry,
       "qinqMappingEntryMappingTableIndex": qinqMappingEntryMappingTableIndex,
       "qinqMappingEntryEvcIndex": qinqMappingEntryEvcIndex,
       "qinqMappingEntryRawVid": qinqMappingEntryRawVid,
       "qinqMappingEntryRowstatus": qinqMappingEntryRowstatus,
       "qinqIfObject": qinqIfObject,
       "qinqIfModeDot1qTunnelTable": qinqIfModeDot1qTunnelTable,
       "qinqIfModeDot1qTunnelEntry": qinqIfModeDot1qTunnelEntry,
       "qinqIfModeDot1qTunnelIfIndex": qinqIfModeDot1qTunnelIfIndex,
       "qinqIfModeDot1qTunnelRowstatus": qinqIfModeDot1qTunnelRowstatus,
       "qinqIfDot1qTunnelTypeTable": qinqIfDot1qTunnelTypeTable,
       "qinqIfDot1qTunnelTypeEntry": qinqIfDot1qTunnelTypeEntry,
       "qinqIfDot1qTunnelTypeIfIndex": qinqIfDot1qTunnelTypeIfIndex,
       "qinqIfDot1qTunnelType": qinqIfDot1qTunnelType,
       "qinqIfDot1qTunnelNativeVlanTable": qinqIfDot1qTunnelNativeVlanTable,
       "qinqIfDot1qTunnelNativeVlanEntry": qinqIfDot1qTunnelNativeVlanEntry,
       "qinqIfDot1qTunnelNativeVlanIfIndex": qinqIfDot1qTunnelNativeVlanIfIndex,
       "qinqIfDot1qTunnelNativeVlanId": qinqIfDot1qTunnelNativeVlanId,
       "qinqIfDot1qTunnelNativeIsInnerVlan": qinqIfDot1qTunnelNativeIsInnerVlan,
       "qinqIfDot1qTunnelNativeRowStatus": qinqIfDot1qTunnelNativeRowStatus,
       "qinqIfDot1qTunnelAllowVlanTable": qinqIfDot1qTunnelAllowVlanTable,
       "qinqIfDot1qTunnelAllowVlanEntry": qinqIfDot1qTunnelAllowVlanEntry,
       "qinqIfDot1qTunnelAllowVlanIfIndex": qinqIfDot1qTunnelAllowVlanIfIndex,
       "qinqIfDot1qTunnelAllowVlanIdList": qinqIfDot1qTunnelAllowVlanIdList,
       "qinqIfDot1qTunnelAllowType": qinqIfDot1qTunnelAllowType,
       "qinqIfDot1qTunnelAllowVlanId": qinqIfDot1qTunnelAllowVlanId,
       "qinqIfDot1qTunnelAllowRowstatus": qinqIfDot1qTunnelAllowRowstatus,
       "qinqIfDot1qTunnelApplyVlanMappingTable": qinqIfDot1qTunnelApplyVlanMappingTable,
       "qinqIfDot1qTunnelApplyVlanMappingEntry": qinqIfDot1qTunnelApplyVlanMappingEntry,
       "qinqIfDot1qTunnelApplyIfIndex": qinqIfDot1qTunnelApplyIfIndex,
       "qinqIfDot1qTunnelApplyVlanMappingTableName": qinqIfDot1qTunnelApplyVlanMappingTableName,
       "qinqIfDot1qTunnelApplyRowstatus": qinqIfDot1qTunnelApplyRowstatus,
       "qinqIfVlanTranslationEnableTable": qinqIfVlanTranslationEnableTable,
       "qinqIfVlanTranslationEnableEntry": qinqIfVlanTranslationEnableEntry,
       "qinqIfVlanTransIfIndex": qinqIfVlanTransIfIndex,
       "qinqIfVlanTransEnable": qinqIfVlanTransEnable,
       "qinqIfVlanTransApplyVlanMappingTable": qinqIfVlanTransApplyVlanMappingTable,
       "qinqIfVlanTransApplyVlanMappingEntry": qinqIfVlanTransApplyVlanMappingEntry,
       "qinqIfVlanTransApplyIfIndex": qinqIfVlanTransApplyIfIndex,
       "qinqIfVlanTransApplyVlanMappingTableName": qinqIfVlanTransApplyVlanMappingTableName,
       "qinqIfVlanTransApplyRowstatus": qinqIfVlanTransApplyRowstatus,
       "qinqIfDot1qEthertypeTable": qinqIfDot1qEthertypeTable,
       "qinqIfDot1qEthertypeEntry": qinqIfDot1qEthertypeEntry,
       "qinqIfDot1qEthertypeIfIndex": qinqIfDot1qEthertypeIfIndex,
       "qinqIfDot1qEthertype": qinqIfDot1qEthertype,
       "qinqVlanDot1qObject": qinqVlanDot1qObject,
       "qinqVlanDot1qTagNativeEnableTable": qinqVlanDot1qTagNativeEnableTable,
       "qinqVlanDot1qTagNativeEnableEntry": qinqVlanDot1qTagNativeEnableEntry,
       "qinqVlanDot1qTagNativeEnable": qinqVlanDot1qTagNativeEnable,
       "rmonExt": rmonExt,
       "rmonExtTable": rmonExtTable,
       "rmonExtEntry": rmonExtEntry,
       "rmonExtIfIndex": rmonExtIfIndex,
       "rmonExtClrCounter": rmonExtClrCounter,
       "routeMap": routeMap,
       "ripExt": ripExt,
       "ldpExt": ldpExt,
       "ldpExtRouterLdp": ldpExtRouterLdp,
       "ldpExtGlobalConfig": ldpExtGlobalConfig,
       "ldpExtGlobalConfigCtlMode": ldpExtGlobalConfigCtlMode,
       "ldpExtGlobalConfigExplicitNull": ldpExtGlobalConfigExplicitNull,
       "ldpExtGlobalConfigHelloInterval": ldpExtGlobalConfigHelloInterval,
       "ldpExtGlobalConfigHoldTime": ldpExtGlobalConfigHoldTime,
       "ldpExtGlobalConfigKeepAliveInterval": ldpExtGlobalConfigKeepAliveInterval,
       "ldpExtGlobalConfigKeepAliveTimeout": ldpExtGlobalConfigKeepAliveTimeout,
       "ldpExtGlobalConfigMulticastHellos": ldpExtGlobalConfigMulticastHellos,
       "ldpExtGlobalConfigRouterId": ldpExtGlobalConfigRouterId,
       "ldpExtGlobalConfigTargetedPeerHelloInterval": ldpExtGlobalConfigTargetedPeerHelloInterval,
       "ldpExtGlobalConfigTargetedPeerHelloReceipt": ldpExtGlobalConfigTargetedPeerHelloReceipt,
       "ldpExtGlobalConfigTargetedPeerHoldTime": ldpExtGlobalConfigTargetedPeerHoldTime,
       "ldpExtGlobalConfigClrLdpAdjacencyAll": ldpExtGlobalConfigClrLdpAdjacencyAll,
       "ldpExtGlobalConfigClrLdpSessionAll": ldpExtGlobalConfigClrLdpSessionAll,
       "ldpExtGlobalConfigClrLdpStatic": ldpExtGlobalConfigClrLdpStatic,
       "ldpExtGlobalConfigClrLdpStaticAdvLbls": ldpExtGlobalConfigClrLdpStaticAdvLbls,
       "ldpExtIfConfigTable": ldpExtIfConfigTable,
       "ldpExtIfConfigEntry": ldpExtIfConfigEntry,
       "ldpExtIfConfigIfIndex": ldpExtIfConfigIfIndex,
       "ldpExtIfConfigHelloInterval": ldpExtIfConfigHelloInterval,
       "ldpExtIfConfigHoldTime": ldpExtIfConfigHoldTime,
       "ldpExtIfConfigKeepAliveInterval": ldpExtIfConfigKeepAliveInterval,
       "ldpExtIfConfigKeepAliveTimeout": ldpExtIfConfigKeepAliveTimeout,
       "ldpExtIfConfigMulticastHellos": ldpExtIfConfigMulticastHellos,
       "ldpExtIfConfigTargetedPeerHelloInterval": ldpExtIfConfigTargetedPeerHelloInterval,
       "ldpExtIfConfigTargetedPeerHoldTime": ldpExtIfConfigTargetedPeerHoldTime,
       "ldpExtIfConfigEnableLdp": ldpExtIfConfigEnableLdp,
       "ldpExtConfigTargetPeerTable": ldpExtConfigTargetPeerTable,
       "ldpExtConfigTargetPeerEntry": ldpExtConfigTargetPeerEntry,
       "ldpExtConfigTargetPeerAddr": ldpExtConfigTargetPeerAddr,
       "ldpExtConfigTargetPeerStatus": ldpExtConfigTargetPeerStatus,
       "ldpExtConfigTransAddrTable": ldpExtConfigTransAddrTable,
       "ldpExtConfigTransAddrEntry": ldpExtConfigTransAddrEntry,
       "ldpExtGlobalConfigTransportAddress": ldpExtGlobalConfigTransportAddress,
       "ldpExtGlobalConfigTransportAddressStatus": ldpExtGlobalConfigTransportAddressStatus,
       "ldpExtConfigAdvLblsTable": ldpExtConfigAdvLblsTable,
       "ldpExtConfigAdvLblsEntry": ldpExtConfigAdvLblsEntry,
       "ldpExtAdvLblsPrefixIndex": ldpExtAdvLblsPrefixIndex,
       "ldpExtAdvLblsPeerIndex": ldpExtAdvLblsPeerIndex,
       "ldpExtAdvLblsPrefixName": ldpExtAdvLblsPrefixName,
       "ldpExtAdvLblsPeerName": ldpExtAdvLblsPeerName,
       "ldpExtAdvLblsStatus": ldpExtAdvLblsStatus,
       "ldpExtConfigAdvLblsToAnyTable": ldpExtConfigAdvLblsToAnyTable,
       "ldpExtConfigAdvLblsToAnyEntry": ldpExtConfigAdvLblsToAnyEntry,
       "ldpExtAdvLblsToAnyPrefixIndex": ldpExtAdvLblsToAnyPrefixIndex,
       "ldpExtAdvLblsToAnyPrefixName": ldpExtAdvLblsToAnyPrefixName,
       "ldpExtAdvLblsToAnyStatus": ldpExtAdvLblsToAnyStatus,
       "bgp": bgp,
       "bgpLocalAs": bgpLocalAs,
       "bgpMibBinding": bgpMibBinding,
       "bgpMibBindingVrf": bgpMibBindingVrf,
       "bgpMibBindingVpnv4": bgpMibBindingVpnv4,
       "bgpGlobalConfig": bgpGlobalConfig,
       "bgpAlwaysCompareMed": bgpAlwaysCompareMed,
       "bgpDeterministicMed": bgpDeterministicMed,
       "bgpFastExternalFailover": bgpFastExternalFailover,
       "bgpEnforceFirstAS": bgpEnforceFirstAS,
       "bgpBestpathCompareRouterid": bgpBestpathCompareRouterid,
       "bgpBestpathCompareConfedASpath": bgpBestpathCompareConfedASpath,
       "bgpBestpathASPathIgnore": bgpBestpathASPathIgnore,
       "bgpBestpathMed": bgpBestpathMed,
       "bgpDefaultIpv4Unicast": bgpDefaultIpv4Unicast,
       "bgpDefaultLocalPreference": bgpDefaultLocalPreference,
       "bgpLogNeighborChanges": bgpLogNeighborChanges,
       "bgpConfederationIdentifier": bgpConfederationIdentifier,
       "bgpDistanceExternalRoutes": bgpDistanceExternalRoutes,
       "bgpDistanceInternalRoutes": bgpDistanceInternalRoutes,
       "bgpDistancelocalRoutes": bgpDistancelocalRoutes,
       "bgpClientToClientReflection": bgpClientToClientReflection,
       "bgpScanTime": bgpScanTime,
       "bgpClusterIDDigit": bgpClusterIDDigit,
       "bgpClusterIDIp": bgpClusterIDIp,
       "bgpPeerExtTable": bgpPeerExtTable,
       "bgpPeerExtEntry": bgpPeerExtEntry,
       "bgpPeerExtPeer": bgpPeerExtPeer,
       "bgpPeerExtRemoteAS": bgpPeerExtRemoteAS,
       "bgpPeerExtRowStats": bgpPeerExtRowStats,
       "bgpPeerExtActivate": bgpPeerExtActivate,
       "bgpPeerExtPassive": bgpPeerExtPassive,
       "bgpPeerExtDescription": bgpPeerExtDescription,
       "bgpPeerExtCapabilityRouteRefresh": bgpPeerExtCapabilityRouteRefresh,
       "bgpPeerExtCapabilityDynamic": bgpPeerExtCapabilityDynamic,
       "bgpPeerExtDontCapabilityNegotiate": bgpPeerExtDontCapabilityNegotiate,
       "bgpPeerExtCapabilityOrf": bgpPeerExtCapabilityOrf,
       "bgpPeerExtNextHopSelf": bgpPeerExtNextHopSelf,
       "bgpPeerExtRemovePrivateAS": bgpPeerExtRemovePrivateAS,
       "bgpPeerExtSendCommunity": bgpPeerExtSendCommunity,
       "bgpPeerExtSoftReconfig": bgpPeerExtSoftReconfig,
       "bgpPeerExtRouteReflectorClient": bgpPeerExtRouteReflectorClient,
       "bgpPeerExtRouteServerClient": bgpPeerExtRouteServerClient,
       "bgpPeerExtAttrUnchangedASPath": bgpPeerExtAttrUnchangedASPath,
       "bgpPeerExtAttrUnchangedNexthop": bgpPeerExtAttrUnchangedNexthop,
       "bgpPeerExtAttrUnchangedMed": bgpPeerExtAttrUnchangedMed,
       "bgpPeerExtUpdateSource": bgpPeerExtUpdateSource,
       "bgpPeerExtDefaultOriginate": bgpPeerExtDefaultOriginate,
       "bgpPeerExtPort": bgpPeerExtPort,
       "bgpPeerExtWeight": bgpPeerExtWeight,
       "bgpPeerExtCollideEstablished": bgpPeerExtCollideEstablished,
       "bgpPeerExtOverrideCapability": bgpPeerExtOverrideCapability,
       "bgpPeerExtStrictCapabilityMatch": bgpPeerExtStrictCapabilityMatch,
       "bgpPeerExtAllowasIn": bgpPeerExtAllowasIn,
       "bgpPeerExtAsOverride": bgpPeerExtAsOverride,
       "bgpPeerExtMemberOfPeerGroupIndex": bgpPeerExtMemberOfPeerGroupIndex,
       "bgpPeerGroupTable": bgpPeerGroupTable,
       "bgpPeerGroupEntry": bgpPeerGroupEntry,
       "bgpPeerGroupIndex": bgpPeerGroupIndex,
       "bgpPeerGroupName": bgpPeerGroupName,
       "bgpPeerGroupRowStats": bgpPeerGroupRowStats,
       "bgpPeerGroupRemoteAS": bgpPeerGroupRemoteAS,
       "bgpPeerGroupActivate": bgpPeerGroupActivate,
       "bgpPeerGroupPassive": bgpPeerGroupPassive,
       "bgpPeerGroupDescription": bgpPeerGroupDescription,
       "bgpPeerGroupCapabilityRouteRefresh": bgpPeerGroupCapabilityRouteRefresh,
       "bgpPeerGroupCapabilityDynamic": bgpPeerGroupCapabilityDynamic,
       "bgpPeerGroupDontCapabilityNegotiate": bgpPeerGroupDontCapabilityNegotiate,
       "bgpPeerGroupCapabilityOrf": bgpPeerGroupCapabilityOrf,
       "bgpPeerGroupNextHopSelf": bgpPeerGroupNextHopSelf,
       "bgpPeerGroupRemovePrivateAS": bgpPeerGroupRemovePrivateAS,
       "bgpPeerGroupSendCommunity": bgpPeerGroupSendCommunity,
       "bgpPeerGroupSoftReconfig": bgpPeerGroupSoftReconfig,
       "bgpPeerGroupRouteReflectorClient": bgpPeerGroupRouteReflectorClient,
       "bgpPeerGroupRouteServerClient": bgpPeerGroupRouteServerClient,
       "bgpPeerGroupAttrUnchangedASPath": bgpPeerGroupAttrUnchangedASPath,
       "bgpPeerGroupAttrUnchangedNexthop": bgpPeerGroupAttrUnchangedNexthop,
       "bgpPeerGroupAttrUnchangedMed": bgpPeerGroupAttrUnchangedMed,
       "bgpPeerGroupUpdateSource": bgpPeerGroupUpdateSource,
       "bgpPeerGroupDefaultOriginate": bgpPeerGroupDefaultOriginate,
       "bgpPeerGroupPort": bgpPeerGroupPort,
       "bgpPeerGroupWeight": bgpPeerGroupWeight,
       "bgpPeerGroupCollideEstablished": bgpPeerGroupCollideEstablished,
       "bgpPeerGroupOverrideCapability": bgpPeerGroupOverrideCapability,
       "bgpPeerGroupStrictCapabilityMatch": bgpPeerGroupStrictCapabilityMatch,
       "bgpPeerGroupAllowasIn": bgpPeerGroupAllowasIn,
       "bgpPeerGroupAsOverride": bgpPeerGroupAsOverride,
       "bgpAddressFamily": bgpAddressFamily,
       "bgpAddressFamilyName": bgpAddressFamilyName,
       "bgpAddressFamilyRouterId": bgpAddressFamilyRouterId,
       "bgpAddressFamilyRedistConnect": bgpAddressFamilyRedistConnect,
       "bgpAddressFamilyRedistStatic": bgpAddressFamilyRedistStatic,
       "bgpAddressFamilyRedistRip": bgpAddressFamilyRedistRip,
       "bgpAddressFamilyRedistOspf": bgpAddressFamilyRedistOspf,
       "bgpAddressFamilySynchronization": bgpAddressFamilySynchronization,
       "bgpAddressFamilyDefaultInfoOrig": bgpAddressFamilyDefaultInfoOrig,
       "bgpAddressFamilyNetworkSynch": bgpAddressFamilyNetworkSynch,
       "bgpClearTable": bgpClearTable,
       "bgpClearAll": bgpClearAll,
       "bgpClearExternalPeers": bgpClearExternalPeers,
       "bgpClearUnicastSoftOut": bgpClearUnicastSoftOut,
       "bgpClearMulticastSoftOut": bgpClearMulticastSoftOut,
       "bgpClearVpnv4UnicastSoftOut": bgpClearVpnv4UnicastSoftOut,
       "bgpClearExternalSoftOut": bgpClearExternalSoftOut,
       "bgpClearExternalUnicastSoftOut": bgpClearExternalUnicastSoftOut,
       "bgpClearExternalMulticastSoftOut": bgpClearExternalMulticastSoftOut,
       "bgpClearSoftIn": bgpClearSoftIn,
       "bgpClearInPrefixFilter": bgpClearInPrefixFilter,
       "bgpClearUnicastSoftIn": bgpClearUnicastSoftIn,
       "bgpClearMulticastSoftIn": bgpClearMulticastSoftIn,
       "bgpClearUnicastInPrefixFilter": bgpClearUnicastInPrefixFilter,
       "bgpClearMulticastInPrefixFilter": bgpClearMulticastInPrefixFilter,
       "bgpClearVpnv4UnicastSoftIn": bgpClearVpnv4UnicastSoftIn,
       "bgpClearExternalSoftIn": bgpClearExternalSoftIn,
       "bgpClearExternalInPrefixFilter": bgpClearExternalInPrefixFilter,
       "bgpClearExternalUnicastSoftIn": bgpClearExternalUnicastSoftIn,
       "bgpClearExternalMulticastSoftIn": bgpClearExternalMulticastSoftIn,
       "bgpClearExternalUnicastInPrefixFilter": bgpClearExternalUnicastInPrefixFilter,
       "bgpClearExternalMulticastInPrefixFilter": bgpClearExternalMulticastInPrefixFilter,
       "bgpClearUnicastSoft": bgpClearUnicastSoft,
       "bgpClearMulticastSoft": bgpClearMulticastSoft,
       "bgpClearVpnv4UnicastSoft": bgpClearVpnv4UnicastSoft,
       "bgpClearExternalUnicastSoft": bgpClearExternalUnicastSoft,
       "bgpClearExternalMulticastSoft": bgpClearExternalMulticastSoft,
       "bgpClearDampening": bgpClearDampening,
       "mpls": mpls,
       "mplsLspTunnelingTable": mplsLspTunnelingTable,
       "mplsLspTunnelingEntry": mplsLspTunnelingEntry,
       "mplsLspTunnelingInLabel": mplsLspTunnelingInLabel,
       "mplsLspTunnelingOutLabel": mplsLspTunnelingOutLabel,
       "mplsLspTunnelingDestAddr": mplsLspTunnelingDestAddr,
       "mplsLspTunnelingMaskLen": mplsLspTunnelingMaskLen,
       "mplsLspTunnelingRowStatus": mplsLspTunnelingRowStatus,
       "mplsLspTunnelingState": mplsLspTunnelingState,
       "mplsMapRouteTable": mplsMapRouteTable,
       "mplsMapRouteEntry": mplsMapRouteEntry,
       "mplsMapRouteSrcAddr": mplsMapRouteSrcAddr,
       "mplsMapRouteSrcMaskLen": mplsMapRouteSrcMaskLen,
       "mplsMapRouteDestAddr": mplsMapRouteDestAddr,
       "mplsMapRouteDestMaskLen": mplsMapRouteDestMaskLen,
       "mplsMapRouteTunnelName": mplsMapRouteTunnelName,
       "mplsMapRouteRowStatus": mplsMapRouteRowStatus,
       "mplsEnableAllInterfaces": mplsEnableAllInterfaces,
       "mplsVpwsTable": mplsVpwsTable,
       "mplsVpwsEntry": mplsVpwsEntry,
       "mplsVpwsVcId": mplsVpwsVcId,
       "mplsVpwsVcName": mplsVpwsVcName,
       "mplsVpwsPeerAddr": mplsVpwsPeerAddr,
       "mplsVpwsIsManual": mplsVpwsIsManual,
       "mplsVpwsMtu": mplsVpwsMtu,
       "mplsVpwsPwMode": mplsVpwsPwMode,
       "mplsVpwsControlWord": mplsVpwsControlWord,
       "mplsVpwsStats": mplsVpwsStats,
       "mplsVpwsRowStatus": mplsVpwsRowStatus,
       "mplsVpwsState": mplsVpwsState,
       "mplsVpwsFibTable": mplsVpwsFibTable,
       "mplsVpwsFibEntry": mplsVpwsFibEntry,
       "mplsVpwsFibVcId": mplsVpwsFibVcId,
       "mplsVpwsFibInLabel": mplsVpwsFibInLabel,
       "mplsVpwsFibOutLabel": mplsVpwsFibOutLabel,
       "mplsVpwsFibRowStatus": mplsVpwsFibRowStatus,
       "mplsVplsTable": mplsVplsTable,
       "mplsVplsEntry": mplsVplsEntry,
       "mplsVplsId": mplsVplsId,
       "mplsVplsName": mplsVplsName,
       "mplsVplsWhiteList": mplsVplsWhiteList,
       "mplsVplsRowStatus": mplsVplsRowStatus,
       "mplsVplsDescription": mplsVplsDescription,
       "mplsVplsMtu": mplsVplsMtu,
       "mplsVplsMacLearning": mplsVplsMacLearning,
       "mplsVplsMacLimitNum": mplsVplsMacLimitNum,
       "mplsVplsMacLimitAction": mplsVplsMacLimitAction,
       "mplsVplsAllowFlooding": mplsVplsAllowFlooding,
       "mplsVplsState": mplsVplsState,
       "mplsVplsPeerTable": mplsVplsPeerTable,
       "mplsVplsPeerEntry": mplsVplsPeerEntry,
       "mplsVplsPeerVplsId": mplsVplsPeerVplsId,
       "mplsVplsPeerPeerAddr": mplsVplsPeerPeerAddr,
       "mplsVplsPeerType": mplsVplsPeerType,
       "mplsVplsPeerIsManul": mplsVplsPeerIsManul,
       "mplsVplsPeerControlWord": mplsVplsPeerControlWord,
       "mplsVplsPeerStats": mplsVplsPeerStats,
       "mplsVplsPeerPEType": mplsVplsPeerPEType,
       "mplsVplsPeerRowStatus": mplsVplsPeerRowStatus,
       "mplsVplsPeerState": mplsVplsPeerState,
       "mplsVplsFibAddTable": mplsVplsFibAddTable,
       "mplsVplsFibAddEntry": mplsVplsFibAddEntry,
       "mplsVplsFibAddVplsId": mplsVplsFibAddVplsId,
       "mplsVplsFibAddPeerAddr": mplsVplsFibAddPeerAddr,
       "mplsVplsFibAddInLabel": mplsVplsFibAddInLabel,
       "mplsVplsFibAddOutLabel": mplsVplsFibAddOutLabel,
       "mplsVplsFibAddRowStatus": mplsVplsFibAddRowStatus,
       "mplsInterfaceMplsVpwsTable": mplsInterfaceMplsVpwsTable,
       "mplsInterfaceMplsVpwsEntry": mplsInterfaceMplsVpwsEntry,
       "mplsInterfaceMplsVpwsIfIndex": mplsInterfaceMplsVpwsIfIndex,
       "mplsInterfaceMplsVpwsVcName": mplsInterfaceMplsVpwsVcName,
       "mplsInterfaceMplsVpwsVlanId": mplsInterfaceMplsVpwsVlanId,
       "mplsInterfaceMplsVpwsBundling": mplsInterfaceMplsVpwsBundling,
       "mplsInterfaceMplsVpwsStatisticEn": mplsInterfaceMplsVpwsStatisticEn,
       "mplsInterfaceMplsVpwsReplaceDscp": mplsInterfaceMplsVpwsReplaceDscp,
       "mplsInterfaceMplsVpwsReplaceCos": mplsInterfaceMplsVpwsReplaceCos,
       "mplsInterfaceMplsVpwsVlanOperation": mplsInterfaceMplsVpwsVlanOperation,
       "mplsInterfaceMplsVpwsRowStatus": mplsInterfaceMplsVpwsRowStatus,
       "mplsInterfacePropertyTable": mplsInterfacePropertyTable,
       "mplsInterfacePropertyEntry": mplsInterfacePropertyEntry,
       "mplsInterfacePropertyIfIndex": mplsInterfacePropertyIfIndex,
       "mplsInterfaceLabelSwitching": mplsInterfaceLabelSwitching,
       "mplsInterfaceTPP2PTxMac": mplsInterfaceTPP2PTxMac,
       "mplsInterfaceCRCNumberThresholdRising": mplsInterfaceCRCNumberThresholdRising,
       "mplsInterfaceCRCNumberThresholdFalling": mplsInterfaceCRCNumberThresholdFalling,
       "mplsInterfaceCRCRateThresholdRising": mplsInterfaceCRCRateThresholdRising,
       "mplsInterfaceCRCRateThresholdFalling": mplsInterfaceCRCRateThresholdFalling,
       "mplsInterfaceCRCAlarmStatus": mplsInterfaceCRCAlarmStatus,
       "mplsInterfaceMplsVplsTable": mplsInterfaceMplsVplsTable,
       "mplsInterfaceMplsVplsEntry": mplsInterfaceMplsVplsEntry,
       "mplsInterfaceMplsVplsIfIndex": mplsInterfaceMplsVplsIfIndex,
       "mplsInterfaceMplsVplsVplsName": mplsInterfaceMplsVplsVplsName,
       "mplsInterfaceMplsVplsVlanId": mplsInterfaceMplsVplsVlanId,
       "mplsInterfaceMplsVplsBundling": mplsInterfaceMplsVplsBundling,
       "mplsInterfaceMplsVplsStatisticEn": mplsInterfaceMplsVplsStatisticEn,
       "mplsInterfaceMplsVplsETreeACType": mplsInterfaceMplsVplsETreeACType,
       "mplsInterfaceMplsVplsReplaceDscp": mplsInterfaceMplsVplsReplaceDscp,
       "mplsInterfaceMplsVplsReplaceCos": mplsInterfaceMplsVplsReplaceCos,
       "mplsInterfaceMplsVplsVlanOperation": mplsInterfaceMplsVplsVlanOperation,
       "mplsInterfaceMplsVplsRowStatus": mplsInterfaceMplsVplsRowStatus,
       "mplsLspPeTable": mplsLspPeTable,
       "mplsLspPeEntry": mplsLspPeEntry,
       "mplsLspPeName": mplsLspPeName,
       "mplsLspPeRowStatus": mplsLspPeRowStatus,
       "mplsLspPeState": mplsLspPeState,
       "mplsLspPeDescription": mplsLspPeDescription,
       "mplsLspPeOAMMegLevel": mplsLspPeOAMMegLevel,
       "mplsLspPeOAMMegId": mplsLspPeOAMMegId,
       "mplsLspPeOAMMegIdIcc": mplsLspPeOAMMegIdIcc,
       "mplsLspPeOAMMepId": mplsLspPeOAMMepId,
       "mplsLspPeOAMMepInterval": mplsLspPeOAMMepInterval,
       "mplsLspPeOAMMepExp": mplsLspPeOAMMepExp,
       "mplsLspPeOAMRMepId": mplsLspPeOAMRMepId,
       "mplsLspPeOAMCCState": mplsLspPeOAMCCState,
       "mplsLspPeOAMEventCacheSize": mplsLspPeOAMEventCacheSize,
       "mplsLspPeOAM1dmCacheSize": mplsLspPeOAM1dmCacheSize,
       "mplsLspPeOAMAisInterval": mplsLspPeOAMAisInterval,
       "mplsLspPeOAMAisClientSupress": mplsLspPeOAMAisClientSupress,
       "mplsLspPeOAMLckInterval": mplsLspPeOAMLckInterval,
       "mplsLspPeOAMLck": mplsLspPeOAMLck,
       "mplsLspPeOAMEvtLOC": mplsLspPeOAMEvtLOC,
       "mplsLspPeOAMEvtUMP": mplsLspPeOAMEvtUMP,
       "mplsLspPeOAMEvtUIN": mplsLspPeOAMEvtUIN,
       "mplsLspPeOAMEvtUMG": mplsLspPeOAMEvtUMG,
       "mplsLspPeOAMEvtULV": mplsLspPeOAMEvtULV,
       "mplsLspPeOAMEvtW1ST": mplsLspPeOAMEvtW1ST,
       "mplsLspPeOAMEvtRDIR": mplsLspPeOAMEvtRDIR,
       "mplsLspPeOAMEvtRDIT": mplsLspPeOAMEvtRDIT,
       "mplsLspPeOAMEvtAISR": mplsLspPeOAMEvtAISR,
       "mplsLspPeOAMEvtAIST": mplsLspPeOAMEvtAIST,
       "mplsLspPeOAMEvtAISD": mplsLspPeOAMEvtAISD,
       "mplsLspPeOAMEvtLCKR": mplsLspPeOAMEvtLCKR,
       "mplsLspPeOAMEvtLCKT": mplsLspPeOAMEvtLCKT,
       "mplsLspPeOAMEvtLCKD": mplsLspPeOAMEvtLCKD,
       "mplsLspPeOAMLckTxEnable": mplsLspPeOAMLckTxEnable,
       "mplsLspPeOAMEvtCRC": mplsLspPeOAMEvtCRC,
       "mplsLspPeOAMState": mplsLspPeOAMState,
       "mplsLspPeIngressPkts": mplsLspPeIngressPkts,
       "mplsLspPeIngressBytes": mplsLspPeIngressBytes,
       "mplsLspPeEgressPkts": mplsLspPeEgressPkts,
       "mplsLspPeEgressBytes": mplsLspPeEgressBytes,
       "mplsLspPeStats": mplsLspPeStats,
       "mplsLspPeBandwidth": mplsLspPeBandwidth,
       "mplsLspPeOAMLmDualExp": mplsLspPeOAMLmDualExp,
       "mplsLspPeOAMLmDualStatInterval": mplsLspPeOAMLmDualStatInterval,
       "mplsLspPeOAMLmDualCacheSize": mplsLspPeOAMLmDualCacheSize,
       "mplsLspPeOAMLmSingleExp": mplsLspPeOAMLmSingleExp,
       "mplsLspPeOAMLmSingleInterval": mplsLspPeOAMLmSingleInterval,
       "mplsLspPeOAMLmSingleCacheSize": mplsLspPeOAMLmSingleCacheSize,
       "mplsLspPeOAMLmEnableState": mplsLspPeOAMLmEnableState,
       "mplsLspPeOAMLmLocalLossThreshold": mplsLspPeOAMLmLocalLossThreshold,
       "mplsLspPeOAMLmRemoteLossThreshold": mplsLspPeOAMLmRemoteLossThreshold,
       "mplsLspPeOAMLmSingleRxCount": mplsLspPeOAMLmSingleRxCount,
       "mplsLspPeOAMLmSingleTxCount": mplsLspPeOAMLmSingleTxCount,
       "mplsLspPeOAMLmSingleSuccessRate": mplsLspPeOAMLmSingleSuccessRate,
       "mplsLspPeOAMLmSingleStartTime": mplsLspPeOAMLmSingleStartTime,
       "mplsLspPeOAMLmSingleEndTime": mplsLspPeOAMLmSingleEndTime,
       "mplsLspPeIngressTable": mplsLspPeIngressTable,
       "mplsLspPeIngressEntry": mplsLspPeIngressEntry,
       "mplsLspPeIngressLspName": mplsLspPeIngressLspName,
       "mplsLspPeIngressInlabel": mplsLspPeIngressInlabel,
       "mplsLspPeIngressRowStatus": mplsLspPeIngressRowStatus,
       "mplsLspPeEgressTable": mplsLspPeEgressTable,
       "mplsLspPeEgressEntry": mplsLspPeEgressEntry,
       "mplsLspPeEgressLspName": mplsLspPeEgressLspName,
       "mplsLspPeEgressOutlabel": mplsLspPeEgressOutlabel,
       "mplsLspPeEgressNextHop": mplsLspPeEgressNextHop,
       "mplsLspPeEgressOutIfindex": mplsLspPeEgressOutIfindex,
       "mplsLspPeEgressOutMemIfindex": mplsLspPeEgressOutMemIfindex,
       "mplsLspPeEgressRowStatus": mplsLspPeEgressRowStatus,
       "mplsLspPTable": mplsLspPTable,
       "mplsLspPEntry": mplsLspPEntry,
       "mplsLspPName": mplsLspPName,
       "mplsLspPRowStatus": mplsLspPRowStatus,
       "mplsLspPOAMMegId": mplsLspPOAMMegId,
       "mplsLspPOAMMegIdIcc": mplsLspPOAMMegIdIcc,
       "mplsLspPOAMMipState": mplsLspPOAMMipState,
       "mplsLspPOAMMegLevel": mplsLspPOAMMegLevel,
       "mplsLspPDescription": mplsLspPDescription,
       "mplsLspPStats": mplsLspPStats,
       "mplsLspPEastTable": mplsLspPEastTable,
       "mplsLspPEastEntry": mplsLspPEastEntry,
       "mplsLspPEastLspName": mplsLspPEastLspName,
       "mplsLspPEastInlabel": mplsLspPEastInlabel,
       "mplsLspPEastOutlabel": mplsLspPEastOutlabel,
       "mplsLspPEastNextHop": mplsLspPEastNextHop,
       "mplsLspPEastTunnel": mplsLspPEastTunnel,
       "mplsLspPEastOutIfindex": mplsLspPEastOutIfindex,
       "mplsLspPEastOutMemIfindex": mplsLspPEastOutMemIfindex,
       "mplsLspPEastReplaceExp": mplsLspPEastReplaceExp,
       "mplsLspPEastRowStatus": mplsLspPEastRowStatus,
       "mplsLspPEastState": mplsLspPEastState,
       "mplsLspPEastIngressPkts": mplsLspPEastIngressPkts,
       "mplsLspPEastIngressbytes": mplsLspPEastIngressbytes,
       "mplsLspPEastEgressPkts": mplsLspPEastEgressPkts,
       "mplsLspPEastEgressBytes": mplsLspPEastEgressBytes,
       "mplsLspPWestTable": mplsLspPWestTable,
       "mplsLspPWestEntry": mplsLspPWestEntry,
       "mplsLspPWestLspName": mplsLspPWestLspName,
       "mplsLspPWestInlabel": mplsLspPWestInlabel,
       "mplsLspPWestOutlabel": mplsLspPWestOutlabel,
       "mplsLspPWestNextHop": mplsLspPWestNextHop,
       "mplsLspPWestTunnel": mplsLspPWestTunnel,
       "mplsLspPWestOutIfindex": mplsLspPWestOutIfindex,
       "mplsLspPWestOutMemIfindex": mplsLspPWestOutMemIfindex,
       "mplsLspPWestReplaceExp": mplsLspPWestReplaceExp,
       "mplsLspPWestRowStatus": mplsLspPWestRowStatus,
       "mplsLspPWestState": mplsLspPWestState,
       "mplsLspPWestIngressPkts": mplsLspPWestIngressPkts,
       "mplsLspPWestIngressbytes": mplsLspPWestIngressbytes,
       "mplsLspPWestEgressPkts": mplsLspPWestEgressPkts,
       "mplsLspPWestEgressBytes": mplsLspPWestEgressBytes,
       "mplsTunnelTable": mplsTunnelTable,
       "mplsTunnelEntry": mplsTunnelEntry,
       "mplsTunnelName": mplsTunnelName,
       "mplsTunnelApsType": mplsTunnelApsType,
       "mplsTunnelRowStatus": mplsTunnelRowStatus,
       "mplsTunnelPrimaryLspPe": mplsTunnelPrimaryLspPe,
       "mplsTunnelSecondaryLspPe": mplsTunnelSecondaryLspPe,
       "mplsTunnelDescription": mplsTunnelDescription,
       "mplsTunnelSelectedLspPe": mplsTunnelSelectedLspPe,
       "mplsTunnelG8131Mode": mplsTunnelG8131Mode,
       "mplsTunnelG8131WTRTimer": mplsTunnelG8131WTRTimer,
       "mplsTunnelG8131HoldOffTimer": mplsTunnelG8131HoldOffTimer,
       "mplsTunnelG8131Action": mplsTunnelG8131Action,
       "mplsTunnelG8131WorkingLSP": mplsTunnelG8131WorkingLSP,
       "mplsTunnelG8131ProtectionLSP": mplsTunnelG8131ProtectionLSP,
       "mplsTunnelG8131ActivePath": mplsTunnelG8131ActivePath,
       "mplsTunnelG8131WTRTimeLeft": mplsTunnelG8131WTRTimeLeft,
       "mplsTunnelG8131HoldOffTimeLeft": mplsTunnelG8131HoldOffTimeLeft,
       "mplsTunnelG8131DFOPState": mplsTunnelG8131DFOPState,
       "mplsTunnelG8131CurrentState": mplsTunnelG8131CurrentState,
       "mplsTunnelG8131LastState": mplsTunnelG8131LastState,
       "mplsTunnelG8131CurrentEvent": mplsTunnelG8131CurrentEvent,
       "mplsTunnelG8131FarEndLastEvent": mplsTunnelG8131FarEndLastEvent,
       "mplsTunnelG8131RequestSignal": mplsTunnelG8131RequestSignal,
       "mplsPwSPeTable": mplsPwSPeTable,
       "mplsPwSPeEntry": mplsPwSPeEntry,
       "mplsPwSPeName": mplsPwSPeName,
       "mplsPwSPeRowStatus": mplsPwSPeRowStatus,
       "mplsPwSPeOAMMegId": mplsPwSPeOAMMegId,
       "mplsPwSPeOAMMegIdIcc": mplsPwSPeOAMMegIdIcc,
       "mplsPwSPeOAMMipState": mplsPwSPeOAMMipState,
       "mplsPwSPeOAMMegLevel": mplsPwSPeOAMMegLevel,
       "mplsPwSPeDescription": mplsPwSPeDescription,
       "mplsPwSpeStats": mplsPwSpeStats,
       "mplsPwSPeEastTable": mplsPwSPeEastTable,
       "mplsPwSPeEastEntry": mplsPwSPeEastEntry,
       "mplsPwSPeEastPwName": mplsPwSPeEastPwName,
       "mplsPwSPeEastInlabel": mplsPwSPeEastInlabel,
       "mplsPwSPeEastOutlabel": mplsPwSPeEastOutlabel,
       "mplsPwSPeEastTunnelName": mplsPwSPeEastTunnelName,
       "mplsPwSPeEastCtrlWord": mplsPwSPeEastCtrlWord,
       "mplsPwSPeEastRowStatus": mplsPwSPeEastRowStatus,
       "mplsPwSPeEastState": mplsPwSPeEastState,
       "mplsPwSPeEastIngressPkts": mplsPwSPeEastIngressPkts,
       "mplsPwSPeEastIngressbytes": mplsPwSPeEastIngressbytes,
       "mplsPwSPeEastEgressPkts": mplsPwSPeEastEgressPkts,
       "mplsPwSPeEastEgressBytes": mplsPwSPeEastEgressBytes,
       "mplsPwSPeWestTable": mplsPwSPeWestTable,
       "mplsPwSPeWestEntry": mplsPwSPeWestEntry,
       "mplsPwSPeWestPwName": mplsPwSPeWestPwName,
       "mplsPwSPeWestInlabel": mplsPwSPeWestInlabel,
       "mplsPwSPeWestOutlabel": mplsPwSPeWestOutlabel,
       "mplsPwSPeWestTunnelName": mplsPwSPeWestTunnelName,
       "mplsPwSPeWestCtrlWord": mplsPwSPeWestCtrlWord,
       "mplsPwSPeWestRowStatus": mplsPwSPeWestRowStatus,
       "mplsPwSPeWestState": mplsPwSPeWestState,
       "mplsPwSPeWestIngressPkts": mplsPwSPeWestIngressPkts,
       "mplsPwSPeWestIngressbytes": mplsPwSPeWestIngressbytes,
       "mplsPwSPeWestEgressPkts": mplsPwSPeWestEgressPkts,
       "mplsPwSPeWestEgressBytes": mplsPwSPeWestEgressBytes,
       "mplsVplsStaticFdbTable": mplsVplsStaticFdbTable,
       "mplsVplsStaticFdbEntry": mplsVplsStaticFdbEntry,
       "mplsVplsStaticFdbVplsId": mplsVplsStaticFdbVplsId,
       "mplsVplsStaticFdbMacAddr": mplsVplsStaticFdbMacAddr,
       "mplsVplsStaticFdbType": mplsVplsStaticFdbType,
       "mplsVplsStaticFdbIfName": mplsVplsStaticFdbIfName,
       "mplsVplsStaticFdbPeerIp": mplsVplsStaticFdbPeerIp,
       "mplsVplsStaticFdbTPPeerName": mplsVplsStaticFdbTPPeerName,
       "mplsVplsStaticFdbRowStatus": mplsVplsStaticFdbRowStatus,
       "mplsStaticFtnTable": mplsStaticFtnTable,
       "mplsStaticFtnEntry": mplsStaticFtnEntry,
       "mplsStaticFtnFecPrefix": mplsStaticFtnFecPrefix,
       "mplsStaticFtnFecPrefixLen": mplsStaticFtnFecPrefixLen,
       "mplsStaticFtnNexthop": mplsStaticFtnNexthop,
       "mplsStaticFtnOutlabel": mplsStaticFtnOutlabel,
       "mplsStaticFtnRowStatus": mplsStaticFtnRowStatus,
       "mplsFtnDatabaseTable": mplsFtnDatabaseTable,
       "mplsFtnDatabaseEntry": mplsFtnDatabaseEntry,
       "mplsFtnDatabaseIndex": mplsFtnDatabaseIndex,
       "mplsFtnDatabaseFecPrefix": mplsFtnDatabaseFecPrefix,
       "mplsFtnDatabaseFecPrefixLen": mplsFtnDatabaseFecPrefixLen,
       "mplsFtnDatabaseOutlabel": mplsFtnDatabaseOutlabel,
       "mplsFtnDatabaseNexthop": mplsFtnDatabaseNexthop,
       "mplsFtnDatabaseOutInterface": mplsFtnDatabaseOutInterface,
       "mplsFtnDatabaseState": mplsFtnDatabaseState,
       "mplsStaticIlmTable": mplsStaticIlmTable,
       "mplsStaticIlmEntry": mplsStaticIlmEntry,
       "mplsStaticIlmInlabel": mplsStaticIlmInlabel,
       "mplsStaticIlmOpcode": mplsStaticIlmOpcode,
       "mplsStaticIlmNexthop": mplsStaticIlmNexthop,
       "mplsStaticIlmOutlabel": mplsStaticIlmOutlabel,
       "mplsStaticIlmRowStatus": mplsStaticIlmRowStatus,
       "mplsIlmDatabaseTable": mplsIlmDatabaseTable,
       "mplsIlmDatabaseEntry": mplsIlmDatabaseEntry,
       "mplsIlmDatabaseIndex": mplsIlmDatabaseIndex,
       "mplsIlmDatabaseFecPrefix": mplsIlmDatabaseFecPrefix,
       "mplsIlmDatabaseFecPrefixLen": mplsIlmDatabaseFecPrefixLen,
       "mplsIlmDatabaseInlabel": mplsIlmDatabaseInlabel,
       "mplsIlmDatabaseOutlabel": mplsIlmDatabaseOutlabel,
       "mplsIlmDatabaseNexthop": mplsIlmDatabaseNexthop,
       "mplsIlmDatabaseOutInterface": mplsIlmDatabaseOutInterface,
       "mplsIlmDatabaseState": mplsIlmDatabaseState,
       "mplsIlmDatabaseNexthopMac": mplsIlmDatabaseNexthopMac,
       "mplsPwTpeTable": mplsPwTpeTable,
       "mplsPwTpeEntry": mplsPwTpeEntry,
       "mplsPwTpeName": mplsPwTpeName,
       "mplsPwTpeRowStatus": mplsPwTpeRowStatus,
       "mplsPwTpeDescription": mplsPwTpeDescription,
       "mplsPwTpeOAMMegLevel": mplsPwTpeOAMMegLevel,
       "mplsPwTpeOAMMegId": mplsPwTpeOAMMegId,
       "mplsPwTpeOAMMegIdIcc": mplsPwTpeOAMMegIdIcc,
       "mplsPwTpeOAMMepId": mplsPwTpeOAMMepId,
       "mplsPwTpeOAMMepInterval": mplsPwTpeOAMMepInterval,
       "mplsPwTpeOAMMepExp": mplsPwTpeOAMMepExp,
       "mplsPwTpeOAMRMepId": mplsPwTpeOAMRMepId,
       "mplsPwTpeOAMCCState": mplsPwTpeOAMCCState,
       "mplsPwTpeOAMEventCacheSize": mplsPwTpeOAMEventCacheSize,
       "mplsPwTpeOAM1dmCacheSize": mplsPwTpeOAM1dmCacheSize,
       "mplsPwTpeOAMAisClientSupress": mplsPwTpeOAMAisClientSupress,
       "mplsPwTpeOAMLck": mplsPwTpeOAMLck,
       "mplsPwTpeOAMEvtLOC": mplsPwTpeOAMEvtLOC,
       "mplsPwTpeOAMEvtUMP": mplsPwTpeOAMEvtUMP,
       "mplsPwTpeOAMEvtUIN": mplsPwTpeOAMEvtUIN,
       "mplsPwTpeOAMEvtUMG": mplsPwTpeOAMEvtUMG,
       "mplsPwTpeOAMEvtULV": mplsPwTpeOAMEvtULV,
       "mplsPwTpeOAMEvtW1ST": mplsPwTpeOAMEvtW1ST,
       "mplsPwTpeOAMEvtRDIR": mplsPwTpeOAMEvtRDIR,
       "mplsPwTpeOAMEvtRDIT": mplsPwTpeOAMEvtRDIT,
       "mplsPwTpeOAMEvtAISR": mplsPwTpeOAMEvtAISR,
       "mplsPwTpeOAMEvtAIST": mplsPwTpeOAMEvtAIST,
       "mplsPwTpeOAMEvtAISD": mplsPwTpeOAMEvtAISD,
       "mplsPwTpeOAMEvtLCKR": mplsPwTpeOAMEvtLCKR,
       "mplsPwTpeOAMEvtLCKT": mplsPwTpeOAMEvtLCKT,
       "mplsPwTpeOAMEvtLCKD": mplsPwTpeOAMEvtLCKD,
       "mplsPwTpeOAMEvtCRC": mplsPwTpeOAMEvtCRC,
       "mplsPwTpeOAMState": mplsPwTpeOAMState,
       "mplsPwTpeIngressPkts": mplsPwTpeIngressPkts,
       "mplsPwTpeIngressBytes": mplsPwTpeIngressBytes,
       "mplsPwTpeEgressPkts": mplsPwTpeEgressPkts,
       "mplsPwTpeEgressBytes": mplsPwTpeEgressBytes,
       "mplsPwTpeStats": mplsPwTpeStats,
       "mplsPwTpeBandwidth": mplsPwTpeBandwidth,
       "mplsPwTpeOAMLmDualExp": mplsPwTpeOAMLmDualExp,
       "mplsPwTpeOAMLmDualStatInterval": mplsPwTpeOAMLmDualStatInterval,
       "mplsPwTpeOAMLmDualCacheSize": mplsPwTpeOAMLmDualCacheSize,
       "mplsPwTpeOAMLmSingleExp": mplsPwTpeOAMLmSingleExp,
       "mplsPwTpeOAMLmSingleInterval": mplsPwTpeOAMLmSingleInterval,
       "mplsPwTpeOAMLmSingleCacheSize": mplsPwTpeOAMLmSingleCacheSize,
       "mplsPwTpeOAMLmEnableState": mplsPwTpeOAMLmEnableState,
       "mplsPwTpeOAMLmLocalLossThreshold": mplsPwTpeOAMLmLocalLossThreshold,
       "mplsPwTpeOAMLmRemoteLossThreshold": mplsPwTpeOAMLmRemoteLossThreshold,
       "mplsPwTpeOAMLmSingleRxCount": mplsPwTpeOAMLmSingleRxCount,
       "mplsPwTpeOAMLmSingleTxCount": mplsPwTpeOAMLmSingleTxCount,
       "mplsPwTpeOAMLmSingleSuccessRate": mplsPwTpeOAMLmSingleSuccessRate,
       "mplsPwTpeOAMLmSingleStartTime": mplsPwTpeOAMLmSingleStartTime,
       "mplsPwTpeOAMLmSingleEndTime": mplsPwTpeOAMLmSingleEndTime,
       "mplsPwTpeConfTable": mplsPwTpeConfTable,
       "mplsPwTpeConfEntry": mplsPwTpeConfEntry,
       "mplsPwTpeConfInlabel": mplsPwTpeConfInlabel,
       "mplsPwTpeConfOutlabel": mplsPwTpeConfOutlabel,
       "mplsPwTpeConfPwMode": mplsPwTpeConfPwMode,
       "mplsPwTpeConfTunnel": mplsPwTpeConfTunnel,
       "mplsPwTpeConfRowStatus": mplsPwTpeConfRowStatus,
       "mplsTPVpwsTable": mplsTPVpwsTable,
       "mplsTPVpwsEntry": mplsTPVpwsEntry,
       "mplsTPVpwsVcId": mplsTPVpwsVcId,
       "mplsTPVpwsVcName": mplsTPVpwsVcName,
       "mplsTPVpwsApsType": mplsTPVpwsApsType,
       "mplsTPVpwsVlanOperation": mplsTPVpwsVlanOperation,
       "mplsTPVpwsRowStatus": mplsTPVpwsRowStatus,
       "mplsTPVpwsPrimaryPw": mplsTPVpwsPrimaryPw,
       "mplsTPVpwsSecondaryPw": mplsTPVpwsSecondaryPw,
       "mplsTPVpwsSelectedPw": mplsTPVpwsSelectedPw,
       "mplsTPVpwsDescription": mplsTPVpwsDescription,
       "mplsTPAcVpwsIngressPkts": mplsTPAcVpwsIngressPkts,
       "mplsTPAcVpwsIngressbytes": mplsTPAcVpwsIngressbytes,
       "mplsTPAcVpwsEgressPkts": mplsTPAcVpwsEgressPkts,
       "mplsTPAcVpwsEgressBytes": mplsTPAcVpwsEgressBytes,
       "mplsTPVpwsG8131Mode": mplsTPVpwsG8131Mode,
       "mplsTPVpwsG8131WTRTimer": mplsTPVpwsG8131WTRTimer,
       "mplsTPVpwsG8131HoldOffTimer": mplsTPVpwsG8131HoldOffTimer,
       "mplsTPVpwsG8131Action": mplsTPVpwsG8131Action,
       "mplsTPVpwsG8131WorkingPw": mplsTPVpwsG8131WorkingPw,
       "mplsTPVpwsG8131ProtectionPw": mplsTPVpwsG8131ProtectionPw,
       "mplsTPVpwsG8131ActivePath": mplsTPVpwsG8131ActivePath,
       "mplsTPVpwsG8131WTRTimeLeft": mplsTPVpwsG8131WTRTimeLeft,
       "mplsTPVpwsG8131HoldOffTimeLeft": mplsTPVpwsG8131HoldOffTimeLeft,
       "mplsTPVpwsG8131DFOPState": mplsTPVpwsG8131DFOPState,
       "mplsTPVpwsG8131CurrentState": mplsTPVpwsG8131CurrentState,
       "mplsTPVpwsG8131LastState": mplsTPVpwsG8131LastState,
       "mplsTPVpwsG8131CurrentEvent": mplsTPVpwsG8131CurrentEvent,
       "mplsTPVpwsG8131FarEndLastEvent": mplsTPVpwsG8131FarEndLastEvent,
       "mplsTPVpwsG8131RequestSignal": mplsTPVpwsG8131RequestSignal,
       "mplsTPVpwsOAMCsfInterval": mplsTPVpwsOAMCsfInterval,
       "mplsTPVpwsOAMCSFRxDown": mplsTPVpwsOAMCSFRxDown,
       "mplsTPVpwsOAMCSFRxRelay": mplsTPVpwsOAMCSFRxRelay,
       "mplsTPVpwsOAMCSFRxRelayMdName": mplsTPVpwsOAMCSFRxRelayMdName,
       "mplsTPVpwsOAMCSFRxRelayMaVid": mplsTPVpwsOAMCSFRxRelayMaVid,
       "mplsTPVpwsOAMCSFRxRelayMepId": mplsTPVpwsOAMCSFRxRelayMepId,
       "mplsVplsTPPeerTable": mplsVplsTPPeerTable,
       "mplsVplsTPPeerEntry": mplsVplsTPPeerEntry,
       "mplsVplsTPPeerVplsId": mplsVplsTPPeerVplsId,
       "mplsVplsTPPeerName": mplsVplsTPPeerName,
       "mplsVplsTPPeerApsType": mplsVplsTPPeerApsType,
       "mplsVplsTPPeerPEType": mplsVplsTPPeerPEType,
       "mplsVplsTPPeerRowStatus": mplsVplsTPPeerRowStatus,
       "mplsVplsTPPeerPrimaryPw": mplsVplsTPPeerPrimaryPw,
       "mplsVplsTPPeerSecondaryPw": mplsVplsTPPeerSecondaryPw,
       "mplsVplsTPPeerSelectedPw": mplsVplsTPPeerSelectedPw,
       "mplsVplsTPPeerDescription": mplsVplsTPPeerDescription,
       "mplsVplsTPPeerG8131Mode": mplsVplsTPPeerG8131Mode,
       "mplsVplsTPPeerG8131WTRTimer": mplsVplsTPPeerG8131WTRTimer,
       "mplsVplsTPPeerG8131HoldOffTimer": mplsVplsTPPeerG8131HoldOffTimer,
       "mplsVplsTPPeerG8131Action": mplsVplsTPPeerG8131Action,
       "mplsVplsTPPeerG8131WorkingPw": mplsVplsTPPeerG8131WorkingPw,
       "mplsVplsTPPeerG8131ProtectionPw": mplsVplsTPPeerG8131ProtectionPw,
       "mplsVplsTPPeerG8131ActivePath": mplsVplsTPPeerG8131ActivePath,
       "mplsVplsTPPeerG8131WTRTimeLeft": mplsVplsTPPeerG8131WTRTimeLeft,
       "mplsVplsTPPeerG8131HoldOffTimeLeft": mplsVplsTPPeerG8131HoldOffTimeLeft,
       "mplsVplsTPPeerG8131DFOPState": mplsVplsTPPeerG8131DFOPState,
       "mplsVplsTPPeerG8131CurrentState": mplsVplsTPPeerG8131CurrentState,
       "mplsVplsTPPeerG8131LastState": mplsVplsTPPeerG8131LastState,
       "mplsVplsTPPeerG8131CurrentEvent": mplsVplsTPPeerG8131CurrentEvent,
       "mplsVplsTPPeerG8131FarEndLastEvent": mplsVplsTPPeerG8131FarEndLastEvent,
       "mplsVplsTPPeerG8131RequestSignal": mplsVplsTPPeerG8131RequestSignal,
       "mplsLspPeAisClientTable": mplsLspPeAisClientTable,
       "mplsLspPeAisClientEntry": mplsLspPeAisClientEntry,
       "lspPeAisClientBindType": lspPeAisClientBindType,
       "lspPeAisClientBindName": lspPeAisClientBindName,
       "lspPeAisClientRowStatus": lspPeAisClientRowStatus,
       "mplsLspPeLckClientTable": mplsLspPeLckClientTable,
       "mplsLspPeLckClientEntry": mplsLspPeLckClientEntry,
       "mplsLspPeLckClientBindType": mplsLspPeLckClientBindType,
       "mplsLspPeLckClientBindName": mplsLspPeLckClientBindName,
       "mplsLspPeLckClientRowStatus": mplsLspPeLckClientRowStatus,
       "mplsTpOAMSdReason": mplsTpOAMSdReason,
       "sdReasonAisRx": sdReasonAisRx,
       "sdReasonAisDefect": sdReasonAisDefect,
       "sdReasonCRC": sdReasonCRC,
       "mplsDCNManagementIp": mplsDCNManagementIp,
       "mplsTrustTopMostExp": mplsTrustTopMostExp,
       "mplsTpChannelType": mplsTpChannelType,
       "mplsTpNodeId": mplsTpNodeId,
       "mplsTpOAMSfReason": mplsTpOAMSfReason,
       "sfReasonAisDefect": sfReasonAisDefect,
       "sfReasonLoc": sfReasonLoc,
       "sfReasonRdiRx": sfReasonRdiRx,
       "sfReasonAisRx": sfReasonAisRx,
       "sfReasonCsfDefect": sfReasonCsfDefect,
       "mplsTpOAMRdiReason": mplsTpOAMRdiReason,
       "rdiReasonLoc": rdiReasonLoc,
       "rdiReasonCCError": rdiReasonCCError,
       "rdiReasonCCMisMerge": rdiReasonCCMisMerge,
       "mplsTpOAMAisReason": mplsTpOAMAisReason,
       "aisReasonLoc": aisReasonLoc,
       "aisReasonUnExpRMepID": aisReasonUnExpRMepID,
       "aisReasonUnExpInterval": aisReasonUnExpInterval,
       "aisReasonUnExpMegId": aisReasonUnExpMegId,
       "aisReasonUnExpMegLevel": aisReasonUnExpMegLevel,
       "aisReasonAisDefect": aisReasonAisDefect,
       "aisReasonLockRx": aisReasonLockRx,
       "mplsTpOAMEventRuleTable": mplsTpOAMEventRuleTable,
       "mplsTpOAMEventRuleEntry": mplsTpOAMEventRuleEntry,
       "mplsTpOAMEventRuleId": mplsTpOAMEventRuleId,
       "mplsTpOAMEventLog": mplsTpOAMEventLog,
       "mplsTpOAMEventTrap": mplsTpOAMEventTrap,
       "mplsTpOAMEventCache": mplsTpOAMEventCache,
       "mplsTpSectionTable": mplsTpSectionTable,
       "mplsTpSectionEntry": mplsTpSectionEntry,
       "sectionName": sectionName,
       "sectionRowStatus": sectionRowStatus,
       "sectionPeer": sectionPeer,
       "sectionOutIfindex": sectionOutIfindex,
       "sectionOutMemIfindex": sectionOutMemIfindex,
       "sectionDescription": sectionDescription,
       "sectionMegLevel": sectionMegLevel,
       "sectionMegId": sectionMegId,
       "sectionMegIdIcc": sectionMegIdIcc,
       "sectionMepId": sectionMepId,
       "sectionMepInterval": sectionMepInterval,
       "sectionMepExp": sectionMepExp,
       "sectionRMepId": sectionRMepId,
       "sectionCCState": sectionCCState,
       "sectionEventCacheSize": sectionEventCacheSize,
       "section1dmCacheSize": section1dmCacheSize,
       "sectionAisInterval": sectionAisInterval,
       "sectionLck": sectionLck,
       "sectionLckInterval": sectionLckInterval,
       "sectionState": sectionState,
       "sectionEvtLOC": sectionEvtLOC,
       "sectionEvtUMP": sectionEvtUMP,
       "sectionEvtUIN": sectionEvtUIN,
       "sectionEvtUMG": sectionEvtUMG,
       "sectionEvtULV": sectionEvtULV,
       "sectionEvtW1ST": sectionEvtW1ST,
       "sectionEvtRDIR": sectionEvtRDIR,
       "sectionEvtRDIT": sectionEvtRDIT,
       "sectionEvtAISR": sectionEvtAISR,
       "sectionEvtAIST": sectionEvtAIST,
       "sectionEvtAISD": sectionEvtAISD,
       "sectionEvtLCKR": sectionEvtLCKR,
       "sectionEvtLCKT": sectionEvtLCKT,
       "sectionEvtLCKD": sectionEvtLCKD,
       "sectionLckTxEnable": sectionLckTxEnable,
       "sectionEvtCRC": sectionEvtCRC,
       "sectionOAMState": sectionOAMState,
       "sectionLmDualExp": sectionLmDualExp,
       "sectionLmDualStatInterval": sectionLmDualStatInterval,
       "sectionLmDualCacheSize": sectionLmDualCacheSize,
       "sectionLmSingleExp": sectionLmSingleExp,
       "sectionLmSingleInterval": sectionLmSingleInterval,
       "sectionLmSingleCacheSize": sectionLmSingleCacheSize,
       "sectionLmEnableState": sectionLmEnableState,
       "sectionLmLocalLossThreshold": sectionLmLocalLossThreshold,
       "sectionLmRemoteLossThreshold": sectionLmRemoteLossThreshold,
       "sectionLmSingleRxCount": sectionLmSingleRxCount,
       "sectionLmSingleTxCount": sectionLmSingleTxCount,
       "sectionLmSingleSuccessRate": sectionLmSingleSuccessRate,
       "sectionLmSingleStartTime": sectionLmSingleStartTime,
       "sectionLmSingleEndTime": sectionLmSingleEndTime,
       "mplsTpSectionAisClientTable": mplsTpSectionAisClientTable,
       "mplsTpSectionAisClientEntry": mplsTpSectionAisClientEntry,
       "sectionAisClientBindType": sectionAisClientBindType,
       "sectionAisClientBindName": sectionAisClientBindName,
       "sectionAisClientRowStatus": sectionAisClientRowStatus,
       "mplsTpSectionLckClientTable": mplsTpSectionLckClientTable,
       "mplsTpSectionLckClientEntry": mplsTpSectionLckClientEntry,
       "sectionLckClientBindType": sectionLckClientBindType,
       "sectionLckClientBindName": sectionLckClientBindName,
       "sectionLckClientRowStatus": sectionLckClientRowStatus,
       "mplsTpOAMClearCache": mplsTpOAMClearCache,
       "mplsTpOAMLoopbackDiscoveryTable": mplsTpOAMLoopbackDiscoveryTable,
       "mplsTpOAMLoopbackDiscoveryEntry": mplsTpOAMLoopbackDiscoveryEntry,
       "oamDiscoveryIndex": oamDiscoveryIndex,
       "oamDiscoveryServiceType": oamDiscoveryServiceType,
       "oamDiscoveryServiceName": oamDiscoveryServiceName,
       "oamDiscoveryStartTTL": oamDiscoveryStartTTL,
       "oamDiscoveryEndTTL": oamDiscoveryEndTTL,
       "oamDiscoveryMepIdTlv": oamDiscoveryMepIdTlv,
       "oamDiscoveryDataTlv": oamDiscoveryDataTlv,
       "oamDiscoveryTimeout": oamDiscoveryTimeout,
       "oamDiscoveryExp": oamDiscoveryExp,
       "oamDiscoveryTstTlv": oamDiscoveryTstTlv,
       "oamDiscoveryTstPattern": oamDiscoveryTstPattern,
       "oamDiscoveryRowstatus": oamDiscoveryRowstatus,
       "oamDiscoveryOperState": oamDiscoveryOperState,
       "oamDiscoveryTimeSpent": oamDiscoveryTimeSpent,
       "oamDiscoverySuccessRate": oamDiscoverySuccessRate,
       "mplsTpOAMDiscoveryResultTable": mplsTpOAMDiscoveryResultTable,
       "mplsTpOAMDiscoveryResultEntry": mplsTpOAMDiscoveryResultEntry,
       "oamDiscoveryResultTTL": oamDiscoveryResultTTL,
       "oamDiscoveryResultReplyType": oamDiscoveryResultReplyType,
       "oamDiscoveryResultMepId": oamDiscoveryResultMepId,
       "oamDiscoveryResultICC": oamDiscoveryResultICC,
       "oamDiscoveryResultNodeId": oamDiscoveryResultNodeId,
       "oamDiscoveryResultIfNum": oamDiscoveryResultIfNum,
       "mplsTpOAMLoopbackRmepTable": mplsTpOAMLoopbackRmepTable,
       "mplsTpOAMLoopbackRmepEntry": mplsTpOAMLoopbackRmepEntry,
       "oamRmepIndex": oamRmepIndex,
       "oamRmepServiceType": oamRmepServiceType,
       "oamRmepServiceName": oamRmepServiceName,
       "oamRmepId": oamRmepId,
       "oamRmepMepIdTlv": oamRmepMepIdTlv,
       "oamRmepDataTlv": oamRmepDataTlv,
       "oamRmepTimeout": oamRmepTimeout,
       "oamRmepRepeat": oamRmepRepeat,
       "oamRmepExp": oamRmepExp,
       "oamRmepRowstatus": oamRmepRowstatus,
       "oamRmepOperState": oamRmepOperState,
       "oamRmepTimeSpent": oamRmepTimeSpent,
       "oamRmepSuccessRate": oamRmepSuccessRate,
       "mplsTpOAMLoopbackMipTable": mplsTpOAMLoopbackMipTable,
       "mplsTpOAMLoopbackMipEntry": mplsTpOAMLoopbackMipEntry,
       "oamMipIndex": oamMipIndex,
       "oamMipServiceType": oamMipServiceType,
       "oamMipServiceName": oamMipServiceName,
       "oamMipTTL": oamMipTTL,
       "oamMipNodeId": oamMipNodeId,
       "oamMipMepIdTlv": oamMipMepIdTlv,
       "oamMipDataTlv": oamMipDataTlv,
       "oamMipTimeout": oamMipTimeout,
       "oamMipRepeat": oamMipRepeat,
       "oamMipExp": oamMipExp,
       "oamMipRowstatus": oamMipRowstatus,
       "oamMipOperState": oamMipOperState,
       "oamMipTimeSpent": oamMipTimeSpent,
       "oamMipSuccessRate": oamMipSuccessRate,
       "mplsTpOAM1dmRequestTable": mplsTpOAM1dmRequestTable,
       "mplsTpOAM1dmRequestEntry": mplsTpOAM1dmRequestEntry,
       "oam1dmReqIndex": oam1dmReqIndex,
       "oam1dmReqServiceType": oam1dmReqServiceType,
       "oam1dmReqServiceName": oam1dmReqServiceName,
       "oam1dmReqRepeat": oam1dmReqRepeat,
       "oam1dmReqExp": oam1dmReqExp,
       "oam1dmReqInterval": oam1dmReqInterval,
       "oam1dmReqRowstatus": oam1dmReqRowstatus,
       "oam1dmReqOperState": oam1dmReqOperState,
       "mplsTpOAMDmmRequestTable": mplsTpOAMDmmRequestTable,
       "mplsTpOAMDmmRequestEntry": mplsTpOAMDmmRequestEntry,
       "oamDmmReqIndex": oamDmmReqIndex,
       "oamDmmReqServiceType": oamDmmReqServiceType,
       "oamDmmReqServiceName": oamDmmReqServiceName,
       "oamDmmReqRepeat": oamDmmReqRepeat,
       "oamDmmReqExp": oamDmmReqExp,
       "oamDmmReqInterval": oamDmmReqInterval,
       "oamDmmReqRowstatus": oamDmmReqRowstatus,
       "oamDmmReqOperState": oamDmmReqOperState,
       "oamDmmReqSuccessRate": oamDmmReqSuccessRate,
       "oamDmmReqAverDelay": oamDmmReqAverDelay,
       "oamDmmReqAverVar": oamDmmReqAverVar,
       "oamDmmReqMaxDelay": oamDmmReqMaxDelay,
       "oamDmmReqMinDelay": oamDmmReqMinDelay,
       "mplsTpOAMDmmResultTable": mplsTpOAMDmmResultTable,
       "mplsTpOAMDmmResultEntry": mplsTpOAMDmmResultEntry,
       "mplsTpOAMDmmResultIndex": mplsTpOAMDmmResultIndex,
       "mplsTpOAMDmmResultDelay": mplsTpOAMDmmResultDelay,
       "mplsTpOAMDmmResultVariation": mplsTpOAMDmmResultVariation,
       "mplsTpOAMDmmResultExp": mplsTpOAMDmmResultExp,
       "mplsTpOAMDmmResultTime": mplsTpOAMDmmResultTime,
       "mplsTpOAMResourceTable": mplsTpOAMResourceTable,
       "mplsTpOAMResourceEntry": mplsTpOAMResourceEntry,
       "mplsTpOAMResourceId": mplsTpOAMResourceId,
       "mplsTpOAMResourceMax": mplsTpOAMResourceMax,
       "mplsTpOAMResourceCurrent": mplsTpOAMResourceCurrent,
       "mplsTpOAMStatisticTable": mplsTpOAMStatisticTable,
       "mplsTpOAMStatisticEntry": mplsTpOAMStatisticEntry,
       "mplsTpOAMStatisticPktType": mplsTpOAMStatisticPktType,
       "mplsTpOAMStatisticTx": mplsTpOAMStatisticTx,
       "mplsTpOAMStatisticRx": mplsTpOAMStatisticRx,
       "mplsTpOAMStatisticRxErr": mplsTpOAMStatisticRxErr,
       "mplsTpOAMEventTable": mplsTpOAMEventTable,
       "mplsTpOAMEventEntry": mplsTpOAMEventEntry,
       "mplsTpOAMEventIndex": mplsTpOAMEventIndex,
       "mplsTpOAMEventService": mplsTpOAMEventService,
       "mplsTpOAMEventMegId": mplsTpOAMEventMegId,
       "mplsTpOAMEventMepId": mplsTpOAMEventMepId,
       "mplsTpOAMEventId": mplsTpOAMEventId,
       "mplsTpOAMEventAction": mplsTpOAMEventAction,
       "mplsTpOAMEventTime": mplsTpOAMEventTime,
       "mplsTpOAM1dmTable": mplsTpOAM1dmTable,
       "mplsTpOAM1dmEntry": mplsTpOAM1dmEntry,
       "mplsTpOAM1dmMegId": mplsTpOAM1dmMegId,
       "mplsTpOAM1dmIndex": mplsTpOAM1dmIndex,
       "mplsTpOAM1dmService": mplsTpOAM1dmService,
       "mplsTpOAM1dmMepId": mplsTpOAM1dmMepId,
       "mplsTpOAM1dmDelay": mplsTpOAM1dmDelay,
       "mplsTpOAM1dmVariation": mplsTpOAM1dmVariation,
       "mplsTpOAM1dmExp": mplsTpOAM1dmExp,
       "mplsTpOAM1dmTime": mplsTpOAM1dmTime,
       "mplsTpOAM1dmStatisticTable": mplsTpOAM1dmStatisticTable,
       "mplsTpOAM1dmStatisticEntry": mplsTpOAM1dmStatisticEntry,
       "mplsTpOAM1dmStatMegId": mplsTpOAM1dmStatMegId,
       "mplsTpOAM1dmStatMinDelay": mplsTpOAM1dmStatMinDelay,
       "mplsTpOAM1dmStatMaxDelay": mplsTpOAM1dmStatMaxDelay,
       "mplsTpOAM1dmStatAverDelay": mplsTpOAM1dmStatAverDelay,
       "mplsTpOAM1dmStatAverVariation": mplsTpOAM1dmStatAverVariation,
       "mplsTpOAMMPStatisticTable": mplsTpOAMMPStatisticTable,
       "mplsTpOAMMPStatisticEntry": mplsTpOAMMPStatisticEntry,
       "mplsTpOAMMPStatMegId": mplsTpOAMMPStatMegId,
       "mplsTpOAMMPStatPktType": mplsTpOAMMPStatPktType,
       "mplsTpOAMMPStatTx": mplsTpOAMMPStatTx,
       "mplsTpOAMMPStatRx": mplsTpOAMMPStatRx,
       "mplsTpOAMMPStatRxErr": mplsTpOAMMPStatRxErr,
       "mplsTpOAMMepEventDefectTable": mplsTpOAMMepEventDefectTable,
       "mplsTpOAMMepEventDefectEntry": mplsTpOAMMepEventDefectEntry,
       "mplsTpOAMMepEvtMegId": mplsTpOAMMepEvtMegId,
       "mplsTpOAMMepEvtId": mplsTpOAMMepEvtId,
       "mplsTpOAMMepEvtDefect": mplsTpOAMMepEvtDefect,
       "mplsTPVpwsOAMCsfTable": mplsTPVpwsOAMCsfTable,
       "mplsTPVpwsOAMCsfEntry": mplsTPVpwsOAMCsfEntry,
       "mplsTPVpwsOAMCsfVcId": mplsTPVpwsOAMCsfVcId,
       "mplsTPVpwsOAMCsfSrvState": mplsTPVpwsOAMCsfSrvState,
       "mplsTPVpwsOAMCsfClientState": mplsTPVpwsOAMCsfClientState,
       "mplsTPVpwsOAMCsfDCReason": mplsTPVpwsOAMCsfDCReason,
       "mplsTPVpwsOAMCsfClientInterval": mplsTPVpwsOAMCsfClientInterval,
       "mplsTPVpwsOAMCsfACDownEn": mplsTPVpwsOAMCsfACDownEn,
       "mplsTPVpwsOAMCsfACStatus": mplsTPVpwsOAMCsfACStatus,
       "mplsTPVpwsOAMCsfTxCSFPacket": mplsTPVpwsOAMCsfTxCSFPacket,
       "mplsVplsDynamicFdbTable": mplsVplsDynamicFdbTable,
       "mplsVplsDynamicFdbEntry": mplsVplsDynamicFdbEntry,
       "mplsVplsDynamicFdbVplsId": mplsVplsDynamicFdbVplsId,
       "mplsVplsDynamicFdbMacAddr": mplsVplsDynamicFdbMacAddr,
       "mplsVplsDynamicFdbIfName": mplsVplsDynamicFdbIfName,
       "mplsVplsDynamicFdbPeerIp": mplsVplsDynamicFdbPeerIp,
       "mplsVplsDynamicFdbTPPeerName": mplsVplsDynamicFdbTPPeerName,
       "mplsGlobal": mplsGlobal,
       "mplsGlobalCurrentStaticLabelBlockNum": mplsGlobalCurrentStaticLabelBlockNum,
       "mplsGlobalCurrentDynamicLabelBlockNum": mplsGlobalCurrentDynamicLabelBlockNum,
       "mplsGlobalConfigStaticLabelBlockNum": mplsGlobalConfigStaticLabelBlockNum,
       "mplsVplsIgspGlbInfo": mplsVplsIgspGlbInfo,
       "mplsVplsIgspGlbInfoMaxMemNum": mplsVplsIgspGlbInfoMaxMemNum,
       "mplsVplsIgspGlbInfoQuerierTcnCnt": mplsVplsIgspGlbInfoQuerierTcnCnt,
       "mplsVplsIgspGlbInfoQuerierTcnInterval": mplsVplsIgspGlbInfoQuerierTcnInterval,
       "mplsVplsIgspGlbInfoCurrMemNum": mplsVplsIgspGlbInfoCurrMemNum,
       "mplsVplsIgspCfgTable": mplsVplsIgspCfgTable,
       "mplsVplsIgspCfgEntry": mplsVplsIgspCfgEntry,
       "mplsVplsIgspVplsId": mplsVplsIgspVplsId,
       "mplsVplsIgspStatus": mplsVplsIgspStatus,
       "mplsVplsIgspFastLeave": mplsVplsIgspFastLeave,
       "mplsVplsIgspVersion": mplsVplsIgspVersion,
       "mplsVplsIgspMaxMemNum": mplsVplsIgspMaxMemNum,
       "mplsVplsIgspReportSuppr": mplsVplsIgspReportSuppr,
       "mplsVplsIgspLastMemQueryCnt": mplsVplsIgspLastMemQueryCnt,
       "mplsVplsIgspLastMemQueryInteval": mplsVplsIgspLastMemQueryInteval,
       "mplsVplsIgspRobuVari": mplsVplsIgspRobuVari,
       "mplsVplsIgspAccessGroup": mplsVplsIgspAccessGroup,
       "mplsVplsIgspQuerierStatus": mplsVplsIgspQuerierStatus,
       "mplsVplsIgspQuerierTimeout": mplsVplsIgspQuerierTimeout,
       "mplsVplsIgspQuerierAdd": mplsVplsIgspQuerierAdd,
       "mplsVplsIgspQueryInterval": mplsVplsIgspQueryInterval,
       "mplsVplsIgspQueryMaxResponTime": mplsVplsIgspQueryMaxResponTime,
       "mplsVplsIgspElectedQuerier": mplsVplsIgspElectedQuerier,
       "mplsVplsIgspQueryOperationalState": mplsVplsIgspQueryOperationalState,
       "mplsVplsIgspBundingCtrlVlan": mplsVplsIgspBundingCtrlVlan,
       "mplsVplsIgspMrouterIfTable": mplsVplsIgspMrouterIfTable,
       "mplsVplsIgspMrouterIfEntry": mplsVplsIgspMrouterIfEntry,
       "mplsVplsIgspMrouterIfVplsId": mplsVplsIgspMrouterIfVplsId,
       "mplsVplsIgspMrouterIfIndex": mplsVplsIgspMrouterIfIndex,
       "mplsVplsIgspMrouterIfRowstatus": mplsVplsIgspMrouterIfRowstatus,
       "mplsVplsMrouterPeerTable": mplsVplsMrouterPeerTable,
       "mplsVplsMrouterPeerEntry": mplsVplsMrouterPeerEntry,
       "mplsVplsMrouterPeerVplsId": mplsVplsMrouterPeerVplsId,
       "mplsVplsMrouterPeer": mplsVplsMrouterPeer,
       "mplsVplsMrouterPeerRowstatus": mplsVplsMrouterPeerRowstatus,
       "mplsVplsIgspSgIfTable": mplsVplsIgspSgIfTable,
       "mplsVplsIgspSgIfEntry": mplsVplsIgspSgIfEntry,
       "mplsVplsIgspSgIfVplsId": mplsVplsIgspSgIfVplsId,
       "mplsVplsIgspSgIfMadd": mplsVplsIgspSgIfMadd,
       "mplsVplsIgspSgIfIndex": mplsVplsIgspSgIfIndex,
       "mplsVplsIgspSgIfSourceAdd": mplsVplsIgspSgIfSourceAdd,
       "mplsVplsIgspSgIfRowstatus": mplsVplsIgspSgIfRowstatus,
       "mplsVplsIgspSgPeerTable": mplsVplsIgspSgPeerTable,
       "mplsVplsIgspSgPeerEntry": mplsVplsIgspSgPeerEntry,
       "mplsVplsIgspSgPeerVplsId": mplsVplsIgspSgPeerVplsId,
       "mplsVplsIgspSgPeerMadd": mplsVplsIgspSgPeerMadd,
       "mplsVplsIgspSgPeer": mplsVplsIgspSgPeer,
       "mplsVplsIgspSgPeerSourceAdd": mplsVplsIgspSgPeerSourceAdd,
       "mplsVplsIgspSgPeerRowstatus": mplsVplsIgspSgPeerRowstatus,
       "mplsVplsIgspMaxGrpMemIfTable": mplsVplsIgspMaxGrpMemIfTable,
       "mplsVplsIgspMaxGrpMemIfEntry": mplsVplsIgspMaxGrpMemIfEntry,
       "mplsVplsIgspMaxGrpMemIfVplsId": mplsVplsIgspMaxGrpMemIfVplsId,
       "mplsVplsIgspMaxGrpMemIfIndex": mplsVplsIgspMaxGrpMemIfIndex,
       "mplsVplsIgspIfMaxGrpMemNum": mplsVplsIgspIfMaxGrpMemNum,
       "mplsVplsIgspMaxGrpMemIfRowstatus": mplsVplsIgspMaxGrpMemIfRowstatus,
       "mplsVplsIgspIfMaxGrpMemCount": mplsVplsIgspIfMaxGrpMemCount,
       "mplsVplsMaxGrpMemPeerTable": mplsVplsMaxGrpMemPeerTable,
       "mplsVplsMaxGrpMemPeerEntry": mplsVplsMaxGrpMemPeerEntry,
       "mplsVplsMaxGrpMemPeerVplsId": mplsVplsMaxGrpMemPeerVplsId,
       "mplsVplsMaxGrpMemPeer": mplsVplsMaxGrpMemPeer,
       "mplsVplsPeerMaxGrpMemNum": mplsVplsPeerMaxGrpMemNum,
       "mplsVplsMaxGrpMemPeerRowstatus": mplsVplsMaxGrpMemPeerRowstatus,
       "mplsVplsPeerMaxGrpMemCount": mplsVplsPeerMaxGrpMemCount,
       "mplsVplsShowMrouterIfTable": mplsVplsShowMrouterIfTable,
       "mplsVplsShowMrouterIfEntry": mplsVplsShowMrouterIfEntry,
       "mplsVplsShowMrouterIfVplsId": mplsVplsShowMrouterIfVplsId,
       "mplsVplsShowMrouterIfIndex": mplsVplsShowMrouterIfIndex,
       "mplsVplsShowMrouterIfName": mplsVplsShowMrouterIfName,
       "mplsVplsShowMrouterIfMode": mplsVplsShowMrouterIfMode,
       "mplsVplsShowMrouterIfUptime": mplsVplsShowMrouterIfUptime,
       "mplsVplsShowMrouterIfExprietime": mplsVplsShowMrouterIfExprietime,
       "mplsVplsShowMrouterPeerTable": mplsVplsShowMrouterPeerTable,
       "mplsVplsShowMrouterPeerEntry": mplsVplsShowMrouterPeerEntry,
       "mplsVplsShowMrouterPeerVplsId": mplsVplsShowMrouterPeerVplsId,
       "mplsVplsShowMrouterPeer": mplsVplsShowMrouterPeer,
       "mplsVplsShowMrouterPeerName": mplsVplsShowMrouterPeerName,
       "mplsVplsShowMrouterPeerMode": mplsVplsShowMrouterPeerMode,
       "mplsVplsShowMrouterPeerUptime": mplsVplsShowMrouterPeerUptime,
       "mplsVplsShowMrouterPeerExprietime": mplsVplsShowMrouterPeerExprietime,
       "mplsVplsShowGroupIfTable": mplsVplsShowGroupIfTable,
       "mplsVplsShowGroupIfEntry": mplsVplsShowGroupIfEntry,
       "mplsVplsShowGroupIfVplsId": mplsVplsShowGroupIfVplsId,
       "mplsVplsShowGroupIfIndex": mplsVplsShowGroupIfIndex,
       "mplsVplsShowGroupIfAddr": mplsVplsShowGroupIfAddr,
       "mplsVplsShowGroupIfName": mplsVplsShowGroupIfName,
       "mplsVplsShowGroupIfUptime": mplsVplsShowGroupIfUptime,
       "mplsVplsShowGroupIfExprietime": mplsVplsShowGroupIfExprietime,
       "mplsVplsShowGroupIfLastReporter": mplsVplsShowGroupIfLastReporter,
       "mplsVplsShowGroupPeerTable": mplsVplsShowGroupPeerTable,
       "mplsVplsShowGroupPeerEntry": mplsVplsShowGroupPeerEntry,
       "mplsVplsShowGroupPeerVplsId": mplsVplsShowGroupPeerVplsId,
       "mplsVplsShowGroupPeer": mplsVplsShowGroupPeer,
       "mplsVplsShowGroupPeerAddr": mplsVplsShowGroupPeerAddr,
       "mplsVplsShowGroupPeerName": mplsVplsShowGroupPeerName,
       "mplsVplsShowGroupPeerUptime": mplsVplsShowGroupPeerUptime,
       "mplsVplsShowGroupPeerExprietime": mplsVplsShowGroupPeerExprietime,
       "mplsVplsShowGroupPeerLastReporter": mplsVplsShowGroupPeerLastReporter,
       "mplsInterfaceMplsVpwsPolicyTable": mplsInterfaceMplsVpwsPolicyTable,
       "mplsInterfaceMplsVpwsPolicyEntry": mplsInterfaceMplsVpwsPolicyEntry,
       "mplsInterfaceMplsVpwsPolicyIfIndex": mplsInterfaceMplsVpwsPolicyIfIndex,
       "mplsInterfaceMplsVpwsPolicyVcName": mplsInterfaceMplsVpwsPolicyVcName,
       "mplsInterfaceMplsVpwsPolicyName": mplsInterfaceMplsVpwsPolicyName,
       "mplsInterfaceMplsVpwsPolicyStatis": mplsInterfaceMplsVpwsPolicyStatis,
       "mplsInterfaceMplsVpwsPolicyRowStatus": mplsInterfaceMplsVpwsPolicyRowStatus,
       "mplsTpOAMLmmTable": mplsTpOAMLmmTable,
       "mplsTpOAMLmmEntry": mplsTpOAMLmmEntry,
       "oamLmmIndex": oamLmmIndex,
       "oamLmmServiceType": oamLmmServiceType,
       "oamLmmServiceName": oamLmmServiceName,
       "oamLmmRepeat": oamLmmRepeat,
       "oamLmmInterval": oamLmmInterval,
       "oamLmmRowstatus": oamLmmRowstatus,
       "mplsTpOAMLmDualTable": mplsTpOAMLmDualTable,
       "mplsTpOAMLmDualEntry": mplsTpOAMLmDualEntry,
       "mplsTpOAMLmDualMegId": mplsTpOAMLmDualMegId,
       "mplsTpOAMLmDualIndex": mplsTpOAMLmDualIndex,
       "mplsTpOAMLmDualService": mplsTpOAMLmDualService,
       "mplsTpOAMLmDualMepId": mplsTpOAMLmDualMepId,
       "mplsTpOAMLmDualExp": mplsTpOAMLmDualExp,
       "mplsTpOAMLmDualLocalLoss": mplsTpOAMLmDualLocalLoss,
       "mplsTpOAMLmDualLocalLossRatio": mplsTpOAMLmDualLocalLossRatio,
       "mplsTpOAMLmDualRemoteLoss": mplsTpOAMLmDualRemoteLoss,
       "mplsTpOAMLmDualRemoteLossRatio": mplsTpOAMLmDualRemoteLossRatio,
       "mplsTpOAMLmDualLossTable": mplsTpOAMLmDualLossTable,
       "mplsTpOAMLmDualLossEntry": mplsTpOAMLmDualLossEntry,
       "mplsTpOAMLmDualLossMegId": mplsTpOAMLmDualLossMegId,
       "mplsTpOAMLmDualLossMepId": mplsTpOAMLmDualLossMepId,
       "mplsTpOAMLmDualLossStartTime": mplsTpOAMLmDualLossStartTime,
       "mplsTpOAMLmDualLossEndTime": mplsTpOAMLmDualLossEndTime,
       "mplsTpOAMLmDualStatusInterval": mplsTpOAMLmDualStatusInterval,
       "mplsTpOAMLmDualMaxLocalLoss": mplsTpOAMLmDualMaxLocalLoss,
       "mplsTpOAMLmDualMaxLocalLossRatio": mplsTpOAMLmDualMaxLocalLossRatio,
       "mplsTpOAMLmDualMinLocalLoss": mplsTpOAMLmDualMinLocalLoss,
       "mplsTpOAMLmDualMinLocalLossRatio": mplsTpOAMLmDualMinLocalLossRatio,
       "mplsTpOAMLmDualMaxRemoteLoss": mplsTpOAMLmDualMaxRemoteLoss,
       "mplsTpOAMLmDualMaxRemoteLossRatio": mplsTpOAMLmDualMaxRemoteLossRatio,
       "mplsTpOAMLmDualMinRemoteLoss": mplsTpOAMLmDualMinRemoteLoss,
       "mplsTpOAMLmDualMinRemoteLossRatio": mplsTpOAMLmDualMinRemoteLossRatio,
       "mplsTpOAMLmSingleTable": mplsTpOAMLmSingleTable,
       "mplsTpOAMLmSingleEntry": mplsTpOAMLmSingleEntry,
       "mplsTpOAMLmSingleMegId": mplsTpOAMLmSingleMegId,
       "mplsTpOAMLmSingleIndex": mplsTpOAMLmSingleIndex,
       "mplsTpOAMLmSingleService": mplsTpOAMLmSingleService,
       "mplsTpOAMLmSingleMepId": mplsTpOAMLmSingleMepId,
       "mplsTpOAMLmSingleExp": mplsTpOAMLmSingleExp,
       "mplsTpOAMLmSingleLocalLoss": mplsTpOAMLmSingleLocalLoss,
       "mplsTpOAMLmSingleLocalLossRatio": mplsTpOAMLmSingleLocalLossRatio,
       "mplsTpOAMLmSingleRemoteLoss": mplsTpOAMLmSingleRemoteLoss,
       "mplsTpOAMLmSingleRemoteLossRatio": mplsTpOAMLmSingleRemoteLossRatio,
       "mplsTpOAMLmSingleLossTable": mplsTpOAMLmSingleLossTable,
       "mplsTpOAMLmSingleLossEntry": mplsTpOAMLmSingleLossEntry,
       "mplsTpOAMLmSingleLossMegId": mplsTpOAMLmSingleLossMegId,
       "mplsTpOAMLmSingleLossMepId": mplsTpOAMLmSingleLossMepId,
       "mplsTpOAMLmSingleLossStartTime": mplsTpOAMLmSingleLossStartTime,
       "mplsTpOAMLmSingleLossEndTime": mplsTpOAMLmSingleLossEndTime,
       "mplsTpOAMLmSingleMaxLocalLoss": mplsTpOAMLmSingleMaxLocalLoss,
       "mplsTpOAMLmSingleMaxLocalLossRatio": mplsTpOAMLmSingleMaxLocalLossRatio,
       "mplsTpOAMLmSingleMinLocalLoss": mplsTpOAMLmSingleMinLocalLoss,
       "mplsTpOAMLmSingleMinLocalLossRatio": mplsTpOAMLmSingleMinLocalLossRatio,
       "mplsTpOAMLmSingleMaxRemoteLoss": mplsTpOAMLmSingleMaxRemoteLoss,
       "mplsTpOAMLmSingleMaxRemoteLossRatio": mplsTpOAMLmSingleMaxRemoteLossRatio,
       "mplsTpOAMLmSingleMinRemoteLoss": mplsTpOAMLmSingleMinRemoteLoss,
       "mplsTpOAMLmSingleMinRemoteLossRatio": mplsTpOAMLmSingleMinRemoteLossRatio,
       "mplsTpOAMSingleLMCacheTable": mplsTpOAMSingleLMCacheTable,
       "mplsTpOAMSingleLMCacheEntry": mplsTpOAMSingleLMCacheEntry,
       "mplsTpOAMSingleLMCacheMegId": mplsTpOAMSingleLMCacheMegId,
       "mplsTpOAMSingleLMCacheIndex": mplsTpOAMSingleLMCacheIndex,
       "mplsTpOAMSingleLMCacheExpValue": mplsTpOAMSingleLMCacheExpValue,
       "mplsTpOAMSingleLMCacheLocalLoss": mplsTpOAMSingleLMCacheLocalLoss,
       "mplsTpOAMSingleLMCacheLocalLossRatio": mplsTpOAMSingleLMCacheLocalLossRatio,
       "mplsTpOAMSingleLMCacheRemoteLoss": mplsTpOAMSingleLMCacheRemoteLoss,
       "mplsTpOAMSingleLMCacheRemoteLossRatio": mplsTpOAMSingleLMCacheRemoteLossRatio,
       "mplsTpOAMSingleLMCacheTime": mplsTpOAMSingleLMCacheTime,
       "mplsTrapGroup": mplsTrapGroup,
       "tpOAMEventTrap": tpOAMEventTrap,
       "mplsTunnelSwitch": mplsTunnelSwitch,
       "mplsTPVpwsSwitch": mplsTPVpwsSwitch,
       "mplsVplsTPPeerSwitch": mplsVplsTPPeerSwitch,
       "mplsVpwsStateChange": mplsVpwsStateChange,
       "mplsVplsPeerStateChange": mplsVplsPeerStateChange,
       "mplsVpwsOAMCsfStateChange": mplsVpwsOAMCsfStateChange,
       "tpOAMSingleLmLocalLossTrap": tpOAMSingleLmLocalLossTrap,
       "tpOAMSingleLmLocalLossClearTrap": tpOAMSingleLmLocalLossClearTrap,
       "tpOAMSingleLmRemoteLossTrap": tpOAMSingleLmRemoteLossTrap,
       "tpOAMSingleLmRemoteLossClearTrap": tpOAMSingleLmRemoteLossClearTrap,
       "smartlink": smartlink,
       "smartlinkRelayEnable": smartlinkRelayEnable,
       "smartlinkClearStatistic": smartlinkClearStatistic,
       "smartlinkGroupTable": smartlinkGroupTable,
       "smartlinkGroupEntry": smartlinkGroupEntry,
       "smartlinkGroupindex": smartlinkGroupindex,
       "smartlinkGroupRowStatus": smartlinkGroupRowStatus,
       "smartlinkGroupMasterIntf": smartlinkGroupMasterIntf,
       "smartlinkGroupMasterDnCnt": smartlinkGroupMasterDnCnt,
       "smartlinkGroupMasterlstDnTime": smartlinkGroupMasterlstDnTime,
       "smartlinkGroupMasterflhCnt": smartlinkGroupMasterflhCnt,
       "smartlinkGroupMasterlstflhTime": smartlinkGroupMasterlstflhTime,
       "smartlinkGroupSlaveIntf": smartlinkGroupSlaveIntf,
       "smartlinkGroupSlaveDnCnt": smartlinkGroupSlaveDnCnt,
       "smartlinkGroupSlavelstDnTime": smartlinkGroupSlavelstDnTime,
       "smartlinkGroupSlaveflhCnt": smartlinkGroupSlaveflhCnt,
       "smartlinkGroupSlavelstflhTime": smartlinkGroupSlavelstflhTime,
       "smartlinkGroupMstpInstance": smartlinkGroupMstpInstance,
       "smartlinkGroupLoadBalanceInstance": smartlinkGroupLoadBalanceInstance,
       "smartlinkGroupRestoreEnable": smartlinkGroupRestoreEnable,
       "smartlinkGroupRestoreTime": smartlinkGroupRestoreTime,
       "smartlinkGroupControlVlan": smartlinkGroupControlVlan,
       "smartlinkGroupControlVlanPassword": smartlinkGroupControlVlanPassword,
       "smartlinkGroupEnable": smartlinkGroupEnable,
       "smartlinkRcvFlushintfTable": smartlinkRcvFlushintfTable,
       "smartlinkRcvFlushintfEntry": smartlinkRcvFlushintfEntry,
       "smartlinkRcvFlushintfindex": smartlinkRcvFlushintfindex,
       "smartlinkRcvFlushintfVlan": smartlinkRcvFlushintfVlan,
       "smartlinkRcvFlushintfVlanPassword": smartlinkRcvFlushintfVlanPassword,
       "martlinkRcvFlushintfSetState": martlinkRcvFlushintfSetState,
       "smartlinkRcvFlushPktNum": smartlinkRcvFlushPktNum,
       "smartlinkProcFlushPktNum": smartlinkProcFlushPktNum,
       "flowctrl": flowctrl,
       "flowctrlSendEnableTable": flowctrlSendEnableTable,
       "flowctrlSendEnableEntry": flowctrlSendEnableEntry,
       "flowctrlSendEnable": flowctrlSendEnable,
       "flowctrlReceiveEnableTable": flowctrlReceiveEnableTable,
       "flowctrlReceiveEnableEntry": flowctrlReceiveEnableEntry,
       "flowctrlReceiveEnable": flowctrlReceiveEnable,
       "cputraffic": cputraffic,
       "cputrafficLimitTotalRate": cputrafficLimitTotalRate,
       "cputrafficLimitReasonRate": cputrafficLimitReasonRate,
       "arpReasonRate": arpReasonRate,
       "bpduReasonRate": bpduReasonRate,
       "cfmReasonRate": cfmReasonRate,
       "dhcpReasonRate": dhcpReasonRate,
       "eapolReasonRate": eapolReasonRate,
       "erpsReasonRate": erpsReasonRate,
       "sflowIngressReasonRate": sflowIngressReasonRate,
       "icmpRedirectReasonRate": icmpRedirectReasonRate,
       "igmpReasonRate": igmpReasonRate,
       "ipOptionReasonRate": ipOptionReasonRate,
       "ipDaReasonRate": ipDaReasonRate,
       "ldpReasonRate": ldpReasonRate,
       "macSaMismatchReasonRate": macSaMismatchReasonRate,
       "mcastRpfFailReasonRate": mcastRpfFailReasonRate,
       "mplsTtlFailReasonRate": mplsTtlFailReasonRate,
       "mtuDontFragReasonRate": mtuDontFragReasonRate,
       "mtuFragReasonRate": mtuFragReasonRate,
       "ospfReasonRate": ospfReasonRate,
       "pimReasonRate": pimReasonRate,
       "portSecurityDiscardReasonRate": portSecurityDiscardReasonRate,
       "ptpReasonRate": ptpReasonRate,
       "ripReasonRate": ripReasonRate,
       "rsvpReasonRate": rsvpReasonRate,
       "slowProtoReasonRate": slowProtoReasonRate,
       "smartLinkReasonRate": smartLinkReasonRate,
       "ucastIpTtlFailReasonRate": ucastIpTtlFailReasonRate,
       "vlanSecurityDiscardReasonRate": vlanSecurityDiscardReasonRate,
       "vrrpReasonRate": vrrpReasonRate,
       "mldReasonRate": mldReasonRate,
       "sflowEgressReasonRate": sflowEgressReasonRate,
       "udldReasonRate": udldReasonRate,
       "fwdToCpuReasonRate": fwdToCpuReasonRate,
       "mplsTpPwOamReasonRate": mplsTpPwOamReasonRate,
       "dot1xMacBypassReasonRate": dot1xMacBypassReasonRate,
       "cputrafficLimitReasonClass": cputrafficLimitReasonClass,
       "arpReasonClass": arpReasonClass,
       "bpduReasonClass": bpduReasonClass,
       "cfmReasonClass": cfmReasonClass,
       "dhcpReasonClass": dhcpReasonClass,
       "eapolReasonClass": eapolReasonClass,
       "erpsReasonClass": erpsReasonClass,
       "sflowIngressReasonClass": sflowIngressReasonClass,
       "icmpRedirectReasonClass": icmpRedirectReasonClass,
       "igmpReasonClass": igmpReasonClass,
       "ipOptionReasonClass": ipOptionReasonClass,
       "ipDaReasonClass": ipDaReasonClass,
       "ldpReasonClass": ldpReasonClass,
       "macSaMismatchReasonClass": macSaMismatchReasonClass,
       "mcastRpfFailReasonClass": mcastRpfFailReasonClass,
       "mplsTtlFailReasonClass": mplsTtlFailReasonClass,
       "mtuDontFragReasonClass": mtuDontFragReasonClass,
       "mtuFragReasonClass": mtuFragReasonClass,
       "ospfReasonClass": ospfReasonClass,
       "pimReasonClass": pimReasonClass,
       "portSecurityDiscardReasonClass": portSecurityDiscardReasonClass,
       "ptpReasonClass": ptpReasonClass,
       "ripReasonClass": ripReasonClass,
       "rsvpReasonClass": rsvpReasonClass,
       "slowProtoReasonClass": slowProtoReasonClass,
       "smartLinkReasonClass": smartLinkReasonClass,
       "ucastIpTtlFailReasonClass": ucastIpTtlFailReasonClass,
       "vlanSecurityDiscardReasonClass": vlanSecurityDiscardReasonClass,
       "vrrpReasonClass": vrrpReasonClass,
       "mldReasonClass": mldReasonClass,
       "sflowEgressReasonClass": sflowEgressReasonClass,
       "udldReasonClass": udldReasonClass,
       "mplsTpPwOamReasonClass": mplsTpPwOamReasonClass,
       "dot1xMacBypassReasonClass": dot1xMacBypassReasonClass,
       "portisolate": portisolate,
       "portIsolateMode": portIsolateMode,
       "phyloopback": phyloopback,
       "phyloopbackTable": phyloopbackTable,
       "phyloopbackEntry": phyloopbackEntry,
       "phyloopbackIfindex": phyloopbackIfindex,
       "phyloopbackType": phyloopbackType,
       "phyloopbackDstIfindex": phyloopbackDstIfindex,
       "phyloopbackMacAddrSwap": phyloopbackMacAddrSwap,
       "phyloopbackRowStatus": phyloopbackRowStatus,
       "monitorlink": monitorlink,
       "monitorLinkRecoverTime": monitorLinkRecoverTime,
       "monitorLinkGroupTable": monitorLinkGroupTable,
       "monitorLinkGroupEntry": monitorLinkGroupEntry,
       "groupIndex": groupIndex,
       "groupStatus": groupStatus,
       "groupRowStatus": groupRowStatus,
       "monitorLinkMemberTable": monitorLinkMemberTable,
       "monitorLinkMemberEntry": monitorLinkMemberEntry,
       "memberLinkType": memberLinkType,
       "memberIndex": memberIndex,
       "memberType": memberType,
       "memberIdentify": memberIdentify,
       "memberUptime": memberUptime,
       "memberDowntime": memberDowntime,
       "memberUpCounter": memberUpCounter,
       "memberDownCounter": memberDownCounter,
       "memberRowStatus": memberRowStatus,
       "udld": udld,
       "udldGlobalState": udldGlobalState,
       "udldMsgInterval": udldMsgInterval,
       "udldOperate": udldOperate,
       "udldIfTable": udldIfTable,
       "udldIfEntry": udldIfEntry,
       "udldIfIndex": udldIfIndex,
       "udldIfName": udldIfName,
       "udldState": udldState,
       "udldLinkState": udldLinkState,
       "policyBasedRouting": policyBasedRouting,
       "pbrTable": pbrTable,
       "pbrEntry": pbrEntry,
       "pbrIfIndex": pbrIfIndex,
       "pbrPolicyRmapName": pbrPolicyRmapName,
       "pbrRowStatus": pbrRowStatus,
       "ddos": ddos,
       "ddosICMPIntercept": ddosICMPIntercept,
       "ddosUDPIntercept": ddosUDPIntercept,
       "ddosTCPIntercept": ddosTCPIntercept,
       "ddosSmurfIntercept": ddosSmurfIntercept,
       "ddosSmalpktIntercept": ddosSmalpktIntercept,
       "ddosFraggleIntercept": ddosFraggleIntercept,
       "ddosIpeqIntercept": ddosIpeqIntercept,
       "ddosMaceqIntercept": ddosMaceqIntercept,
       "ddosSmalPktStatistic": ddosSmalPktStatistic,
       "ddosICMPStatistic": ddosICMPStatistic,
       "ddosSmurfStatistic": ddosSmurfStatistic,
       "ddosTCPStatistic": ddosTCPStatistic,
       "ddosFraggleStatistic": ddosFraggleStatistic,
       "ddosUDPStatistic": ddosUDPStatistic,
       "ddosClearStatistic": ddosClearStatistic,
       "ddosmgifSmalPktStatistic": ddosmgifSmalPktStatistic,
       "ddosmgifICMPStatistic": ddosmgifICMPStatistic,
       "ddosmgifSmurfStatistic": ddosmgifSmurfStatistic,
       "ddosmgifTCPStatistic": ddosmgifTCPStatistic,
       "ddosmgifFraggleStatistic": ddosmgifFraggleStatistic,
       "ddosmgifUDPStatistic": ddosmgifUDPStatistic,
       "l2ping": l2ping,
       "l2PingResponseTable": l2PingResponseTable,
       "l2PingResponseEntry": l2PingResponseEntry,
       "l2pingResponseIfindex": l2pingResponseIfindex,
       "l2pingResponseEnable": l2pingResponseEnable,
       "ipg": ipg,
       "syncE": syncE,
       "syncEDeviceClockID": syncEDeviceClockID,
       "syncEGlbEnable": syncEGlbEnable,
       "syncESsmGlbEnable": syncESsmGlbEnable,
       "syncEDeviceType": syncEDeviceType,
       "syncELocalQuality": syncELocalQuality,
       "syncELockedQuality": syncELockedQuality,
       "syncELocalPriority": syncELocalPriority,
       "syncESelectedInterface": syncESelectedInterface,
       "syncEExtensionEnable": syncEExtensionEnable,
       "syncEClockState": syncEClockState,
       "syncEOptionMode": syncEOptionMode,
       "syncESwitchForceIF": syncESwitchForceIF,
       "syncEIfTable": syncEIfTable,
       "syncEIfEntry": syncEIfEntry,
       "syncEIfIndex": syncEIfIndex,
       "syncEIfSyncEEnable": syncEIfSyncEEnable,
       "syncEIfSyncEPduMode": syncEIfSyncEPduMode,
       "syncEIfPortPriority": syncEIfPortPriority,
       "syncEIfPortUp": syncEIfPortUp,
       "syncEIfPortQuality": syncEIfPortQuality,
       "syncEIfSendTimerState": syncEIfSendTimerState,
       "syncEIfTimeoutTimerState": syncEIfTimeoutTimerState,
       "syncEIfSendQuality": syncEIfSendQuality,
       "syncEIFDNUgroup": syncEIFDNUgroup,
       "syncEIfReplaceClockId": syncEIfReplaceClockId,
       "syncEIfForcibleRxQL": syncEIfForcibleRxQL,
       "syncEIfForcibleTxQL": syncEIfForcibleTxQL,
       "syncEClockRecoverySelect": syncEClockRecoverySelect,
       "syncENotifications": syncENotifications,
       "syncEStateChange": syncEStateChange,
       "arpConfig": arpConfig,
       "arpGratuitousRecvEn": arpGratuitousRecvEn,
       "arpAllEntries": arpAllEntries,
       "arpAllIncompleteEntries": arpAllIncompleteEntries,
       "cfm": cfm,
       "cfmEn": cfmEn,
       "cfmLinktraceCacheEn": cfmLinktraceCacheEn,
       "cfmLinktraceCacheSize": cfmLinktraceCacheSize,
       "cfmLinktraceHoldTime": cfmLinktraceHoldTime,
       "cfmMipFdbDatabaseSize": cfmMipFdbDatabaseSize,
       "cfmMipFdbHoldTime": cfmMipFdbHoldTime,
       "cfmSFReasonLoc": cfmSFReasonLoc,
       "cfmSFReasonRxRdi": cfmSFReasonRxRdi,
       "cfmSFReasonAisDefect": cfmSFReasonAisDefect,
       "cfmMDErrorClearLevel": cfmMDErrorClearLevel,
       "cfmMipFdbClear": cfmMipFdbClear,
       "cfmLinkTraceCacheClear": cfmLinkTraceCacheClear,
       "cfmMDTable": cfmMDTable,
       "cfmMDEntry": cfmMDEntry,
       "cfmMDLevel": cfmMDLevel,
       "cfmMDName": cfmMDName,
       "cfmMDRowStatus": cfmMDRowStatus,
       "cfmMATable": cfmMATable,
       "cfmMAEntry": cfmMAEntry,
       "cfmMAIndex": cfmMAIndex,
       "cfmMAVlan": cfmMAVlan,
       "cfmMAName": cfmMAName,
       "cfmMARowStatus": cfmMARowStatus,
       "cfmMACCEn": cfmMACCEn,
       "cfmMACCVlanPriority": cfmMACCVlanPriority,
       "cfmMAErrorWriteEn": cfmMAErrorWriteEn,
       "cfmMAAisSuppressAlarm": cfmMAAisSuppressAlarm,
       "cfmMepTable": cfmMepTable,
       "cfmMepEntry": cfmMepEntry,
       "cfmMepLevel": cfmMepLevel,
       "cfmMepVlan": cfmMepVlan,
       "cfmMepId": cfmMepId,
       "cfmMepDirection": cfmMepDirection,
       "cfmMepInterval": cfmMepInterval,
       "cfmMepIfIndex": cfmMepIfIndex,
       "cfmMepRowStatus": cfmMepRowStatus,
       "cfmMepRdi": cfmMepRdi,
       "cfmMepAisCondition": cfmMepAisCondition,
       "cfmRMepTable": cfmRMepTable,
       "cfmRMepEntry": cfmRMepEntry,
       "cfmRMepLevel": cfmRMepLevel,
       "cfmRMepVlan": cfmRMepVlan,
       "cfmRMepId": cfmRMepId,
       "cfmRMepIfIndex": cfmRMepIfIndex,
       "cfmRMepAddr": cfmRMepAddr,
       "cfmRMepFlag": cfmRMepFlag,
       "cfmRMepRowStatus": cfmRMepRowStatus,
       "cfmRMepRdi": cfmRMepRdi,
       "cfmMipTable": cfmMipTable,
       "cfmMipEntry": cfmMipEntry,
       "cfmMipLevel": cfmMipLevel,
       "cfmMipVlan": cfmMipVlan,
       "cfmMipIfIndex": cfmMipIfIndex,
       "cfmMipRowStatus": cfmMipRowStatus,
       "cfmAisServerTable": cfmAisServerTable,
       "cfmAisServerEntry": cfmAisServerEntry,
       "cfmAisServerIfIndex": cfmAisServerIfIndex,
       "cfmAisServerLevel": cfmAisServerLevel,
       "cfmAisServerInterval": cfmAisServerInterval,
       "cfmAisServerRowStatus": cfmAisServerRowStatus,
       "cfmAisTable": cfmAisTable,
       "cfmAisEntry": cfmAisEntry,
       "cfmAisLevel": cfmAisLevel,
       "cfmAisVlan": cfmAisVlan,
       "cfmAisMepId": cfmAisMepId,
       "cfmAisIfIndex": cfmAisIfIndex,
       "cfmAisConfigLoc": cfmAisConfigLoc,
       "cfmAisConfigMismerge": cfmAisConfigMismerge,
       "cfmAisConfigUnexpectedMep": cfmAisConfigUnexpectedMep,
       "cfmAisConfigUnexpectedMegLevel": cfmAisConfigUnexpectedMegLevel,
       "cfmAisConfigUnexpectedPeriod": cfmAisConfigUnexpectedPeriod,
       "cfmAisPacketType": cfmAisPacketType,
       "cfmAisDestAddr": cfmAisDestAddr,
       "cfmAisDestLevel": cfmAisDestLevel,
       "cfmAisRowStatus": cfmAisRowStatus,
       "cfmAisDetectLoc": cfmAisDetectLoc,
       "cfmAisDetectMismerge": cfmAisDetectMismerge,
       "cfmAisDetectUnexpectedMep": cfmAisDetectUnexpectedMep,
       "cfmAisDetectUnexpectedMegLevel": cfmAisDetectUnexpectedMegLevel,
       "cfmAisDetectUnexpectedPeriod": cfmAisDetectUnexpectedPeriod,
       "cfmLoopbackTable": cfmLoopbackTable,
       "cfmLoopbackEntry": cfmLoopbackEntry,
       "cfmLoopbackIndex": cfmLoopbackIndex,
       "cfmLoopbackLevel": cfmLoopbackLevel,
       "cfmLoopbackVlan": cfmLoopbackVlan,
       "cfmLoopbackMepId": cfmLoopbackMepId,
       "cfmLoopbackFrameType": cfmLoopbackFrameType,
       "cfmLoopbackRMepId": cfmLoopbackRMepId,
       "cfmLoopbackRmac": cfmLoopbackRmac,
       "cfmLoopbackRepeat": cfmLoopbackRepeat,
       "cfmLoopbackExp": cfmLoopbackExp,
       "cfmLoopbackTimeout": cfmLoopbackTimeout,
       "cfmLoopbackRowStatus": cfmLoopbackRowStatus,
       "cfmLoopbackOperState": cfmLoopbackOperState,
       "cfmLoopbackSuccessRate": cfmLoopbackSuccessRate,
       "cfmLinktraceTable": cfmLinktraceTable,
       "cfmLinktraceEntry": cfmLinktraceEntry,
       "cfmLinktraceIndex": cfmLinktraceIndex,
       "cfmLinktraceLevel": cfmLinktraceLevel,
       "cfmLinktraceVlan": cfmLinktraceVlan,
       "cfmLinktraceMepId": cfmLinktraceMepId,
       "cfmLinktraceRMepId": cfmLinktraceRMepId,
       "cfmLinktraceRmac": cfmLinktraceRmac,
       "cfmLinktraceTtl": cfmLinktraceTtl,
       "cfmLinktraceExp": cfmLinktraceExp,
       "cfmLinktraceTimeout": cfmLinktraceTimeout,
       "cfmLinktraceEgressIdTLV": cfmLinktraceEgressIdTLV,
       "cfmLinktraceSenderIdTLV": cfmLinktraceSenderIdTLV,
       "cfmLinktraceOrganizationSpecTLV": cfmLinktraceOrganizationSpecTLV,
       "cfmLinktraceRowStatus": cfmLinktraceRowStatus,
       "cfmLinktraceOperState": cfmLinktraceOperState,
       "cfmMipFdbTable": cfmMipFdbTable,
       "cfmMipFdbEntry": cfmMipFdbEntry,
       "cfmMipFdbVlan": cfmMipFdbVlan,
       "cfmMipFdbMacAddress": cfmMipFdbMacAddress,
       "cfmMipFdbLevel": cfmMipFdbLevel,
       "cfmMipFdbIfIndex": cfmMipFdbIfIndex,
       "cfmMipFdbAgeTime": cfmMipFdbAgeTime,
       "cfmErrorTable": cfmErrorTable,
       "cfmErrorEntry": cfmErrorEntry,
       "cfmErrorLevel": cfmErrorLevel,
       "cfmErrorVlan": cfmErrorVlan,
       "cfmErrorMepId": cfmErrorMepId,
       "cfmErrorIndex": cfmErrorIndex,
       "cfmErrorRmac": cfmErrorRmac,
       "cfmErrorReason": cfmErrorReason,
       "cfmErrorReportTime": cfmErrorReportTime,
       "cfmLTCacheTable": cfmLTCacheTable,
       "cfmLTCacheEntry": cfmLTCacheEntry,
       "cfmLTCacheIndex": cfmLTCacheIndex,
       "cfmLTCacheLevel": cfmLTCacheLevel,
       "cfmLTCacheVlan": cfmLTCacheVlan,
       "cfmLTCacheTargetMacAddress": cfmLTCacheTargetMacAddress,
       "cfmLTCacheStartTime": cfmLTCacheStartTime,
       "cfmLTCacheAge": cfmLTCacheAge,
       "cfmLTCacheHops": cfmLTCacheHops,
       "cfmLTCacheTTL": cfmLTCacheTTL,
       "cfmLTCacheForwarded": cfmLTCacheForwarded,
       "cfmLTCacheTerminalMEP": cfmLTCacheTerminalMEP,
       "cfmLTCacheRelayAction": cfmLTCacheRelayAction,
       "cfmLTCacheIngressAction": cfmLTCacheIngressAction,
       "cfmLTCacheIngressMacAddress": cfmLTCacheIngressMacAddress,
       "cfmLTCacheIngressIfName": cfmLTCacheIngressIfName,
       "cfmLTCacheEgressAction": cfmLTCacheEgressAction,
       "cfmLTCacheEgressMacAddress": cfmLTCacheEgressMacAddress,
       "cfmLTCacheEgressIfName": cfmLTCacheEgressIfName,
       "cfmLTCacheLastEgressID": cfmLTCacheLastEgressID,
       "cfmLTCacheNextEgressID": cfmLTCacheNextEgressID,
       "cfmLTResultTable": cfmLTResultTable,
       "cfmLTResultEntry": cfmLTResultEntry,
       "cfmLTResultHops": cfmLTResultHops,
       "cfmLTResultTTL": cfmLTResultTTL,
       "cfmLTResultForwarded": cfmLTResultForwarded,
       "cfmLTResultTerminalMEP": cfmLTResultTerminalMEP,
       "cfmLTResultRelayAction": cfmLTResultRelayAction,
       "cfmLTResultIngressAction": cfmLTResultIngressAction,
       "cfmLTResultIngressMacAddress": cfmLTResultIngressMacAddress,
       "cfmLTResultIngressIfName": cfmLTResultIngressIfName,
       "cfmLTResultEgressAction": cfmLTResultEgressAction,
       "cfmLTResultEgressMacAddress": cfmLTResultEgressMacAddress,
       "cfmLTResultEgressIfName": cfmLTResultEgressIfName,
       "cfmLTResultLastEgressID": cfmLTResultLastEgressID,
       "cfmLTResultNextEgressID": cfmLTResultNextEgressID,
       "cfmTrap": cfmTrap,
       "cfmErrorTrap": cfmErrorTrap,
       "efm": efm,
       "efmOAMIfTable": efmOAMIfTable,
       "efmOAMIfEntry": efmOAMIfEntry,
       "efmOAMIfIndex": efmOAMIfIndex,
       "efmOAMEnable": efmOAMEnable,
       "efmOAMMode": efmOAMMode,
       "efmOAMMinRate": efmOAMMinRate,
       "efmOAMMaxRate": efmOAMMaxRate,
       "efmOAMLinkMonitorEn": efmOAMLinkMonitorEn,
       "efmOAMLinkMonitorSupported": efmOAMLinkMonitorSupported,
       "efmOAMLinkMonitorFrameHigh": efmOAMLinkMonitorFrameHigh,
       "efmOAMLinkMonitorFrameLow": efmOAMLinkMonitorFrameLow,
       "efmOAMLinkMonitorFrameWin": efmOAMLinkMonitorFrameWin,
       "efmOAMLinkMonitorFrameSecHigh": efmOAMLinkMonitorFrameSecHigh,
       "efmOAMLinkMonitorFrameSecLow": efmOAMLinkMonitorFrameSecLow,
       "efmOAMLinkMonitorFrameSecWin": efmOAMLinkMonitorFrameSecWin,
       "efmOAMLinkMonitorHighThreAction": efmOAMLinkMonitorHighThreAction,
       "efmOAMRemoteLoopbackSupported": efmOAMRemoteLoopbackSupported,
       "efmOAMRemoteLoopbackTimeout": efmOAMRemoteLoopbackTimeout,
       "efmOAMRemoteLoopbackState": efmOAMRemoteLoopbackState,
       "efmOAMTimeout": efmOAMTimeout,
       "efmOAMRemoteFailureCriticalEvent": efmOAMRemoteFailureCriticalEvent,
       "efmOAMRemoteFailureDyingGasp": efmOAMRemoteFailureDyingGasp,
       "efmOAMRemoteFailureLinkFailure": efmOAMRemoteFailureLinkFailure,
       "efmOAMDiscoveryTable": efmOAMDiscoveryTable,
       "efmOAMDiscoveryEntry": efmOAMDiscoveryEntry,
       "efmOAMDiscoveryIfIndex": efmOAMDiscoveryIfIndex,
       "efmOAMDiscoveryLocalMode": efmOAMDiscoveryLocalMode,
       "efmOAMDiscoveryLocalUnidirection": efmOAMDiscoveryLocalUnidirection,
       "efmOAMDiscoveryLocalLinkMonitor": efmOAMDiscoveryLocalLinkMonitor,
       "efmOAMDiscoveryLocalRemoteLoopback": efmOAMDiscoveryLocalRemoteLoopback,
       "efmOAMDiscoveryLocalMibRetrieve": efmOAMDiscoveryLocalMibRetrieve,
       "efmOAMDiscoveryLocalMtuSize": efmOAMDiscoveryLocalMtuSize,
       "efmOAMDiscoveryLocalPortStatus": efmOAMDiscoveryLocalPortStatus,
       "efmOAMDiscoveryLocalLoopbackStatus": efmOAMDiscoveryLocalLoopbackStatus,
       "efmOAMDiscoveryLocalPduRevision": efmOAMDiscoveryLocalPduRevision,
       "efmOAMDiscoveryRemoteMacAddress": efmOAMDiscoveryRemoteMacAddress,
       "efmOAMDiscoveryRemotePduRevision": efmOAMDiscoveryRemotePduRevision,
       "efmOAMDiscoveryRemoteVendor": efmOAMDiscoveryRemoteVendor,
       "efmOAMDiscoveryRemoteMode": efmOAMDiscoveryRemoteMode,
       "efmOAMDiscoveryRemoteUnidirection": efmOAMDiscoveryRemoteUnidirection,
       "efmOAMDiscoveryRemoteLinkMonitor": efmOAMDiscoveryRemoteLinkMonitor,
       "efmOAMDiscoveryRemoteRemoteLoopback": efmOAMDiscoveryRemoteRemoteLoopback,
       "efmOAMDiscoveryRemoteMibRetrieve": efmOAMDiscoveryRemoteMibRetrieve,
       "efmOAMDiscoveryRemoteMtuSize": efmOAMDiscoveryRemoteMtuSize,
       "efmOAMStateTable": efmOAMStateTable,
       "efmOAMStateEntry": efmOAMStateEntry,
       "efmOAMStateIfIndex": efmOAMStateIfIndex,
       "efmOAMStateLocalLinkStatus": efmOAMStateLocalLinkStatus,
       "efmOAMStateLocalPduStatus": efmOAMStateLocalPduStatus,
       "efmOAMStateLocalSatisfied": efmOAMStateLocalSatisfied,
       "efmOAMStateLocalStable": efmOAMStateLocalStable,
       "efmOAMStateRemoteStateValid": efmOAMStateRemoteStateValid,
       "efmOAMStateRemoteStable": efmOAMStateRemoteStable,
       "efmOAMStateLocalPaserState": efmOAMStateLocalPaserState,
       "efmOAMStateLocalMultiplexerState": efmOAMStateLocalMultiplexerState,
       "efmOAMStateRemotePaserState": efmOAMStateRemotePaserState,
       "efmOAMStateRemoteMultiplexerState": efmOAMStateRemoteMultiplexerState,
       "efmOAMStatisticTable": efmOAMStatisticTable,
       "efmOAMStatisticEntry": efmOAMStatisticEntry,
       "efmOAMStatisticIfIndex": efmOAMStatisticIfIndex,
       "efmOAMPduInfomationTx": efmOAMPduInfomationTx,
       "efmOAMPduInfomationRx": efmOAMPduInfomationRx,
       "efmOAMPduEvtNotificationTx": efmOAMPduEvtNotificationTx,
       "efmOAMPduEvtNotificationRx": efmOAMPduEvtNotificationRx,
       "efmOAMPduLoopbackControlTx": efmOAMPduLoopbackControlTx,
       "efmOAMPduLoopbackControlRx": efmOAMPduLoopbackControlRx,
       "efmOAMPduUnsupportedRx": efmOAMPduUnsupportedRx,
       "efmOAMLocalLinkFaultRecords": efmOAMLocalLinkFaultRecords,
       "efmOAMLocalDyingGaspRecords": efmOAMLocalDyingGaspRecords,
       "efmOAMLocalCriticalEvtRecords": efmOAMLocalCriticalEvtRecords,
       "efmOAMRemoteLinkFaultRecords": efmOAMRemoteLinkFaultRecords,
       "efmOAMRemoteDyingGaspRecords": efmOAMRemoteDyingGaspRecords,
       "efmOAMRemoteCriticalEvtRecords": efmOAMRemoteCriticalEvtRecords,
       "efmOAMLocalErrorFrameRecords": efmOAMLocalErrorFrameRecords,
       "efmOAMLocalErrorFrameSecondRecords": efmOAMLocalErrorFrameSecondRecords,
       "efmOAMRemoteErrorSymbolPeriodRecords": efmOAMRemoteErrorSymbolPeriodRecords,
       "efmOAMRemoteErrorFrameRecords": efmOAMRemoteErrorFrameRecords,
       "efmOAMRemoteErrorFramePeriodRecords": efmOAMRemoteErrorFramePeriodRecords,
       "efmOAMRemoteErrorFrameSecondRecords": efmOAMRemoteErrorFrameSecondRecords,
       "efmOAMLoopbackTestPktsSent": efmOAMLoopbackTestPktsSent,
       "efmOAMLoopbackTestPktsRecv": efmOAMLoopbackTestPktsRecv,
       "efmOAMLoopbackTestPercentValidRate": efmOAMLoopbackTestPercentValidRate,
       "ptp": ptp,
       "ptpGlobalInfo": ptpGlobalInfo,
       "ptpPortNum": ptpPortNum,
       "ptpUtcOffset": ptpUtcOffset,
       "ptpLocalClockIdentity": ptpLocalClockIdentity,
       "ptpBMCRecMem": ptpBMCRecMem,
       "ptpBMCParentClockId": ptpBMCParentClockId,
       "ptpBMCParentPortNum": ptpBMCParentPortNum,
       "ptpBMCMeanPathDelay": ptpBMCMeanPathDelay,
       "ptpBMCOffsetFromMaster": ptpBMCOffsetFromMaster,
       "ptpBMCStepRemoved": ptpBMCStepRemoved,
       "ptpBMCGMClockId": ptpBMCGMClockId,
       "ptpBMCGMPriority1": ptpBMCGMPriority1,
       "ptpBMCGMPriority2": ptpBMCGMPriority2,
       "ptpBMCGMClockAccuracy": ptpBMCGMClockAccuracy,
       "ptpBMCGMClockClass": ptpBMCGMClockClass,
       "ptpBMCGMTimeSource": ptpBMCGMTimeSource,
       "ptpBMCGMUtcOffset": ptpBMCGMUtcOffset,
       "ptpBMCGMUTCOffsetValid": ptpBMCGMUTCOffsetValid,
       "ptpBMCGMTimeScale": ptpBMCGMTimeScale,
       "ptpBMCGMTimeTraceable": ptpBMCGMTimeTraceable,
       "ptpBMCGMLeap59": ptpBMCGMLeap59,
       "ptpBMCGMLeap61": ptpBMCGMLeap61,
       "ptpBMCGMFrequencyTraceable": ptpBMCGMFrequencyTraceable,
       "ptpClearStatistics": ptpClearStatistics,
       "ptpDeviceType": ptpDeviceType,
       "ptpGlobalEnable": ptpGlobalEnable,
       "ptpDomain": ptpDomain,
       "ptpTcPrimaryDomain": ptpTcPrimaryDomain,
       "ptpSlaveOnly": ptpSlaveOnly,
       "ptpPriority1": ptpPriority1,
       "ptpPriority2": ptpPriority2,
       "ptpClockAccuracy": ptpClockAccuracy,
       "ptpClockClass": ptpClockClass,
       "ptpLeap59": ptpLeap59,
       "ptpLeap61": ptpLeap61,
       "ptpTimeSource": ptpTimeSource,
       "ptpClockTodOutput": ptpClockTodOutput,
       "ptpClockSyncInterfaceOutput": ptpClockSyncInterfaceOutput,
       "ptpTodPulseDelayCorrection": ptpTodPulseDelayCorrection,
       "ptpIfConfigureTable": ptpIfConfigureTable,
       "ptpIfConfigureEntry": ptpIfConfigureEntry,
       "ptpIfIndex": ptpIfIndex,
       "ptpAnnounceInterval": ptpAnnounceInterval,
       "ptpSyncInterval": ptpSyncInterval,
       "ptpMinDelayreqInterval": ptpMinDelayreqInterval,
       "ptpMinPdelayreqInterval": ptpMinPdelayreqInterval,
       "ptpAnnounceReceiptTimeout": ptpAnnounceReceiptTimeout,
       "ptpDelayMechanism": ptpDelayMechanism,
       "ptpEnable": ptpEnable,
       "ptpAsymmetryCorrection": ptpAsymmetryCorrection,
       "ptpProtocolMac": ptpProtocolMac,
       "ptpUdpSrcIp": ptpUdpSrcIp,
       "ptpVlanId": ptpVlanId,
       "ptpCos": ptpCos,
       "ptpIfName": ptpIfName,
       "ptpIfState": ptpIfState,
       "ptpIfStep": ptpIfStep,
       "ptpIfPortId": ptpIfPortId,
       "ptpIfRcvAnn": ptpIfRcvAnn,
       "ptpIfRcvDelayReq": ptpIfRcvDelayReq,
       "ptpIfRcvDelayResp": ptpIfRcvDelayResp,
       "ptpIfRcvFollowUp": ptpIfRcvFollowUp,
       "ptpIfRcvUnknown": ptpIfRcvUnknown,
       "ptpIfRcvSync": ptpIfRcvSync,
       "ptpIfRcvPDelayReq": ptpIfRcvPDelayReq,
       "ptpIfRcvPDelayResp": ptpIfRcvPDelayResp,
       "ptpIfRcvPDelayRespFowllowUp": ptpIfRcvPDelayRespFowllowUp,
       "ptpIfSendAnn": ptpIfSendAnn,
       "ptpIfSendDelayReq": ptpIfSendDelayReq,
       "ptpIfSendDelayResp": ptpIfSendDelayResp,
       "ptpIfSendFollowUp": ptpIfSendFollowUp,
       "ptpIfSendUnknown": ptpIfSendUnknown,
       "ptpIfSendSync": ptpIfSendSync,
       "ptpIfSendPDelayReq": ptpIfSendPDelayReq,
       "ptpIfSendPDelayResp": ptpIfSendPDelayResp,
       "ptpIfSendPDelayRespFowllowUp": ptpIfSendPDelayRespFowllowUp,
       "ptpIfDiscardAnn": ptpIfDiscardAnn,
       "ptpIfDiscardDelayReq": ptpIfDiscardDelayReq,
       "ptpIfDiscardDelayResp": ptpIfDiscardDelayResp,
       "ptpIfDiscardFollowUp": ptpIfDiscardFollowUp,
       "ptpIfDiscardUnknown": ptpIfDiscardUnknown,
       "ptpIfDiscardSync": ptpIfDiscardSync,
       "ptpIfDiscardPDelayReq": ptpIfDiscardPDelayReq,
       "ptpIfDiscardPDelayResp": ptpIfDiscardPDelayResp,
       "ptpIfDiscardPDelayRespFowllowUp": ptpIfDiscardPDelayRespFowllowUp,
       "ptpIfIngressLatency": ptpIfIngressLatency,
       "ptpIfEgressLatency": ptpIfEgressLatency,
       "ptpForeignMasterTable": ptpForeignMasterTable,
       "ptpForeignMasterEntry": ptpForeignMasterEntry,
       "ptpFMIndex": ptpFMIndex,
       "ptpFMNodeIndex": ptpFMNodeIndex,
       "ptpFMBest": ptpFMBest,
       "ptpFMClockID": ptpFMClockID,
       "ptpFMPortNum": ptpFMPortNum,
       "ptpFMQualification": ptpFMQualification,
       "ptpFMIfName": ptpFMIfName,
       "ptpNotifications": ptpNotifications,
       "ptpMasterChange": ptpMasterChange,
       "ptpIfStateChange": ptpIfStateChange,
       "ptpMasterClockAccuracyChange": ptpMasterClockAccuracyChange,
       "pm": pm,
       "pmThresholdTable": pmThresholdTable,
       "pmThresholdEntry": pmThresholdEntry,
       "pmThresholdIndex": pmThresholdIndex,
       "pmThreshold15mValue": pmThreshold15mValue,
       "pmThreshold1hValue": pmThreshold1hValue,
       "pmThreshold1dValue": pmThreshold1dValue,
       "pmUnitTempr": pmUnitTempr,
       "pmUnitTemprCurr15mTable": pmUnitTemprCurr15mTable,
       "pmUnitTemprCurr15mEntry": pmUnitTemprCurr15mEntry,
       "pmUnitTemprCurr15mIndex": pmUnitTemprCurr15mIndex,
       "pmUnitTemprCurr15mId": pmUnitTemprCurr15mId,
       "pmUnitTemprCurr15mUnitType": pmUnitTemprCurr15mUnitType,
       "pmUnitTemprCurr15mAverage": pmUnitTemprCurr15mAverage,
       "pmUnitTemprCurr15mMin": pmUnitTemprCurr15mMin,
       "pmUnitTemprCurr15mMax": pmUnitTemprCurr15mMax,
       "pmUnitTemprCurr15mStartTime": pmUnitTemprCurr15mStartTime,
       "pmUnitTemprCurr15mStopTime": pmUnitTemprCurr15mStopTime,
       "pmUnitTemprPrev15mTable": pmUnitTemprPrev15mTable,
       "pmUnitTemprPrev15mEntry": pmUnitTemprPrev15mEntry,
       "pmUnitTemprPrev15mIndex": pmUnitTemprPrev15mIndex,
       "pmUnitTemprPrev15mId": pmUnitTemprPrev15mId,
       "pmUnitTemprPrev15mUnitType": pmUnitTemprPrev15mUnitType,
       "pmUnitTemprPrev15mAverage": pmUnitTemprPrev15mAverage,
       "pmUnitTemprPrev15mMin": pmUnitTemprPrev15mMin,
       "pmUnitTemprPrev15mMax": pmUnitTemprPrev15mMax,
       "pmUnitTemprPrev15mStartTime": pmUnitTemprPrev15mStartTime,
       "pmUnitTemprPrev15mStopTime": pmUnitTemprPrev15mStopTime,
       "pmUnitTemprCurr1hTable": pmUnitTemprCurr1hTable,
       "pmUnitTemprCurr1hEntry": pmUnitTemprCurr1hEntry,
       "pmUnitTemprCurr1hIndex": pmUnitTemprCurr1hIndex,
       "pmUnitTemprCurr1hId": pmUnitTemprCurr1hId,
       "pmUnitTemprCurr1hUnitType": pmUnitTemprCurr1hUnitType,
       "pmUnitTemprCurr1hAverage": pmUnitTemprCurr1hAverage,
       "pmUnitTemprCurr1hMin": pmUnitTemprCurr1hMin,
       "pmUnitTemprCurr1hMax": pmUnitTemprCurr1hMax,
       "pmUnitTemprCurr1hStartTime": pmUnitTemprCurr1hStartTime,
       "pmUnitTemprCurr1hStopTime": pmUnitTemprCurr1hStopTime,
       "pmUnitTemprPrev1hTable": pmUnitTemprPrev1hTable,
       "pmUnitTemprPrev1hEntry": pmUnitTemprPrev1hEntry,
       "pmUnitTemprPrev1hIndex": pmUnitTemprPrev1hIndex,
       "pmUnitTemprPrev1hId": pmUnitTemprPrev1hId,
       "pmUnitTemprPrev1hUnitType": pmUnitTemprPrev1hUnitType,
       "pmUnitTemprPrev1hAverage": pmUnitTemprPrev1hAverage,
       "pmUnitTemprPrev1hMin": pmUnitTemprPrev1hMin,
       "pmUnitTemprPrev1hMax": pmUnitTemprPrev1hMax,
       "pmUnitTemprPrev1hStartTime": pmUnitTemprPrev1hStartTime,
       "pmUnitTemprPrev1hStopTime": pmUnitTemprPrev1hStopTime,
       "pmUnitTemprCurr1dTable": pmUnitTemprCurr1dTable,
       "pmUnitTemprCurr1dEntry": pmUnitTemprCurr1dEntry,
       "pmUnitTemprCurr1dIndex": pmUnitTemprCurr1dIndex,
       "pmUnitTemprCurr1dId": pmUnitTemprCurr1dId,
       "pmUnitTemprCurr1dUnitType": pmUnitTemprCurr1dUnitType,
       "pmUnitTemprCurr1dAverage": pmUnitTemprCurr1dAverage,
       "pmUnitTemprCurr1dMin": pmUnitTemprCurr1dMin,
       "pmUnitTemprCurr1dMax": pmUnitTemprCurr1dMax,
       "pmUnitTemprCurr1dStartTime": pmUnitTemprCurr1dStartTime,
       "pmUnitTemprCurr1dStopTime": pmUnitTemprCurr1dStopTime,
       "pmUnitTemprPrev1dTable": pmUnitTemprPrev1dTable,
       "pmUnitTemprPrev1dEntry": pmUnitTemprPrev1dEntry,
       "pmUnitTemprPrev1dIndex": pmUnitTemprPrev1dIndex,
       "pmUnitTemprPrev1dId": pmUnitTemprPrev1dId,
       "pmUnitTemprPrev1dUnitType": pmUnitTemprPrev1dUnitType,
       "pmUnitTemprPrev1dAverage": pmUnitTemprPrev1dAverage,
       "pmUnitTemprPrev1dMin": pmUnitTemprPrev1dMin,
       "pmUnitTemprPrev1dMax": pmUnitTemprPrev1dMax,
       "pmUnitTemprPrev1dStartTime": pmUnitTemprPrev1dStartTime,
       "pmUnitTemprPrev1dStopTime": pmUnitTemprPrev1dStopTime,
       "pmTcaUnitTemprMin15mTable": pmTcaUnitTemprMin15mTable,
       "pmTcaUnitTemprMin15mEntry": pmTcaUnitTemprMin15mEntry,
       "pmTcaUnitTemprMin15mIndex": pmTcaUnitTemprMin15mIndex,
       "pmTcaUnitTemprMin15mId": pmTcaUnitTemprMin15mId,
       "pmTcaUnitTemprMin15mUnitType": pmTcaUnitTemprMin15mUnitType,
       "pmTcaUnitTemprMin15mCnt": pmTcaUnitTemprMin15mCnt,
       "pmTcaUnitTemprMin15mThreshold": pmTcaUnitTemprMin15mThreshold,
       "pmTcaUnitTemprMin15mOccurTime": pmTcaUnitTemprMin15mOccurTime,
       "pmTcaUnitTemprMin1hTable": pmTcaUnitTemprMin1hTable,
       "pmTcaUnitTemprMin1hEntry": pmTcaUnitTemprMin1hEntry,
       "pmTcaUnitTemprMin1hIndex": pmTcaUnitTemprMin1hIndex,
       "pmTcaUnitTemprMin1hId": pmTcaUnitTemprMin1hId,
       "pmTcaUnitTemprMin1hUnitType": pmTcaUnitTemprMin1hUnitType,
       "pmTcaUnitTemprMin1hCnt": pmTcaUnitTemprMin1hCnt,
       "pmTcaUnitTemprMin1hThreshold": pmTcaUnitTemprMin1hThreshold,
       "pmTcaUnitTemprMin1hOccurTime": pmTcaUnitTemprMin1hOccurTime,
       "pmTcaUnitTemprMin1dTable": pmTcaUnitTemprMin1dTable,
       "pmTcaUnitTemprMin1dEntry": pmTcaUnitTemprMin1dEntry,
       "pmTcaUnitTemprMin1dIndex": pmTcaUnitTemprMin1dIndex,
       "pmTcaUnitTemprMin1dId": pmTcaUnitTemprMin1dId,
       "pmTcaUnitTemprMin1dUnitType": pmTcaUnitTemprMin1dUnitType,
       "pmTcaUnitTemprMin1dCnt": pmTcaUnitTemprMin1dCnt,
       "pmTcaUnitTemprMin1dThreshold": pmTcaUnitTemprMin1dThreshold,
       "pmTcaUnitTemprMin1dOccurTime": pmTcaUnitTemprMin1dOccurTime,
       "pmTcaUnitTemprMax15mTable": pmTcaUnitTemprMax15mTable,
       "pmTcaUnitTemprMax15mEntry": pmTcaUnitTemprMax15mEntry,
       "pmTcaUnitTemprMax15mIndex": pmTcaUnitTemprMax15mIndex,
       "pmTcaUnitTemprMax15mId": pmTcaUnitTemprMax15mId,
       "pmTcaUnitTemprMax15mUnitType": pmTcaUnitTemprMax15mUnitType,
       "pmTcaUnitTemprMax15mCnt": pmTcaUnitTemprMax15mCnt,
       "pmTcaUnitTemprMax15mThreshold": pmTcaUnitTemprMax15mThreshold,
       "pmTcaUnitTemprMax15mOccurTime": pmTcaUnitTemprMax15mOccurTime,
       "pmTcaUnitTemprMax1hTable": pmTcaUnitTemprMax1hTable,
       "pmTcaUnitTemprMax1hEntry": pmTcaUnitTemprMax1hEntry,
       "pmTcaUnitTemprMax1hIndex": pmTcaUnitTemprMax1hIndex,
       "pmTcaUnitTemprMax1hId": pmTcaUnitTemprMax1hId,
       "pmTcaUnitTemprMax1hUnitType": pmTcaUnitTemprMax1hUnitType,
       "pmTcaUnitTemprMax1hCnt": pmTcaUnitTemprMax1hCnt,
       "pmTcaUnitTemprMax1hThreshold": pmTcaUnitTemprMax1hThreshold,
       "pmTcaUnitTemprMax1hOccurTime": pmTcaUnitTemprMax1hOccurTime,
       "pmTcaUnitTemprMax1dTable": pmTcaUnitTemprMax1dTable,
       "pmTcaUnitTemprMax1dEntry": pmTcaUnitTemprMax1dEntry,
       "pmTcaUnitTemprMax1dIndex": pmTcaUnitTemprMax1dIndex,
       "pmTcaUnitTemprMax1dId": pmTcaUnitTemprMax1dId,
       "pmTcaUnitTemprMax1dUnitType": pmTcaUnitTemprMax1dUnitType,
       "pmTcaUnitTemprMax1dCnt": pmTcaUnitTemprMax1dCnt,
       "pmTcaUnitTemprMax1dThreshold": pmTcaUnitTemprMax1dThreshold,
       "pmTcaUnitTemprMax1dOccurTime": pmTcaUnitTemprMax1dOccurTime,
       "pmSFPPower": pmSFPPower,
       "pmSFPPowerCurr15mTable": pmSFPPowerCurr15mTable,
       "pmSFPPowerCurr15mEntry": pmSFPPowerCurr15mEntry,
       "pmSFPPowerCurr15mIndex": pmSFPPowerCurr15mIndex,
       "pmSFPPowerCurr15mId": pmSFPPowerCurr15mId,
       "pmSFPPowerCurr15mUnitType": pmSFPPowerCurr15mUnitType,
       "pmSFPPowerCurr15mRxAverage": pmSFPPowerCurr15mRxAverage,
       "pmSFPPowerCurr15mRxMin": pmSFPPowerCurr15mRxMin,
       "pmSFPPowerCurr15mRxMax": pmSFPPowerCurr15mRxMax,
       "pmSFPPowerCurr15mTxAverage": pmSFPPowerCurr15mTxAverage,
       "pmSFPPowerCurr15mTxMin": pmSFPPowerCurr15mTxMin,
       "pmSFPPowerCurr15mTxMax": pmSFPPowerCurr15mTxMax,
       "pmSFPPowerCurr15mStartTime": pmSFPPowerCurr15mStartTime,
       "pmSFPPowerCurr15mStopTime": pmSFPPowerCurr15mStopTime,
       "pmSFPPowerPrev15mTable": pmSFPPowerPrev15mTable,
       "pmSFPPowerPrev15mEntry": pmSFPPowerPrev15mEntry,
       "pmSFPPowerPrev15mIndex": pmSFPPowerPrev15mIndex,
       "pmSFPPowerPrev15mId": pmSFPPowerPrev15mId,
       "pmSFPPowerPrev15mUnitType": pmSFPPowerPrev15mUnitType,
       "pmSFPPowerPrev15mRxAverage": pmSFPPowerPrev15mRxAverage,
       "pmSFPPowerPrev15mRxMin": pmSFPPowerPrev15mRxMin,
       "pmSFPPowerPrev15mRxMax": pmSFPPowerPrev15mRxMax,
       "pmSFPPowerPrev15mTxAverage": pmSFPPowerPrev15mTxAverage,
       "pmSFPPowerPrev15mTxMin": pmSFPPowerPrev15mTxMin,
       "pmSFPPowerPrev15mTxMax": pmSFPPowerPrev15mTxMax,
       "pmSFPPowerPrev15mStartTime": pmSFPPowerPrev15mStartTime,
       "pmSFPPowerPrev15mStopTime": pmSFPPowerPrev15mStopTime,
       "pmSFPPowerCurr1hTable": pmSFPPowerCurr1hTable,
       "pmSFPPowerCurr1hEntry": pmSFPPowerCurr1hEntry,
       "pmSFPPowerCurr1hIndex": pmSFPPowerCurr1hIndex,
       "pmSFPPowerCurr1hId": pmSFPPowerCurr1hId,
       "pmSFPPowerCurr1hUnitType": pmSFPPowerCurr1hUnitType,
       "pmSFPPowerCurr1hRxAverage": pmSFPPowerCurr1hRxAverage,
       "pmSFPPowerCurr1hRxMin": pmSFPPowerCurr1hRxMin,
       "pmSFPPowerCurr1hRxMax": pmSFPPowerCurr1hRxMax,
       "pmSFPPowerCurr1hTxAverage": pmSFPPowerCurr1hTxAverage,
       "pmSFPPowerCurr1hTxMin": pmSFPPowerCurr1hTxMin,
       "pmSFPPowerCurr1hTxMax": pmSFPPowerCurr1hTxMax,
       "pmSFPPowerCurr1hStartTime": pmSFPPowerCurr1hStartTime,
       "pmSFPPowerCurr1hStopTime": pmSFPPowerCurr1hStopTime,
       "pmSFPPowerPrev1hTable": pmSFPPowerPrev1hTable,
       "pmSFPPowerPrev1hEntry": pmSFPPowerPrev1hEntry,
       "pmSFPPowerPrev1hIndex": pmSFPPowerPrev1hIndex,
       "pmSFPPowerPrev1hId": pmSFPPowerPrev1hId,
       "pmSFPPowerPrev1hUnitType": pmSFPPowerPrev1hUnitType,
       "pmSFPPowerPrev1hRxAverage": pmSFPPowerPrev1hRxAverage,
       "pmSFPPowerPrev1hRxMin": pmSFPPowerPrev1hRxMin,
       "pmSFPPowerPrev1hRxMax": pmSFPPowerPrev1hRxMax,
       "pmSFPPowerPrev1hTxAverage": pmSFPPowerPrev1hTxAverage,
       "pmSFPPowerPrev1hTxMin": pmSFPPowerPrev1hTxMin,
       "pmSFPPowerPrev1hTxMax": pmSFPPowerPrev1hTxMax,
       "pmSFPPowerPrev1hStartTime": pmSFPPowerPrev1hStartTime,
       "pmSFPPowerPrev1hStopTime": pmSFPPowerPrev1hStopTime,
       "pmSFPPowerCurr1dTable": pmSFPPowerCurr1dTable,
       "pmSFPPowerCurr1dEntry": pmSFPPowerCurr1dEntry,
       "pmSFPPowerCurr1dIndex": pmSFPPowerCurr1dIndex,
       "pmSFPPowerCurr1dId": pmSFPPowerCurr1dId,
       "pmSFPPowerCurr1dUnitType": pmSFPPowerCurr1dUnitType,
       "pmSFPPowerCurr1dRxAverage": pmSFPPowerCurr1dRxAverage,
       "pmSFPPowerCurr1dRxMin": pmSFPPowerCurr1dRxMin,
       "pmSFPPowerCurr1dRxMax": pmSFPPowerCurr1dRxMax,
       "pmSFPPowerCurr1dTxAverage": pmSFPPowerCurr1dTxAverage,
       "pmSFPPowerCurr1dTxMin": pmSFPPowerCurr1dTxMin,
       "pmSFPPowerCurr1dTxMax": pmSFPPowerCurr1dTxMax,
       "pmSFPPowerCurr1dStartTime": pmSFPPowerCurr1dStartTime,
       "pmSFPPowerCurr1dStopTime": pmSFPPowerCurr1dStopTime,
       "pmSFPPowerPrev1dTable": pmSFPPowerPrev1dTable,
       "pmSFPPowerPrev1dEntry": pmSFPPowerPrev1dEntry,
       "pmSFPPowerPrev1dIndex": pmSFPPowerPrev1dIndex,
       "pmSFPPowerPrev1dId": pmSFPPowerPrev1dId,
       "pmSFPPowerPrev1dUnitType": pmSFPPowerPrev1dUnitType,
       "pmSFPPowerPrev1dRxAverage": pmSFPPowerPrev1dRxAverage,
       "pmSFPPowerPrev1dRxMin": pmSFPPowerPrev1dRxMin,
       "pmSFPPowerPrev1dRxMax": pmSFPPowerPrev1dRxMax,
       "pmSFPPowerPrev1dTxAverage": pmSFPPowerPrev1dTxAverage,
       "pmSFPPowerPrev1dTxMin": pmSFPPowerPrev1dTxMin,
       "pmSFPPowerPrev1dTxMax": pmSFPPowerPrev1dTxMax,
       "pmSFPPowerPrev1dStartTime": pmSFPPowerPrev1dStartTime,
       "pmSFPPowerPrev1dStopTime": pmSFPPowerPrev1dStopTime,
       "pmTcaSFPRxPowerMin15mTable": pmTcaSFPRxPowerMin15mTable,
       "pmTcaSFPRxPowerMin15mEntry": pmTcaSFPRxPowerMin15mEntry,
       "pmTcaSFPRxPowerMin15mIndex": pmTcaSFPRxPowerMin15mIndex,
       "pmTcaSFPRxPowerMin15mId": pmTcaSFPRxPowerMin15mId,
       "pmTcaSFPRxPowerMin15mUnitType": pmTcaSFPRxPowerMin15mUnitType,
       "pmTcaSFPRxPowerMin15mCnt": pmTcaSFPRxPowerMin15mCnt,
       "pmTcaSFPRxPowerMin15mThreshold": pmTcaSFPRxPowerMin15mThreshold,
       "pmTcaSFPRxPowerMin15mOccurTime": pmTcaSFPRxPowerMin15mOccurTime,
       "pmTcaSFPRxPowerMin1hTable": pmTcaSFPRxPowerMin1hTable,
       "pmTcaSFPRxPowerMin1hEntry": pmTcaSFPRxPowerMin1hEntry,
       "pmTcaSFPRxPowerMin1hIndex": pmTcaSFPRxPowerMin1hIndex,
       "pmTcaSFPRxPowerMin1hId": pmTcaSFPRxPowerMin1hId,
       "pmTcaSFPRxPowerMin1hUnitType": pmTcaSFPRxPowerMin1hUnitType,
       "pmTcaSFPRxPowerMin1hCnt": pmTcaSFPRxPowerMin1hCnt,
       "pmTcaSFPRxPowerMin1hThreshold": pmTcaSFPRxPowerMin1hThreshold,
       "pmTcaSFPRxPowerMin1hOccurTime": pmTcaSFPRxPowerMin1hOccurTime,
       "pmTcaSFPRxPowerMin1dTable": pmTcaSFPRxPowerMin1dTable,
       "pmTcaSFPRxPowerMin1dEntry": pmTcaSFPRxPowerMin1dEntry,
       "pmTcaSFPRxPowerMin1dIndex": pmTcaSFPRxPowerMin1dIndex,
       "pmTcaSFPRxPowerMin1dId": pmTcaSFPRxPowerMin1dId,
       "pmTcaSFPRxPowerMin1dUnitType": pmTcaSFPRxPowerMin1dUnitType,
       "pmTcaSFPRxPowerMin1dCnt": pmTcaSFPRxPowerMin1dCnt,
       "pmTcaSFPRxPowerMin1dThreshold": pmTcaSFPRxPowerMin1dThreshold,
       "pmTcaSFPRxPowerMin1dOccurTime": pmTcaSFPRxPowerMin1dOccurTime,
       "pmTcaSFPRxPowerMax15mTable": pmTcaSFPRxPowerMax15mTable,
       "pmTcaSFPRxPowerMax15mEntry": pmTcaSFPRxPowerMax15mEntry,
       "pmTcaSFPRxPowerMax15mIndex": pmTcaSFPRxPowerMax15mIndex,
       "pmTcaSFPRxPowerMax15mId": pmTcaSFPRxPowerMax15mId,
       "pmTcaSFPRxPowerMax15mUnitType": pmTcaSFPRxPowerMax15mUnitType,
       "pmTcaSFPRxPowerMax15mCnt": pmTcaSFPRxPowerMax15mCnt,
       "pmTcaSFPRxPowerMax15mThreshold": pmTcaSFPRxPowerMax15mThreshold,
       "pmTcaSFPRxPowerMax15mOccurTime": pmTcaSFPRxPowerMax15mOccurTime,
       "pmTcaSFPRxPowerMax1hTable": pmTcaSFPRxPowerMax1hTable,
       "pmTcaSFPRxPowerMax1hEntry": pmTcaSFPRxPowerMax1hEntry,
       "pmTcaSFPRxPowerMax1hIndex": pmTcaSFPRxPowerMax1hIndex,
       "pmTcaSFPRxPowerMax1hId": pmTcaSFPRxPowerMax1hId,
       "pmTcaSFPRxPowerMax1hUnitType": pmTcaSFPRxPowerMax1hUnitType,
       "pmTcaSFPRxPowerMax1hCnt": pmTcaSFPRxPowerMax1hCnt,
       "pmTcaSFPRxPowerMax1hThreshold": pmTcaSFPRxPowerMax1hThreshold,
       "pmTcaSFPRxPowerMax1hOccurTime": pmTcaSFPRxPowerMax1hOccurTime,
       "pmTcaSFPRxPowerMax1dTable": pmTcaSFPRxPowerMax1dTable,
       "pmTcaSFPRxPowerMax1dEntry": pmTcaSFPRxPowerMax1dEntry,
       "pmTcaSFPRxPowerMax1dIndex": pmTcaSFPRxPowerMax1dIndex,
       "pmTcaSFPRxPowerMax1dId": pmTcaSFPRxPowerMax1dId,
       "pmTcaSFPRxPowerMax1dUnitType": pmTcaSFPRxPowerMax1dUnitType,
       "pmTcaSFPRxPowerMax1dCnt": pmTcaSFPRxPowerMax1dCnt,
       "pmTcaSFPRxPowerMax1dThreshold": pmTcaSFPRxPowerMax1dThreshold,
       "pmTcaSFPRxPowerMax1dOccurTime": pmTcaSFPRxPowerMax1dOccurTime,
       "pmTcaSFPTxPowerMin15mTable": pmTcaSFPTxPowerMin15mTable,
       "pmTcaSFPTxPowerMin15mEntry": pmTcaSFPTxPowerMin15mEntry,
       "pmTcaSFPTxPowerMin15mIndex": pmTcaSFPTxPowerMin15mIndex,
       "pmTcaSFPTxPowerMin15mId": pmTcaSFPTxPowerMin15mId,
       "pmTcaSFPTxPowerMin15mUnitType": pmTcaSFPTxPowerMin15mUnitType,
       "pmTcaSFPTxPowerMin15mCnt": pmTcaSFPTxPowerMin15mCnt,
       "pmTcaSFPTxPowerMin15mThreshold": pmTcaSFPTxPowerMin15mThreshold,
       "pmTcaSFPTxPowerMin15mOccurTime": pmTcaSFPTxPowerMin15mOccurTime,
       "pmTcaSFPTxPowerMin1hTable": pmTcaSFPTxPowerMin1hTable,
       "pmTcaSFPTxPowerMin1hEntry": pmTcaSFPTxPowerMin1hEntry,
       "pmTcaSFPTxPowerMin1hIndex": pmTcaSFPTxPowerMin1hIndex,
       "pmTcaSFPTxPowerMin1hId": pmTcaSFPTxPowerMin1hId,
       "pmTcaSFPTxPowerMin1hUnitType": pmTcaSFPTxPowerMin1hUnitType,
       "pmTcaSFPTxPowerMin1hCnt": pmTcaSFPTxPowerMin1hCnt,
       "pmTcaSFPTxPowerMin1hThreshold": pmTcaSFPTxPowerMin1hThreshold,
       "pmTcaSFPTxPowerMin1hOccurTime": pmTcaSFPTxPowerMin1hOccurTime,
       "pmTcaSFPTxPowerMin1dTable": pmTcaSFPTxPowerMin1dTable,
       "pmTcaSFPTxPowerMin1dEntry": pmTcaSFPTxPowerMin1dEntry,
       "pmTcaSFPTxPowerMin1dIndex": pmTcaSFPTxPowerMin1dIndex,
       "pmTcaSFPTxPowerMin1dId": pmTcaSFPTxPowerMin1dId,
       "pmTcaSFPTxPowerMin1dUnitType": pmTcaSFPTxPowerMin1dUnitType,
       "pmTcaSFPTxPowerMin1dCnt": pmTcaSFPTxPowerMin1dCnt,
       "pmTcaSFPTxPowerMin1dThreshold": pmTcaSFPTxPowerMin1dThreshold,
       "pmTcaSFPTxPowerMin1dOccurTime": pmTcaSFPTxPowerMin1dOccurTime,
       "pmTcaSFPTxPowerMax15mTable": pmTcaSFPTxPowerMax15mTable,
       "pmTcaSFPTxPowerMax15mEntry": pmTcaSFPTxPowerMax15mEntry,
       "pmTcaSFPTxPowerMax15mIndex": pmTcaSFPTxPowerMax15mIndex,
       "pmTcaSFPTxPowerMax15mId": pmTcaSFPTxPowerMax15mId,
       "pmTcaSFPTxPowerMax15mUnitType": pmTcaSFPTxPowerMax15mUnitType,
       "pmTcaSFPTxPowerMax15mCnt": pmTcaSFPTxPowerMax15mCnt,
       "pmTcaSFPTxPowerMax15mThreshold": pmTcaSFPTxPowerMax15mThreshold,
       "pmTcaSFPTxPowerMax15mOccurTime": pmTcaSFPTxPowerMax15mOccurTime,
       "pmTcaSFPTxPowerMax1hTable": pmTcaSFPTxPowerMax1hTable,
       "pmTcaSFPTxPowerMax1hEntry": pmTcaSFPTxPowerMax1hEntry,
       "pmTcaSFPTxPowerMax1hIndex": pmTcaSFPTxPowerMax1hIndex,
       "pmTcaSFPTxPowerMax1hId": pmTcaSFPTxPowerMax1hId,
       "pmTcaSFPTxPowerMax1hUnitType": pmTcaSFPTxPowerMax1hUnitType,
       "pmTcaSFPTxPowerMax1hCnt": pmTcaSFPTxPowerMax1hCnt,
       "pmTcaSFPTxPowerMax1hThreshold": pmTcaSFPTxPowerMax1hThreshold,
       "pmTcaSFPTxPowerMax1hOccurTime": pmTcaSFPTxPowerMax1hOccurTime,
       "pmTcaSFPTxPowerMax1dTable": pmTcaSFPTxPowerMax1dTable,
       "pmTcaSFPTxPowerMax1dEntry": pmTcaSFPTxPowerMax1dEntry,
       "pmTcaSFPTxPowerMax1dIndex": pmTcaSFPTxPowerMax1dIndex,
       "pmTcaSFPTxPowerMax1dId": pmTcaSFPTxPowerMax1dId,
       "pmTcaSFPTxPowerMax1dUnitType": pmTcaSFPTxPowerMax1dUnitType,
       "pmTcaSFPTxPowerMax1dCnt": pmTcaSFPTxPowerMax1dCnt,
       "pmTcaSFPTxPowerMax1dThreshold": pmTcaSFPTxPowerMax1dThreshold,
       "pmTcaSFPTxPowerMax1dOccurTime": pmTcaSFPTxPowerMax1dOccurTime,
       "pmIfStatistics": pmIfStatistics,
       "pmIfStatCurr15mTable": pmIfStatCurr15mTable,
       "pmIfStatCurr15mEntry": pmIfStatCurr15mEntry,
       "pmIfStatCurr15mIndex": pmIfStatCurr15mIndex,
       "pmIfStatCurr15mId": pmIfStatCurr15mId,
       "pmIfStatCurr15mUnitType": pmIfStatCurr15mUnitType,
       "pmIfStatCurr15mDropped": pmIfStatCurr15mDropped,
       "pmIfStatCurr15mInputPkts": pmIfStatCurr15mInputPkts,
       "pmIfStatCurr15mInputbytes": pmIfStatCurr15mInputbytes,
       "pmIfStatCurr15mCrcErrors": pmIfStatCurr15mCrcErrors,
       "pmIfStatCurr15mInputBrdCst": pmIfStatCurr15mInputBrdCst,
       "pmIfStatCurr15mInputMltCst": pmIfStatCurr15mInputMltCst,
       "pmIfStatCurr15mCollision": pmIfStatCurr15mCollision,
       "pmIfStatCurr15mUndersized": pmIfStatCurr15mUndersized,
       "pmIfStatCurr15mOversized": pmIfStatCurr15mOversized,
       "pmIfStatCurr15mFragments": pmIfStatCurr15mFragments,
       "pmIfStatCurr15mJabbers": pmIfStatCurr15mJabbers,
       "pmIfStatCurr15mPkt64": pmIfStatCurr15mPkt64,
       "pmIfStatCurr15mPkt65To127": pmIfStatCurr15mPkt65To127,
       "pmIfStatCurr15mPkt128To255": pmIfStatCurr15mPkt128To255,
       "pmIfStatCurr15mPkt256To511": pmIfStatCurr15mPkt256To511,
       "pmIfStatCurr15mPkt512To1023": pmIfStatCurr15mPkt512To1023,
       "pmIfStatCurr15mPkt1024": pmIfStatCurr15mPkt1024,
       "pmIfStatCurr15mOutputPkts": pmIfStatCurr15mOutputPkts,
       "pmIfStatCurr15mOutputBytes": pmIfStatCurr15mOutputBytes,
       "pmIfStatCurr15mStartTime": pmIfStatCurr15mStartTime,
       "pmIfStatCurr15mStopTime": pmIfStatCurr15mStopTime,
       "pmIfStatPrev15mTable": pmIfStatPrev15mTable,
       "pmIfStatPrev15mEntry": pmIfStatPrev15mEntry,
       "pmIfStatPrev15mIndex": pmIfStatPrev15mIndex,
       "pmIfStatPrev15mId": pmIfStatPrev15mId,
       "pmIfStatPrev15mUnitType": pmIfStatPrev15mUnitType,
       "pmIfStatPrev15mDropped": pmIfStatPrev15mDropped,
       "pmIfStatPrev15mInputPkts": pmIfStatPrev15mInputPkts,
       "pmIfStatPrev15mInputbytes": pmIfStatPrev15mInputbytes,
       "pmIfStatPrev15mCrcErrors": pmIfStatPrev15mCrcErrors,
       "pmIfStatPrev15mInputBrdCst": pmIfStatPrev15mInputBrdCst,
       "pmIfStatPrev15mInputMltCst": pmIfStatPrev15mInputMltCst,
       "pmIfStatPrev15mCollision": pmIfStatPrev15mCollision,
       "pmIfStatPrev15mUndersized": pmIfStatPrev15mUndersized,
       "pmIfStatPrev15mOversized": pmIfStatPrev15mOversized,
       "pmIfStatPrev15mFragments": pmIfStatPrev15mFragments,
       "pmIfStatPrev15mJabbers": pmIfStatPrev15mJabbers,
       "pmIfStatPrev15mPkt64": pmIfStatPrev15mPkt64,
       "pmIfStatPrev15mPkt65To127": pmIfStatPrev15mPkt65To127,
       "pmIfStatPrev15mPkt128To255": pmIfStatPrev15mPkt128To255,
       "pmIfStatPrev15mPkt256To511": pmIfStatPrev15mPkt256To511,
       "pmIfStatPrev15mPkt512To1023": pmIfStatPrev15mPkt512To1023,
       "pmIfStatPrev15mPkt1024": pmIfStatPrev15mPkt1024,
       "pmIfStatPrev15mOutputPkts": pmIfStatPrev15mOutputPkts,
       "pmIfStatPrev15mOutputBytes": pmIfStatPrev15mOutputBytes,
       "pmIfStatPrev15mStartTime": pmIfStatPrev15mStartTime,
       "pmIfStatPrev15mStopTime": pmIfStatPrev15mStopTime,
       "pmIfStatCurr1hTable": pmIfStatCurr1hTable,
       "pmIfStatCurr1hEntry": pmIfStatCurr1hEntry,
       "pmIfStatCurr1hIndex": pmIfStatCurr1hIndex,
       "pmIfStatCurr1hId": pmIfStatCurr1hId,
       "pmIfStatCurr1hUnitType": pmIfStatCurr1hUnitType,
       "pmIfStatCurr1hDropped": pmIfStatCurr1hDropped,
       "pmIfStatCurr1hInputPkts": pmIfStatCurr1hInputPkts,
       "pmIfStatCurr1hInputbytes": pmIfStatCurr1hInputbytes,
       "pmIfStatCurr1hCrcErrors": pmIfStatCurr1hCrcErrors,
       "pmIfStatCurr1hInputBrdCst": pmIfStatCurr1hInputBrdCst,
       "pmIfStatCurr1hInputMltCst": pmIfStatCurr1hInputMltCst,
       "pmIfStatCurr1hCollision": pmIfStatCurr1hCollision,
       "pmIfStatCurr1hUndersized": pmIfStatCurr1hUndersized,
       "pmIfStatCurr1hOversized": pmIfStatCurr1hOversized,
       "pmIfStatCurr1hFragments": pmIfStatCurr1hFragments,
       "pmIfStatCurr1hJabbers": pmIfStatCurr1hJabbers,
       "pmIfStatCurr1hPkt64": pmIfStatCurr1hPkt64,
       "pmIfStatCurr1hPkt65To127": pmIfStatCurr1hPkt65To127,
       "pmIfStatCurr1hPkt128To255": pmIfStatCurr1hPkt128To255,
       "pmIfStatCurr1hPkt256To511": pmIfStatCurr1hPkt256To511,
       "pmIfStatCurr1hPkt512To1023": pmIfStatCurr1hPkt512To1023,
       "pmIfStatCurr1hPkt1024": pmIfStatCurr1hPkt1024,
       "pmIfStatCurr1hOutputPkts": pmIfStatCurr1hOutputPkts,
       "pmIfStatCurr1hOutputBytes": pmIfStatCurr1hOutputBytes,
       "pmIfStatCurr1hStartTime": pmIfStatCurr1hStartTime,
       "pmIfStatCurr1hStopTime": pmIfStatCurr1hStopTime,
       "pmIfStatPrev1hTable": pmIfStatPrev1hTable,
       "pmIfStatPrev1hEntry": pmIfStatPrev1hEntry,
       "pmIfStatPrev1hIndex": pmIfStatPrev1hIndex,
       "pmIfStatPrev1hId": pmIfStatPrev1hId,
       "pmIfStatPrev1hUnitType": pmIfStatPrev1hUnitType,
       "pmIfStatPrev1hDropped": pmIfStatPrev1hDropped,
       "pmIfStatPrev1hInputPkts": pmIfStatPrev1hInputPkts,
       "pmIfStatPrev1hInputbytes": pmIfStatPrev1hInputbytes,
       "pmIfStatPrev1hCrcErrors": pmIfStatPrev1hCrcErrors,
       "pmIfStatPrev1hInputBrdCst": pmIfStatPrev1hInputBrdCst,
       "pmIfStatPrev1hInputMltCst": pmIfStatPrev1hInputMltCst,
       "pmIfStatPrev1hCollision": pmIfStatPrev1hCollision,
       "pmIfStatPrev1hUndersized": pmIfStatPrev1hUndersized,
       "pmIfStatPrev1hOversized": pmIfStatPrev1hOversized,
       "pmIfStatPrev1hFragments": pmIfStatPrev1hFragments,
       "pmIfStatPrev1hJabbers": pmIfStatPrev1hJabbers,
       "pmIfStatPrev1hPkt64": pmIfStatPrev1hPkt64,
       "pmIfStatPrev1hPkt65To127": pmIfStatPrev1hPkt65To127,
       "pmIfStatPrev1hPkt128To255": pmIfStatPrev1hPkt128To255,
       "pmIfStatPrev1hPkt256To511": pmIfStatPrev1hPkt256To511,
       "pmIfStatPrev1hPkt512To1023": pmIfStatPrev1hPkt512To1023,
       "pmIfStatPrev1hPkt1024": pmIfStatPrev1hPkt1024,
       "pmIfStatPrev1hOutputPkts": pmIfStatPrev1hOutputPkts,
       "pmIfStatPrev1hOutputBytes": pmIfStatPrev1hOutputBytes,
       "pmIfStatPrev1hStartTime": pmIfStatPrev1hStartTime,
       "pmIfStatPrev1hStopTime": pmIfStatPrev1hStopTime,
       "pmIfStatCurr1dTable": pmIfStatCurr1dTable,
       "pmIfStatCurr1dEntry": pmIfStatCurr1dEntry,
       "pmIfStatCurr1dIndex": pmIfStatCurr1dIndex,
       "pmIfStatCurr1dId": pmIfStatCurr1dId,
       "pmIfStatCurr1dUnitType": pmIfStatCurr1dUnitType,
       "pmIfStatCurr1dDropped": pmIfStatCurr1dDropped,
       "pmIfStatCurr1dInputPkts": pmIfStatCurr1dInputPkts,
       "pmIfStatCurr1dInputbytes": pmIfStatCurr1dInputbytes,
       "pmIfStatCurr1dCrcErrors": pmIfStatCurr1dCrcErrors,
       "pmIfStatCurr1dInputBrdCst": pmIfStatCurr1dInputBrdCst,
       "pmIfStatCurr1dInputMltCst": pmIfStatCurr1dInputMltCst,
       "pmIfStatCurr1dCollision": pmIfStatCurr1dCollision,
       "pmIfStatCurr1dUndersized": pmIfStatCurr1dUndersized,
       "pmIfStatCurr1dOversized": pmIfStatCurr1dOversized,
       "pmIfStatCurr1dFragments": pmIfStatCurr1dFragments,
       "pmIfStatCurr1dJabbers": pmIfStatCurr1dJabbers,
       "pmIfStatCurr1dPkt64": pmIfStatCurr1dPkt64,
       "pmIfStatCurr1dPkt65To127": pmIfStatCurr1dPkt65To127,
       "pmIfStatCurr1dPkt128To255": pmIfStatCurr1dPkt128To255,
       "pmIfStatCurr1dPkt256To511": pmIfStatCurr1dPkt256To511,
       "pmIfStatCurr1dPkt512To1023": pmIfStatCurr1dPkt512To1023,
       "pmIfStatCurr1dPkt1024": pmIfStatCurr1dPkt1024,
       "pmIfStatCurr1dOutputPkts": pmIfStatCurr1dOutputPkts,
       "pmIfStatCurr1dOutputBytes": pmIfStatCurr1dOutputBytes,
       "pmIfStatCurr1dStartTime": pmIfStatCurr1dStartTime,
       "pmIfStatCurr1dStopTime": pmIfStatCurr1dStopTime,
       "pmIfStatPrev1dTable": pmIfStatPrev1dTable,
       "pmIfStatPrev1dEntry": pmIfStatPrev1dEntry,
       "pmIfStatPrev1dIndex": pmIfStatPrev1dIndex,
       "pmIfStatPrev1dId": pmIfStatPrev1dId,
       "pmIfStatPrev1dUnitType": pmIfStatPrev1dUnitType,
       "pmIfStatPrev1dDropped": pmIfStatPrev1dDropped,
       "pmIfStatPrev1dInputPkts": pmIfStatPrev1dInputPkts,
       "pmIfStatPrev1dInputbytes": pmIfStatPrev1dInputbytes,
       "pmIfStatPrev1dCrcErrors": pmIfStatPrev1dCrcErrors,
       "pmIfStatPrev1dInputBrdCst": pmIfStatPrev1dInputBrdCst,
       "pmIfStatPrev1dInputMltCst": pmIfStatPrev1dInputMltCst,
       "pmIfStatPrev1dCollision": pmIfStatPrev1dCollision,
       "pmIfStatPrev1dUndersized": pmIfStatPrev1dUndersized,
       "pmIfStatPrev1dOversized": pmIfStatPrev1dOversized,
       "pmIfStatPrev1dFragments": pmIfStatPrev1dFragments,
       "pmIfStatPrev1dJabbers": pmIfStatPrev1dJabbers,
       "pmIfStatPrev1dPkt64": pmIfStatPrev1dPkt64,
       "pmIfStatPrev1dPkt65To127": pmIfStatPrev1dPkt65To127,
       "pmIfStatPrev1dPkt128To255": pmIfStatPrev1dPkt128To255,
       "pmIfStatPrev1dPkt256To511": pmIfStatPrev1dPkt256To511,
       "pmIfStatPrev1dPkt512To1023": pmIfStatPrev1dPkt512To1023,
       "pmIfStatPrev1dPkt1024": pmIfStatPrev1dPkt1024,
       "pmIfStatPrev1dOutputPkts": pmIfStatPrev1dOutputPkts,
       "pmIfStatPrev1dOutputBytes": pmIfStatPrev1dOutputBytes,
       "pmIfStatPrev1dStartTime": pmIfStatPrev1dStartTime,
       "pmIfStatPrev1dStopTime": pmIfStatPrev1dStopTime,
       "pmTcaIfDropped15mTable": pmTcaIfDropped15mTable,
       "pmTcaIfDropped15mEntry": pmTcaIfDropped15mEntry,
       "pmTcaIfDropped15mIndex": pmTcaIfDropped15mIndex,
       "pmTcaIfDropped15mId": pmTcaIfDropped15mId,
       "pmTcaIfDropped15mUnitType": pmTcaIfDropped15mUnitType,
       "pmTcaIfDropped15mCnt": pmTcaIfDropped15mCnt,
       "pmTcaIfDropped15mThreshold": pmTcaIfDropped15mThreshold,
       "pmTcaIfDropped15mOccurTime": pmTcaIfDropped15mOccurTime,
       "pmTcaIfDropped1hTable": pmTcaIfDropped1hTable,
       "pmTcaIfDropped1hEntry": pmTcaIfDropped1hEntry,
       "pmTcaIfDropped1hIndex": pmTcaIfDropped1hIndex,
       "pmTcaIfDropped1hId": pmTcaIfDropped1hId,
       "pmTcaIfDropped1hUnitType": pmTcaIfDropped1hUnitType,
       "pmTcaIfDropped1hCnt": pmTcaIfDropped1hCnt,
       "pmTcaIfDropped1hThreshold": pmTcaIfDropped1hThreshold,
       "pmTcaIfDropped1hOccurTime": pmTcaIfDropped1hOccurTime,
       "pmTcaIfDropped1dTable": pmTcaIfDropped1dTable,
       "pmTcaIfDropped1dEntry": pmTcaIfDropped1dEntry,
       "pmTcaIfDropped1dIndex": pmTcaIfDropped1dIndex,
       "pmTcaIfDropped1dId": pmTcaIfDropped1dId,
       "pmTcaIfDropped1dUnitType": pmTcaIfDropped1dUnitType,
       "pmTcaIfDropped1dCnt": pmTcaIfDropped1dCnt,
       "pmTcaIfDropped1dThreshold": pmTcaIfDropped1dThreshold,
       "pmTcaIfDropped1dOccurTime": pmTcaIfDropped1dOccurTime,
       "pmTcaIfInPkts15mTable": pmTcaIfInPkts15mTable,
       "pmTcaIfInPkts15mEntry": pmTcaIfInPkts15mEntry,
       "pmTcaIfInPkts15mIndex": pmTcaIfInPkts15mIndex,
       "pmTcaIfInPkts15mId": pmTcaIfInPkts15mId,
       "pmTcaIfInPkts15mUnitType": pmTcaIfInPkts15mUnitType,
       "pmTcaIfInPkts15mCnt": pmTcaIfInPkts15mCnt,
       "pmTcaIfInPkts15mThreshold": pmTcaIfInPkts15mThreshold,
       "pmTcaIfInPkts15mOccurTime": pmTcaIfInPkts15mOccurTime,
       "pmTcaIfInPkts1hTable": pmTcaIfInPkts1hTable,
       "pmTcaIfInPkts1hEntry": pmTcaIfInPkts1hEntry,
       "pmTcaIfInPkts1hIndex": pmTcaIfInPkts1hIndex,
       "pmTcaIfInPkts1hId": pmTcaIfInPkts1hId,
       "pmTcaIfInPkts1hUnitType": pmTcaIfInPkts1hUnitType,
       "pmTcaIfInPkts1hCnt": pmTcaIfInPkts1hCnt,
       "pmTcaIfInPkts1hThreshold": pmTcaIfInPkts1hThreshold,
       "pmTcaIfInPkts1hOccurTime": pmTcaIfInPkts1hOccurTime,
       "pmTcaIfInPkts1dTable": pmTcaIfInPkts1dTable,
       "pmTcaIfInPkts1dEntry": pmTcaIfInPkts1dEntry,
       "pmTcaIfInPkts1dIndex": pmTcaIfInPkts1dIndex,
       "pmTcaIfInPkts1dId": pmTcaIfInPkts1dId,
       "pmTcaIfInPkts1dUnitType": pmTcaIfInPkts1dUnitType,
       "pmTcaIfInPkts1dCnt": pmTcaIfInPkts1dCnt,
       "pmTcaIfInPkts1dThreshold": pmTcaIfInPkts1dThreshold,
       "pmTcaIfInPkts1dOccurTime": pmTcaIfInPkts1dOccurTime,
       "pmTcaIfInBytes15mTable": pmTcaIfInBytes15mTable,
       "pmTcaIfInBytes15mEntry": pmTcaIfInBytes15mEntry,
       "pmTcaIfInBytes15mIndex": pmTcaIfInBytes15mIndex,
       "pmTcaIfInBytes15mId": pmTcaIfInBytes15mId,
       "pmTcaIfInBytes15mUnitType": pmTcaIfInBytes15mUnitType,
       "pmTcaIfInBytes15mCnt": pmTcaIfInBytes15mCnt,
       "pmTcaIfInBytes15mThreshold": pmTcaIfInBytes15mThreshold,
       "pmTcaIfInBytes15mOccurTime": pmTcaIfInBytes15mOccurTime,
       "pmTcaIfInBytes1hTable": pmTcaIfInBytes1hTable,
       "pmTcaIfInBytes1hEntry": pmTcaIfInBytes1hEntry,
       "pmTcaIfInBytes1hIndex": pmTcaIfInBytes1hIndex,
       "pmTcaIfInBytes1hId": pmTcaIfInBytes1hId,
       "pmTcaIfInBytes1hUnitType": pmTcaIfInBytes1hUnitType,
       "pmTcaIfInBytes1hCnt": pmTcaIfInBytes1hCnt,
       "pmTcaIfInBytes1hThreshold": pmTcaIfInBytes1hThreshold,
       "pmTcaIfInBytes1hOccurTime": pmTcaIfInBytes1hOccurTime,
       "pmTcaIfInBytes1dTable": pmTcaIfInBytes1dTable,
       "pmTcaIfInBytes1dEntry": pmTcaIfInBytes1dEntry,
       "pmTcaIfInBytes1dIndex": pmTcaIfInBytes1dIndex,
       "pmTcaIfInBytes1dId": pmTcaIfInBytes1dId,
       "pmTcaIfInBytes1dUnitType": pmTcaIfInBytes1dUnitType,
       "pmTcaIfInBytes1dCnt": pmTcaIfInBytes1dCnt,
       "pmTcaIfInBytes1dThreshold": pmTcaIfInBytes1dThreshold,
       "pmTcaIfInBytes1dOccurTime": pmTcaIfInBytes1dOccurTime,
       "pmTcaIfInBrdcasts15mTable": pmTcaIfInBrdcasts15mTable,
       "pmTcaIfInBrdcasts15mEntry": pmTcaIfInBrdcasts15mEntry,
       "pmTcaIfInBrdcasts15mIndex": pmTcaIfInBrdcasts15mIndex,
       "pmTcaIfInBrdcasts15mId": pmTcaIfInBrdcasts15mId,
       "pmTcaIfInBrdcasts15mUnitType": pmTcaIfInBrdcasts15mUnitType,
       "pmTcaIfInBrdcasts15mCnt": pmTcaIfInBrdcasts15mCnt,
       "pmTcaIfInBrdcasts15mThreshold": pmTcaIfInBrdcasts15mThreshold,
       "pmTcaIfInBrdcasts15mOccurTime": pmTcaIfInBrdcasts15mOccurTime,
       "pmTcaIfInBrdcasts1hTable": pmTcaIfInBrdcasts1hTable,
       "pmTcaIfInBrdcasts1hEntry": pmTcaIfInBrdcasts1hEntry,
       "pmTcaIfInBrdcasts1hIndex": pmTcaIfInBrdcasts1hIndex,
       "pmTcaIfInBrdcasts1hId": pmTcaIfInBrdcasts1hId,
       "pmTcaIfInBrdcasts1hUnitType": pmTcaIfInBrdcasts1hUnitType,
       "pmTcaIfInBrdcasts1hCnt": pmTcaIfInBrdcasts1hCnt,
       "pmTcaIfInBrdcasts1hThreshold": pmTcaIfInBrdcasts1hThreshold,
       "pmTcaIfInBrdcasts1hOccurTime": pmTcaIfInBrdcasts1hOccurTime,
       "pmTcaIfInBrdcasts1dTable": pmTcaIfInBrdcasts1dTable,
       "pmTcaIfInBrdcasts1dEntry": pmTcaIfInBrdcasts1dEntry,
       "pmTcaIfInBrdcasts1dIndex": pmTcaIfInBrdcasts1dIndex,
       "pmTcaIfInBrdcasts1dId": pmTcaIfInBrdcasts1dId,
       "pmTcaIfInBrdcasts1dUnitType": pmTcaIfInBrdcasts1dUnitType,
       "pmTcaIfInBrdcasts1dCnt": pmTcaIfInBrdcasts1dCnt,
       "pmTcaIfInBrdcasts1dThreshold": pmTcaIfInBrdcasts1dThreshold,
       "pmTcaIfInBrdcasts1dOccurTime": pmTcaIfInBrdcasts1dOccurTime,
       "pmTcaIfInMltcasts15mTable": pmTcaIfInMltcasts15mTable,
       "pmTcaIfInMltcasts15mEntry": pmTcaIfInMltcasts15mEntry,
       "pmTcaIfInMltcasts15mIndex": pmTcaIfInMltcasts15mIndex,
       "pmTcaIfInMltcasts15mId": pmTcaIfInMltcasts15mId,
       "pmTcaIfInMltcasts15mUnitType": pmTcaIfInMltcasts15mUnitType,
       "pmTcaIfInMltcasts15mCnt": pmTcaIfInMltcasts15mCnt,
       "pmTcaIfInMltcasts15mThreshold": pmTcaIfInMltcasts15mThreshold,
       "pmTcaIfInMltcasts15mOccurTime": pmTcaIfInMltcasts15mOccurTime,
       "pmTcaIfInMltcasts1hTable": pmTcaIfInMltcasts1hTable,
       "pmTcaIfInMltcasts1hEntry": pmTcaIfInMltcasts1hEntry,
       "pmTcaIfInMltcasts1hIndex": pmTcaIfInMltcasts1hIndex,
       "pmTcaIfInMltcasts1hId": pmTcaIfInMltcasts1hId,
       "pmTcaIfInMltcasts1hUnitType": pmTcaIfInMltcasts1hUnitType,
       "pmTcaIfInMltcasts1hCnt": pmTcaIfInMltcasts1hCnt,
       "pmTcaIfInMltcasts1hThreshold": pmTcaIfInMltcasts1hThreshold,
       "pmTcaIfInMltcasts1hOccurTime": pmTcaIfInMltcasts1hOccurTime,
       "pmTcaIfInMltcasts1dTable": pmTcaIfInMltcasts1dTable,
       "pmTcaIfInMltcasts1dEntry": pmTcaIfInMltcasts1dEntry,
       "pmTcaIfInMltcasts1dIndex": pmTcaIfInMltcasts1dIndex,
       "pmTcaIfInMltcasts1dId": pmTcaIfInMltcasts1dId,
       "pmTcaIfInMltcasts1dUnitType": pmTcaIfInMltcasts1dUnitType,
       "pmTcaIfInMltcasts1dCnt": pmTcaIfInMltcasts1dCnt,
       "pmTcaIfInMltcasts1dThreshold": pmTcaIfInMltcasts1dThreshold,
       "pmTcaIfInMltcasts1dOccurTime": pmTcaIfInMltcasts1dOccurTime,
       "pmTcaIfCrcErr15mTable": pmTcaIfCrcErr15mTable,
       "pmTcaIfCrcErr15mEntry": pmTcaIfCrcErr15mEntry,
       "pmTcaIfCrcErr15mIndex": pmTcaIfCrcErr15mIndex,
       "pmTcaIfCrcErr15mId": pmTcaIfCrcErr15mId,
       "pmTcaIfCrcErr15mUnitType": pmTcaIfCrcErr15mUnitType,
       "pmTcaIfCrcErr15mCnt": pmTcaIfCrcErr15mCnt,
       "pmTcaIfCrcErr15mThreshold": pmTcaIfCrcErr15mThreshold,
       "pmTcaIfCrcErr15mOccurTime": pmTcaIfCrcErr15mOccurTime,
       "pmTcaIfCrcErr1hTable": pmTcaIfCrcErr1hTable,
       "pmTcaIfCrcErr1hEntry": pmTcaIfCrcErr1hEntry,
       "pmTcaIfCrcErr1hIndex": pmTcaIfCrcErr1hIndex,
       "pmTcaIfCrcErr1hId": pmTcaIfCrcErr1hId,
       "pmTcaIfCrcErr1hUnitType": pmTcaIfCrcErr1hUnitType,
       "pmTcaIfCrcErr1hCnt": pmTcaIfCrcErr1hCnt,
       "pmTcaIfCrcErr1hThreshold": pmTcaIfCrcErr1hThreshold,
       "pmTcaIfCrcErr1hOccurTime": pmTcaIfCrcErr1hOccurTime,
       "pmTcaIfCrcErr1dTable": pmTcaIfCrcErr1dTable,
       "pmTcaIfCrcErr1dEntry": pmTcaIfCrcErr1dEntry,
       "pmTcaIfCrcErr1dIndex": pmTcaIfCrcErr1dIndex,
       "pmTcaIfCrcErr1dId": pmTcaIfCrcErr1dId,
       "pmTcaIfCrcErr1dUnitType": pmTcaIfCrcErr1dUnitType,
       "pmTcaIfCrcErr1dCnt": pmTcaIfCrcErr1dCnt,
       "pmTcaIfCrcErr1dThreshold": pmTcaIfCrcErr1dThreshold,
       "pmTcaIfCrcErr1dOccurTime": pmTcaIfCrcErr1dOccurTime,
       "pmTcaIfCollisions15mTable": pmTcaIfCollisions15mTable,
       "pmTcaIfCollisions15mEntry": pmTcaIfCollisions15mEntry,
       "pmTcaIfCollisions15mIndex": pmTcaIfCollisions15mIndex,
       "pmTcaIfCollisions15mId": pmTcaIfCollisions15mId,
       "pmTcaIfCollisions15mUnitType": pmTcaIfCollisions15mUnitType,
       "pmTcaIfCollisions15mCnt": pmTcaIfCollisions15mCnt,
       "pmTcaIfCollisions15mThreshold": pmTcaIfCollisions15mThreshold,
       "pmTcaIfCollisions15mOccurTime": pmTcaIfCollisions15mOccurTime,
       "pmTcaIfCollisions1hTable": pmTcaIfCollisions1hTable,
       "pmTcaIfCollisions1hEntry": pmTcaIfCollisions1hEntry,
       "pmTcaIfCollisions1hIndex": pmTcaIfCollisions1hIndex,
       "pmTcaIfCollisions1hId": pmTcaIfCollisions1hId,
       "pmTcaIfCollisions1hUnitType": pmTcaIfCollisions1hUnitType,
       "pmTcaIfCollisions1hCnt": pmTcaIfCollisions1hCnt,
       "pmTcaIfCollisions1hThreshold": pmTcaIfCollisions1hThreshold,
       "pmTcaIfCollisions1hOccurTime": pmTcaIfCollisions1hOccurTime,
       "pmTcaIfCollisions1dTable": pmTcaIfCollisions1dTable,
       "pmTcaIfCollisions1dEntry": pmTcaIfCollisions1dEntry,
       "pmTcaIfCollisions1dIndex": pmTcaIfCollisions1dIndex,
       "pmTcaIfCollisions1dId": pmTcaIfCollisions1dId,
       "pmTcaIfCollisions1dUnitType": pmTcaIfCollisions1dUnitType,
       "pmTcaIfCollisions1dCnt": pmTcaIfCollisions1dCnt,
       "pmTcaIfCollisions1dThreshold": pmTcaIfCollisions1dThreshold,
       "pmTcaIfCollisions1dOccurTime": pmTcaIfCollisions1dOccurTime,
       "pmTcaIfUndersized15mTable": pmTcaIfUndersized15mTable,
       "pmTcaIfUndersized15mEntry": pmTcaIfUndersized15mEntry,
       "pmTcaIfUndersized15mIndex": pmTcaIfUndersized15mIndex,
       "pmTcaIfUndersized15mId": pmTcaIfUndersized15mId,
       "pmTcaIfUndersized15mUnitType": pmTcaIfUndersized15mUnitType,
       "pmTcaIfUndersized15mCnt": pmTcaIfUndersized15mCnt,
       "pmTcaIfUndersized15mThreshold": pmTcaIfUndersized15mThreshold,
       "pmTcaIfUndersized15mOccurTime": pmTcaIfUndersized15mOccurTime,
       "pmTcaIfUndersized1hTable": pmTcaIfUndersized1hTable,
       "pmTcaIfUndersized1hEntry": pmTcaIfUndersized1hEntry,
       "pmTcaIfUndersized1hIndex": pmTcaIfUndersized1hIndex,
       "pmTcaIfUndersized1hId": pmTcaIfUndersized1hId,
       "pmTcaIfUndersized1hUnitType": pmTcaIfUndersized1hUnitType,
       "pmTcaIfUndersized1hCnt": pmTcaIfUndersized1hCnt,
       "pmTcaIfUndersized1hThreshold": pmTcaIfUndersized1hThreshold,
       "pmTcaIfUndersized1hOccurTime": pmTcaIfUndersized1hOccurTime,
       "pmTcaIfUndersized1dTable": pmTcaIfUndersized1dTable,
       "pmTcaIfUndersized1dEntry": pmTcaIfUndersized1dEntry,
       "pmTcaIfUndersized1dIndex": pmTcaIfUndersized1dIndex,
       "pmTcaIfUndersized1dId": pmTcaIfUndersized1dId,
       "pmTcaIfUndersized1dUnitType": pmTcaIfUndersized1dUnitType,
       "pmTcaIfUndersized1dCnt": pmTcaIfUndersized1dCnt,
       "pmTcaIfUndersized1dThreshold": pmTcaIfUndersized1dThreshold,
       "pmTcaIfUndersized1dOccurTime": pmTcaIfUndersized1dOccurTime,
       "pmTcaIfOversized15mTable": pmTcaIfOversized15mTable,
       "pmTcaIfOversized15mEntry": pmTcaIfOversized15mEntry,
       "pmTcaIfOversized15mIndex": pmTcaIfOversized15mIndex,
       "pmTcaIfOversized15mId": pmTcaIfOversized15mId,
       "pmTcaIfOversized15mUnitType": pmTcaIfOversized15mUnitType,
       "pmTcaIfOversized15mCnt": pmTcaIfOversized15mCnt,
       "pmTcaIfOversized15mThreshold": pmTcaIfOversized15mThreshold,
       "pmTcaIfOversized15mOccurTime": pmTcaIfOversized15mOccurTime,
       "pmTcaIfOversized1hTable": pmTcaIfOversized1hTable,
       "pmTcaIfOversized1hEntry": pmTcaIfOversized1hEntry,
       "pmTcaIfOversized1hIndex": pmTcaIfOversized1hIndex,
       "pmTcaIfOversized1hId": pmTcaIfOversized1hId,
       "pmTcaIfOversized1hUnitType": pmTcaIfOversized1hUnitType,
       "pmTcaIfOversized1hCnt": pmTcaIfOversized1hCnt,
       "pmTcaIfOversized1hThreshold": pmTcaIfOversized1hThreshold,
       "pmTcaIfOversized1hOccurTime": pmTcaIfOversized1hOccurTime,
       "pmTcaIfOversized1dTable": pmTcaIfOversized1dTable,
       "pmTcaIfOversized1dEntry": pmTcaIfOversized1dEntry,
       "pmTcaIfOversized1dIndex": pmTcaIfOversized1dIndex,
       "pmTcaIfOversized1dId": pmTcaIfOversized1dId,
       "pmTcaIfOversized1dUnitType": pmTcaIfOversized1dUnitType,
       "pmTcaIfOversized1dCnt": pmTcaIfOversized1dCnt,
       "pmTcaIfOversized1dThreshold": pmTcaIfOversized1dThreshold,
       "pmTcaIfOversized1dOccurTime": pmTcaIfOversized1dOccurTime,
       "pmTcaIfFragments15mTable": pmTcaIfFragments15mTable,
       "pmTcaIfFragments15mEntry": pmTcaIfFragments15mEntry,
       "pmTcaIfFragments15mIndex": pmTcaIfFragments15mIndex,
       "pmTcaIfFragments15mId": pmTcaIfFragments15mId,
       "pmTcaIfFragments15mUnitType": pmTcaIfFragments15mUnitType,
       "pmTcaIfFragments15mCnt": pmTcaIfFragments15mCnt,
       "pmTcaIfFragments15mThreshold": pmTcaIfFragments15mThreshold,
       "pmTcaIfFragments15mOccurTime": pmTcaIfFragments15mOccurTime,
       "pmTcaIfFragments1hTable": pmTcaIfFragments1hTable,
       "pmTcaIfFragments1hEntry": pmTcaIfFragments1hEntry,
       "pmTcaIfFragments1hIndex": pmTcaIfFragments1hIndex,
       "pmTcaIfFragments1hId": pmTcaIfFragments1hId,
       "pmTcaIfFragments1hUnitType": pmTcaIfFragments1hUnitType,
       "pmTcaIfFragments1hCnt": pmTcaIfFragments1hCnt,
       "pmTcaIfFragments1hThreshold": pmTcaIfFragments1hThreshold,
       "pmTcaIfFragments1hOccurTime": pmTcaIfFragments1hOccurTime,
       "pmTcaIfFragments1dTable": pmTcaIfFragments1dTable,
       "pmTcaIfFragments1dEntry": pmTcaIfFragments1dEntry,
       "pmTcaIfFragments1dIndex": pmTcaIfFragments1dIndex,
       "pmTcaIfFragments1dId": pmTcaIfFragments1dId,
       "pmTcaIfFragments1dUnitType": pmTcaIfFragments1dUnitType,
       "pmTcaIfFragments1dCnt": pmTcaIfFragments1dCnt,
       "pmTcaIfFragments1dThreshold": pmTcaIfFragments1dThreshold,
       "pmTcaIfFragments1dOccurTime": pmTcaIfFragments1dOccurTime,
       "pmTcaIfJabbers15mTable": pmTcaIfJabbers15mTable,
       "pmTcaIfJabbers15mEntry": pmTcaIfJabbers15mEntry,
       "pmTcaIfJabbers15mIndex": pmTcaIfJabbers15mIndex,
       "pmTcaIfJabbers15mId": pmTcaIfJabbers15mId,
       "pmTcaIfJabbers15mUnitType": pmTcaIfJabbers15mUnitType,
       "pmTcaIfJabbers15mCnt": pmTcaIfJabbers15mCnt,
       "pmTcaIfJabbers15mThreshold": pmTcaIfJabbers15mThreshold,
       "pmTcaIfJabbers15mOccurTime": pmTcaIfJabbers15mOccurTime,
       "pmTcaIfJabbers1hTable": pmTcaIfJabbers1hTable,
       "pmTcaIfJabbers1hEntry": pmTcaIfJabbers1hEntry,
       "pmTcaIfJabbers1hIndex": pmTcaIfJabbers1hIndex,
       "pmTcaIfJabbers1hId": pmTcaIfJabbers1hId,
       "pmTcaIfJabbers1hUnitType": pmTcaIfJabbers1hUnitType,
       "pmTcaIfJabbers1hCnt": pmTcaIfJabbers1hCnt,
       "pmTcaIfJabbers1hThreshold": pmTcaIfJabbers1hThreshold,
       "pmTcaIfJabbers1hOccurTime": pmTcaIfJabbers1hOccurTime,
       "pmTcaIfJabbers1dTable": pmTcaIfJabbers1dTable,
       "pmTcaIfJabbers1dEntry": pmTcaIfJabbers1dEntry,
       "pmTcaIfJabbers1dIndex": pmTcaIfJabbers1dIndex,
       "pmTcaIfJabbers1dId": pmTcaIfJabbers1dId,
       "pmTcaIfJabbers1dUnitType": pmTcaIfJabbers1dUnitType,
       "pmTcaIfJabbers1dCnt": pmTcaIfJabbers1dCnt,
       "pmTcaIfJabbers1dThreshold": pmTcaIfJabbers1dThreshold,
       "pmTcaIfJabbers1dOccurTime": pmTcaIfJabbers1dOccurTime,
       "pmTcaIfPkt6415mTable": pmTcaIfPkt6415mTable,
       "pmTcaIfPkt6415mEntry": pmTcaIfPkt6415mEntry,
       "pmTcaIfPkt6415mIndex": pmTcaIfPkt6415mIndex,
       "pmTcaIfPkt6415mId": pmTcaIfPkt6415mId,
       "pmTcaIfPkt6415mUnitType": pmTcaIfPkt6415mUnitType,
       "pmTcaIfPkt6415mCnt": pmTcaIfPkt6415mCnt,
       "pmTcaIfPkt6415mThreshold": pmTcaIfPkt6415mThreshold,
       "pmTcaIfPkt6415mOccurTime": pmTcaIfPkt6415mOccurTime,
       "pmTcaIfPkt641hTable": pmTcaIfPkt641hTable,
       "pmTcaIfPkt641hEntry": pmTcaIfPkt641hEntry,
       "pmTcaIfPkt641hIndex": pmTcaIfPkt641hIndex,
       "pmTcaIfPkt641hId": pmTcaIfPkt641hId,
       "pmTcaIfPkt641hUnitType": pmTcaIfPkt641hUnitType,
       "pmTcaIfPkt641hCnt": pmTcaIfPkt641hCnt,
       "pmTcaIfPkt641hThreshold": pmTcaIfPkt641hThreshold,
       "pmTcaIfPkt641hOccurTime": pmTcaIfPkt641hOccurTime,
       "pmTcaIfPkt641dTable": pmTcaIfPkt641dTable,
       "pmTcaIfPkt641dEntry": pmTcaIfPkt641dEntry,
       "pmTcaIfPkt641dIndex": pmTcaIfPkt641dIndex,
       "pmTcaIfPkt641dId": pmTcaIfPkt641dId,
       "pmTcaIfPkt641dUnitType": pmTcaIfPkt641dUnitType,
       "pmTcaIfPkt641dCnt": pmTcaIfPkt641dCnt,
       "pmTcaIfPkt641dThreshold": pmTcaIfPkt641dThreshold,
       "pmTcaIfPkt641dOccurTime": pmTcaIfPkt641dOccurTime,
       "pmTcaIfPkt65to12715mTable": pmTcaIfPkt65to12715mTable,
       "pmTcaIfPkt65to12715mEntry": pmTcaIfPkt65to12715mEntry,
       "pmTcaIfPkt65to12715mIndex": pmTcaIfPkt65to12715mIndex,
       "pmTcaIfPkt65to12715mId": pmTcaIfPkt65to12715mId,
       "pmTcaIfPkt65to12715mUnitType": pmTcaIfPkt65to12715mUnitType,
       "pmTcaIfPkt65to12715mCnt": pmTcaIfPkt65to12715mCnt,
       "pmTcaIfPkt65to12715mThreshold": pmTcaIfPkt65to12715mThreshold,
       "pmTcaIfPkt65to12715mOccurTime": pmTcaIfPkt65to12715mOccurTime,
       "pmTcaIfPkt65to1271hTable": pmTcaIfPkt65to1271hTable,
       "pmTcaIfPkt65to1271hEntry": pmTcaIfPkt65to1271hEntry,
       "pmTcaIfPkt65to1271hIndex": pmTcaIfPkt65to1271hIndex,
       "pmTcaIfPkt65to1271hId": pmTcaIfPkt65to1271hId,
       "pmTcaIfPkt65to1271hUnitType": pmTcaIfPkt65to1271hUnitType,
       "pmTcaIfPkt65to1271hCnt": pmTcaIfPkt65to1271hCnt,
       "pmTcaIfPkt65to1271hThreshold": pmTcaIfPkt65to1271hThreshold,
       "pmTcaIfPkt65to1271hOccurTime": pmTcaIfPkt65to1271hOccurTime,
       "pmTcaIfPkt65to1271dTable": pmTcaIfPkt65to1271dTable,
       "pmTcaIfPkt65to1271dEntry": pmTcaIfPkt65to1271dEntry,
       "pmTcaIfPkt65to1271dIndex": pmTcaIfPkt65to1271dIndex,
       "pmTcaIfPkt65to1271dId": pmTcaIfPkt65to1271dId,
       "pmTcaIfPkt65to1271dUnitType": pmTcaIfPkt65to1271dUnitType,
       "pmTcaIfPkt65to1271dCnt": pmTcaIfPkt65to1271dCnt,
       "pmTcaIfPkt65to1271dThreshold": pmTcaIfPkt65to1271dThreshold,
       "pmTcaIfPkt65to1271dOccurTime": pmTcaIfPkt65to1271dOccurTime,
       "pmTcaIfPkt128to25515mTable": pmTcaIfPkt128to25515mTable,
       "pmTcaIfPkt128to25515mEntry": pmTcaIfPkt128to25515mEntry,
       "pmTcaIfPkt128to25515mIndex": pmTcaIfPkt128to25515mIndex,
       "pmTcaIfPkt128to25515mId": pmTcaIfPkt128to25515mId,
       "pmTcaIfPkt128to25515mUnitType": pmTcaIfPkt128to25515mUnitType,
       "pmTcaIfPkt128to25515mCnt": pmTcaIfPkt128to25515mCnt,
       "pmTcaIfPkt128to25515mThreshold": pmTcaIfPkt128to25515mThreshold,
       "pmTcaIfPkt128to25515mOccurTime": pmTcaIfPkt128to25515mOccurTime,
       "pmTcaIfPkt128to2551hTable": pmTcaIfPkt128to2551hTable,
       "pmTcaIfPkt128to2551hEntry": pmTcaIfPkt128to2551hEntry,
       "pmTcaIfPkt128to2551hIndex": pmTcaIfPkt128to2551hIndex,
       "pmTcaIfPkt128to2551hId": pmTcaIfPkt128to2551hId,
       "pmTcaIfPkt128to2551hUnitType": pmTcaIfPkt128to2551hUnitType,
       "pmTcaIfPkt128to2551hCnt": pmTcaIfPkt128to2551hCnt,
       "pmTcaIfPkt128to2551hThreshold": pmTcaIfPkt128to2551hThreshold,
       "pmTcaIfPkt128to2551hOccurTime": pmTcaIfPkt128to2551hOccurTime,
       "pmTcaIfPkt128to2551dTable": pmTcaIfPkt128to2551dTable,
       "pmTcaIfPkt128to2551dEntry": pmTcaIfPkt128to2551dEntry,
       "pmTcaIfPkt128to2551dIndex": pmTcaIfPkt128to2551dIndex,
       "pmTcaIfPkt128to2551dId": pmTcaIfPkt128to2551dId,
       "pmTcaIfPkt128to2551dUnitType": pmTcaIfPkt128to2551dUnitType,
       "pmTcaIfPkt128to2551dCnt": pmTcaIfPkt128to2551dCnt,
       "pmTcaIfPkt128to2551dThreshold": pmTcaIfPkt128to2551dThreshold,
       "pmTcaIfPkt128to2551dOccurTime": pmTcaIfPkt128to2551dOccurTime,
       "pmTcaIfPkt256to51115mTable": pmTcaIfPkt256to51115mTable,
       "pmTcaIfPkt256to51115mEntry": pmTcaIfPkt256to51115mEntry,
       "pmTcaIfPkt256to51115mIndex": pmTcaIfPkt256to51115mIndex,
       "pmTcaIfPkt256to51115mId": pmTcaIfPkt256to51115mId,
       "pmTcaIfPkt256to51115mUnitType": pmTcaIfPkt256to51115mUnitType,
       "pmTcaIfPkt256to51115mCnt": pmTcaIfPkt256to51115mCnt,
       "pmTcaIfPkt256to51115mThreshold": pmTcaIfPkt256to51115mThreshold,
       "pmTcaIfPkt256to51115mOccurTime": pmTcaIfPkt256to51115mOccurTime,
       "pmTcaIfPkt256to5111hTable": pmTcaIfPkt256to5111hTable,
       "pmTcaIfPkt256to5111hEntry": pmTcaIfPkt256to5111hEntry,
       "pmTcaIfPkt256to5111hIndex": pmTcaIfPkt256to5111hIndex,
       "pmTcaIfPkt256to5111hId": pmTcaIfPkt256to5111hId,
       "pmTcaIfPkt256to5111hUnitType": pmTcaIfPkt256to5111hUnitType,
       "pmTcaIfPkt256to5111hCnt": pmTcaIfPkt256to5111hCnt,
       "pmTcaIfPkt256to5111hThreshold": pmTcaIfPkt256to5111hThreshold,
       "pmTcaIfPkt256to5111hOccurTime": pmTcaIfPkt256to5111hOccurTime,
       "pmTcaIfPkt256to5111dTable": pmTcaIfPkt256to5111dTable,
       "pmTcaIfPkt256to5111dEntry": pmTcaIfPkt256to5111dEntry,
       "pmTcaIfPkt256to5111dIndex": pmTcaIfPkt256to5111dIndex,
       "pmTcaIfPkt256to5111dId": pmTcaIfPkt256to5111dId,
       "pmTcaIfPkt256to5111dUnitType": pmTcaIfPkt256to5111dUnitType,
       "pmTcaIfPkt256to5111dCnt": pmTcaIfPkt256to5111dCnt,
       "pmTcaIfPkt256to5111dThreshold": pmTcaIfPkt256to5111dThreshold,
       "pmTcaIfPkt256to5111dOccurTime": pmTcaIfPkt256to5111dOccurTime,
       "pmTcaIfPkt512to102315mTable": pmTcaIfPkt512to102315mTable,
       "pmTcaIfPkt512to102315mEntry": pmTcaIfPkt512to102315mEntry,
       "pmTcaIfPkt512to102315mIndex": pmTcaIfPkt512to102315mIndex,
       "pmTcaIfPkt512to102315mId": pmTcaIfPkt512to102315mId,
       "pmTcaIfPkt512to102315mUnitType": pmTcaIfPkt512to102315mUnitType,
       "pmTcaIfPkt512to102315mCnt": pmTcaIfPkt512to102315mCnt,
       "pmTcaIfPkt512to102315mThreshold": pmTcaIfPkt512to102315mThreshold,
       "pmTcaIfPkt512to102315mOccurTime": pmTcaIfPkt512to102315mOccurTime,
       "pmTcaIfPkt512to10231hTable": pmTcaIfPkt512to10231hTable,
       "pmTcaIfPkt512to10231hEntry": pmTcaIfPkt512to10231hEntry,
       "pmTcaIfPkt512to10231hIndex": pmTcaIfPkt512to10231hIndex,
       "pmTcaIfPkt512to10231hId": pmTcaIfPkt512to10231hId,
       "pmTcaIfPkt512to10231hUnitType": pmTcaIfPkt512to10231hUnitType,
       "pmTcaIfPkt512to10231hCnt": pmTcaIfPkt512to10231hCnt,
       "pmTcaIfPkt512to10231hThreshold": pmTcaIfPkt512to10231hThreshold,
       "pmTcaIfPkt512to10231hOccurTime": pmTcaIfPkt512to10231hOccurTime,
       "pmTcaIfPkt512to10231dTable": pmTcaIfPkt512to10231dTable,
       "pmTcaIfPkt512to10231dEntry": pmTcaIfPkt512to10231dEntry,
       "pmTcaIfPkt512to10231dIndex": pmTcaIfPkt512to10231dIndex,
       "pmTcaIfPkt512to10231dId": pmTcaIfPkt512to10231dId,
       "pmTcaIfPkt512to10231dUnitType": pmTcaIfPkt512to10231dUnitType,
       "pmTcaIfPkt512to10231dCnt": pmTcaIfPkt512to10231dCnt,
       "pmTcaIfPkt512to10231dThreshold": pmTcaIfPkt512to10231dThreshold,
       "pmTcaIfPkt512to10231dOccurTime": pmTcaIfPkt512to10231dOccurTime,
       "pmTcaIfPkt102415mTable": pmTcaIfPkt102415mTable,
       "pmTcaIfPkt102415mEntry": pmTcaIfPkt102415mEntry,
       "pmTcaIfPkt102415mIndex": pmTcaIfPkt102415mIndex,
       "pmTcaIfPkt102415mId": pmTcaIfPkt102415mId,
       "pmTcaIfPkt102415mUnitType": pmTcaIfPkt102415mUnitType,
       "pmTcaIfPkt102415mCnt": pmTcaIfPkt102415mCnt,
       "pmTcaIfPkt102415mThreshold": pmTcaIfPkt102415mThreshold,
       "pmTcaIfPkt102415mOccurTime": pmTcaIfPkt102415mOccurTime,
       "pmTcaIfPkt10241hTable": pmTcaIfPkt10241hTable,
       "pmTcaIfPkt10241hEntry": pmTcaIfPkt10241hEntry,
       "pmTcaIfPkt10241hIndex": pmTcaIfPkt10241hIndex,
       "pmTcaIfPkt10241hId": pmTcaIfPkt10241hId,
       "pmTcaIfPkt10241hUnitType": pmTcaIfPkt10241hUnitType,
       "pmTcaIfPkt10241hCnt": pmTcaIfPkt10241hCnt,
       "pmTcaIfPkt10241hThreshold": pmTcaIfPkt10241hThreshold,
       "pmTcaIfPkt10241hOccurTime": pmTcaIfPkt10241hOccurTime,
       "pmTcaIfPkt10241dTable": pmTcaIfPkt10241dTable,
       "pmTcaIfPkt10241dEntry": pmTcaIfPkt10241dEntry,
       "pmTcaIfPkt10241dIndex": pmTcaIfPkt10241dIndex,
       "pmTcaIfPkt10241dId": pmTcaIfPkt10241dId,
       "pmTcaIfPkt10241dUnitType": pmTcaIfPkt10241dUnitType,
       "pmTcaIfPkt10241dCnt": pmTcaIfPkt10241dCnt,
       "pmTcaIfPkt10241dThreshold": pmTcaIfPkt10241dThreshold,
       "pmTcaIfPkt10241dOccurTime": pmTcaIfPkt10241dOccurTime,
       "pmTcaIfOutPkts15mTable": pmTcaIfOutPkts15mTable,
       "pmTcaIfOutPkts15mEntry": pmTcaIfOutPkts15mEntry,
       "pmTcaIfOutPkts15mIndex": pmTcaIfOutPkts15mIndex,
       "pmTcaIfOutPkts15mId": pmTcaIfOutPkts15mId,
       "pmTcaIfOutPkts15mUnitType": pmTcaIfOutPkts15mUnitType,
       "pmTcaIfOutPkts15mCnt": pmTcaIfOutPkts15mCnt,
       "pmTcaIfOutPkts15mThreshold": pmTcaIfOutPkts15mThreshold,
       "pmTcaIfOutPkts15mOccurTime": pmTcaIfOutPkts15mOccurTime,
       "pmTcaIfOutPkts1hTable": pmTcaIfOutPkts1hTable,
       "pmTcaIfOutPkts1hEntry": pmTcaIfOutPkts1hEntry,
       "pmTcaIfOutPkts1hIndex": pmTcaIfOutPkts1hIndex,
       "pmTcaIfOutPkts1hId": pmTcaIfOutPkts1hId,
       "pmTcaIfOutPkts1hUnitType": pmTcaIfOutPkts1hUnitType,
       "pmTcaIfOutPkts1hCnt": pmTcaIfOutPkts1hCnt,
       "pmTcaIfOutPkts1hThreshold": pmTcaIfOutPkts1hThreshold,
       "pmTcaIfOutPkts1hOccurTime": pmTcaIfOutPkts1hOccurTime,
       "pmTcaIfOutPkts1dTable": pmTcaIfOutPkts1dTable,
       "pmTcaIfOutPkts1dEntry": pmTcaIfOutPkts1dEntry,
       "pmTcaIfOutPkts1dIndex": pmTcaIfOutPkts1dIndex,
       "pmTcaIfOutPkts1dId": pmTcaIfOutPkts1dId,
       "pmTcaIfOutPkts1dUnitType": pmTcaIfOutPkts1dUnitType,
       "pmTcaIfOutPkts1dCnt": pmTcaIfOutPkts1dCnt,
       "pmTcaIfOutPkts1dThreshold": pmTcaIfOutPkts1dThreshold,
       "pmTcaIfOutPkts1dOccurTime": pmTcaIfOutPkts1dOccurTime,
       "pmTcaIfOutBytes15mTable": pmTcaIfOutBytes15mTable,
       "pmTcaIfOutBytes15mEntry": pmTcaIfOutBytes15mEntry,
       "pmTcaIfOutBytes15mIndex": pmTcaIfOutBytes15mIndex,
       "pmTcaIfOutBytes15mId": pmTcaIfOutBytes15mId,
       "pmTcaIfOutBytes15mUnitType": pmTcaIfOutBytes15mUnitType,
       "pmTcaIfOutBytes15mCnt": pmTcaIfOutBytes15mCnt,
       "pmTcaIfOutBytes15mThreshold": pmTcaIfOutBytes15mThreshold,
       "pmTcaIfOutBytes15mOccurTime": pmTcaIfOutBytes15mOccurTime,
       "pmTcaIfOutBytes1hTable": pmTcaIfOutBytes1hTable,
       "pmTcaIfOutBytes1hEntry": pmTcaIfOutBytes1hEntry,
       "pmTcaIfOutBytes1hIndex": pmTcaIfOutBytes1hIndex,
       "pmTcaIfOutBytes1hId": pmTcaIfOutBytes1hId,
       "pmTcaIfOutBytes1hUnitType": pmTcaIfOutBytes1hUnitType,
       "pmTcaIfOutBytes1hCnt": pmTcaIfOutBytes1hCnt,
       "pmTcaIfOutBytes1hThreshold": pmTcaIfOutBytes1hThreshold,
       "pmTcaIfOutBytes1hOccurTime": pmTcaIfOutBytes1hOccurTime,
       "pmTcaIfOutBytes1dTable": pmTcaIfOutBytes1dTable,
       "pmTcaIfOutBytes1dEntry": pmTcaIfOutBytes1dEntry,
       "pmTcaIfOutBytes1dIndex": pmTcaIfOutBytes1dIndex,
       "pmTcaIfOutBytes1dId": pmTcaIfOutBytes1dId,
       "pmTcaIfOutBytes1dUnitType": pmTcaIfOutBytes1dUnitType,
       "pmTcaIfOutBytes1dCnt": pmTcaIfOutBytes1dCnt,
       "pmTcaIfOutBytes1dThreshold": pmTcaIfOutBytes1dThreshold,
       "pmTcaIfOutBytes1dOccurTime": pmTcaIfOutBytes1dOccurTime,
       "pmLspPe": pmLspPe,
       "pmLspPeCurr15mTable": pmLspPeCurr15mTable,
       "pmLspPeCurr15mEntry": pmLspPeCurr15mEntry,
       "pmLspPeCurr15mIndex": pmLspPeCurr15mIndex,
       "pmLspPeCurr15mId": pmLspPeCurr15mId,
       "pmLspPeCurr15mUnitType": pmLspPeCurr15mUnitType,
       "pmLspPeCurr15mOutPkts": pmLspPeCurr15mOutPkts,
       "pmLspPeCurr15mOutBytes": pmLspPeCurr15mOutBytes,
       "pmLspPeCurr15mStartTime": pmLspPeCurr15mStartTime,
       "pmLspPeCurr15mStopTime": pmLspPeCurr15mStopTime,
       "pmLspPePrev15mTable": pmLspPePrev15mTable,
       "pmLspPePrev15mEntry": pmLspPePrev15mEntry,
       "pmLspPePrev15mIndex": pmLspPePrev15mIndex,
       "pmLspPePrev15mId": pmLspPePrev15mId,
       "pmLspPePrev15mUnitType": pmLspPePrev15mUnitType,
       "pmLspPePrev15mOutPkts": pmLspPePrev15mOutPkts,
       "pmLspPePrev15mOutBytes": pmLspPePrev15mOutBytes,
       "pmLspPePrev15mStartTime": pmLspPePrev15mStartTime,
       "pmLspPePrev15mStopTime": pmLspPePrev15mStopTime,
       "pmLspPeCurr1hTable": pmLspPeCurr1hTable,
       "pmLspPeCurr1hEntry": pmLspPeCurr1hEntry,
       "pmLspPeCurr1hIndex": pmLspPeCurr1hIndex,
       "pmLspPeCurr1hId": pmLspPeCurr1hId,
       "pmLspPeCurr1hUnitType": pmLspPeCurr1hUnitType,
       "pmLspPeCurr1hOutPkts": pmLspPeCurr1hOutPkts,
       "pmLspPeCurr1hOutBytes": pmLspPeCurr1hOutBytes,
       "pmLspPeCurr1hStartTime": pmLspPeCurr1hStartTime,
       "pmLspPeCurr1hStopTime": pmLspPeCurr1hStopTime,
       "pmLspPePrev1hTable": pmLspPePrev1hTable,
       "pmLspPePrev1hEntry": pmLspPePrev1hEntry,
       "pmLspPePrev1hIndex": pmLspPePrev1hIndex,
       "pmLspPePrev1hId": pmLspPePrev1hId,
       "pmLspPePrev1hUnitType": pmLspPePrev1hUnitType,
       "pmLspPePrev1hOutPkts": pmLspPePrev1hOutPkts,
       "pmLspPePrev1hOutBytes": pmLspPePrev1hOutBytes,
       "pmLspPePrev1hStartTime": pmLspPePrev1hStartTime,
       "pmLspPePrev1hStopTime": pmLspPePrev1hStopTime,
       "pmLspPeCurr1dTable": pmLspPeCurr1dTable,
       "pmLspPeCurr1dEntry": pmLspPeCurr1dEntry,
       "pmLspPeCurr1dIndex": pmLspPeCurr1dIndex,
       "pmLspPeCurr1dId": pmLspPeCurr1dId,
       "pmLspPeCurr1dUnitType": pmLspPeCurr1dUnitType,
       "pmLspPeCurr1dOutPkts": pmLspPeCurr1dOutPkts,
       "pmLspPeCurr1dOutBytes": pmLspPeCurr1dOutBytes,
       "pmLspPeCurr1dStartTime": pmLspPeCurr1dStartTime,
       "pmLspPeCurr1dStopTime": pmLspPeCurr1dStopTime,
       "pmLspPePrev1dTable": pmLspPePrev1dTable,
       "pmLspPePrev1dEntry": pmLspPePrev1dEntry,
       "pmLspPePrev1dIndex": pmLspPePrev1dIndex,
       "pmLspPePrev1dId": pmLspPePrev1dId,
       "pmLspPePrev1dUnitType": pmLspPePrev1dUnitType,
       "pmLspPePrev1dOutPkts": pmLspPePrev1dOutPkts,
       "pmLspPePrev1dOutBytes": pmLspPePrev1dOutBytes,
       "pmLspPePrev1dStartTime": pmLspPePrev1dStartTime,
       "pmLspPePrev1dStopTime": pmLspPePrev1dStopTime,
       "pmTcaLspPeOutPkts15mTable": pmTcaLspPeOutPkts15mTable,
       "pmTcaLspPeOutPkts15mEntry": pmTcaLspPeOutPkts15mEntry,
       "pmTcaLspPeOutPkts15mIndex": pmTcaLspPeOutPkts15mIndex,
       "pmTcaLspPeOutPkts15mId": pmTcaLspPeOutPkts15mId,
       "pmTcaLspPeOutPkts15mUnitType": pmTcaLspPeOutPkts15mUnitType,
       "pmTcaLspPeOutPkts15mCnt": pmTcaLspPeOutPkts15mCnt,
       "pmTcaLspPeOutPkts15mThreshold": pmTcaLspPeOutPkts15mThreshold,
       "pmTcaLspPeOutPkts15mOccurTime": pmTcaLspPeOutPkts15mOccurTime,
       "pmTcaLspPeOutPkts1hTable": pmTcaLspPeOutPkts1hTable,
       "pmTcaLspPeOutPkts1hEntry": pmTcaLspPeOutPkts1hEntry,
       "pmTcaLspPeOutPkts1hIndex": pmTcaLspPeOutPkts1hIndex,
       "pmTcaLspPeOutPkts1hId": pmTcaLspPeOutPkts1hId,
       "pmTcaLspPeOutPkts1hUnitType": pmTcaLspPeOutPkts1hUnitType,
       "pmTcaLspPeOutPkts1hCnt": pmTcaLspPeOutPkts1hCnt,
       "pmTcaLspPeOutPkts1hThreshold": pmTcaLspPeOutPkts1hThreshold,
       "pmTcaLspPeOutPkts1hOccurTime": pmTcaLspPeOutPkts1hOccurTime,
       "pmTcaLspPeOutPkts1dTable": pmTcaLspPeOutPkts1dTable,
       "pmTcaLspPeOutPkts1dEntry": pmTcaLspPeOutPkts1dEntry,
       "pmTcaLspPeOutPkts1dIndex": pmTcaLspPeOutPkts1dIndex,
       "pmTcaLspPeOutPkts1dId": pmTcaLspPeOutPkts1dId,
       "pmTcaLspPeOutPkts1dUnitType": pmTcaLspPeOutPkts1dUnitType,
       "pmTcaLspPeOutPkts1dCnt": pmTcaLspPeOutPkts1dCnt,
       "pmTcaLspPeOutPkts1dThreshold": pmTcaLspPeOutPkts1dThreshold,
       "pmTcaLspPeOutPkts1dOccurTime": pmTcaLspPeOutPkts1dOccurTime,
       "pmTcaLspPeOutBytes15mTable": pmTcaLspPeOutBytes15mTable,
       "pmTcaLspPeOutBytes15mEntry": pmTcaLspPeOutBytes15mEntry,
       "pmTcaLspPeOutBytes15mIndex": pmTcaLspPeOutBytes15mIndex,
       "pmTcaLspPeOutBytes15mId": pmTcaLspPeOutBytes15mId,
       "pmTcaLspPeOutBytes15mUnitType": pmTcaLspPeOutBytes15mUnitType,
       "pmTcaLspPeOutBytes15mCnt": pmTcaLspPeOutBytes15mCnt,
       "pmTcaLspPeOutBytes15mThreshold": pmTcaLspPeOutBytes15mThreshold,
       "pmTcaLspPeOutBytes15mOccurTime": pmTcaLspPeOutBytes15mOccurTime,
       "pmTcaLspPeOutBytes1hTable": pmTcaLspPeOutBytes1hTable,
       "pmTcaLspPeOutBytes1hEntry": pmTcaLspPeOutBytes1hEntry,
       "pmTcaLspPeOutBytes1hIndex": pmTcaLspPeOutBytes1hIndex,
       "pmTcaLspPeOutBytes1hId": pmTcaLspPeOutBytes1hId,
       "pmTcaLspPeOutBytes1hUnitType": pmTcaLspPeOutBytes1hUnitType,
       "pmTcaLspPeOutBytes1hCnt": pmTcaLspPeOutBytes1hCnt,
       "pmTcaLspPeOutBytes1hThreshold": pmTcaLspPeOutBytes1hThreshold,
       "pmTcaLspPeOutBytes1hOccurTime": pmTcaLspPeOutBytes1hOccurTime,
       "pmTcaLspPeOutBytes1dTable": pmTcaLspPeOutBytes1dTable,
       "pmTcaLspPeOutBytes1dEntry": pmTcaLspPeOutBytes1dEntry,
       "pmTcaLspPeOutBytes1dIndex": pmTcaLspPeOutBytes1dIndex,
       "pmTcaLspPeOutBytes1dId": pmTcaLspPeOutBytes1dId,
       "pmTcaLspPeOutBytes1dUnitType": pmTcaLspPeOutBytes1dUnitType,
       "pmTcaLspPeOutBytes1dCnt": pmTcaLspPeOutBytes1dCnt,
       "pmTcaLspPeOutBytes1dThreshold": pmTcaLspPeOutBytes1dThreshold,
       "pmTcaLspPeOutBytes1dOccurTime": pmTcaLspPeOutBytes1dOccurTime,
       "pmLspP": pmLspP,
       "pmLspPCurr15mTable": pmLspPCurr15mTable,
       "pmLspPCurr15mEntry": pmLspPCurr15mEntry,
       "pmLspPCurr15mIndex": pmLspPCurr15mIndex,
       "pmLspPCurr15mId": pmLspPCurr15mId,
       "pmLspPCurr15mUnitType": pmLspPCurr15mUnitType,
       "pmLspPCurr15mEastInPkts": pmLspPCurr15mEastInPkts,
       "pmLspPCurr15mEastInBytes": pmLspPCurr15mEastInBytes,
       "pmLspPCurr15mWestInPkts": pmLspPCurr15mWestInPkts,
       "pmLspPCurr15mWestInBytes": pmLspPCurr15mWestInBytes,
       "pmLspPCurr15mStartTime": pmLspPCurr15mStartTime,
       "pmLspPCurr15mStopTime": pmLspPCurr15mStopTime,
       "pmLspPPrev15mTable": pmLspPPrev15mTable,
       "pmLspPPrev15mEntry": pmLspPPrev15mEntry,
       "pmLspPPrev15mIndex": pmLspPPrev15mIndex,
       "pmLspPPrev15mId": pmLspPPrev15mId,
       "pmLspPPrev15mUnitType": pmLspPPrev15mUnitType,
       "pmLspPPrev15mEastInPkts": pmLspPPrev15mEastInPkts,
       "pmLspPPrev15mEastInBytes": pmLspPPrev15mEastInBytes,
       "pmLspPPrev15mWestInPkts": pmLspPPrev15mWestInPkts,
       "pmLspPPrev15mWestInBytes": pmLspPPrev15mWestInBytes,
       "pmLspPPrev15mStartTime": pmLspPPrev15mStartTime,
       "pmLspPPrev15mStopTime": pmLspPPrev15mStopTime,
       "pmLspPCurr1hTable": pmLspPCurr1hTable,
       "pmLspPCurr1hEntry": pmLspPCurr1hEntry,
       "pmLspPCurr1hIndex": pmLspPCurr1hIndex,
       "pmLspPCurr1hId": pmLspPCurr1hId,
       "pmLspPCurr1hUnitType": pmLspPCurr1hUnitType,
       "pmLspPCurr1hEastInPkts": pmLspPCurr1hEastInPkts,
       "pmLspPCurr1hEastInBytes": pmLspPCurr1hEastInBytes,
       "pmLspPCurr1hWestInPkts": pmLspPCurr1hWestInPkts,
       "pmLspPCurr1hWestInBytes": pmLspPCurr1hWestInBytes,
       "pmLspPCurr1hStartTime": pmLspPCurr1hStartTime,
       "pmLspPCurr1hStopTime": pmLspPCurr1hStopTime,
       "pmLspPPrev1hTable": pmLspPPrev1hTable,
       "pmLspPPrev1hEntry": pmLspPPrev1hEntry,
       "pmLspPPrev1hIndex": pmLspPPrev1hIndex,
       "pmLspPPrev1hId": pmLspPPrev1hId,
       "pmLspPPrev1hUnitType": pmLspPPrev1hUnitType,
       "pmLspPPrev1hEastInPkts": pmLspPPrev1hEastInPkts,
       "pmLspPPrev1hEastInBytes": pmLspPPrev1hEastInBytes,
       "pmLspPPrev1hWestInPkts": pmLspPPrev1hWestInPkts,
       "pmLspPPrev1hWestInBytes": pmLspPPrev1hWestInBytes,
       "pmLspPPrev1hStartTime": pmLspPPrev1hStartTime,
       "pmLspPPrev1hStopTime": pmLspPPrev1hStopTime,
       "pmLspPCurr1dTable": pmLspPCurr1dTable,
       "pmLspPCurr1dEntry": pmLspPCurr1dEntry,
       "pmLspPCurr1dIndex": pmLspPCurr1dIndex,
       "pmLspPCurr1dId": pmLspPCurr1dId,
       "pmLspPCurr1dUnitType": pmLspPCurr1dUnitType,
       "pmLspPCurr1dEastInPkts": pmLspPCurr1dEastInPkts,
       "pmLspPCurr1dEastInBytes": pmLspPCurr1dEastInBytes,
       "pmLspPCurr1dWestInPkts": pmLspPCurr1dWestInPkts,
       "pmLspPCurr1dWestInBytes": pmLspPCurr1dWestInBytes,
       "pmLspPCurr1dStartTime": pmLspPCurr1dStartTime,
       "pmLspPCurr1dStopTime": pmLspPCurr1dStopTime,
       "pmLspPPrev1dTable": pmLspPPrev1dTable,
       "pmLspPPrev1dEntry": pmLspPPrev1dEntry,
       "pmLspPPrev1dIndex": pmLspPPrev1dIndex,
       "pmLspPPrev1dId": pmLspPPrev1dId,
       "pmLspPPrev1dUnitType": pmLspPPrev1dUnitType,
       "pmLspPPrev1dEastInPkts": pmLspPPrev1dEastInPkts,
       "pmLspPPrev1dEastInBytes": pmLspPPrev1dEastInBytes,
       "pmLspPPrev1dWestInPkts": pmLspPPrev1dWestInPkts,
       "pmLspPPrev1dWestInBytes": pmLspPPrev1dWestInBytes,
       "pmLspPPrev1dStartTime": pmLspPPrev1dStartTime,
       "pmLspPPrev1dStopTime": pmLspPPrev1dStopTime,
       "pmTcaLspPEastInPkts15mTable": pmTcaLspPEastInPkts15mTable,
       "pmTcaLspPEastInPkts15mEntry": pmTcaLspPEastInPkts15mEntry,
       "pmTcaLspPEastInPkts15mIndex": pmTcaLspPEastInPkts15mIndex,
       "pmTcaLspPEastInPkts15mId": pmTcaLspPEastInPkts15mId,
       "pmTcaLspPEastInPkts15mUnitType": pmTcaLspPEastInPkts15mUnitType,
       "pmTcaLspPEastInPkts15mCnt": pmTcaLspPEastInPkts15mCnt,
       "pmTcaLspPEastInPkts15mThreshold": pmTcaLspPEastInPkts15mThreshold,
       "pmTcaLspPEastInPkts15mOccurTime": pmTcaLspPEastInPkts15mOccurTime,
       "pmTcaLspPEastInPkts1hTable": pmTcaLspPEastInPkts1hTable,
       "pmTcaLspPEastInPkts1hEntry": pmTcaLspPEastInPkts1hEntry,
       "pmTcaLspPEastInPkts1hIndex": pmTcaLspPEastInPkts1hIndex,
       "pmTcaLspPEastInPkts1hId": pmTcaLspPEastInPkts1hId,
       "pmTcaLspPEastInPkts1hUnitType": pmTcaLspPEastInPkts1hUnitType,
       "pmTcaLspPEastInPkts1hCnt": pmTcaLspPEastInPkts1hCnt,
       "pmTcaLspPEastInPkts1hThreshold": pmTcaLspPEastInPkts1hThreshold,
       "pmTcaLspPEastInPkts1hOccurTime": pmTcaLspPEastInPkts1hOccurTime,
       "pmTcaLspPEastInPkts1dTable": pmTcaLspPEastInPkts1dTable,
       "pmTcaLspPEastInPkts1dEntry": pmTcaLspPEastInPkts1dEntry,
       "pmTcaLspPEastInPkts1dIndex": pmTcaLspPEastInPkts1dIndex,
       "pmTcaLspPEastInPkts1dId": pmTcaLspPEastInPkts1dId,
       "pmTcaLspPEastInPkts1dUnitType": pmTcaLspPEastInPkts1dUnitType,
       "pmTcaLspPEastInPkts1dCnt": pmTcaLspPEastInPkts1dCnt,
       "pmTcaLspPEastInPkts1dThreshold": pmTcaLspPEastInPkts1dThreshold,
       "pmTcaLspPEastInPkts1dOccurTime": pmTcaLspPEastInPkts1dOccurTime,
       "pmTcaLspPEastInBytes15mTable": pmTcaLspPEastInBytes15mTable,
       "pmTcaLspPEastInBytes15mEntry": pmTcaLspPEastInBytes15mEntry,
       "pmTcaLspPEastInBytes15mIndex": pmTcaLspPEastInBytes15mIndex,
       "pmTcaLspPEastInBytes15mId": pmTcaLspPEastInBytes15mId,
       "pmTcaLspPEastInBytes15mUnitType": pmTcaLspPEastInBytes15mUnitType,
       "pmTcaLspPEastInBytes15mCnt": pmTcaLspPEastInBytes15mCnt,
       "pmTcaLspPEastInBytes15mThreshold": pmTcaLspPEastInBytes15mThreshold,
       "pmTcaLspPEastInBytes15mOccurTime": pmTcaLspPEastInBytes15mOccurTime,
       "pmTcaLspPEastInBytes1hTable": pmTcaLspPEastInBytes1hTable,
       "pmTcaLspPEastInBytes1hEntry": pmTcaLspPEastInBytes1hEntry,
       "pmTcaLspPEastInBytes1hIndex": pmTcaLspPEastInBytes1hIndex,
       "pmTcaLspPEastInBytes1hId": pmTcaLspPEastInBytes1hId,
       "pmTcaLspPEastInBytes1hUnitType": pmTcaLspPEastInBytes1hUnitType,
       "pmTcaLspPEastInBytes1hCnt": pmTcaLspPEastInBytes1hCnt,
       "pmTcaLspPEastInBytes1hThreshold": pmTcaLspPEastInBytes1hThreshold,
       "pmTcaLspPEastInBytes1hOccurTime": pmTcaLspPEastInBytes1hOccurTime,
       "pmTcaLspPEastInBytes1dTable": pmTcaLspPEastInBytes1dTable,
       "pmTcaLspPEastInBytes1dEntry": pmTcaLspPEastInBytes1dEntry,
       "pmTcaLspPEastInBytes1dIndex": pmTcaLspPEastInBytes1dIndex,
       "pmTcaLspPEastInBytes1dId": pmTcaLspPEastInBytes1dId,
       "pmTcaLspPEastInBytes1dUnitType": pmTcaLspPEastInBytes1dUnitType,
       "pmTcaLspPEastInBytes1dCnt": pmTcaLspPEastInBytes1dCnt,
       "pmTcaLspPEastInBytes1dThreshold": pmTcaLspPEastInBytes1dThreshold,
       "pmTcaLspPEastInBytes1dOccurTime": pmTcaLspPEastInBytes1dOccurTime,
       "pmTcaLspPWestInPkts15mTable": pmTcaLspPWestInPkts15mTable,
       "pmTcaLspPWestInPkts15mEntry": pmTcaLspPWestInPkts15mEntry,
       "pmTcaLspPWestInPkts15mIndex": pmTcaLspPWestInPkts15mIndex,
       "pmTcaLspPWestInPkts15mId": pmTcaLspPWestInPkts15mId,
       "pmTcaLspPWestInPkts15mUnitType": pmTcaLspPWestInPkts15mUnitType,
       "pmTcaLspPWestInPkts15mCnt": pmTcaLspPWestInPkts15mCnt,
       "pmTcaLspPWestInPkts15mThreshold": pmTcaLspPWestInPkts15mThreshold,
       "pmTcaLspPWestInPkts15mOccurTime": pmTcaLspPWestInPkts15mOccurTime,
       "pmTcaLspPWestInPkts1hTable": pmTcaLspPWestInPkts1hTable,
       "pmTcaLspPWestInPkts1hEntry": pmTcaLspPWestInPkts1hEntry,
       "pmTcaLspPWestInPkts1hIndex": pmTcaLspPWestInPkts1hIndex,
       "pmTcaLspPWestInPkts1hId": pmTcaLspPWestInPkts1hId,
       "pmTcaLspPWestInPkts1hUnitType": pmTcaLspPWestInPkts1hUnitType,
       "pmTcaLspPWestInPkts1hCnt": pmTcaLspPWestInPkts1hCnt,
       "pmTcaLspPWestInPkts1hThreshold": pmTcaLspPWestInPkts1hThreshold,
       "pmTcaLspPWestInPkts1hOccurTime": pmTcaLspPWestInPkts1hOccurTime,
       "pmTcaLspPWestInPkts1dTable": pmTcaLspPWestInPkts1dTable,
       "pmTcaLspPWestInPkts1dEntry": pmTcaLspPWestInPkts1dEntry,
       "pmTcaLspPWestInPkts1dIndex": pmTcaLspPWestInPkts1dIndex,
       "pmTcaLspPWestInPkts1dId": pmTcaLspPWestInPkts1dId,
       "pmTcaLspPWestInPkts1dUnitType": pmTcaLspPWestInPkts1dUnitType,
       "pmTcaLspPWestInPkts1dCnt": pmTcaLspPWestInPkts1dCnt,
       "pmTcaLspPWestInPkts1dThreshold": pmTcaLspPWestInPkts1dThreshold,
       "pmTcaLspPWestInPkts1dOccurTime": pmTcaLspPWestInPkts1dOccurTime,
       "pmTcaLspPWestInBytes15mTable": pmTcaLspPWestInBytes15mTable,
       "pmTcaLspPWestInBytes15mEntry": pmTcaLspPWestInBytes15mEntry,
       "pmTcaLspPWestInBytes15mIndex": pmTcaLspPWestInBytes15mIndex,
       "pmTcaLspPWestInBytes15mId": pmTcaLspPWestInBytes15mId,
       "pmTcaLspPWestInBytes15mUnitType": pmTcaLspPWestInBytes15mUnitType,
       "pmTcaLspPWestInBytes15mCnt": pmTcaLspPWestInBytes15mCnt,
       "pmTcaLspPWestInBytes15mThreshold": pmTcaLspPWestInBytes15mThreshold,
       "pmTcaLspPWestInBytes15mOccurTime": pmTcaLspPWestInBytes15mOccurTime,
       "pmTcaLspPWestInBytes1hTable": pmTcaLspPWestInBytes1hTable,
       "pmTcaLspPWestInBytes1hEntry": pmTcaLspPWestInBytes1hEntry,
       "pmTcaLspPWestInBytes1hIndex": pmTcaLspPWestInBytes1hIndex,
       "pmTcaLspPWestInBytes1hId": pmTcaLspPWestInBytes1hId,
       "pmTcaLspPWestInBytes1hUnitType": pmTcaLspPWestInBytes1hUnitType,
       "pmTcaLspPWestInBytes1hCnt": pmTcaLspPWestInBytes1hCnt,
       "pmTcaLspPWestInBytes1hThreshold": pmTcaLspPWestInBytes1hThreshold,
       "pmTcaLspPWestInBytes1hOccurTime": pmTcaLspPWestInBytes1hOccurTime,
       "pmTcaLspPWestInBytes1dTable": pmTcaLspPWestInBytes1dTable,
       "pmTcaLspPWestInBytes1dEntry": pmTcaLspPWestInBytes1dEntry,
       "pmTcaLspPWestInBytes1dIndex": pmTcaLspPWestInBytes1dIndex,
       "pmTcaLspPWestInBytes1dId": pmTcaLspPWestInBytes1dId,
       "pmTcaLspPWestInBytes1dUnitType": pmTcaLspPWestInBytes1dUnitType,
       "pmTcaLspPWestInBytes1dCnt": pmTcaLspPWestInBytes1dCnt,
       "pmTcaLspPWestInBytes1dThreshold": pmTcaLspPWestInBytes1dThreshold,
       "pmTcaLspPWestInBytes1dOccurTime": pmTcaLspPWestInBytes1dOccurTime,
       "pmVpws": pmVpws,
       "pmVpwsCurr15mTable": pmVpwsCurr15mTable,
       "pmVpwsCurr15mEntry": pmVpwsCurr15mEntry,
       "pmVpwsCurr15mIndex": pmVpwsCurr15mIndex,
       "pmVpwsCurr15mId": pmVpwsCurr15mId,
       "pmVpwsCurr15mUnitType": pmVpwsCurr15mUnitType,
       "pmVpwsCurr15mIngressPkts": pmVpwsCurr15mIngressPkts,
       "pmVpwsCurr15mIngressBytes": pmVpwsCurr15mIngressBytes,
       "pmVpwsCurr15mEgressPkts": pmVpwsCurr15mEgressPkts,
       "pmVpwsCurr15mEgressBytes": pmVpwsCurr15mEgressBytes,
       "pmVpwsCurr15mStartTime": pmVpwsCurr15mStartTime,
       "pmVpwsCurr15mStopTime": pmVpwsCurr15mStopTime,
       "pmVpwsPrev15mTable": pmVpwsPrev15mTable,
       "pmVpwsPrev15mEntry": pmVpwsPrev15mEntry,
       "pmVpwsPrev15mIndex": pmVpwsPrev15mIndex,
       "pmVpwsPrev15mId": pmVpwsPrev15mId,
       "pmVpwsPrev15mUnitType": pmVpwsPrev15mUnitType,
       "pmVpwsPrev15mIngressPkts": pmVpwsPrev15mIngressPkts,
       "pmVpwsPrev15mIngressBytes": pmVpwsPrev15mIngressBytes,
       "pmVpwsPrev15mEgressPkts": pmVpwsPrev15mEgressPkts,
       "pmVpwsPrev15mEgressBytes": pmVpwsPrev15mEgressBytes,
       "pmVpwsPrev15mStartTime": pmVpwsPrev15mStartTime,
       "pmVpwsPrev15mStopTime": pmVpwsPrev15mStopTime,
       "pmVpwsCurr1hTable": pmVpwsCurr1hTable,
       "pmVpwsCurr1hEntry": pmVpwsCurr1hEntry,
       "pmVpwsCurr1hIndex": pmVpwsCurr1hIndex,
       "pmVpwsCurr1hId": pmVpwsCurr1hId,
       "pmVpwsCurr1hUnitType": pmVpwsCurr1hUnitType,
       "pmVpwsCurr1hIngressPkts": pmVpwsCurr1hIngressPkts,
       "pmVpwsCurr1hIngressBytes": pmVpwsCurr1hIngressBytes,
       "pmVpwsCurr1hEgressPkts": pmVpwsCurr1hEgressPkts,
       "pmVpwsCurr1hEgressBytes": pmVpwsCurr1hEgressBytes,
       "pmVpwsCurr1hStartTime": pmVpwsCurr1hStartTime,
       "pmVpwsCurr1hStopTime": pmVpwsCurr1hStopTime,
       "pmVpwsPrev1hTable": pmVpwsPrev1hTable,
       "pmVpwsPrev1hEntry": pmVpwsPrev1hEntry,
       "pmVpwsPrev1hIndex": pmVpwsPrev1hIndex,
       "pmVpwsPrev1hId": pmVpwsPrev1hId,
       "pmVpwsPrev1hUnitType": pmVpwsPrev1hUnitType,
       "pmVpwsPrev1hIngressPkts": pmVpwsPrev1hIngressPkts,
       "pmVpwsPrev1hIngressBytes": pmVpwsPrev1hIngressBytes,
       "pmVpwsPrev1hEgressPkts": pmVpwsPrev1hEgressPkts,
       "pmVpwsPrev1hEgressBytes": pmVpwsPrev1hEgressBytes,
       "pmVpwsPrev1hStartTime": pmVpwsPrev1hStartTime,
       "pmVpwsPrev1hStopTime": pmVpwsPrev1hStopTime,
       "pmVpwsCurr1dTable": pmVpwsCurr1dTable,
       "pmVpwsCurr1dEntry": pmVpwsCurr1dEntry,
       "pmVpwsCurr1dIndex": pmVpwsCurr1dIndex,
       "pmVpwsCurr1dId": pmVpwsCurr1dId,
       "pmVpwsCurr1dUnitType": pmVpwsCurr1dUnitType,
       "pmVpwsCurr1dIngressPkts": pmVpwsCurr1dIngressPkts,
       "pmVpwsCurr1dIngressBytes": pmVpwsCurr1dIngressBytes,
       "pmVpwsCurr1dEgressPkts": pmVpwsCurr1dEgressPkts,
       "pmVpwsCurr1dEgressBytes": pmVpwsCurr1dEgressBytes,
       "pmVpwsCurr1dStartTime": pmVpwsCurr1dStartTime,
       "pmVpwsCurr1dStopTime": pmVpwsCurr1dStopTime,
       "pmVpwsPrev1dTable": pmVpwsPrev1dTable,
       "pmVpwsPrev1dEntry": pmVpwsPrev1dEntry,
       "pmVpwsPrev1dIndex": pmVpwsPrev1dIndex,
       "pmVpwsPrev1dId": pmVpwsPrev1dId,
       "pmVpwsPrev1dUnitType": pmVpwsPrev1dUnitType,
       "pmVpwsPrev1dIngressPkts": pmVpwsPrev1dIngressPkts,
       "pmVpwsPrev1dIngressBytes": pmVpwsPrev1dIngressBytes,
       "pmVpwsPrev1dEgressPkts": pmVpwsPrev1dEgressPkts,
       "pmVpwsPrev1dEgressBytes": pmVpwsPrev1dEgressBytes,
       "pmVpwsPrev1dStartTime": pmVpwsPrev1dStartTime,
       "pmVpwsPrev1dStopTime": pmVpwsPrev1dStopTime,
       "pmTcaVpwsIngressPkts15mTable": pmTcaVpwsIngressPkts15mTable,
       "pmTcaVpwsIngressPkts15mEntry": pmTcaVpwsIngressPkts15mEntry,
       "pmTcaVpwsIngressPkts15mIndex": pmTcaVpwsIngressPkts15mIndex,
       "pmTcaVpwsIngressPkts15mId": pmTcaVpwsIngressPkts15mId,
       "pmTcaVpwsIngressPkts15mUnitType": pmTcaVpwsIngressPkts15mUnitType,
       "pmTcaVpwsIngressPkts15mCnt": pmTcaVpwsIngressPkts15mCnt,
       "pmTcaVpwsIngressPkts15mThreshold": pmTcaVpwsIngressPkts15mThreshold,
       "pmTcaVpwsIngressPkts15mOccurTime": pmTcaVpwsIngressPkts15mOccurTime,
       "pmTcaVpwsIngressPkts1hTable": pmTcaVpwsIngressPkts1hTable,
       "pmTcaVpwsIngressPkts1hEntry": pmTcaVpwsIngressPkts1hEntry,
       "pmTcaVpwsIngressPkts1hIndex": pmTcaVpwsIngressPkts1hIndex,
       "pmTcaVpwsIngressPkts1hId": pmTcaVpwsIngressPkts1hId,
       "pmTcaVpwsIngressPkts1hUnitType": pmTcaVpwsIngressPkts1hUnitType,
       "pmTcaVpwsIngressPkts1hCnt": pmTcaVpwsIngressPkts1hCnt,
       "pmTcaVpwsIngressPkts1hThreshold": pmTcaVpwsIngressPkts1hThreshold,
       "pmTcaVpwsIngressPkts1hOccurTime": pmTcaVpwsIngressPkts1hOccurTime,
       "pmTcaVpwsIngressPkts1dTable": pmTcaVpwsIngressPkts1dTable,
       "pmTcaVpwsIngressPkts1dEntry": pmTcaVpwsIngressPkts1dEntry,
       "pmTcaVpwsIngressPkts1dIndex": pmTcaVpwsIngressPkts1dIndex,
       "pmTcaVpwsIngressPkts1dId": pmTcaVpwsIngressPkts1dId,
       "pmTcaVpwsIngressPkts1dUnitType": pmTcaVpwsIngressPkts1dUnitType,
       "pmTcaVpwsIngressPkts1dCnt": pmTcaVpwsIngressPkts1dCnt,
       "pmTcaVpwsIngressPkts1dThreshold": pmTcaVpwsIngressPkts1dThreshold,
       "pmTcaVpwsIngressPkts1dOccurTime": pmTcaVpwsIngressPkts1dOccurTime,
       "pmTcaVpwsIngressBytes15mTable": pmTcaVpwsIngressBytes15mTable,
       "pmTcaVpwsIngressBytes15mEntry": pmTcaVpwsIngressBytes15mEntry,
       "pmTcaVpwsIngressBytes15mIndex": pmTcaVpwsIngressBytes15mIndex,
       "pmTcaVpwsIngressBytes15mId": pmTcaVpwsIngressBytes15mId,
       "pmTcaVpwsIngressBytes15mUnitType": pmTcaVpwsIngressBytes15mUnitType,
       "pmTcaVpwsIngressBytes15mCnt": pmTcaVpwsIngressBytes15mCnt,
       "pmTcaVpwsIngressBytes15mThreshold": pmTcaVpwsIngressBytes15mThreshold,
       "pmTcaVpwsIngressBytes15mOccurTime": pmTcaVpwsIngressBytes15mOccurTime,
       "pmTcaVpwsIngressBytes1hTable": pmTcaVpwsIngressBytes1hTable,
       "pmTcaVpwsIngressBytes1hEntry": pmTcaVpwsIngressBytes1hEntry,
       "pmTcaVpwsIngressBytes1hIndex": pmTcaVpwsIngressBytes1hIndex,
       "pmTcaVpwsIngressBytes1hId": pmTcaVpwsIngressBytes1hId,
       "pmTcaVpwsIngressBytes1hUnitType": pmTcaVpwsIngressBytes1hUnitType,
       "pmTcaVpwsIngressBytes1hCnt": pmTcaVpwsIngressBytes1hCnt,
       "pmTcaVpwsIngressBytes1hThreshold": pmTcaVpwsIngressBytes1hThreshold,
       "pmTcaVpwsIngressBytes1hOccurTime": pmTcaVpwsIngressBytes1hOccurTime,
       "pmTcaVpwsIngressBytes1dTable": pmTcaVpwsIngressBytes1dTable,
       "pmTcaVpwsIngressBytes1dEntry": pmTcaVpwsIngressBytes1dEntry,
       "pmTcaVpwsIngressBytes1dIndex": pmTcaVpwsIngressBytes1dIndex,
       "pmTcaVpwsIngressBytes1dId": pmTcaVpwsIngressBytes1dId,
       "pmTcaVpwsIngressBytes1dUnitType": pmTcaVpwsIngressBytes1dUnitType,
       "pmTcaVpwsIngressBytes1dCnt": pmTcaVpwsIngressBytes1dCnt,
       "pmTcaVpwsIngressBytes1dThreshold": pmTcaVpwsIngressBytes1dThreshold,
       "pmTcaVpwsIngressBytes1dOccurTime": pmTcaVpwsIngressBytes1dOccurTime,
       "pmTcaVpwsEgressPkts15mTable": pmTcaVpwsEgressPkts15mTable,
       "pmTcaVpwsEgressPkts15mEntry": pmTcaVpwsEgressPkts15mEntry,
       "pmTcaVpwsEgressPkts15mIndex": pmTcaVpwsEgressPkts15mIndex,
       "pmTcaVpwsEgressPkts15mId": pmTcaVpwsEgressPkts15mId,
       "pmTcaVpwsEgressPkts15mUnitType": pmTcaVpwsEgressPkts15mUnitType,
       "pmTcaVpwsEgressPkts15mCnt": pmTcaVpwsEgressPkts15mCnt,
       "pmTcaVpwsEgressPkts15mThreshold": pmTcaVpwsEgressPkts15mThreshold,
       "pmTcaVpwsEgressPkts15mOccurTime": pmTcaVpwsEgressPkts15mOccurTime,
       "pmTcaVpwsEgressPkts1hTable": pmTcaVpwsEgressPkts1hTable,
       "pmTcaVpwsEgressPkts1hEntry": pmTcaVpwsEgressPkts1hEntry,
       "pmTcaVpwsEgressPkts1hIndex": pmTcaVpwsEgressPkts1hIndex,
       "pmTcaVpwsEgressPkts1hId": pmTcaVpwsEgressPkts1hId,
       "pmTcaVpwsEgressPkts1hUnitType": pmTcaVpwsEgressPkts1hUnitType,
       "pmTcaVpwsEgressPkts1hCnt": pmTcaVpwsEgressPkts1hCnt,
       "pmTcaVpwsEgressPkts1hThreshold": pmTcaVpwsEgressPkts1hThreshold,
       "pmTcaVpwsEgressPkts1hOccurTime": pmTcaVpwsEgressPkts1hOccurTime,
       "pmTcaVpwsEgressPkts1dTable": pmTcaVpwsEgressPkts1dTable,
       "pmTcaVpwsEgressPkts1dEntry": pmTcaVpwsEgressPkts1dEntry,
       "pmTcaVpwsEgressPkts1dIndex": pmTcaVpwsEgressPkts1dIndex,
       "pmTcaVpwsEgressPkts1dId": pmTcaVpwsEgressPkts1dId,
       "pmTcaVpwsEgressPkts1dUnitType": pmTcaVpwsEgressPkts1dUnitType,
       "pmTcaVpwsEgressPkts1dCnt": pmTcaVpwsEgressPkts1dCnt,
       "pmTcaVpwsEgressPkts1dThreshold": pmTcaVpwsEgressPkts1dThreshold,
       "pmTcaVpwsEgressPkts1dOccurTime": pmTcaVpwsEgressPkts1dOccurTime,
       "pmTcaVpwsEgressBytes15mTable": pmTcaVpwsEgressBytes15mTable,
       "pmTcaVpwsEgressBytes15mEntry": pmTcaVpwsEgressBytes15mEntry,
       "pmTcaVpwsEgressBytes15mIndex": pmTcaVpwsEgressBytes15mIndex,
       "pmTcaVpwsEgressBytes15mId": pmTcaVpwsEgressBytes15mId,
       "pmTcaVpwsEgressBytes15mUnitType": pmTcaVpwsEgressBytes15mUnitType,
       "pmTcaVpwsEgressBytes15mCnt": pmTcaVpwsEgressBytes15mCnt,
       "pmTcaVpwsEgressBytes15mThreshold": pmTcaVpwsEgressBytes15mThreshold,
       "pmTcaVpwsEgressBytes15mOccurTime": pmTcaVpwsEgressBytes15mOccurTime,
       "pmTcaVpwsEgressBytes1hTable": pmTcaVpwsEgressBytes1hTable,
       "pmTcaVpwsEgressBytes1hEntry": pmTcaVpwsEgressBytes1hEntry,
       "pmTcaVpwsEgressBytes1hIndex": pmTcaVpwsEgressBytes1hIndex,
       "pmTcaVpwsEgressBytes1hId": pmTcaVpwsEgressBytes1hId,
       "pmTcaVpwsEgressBytes1hUnitType": pmTcaVpwsEgressBytes1hUnitType,
       "pmTcaVpwsEgressBytes1hCnt": pmTcaVpwsEgressBytes1hCnt,
       "pmTcaVpwsEgressBytes1hThreshold": pmTcaVpwsEgressBytes1hThreshold,
       "pmTcaVpwsEgressBytes1hOccurTime": pmTcaVpwsEgressBytes1hOccurTime,
       "pmTcaVpwsEgressBytes1dTable": pmTcaVpwsEgressBytes1dTable,
       "pmTcaVpwsEgressBytes1dEntry": pmTcaVpwsEgressBytes1dEntry,
       "pmTcaVpwsEgressBytes1dIndex": pmTcaVpwsEgressBytes1dIndex,
       "pmTcaVpwsEgressBytes1dId": pmTcaVpwsEgressBytes1dId,
       "pmTcaVpwsEgressBytes1dUnitType": pmTcaVpwsEgressBytes1dUnitType,
       "pmTcaVpwsEgressBytes1dCnt": pmTcaVpwsEgressBytes1dCnt,
       "pmTcaVpwsEgressBytes1dThreshold": pmTcaVpwsEgressBytes1dThreshold,
       "pmTcaVpwsEgressBytes1dOccurTime": pmTcaVpwsEgressBytes1dOccurTime,
       "pmVpls": pmVpls,
       "pmVplsCurr15mTable": pmVplsCurr15mTable,
       "pmVplsCurr15mEntry": pmVplsCurr15mEntry,
       "pmVplsCurr15mIndex": pmVplsCurr15mIndex,
       "pmVplsCurr15mId": pmVplsCurr15mId,
       "pmVplsCurr15mUnitType": pmVplsCurr15mUnitType,
       "pmVplsCurr15mIngressPkts": pmVplsCurr15mIngressPkts,
       "pmVplsCurr15mIngressBytes": pmVplsCurr15mIngressBytes,
       "pmVplsCurr15mEgressPkts": pmVplsCurr15mEgressPkts,
       "pmVplsCurr15mEgressBytes": pmVplsCurr15mEgressBytes,
       "pmVplsCurr15mStartTime": pmVplsCurr15mStartTime,
       "pmVplsCurr15mStopTime": pmVplsCurr15mStopTime,
       "pmVplsPrev15mTable": pmVplsPrev15mTable,
       "pmVplsPrev15mEntry": pmVplsPrev15mEntry,
       "pmVplsPrev15mIndex": pmVplsPrev15mIndex,
       "pmVplsPrev15mId": pmVplsPrev15mId,
       "pmVplsPrev15mUnitType": pmVplsPrev15mUnitType,
       "pmVplsPrev15mIngressPkts": pmVplsPrev15mIngressPkts,
       "pmVplsPrev15mIngressBytes": pmVplsPrev15mIngressBytes,
       "pmVplsPrev15mEgressPkts": pmVplsPrev15mEgressPkts,
       "pmVplsPrev15mEgressBytes": pmVplsPrev15mEgressBytes,
       "pmVplsPrev15mStartTime": pmVplsPrev15mStartTime,
       "pmVplsPrev15mStopTime": pmVplsPrev15mStopTime,
       "pmVplsCurr1hTable": pmVplsCurr1hTable,
       "pmVplsCurr1hEntry": pmVplsCurr1hEntry,
       "pmVplsCurr1hIndex": pmVplsCurr1hIndex,
       "pmVplsCurr1hId": pmVplsCurr1hId,
       "pmVplsCurr1hUnitType": pmVplsCurr1hUnitType,
       "pmVplsCurr1hIngressPkts": pmVplsCurr1hIngressPkts,
       "pmVplsCurr1hIngressBytes": pmVplsCurr1hIngressBytes,
       "pmVplsCurr1hEgressPkts": pmVplsCurr1hEgressPkts,
       "pmVplsCurr1hEgressBytes": pmVplsCurr1hEgressBytes,
       "pmVplsCurr1hStartTime": pmVplsCurr1hStartTime,
       "pmVplsCurr1hStopTime": pmVplsCurr1hStopTime,
       "pmVplsPrev1hTable": pmVplsPrev1hTable,
       "pmVplsPrev1hEntry": pmVplsPrev1hEntry,
       "pmVplsPrev1hIndex": pmVplsPrev1hIndex,
       "pmVplsPrev1hId": pmVplsPrev1hId,
       "pmVplsPrev1hUnitType": pmVplsPrev1hUnitType,
       "pmVplsPrev1hIngressPkts": pmVplsPrev1hIngressPkts,
       "pmVplsPrev1hIngressBytes": pmVplsPrev1hIngressBytes,
       "pmVplsPrev1hEgressPkts": pmVplsPrev1hEgressPkts,
       "pmVplsPrev1hEgressBytes": pmVplsPrev1hEgressBytes,
       "pmVplsPrev1hStartTime": pmVplsPrev1hStartTime,
       "pmVplsPrev1hStopTime": pmVplsPrev1hStopTime,
       "pmVplsCurr1dTable": pmVplsCurr1dTable,
       "pmVplsCurr1dEntry": pmVplsCurr1dEntry,
       "pmVplsCurr1dIndex": pmVplsCurr1dIndex,
       "pmVplsCurr1dId": pmVplsCurr1dId,
       "pmVplsCurr1dUnitType": pmVplsCurr1dUnitType,
       "pmVplsCurr1dIngressPkts": pmVplsCurr1dIngressPkts,
       "pmVplsCurr1dIngressBytes": pmVplsCurr1dIngressBytes,
       "pmVplsCurr1dEgressPkts": pmVplsCurr1dEgressPkts,
       "pmVplsCurr1dEgressBytes": pmVplsCurr1dEgressBytes,
       "pmVplsCurr1dStartTime": pmVplsCurr1dStartTime,
       "pmVplsCurr1dStopTime": pmVplsCurr1dStopTime,
       "pmVplsPrev1dTable": pmVplsPrev1dTable,
       "pmVplsPrev1dEntry": pmVplsPrev1dEntry,
       "pmVplsPrev1dIndex": pmVplsPrev1dIndex,
       "pmVplsPrev1dId": pmVplsPrev1dId,
       "pmVplsPrev1dUnitType": pmVplsPrev1dUnitType,
       "pmVplsPrev1dIngressPkts": pmVplsPrev1dIngressPkts,
       "pmVplsPrev1dIngressBytes": pmVplsPrev1dIngressBytes,
       "pmVplsPrev1dEgressPkts": pmVplsPrev1dEgressPkts,
       "pmVplsPrev1dEgressBytes": pmVplsPrev1dEgressBytes,
       "pmVplsPrev1dStartTime": pmVplsPrev1dStartTime,
       "pmVplsPrev1dStopTime": pmVplsPrev1dStopTime,
       "pmTcaVplsIngressPkts15mTable": pmTcaVplsIngressPkts15mTable,
       "pmTcaVplsIngressPkts15mEntry": pmTcaVplsIngressPkts15mEntry,
       "pmTcaVplsIngressPkts15mIndex": pmTcaVplsIngressPkts15mIndex,
       "pmTcaVplsIngressPkts15mId": pmTcaVplsIngressPkts15mId,
       "pmTcaVplsIngressPkts15mUnitType": pmTcaVplsIngressPkts15mUnitType,
       "pmTcaVplsIngressPkts15mCnt": pmTcaVplsIngressPkts15mCnt,
       "pmTcaVplsIngressPkts15mThreshold": pmTcaVplsIngressPkts15mThreshold,
       "pmTcaVplsIngressPkts15mOccurTime": pmTcaVplsIngressPkts15mOccurTime,
       "pmTcaVplsIngressPkts1hTable": pmTcaVplsIngressPkts1hTable,
       "pmTcaVplsIngressPkts1hEntry": pmTcaVplsIngressPkts1hEntry,
       "pmTcaVplsIngressPkts1hIndex": pmTcaVplsIngressPkts1hIndex,
       "pmTcaVplsIngressPkts1hId": pmTcaVplsIngressPkts1hId,
       "pmTcaVplsIngressPkts1hUnitType": pmTcaVplsIngressPkts1hUnitType,
       "pmTcaVplsIngressPkts1hCnt": pmTcaVplsIngressPkts1hCnt,
       "pmTcaVplsIngressPkts1hThreshold": pmTcaVplsIngressPkts1hThreshold,
       "pmTcaVplsIngressPkts1hOccurTime": pmTcaVplsIngressPkts1hOccurTime,
       "pmTcaVplsIngressPkts1dTable": pmTcaVplsIngressPkts1dTable,
       "pmTcaVplsIngressPkts1dEntry": pmTcaVplsIngressPkts1dEntry,
       "pmTcaVplsIngressPkts1dIndex": pmTcaVplsIngressPkts1dIndex,
       "pmTcaVplsIngressPkts1dId": pmTcaVplsIngressPkts1dId,
       "pmTcaVplsIngressPkts1dUnitType": pmTcaVplsIngressPkts1dUnitType,
       "pmTcaVplsIngressPkts1dCnt": pmTcaVplsIngressPkts1dCnt,
       "pmTcaVplsIngressPkts1dThreshold": pmTcaVplsIngressPkts1dThreshold,
       "pmTcaVplsIngressPkts1dOccurTime": pmTcaVplsIngressPkts1dOccurTime,
       "pmTcaVplsIngressBytes15mTable": pmTcaVplsIngressBytes15mTable,
       "pmTcaVplsIngressBytes15mEntry": pmTcaVplsIngressBytes15mEntry,
       "pmTcaVplsIngressBytes15mIndex": pmTcaVplsIngressBytes15mIndex,
       "pmTcaVplsIngressBytes15mId": pmTcaVplsIngressBytes15mId,
       "pmTcaVplsIngressBytes15mUnitType": pmTcaVplsIngressBytes15mUnitType,
       "pmTcaVplsIngressBytes15mCnt": pmTcaVplsIngressBytes15mCnt,
       "pmTcaVplsIngressBytes15mThreshold": pmTcaVplsIngressBytes15mThreshold,
       "pmTcaVplsIngressBytes15mOccurTime": pmTcaVplsIngressBytes15mOccurTime,
       "pmTcaVplsIngressBytes1hTable": pmTcaVplsIngressBytes1hTable,
       "pmTcaVplsIngressBytes1hEntry": pmTcaVplsIngressBytes1hEntry,
       "pmTcaVplsIngressBytes1hIndex": pmTcaVplsIngressBytes1hIndex,
       "pmTcaVplsIngressBytes1hId": pmTcaVplsIngressBytes1hId,
       "pmTcaVplsIngressBytes1hUnitType": pmTcaVplsIngressBytes1hUnitType,
       "pmTcaVplsIngressBytes1hCnt": pmTcaVplsIngressBytes1hCnt,
       "pmTcaVplsIngressBytes1hThreshold": pmTcaVplsIngressBytes1hThreshold,
       "pmTcaVplsIngressBytes1hOccurTime": pmTcaVplsIngressBytes1hOccurTime,
       "pmTcaVplsIngressBytes1dTable": pmTcaVplsIngressBytes1dTable,
       "pmTcaVplsIngressBytes1dEntry": pmTcaVplsIngressBytes1dEntry,
       "pmTcaVplsIngressBytes1dIndex": pmTcaVplsIngressBytes1dIndex,
       "pmTcaVplsIngressBytes1dId": pmTcaVplsIngressBytes1dId,
       "pmTcaVplsIngressBytes1dUnitType": pmTcaVplsIngressBytes1dUnitType,
       "pmTcaVplsIngressBytes1dCnt": pmTcaVplsIngressBytes1dCnt,
       "pmTcaVplsIngressBytes1dThreshold": pmTcaVplsIngressBytes1dThreshold,
       "pmTcaVplsIngressBytes1dOccurTime": pmTcaVplsIngressBytes1dOccurTime,
       "pmTcaVplsEgressPkts15mTable": pmTcaVplsEgressPkts15mTable,
       "pmTcaVplsEgressPkts15mEntry": pmTcaVplsEgressPkts15mEntry,
       "pmTcaVplsEgressPkts15mIndex": pmTcaVplsEgressPkts15mIndex,
       "pmTcaVplsEgressPkts15mId": pmTcaVplsEgressPkts15mId,
       "pmTcaVplsEgressPkts15mUnitType": pmTcaVplsEgressPkts15mUnitType,
       "pmTcaVplsEgressPkts15mCnt": pmTcaVplsEgressPkts15mCnt,
       "pmTcaVplsEgressPkts15mThreshold": pmTcaVplsEgressPkts15mThreshold,
       "pmTcaVplsEgressPkts15mOccurTime": pmTcaVplsEgressPkts15mOccurTime,
       "pmTcaVplsEgressPkts1hTable": pmTcaVplsEgressPkts1hTable,
       "pmTcaVplsEgressPkts1hEntry": pmTcaVplsEgressPkts1hEntry,
       "pmTcaVplsEgressPkts1hIndex": pmTcaVplsEgressPkts1hIndex,
       "pmTcaVplsEgressPkts1hId": pmTcaVplsEgressPkts1hId,
       "pmTcaVplsEgressPkts1hUnitType": pmTcaVplsEgressPkts1hUnitType,
       "pmTcaVplsEgressPkts1hCnt": pmTcaVplsEgressPkts1hCnt,
       "pmTcaVplsEgressPkts1hThreshold": pmTcaVplsEgressPkts1hThreshold,
       "pmTcaVplsEgressPkts1hOccurTime": pmTcaVplsEgressPkts1hOccurTime,
       "pmTcaVplsEgressPkts1dTable": pmTcaVplsEgressPkts1dTable,
       "pmTcaVplsEgressPkts1dEntry": pmTcaVplsEgressPkts1dEntry,
       "pmTcaVplsEgressPkts1dIndex": pmTcaVplsEgressPkts1dIndex,
       "pmTcaVplsEgressPkts1dId": pmTcaVplsEgressPkts1dId,
       "pmTcaVplsEgressPkts1dUnitType": pmTcaVplsEgressPkts1dUnitType,
       "pmTcaVplsEgressPkts1dCnt": pmTcaVplsEgressPkts1dCnt,
       "pmTcaVplsEgressPkts1dThreshold": pmTcaVplsEgressPkts1dThreshold,
       "pmTcaVplsEgressPkts1dOccurTime": pmTcaVplsEgressPkts1dOccurTime,
       "pmTcaVplsEgressBytes15mTable": pmTcaVplsEgressBytes15mTable,
       "pmTcaVplsEgressBytes15mEntry": pmTcaVplsEgressBytes15mEntry,
       "pmTcaVplsEgressBytes15mIndex": pmTcaVplsEgressBytes15mIndex,
       "pmTcaVplsEgressBytes15mId": pmTcaVplsEgressBytes15mId,
       "pmTcaVplsEgressBytes15mUnitType": pmTcaVplsEgressBytes15mUnitType,
       "pmTcaVplsEgressBytes15mCnt": pmTcaVplsEgressBytes15mCnt,
       "pmTcaVplsEgressBytes15mThreshold": pmTcaVplsEgressBytes15mThreshold,
       "pmTcaVplsEgressBytes15mOccurTime": pmTcaVplsEgressBytes15mOccurTime,
       "pmTcaVplsEgressBytes1hTable": pmTcaVplsEgressBytes1hTable,
       "pmTcaVplsEgressBytes1hEntry": pmTcaVplsEgressBytes1hEntry,
       "pmTcaVplsEgressBytes1hIndex": pmTcaVplsEgressBytes1hIndex,
       "pmTcaVplsEgressBytes1hId": pmTcaVplsEgressBytes1hId,
       "pmTcaVplsEgressBytes1hUnitType": pmTcaVplsEgressBytes1hUnitType,
       "pmTcaVplsEgressBytes1hCnt": pmTcaVplsEgressBytes1hCnt,
       "pmTcaVplsEgressBytes1hThreshold": pmTcaVplsEgressBytes1hThreshold,
       "pmTcaVplsEgressBytes1hOccurTime": pmTcaVplsEgressBytes1hOccurTime,
       "pmTcaVplsEgressBytes1dTable": pmTcaVplsEgressBytes1dTable,
       "pmTcaVplsEgressBytes1dEntry": pmTcaVplsEgressBytes1dEntry,
       "pmTcaVplsEgressBytes1dIndex": pmTcaVplsEgressBytes1dIndex,
       "pmTcaVplsEgressBytes1dId": pmTcaVplsEgressBytes1dId,
       "pmTcaVplsEgressBytes1dUnitType": pmTcaVplsEgressBytes1dUnitType,
       "pmTcaVplsEgressBytes1dCnt": pmTcaVplsEgressBytes1dCnt,
       "pmTcaVplsEgressBytes1dThreshold": pmTcaVplsEgressBytes1dThreshold,
       "pmTcaVplsEgressBytes1dOccurTime": pmTcaVplsEgressBytes1dOccurTime,
       "alarm": alarm,
       "alarmOptionTable": alarmOptionTable,
       "alarmOptionEntry": alarmOptionEntry,
       "alarmOptionIndex": alarmOptionIndex,
       "alarmOptionSeverity": alarmOptionSeverity,
       "alarmOptionServiceAffect": alarmOptionServiceAffect,
       "alarmLogTable": alarmLogTable,
       "alarmLogEntry": alarmLogEntry,
       "alarmLogIndex": alarmLogIndex,
       "alarmLogType": alarmLogType,
       "alarmLogObject": alarmLogObject,
       "alarmLogSeverity": alarmLogSeverity,
       "alarmLogServiceAffect": alarmLogServiceAffect,
       "alarmLogAddInfo": alarmLogAddInfo,
       "alarmLogOccurTime": alarmLogOccurTime,
       "alarmHistoryLogTable": alarmHistoryLogTable,
       "alarmHistoryLogEntry": alarmHistoryLogEntry,
       "alarmHistoryLogIndex": alarmHistoryLogIndex,
       "alarmHistoryLogSeq": alarmHistoryLogSeq,
       "alarmHistoryLogType": alarmHistoryLogType,
       "alarmHistoryLogObject": alarmHistoryLogObject,
       "alarmHistoryLogSeverity": alarmHistoryLogSeverity,
       "alarmHistoryLogServiceAffect": alarmHistoryLogServiceAffect,
       "alarmHistoryLogAddInfo": alarmHistoryLogAddInfo,
       "alarmHistoryLogOccurTime": alarmHistoryLogOccurTime,
       "alarmHistoryLogReleaseTime": alarmHistoryLogReleaseTime,
       "alarmSwitchAlarm": alarmSwitchAlarm,
       "alarmSwitchTca": alarmSwitchTca,
       "alarmTrap": alarmTrap,
       "aAlarmEventNotify": aAlarmEventNotify,
       "rsvpTe": rsvpTe,
       "rsvpTeIfTable": rsvpTeIfTable,
       "rsvpTeIfEntry": rsvpTeIfEntry,
       "rsvpTeIfEnable": rsvpTeIfEnable,
       "rsvpTeIfHelloInterval": rsvpTeIfHelloInterval,
       "rsvpTeIfHelloReceipt": rsvpTeIfHelloReceipt,
       "rsvpTeIfHelloTimeout": rsvpTeIfHelloTimeout,
       "rsvpTeIfKeepMultiplier": rsvpTeIfKeepMultiplier,
       "rsvpTeIfRefreshTime": rsvpTeIfRefreshTime,
       "rsvpTeAckWaitTime": rsvpTeAckWaitTime,
       "rsvpTeMessageAck": rsvpTeMessageAck,
       "rsvpTeRefreshReduction": rsvpTeRefreshReduction,
       "rsvpTeGlobal": rsvpTeGlobal,
       "rsvpTeGlobalEnable": rsvpTeGlobalEnable,
       "rsvpTeGlobalExplicitNull": rsvpTeGlobalExplicitNull,
       "rsvpTeGlobalHelloInterval": rsvpTeGlobalHelloInterval,
       "rsvpTeGlobalHelloTimeout": rsvpTeGlobalHelloTimeout,
       "rsvpTeGlobalKeepMultiplier": rsvpTeGlobalKeepMultiplier,
       "rsvpTeGlobalNeighborTable": rsvpTeGlobalNeighborTable,
       "rsvpTeGlobalNeighborEntry": rsvpTeGlobalNeighborEntry,
       "rsvpTeGlobalNeighborAddr": rsvpTeGlobalNeighborAddr,
       "rsvpTeGlobalNeighborRowStatus": rsvpTeGlobalNeighborRowStatus,
       "rsvpTeGlobalNeighborUpStrmLSP": rsvpTeGlobalNeighborUpStrmLSP,
       "rsvpTeGlobalNeighborDnStrmLSP": rsvpTeGlobalNeighborDnStrmLSP,
       "rsvpTeGlobalNeighborRefReduc": rsvpTeGlobalNeighborRefReduc,
       "rsvpTeGlobalNeighborSrefreshIn": rsvpTeGlobalNeighborSrefreshIn,
       "rsvpTeGlobalNeighborSrefreshType": rsvpTeGlobalNeighborSrefreshType,
       "rsvpTeGlobalNeighborHelloStat": rsvpTeGlobalNeighborHelloStat,
       "rsvpTeGlobalLoopDetection": rsvpTeGlobalLoopDetection,
       "rsvpTeGlobalRefreshTime": rsvpTeGlobalRefreshTime,
       "rsvpTeGlobalReoptimizeTime": rsvpTeGlobalReoptimizeTime,
       "rsvpTeGlobalVersion": rsvpTeGlobalVersion,
       "rsvpTeGlobalProcessUpTime": rsvpTeGlobalProcessUpTime,
       "rsvpTeTrunkTable": rsvpTeTrunkTable,
       "rsvpTeTrunkEntry": rsvpTeTrunkEntry,
       "rsvpTeTrunkName": rsvpTeTrunkName,
       "rsvpTeTrunkRowStatus": rsvpTeTrunkRowStatus,
       "rsvpTeTrunkExtTunnelId": rsvpTeTrunkExtTunnelId,
       "rsvpTeTrunkPrimaryFilter": rsvpTeTrunkPrimaryFilter,
       "rsvpTeTrunkSecondaryFilter": rsvpTeTrunkSecondaryFilter,
       "rsvpTeTrunkSource": rsvpTeTrunkSource,
       "rsvpTeTrunkPrimaryHoldPriority": rsvpTeTrunkPrimaryHoldPriority,
       "rsvpTeTrunkSecondaryHoldPriority": rsvpTeTrunkSecondaryHoldPriority,
       "rsvpTeTrunkPrimaryHopLimit": rsvpTeTrunkPrimaryHopLimit,
       "rsvpTeTrunkSecondaryHopLimit": rsvpTeTrunkSecondaryHopLimit,
       "rsvpTeTrunkPrimaryCspf": rsvpTeTrunkPrimaryCspf,
       "rsvpTeTrunkSecondaryCspf": rsvpTeTrunkSecondaryCspf,
       "rsvpTeTrunkPrimaryRecord": rsvpTeTrunkPrimaryRecord,
       "rsvpTeTrunkSecondaryRecord": rsvpTeTrunkSecondaryRecord,
       "rsvpTeTrunkPrimaryPathName": rsvpTeTrunkPrimaryPathName,
       "rsvpTeTrunkSecondaryPathName": rsvpTeTrunkSecondaryPathName,
       "rsvpTeTrunkPrimaryRetryTimer": rsvpTeTrunkPrimaryRetryTimer,
       "rsvpTeTrunkSecondaryRetryTimer": rsvpTeTrunkSecondaryRetryTimer,
       "rsvpTeTrunkPrimarySetupPriority": rsvpTeTrunkPrimarySetupPriority,
       "rsvpTeTrunkSecondarySetupPriority": rsvpTeTrunkSecondarySetupPriority,
       "rsvpTeTrunkdestination": rsvpTeTrunkdestination,
       "rsvpTeTrunkLSPCount": rsvpTeTrunkLSPCount,
       "rsvpTeTrunkMapRouteTable": rsvpTeTrunkMapRouteTable,
       "rsvpTeTrunkMapRouteEntry": rsvpTeTrunkMapRouteEntry,
       "rsvpTeTrunkMapRouteIpAddr": rsvpTeTrunkMapRouteIpAddr,
       "rsvpTeTrunkMapRouteIpMaskLength": rsvpTeTrunkMapRouteIpMaskLength,
       "rsvpTeTrunkMapRouteRowStatus": rsvpTeTrunkMapRouteRowStatus,
       "rsvpTePathTable": rsvpTePathTable,
       "rsvpTePathEntry": rsvpTePathEntry,
       "rsvpTePathName": rsvpTePathName,
       "rsvpTePathRowStatus": rsvpTePathRowStatus,
       "rsvpTePathHopTable": rsvpTePathHopTable,
       "rsvpTePathHopEntry": rsvpTePathHopEntry,
       "rsvpTePathHopAddrID": rsvpTePathHopAddrID,
       "rsvpTePathHopAddrType": rsvpTePathHopAddrType,
       "rsvpTePathHopAddr": rsvpTePathHopAddr,
       "rsvpTePathHopRowStatus": rsvpTePathHopRowStatus,
       "rsvpTeSummary": rsvpTeSummary,
       "rsvpTeSummarySessionTatolCount": rsvpTeSummarySessionTatolCount,
       "rsvpTeSummarySessionUpCount": rsvpTeSummarySessionUpCount,
       "rsvpTeSummarySessionDownCount": rsvpTeSummarySessionDownCount,
       "rsvpTeSummarySessionTable": rsvpTeSummarySessionTable,
       "rsvpTeSummarySessionEntry": rsvpTeSummarySessionEntry,
       "rsvpTeSummarySessionLSPId": rsvpTeSummarySessionLSPId,
       "rsvpTeSummarySessionSource": rsvpTeSummarySessionSource,
       "rsvpTeSummarySessionDestination": rsvpTeSummarySessionDestination,
       "rsvpTeSummarySessionTunnelId": rsvpTeSummarySessionTunnelId,
       "rsvpTeSummarySessionExtTunnelId": rsvpTeSummarySessionExtTunnelId,
       "rsvpTeSummarySessionTrunkName": rsvpTeSummarySessionTrunkName,
       "rsvpTeSummarySessionState": rsvpTeSummarySessionState,
       "rsvpTeSummarySessionIsPrimary": rsvpTeSummarySessionIsPrimary,
       "rsvpTeSummarySessionReserve": rsvpTeSummarySessionReserve,
       "rsvpTeSummarySessionRefCount": rsvpTeSummarySessionRefCount,
       "rsvpTeSummarySessionLabelIn": rsvpTeSummarySessionLabelIn,
       "rsvpTeSummarySessionLabelOut": rsvpTeSummarySessionLabelOut,
       "rsvpTeSummarySessionType": rsvpTeSummarySessionType,
       "rsvpTeSummarySessionFSMState": rsvpTeSummarySessionFSMState,
       "rsvpTeSummarySessionSetupPriority": rsvpTeSummarySessionSetupPriority,
       "rsvpTeSummarySessionHoldPriority": rsvpTeSummarySessionHoldPriority,
       "rsvpTeSummarySessionCspfUsage": rsvpTeSummarySessionCspfUsage,
       "rsvpTeSummarySessionLSPMetric": rsvpTeSummarySessionLSPMetric,
       "rsvpTeSummarySessionLSPProtection": rsvpTeSummarySessionLSPProtection,
       "rsvpTeSummarySessionUpStreamAddr": rsvpTeSummarySessionUpStreamAddr,
       "rsvpTeSummarySessionUpStreamIfIndex": rsvpTeSummarySessionUpStreamIfIndex,
       "rsvpTeSummarySessionDownStreamAddr": rsvpTeSummarySessionDownStreamAddr,
       "rsvpTeSummarySessionDownStreamIfIndex": rsvpTeSummarySessionDownStreamIfIndex,
       "rsvpTeSummarySessionPathRefreshSec": rsvpTeSummarySessionPathRefreshSec,
       "rsvpTeSummarySessionPathRefreshDue": rsvpTeSummarySessionPathRefreshDue,
       "rsvpTeSummarySessionPathRREnable": rsvpTeSummarySessionPathRREnable,
       "rsvpTeSummarySessionLifeTime": rsvpTeSummarySessionLifeTime,
       "rsvpTeSummarySessionDueTime": rsvpTeSummarySessionDueTime,
       "rsvpTeSummarySessionStyle": rsvpTeSummarySessionStyle,
       "rsvpTeSummarySessionTrafficType": rsvpTeSummarySessionTrafficType,
       "rsvpTeSummarySessionMTU": rsvpTeSummarySessionMTU,
       "rsvpTeSummarySessionLastErrorCode": rsvpTeSummarySessionLastErrorCode,
       "rsvpTeSummarySessionLastErrorValue": rsvpTeSummarySessionLastErrorValue,
       "rsvpTeSummarySessionLastErrorNode": rsvpTeSummarySessionLastErrorNode,
       "rsvpTeSummarySessionTrunkType": rsvpTeSummarySessionTrunkType,
       "rsvpTeSummarySessionExplicitRouteTable": rsvpTeSummarySessionExplicitRouteTable,
       "rsvpTeSummarySessionExplicitRouteEntry": rsvpTeSummarySessionExplicitRouteEntry,
       "rsvpTeSummarySessionExplicitRouteAddrId": rsvpTeSummarySessionExplicitRouteAddrId,
       "rsvpTeSummarySessionExplicitRouteAddr": rsvpTeSummarySessionExplicitRouteAddr,
       "rsvpTeSummarySessionExplicitRouteMaskLen": rsvpTeSummarySessionExplicitRouteMaskLen,
       "rsvpTeSummarySessionExplicitRouteType": rsvpTeSummarySessionExplicitRouteType,
       "rsvpTeSummarySessionRecvRouteTable": rsvpTeSummarySessionRecvRouteTable,
       "rsvpTeSummarySessionRecvRouteEntry": rsvpTeSummarySessionRecvRouteEntry,
       "rsvpTeSummarySessionRecvRouteAddrId": rsvpTeSummarySessionRecvRouteAddrId,
       "rsvpTeSummarySessionRecvRouteAddr": rsvpTeSummarySessionRecvRouteAddr,
       "rsvpTeSummarySessionRecvRouteMaskLen": rsvpTeSummarySessionRecvRouteMaskLen,
       "rsvpTeSummarySessionRecvRouteType": rsvpTeSummarySessionRecvRouteType,
       "rsvpTeSummarySessionRecordRouteTable": rsvpTeSummarySessionRecordRouteTable,
       "rsvpTeSummarySessionRecordRouteEntry": rsvpTeSummarySessionRecordRouteEntry,
       "rsvpTeSummarySessionRecordRouteAddrId": rsvpTeSummarySessionRecordRouteAddrId,
       "rsvpTeSummarySessionRecordRouteAddr": rsvpTeSummarySessionRecordRouteAddr,
       "rsvpTeSummaryStatistics": rsvpTeSummaryStatistics,
       "rsvpTeSummaryPathSent": rsvpTeSummaryPathSent,
       "rsvpTeSummaryPathRecv": rsvpTeSummaryPathRecv,
       "rsvpTeSummaryPathErrSent": rsvpTeSummaryPathErrSent,
       "rsvpTeSummaryPathErrRecv": rsvpTeSummaryPathErrRecv,
       "rsvpTeSummaryPathTearSent": rsvpTeSummaryPathTearSent,
       "rsvpTeSummaryPathTearRecv": rsvpTeSummaryPathTearRecv,
       "rsvpTeSummaryResvFFSent": rsvpTeSummaryResvFFSent,
       "rsvpTeSummaryResvFFRecv": rsvpTeSummaryResvFFRecv,
       "rsvpTeSummaryResvWFSent": rsvpTeSummaryResvWFSent,
       "rsvpTeSummaryResvWFRecv": rsvpTeSummaryResvWFRecv,
       "rsvpTeSummaryResvSESent": rsvpTeSummaryResvSESent,
       "rsvpTeSummaryResvSERecv": rsvpTeSummaryResvSERecv,
       "rsvpTeSummaryResvErrSent": rsvpTeSummaryResvErrSent,
       "rsvpTeSummaryResvErrRecv": rsvpTeSummaryResvErrRecv,
       "rsvpTeSummaryResvTearSent": rsvpTeSummaryResvTearSent,
       "rsvpTeSummaryResvTearRecv": rsvpTeSummaryResvTearRecv,
       "rsvpTeSummaryResvConfSent": rsvpTeSummaryResvConfSent,
       "rsvpTeSummaryResvConfRecv": rsvpTeSummaryResvConfRecv,
       "rsvpTeSummaryHelloSent": rsvpTeSummaryHelloSent,
       "rsvpTeSummaryHelloRecv": rsvpTeSummaryHelloRecv,
       "rsvpTeSummaryBundleSent": rsvpTeSummaryBundleSent,
       "rsvpTeSummaryBundleRecv": rsvpTeSummaryBundleRecv,
       "rsvpTeSummaryAckSent": rsvpTeSummaryAckSent,
       "rsvpTeSummaryAckRecv": rsvpTeSummaryAckRecv,
       "rsvpTeSummarySrefreshSent": rsvpTeSummarySrefreshSent,
       "rsvpTeSummarySrefreshRecv": rsvpTeSummarySrefreshRecv,
       "g8031": g8031,
       "g8031EpsGroupTable": g8031EpsGroupTable,
       "g8031EpsGroupEntry": g8031EpsGroupEntry,
       "g8031EpsGroupId": g8031EpsGroupId,
       "g8031EpsGroupWorkingIfindex": g8031EpsGroupWorkingIfindex,
       "g8031EpsGroupProtectionIfindex": g8031EpsGroupProtectionIfindex,
       "g8031EpsGroupRowStatus": g8031EpsGroupRowStatus,
       "g8031EpsGroupWTR": g8031EpsGroupWTR,
       "g8031EpsGroupHoldOff": g8031EpsGroupHoldOff,
       "g8031EpsGroupMode": g8031EpsGroupMode,
       "g8031EpsGroupDomain": g8031EpsGroupDomain,
       "g8031EpsGroupWorkingService": g8031EpsGroupWorkingService,
       "g8031EpsGroupProtectionService": g8031EpsGroupProtectionService,
       "g8031EpsGroupCurrentState": g8031EpsGroupCurrentState,
       "g8031EpsGroupLastState": g8031EpsGroupLastState,
       "g8031EpsGroupLastEvent": g8031EpsGroupLastEvent,
       "g8031EpsGroupFarEndState": g8031EpsGroupFarEndState,
       "g8031EpsGroupRequestSignal": g8031EpsGroupRequestSignal,
       "g8031EpsGroupBridgeSignal": g8031EpsGroupBridgeSignal,
       "g8031EpsGroupAPSVid": g8031EpsGroupAPSVid,
       "g8031EpsGroupDFOPState": g8031EpsGroupDFOPState,
       "g8031EpsGroupInstanceTable": g8031EpsGroupInstanceTable,
       "g8031EpsGroupInstanceEntry": g8031EpsGroupInstanceEntry,
       "g8031EpsGroupInstanceId": g8031EpsGroupInstanceId,
       "g8031EpsGroupInstanceRowStatus": g8031EpsGroupInstanceRowStatus,
       "g8032": g8032,
       "g8032RingTable": g8032RingTable,
       "g8032RingEntry": g8032RingEntry,
       "g8032RingId": g8032RingId,
       "g8032RingMajorRingId": g8032RingMajorRingId,
       "g8032RingEastIfindex": g8032RingEastIfindex,
       "g8032RingWestIfindex": g8032RingWestIfindex,
       "g8032RingRowStatus": g8032RingRowStatus,
       "g8032RingDomain": g8032RingDomain,
       "g8032RingService": g8032RingService,
       "g8032RingControlVlan": g8032RingControlVlan,
       "g8032RingWTR": g8032RingWTR,
       "g8032RingHoldOff": g8032RingHoldOff,
       "g8032RingGuard": g8032RingGuard,
       "g8032RingRole": g8032RingRole,
       "g8032RingRpl": g8032RingRpl,
       "g8032RingCurrentStatus": g8032RingCurrentStatus,
       "g8032RingEastStatus": g8032RingEastStatus,
       "g8032RingWestStatus": g8032RingWestStatus,
       "g8032RingCurrentEvent": g8032RingCurrentEvent,
       "g8032RingProtectInstance": g8032RingProtectInstance,
       "g8032RingProtectTrigger": g8032RingProtectTrigger,
       "g8032RingFlushRRPPState": g8032RingFlushRRPPState,
       "g8032RingFlushRRPPVlan": g8032RingFlushRRPPVlan,
       "g8032RingFlushRRPPCount": g8032RingFlushRRPPCount,
       "g8032RingInstanceTable": g8032RingInstanceTable,
       "g8032RingInstanceEntry": g8032RingInstanceEntry,
       "g8032RingInstanceId": g8032RingInstanceId,
       "g8032RingInstanceRowStatus": g8032RingInstanceRowStatus,
       "voiceVlan": voiceVlan,
       "voiceVlanEnableVlan": voiceVlanEnableVlan,
       "voiceVlanEnableSecurity": voiceVlanEnableSecurity,
       "voiceVlanCOS": voiceVlanCOS,
       "voiceVlanEnableInterfaceTable": voiceVlanEnableInterfaceTable,
       "voiceVlanEnableInterfaceEntry": voiceVlanEnableInterfaceEntry,
       "voiceVlanEnableInterfaceStatus": voiceVlanEnableInterfaceStatus,
       "voiceVlanOuiEntryTable": voiceVlanOuiEntryTable,
       "voiceVlanOuiEntryEntry": voiceVlanOuiEntryEntry,
       "voiceVlanOuiEntryId": voiceVlanOuiEntryId,
       "voiceVlanOuiEntryMac": voiceVlanOuiEntryMac,
       "voiceVlanOuiEntryMask": voiceVlanOuiEntryMask,
       "voiceVlanOuiEntryDescription": voiceVlanOuiEntryDescription,
       "voiceVlanOuiEntryRowstatus": voiceVlanOuiEntryRowstatus,
       "ivi": ivi,
       "iviRouteTable": iviRouteTable,
       "iviRouteEntry": iviRouteEntry,
       "iviRouteIndex": iviRouteIndex,
       "iviRouteIpv6address": iviRouteIpv6address,
       "iviRouteIpv6addressMask": iviRouteIpv6addressMask,
       "iviRouteIpv4address": iviRouteIpv4address,
       "iviRouteIpv4addressMask": iviRouteIpv4addressMask,
       "iviRouteRowStatus": iviRouteRowStatus,
       "iviInterfaceTable": iviInterfaceTable,
       "iviInterfaceEntry": iviInterfaceEntry,
       "iviInterfaceStatus": iviInterfaceStatus,
       "product": product,
       "e3008TS": e3008TS,
       "e30016TX": e30016TX,
       "e3508T12X": e3508T12X,
       "e30024TS": e30024TS,
       "e30024ST": e30024ST,
       "e30048TS": e30048TS,
       "b30048T": b30048T,
       "e33048T": e33048T,
       "e33048SE": e33048SE,
       "e33048S": e33048S,
       "g24eu": g24eu,
       "e35048T4X": e35048T4X,
       "e58024Q": e58024Q,
       "e58048X2Q4Z": e58048X2Q4Z,
       "e58048X6Q": e58048X6Q,
       "e58032X2Q": e58032X2Q,
       "e58032X": e58032X,
       "e58020Q4Z": e58020Q4Z,
       "e602": e602,
       "e606": e606,
       "e614": e614,
       "e802": e802,
       "e806": e806,
       "e814": e814,
       "l2protocol": l2protocol,
       "l2ProtocolTunnelEnable": l2ProtocolTunnelEnable,
       "l2ProtocolTunnelDestMac": l2ProtocolTunnelDestMac,
       "l2ProtocolTunnelCOS": l2ProtocolTunnelCOS,
       "l2ProtocolMacTable": l2ProtocolMacTable,
       "l2ProtocolMacEntry": l2ProtocolMacEntry,
       "l2ProtocolMacIndex": l2ProtocolMacIndex,
       "l2ProtocolMac": l2ProtocolMac,
       "l2ProtocolMacMask": l2ProtocolMacMask,
       "l2ProtocolMacRowstatus": l2ProtocolMacRowstatus,
       "l2ProtocolTunnelMacTable": l2ProtocolTunnelMacTable,
       "l2ProtocolTunnelMacEntry": l2ProtocolTunnelMacEntry,
       "l2ProtocolTunnelMacType": l2ProtocolTunnelMacType,
       "l2ProtocolTunnelMacEvcName": l2ProtocolTunnelMacEvcName,
       "l2ProtocolTunnelMacRowstatus": l2ProtocolTunnelMacRowstatus,
       "l2ProtocolTunnelDot1xTable": l2ProtocolTunnelDot1xTable,
       "l2ProtocolTunnelDot1xEntry": l2ProtocolTunnelDot1xEntry,
       "l2ProtocolTunnelDot1xType": l2ProtocolTunnelDot1xType,
       "l2ProtocolTunnelDot1xEvcName": l2ProtocolTunnelDot1xEvcName,
       "l2ProtocolTunnelDot1xRowstatus": l2ProtocolTunnelDot1xRowstatus,
       "l2ProtocolTunnelSlowProtoTable": l2ProtocolTunnelSlowProtoTable,
       "l2ProtocolTunnelSlowProtoEntry": l2ProtocolTunnelSlowProtoEntry,
       "l2ProtocolTunnelSlowProtoType": l2ProtocolTunnelSlowProtoType,
       "l2ProtocolTunnelSlowProtoEvcName": l2ProtocolTunnelSlowProtoEvcName,
       "l2ProtocolTunnelSlowProtoRowstatus": l2ProtocolTunnelSlowProtoRowstatus,
       "l2ProtocolTunnelStpTable": l2ProtocolTunnelStpTable,
       "l2ProtocolTunnelStpEntry": l2ProtocolTunnelStpEntry,
       "l2ProtocolTunnelStpType": l2ProtocolTunnelStpType,
       "l2ProtocolTunnelStpEvcName": l2ProtocolTunnelStpEvcName,
       "l2ProtocolTunnelStpRowstatus": l2ProtocolTunnelStpRowstatus,
       "l2ProtocolTunnelCfmTable": l2ProtocolTunnelCfmTable,
       "l2ProtocolTunnelCfmEntry": l2ProtocolTunnelCfmEntry,
       "l2ProtocolTunnelCfmType": l2ProtocolTunnelCfmType,
       "l2ProtocolTunnelCfmEvcName": l2ProtocolTunnelCfmEvcName,
       "l2ProtocolTunnelCfmRowstatus": l2ProtocolTunnelCfmRowstatus,
       "l2ProtocolTunnelUplinkTable": l2ProtocolTunnelUplinkTable,
       "l2ProtocolTunnelUplinkEntry": l2ProtocolTunnelUplinkEntry,
       "l2ProtocolTunnelUplinkEnable": l2ProtocolTunnelUplinkEnable,
       "l2ProtocolTunnelUplinkRowstatus": l2ProtocolTunnelUplinkRowstatus,
       "l2ProtocolFullMacTable": l2ProtocolFullMacTable,
       "l2ProtocolFullMacEntry": l2ProtocolFullMacEntry,
       "l2ProtocolFullMacIndex": l2ProtocolFullMacIndex,
       "l2ProtocolFullMac": l2ProtocolFullMac,
       "l2ProtocolFullMacRowstatus": l2ProtocolFullMacRowstatus,
       "l2ProtocolTunnelFullMacTable": l2ProtocolTunnelFullMacTable,
       "l2ProtocolTunnelFullMacEntry": l2ProtocolTunnelFullMacEntry,
       "l2ProtocolTunnelFullMacType": l2ProtocolTunnelFullMacType,
       "l2ProtocolTunnelFullMacEvcName": l2ProtocolTunnelFullMacEvcName,
       "l2ProtocolTunnelFullMacRowstatus": l2ProtocolTunnelFullMacRowstatus,
       "loopbackDetect": loopbackDetect,
       "loopbackDetectIfTable": loopbackDetectIfTable,
       "loopbackDetectIfEntry": loopbackDetectIfEntry,
       "loopbackDetectIfIndex": loopbackDetectIfIndex,
       "loopbackDetectEnable": loopbackDetectEnable,
       "loopbackDetectAction": loopbackDetectAction,
       "loopbackDetectStatus": loopbackDetectStatus,
       "loopbackDetectPktInterval": loopbackDetectPktInterval,
       "loopbackDetectTrap": loopbackDetectTrap,
       "loopbackDetectStatusNotify": loopbackDetectStatusNotify,
       "ipsla": ipsla,
       "ipslaCtrlAdminTable": ipslaCtrlAdminTable,
       "ipslaCtrlAdminEntry": ipslaCtrlAdminEntry,
       "ipslaCtrlAdminIndex": ipslaCtrlAdminIndex,
       "ipslaCtrlAdminDesc": ipslaCtrlAdminDesc,
       "ipslaCtrlAdminThreshold": ipslaCtrlAdminThreshold,
       "ipslaCtrlAdminFrequency": ipslaCtrlAdminFrequency,
       "ipslaCtrlAdminTimeout": ipslaCtrlAdminTimeout,
       "ipslaCtrlAdminInterval": ipslaCtrlAdminInterval,
       "ipslaCtrlAdminPktsPerTest": ipslaCtrlAdminPktsPerTest,
       "ipslaCtrlAdminTargetAddress": ipslaCtrlAdminTargetAddress,
       "ipslaCtrlAdminSourceAddress": ipslaCtrlAdminSourceAddress,
       "ipslaCtrlAdminSourceInterface": ipslaCtrlAdminSourceInterface,
       "ipslaCtrlAdminStatus": ipslaCtrlAdminStatus,
       "ipslaEchoAdminTable": ipslaEchoAdminTable,
       "ipslaEchoAdminEntry": ipslaEchoAdminEntry,
       "ipslaEchoAdminDataSize": ipslaEchoAdminDataSize,
       "ipslaEchoAdminDataPattern": ipslaEchoAdminDataPattern,
       "ipslaEchoAdminTOS": ipslaEchoAdminTOS,
       "ipslaEchoAdminTTL": ipslaEchoAdminTTL,
       "ipslaEchoAdminFailPercent": ipslaEchoAdminFailPercent,
       "ipslaEchoAdminVrfName": ipslaEchoAdminVrfName,
       "ipslaEchoAdminTestStatsNum": ipslaEchoAdminTestStatsNum,
       "ipslaEchoAdminPktStatsNum": ipslaEchoAdminPktStatsNum,
       "ipslaScheduleAdminTable": ipslaScheduleAdminTable,
       "ipslaScheduleAdminEntry": ipslaScheduleAdminEntry,
       "ipslaScheduleAdminStatus": ipslaScheduleAdminStatus,
       "ipslaTestStatsTable": ipslaTestStatsTable,
       "ipslaTestStatsEntry": ipslaTestStatsEntry,
       "ipslaTestEntryId": ipslaTestEntryId,
       "ipslaTestStatsIndex": ipslaTestStatsIndex,
       "ipslaTestTransmitted": ipslaTestTransmitted,
       "ipslaTestReceived": ipslaTestReceived,
       "ipslaTestOverthreshold": ipslaTestOverthreshold,
       "ipslaTestRttMax": ipslaTestRttMax,
       "ipslaTestRttMin": ipslaTestRttMin,
       "ipslaTestRttAvg": ipslaTestRttAvg,
       "ipslaTestLastTransmitted": ipslaTestLastTransmitted,
       "ipslaTestPktLossRatio": ipslaTestPktLossRatio,
       "ipslaTestResult": ipslaTestResult,
       "ipslaPktStatsTable": ipslaPktStatsTable,
       "ipslaPktStatsEntry": ipslaPktStatsEntry,
       "ipslaPktEntryId": ipslaPktEntryId,
       "ipslaPktStatsIndex": ipslaPktStatsIndex,
       "ipslaPktTestId": ipslaPktTestId,
       "ipslaPktIndex": ipslaPktIndex,
       "ipslaPktRtt": ipslaPktRtt,
       "ipslaPktResult": ipslaPktResult,
       "ipslaPktSendTime": ipslaPktSendTime,
       "ipslaTrapEnable": ipslaTrapEnable,
       "ipslaTrap": ipslaTrap,
       "ipslaTestFailure": ipslaTestFailure,
       "ipslaPktTimeout": ipslaPktTimeout,
       "ipslaTestSuccess": ipslaTestSuccess,
       "ipslaPktOverthreshold": ipslaPktOverthreshold}
)
